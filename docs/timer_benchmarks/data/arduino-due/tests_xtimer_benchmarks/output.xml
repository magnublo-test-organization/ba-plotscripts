<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 15:51:35.700" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:39.891" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:39.900" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:42.079" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:39.890" endtime="20201030 15:51:42.081"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:45.086" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:51:42.083" endtime="20201030 15:51:45.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.888" endtime="20201030 15:51:45.089"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:45.093" endtime="20201030 15:51:45.333"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.090" endtime="20201030 15:51:45.333"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:45.347" endtime="20201030 15:51:48.367"></status>
</kw>
<msg timestamp="20201030 15:51:48.368" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:45.345" endtime="20201030 15:51:48.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.374" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.371" endtime="20201030 15:51:48.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:48.381" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:48.376" endtime="20201030 15:51:48.381"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.342" endtime="20201030 15:51:48.383"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:45.340" endtime="20201030 15:51:48.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.339" endtime="20201030 15:51:48.385"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:48.394" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:48.393" endtime="20201030 15:51:48.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.387" endtime="20201030 15:51:48.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.338" endtime="20201030 15:51:48.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.337" endtime="20201030 15:51:48.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.398" endtime="20201030 15:51:48.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.336" endtime="20201030 15:51:48.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.404" endtime="20201030 15:51:48.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:45.334" endtime="20201030 15:51:48.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:39.887" endtime="20201030 15:51:48.409"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:48.422" endtime="20201030 15:51:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.419" endtime="20201030 15:51:48.444"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:48.473" endtime="20201030 15:51:51.496"></status>
</kw>
<msg timestamp="20201030 15:51:51.497" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:48.470" endtime="20201030 15:51:51.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.500" endtime="20201030 15:51:51.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.509" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:51.505" endtime="20201030 15:51:51.510"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:48.464" endtime="20201030 15:51:51.511"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:48.459" endtime="20201030 15:51:51.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.456" endtime="20201030 15:51:51.513"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:51.521" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:51.519" endtime="20201030 15:51:51.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.515" endtime="20201030 15:51:51.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.454" endtime="20201030 15:51:51.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.452" endtime="20201030 15:51:51.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.524" endtime="20201030 15:51:51.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.449" endtime="20201030 15:51:51.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.446" endtime="20201030 15:51:51.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:48.416" endtime="20201030 15:51:51.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.546" endtime="20201030 15:51:51.560"></status>
</kw>
<msg timestamp="20201030 15:51:51.561" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.541" endtime="20201030 15:51:51.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.563" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:51.562" endtime="20201030 15:51:51.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:51.564" endtime="20201030 15:51:51.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.535" endtime="20201030 15:51:51.567"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.532" endtime="20201030 15:51:51.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.571" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 15:51:51.570" endtime="20201030 15:51:51.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.573" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 15:51:51.572" endtime="20201030 15:51:51.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.568" endtime="20201030 15:51:51.574"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:48.410" endtime="20201030 15:51:51.574" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:35.838" endtime="20201030 15:51:51.647"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:51:51.702" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:51:51.710" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:51:53.079" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:51:51.700" endtime="20201030 15:51:53.080"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:51:56.085" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:51:53.082" endtime="20201030 15:51:56.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.699" endtime="20201030 15:51:56.087"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:56.089" endtime="20201030 15:51:56.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.087" endtime="20201030 15:51:56.313"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:56.325" endtime="20201030 15:51:59.346"></status>
</kw>
<msg timestamp="20201030 15:51:59.347" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:56.323" endtime="20201030 15:51:59.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.350" endtime="20201030 15:51:59.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:51:59.359" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:51:59.355" endtime="20201030 15:51:59.359"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:56.321" endtime="20201030 15:51:59.361"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:56.319" endtime="20201030 15:51:59.362"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.318" endtime="20201030 15:51:59.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:51:59.370" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:51:59.369" endtime="20201030 15:51:59.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.364" endtime="20201030 15:51:59.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.317" endtime="20201030 15:51:59.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.316" endtime="20201030 15:51:59.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.374" endtime="20201030 15:51:59.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.315" endtime="20201030 15:51:59.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.379" endtime="20201030 15:51:59.383"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:56.313" endtime="20201030 15:51:59.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:51.698" endtime="20201030 15:51:59.384"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:51:59.398" endtime="20201030 15:51:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.393" endtime="20201030 15:51:59.421"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:51:59.447" endtime="20201030 15:52:02.470"></status>
</kw>
<msg timestamp="20201030 15:52:02.471" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:51:59.444" endtime="20201030 15:52:02.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.477" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.474" endtime="20201030 15:52:02.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.484" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:02.480" endtime="20201030 15:52:02.484"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.439" endtime="20201030 15:52:02.486"></status>
</kw>
<status status="FAIL" starttime="20201030 15:51:59.434" endtime="20201030 15:52:02.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.431" endtime="20201030 15:52:02.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:02.495" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:02.494" endtime="20201030 15:52:02.496"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.489" endtime="20201030 15:52:02.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.429" endtime="20201030 15:52:02.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.428" endtime="20201030 15:52:02.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.499" endtime="20201030 15:52:02.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.425" endtime="20201030 15:52:02.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.422" endtime="20201030 15:52:02.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:51:59.390" endtime="20201030 15:52:02.504"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.522" endtime="20201030 15:52:02.536"></status>
</kw>
<msg timestamp="20201030 15:52:02.537" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.519" endtime="20201030 15:52:02.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.538" endtime="20201030 15:52:02.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.540" endtime="20201030 15:52:02.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.513" endtime="20201030 15:52:02.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.510" endtime="20201030 15:52:02.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.552" endtime="20201030 15:52:02.831"></status>
</kw>
<msg timestamp="20201030 15:52:02.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116018903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.550" endtime="20201030 15:52:02.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.116018903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.116028292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.834" endtime="20201030 15:52:02.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.839" endtime="20201030 15:52:02.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.546" endtime="20201030 15:52:02.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.544" endtime="20201030 15:52:02.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:02.845" level="INFO">${RESULT} = [{'diff': 9.389000000137315e-06}, {'diff': 9.180000000164057e-06}, {'diff': 1.0875000000076795e-05}, {'diff': 7.1390000000448595e-06}, {'diff': 6.056000000143058e-06}, {'diff': 7.3050000000129955e-06}...</msg>
<status status="PASS" starttime="20201030 15:52:02.843" endtime="20201030 15:52:02.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:02.849" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.389000000137315e-06, 9.180000000164057e-06, 1.0875000000076795e-05, 7.1390000000448595e-06, 6.056000000143058e-06, 7.3050000000129955e-06, 5.40299999984839e-06, 1.1430000000256513e-05, 8.3...</msg>
<status status="PASS" starttime="20201030 15:52:02.846" endtime="20201030 15:52:02.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.853" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:02.852" endtime="20201030 15:52:02.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.856" level="INFO">VALUE: [9.389000000137315e-06, 9.180000000164057e-06, 1.0875000000076795e-05, 7.1390000000448595e-06, 6.056000000143058e-06, 7.3050000000129955e-06, 5.40299999984839e-06, 1.1430000000256513e-05, 8.37500000017144e-06, 9.332999999944747e-06, 7.472000000063872e-06, 1.0416999999929288e-05, 1.0528000000231685e-05, 8.02700000024359e-06, 6.834000000122131e-06, 7.708000000050674e-06, 8.542000000222316e-06, 7.93099999985003e-06, 8.264000000313132e-06, 5.415999999591747e-06, 9.194999999628806e-06, 8.388999999997537e-06, 1.0875000000076795e-05, 9.889000000207204e-06, 8.846999999700955e-06]</msg>
<status status="PASS" starttime="20201030 15:52:02.855" endtime="20201030 15:52:02.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.850" endtime="20201030 15:52:02.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:02.860" endtime="20201030 15:52:02.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.859" endtime="20201030 15:52:02.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.858" endtime="20201030 15:52:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.507" endtime="20201030 15:52:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.506" endtime="20201030 15:52:02.881"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.890" endtime="20201030 15:52:02.901"></status>
</kw>
<msg timestamp="20201030 15:52:02.901" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.888" endtime="20201030 15:52:02.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:02.904" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:02.903" endtime="20201030 15:52:02.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.905" endtime="20201030 15:52:02.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.885" endtime="20201030 15:52:02.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.883" endtime="20201030 15:52:02.908"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:02.914" endtime="20201030 15:52:03.180"></status>
</kw>
<msg timestamp="20201030 15:52:03.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018995681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019004778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:02.913" endtime="20201030 15:52:03.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018995681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019004778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.183" endtime="20201030 15:52:03.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.189" endtime="20201030 15:52:03.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.910" endtime="20201030 15:52:03.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.908" endtime="20201030 15:52:03.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.194" level="INFO">${RESULT} = [{'diff': 9.096999999999578e-06}, {'diff': 8.986999999998496e-06}, {'diff': 9.333000000000258e-06}, {'diff': 7.486000000000992e-06}, {'diff': 7.889000000000507e-06}, {'diff': 9.264000000001882e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:03.192" endtime="20201030 15:52:03.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:03.198" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.096999999999578e-06, 8.986999999998496e-06, 9.333000000000258e-06, 7.486000000000992e-06, 7.889000000000507e-06, 9.264000000001882e-06, 1.0458000000001383e-05, 8.514000000001132e-06, 5.152...</msg>
<status status="PASS" starttime="20201030 15:52:03.195" endtime="20201030 15:52:03.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.203" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:03.201" endtime="20201030 15:52:03.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.206" level="INFO">VALUE: [9.096999999999578e-06, 8.986999999998496e-06, 9.333000000000258e-06, 7.486000000000992e-06, 7.889000000000507e-06, 9.264000000001882e-06, 1.0458000000001383e-05, 8.514000000001132e-06, 5.152999999997326e-06, 1.1458999999998387e-05, 8.986000000002492e-06, 6.763999999999382e-06, 9.097999999999051e-06, 9.652999999998357e-06, 1.0458000000001383e-05, 9.097999999999051e-06, 8.014000000000632e-06, 7.945000000002256e-06, 1.1166999999999427e-05, 6.597000000000547e-06, 1.0930000000002743e-05, 8.806000000000092e-06, 8.028000000000202e-06, 7.179999999998993e-06, 1.0055000000001868e-05]</msg>
<status status="PASS" starttime="20201030 15:52:03.204" endtime="20201030 15:52:03.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.199" endtime="20201030 15:52:03.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.212" endtime="20201030 15:52:03.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.210" endtime="20201030 15:52:03.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.209" endtime="20201030 15:52:03.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.882" endtime="20201030 15:52:03.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.882" endtime="20201030 15:52:03.234"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.242" endtime="20201030 15:52:03.254"></status>
</kw>
<msg timestamp="20201030 15:52:03.254" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.240" endtime="20201030 15:52:03.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.257" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.255" endtime="20201030 15:52:03.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.258" endtime="20201030 15:52:03.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.238" endtime="20201030 15:52:03.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.236" endtime="20201030 15:52:03.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.267" endtime="20201030 15:52:03.534"></status>
</kw>
<msg timestamp="20201030 15:52:03.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.266" endtime="20201030 15:52:03.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018837833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018845292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.537" endtime="20201030 15:52:03.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.542" endtime="20201030 15:52:03.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.263" endtime="20201030 15:52:03.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.261" endtime="20201030 15:52:03.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.548" level="INFO">${RESULT} = [{'diff': 7.459000000001326e-06}, {'diff': 1.0750000000000343e-05}, {'diff': 8.263999999997412e-06}, {'diff': 9.167000000000897e-06}, {'diff': 9.208000000000133e-06}, {'diff': 8.374999999997967e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:03.546" endtime="20201030 15:52:03.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:03.552" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.459000000001326e-06, 1.0750000000000343e-05, 8.263999999997412e-06, 9.167000000000897e-06, 9.208000000000133e-06, 8.374999999997967e-06, 8.194999999999036e-06, 8.721999999999203e-06, 8.207...</msg>
<status status="PASS" starttime="20201030 15:52:03.549" endtime="20201030 15:52:03.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.556" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:03.555" endtime="20201030 15:52:03.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.559" level="INFO">VALUE: [7.459000000001326e-06, 1.0750000000000343e-05, 8.263999999997412e-06, 9.167000000000897e-06, 9.208000000000133e-06, 8.374999999997967e-06, 8.194999999999036e-06, 8.721999999999203e-06, 8.207999999999133e-06, 8.388999999997537e-06, 7.250000000000312e-06, 1.0625000000000218e-05, 7.8340000000017e-06, 7.554999999999368e-06, 5.652000000001822e-06, 6.847000000000797e-06, 8.680999999999967e-06, 7.0969999999975775e-06, 1.2041000000000829e-05, 9.597999999999551e-06, 9.403000000001577e-06, 7.306000000002061e-06, 9.292000000001022e-06, 6.958000000001352e-06, 7.5419999999992715e-06]</msg>
<status status="PASS" starttime="20201030 15:52:03.557" endtime="20201030 15:52:03.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.553" endtime="20201030 15:52:03.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.563" endtime="20201030 15:52:03.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.562" endtime="20201030 15:52:03.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.560" endtime="20201030 15:52:03.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.234" endtime="20201030 15:52:03.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.234" endtime="20201030 15:52:03.584"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.593" endtime="20201030 15:52:03.605"></status>
</kw>
<msg timestamp="20201030 15:52:03.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.590" endtime="20201030 15:52:03.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.608" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.606" endtime="20201030 15:52:03.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.609" endtime="20201030 15:52:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.588" endtime="20201030 15:52:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.586" endtime="20201030 15:52:03.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.618" endtime="20201030 15:52:03.886"></status>
</kw>
<msg timestamp="20201030 15:52:03.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018769222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.617" endtime="20201030 15:52:03.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018758903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018769222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.889" endtime="20201030 15:52:03.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.895" endtime="20201030 15:52:03.896"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.614" endtime="20201030 15:52:03.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.612" endtime="20201030 15:52:03.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:03.901" level="INFO">${RESULT} = [{'diff': 1.0318999999998218e-05}, {'diff': 7.804999999999618e-06}, {'diff': 8.208999999998606e-06}, {'diff': 8.166999999999897e-06}, {'diff': 1.0584000000000982e-05}, {'diff': 1.0542000000002272e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:03.898" endtime="20201030 15:52:03.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:03.904" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0318999999998218e-05, 7.804999999999618e-06, 8.208999999998606e-06, 8.166999999999897e-06, 1.0584000000000982e-05, 1.0542000000002272e-05, 1.0846999999997858e-05, 7.263999999999882e-06, 5....</msg>
<status status="PASS" starttime="20201030 15:52:03.902" endtime="20201030 15:52:03.904"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.909" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:03.908" endtime="20201030 15:52:03.909"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.911" level="INFO">VALUE: [1.0318999999998218e-05, 7.804999999999618e-06, 8.208999999998606e-06, 8.166999999999897e-06, 1.0584000000000982e-05, 1.0542000000002272e-05, 1.0846999999997858e-05, 7.263999999999882e-06, 5.042000000000241e-06, 7.943999999999313e-06, 9.415999999998204e-06, 6.958000000001352e-06, 9.722000000000203e-06, 1.0056000000001342e-05, 1.0874999999996998e-05, 8.860999999998898e-06, 5.7639999999983815e-06, 7.666999999999397e-06, 9.792000000001522e-06, 6.277000000002447e-06, 8.09800000000152e-06, 1.0500000000000093e-05, 1.1458000000002383e-05, 7.680000000002962e-06, 7.5969999999980775e-06]</msg>
<status status="PASS" starttime="20201030 15:52:03.910" endtime="20201030 15:52:03.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.905" endtime="20201030 15:52:03.912"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:03.916" endtime="20201030 15:52:03.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.914" endtime="20201030 15:52:03.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.913" endtime="20201030 15:52:03.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.585" endtime="20201030 15:52:03.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.584" endtime="20201030 15:52:03.936"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.945" endtime="20201030 15:52:03.957"></status>
</kw>
<msg timestamp="20201030 15:52:03.957" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.943" endtime="20201030 15:52:03.958"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:03.960" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:03.959" endtime="20201030 15:52:03.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.961" endtime="20201030 15:52:03.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.940" endtime="20201030 15:52:03.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.938" endtime="20201030 15:52:03.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:03.970" endtime="20201030 15:52:04.241"></status>
</kw>
<msg timestamp="20201030 15:52:04.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:03.969" endtime="20201030 15:52:04.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018661653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.243" endtime="20201030 15:52:04.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.249" endtime="20201030 15:52:04.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.966" endtime="20201030 15:52:04.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.964" endtime="20201030 15:52:04.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.255" level="INFO">${RESULT} = [{'diff': 8.639000000001257e-06}, {'diff': 8.639000000001257e-06}, {'diff': 8.625000000001687e-06}, {'diff': 8.305999999999591e-06}, {'diff': 7.832999999998758e-06}, {'diff': 5.9439999999973125e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:04.252" endtime="20201030 15:52:04.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:04.258" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.639000000001257e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.305999999999591e-06, 7.832999999998758e-06, 5.9439999999973125e-06, 7.361000000000867e-06, 8.735999999998773e-06, 1.166...</msg>
<status status="PASS" starttime="20201030 15:52:04.256" endtime="20201030 15:52:04.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.263" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:04.262" endtime="20201030 15:52:04.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.265" level="INFO">VALUE: [8.639000000001257e-06, 8.639000000001257e-06, 8.625000000001687e-06, 8.305999999999591e-06, 7.832999999998758e-06, 5.9439999999973125e-06, 7.361000000000867e-06, 8.735999999998773e-06, 1.1666000000000454e-05, 7.5419999999992715e-06, 1.0068999999997968e-05, 7.833999999998231e-06, 8.736000000002242e-06, 7.903000000000077e-06, 8.014000000000632e-06, 7.429999999999243e-06, 6.054999999997868e-06, 9.556000000000842e-06, 1.0332999999997788e-05, 6.624999999999687e-06, 9.458999999999856e-06, 8.917000000000647e-06, 1.1652000000000884e-05, 7.389000000000007e-06, 8.041999999999772e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.264" endtime="20201030 15:52:04.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.259" endtime="20201030 15:52:04.266"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.270" endtime="20201030 15:52:04.289"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.268" endtime="20201030 15:52:04.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.267" endtime="20201030 15:52:04.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.937" endtime="20201030 15:52:04.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:03.937" endtime="20201030 15:52:04.290"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.299" endtime="20201030 15:52:04.311"></status>
</kw>
<msg timestamp="20201030 15:52:04.311" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.297" endtime="20201030 15:52:04.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.314" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.312" endtime="20201030 15:52:04.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.315" endtime="20201030 15:52:04.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.294" endtime="20201030 15:52:04.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.292" endtime="20201030 15:52:04.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.324" endtime="20201030 15:52:04.593"></status>
</kw>
<msg timestamp="20201030 15:52:04.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.322" endtime="20201030 15:52:04.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018634153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018644681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.596" endtime="20201030 15:52:04.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.601" endtime="20201030 15:52:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.320" endtime="20201030 15:52:04.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.318" endtime="20201030 15:52:04.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.607" level="INFO">${RESULT} = [{'diff': 1.0527999999999232e-05}, {'diff': 7.568999999998938e-06}, {'diff': 6.611000000000117e-06}, {'diff': 6.305000000001587e-06}, {'diff': 1.0750000000000343e-05}, {'diff': 6.709000000000576e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:04.604" endtime="20201030 15:52:04.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:04.610" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0527999999999232e-05, 7.568999999998938e-06, 6.611000000000117e-06, 6.305000000001587e-06, 1.0750000000000343e-05, 6.709000000000576e-06, 9.667000000001397e-06, 9.570000000000412e-06, 6.16...</msg>
<status status="PASS" starttime="20201030 15:52:04.608" endtime="20201030 15:52:04.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.615" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:04.614" endtime="20201030 15:52:04.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.617" level="INFO">VALUE: [1.0527999999999232e-05, 7.568999999998938e-06, 6.611000000000117e-06, 6.305000000001587e-06, 1.0750000000000343e-05, 6.709000000000576e-06, 9.667000000001397e-06, 9.570000000000412e-06, 6.167000000001366e-06, 1.0569999999997942e-05, 1.0388999999999537e-05, 1.0985999999997553e-05, 7.971999999998453e-06, 1.0417000000002147e-05, 7.804999999999618e-06, 7.971999999998453e-06, 9.153000000001327e-06, 6.8329999999977575e-06, 8.444999999999286e-06, 8.195000000002506e-06, 7.375000000000437e-06, 1.0055000000001868e-05, 1.0138999999999287e-05, 9.653000000001827e-06, 7.625000000000687e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.616" endtime="20201030 15:52:04.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.611" endtime="20201030 15:52:04.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.622" endtime="20201030 15:52:04.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.620" endtime="20201030 15:52:04.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.619" endtime="20201030 15:52:04.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.291" endtime="20201030 15:52:04.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.291" endtime="20201030 15:52:04.642"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.651" endtime="20201030 15:52:04.663"></status>
</kw>
<msg timestamp="20201030 15:52:04.664" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.649" endtime="20201030 15:52:04.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.667" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:04.665" endtime="20201030 15:52:04.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.668" endtime="20201030 15:52:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.646" endtime="20201030 15:52:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.645" endtime="20201030 15:52:04.671"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.677" endtime="20201030 15:52:04.946"></status>
</kw>
<msg timestamp="20201030 15:52:04.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018721069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.676" endtime="20201030 15:52:04.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018713722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018721069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:04.950" endtime="20201030 15:52:04.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:04.955" endtime="20201030 15:52:04.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.673" endtime="20201030 15:52:04.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.671" endtime="20201030 15:52:04.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:04.961" level="INFO">${RESULT} = [{'diff': 7.347000000001297e-06}, {'diff': 9.763999999998912e-06}, {'diff': 8.568999999999938e-06}, {'diff': 7.806000000002561e-06}, {'diff': 1.0972000000001453e-05}, {'diff': 8.000000000001062e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:04.959" endtime="20201030 15:52:04.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:04.965" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.347000000001297e-06, 9.763999999998912e-06, 8.568999999999938e-06, 7.806000000002561e-06, 1.0972000000001453e-05, 8.000000000001062e-06, 7.194000000002032e-06, 7.304999999999118e-06, 9.415...</msg>
<status status="PASS" starttime="20201030 15:52:04.962" endtime="20201030 15:52:04.965"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.969" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:04.968" endtime="20201030 15:52:04.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:04.972" level="INFO">VALUE: [7.347000000001297e-06, 9.763999999998912e-06, 8.568999999999938e-06, 7.806000000002561e-06, 1.0972000000001453e-05, 8.000000000001062e-06, 7.194000000002032e-06, 7.304999999999118e-06, 9.415999999998204e-06, 1.0417000000002147e-05, 9.694000000001063e-06, 8.332999999999258e-06, 9.153000000001327e-06, 8.083000000002477e-06, 8.263999999997412e-06, 5.986000000002961e-06, 1.2430000000000774e-05, 1.1902000000001134e-05, 5.9029999999980765e-06, 9.513999999998662e-06, 7.971999999998453e-06, 9.056000000000342e-06, 8.903000000001077e-06, 7.833999999998231e-06, 7.597000000001547e-06]</msg>
<status status="PASS" starttime="20201030 15:52:04.970" endtime="20201030 15:52:04.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.965" endtime="20201030 15:52:04.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:04.976" endtime="20201030 15:52:04.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.975" endtime="20201030 15:52:04.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.973" endtime="20201030 15:52:04.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.643" endtime="20201030 15:52:04.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.643" endtime="20201030 15:52:04.997"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.007" endtime="20201030 15:52:05.019"></status>
</kw>
<msg timestamp="20201030 15:52:05.020" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.004" endtime="20201030 15:52:05.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.022" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.021" endtime="20201030 15:52:05.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.023" endtime="20201030 15:52:05.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.001" endtime="20201030 15:52:05.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.999" endtime="20201030 15:52:05.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.032" endtime="20201030 15:52:05.297"></status>
</kw>
<msg timestamp="20201030 15:52:05.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.031" endtime="20201030 15:52:05.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.304" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019957792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.300" endtime="20201030 15:52:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.305" endtime="20201030 15:52:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.028" endtime="20201030 15:52:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.026" endtime="20201030 15:52:05.308"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.311" level="INFO">${RESULT} = [{'diff': 8.249999999997842e-06}, {'diff': 6.833000000001227e-06}, {'diff': 9.276999999998509e-06}, {'diff': 9.166000000001423e-06}, {'diff': 1.0888000000000564e-05}, {'diff': 6.834000000000701e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:05.308" endtime="20201030 15:52:05.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:05.314" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.249999999997842e-06, 6.833000000001227e-06, 9.276999999998509e-06, 9.166000000001423e-06, 1.0888000000000564e-05, 6.834000000000701e-06, 1.0056000000001342e-05, 9.263999999998412e-06, 1.18...</msg>
<status status="PASS" starttime="20201030 15:52:05.312" endtime="20201030 15:52:05.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.319" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:05.317" endtime="20201030 15:52:05.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.321" level="INFO">VALUE: [8.249999999997842e-06, 6.833000000001227e-06, 9.276999999998509e-06, 9.166000000001423e-06, 1.0888000000000564e-05, 6.834000000000701e-06, 1.0056000000001342e-05, 9.263999999998412e-06, 1.1832999999999289e-05, 8.707999999999633e-06, 1.1846999999998858e-05, 9.638999999998787e-06, 1.0931000000002217e-05, 1.0929999999999274e-05, 9.277999999997982e-06, 7.430999999998716e-06, 5.499999999998562e-06, 7.665999999999923e-06, 8.583000000002977e-06, 1.0222000000000703e-05, 8.750000000001812e-06, 8.861000000002367e-06, 8.889000000001507e-06, 9.139000000001757e-06, 7.723000000001146e-06]</msg>
<status status="PASS" starttime="20201030 15:52:05.320" endtime="20201030 15:52:05.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.315" endtime="20201030 15:52:05.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.326" endtime="20201030 15:52:05.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.324" endtime="20201030 15:52:05.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.323" endtime="20201030 15:52:05.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.998" endtime="20201030 15:52:05.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:04.998" endtime="20201030 15:52:05.347"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.354" endtime="20201030 15:52:05.367"></status>
</kw>
<msg timestamp="20201030 15:52:05.368" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.353" endtime="20201030 15:52:05.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.370" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.369" endtime="20201030 15:52:05.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.371" endtime="20201030 15:52:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.350" endtime="20201030 15:52:05.373"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.349" endtime="20201030 15:52:05.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.380" endtime="20201030 15:52:05.648"></status>
</kw>
<msg timestamp="20201030 15:52:05.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.379" endtime="20201030 15:52:05.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018493736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018503958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.651" endtime="20201030 15:52:05.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.656" endtime="20201030 15:52:05.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.376" endtime="20201030 15:52:05.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.374" endtime="20201030 15:52:05.659"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:05.662" level="INFO">${RESULT} = [{'diff': 1.0222000000000703e-05}, {'diff': 8.472000000002422e-06}, {'diff': 6.7919999999985214e-06}, {'diff': 7.903000000000077e-06}, {'diff': 1.0222000000000703e-05}, {'diff': 8.736000000002242e-06}...</msg>
<status status="PASS" starttime="20201030 15:52:05.660" endtime="20201030 15:52:05.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:05.665" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0222000000000703e-05, 8.472000000002422e-06, 6.7919999999985214e-06, 7.903000000000077e-06, 1.0222000000000703e-05, 8.736000000002242e-06, 6.028000000001671e-06, 9.041999999997302e-06, 6.2...</msg>
<status status="PASS" starttime="20201030 15:52:05.663" endtime="20201030 15:52:05.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.670" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:05.669" endtime="20201030 15:52:05.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.672" level="INFO">VALUE: [1.0222000000000703e-05, 8.472000000002422e-06, 6.7919999999985214e-06, 7.903000000000077e-06, 1.0222000000000703e-05, 8.736000000002242e-06, 6.028000000001671e-06, 9.041999999997302e-06, 6.249999999999312e-06, 9.625000000002687e-06, 8.013999999997162e-06, 6.6529999999988265e-06, 7.292000000002491e-06, 9.763999999998912e-06, 7.472000000001422e-06, 7.584000000001451e-06, 7.430999999998716e-06, 1.0458999999997387e-05, 7.652999999999827e-06, 9.056000000000342e-06, 9.569000000000938e-06, 6.917000000002116e-06, 6.056000000000811e-06, 9.639000000002257e-06, 8.568999999999938e-06]</msg>
<status status="PASS" starttime="20201030 15:52:05.671" endtime="20201030 15:52:05.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.666" endtime="20201030 15:52:05.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:05.677" endtime="20201030 15:52:05.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.675" endtime="20201030 15:52:05.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.674" endtime="20201030 15:52:05.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.347" endtime="20201030 15:52:05.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.347" endtime="20201030 15:52:05.698"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.707" endtime="20201030 15:52:05.719"></status>
</kw>
<msg timestamp="20201030 15:52:05.719" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.704" endtime="20201030 15:52:05.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:05.722" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:05.720" endtime="20201030 15:52:05.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.723" endtime="20201030 15:52:05.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.702" endtime="20201030 15:52:05.725"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.700" endtime="20201030 15:52:05.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:05.732" endtime="20201030 15:52:06.001"></status>
</kw>
<msg timestamp="20201030 15:52:06.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018655903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018667083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:05.730" endtime="20201030 15:52:06.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018655903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018667083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.004" endtime="20201030 15:52:06.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.009" endtime="20201030 15:52:06.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.728" endtime="20201030 15:52:06.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.726" endtime="20201030 15:52:06.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.015" level="INFO">${RESULT} = [{'diff': 1.1179999999999524e-05}, {'diff': 1.0416000000002673e-05}, {'diff': 6.8329999999977575e-06}, {'diff': 1.0472000000000953e-05}, {'diff': 9.749999999999343e-06}, {'diff': 1.1707999999999164e-0...</msg>
<status status="PASS" starttime="20201030 15:52:06.013" endtime="20201030 15:52:06.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:06.019" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1179999999999524e-05, 1.0416000000002673e-05, 6.8329999999977575e-06, 1.0472000000000953e-05, 9.749999999999343e-06, 1.1707999999999164e-05, 1.1055999999998872e-05, 8.208000000002602e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.016" endtime="20201030 15:52:06.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.023" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:06.022" endtime="20201030 15:52:06.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.026" level="INFO">VALUE: [1.1179999999999524e-05, 1.0416000000002673e-05, 6.8329999999977575e-06, 1.0472000000000953e-05, 9.749999999999343e-06, 1.1707999999999164e-05, 1.1055999999998872e-05, 8.208000000002602e-06, 8.735999999998773e-06, 5.806000000000561e-06, 8.193999999999563e-06, 8.292000000000022e-06, 9.861000000003367e-06, 9.374999999998967e-06, 9.306000000000592e-06, 9.431000000000717e-06, 6.541999999998271e-06, 7.916000000000173e-06, 7.348000000000771e-06, 8.499999999998092e-06, 7.026999999999728e-06, 8.32000000000263e-06, 9.305000000001118e-06, 7.500000000000562e-06, 9.290999999998079e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.024" endtime="20201030 15:52:06.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.020" endtime="20201030 15:52:06.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.033" endtime="20201030 15:52:06.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.030" endtime="20201030 15:52:06.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.029" endtime="20201030 15:52:06.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.699" endtime="20201030 15:52:06.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:05.698" endtime="20201030 15:52:06.055"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.065" endtime="20201030 15:52:06.077"></status>
</kw>
<msg timestamp="20201030 15:52:06.077" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.063" endtime="20201030 15:52:06.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.080" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.078" endtime="20201030 15:52:06.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.081" endtime="20201030 15:52:06.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.060" endtime="20201030 15:52:06.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.059" endtime="20201030 15:52:06.083"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.090" endtime="20201030 15:52:06.360"></status>
</kw>
<msg timestamp="20201030 15:52:06.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021208875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.088" endtime="20201030 15:52:06.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021203181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021208875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.363" endtime="20201030 15:52:06.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.368" endtime="20201030 15:52:06.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.086" endtime="20201030 15:52:06.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.084" endtime="20201030 15:52:06.371"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.374" level="INFO">${RESULT} = [{'diff': 5.6939999999970625e-06}, {'diff': 7.193999999998563e-06}, {'diff': 1.0833000000001758e-05}, {'diff': 7.097000000001047e-06}, {'diff': 7.792000000002991e-06}, {'diff': 8.791000000001048e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:06.371" endtime="20201030 15:52:06.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:06.377" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.6939999999970625e-06, 7.193999999998563e-06, 1.0833000000001758e-05, 7.097000000001047e-06, 7.792000000002991e-06, 8.791000000001048e-06, 8.583999999998981e-06, 1.0055999999997872e-05, 8.2...</msg>
<status status="PASS" starttime="20201030 15:52:06.375" endtime="20201030 15:52:06.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.381" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:06.380" endtime="20201030 15:52:06.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.384" level="INFO">VALUE: [5.6939999999970625e-06, 7.193999999998563e-06, 1.0833000000001758e-05, 7.097000000001047e-06, 7.792000000002991e-06, 8.791000000001048e-06, 8.583999999998981e-06, 1.0055999999997872e-05, 8.209000000002076e-06, 8.917000000000647e-06, 1.1737000000001246e-05, 1.0875000000000468e-05, 8.570000000002881e-06, 7.805999999999091e-06, 7.750000000000812e-06, 8.958999999999356e-06, 9.861999999999371e-06, 8.638999999997787e-06, 8.971999999999453e-06, 6.374999999999437e-06, 7.459000000001326e-06, 9.014000000001632e-06, 7.8340000000017e-06, 8.611000000002117e-06, 7.805999999999091e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.383" endtime="20201030 15:52:06.385"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.378" endtime="20201030 15:52:06.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.389" endtime="20201030 15:52:06.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.387" endtime="20201030 15:52:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.386" endtime="20201030 15:52:06.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.057" endtime="20201030 15:52:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.056" endtime="20201030 15:52:06.410"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.419" endtime="20201030 15:52:06.431"></status>
</kw>
<msg timestamp="20201030 15:52:06.431" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.416" endtime="20201030 15:52:06.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.434" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.432" endtime="20201030 15:52:06.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.435" endtime="20201030 15:52:06.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.414" endtime="20201030 15:52:06.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.412" endtime="20201030 15:52:06.438"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.444" endtime="20201030 15:52:06.710"></status>
</kw>
<msg timestamp="20201030 15:52:06.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.443" endtime="20201030 15:52:06.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018962361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018974514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.713" endtime="20201030 15:52:06.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.719" endtime="20201030 15:52:06.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.440" endtime="20201030 15:52:06.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.438" endtime="20201030 15:52:06.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:06.725" level="INFO">${RESULT} = [{'diff': 1.2153000000000858e-05}, {'diff': 8.264000000000882e-06}, {'diff': 7.097000000001047e-06}, {'diff': 9.139000000001757e-06}, {'diff': 7.902000000000603e-06}, {'diff': 7.013000000000158e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:06.722" endtime="20201030 15:52:06.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:06.728" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.2153000000000858e-05, 8.264000000000882e-06, 7.097000000001047e-06, 9.139000000001757e-06, 7.902000000000603e-06, 7.013000000000158e-06, 5.820000000000131e-06, 1.0944999999998317e-05, 1.03...</msg>
<status status="PASS" starttime="20201030 15:52:06.726" endtime="20201030 15:52:06.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.732" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:06.731" endtime="20201030 15:52:06.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.735" level="INFO">VALUE: [1.2153000000000858e-05, 8.264000000000882e-06, 7.097000000001047e-06, 9.139000000001757e-06, 7.902000000000603e-06, 7.013000000000158e-06, 5.820000000000131e-06, 1.0944999999998317e-05, 1.0346999999997358e-05, 8.443999999999813e-06, 8.999999999998592e-06, 6.7369999999997154e-06, 8.736000000002242e-06, 9.070000000003381e-06, 9.874999999999468e-06, 9.139000000001757e-06, 8.249999999997842e-06, 8.792000000000522e-06, 8.528000000000702e-06, 8.694000000000063e-06, 7.013999999999632e-06, 1.2332999999999789e-05, 7.568999999998938e-06, 8.958999999999356e-06, 7.889000000000507e-06]</msg>
<status status="PASS" starttime="20201030 15:52:06.733" endtime="20201030 15:52:06.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.729" endtime="20201030 15:52:06.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:06.740" endtime="20201030 15:52:06.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.738" endtime="20201030 15:52:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.737" endtime="20201030 15:52:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.411" endtime="20201030 15:52:06.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.410" endtime="20201030 15:52:06.761"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.769" endtime="20201030 15:52:06.780"></status>
</kw>
<msg timestamp="20201030 15:52:06.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.767" endtime="20201030 15:52:06.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:06.783" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:06.782" endtime="20201030 15:52:06.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.784" endtime="20201030 15:52:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.764" endtime="20201030 15:52:06.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.763" endtime="20201030 15:52:06.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:06.793" endtime="20201030 15:52:07.063"></status>
</kw>
<msg timestamp="20201030 15:52:07.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018660167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:06.792" endtime="20201030 15:52:07.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018650389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018660167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.065" endtime="20201030 15:52:07.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.071" endtime="20201030 15:52:07.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.789" endtime="20201030 15:52:07.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.787" endtime="20201030 15:52:07.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.077" level="INFO">${RESULT} = [{'diff': 9.777999999998482e-06}, {'diff': 9.694000000001063e-06}, {'diff': 1.0584000000000982e-05}, {'diff': 7.431000000002186e-06}, {'diff': 7.431000000002186e-06}, {'diff': 9.263999999998412e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:07.074" endtime="20201030 15:52:07.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:07.080" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.777999999998482e-06, 9.694000000001063e-06, 1.0584000000000982e-05, 7.431000000002186e-06, 7.431000000002186e-06, 9.263999999998412e-06, 1.0026999999999259e-05, 1.0931000000002217e-05, 1.0...</msg>
<status status="PASS" starttime="20201030 15:52:07.078" endtime="20201030 15:52:07.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.084" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:07.083" endtime="20201030 15:52:07.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.087" level="INFO">VALUE: [9.777999999998482e-06, 9.694000000001063e-06, 1.0584000000000982e-05, 7.431000000002186e-06, 7.431000000002186e-06, 9.263999999998412e-06, 1.0026999999999259e-05, 1.0931000000002217e-05, 1.0972000000001453e-05, 8.08400000000195e-06, 6.597000000000547e-06, 8.444999999999286e-06, 7.055999999998341e-06, 7.625000000000687e-06, 1.0583000000001508e-05, 1.0819000000002188e-05, 7.000000000000062e-06, 1.1832999999999289e-05, 9.444000000000813e-06, 6.931000000001686e-06, 1.0334000000000731e-05, 8.32000000000263e-06, 1.0111999999999621e-05, 7.125000000000187e-06, 6.944000000001782e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.085" endtime="20201030 15:52:07.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.081" endtime="20201030 15:52:07.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.092" endtime="20201030 15:52:07.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.090" endtime="20201030 15:52:07.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.089" endtime="20201030 15:52:07.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.761" endtime="20201030 15:52:07.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:06.761" endtime="20201030 15:52:07.113"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.121" endtime="20201030 15:52:07.133"></status>
</kw>
<msg timestamp="20201030 15:52:07.134" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.119" endtime="20201030 15:52:07.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.135" endtime="20201030 15:52:07.137"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.138" endtime="20201030 15:52:07.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.116" endtime="20201030 15:52:07.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.115" endtime="20201030 15:52:07.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.147" endtime="20201030 15:52:07.416"></status>
</kw>
<msg timestamp="20201030 15:52:07.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018521903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.146" endtime="20201030 15:52:07.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018513167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018521903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.419" endtime="20201030 15:52:07.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.424" endtime="20201030 15:52:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.143" endtime="20201030 15:52:07.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.141" endtime="20201030 15:52:07.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.430" level="INFO">${RESULT} = [{'diff': 8.735999999998773e-06}, {'diff': 9.417000000001147e-06}, {'diff': 1.204099999999736e-05}, {'diff': 5.222000000002641e-06}, {'diff': 8.806000000000092e-06}, {'diff': 9.749999999999343e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.428" endtime="20201030 15:52:07.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:07.433" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.735999999998773e-06, 9.417000000001147e-06, 1.204099999999736e-05, 5.222000000002641e-06, 8.806000000000092e-06, 9.749999999999343e-06, 8.916999999997177e-06, 9.736999999999246e-06, 9.8470...</msg>
<status status="PASS" starttime="20201030 15:52:07.431" endtime="20201030 15:52:07.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.438" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:07.437" endtime="20201030 15:52:07.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.440" level="INFO">VALUE: [8.735999999998773e-06, 9.417000000001147e-06, 1.204099999999736e-05, 5.222000000002641e-06, 8.806000000000092e-06, 9.749999999999343e-06, 8.916999999997177e-06, 9.736999999999246e-06, 9.847000000000328e-06, 8.610999999998648e-06, 1.0013999999999162e-05, 6.5279999999987015e-06, 1.1541999999999802e-05, 1.1361000000001398e-05, 7.514000000000132e-06, 6.472000000000422e-06, 1.0166999999998427e-05, 7.722000000001672e-06, 6.624999999999687e-06, 9.167000000000897e-06, 1.1541000000000329e-05, 5.819000000000657e-06, 9.999999999999593e-06, 9.096999999999578e-06, 1.0915999999999704e-05]</msg>
<status status="PASS" starttime="20201030 15:52:07.439" endtime="20201030 15:52:07.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.434" endtime="20201030 15:52:07.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.445" endtime="20201030 15:52:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.443" endtime="20201030 15:52:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.442" endtime="20201030 15:52:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.113" endtime="20201030 15:52:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.113" endtime="20201030 15:52:07.466"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.474" endtime="20201030 15:52:07.487"></status>
</kw>
<msg timestamp="20201030 15:52:07.488" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.472" endtime="20201030 15:52:07.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.493" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.490" endtime="20201030 15:52:07.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.495" endtime="20201030 15:52:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.469" endtime="20201030 15:52:07.500"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.468" endtime="20201030 15:52:07.501"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.514" endtime="20201030 15:52:07.795"></status>
</kw>
<msg timestamp="20201030 15:52:07.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018313111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.511" endtime="20201030 15:52:07.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018305681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018313111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:07.798" endtime="20201030 15:52:07.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.803" endtime="20201030 15:52:07.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.505" endtime="20201030 15:52:07.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.502" endtime="20201030 15:52:07.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:07.809" level="INFO">${RESULT} = [{'diff': 7.429999999999243e-06}, {'diff': 7.429999999999243e-06}, {'diff': 8.930000000000743e-06}, {'diff': 7.639000000000257e-06}, {'diff': 6.820000000001131e-06}, {'diff': 7.389000000000007e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:07.807" endtime="20201030 15:52:07.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:07.812" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.429999999999243e-06, 7.429999999999243e-06, 8.930000000000743e-06, 7.639000000000257e-06, 6.820000000001131e-06, 7.389000000000007e-06, 7.611000000001117e-06, 6.360999999999867e-06, 1.0694...</msg>
<status status="PASS" starttime="20201030 15:52:07.810" endtime="20201030 15:52:07.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:07.816" endtime="20201030 15:52:07.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.819" level="INFO">VALUE: [7.429999999999243e-06, 7.429999999999243e-06, 8.930000000000743e-06, 7.639000000000257e-06, 6.820000000001131e-06, 7.389000000000007e-06, 7.611000000001117e-06, 6.360999999999867e-06, 1.0694000000002063e-05, 1.0333999999997262e-05, 6.179999999997993e-06, 7.568999999998938e-06, 8.874999999998467e-06, 7.319999999998161e-06, 6.097000000000047e-06, 1.0097000000000578e-05, 9.610999999999648e-06, 7.444999999998286e-06, 7.570000000001881e-06, 1.0222000000000703e-05, 6.611000000000117e-06, 1.0208000000001133e-05, 5.846999999999797e-06, 8.139000000000757e-06, 7.111000000000617e-06]</msg>
<status status="PASS" starttime="20201030 15:52:07.818" endtime="20201030 15:52:07.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.813" endtime="20201030 15:52:07.820"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:07.824" endtime="20201030 15:52:07.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.822" endtime="20201030 15:52:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.821" endtime="20201030 15:52:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.466" endtime="20201030 15:52:07.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.466" endtime="20201030 15:52:07.844"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.854" endtime="20201030 15:52:07.865"></status>
</kw>
<msg timestamp="20201030 15:52:07.866" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.851" endtime="20201030 15:52:07.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:07.868" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:07.867" endtime="20201030 15:52:07.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.869" endtime="20201030 15:52:07.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.848" endtime="20201030 15:52:07.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.847" endtime="20201030 15:52:07.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:07.878" endtime="20201030 15:52:08.143"></status>
</kw>
<msg timestamp="20201030 15:52:08.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01904975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:07.877" endtime="20201030 15:52:08.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019040097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01904975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:08.146" endtime="20201030 15:52:08.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.152" endtime="20201030 15:52:08.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.874" endtime="20201030 15:52:08.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.873" endtime="20201030 15:52:08.154"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.157" level="INFO">${RESULT} = [{'diff': 9.653000000001827e-06}, {'diff': 6.638999999999257e-06}, {'diff': 8.402000000001103e-06}, {'diff': 1.0347000000000828e-05}, {'diff': 6.931000000001686e-06}, {'diff': 1.1653000000000358e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:08.155" endtime="20201030 15:52:08.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:08.161" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.653000000001827e-06, 6.638999999999257e-06, 8.402000000001103e-06, 1.0347000000000828e-05, 6.931000000001686e-06, 1.1653000000000358e-05, 7.236000000000742e-06, 1.0777000000000009e-05, 8.4...</msg>
<status status="PASS" starttime="20201030 15:52:08.158" endtime="20201030 15:52:08.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.165" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:08.164" endtime="20201030 15:52:08.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.167" level="INFO">VALUE: [9.653000000001827e-06, 6.638999999999257e-06, 8.402000000001103e-06, 1.0347000000000828e-05, 6.931000000001686e-06, 1.1653000000000358e-05, 7.236000000000742e-06, 1.0777000000000009e-05, 8.402999999997107e-06, 7.875000000000937e-06, 5.5139999999981315e-06, 9.513999999998662e-06, 1.1443999999999344e-05, 9.458000000000383e-06, 9.458000000000383e-06, 8.528000000000702e-06, 8.860999999998898e-06, 9.972000000000453e-06, 8.513999999997662e-06, 7.430999999998716e-06, 1.0097000000000578e-05, 1.2263999999997943e-05, 5.958000000000352e-06, 6.360999999999867e-06, 1.0180999999997997e-05]</msg>
<status status="PASS" starttime="20201030 15:52:08.166" endtime="20201030 15:52:08.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.161" endtime="20201030 15:52:08.168"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.172" endtime="20201030 15:52:08.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.171" endtime="20201030 15:52:08.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.169" endtime="20201030 15:52:08.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.845" endtime="20201030 15:52:08.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:07.845" endtime="20201030 15:52:08.193"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.202" endtime="20201030 15:52:08.213"></status>
</kw>
<msg timestamp="20201030 15:52:08.214" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.199" endtime="20201030 15:52:08.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.216" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.215" endtime="20201030 15:52:08.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.217" endtime="20201030 15:52:08.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.197" endtime="20201030 15:52:08.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.195" endtime="20201030 15:52:08.220"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.226" endtime="20201030 15:52:08.495"></status>
</kw>
<msg timestamp="20201030 15:52:08.496" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.224" endtime="20201030 15:52:08.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018558958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018566014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.498" endtime="20201030 15:52:08.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.503" endtime="20201030 15:52:08.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.222" endtime="20201030 15:52:08.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.220" endtime="20201030 15:52:08.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.509" level="INFO">${RESULT} = [{'diff': 7.055999999998341e-06}, {'diff': 7.138999999999757e-06}, {'diff': 7.736000000001242e-06}, {'diff': 1.0513999999999663e-05}, {'diff': 6.584000000000451e-06}, {'diff': 8.500000000001562e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:08.506" endtime="20201030 15:52:08.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:08.512" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.055999999998341e-06, 7.138999999999757e-06, 7.736000000001242e-06, 1.0513999999999663e-05, 6.584000000000451e-06, 8.500000000001562e-06, 1.0068999999997968e-05, 8.861000000002367e-06, 7.98...</msg>
<status status="PASS" starttime="20201030 15:52:08.510" endtime="20201030 15:52:08.512"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:08.515" endtime="20201030 15:52:08.516"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.518" level="INFO">VALUE: [7.055999999998341e-06, 7.138999999999757e-06, 7.736000000001242e-06, 1.0513999999999663e-05, 6.584000000000451e-06, 8.500000000001562e-06, 1.0068999999997968e-05, 8.861000000002367e-06, 7.986000000001492e-06, 9.430000000001243e-06, 9.096999999999578e-06, 9.749999999999343e-06, 1.2068999999999969e-05, 1.1471999999998483e-05, 6.570000000000881e-06, 1.0458999999997387e-05, 1.1054999999999399e-05, 8.583000000002977e-06, 8.250000000001312e-06, 8.749999999998342e-06, 9.929999999998274e-06, 8.514000000001132e-06, 9.624999999999218e-06, 8.207999999999133e-06, 9.860999999999898e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.517" endtime="20201030 15:52:08.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.513" endtime="20201030 15:52:08.519"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.523" endtime="20201030 15:52:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.522" endtime="20201030 15:52:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.520" endtime="20201030 15:52:08.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.194" endtime="20201030 15:52:08.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.193" endtime="20201030 15:52:08.544"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.553" endtime="20201030 15:52:08.564"></status>
</kw>
<msg timestamp="20201030 15:52:08.564" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.550" endtime="20201030 15:52:08.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.567" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.565" endtime="20201030 15:52:08.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.568" endtime="20201030 15:52:08.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.548" endtime="20201030 15:52:08.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.546" endtime="20201030 15:52:08.570"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.577" endtime="20201030 15:52:08.844"></status>
</kw>
<msg timestamp="20201030 15:52:08.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.575" endtime="20201030 15:52:08.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.847" endtime="20201030 15:52:08.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.853" endtime="20201030 15:52:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.573" endtime="20201030 15:52:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.571" endtime="20201030 15:52:08.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:08.859" level="INFO">${RESULT} = [{'diff': 8.624999999998217e-06}, {'diff': 8.806000000000092e-06}, {'diff': 1.0846999999997858e-05}, {'diff': 1.0889000000000038e-05}, {'diff': 6.778000000002421e-06}, {'diff': 8.819000000000188e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:08.856" endtime="20201030 15:52:08.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:08.862" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.624999999998217e-06, 8.806000000000092e-06, 1.0846999999997858e-05, 1.0889000000000038e-05, 6.778000000002421e-06, 8.819000000000188e-06, 1.1304999999999649e-05, 7.195000000001506e-06, 8.2...</msg>
<status status="PASS" starttime="20201030 15:52:08.860" endtime="20201030 15:52:08.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:08.865" endtime="20201030 15:52:08.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.868" level="INFO">VALUE: [8.624999999998217e-06, 8.806000000000092e-06, 1.0846999999997858e-05, 1.0889000000000038e-05, 6.778000000002421e-06, 8.819000000000188e-06, 1.1304999999999649e-05, 7.195000000001506e-06, 8.264000000000882e-06, 7.055999999998341e-06, 7.959000000001826e-06, 5.653000000001296e-06, 7.903000000000077e-06, 5.401999999998103e-06, 1.0056000000001342e-05, 8.625000000001687e-06, 9.014000000001632e-06, 9.097999999999051e-06, 9.875000000002937e-06, 1.1179999999999524e-05, 7.667000000002866e-06, 7.555000000002837e-06, 7.737000000000716e-06, 7.360999999997397e-06, 7.319000000002157e-06]</msg>
<status status="PASS" starttime="20201030 15:52:08.867" endtime="20201030 15:52:08.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.863" endtime="20201030 15:52:08.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:08.874" endtime="20201030 15:52:08.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.872" endtime="20201030 15:52:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.870" endtime="20201030 15:52:08.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.545" endtime="20201030 15:52:08.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.544" endtime="20201030 15:52:08.895"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.903" endtime="20201030 15:52:08.915"></status>
</kw>
<msg timestamp="20201030 15:52:08.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.901" endtime="20201030 15:52:08.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:08.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:08.916" endtime="20201030 15:52:08.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.919" endtime="20201030 15:52:08.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.899" endtime="20201030 15:52:08.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.897" endtime="20201030 15:52:08.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:08.928" endtime="20201030 15:52:09.197"></status>
</kw>
<msg timestamp="20201030 15:52:09.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:08.926" endtime="20201030 15:52:09.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018615042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018621264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.200" endtime="20201030 15:52:09.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.205" endtime="20201030 15:52:09.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.924" endtime="20201030 15:52:09.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.922" endtime="20201030 15:52:09.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.211" level="INFO">${RESULT} = [{'diff': 6.222000000000172e-06}, {'diff': 1.0290999999999079e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 8.430000000000243e-06}, {'diff': 7.666999999999397e-06}, {'diff': 1.0403000000002577e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:09.209" endtime="20201030 15:52:09.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:09.214" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.222000000000172e-06, 1.0290999999999079e-05, 1.1389000000000538e-05, 8.430000000000243e-06, 7.666999999999397e-06, 1.0403000000002577e-05, 5.860999999999367e-06, 7.500000000000562e-06, 8.5...</msg>
<status status="PASS" starttime="20201030 15:52:09.212" endtime="20201030 15:52:09.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.219" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:09.218" endtime="20201030 15:52:09.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.221" level="INFO">VALUE: [6.222000000000172e-06, 1.0290999999999079e-05, 1.1389000000000538e-05, 8.430000000000243e-06, 7.666999999999397e-06, 1.0403000000002577e-05, 5.860999999999367e-06, 7.500000000000562e-06, 8.583999999998981e-06, 8.458999999998856e-06, 9.347999999999301e-06, 1.0763999999999913e-05, 9.458999999999856e-06, 9.318999999997218e-06, 8.583000000002977e-06, 9.179999999997523e-06, 1.0555000000002368e-05, 6.291000000002017e-06, 1.0402999999999107e-05, 8.874999999998467e-06, 9.820000000000662e-06, 8.041000000000298e-06, 6.667000000001866e-06, 1.0388999999999537e-05, 6.8480000000002705e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.220" endtime="20201030 15:52:09.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.215" endtime="20201030 15:52:09.222"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.362" endtime="20201030 15:52:09.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.360" endtime="20201030 15:52:09.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.223" endtime="20201030 15:52:09.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.895" endtime="20201030 15:52:09.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:08.895" endtime="20201030 15:52:09.382"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.393" endtime="20201030 15:52:09.404"></status>
</kw>
<msg timestamp="20201030 15:52:09.405" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.389" endtime="20201030 15:52:09.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.408" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.406" endtime="20201030 15:52:09.408"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.409" endtime="20201030 15:52:09.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.386" endtime="20201030 15:52:09.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.385" endtime="20201030 15:52:09.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.418" endtime="20201030 15:52:09.686"></status>
</kw>
<msg timestamp="20201030 15:52:09.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.416" endtime="20201030 15:52:09.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020296111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020303403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:09.689" endtime="20201030 15:52:09.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.694" endtime="20201030 15:52:09.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.413" endtime="20201030 15:52:09.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.412" endtime="20201030 15:52:09.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:09.700" level="INFO">${RESULT} = [{'diff': 7.292000000002491e-06}, {'diff': 1.0124999999999718e-05}, {'diff': 7.138999999999757e-06}, {'diff': 8.264000000000882e-06}, {'diff': 8.944999999999786e-06}, {'diff': 7.986000000001492e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:09.697" endtime="20201030 15:52:09.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:09.703" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.292000000002491e-06, 1.0124999999999718e-05, 7.138999999999757e-06, 8.264000000000882e-06, 8.944999999999786e-06, 7.986000000001492e-06, 1.1500000000001093e-05, 1.0638999999999788e-05, 6.2...</msg>
<status status="PASS" starttime="20201030 15:52:09.701" endtime="20201030 15:52:09.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.707" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 15:52:09.706" endtime="20201030 15:52:09.708"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:09.712" level="INFO">VALUE: [7.292000000002491e-06, 1.0124999999999718e-05, 7.138999999999757e-06, 8.264000000000882e-06, 8.944999999999786e-06, 7.986000000001492e-06, 1.1500000000001093e-05, 1.0638999999999788e-05, 6.249999999999312e-06, 7.403000000003046e-06, 1.0583000000001508e-05, 1.0943999999998844e-05, 7.138999999999757e-06, 8.749999999998342e-06, 6.139000000002226e-06, 8.973000000002396e-06, 9.277999999997982e-06, 8.235999999998272e-06, 8.568999999999938e-06, 1.0708000000001633e-05, 7.777999999999952e-06, 1.1179999999999524e-05, 8.194999999999036e-06, 1.1471999999998483e-05, 8.014000000000632e-06]</msg>
<status status="PASS" starttime="20201030 15:52:09.710" endtime="20201030 15:52:09.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.704" endtime="20201030 15:52:09.714"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.722" endtime="20201030 15:52:09.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.719" endtime="20201030 15:52:09.745"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.716" endtime="20201030 15:52:09.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.383" endtime="20201030 15:52:09.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.383" endtime="20201030 15:52:09.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:02.505" endtime="20201030 15:52:09.747"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:51:59.385" endtime="20201030 15:52:09.748" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:09.762" endtime="20201030 15:52:09.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.759" endtime="20201030 15:52:09.785"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:09.811" endtime="20201030 15:52:12.831"></status>
</kw>
<msg timestamp="20201030 15:52:12.832" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:09.810" endtime="20201030 15:52:12.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.838" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.835" endtime="20201030 15:52:12.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.844" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:12.840" endtime="20201030 15:52:12.844"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:09.805" endtime="20201030 15:52:12.846"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:09.800" endtime="20201030 15:52:12.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.798" endtime="20201030 15:52:12.848"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:12.855" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:12.854" endtime="20201030 15:52:12.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.849" endtime="20201030 15:52:12.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.796" endtime="20201030 15:52:12.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.793" endtime="20201030 15:52:12.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.859" endtime="20201030 15:52:12.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.790" endtime="20201030 15:52:12.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.787" endtime="20201030 15:52:12.864"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:09.757" endtime="20201030 15:52:12.864"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.882" endtime="20201030 15:52:12.897"></status>
</kw>
<msg timestamp="20201030 15:52:12.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.879" endtime="20201030 15:52:12.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:12.903" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:12.901" endtime="20201030 15:52:12.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.906" endtime="20201030 15:52:12.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.873" endtime="20201030 15:52:12.911"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.870" endtime="20201030 15:52:12.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:12.927" endtime="20201030 15:52:13.220"></status>
</kw>
<msg timestamp="20201030 15:52:13.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110218139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110219667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:12.922" endtime="20201030 15:52:13.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.110218139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.110219667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.225" endtime="20201030 15:52:13.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.233" endtime="20201030 15:52:13.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.917" endtime="20201030 15:52:13.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.913" endtime="20201030 15:52:13.235"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.239" level="INFO">${RESULT} = [{'diff': 1.527999999861862e-06}, {'diff': 1.5980000003246175e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:13.236" endtime="20201030 15:52:13.240"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:13.244" level="INFO">${OVERHEAD} = {'diff': [1.527999999861862e-06, 1.5980000003246175e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:52:13.240" endtime="20201030 15:52:13.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.248" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:13.247" endtime="20201030 15:52:13.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.250" level="INFO">VALUE: [1.527999999861862e-06, 1.5980000003246175e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5410000000493085e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5560000004022356e-06, 1.5410000000493085e-06, 1.569999999784244e-06, 1.5689999997015036e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.639000000164259e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201030 15:52:13.249" endtime="20201030 15:52:13.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.244" endtime="20201030 15:52:13.251"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.255" endtime="20201030 15:52:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.253" endtime="20201030 15:52:13.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.252" endtime="20201030 15:52:13.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.867" endtime="20201030 15:52:13.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.866" endtime="20201030 15:52:13.276"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.284" endtime="20201030 15:52:13.297"></status>
</kw>
<msg timestamp="20201030 15:52:13.297" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.283" endtime="20201030 15:52:13.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.300" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.298" endtime="20201030 15:52:13.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.301" endtime="20201030 15:52:13.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.279" endtime="20201030 15:52:13.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.278" endtime="20201030 15:52:13.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.310" endtime="20201030 15:52:13.599"></status>
</kw>
<msg timestamp="20201030 15:52:13.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018605986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.309" endtime="20201030 15:52:13.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018605986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018607569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.603" endtime="20201030 15:52:13.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.612" endtime="20201030 15:52:13.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.306" endtime="20201030 15:52:13.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.305" endtime="20201030 15:52:13.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:13.618" level="INFO">${RESULT} = [{'diff': 1.582999999999446e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06},...</msg>
<status status="PASS" starttime="20201030 15:52:13.615" endtime="20201030 15:52:13.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:13.623" level="INFO">${OVERHEAD} = {'diff': [1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1....</msg>
<status status="PASS" starttime="20201030 15:52:13.619" endtime="20201030 15:52:13.623"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:13.626" endtime="20201030 15:52:13.628"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.631" level="INFO">VALUE: [1.582999999999446e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.582999999999446e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.6250000000016251e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5970000000024853e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.598000000001959e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5970000000024853e-06]</msg>
<status status="PASS" starttime="20201030 15:52:13.629" endtime="20201030 15:52:13.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.624" endtime="20201030 15:52:13.631"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:13.635" endtime="20201030 15:52:13.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.633" endtime="20201030 15:52:13.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.632" endtime="20201030 15:52:13.656"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.276" endtime="20201030 15:52:13.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.276" endtime="20201030 15:52:13.657"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.667" endtime="20201030 15:52:13.679"></status>
</kw>
<msg timestamp="20201030 15:52:13.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.665" endtime="20201030 15:52:13.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:13.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:13.682" endtime="20201030 15:52:13.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.687" endtime="20201030 15:52:13.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.662" endtime="20201030 15:52:13.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.660" endtime="20201030 15:52:13.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:13.700" endtime="20201030 15:52:13.990"></status>
</kw>
<msg timestamp="20201030 15:52:13.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.699" endtime="20201030 15:52:13.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022469153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022470708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:13.994" endtime="20201030 15:52:14.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.003" endtime="20201030 15:52:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.696" endtime="20201030 15:52:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.693" endtime="20201030 15:52:14.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.009" level="INFO">${RESULT} = [{'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5839999999989196e-...</msg>
<status status="PASS" starttime="20201030 15:52:14.006" endtime="20201030 15:52:14.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:14.014" level="INFO">${OVERHEAD} = {'diff': [1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.4999999999980307e-06, 1.52800000000064e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:14.010" endtime="20201030 15:52:14.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.019" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:14.018" endtime="20201030 15:52:14.019"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.021" level="INFO">VALUE: [1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:14.020" endtime="20201030 15:52:14.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.015" endtime="20201030 15:52:14.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.026" endtime="20201030 15:52:14.045"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.024" endtime="20201030 15:52:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.023" endtime="20201030 15:52:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.658" endtime="20201030 15:52:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:13.657" endtime="20201030 15:52:14.046"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.055" endtime="20201030 15:52:14.068"></status>
</kw>
<msg timestamp="20201030 15:52:14.068" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.053" endtime="20201030 15:52:14.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.071" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:14.069" endtime="20201030 15:52:14.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.072" endtime="20201030 15:52:14.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.050" endtime="20201030 15:52:14.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.048" endtime="20201030 15:52:14.074"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.081" endtime="20201030 15:52:14.363"></status>
</kw>
<msg timestamp="20201030 15:52:14.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019247236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.079" endtime="20201030 15:52:14.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019247236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019248792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:14.367" endtime="20201030 15:52:14.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:14.375" endtime="20201030 15:52:14.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.077" endtime="20201030 15:52:14.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.075" endtime="20201030 15:52:14.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:14.383" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5970000000024853e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.5699999999993497e-...</msg>
<status status="PASS" starttime="20201030 15:52:14.380" endtime="20201030 15:52:14.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:14.387" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:14.384" endtime="20201030 15:52:14.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.391" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:14.390" endtime="20201030 15:52:14.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:14.394" level="INFO">VALUE: [1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5560000000032492e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5269999999976969e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:52:14.392" endtime="20201030 15:52:14.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.388" endtime="20201030 15:52:14.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:14.398" endtime="20201030 15:52:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.397" endtime="20201030 15:52:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.395" endtime="20201030 15:52:14.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.047" endtime="20201030 15:52:15.389"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:14.047" endtime="20201030 15:52:15.390"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.413" endtime="20201030 15:52:15.430"></status>
</kw>
<msg timestamp="20201030 15:52:15.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.409" endtime="20201030 15:52:15.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.436" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.433" endtime="20201030 15:52:15.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.438" endtime="20201030 15:52:15.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.402" endtime="20201030 15:52:15.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.395" endtime="20201030 15:52:15.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.459" endtime="20201030 15:52:15.751"></status>
</kw>
<msg timestamp="20201030 15:52:15.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.00732125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.007322778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:15.456" endtime="20201030 15:52:15.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.00732125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.007322778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:15.755" endtime="20201030 15:52:15.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.764" endtime="20201030 15:52:15.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.450" endtime="20201030 15:52:15.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.447" endtime="20201030 15:52:15.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:15.770" level="INFO">${RESULT} = [{'diff': 1.5280000000839067e-06}, {'diff': 1.5700000000062886e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.4999999999876223e-...</msg>
<status status="PASS" starttime="20201030 15:52:15.767" endtime="20201030 15:52:15.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:15.774" level="INFO">${OVERHEAD} = {'diff': [1.5280000000839067e-06, 1.5700000000062886e-06, 1.5270000000011663e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.5559999999581464e-06, 1.5689999999235482e-06...</msg>
<status status="PASS" starttime="20201030 15:52:15.771" endtime="20201030 15:52:15.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.778" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:15.777" endtime="20201030 15:52:15.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.781" level="INFO">VALUE: [1.5280000000839067e-06, 1.5700000000062886e-06, 1.5270000000011663e-06, 1.5829999999716904e-06, 1.5420000001320489e-06, 1.4999999999876223e-06, 1.5559999999581464e-06, 1.5689999999235482e-06, 1.598000000102573e-06, 1.556000000180191e-06, 1.5409999998272639e-06, 1.5700000000062886e-06, 1.596999999797788e-06, 1.598000000102573e-06, 1.5410000000493085e-06, 1.4999999999876223e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5700000000062886e-06, 1.5550000000974507e-06, 1.5700000000062886e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.598000000102573e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5689999999235482e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.6250000001161169e-06, 1.5689999999235482e-06, 1.5700000000062886e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5550000000974507e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5689999999235482e-06, 1.5700000000062886e-06]</msg>
<status status="PASS" starttime="20201030 15:52:15.780" endtime="20201030 15:52:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.775" endtime="20201030 15:52:15.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:15.787" endtime="20201030 15:52:15.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.785" endtime="20201030 15:52:15.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.783" endtime="20201030 15:52:15.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.392" endtime="20201030 15:52:15.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.391" endtime="20201030 15:52:15.807"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.815" endtime="20201030 15:52:15.828"></status>
</kw>
<msg timestamp="20201030 15:52:15.829" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.814" endtime="20201030 15:52:15.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:15.831" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:15.830" endtime="20201030 15:52:15.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.832" endtime="20201030 15:52:15.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.811" endtime="20201030 15:52:15.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.810" endtime="20201030 15:52:15.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:15.841" endtime="20201030 15:52:16.130"></status>
</kw>
<msg timestamp="20201030 15:52:16.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:15.839" endtime="20201030 15:52:16.134"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017858028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017859569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.135" endtime="20201030 15:52:16.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.143" endtime="20201030 15:52:16.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.837" endtime="20201030 15:52:16.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.835" endtime="20201030 15:52:16.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.149" level="INFO">${RESULT} = [{'diff': 1.5409999999972668e-06}, {'diff': 1.5979999999984895e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201030 15:52:16.146" endtime="20201030 15:52:16.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:16.154" level="INFO">${OVERHEAD} = {'diff': [1.5409999999972668e-06, 1.5979999999984895e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.150" endtime="20201030 15:52:16.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.158" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:16.157" endtime="20201030 15:52:16.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.161" level="INFO">VALUE: [1.5409999999972668e-06, 1.5979999999984895e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.5419999999967404e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5970000000024853e-06, 1.5550000000003061e-06, 1.5690000000033455e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:16.160" endtime="20201030 15:52:16.162"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.155" endtime="20201030 15:52:16.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.166" endtime="20201030 15:52:16.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.164" endtime="20201030 15:52:16.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.163" endtime="20201030 15:52:16.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.808" endtime="20201030 15:52:16.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:15.808" endtime="20201030 15:52:16.187"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.195" endtime="20201030 15:52:16.206"></status>
</kw>
<msg timestamp="20201030 15:52:16.207" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.193" endtime="20201030 15:52:16.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.209" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.208" endtime="20201030 15:52:16.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.210" endtime="20201030 15:52:16.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.191" endtime="20201030 15:52:16.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.189" endtime="20201030 15:52:16.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.219" endtime="20201030 15:52:16.508"></status>
</kw>
<msg timestamp="20201030 15:52:16.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.217" endtime="20201030 15:52:16.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017891556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017893125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:16.513" endtime="20201030 15:52:16.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.524" endtime="20201030 15:52:16.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.215" endtime="20201030 15:52:16.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.213" endtime="20201030 15:52:16.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.534" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5409999999972668e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5699999999993497e-0...</msg>
<status status="PASS" starttime="20201030 15:52:16.531" endtime="20201030 15:52:16.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:16.538" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.5550000000003061e-06, 1.5409999999972668e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.535" endtime="20201030 15:52:16.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.543" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:16.542" endtime="20201030 15:52:16.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.545" level="INFO">VALUE: [1.568999999999876e-06, 1.5550000000003061e-06, 1.5409999999972668e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5560000000032492e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.639000000001195e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:16.544" endtime="20201030 15:52:16.546"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.539" endtime="20201030 15:52:16.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.550" endtime="20201030 15:52:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.549" endtime="20201030 15:52:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.547" endtime="20201030 15:52:16.570"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.188" endtime="20201030 15:52:16.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.187" endtime="20201030 15:52:16.571"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.579" endtime="20201030 15:52:16.591"></status>
</kw>
<msg timestamp="20201030 15:52:16.592" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.577" endtime="20201030 15:52:16.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.594" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.593" endtime="20201030 15:52:16.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.595" endtime="20201030 15:52:16.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.575" endtime="20201030 15:52:16.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.573" endtime="20201030 15:52:16.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.605" endtime="20201030 15:52:16.887"></status>
</kw>
<msg timestamp="20201030 15:52:16.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:16.604" endtime="20201030 15:52:16.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0181385, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018140042, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:16.892" endtime="20201030 15:52:16.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.903" endtime="20201030 15:52:16.907"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.601" endtime="20201030 15:52:16.908"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.599" endtime="20201030 15:52:16.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:16.918" level="INFO">${RESULT} = [{'diff': 1.5420000000002099e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06...</msg>
<status status="PASS" starttime="20201030 15:52:16.911" endtime="20201030 15:52:16.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:16.927" level="INFO">${OVERHEAD} = {'diff': [1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:16.920" endtime="20201030 15:52:16.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.935" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:16.933" endtime="20201030 15:52:16.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:16.941" level="INFO">VALUE: [1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5979999999984895e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5560000000032492e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5560000000032492e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5409999999972668e-06, 1.51400000000107e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.5130000000015964e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201030 15:52:16.938" endtime="20201030 15:52:16.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.929" endtime="20201030 15:52:16.949"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:16.957" endtime="20201030 15:52:16.978"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.953" endtime="20201030 15:52:16.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.951" endtime="20201030 15:52:16.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.572" endtime="20201030 15:52:16.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.571" endtime="20201030 15:52:16.981"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:16.998" endtime="20201030 15:52:17.010"></status>
</kw>
<msg timestamp="20201030 15:52:17.011" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:16.995" endtime="20201030 15:52:17.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.013" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.012" endtime="20201030 15:52:17.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.014" endtime="20201030 15:52:17.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.989" endtime="20201030 15:52:17.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.985" endtime="20201030 15:52:17.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.023" endtime="20201030 15:52:17.309"></status>
</kw>
<msg timestamp="20201030 15:52:17.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03024375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030245319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:17.022" endtime="20201030 15:52:17.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03024375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030245319, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:17.313" endtime="20201030 15:52:17.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.322" endtime="20201030 15:52:17.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.019" endtime="20201030 15:52:17.324"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.017" endtime="20201030 15:52:17.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.328" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.52800000000064e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:17.325" endtime="20201030 15:52:17.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:17.333" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.542...</msg>
<status status="PASS" starttime="20201030 15:52:17.329" endtime="20201030 15:52:17.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.338" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:17.337" endtime="20201030 15:52:17.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.340" level="INFO">VALUE: [1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.5560000000032492e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.4999999999980307e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:17.339" endtime="20201030 15:52:17.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.334" endtime="20201030 15:52:17.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.345" endtime="20201030 15:52:17.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.344" endtime="20201030 15:52:17.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.342" endtime="20201030 15:52:17.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.983" endtime="20201030 15:52:17.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:16.982" endtime="20201030 15:52:17.366"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.374" endtime="20201030 15:52:17.386"></status>
</kw>
<msg timestamp="20201030 15:52:17.387" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.372" endtime="20201030 15:52:17.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.389" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.388" endtime="20201030 15:52:17.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.390" endtime="20201030 15:52:17.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.370" endtime="20201030 15:52:17.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.368" endtime="20201030 15:52:17.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.399" endtime="20201030 15:52:17.683"></status>
</kw>
<msg timestamp="20201030 15:52:17.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.398" endtime="20201030 15:52:17.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018049069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018050667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.688" endtime="20201030 15:52:17.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.696" endtime="20201030 15:52:17.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.395" endtime="20201030 15:52:17.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.393" endtime="20201030 15:52:17.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:17.703" level="INFO">${RESULT} = [{'diff': 1.5979999999984895e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5560000000032492e-06}, {'diff': 1.582999999999446e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 15:52:17.700" endtime="20201030 15:52:17.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:17.708" level="INFO">${OVERHEAD} = {'diff': [1.5979999999984895e-06, 1.5699999999993497e-06, 1.5560000000032492e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, ...</msg>
<status status="PASS" starttime="20201030 15:52:17.704" endtime="20201030 15:52:17.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.712" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:17.711" endtime="20201030 15:52:17.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.714" level="INFO">VALUE: [1.5979999999984895e-06, 1.5699999999993497e-06, 1.5560000000032492e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.5560000000032492e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5560000000032492e-06, 1.5409999999972668e-06, 1.4999999999980307e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5139999999976006e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5700000000028191e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:17.713" endtime="20201030 15:52:17.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.709" endtime="20201030 15:52:17.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:17.719" endtime="20201030 15:52:17.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.718" endtime="20201030 15:52:17.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.717" endtime="20201030 15:52:17.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.367" endtime="20201030 15:52:17.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.366" endtime="20201030 15:52:17.740"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.748" endtime="20201030 15:52:17.761"></status>
</kw>
<msg timestamp="20201030 15:52:17.761" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.747" endtime="20201030 15:52:17.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:17.764" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:17.762" endtime="20201030 15:52:17.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.765" endtime="20201030 15:52:17.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.744" endtime="20201030 15:52:17.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.742" endtime="20201030 15:52:17.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:17.775" endtime="20201030 15:52:18.055"></status>
</kw>
<msg timestamp="20201030 15:52:18.059" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018158708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018160278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:17.773" endtime="20201030 15:52:18.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018158708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018160278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.060" endtime="20201030 15:52:18.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.068" endtime="20201030 15:52:18.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.771" endtime="20201030 15:52:18.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.769" endtime="20201030 15:52:18.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.075" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5279999999971705e-06}, {'diff': 1.4860000000019302e-0...</msg>
<status status="PASS" starttime="20201030 15:52:18.072" endtime="20201030 15:52:18.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:18.079" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.4860000000019302e-06, 1.5549999999968367e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:18.076" endtime="20201030 15:52:18.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.083" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:18.082" endtime="20201030 15:52:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.086" level="INFO">VALUE: [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.4860000000019302e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5269999999976969e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5410000000007362e-06, 1.582999999999446e-06, 1.5139999999976006e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5560000000032492e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.598000000001959e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.5970000000024853e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06]</msg>
<status status="PASS" starttime="20201030 15:52:18.084" endtime="20201030 15:52:18.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.080" endtime="20201030 15:52:18.088"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.092" endtime="20201030 15:52:18.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.090" endtime="20201030 15:52:18.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.089" endtime="20201030 15:52:18.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.741" endtime="20201030 15:52:18.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:17.741" endtime="20201030 15:52:18.112"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.121" endtime="20201030 15:52:18.132"></status>
</kw>
<msg timestamp="20201030 15:52:18.132" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.119" endtime="20201030 15:52:18.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.135" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.133" endtime="20201030 15:52:18.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.136" endtime="20201030 15:52:18.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.116" endtime="20201030 15:52:18.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.115" endtime="20201030 15:52:18.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.145" endtime="20201030 15:52:18.425"></status>
</kw>
<msg timestamp="20201030 15:52:18.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.143" endtime="20201030 15:52:18.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018190917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018192417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.430" endtime="20201030 15:52:18.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.438" endtime="20201030 15:52:18.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.141" endtime="20201030 15:52:18.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.139" endtime="20201030 15:52:18.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.444" level="INFO">${RESULT} = [{'diff': 1.4999999999980307e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.6109999999985858e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 15:52:18.441" endtime="20201030 15:52:18.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:18.449" level="INFO">${OVERHEAD} = {'diff': [1.4999999999980307e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:18.445" endtime="20201030 15:52:18.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.454" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:18.453" endtime="20201030 15:52:18.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.456" level="INFO">VALUE: [1.4999999999980307e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5549999999968367e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.512999999998127e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5839999999989196e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5560000000032492e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.598000000001959e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.584000000002389e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.6120000000015289e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:52:18.455" endtime="20201030 15:52:18.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.450" endtime="20201030 15:52:18.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.461" endtime="20201030 15:52:18.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.460" endtime="20201030 15:52:18.481"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.459" endtime="20201030 15:52:18.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.113" endtime="20201030 15:52:18.482"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.113" endtime="20201030 15:52:18.482"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.490" endtime="20201030 15:52:18.502"></status>
</kw>
<msg timestamp="20201030 15:52:18.503" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.489" endtime="20201030 15:52:18.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.504" endtime="20201030 15:52:18.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.506" endtime="20201030 15:52:18.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.486" endtime="20201030 15:52:18.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.484" endtime="20201030 15:52:18.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.515" endtime="20201030 15:52:18.801"></status>
</kw>
<msg timestamp="20201030 15:52:18.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018002375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.514" endtime="20201030 15:52:18.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018000806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018002375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.805" endtime="20201030 15:52:18.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.813" endtime="20201030 15:52:18.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.511" endtime="20201030 15:52:18.816"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.509" endtime="20201030 15:52:18.817"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:18.821" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.584000000002389e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5699999999993497e-06}, {'diff': 1.5699999999993497e-06...</msg>
<status status="PASS" starttime="20201030 15:52:18.817" endtime="20201030 15:52:18.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:18.825" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.5559999999997798e-06, 1.584000000002389e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:52:18.822" endtime="20201030 15:52:18.825"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.829" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:18.828" endtime="20201030 15:52:18.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.832" level="INFO">VALUE: [1.568999999999876e-06, 1.5559999999997798e-06, 1.584000000002389e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5970000000024853e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5560000000032492e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:52:18.830" endtime="20201030 15:52:18.832"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.826" endtime="20201030 15:52:18.833"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:18.837" endtime="20201030 15:52:18.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.835" endtime="20201030 15:52:18.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.834" endtime="20201030 15:52:18.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.483" endtime="20201030 15:52:18.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.482" endtime="20201030 15:52:18.858"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.866" endtime="20201030 15:52:18.877"></status>
</kw>
<msg timestamp="20201030 15:52:18.877" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.864" endtime="20201030 15:52:18.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:18.879" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:18.878" endtime="20201030 15:52:18.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.881" endtime="20201030 15:52:18.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.861" endtime="20201030 15:52:18.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.860" endtime="20201030 15:52:18.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:18.891" endtime="20201030 15:52:19.170"></status>
</kw>
<msg timestamp="20201030 15:52:19.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018214278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:18.889" endtime="20201030 15:52:19.174"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018212694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018214278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.175" endtime="20201030 15:52:19.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.183" endtime="20201030 15:52:19.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.886" endtime="20201030 15:52:19.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.885" endtime="20201030 15:52:19.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.189" level="INFO">${RESULT} = [{'diff': 1.5839999999989196e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 15:52:19.186" endtime="20201030 15:52:19.190"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:19.194" level="INFO">${OVERHEAD} = {'diff': [1.5839999999989196e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.6380000000017214e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:19.190" endtime="20201030 15:52:19.194"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.198" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:19.197" endtime="20201030 15:52:19.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.200" level="INFO">VALUE: [1.5839999999989196e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5700000000028191e-06, 1.6380000000017214e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.584000000002389e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.51400000000107e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5560000000032492e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5979999999984895e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5830000000029154e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5549999999968367e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5560000000032492e-06]</msg>
<status status="PASS" starttime="20201030 15:52:19.199" endtime="20201030 15:52:19.202"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.195" endtime="20201030 15:52:19.202"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.206" endtime="20201030 15:52:19.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.205" endtime="20201030 15:52:19.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.203" endtime="20201030 15:52:19.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.858" endtime="20201030 15:52:19.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:18.858" endtime="20201030 15:52:19.227"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.235" endtime="20201030 15:52:19.246"></status>
</kw>
<msg timestamp="20201030 15:52:19.247" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.233" endtime="20201030 15:52:19.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.248" endtime="20201030 15:52:19.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.250" endtime="20201030 15:52:19.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.231" endtime="20201030 15:52:19.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.229" endtime="20201030 15:52:19.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.259" endtime="20201030 15:52:19.550"></status>
</kw>
<msg timestamp="20201030 15:52:19.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017982986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017984542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.258" endtime="20201030 15:52:19.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017982986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017984542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.554" endtime="20201030 15:52:19.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.563" endtime="20201030 15:52:19.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.255" endtime="20201030 15:52:19.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.253" endtime="20201030 15:52:19.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.569" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.582999999999446e-06}, {'diff': 1.4999999999980307e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.6250000000016251e-06}...</msg>
<status status="PASS" starttime="20201030 15:52:19.566" endtime="20201030 15:52:19.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:19.574" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.582999999999446e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.6250000000016251e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:52:19.570" endtime="20201030 15:52:19.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.579" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:19.578" endtime="20201030 15:52:19.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.581" level="INFO">VALUE: [1.5559999999997798e-06, 1.582999999999446e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.6250000000016251e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5700000000028191e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5409999999972668e-06, 1.5559999999997798e-06, 1.582999999999446e-06, 1.5839999999989196e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.5419999999967404e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5979999999984895e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5560000000032492e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.582999999999446e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5839999999989196e-06]</msg>
<status status="PASS" starttime="20201030 15:52:19.580" endtime="20201030 15:52:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.575" endtime="20201030 15:52:19.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.586" endtime="20201030 15:52:19.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.585" endtime="20201030 15:52:19.606"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.583" endtime="20201030 15:52:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.228" endtime="20201030 15:52:19.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.227" endtime="20201030 15:52:19.607"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.615" endtime="20201030 15:52:19.626"></status>
</kw>
<msg timestamp="20201030 15:52:19.627" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.613" endtime="20201030 15:52:19.627"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.629" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:19.628" endtime="20201030 15:52:19.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.630" endtime="20201030 15:52:19.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.611" endtime="20201030 15:52:19.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.609" endtime="20201030 15:52:19.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.639" endtime="20201030 15:52:19.942"></status>
</kw>
<msg timestamp="20201030 15:52:19.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017965819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.638" endtime="20201030 15:52:19.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017965819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:19.946" endtime="20201030 15:52:19.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:19.954" endtime="20201030 15:52:19.956"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.635" endtime="20201030 15:52:19.957"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.633" endtime="20201030 15:52:19.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:19.961" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5550000000003061e-...</msg>
<status status="PASS" starttime="20201030 15:52:19.958" endtime="20201030 15:52:19.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:19.966" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:19.962" endtime="20201030 15:52:19.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.970" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:19.969" endtime="20201030 15:52:19.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:19.972" level="INFO">VALUE: [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5549999999968367e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5549999999968367e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201030 15:52:19.971" endtime="20201030 15:52:19.973"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.967" endtime="20201030 15:52:19.974"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:19.977" endtime="20201030 15:52:19.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.976" endtime="20201030 15:52:19.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.974" endtime="20201030 15:52:19.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.608" endtime="20201030 15:52:19.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.607" endtime="20201030 15:52:19.998"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.006" endtime="20201030 15:52:20.018"></status>
</kw>
<msg timestamp="20201030 15:52:20.019" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.004" endtime="20201030 15:52:20.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.021" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.020" endtime="20201030 15:52:20.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.022" endtime="20201030 15:52:20.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.002" endtime="20201030 15:52:20.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.000" endtime="20201030 15:52:20.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.032" endtime="20201030 15:52:20.317"></status>
</kw>
<msg timestamp="20201030 15:52:20.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.030" endtime="20201030 15:52:20.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017992125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017993694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.322" endtime="20201030 15:52:20.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.330" endtime="20201030 15:52:20.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.028" endtime="20201030 15:52:20.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.026" endtime="20201030 15:52:20.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.336" level="INFO">${RESULT} = [{'diff': 1.568999999999876e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5969999999990159e-0...</msg>
<status status="PASS" starttime="20201030 15:52:20.333" endtime="20201030 15:52:20.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:20.340" level="INFO">${OVERHEAD} = {'diff': [1.568999999999876e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5270000000011663e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:20.337" endtime="20201030 15:52:20.341"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.345" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:20.344" endtime="20201030 15:52:20.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.347" level="INFO">VALUE: [1.568999999999876e-06, 1.5000000000015001e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.582999999999446e-06, 1.5699999999993497e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.6109999999985858e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5970000000024853e-06, 1.5970000000024853e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.598000000001959e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5969999999990159e-06, 1.5699999999993497e-06, 1.5699999999993497e-06, 1.5409999999972668e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06]</msg>
<status status="PASS" starttime="20201030 15:52:20.346" endtime="20201030 15:52:20.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.341" endtime="20201030 15:52:20.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.360" endtime="20201030 15:52:20.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.358" endtime="20201030 15:52:20.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.357" endtime="20201030 15:52:20.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.999" endtime="20201030 15:52:20.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:19.998" endtime="20201030 15:52:20.380"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.388" endtime="20201030 15:52:20.401"></status>
</kw>
<msg timestamp="20201030 15:52:20.401" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.387" endtime="20201030 15:52:20.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.404" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.402" endtime="20201030 15:52:20.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.405" endtime="20201030 15:52:20.406"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.384" endtime="20201030 15:52:20.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.382" endtime="20201030 15:52:20.407"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.414" endtime="20201030 15:52:20.703"></status>
</kw>
<msg timestamp="20201030 15:52:20.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017888542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.412" endtime="20201030 15:52:20.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017888542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.707" endtime="20201030 15:52:20.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.715" endtime="20201030 15:52:20.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.410" endtime="20201030 15:52:20.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.408" endtime="20201030 15:52:20.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:20.721" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5550000000003061e-06}...</msg>
<status status="PASS" starttime="20201030 15:52:20.718" endtime="20201030 15:52:20.722"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:20.726" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:52:20.722" endtime="20201030 15:52:20.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.730" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:20.729" endtime="20201030 15:52:20.731"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.733" level="INFO">VALUE: [1.5699999999993497e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5969999999990159e-06, 1.5000000000015001e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.6389999999977256e-06, 1.5279999999971705e-06, 1.5410000000007362e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 15:52:20.731" endtime="20201030 15:52:20.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.727" endtime="20201030 15:52:20.734"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:20.738" endtime="20201030 15:52:20.757"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.736" endtime="20201030 15:52:20.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.735" endtime="20201030 15:52:20.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.381" endtime="20201030 15:52:20.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.381" endtime="20201030 15:52:20.759"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.766" endtime="20201030 15:52:20.778"></status>
</kw>
<msg timestamp="20201030 15:52:20.779" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.765" endtime="20201030 15:52:20.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:20.781" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:20.780" endtime="20201030 15:52:20.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.782" endtime="20201030 15:52:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.762" endtime="20201030 15:52:20.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.761" endtime="20201030 15:52:20.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:20.791" endtime="20201030 15:52:21.080"></status>
</kw>
<msg timestamp="20201030 15:52:21.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:20.790" endtime="20201030 15:52:21.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017917583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:21.084" endtime="20201030 15:52:21.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.092" endtime="20201030 15:52:21.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.787" endtime="20201030 15:52:21.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.785" endtime="20201030 15:52:21.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.100" level="INFO">${RESULT} = [{'diff': 1.5410000000007362e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5830000000029154e-06}, {'diff': 1.5839999999989196e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5420000000002099e-0...</msg>
<status status="PASS" starttime="20201030 15:52:21.097" endtime="20201030 15:52:21.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:21.105" level="INFO">${OVERHEAD} = {'diff': [1.5410000000007362e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5549999999968367e-06, 1.5699999999993497e-06,...</msg>
<status status="PASS" starttime="20201030 15:52:21.101" endtime="20201030 15:52:21.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.109" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:21.108" endtime="20201030 15:52:21.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.111" level="INFO">VALUE: [1.5410000000007362e-06, 1.5550000000003061e-06, 1.5830000000029154e-06, 1.5839999999989196e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.5549999999968367e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5560000000032492e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.6119999999980594e-06, 1.5420000000002099e-06, 1.5969999999990159e-06, 1.5560000000032492e-06, 1.5550000000003061e-06, 1.5139999999976006e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.5559999999997798e-06, 1.584000000002389e-06, 1.5550000000003061e-06, 1.5699999999993497e-06]</msg>
<status status="PASS" starttime="20201030 15:52:21.110" endtime="20201030 15:52:21.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.106" endtime="20201030 15:52:21.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.116" endtime="20201030 15:52:21.136"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.115" endtime="20201030 15:52:21.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.114" endtime="20201030 15:52:21.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.759" endtime="20201030 15:52:21.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:20.759" endtime="20201030 15:52:21.137"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.145" endtime="20201030 15:52:21.158"></status>
</kw>
<msg timestamp="20201030 15:52:21.159" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.143" endtime="20201030 15:52:21.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.161" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.160" endtime="20201030 15:52:21.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.162" endtime="20201030 15:52:21.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.141" endtime="20201030 15:52:21.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.139" endtime="20201030 15:52:21.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.172" endtime="20201030 15:52:21.462"></status>
</kw>
<msg timestamp="20201030 15:52:21.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:21.170" endtime="20201030 15:52:21.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0188095, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018811056, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:52:21.466" endtime="20201030 15:52:21.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.474" endtime="20201030 15:52:21.476"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.168" endtime="20201030 15:52:21.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.166" endtime="20201030 15:52:21.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:21.481" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.5839999999989196e-06}, {'diff': 1.6120000000015289e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.582999999999446e-06...</msg>
<status status="PASS" starttime="20201030 15:52:21.478" endtime="20201030 15:52:21.481"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:21.485" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.5839999999989196e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1...</msg>
<status status="PASS" starttime="20201030 15:52:21.482" endtime="20201030 15:52:21.485"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.489" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 15:52:21.488" endtime="20201030 15:52:21.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:21.492" level="INFO">VALUE: [1.5559999999997798e-06, 1.5839999999989196e-06, 1.6120000000015289e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.582999999999446e-06, 1.568999999999876e-06, 1.5410000000007362e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5420000000002099e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.568999999999876e-06, 1.568999999999876e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5699999999993497e-06, 1.568999999999876e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.568999999999876e-06, 1.5549999999968367e-06, 1.5699999999993497e-06, 1.5550000000003061e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.5699999999993497e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5969999999990159e-06, 1.5700000000028191e-06, 1.5559999999997798e-06, 1.568999999999876e-06]</msg>
<status status="PASS" starttime="20201030 15:52:21.490" endtime="20201030 15:52:21.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.486" endtime="20201030 15:52:21.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.497" endtime="20201030 15:52:21.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.496" endtime="20201030 15:52:21.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.495" endtime="20201030 15:52:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.138" endtime="20201030 15:52:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.138" endtime="20201030 15:52:21.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:12.865" endtime="20201030 15:52:21.518"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:09.752" endtime="20201030 15:52:21.519" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:21.525" endtime="20201030 15:52:21.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.524" endtime="20201030 15:52:21.545"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:21.558" endtime="20201030 15:52:24.579"></status>
</kw>
<msg timestamp="20201030 15:52:24.580" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:21.557" endtime="20201030 15:52:24.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.585" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.582" endtime="20201030 15:52:24.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.591" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:24.587" endtime="20201030 15:52:24.592"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:21.554" endtime="20201030 15:52:24.593"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:21.552" endtime="20201030 15:52:24.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.551" endtime="20201030 15:52:24.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:24.603" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:24.601" endtime="20201030 15:52:24.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.597" endtime="20201030 15:52:24.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.550" endtime="20201030 15:52:24.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.549" endtime="20201030 15:52:24.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.606" endtime="20201030 15:52:24.609"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.548" endtime="20201030 15:52:24.610"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.546" endtime="20201030 15:52:24.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:21.523" endtime="20201030 15:52:24.612"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.627" endtime="20201030 15:52:24.647"></status>
</kw>
<msg timestamp="20201030 15:52:24.648" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.626" endtime="20201030 15:52:24.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.650" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:24.649" endtime="20201030 15:52:24.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.652" endtime="20201030 15:52:24.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.620" endtime="20201030 15:52:24.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.616" endtime="20201030 15:52:24.654"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.656" endtime="20201030 15:52:24.658"></status>
</kw>
<msg timestamp="20201030 15:52:24.658" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:24.655" endtime="20201030 15:52:24.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.662" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:24.661" endtime="20201030 15:52:24.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.664" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:24.663" endtime="20201030 15:52:24.665"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.659" endtime="20201030 15:52:24.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.669" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:24.668" endtime="20201030 15:52:24.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.671" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:24.670" endtime="20201030 15:52:24.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.666" endtime="20201030 15:52:24.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.678" endtime="20201030 15:52:24.970"></status>
</kw>
<msg timestamp="20201030 15:52:24.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.092917014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.092921931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.677" endtime="20201030 15:52:24.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.981" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.092917014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.092921931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:24.974" endtime="20201030 15:52:24.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:24.982" endtime="20201030 15:52:24.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.674" endtime="20201030 15:52:24.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.672" endtime="20201030 15:52:24.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:24.988" level="INFO">${RESULT} = [{'diff': 4.916999999604599e-06}, {'diff': 5.041000000094442e-06}, {'diff': 5.000000000254801e-06}, {'diff': 5.027999999906996e-06}, {'diff': 5.124999999939206e-06}, {'diff': 5.0420000001771825e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:52:24.985" endtime="20201030 15:52:24.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:24.993" level="INFO">${OVERHEAD} = {'diff': [4.916999999604599e-06, 5.041000000094442e-06, 5.000000000254801e-06, 5.027999999906996e-06, 5.124999999939206e-06, 5.0420000001771825e-06, 5.014000000080898e-06, 5.0420000001771825e-06, 5.04...</msg>
<status status="PASS" starttime="20201030 15:52:24.989" endtime="20201030 15:52:24.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:24.998" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 15:52:24.997" endtime="20201030 15:52:24.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:25.000" level="INFO">VALUE: [4.916999999604599e-06, 5.041000000094442e-06, 5.000000000254801e-06, 5.027999999906996e-06, 5.124999999939206e-06, 5.0420000001771825e-06, 5.014000000080898e-06, 5.0420000001771825e-06, 5.041000000094442e-06, 5.041000000094442e-06, 5.0420000001771825e-06, 5.041999999733093e-06, 5.0420000001771825e-06, 5.000000000254801e-06, 5.000000000254801e-06, 5.069999999829378e-06, 5.028000000351085e-06, 5.014000000080898e-06, 5.05600000000328e-06, 5.041000000094442e-06, 5.0420000001771825e-06, 5.111000000113108e-06, 5.041000000094442e-06, 5.027999999906996e-06, 5.041999999733093e-06, 5.05600000000328e-06, 5.041000000094442e-06, 5.014000000080898e-06, 5.041000000094442e-06, 5.012999999998158e-06, 5.000000000254801e-06, 4.9729999997971674e-06, 5.027000000268345e-06, 5.041000000094442e-06, 5.05499999992054e-06, 5.027000000268345e-06, 5.041999999733093e-06, 5.041999999733093e-06, 5.05600000000328e-06, 5.013999999636809e-06, 5.041000000094442e-06, 5.027999999906996e-06, 4.985999999984614e-06, 5.026999999824255e-06, 5.026999999824255e-06, 5.068999999746637e-06, 5.0420000001771825e-06, 5.027999999906996e-06, 5.014000000080898e-06, 4.999999999810711e-06]</msg>
<status status="PASS" starttime="20201030 15:52:24.999" endtime="20201030 15:52:25.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.994" endtime="20201030 15:52:25.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.005" endtime="20201030 15:52:25.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.004" endtime="20201030 15:52:25.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.003" endtime="20201030 15:52:25.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:24.613" endtime="20201030 15:52:25.026"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:21.520" endtime="20201030 15:52:25.026" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:25.033" endtime="20201030 15:52:25.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.032" endtime="20201030 15:52:25.053"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:25.066" endtime="20201030 15:52:28.087"></status>
</kw>
<msg timestamp="20201030 15:52:28.088" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:25.064" endtime="20201030 15:52:28.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.093" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.090" endtime="20201030 15:52:28.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.101" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:28.096" endtime="20201030 15:52:28.102"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:25.062" endtime="20201030 15:52:28.103"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:25.060" endtime="20201030 15:52:28.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.058" endtime="20201030 15:52:28.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:28.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:28.111" endtime="20201030 15:52:28.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.107" endtime="20201030 15:52:28.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.058" endtime="20201030 15:52:28.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.057" endtime="20201030 15:52:28.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.116" endtime="20201030 15:52:28.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.055" endtime="20201030 15:52:28.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.054" endtime="20201030 15:52:28.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:25.030" endtime="20201030 15:52:28.122"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.135" endtime="20201030 15:52:28.200"></status>
</kw>
<msg timestamp="20201030 15:52:28.201" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.133" endtime="20201030 15:52:28.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.203" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.202" endtime="20201030 15:52:28.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.205" endtime="20201030 15:52:28.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.130" endtime="20201030 15:52:28.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.126" endtime="20201030 15:52:28.207"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.209" endtime="20201030 15:52:28.211"></status>
</kw>
<msg timestamp="20201030 15:52:28.211" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:28.208" endtime="20201030 15:52:28.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.215" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:28.214" endtime="20201030 15:52:28.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.217" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:28.217" endtime="20201030 15:52:28.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.212" endtime="20201030 15:52:28.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.222" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:28.221" endtime="20201030 15:52:28.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.224" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:28.223" endtime="20201030 15:52:28.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.219" endtime="20201030 15:52:28.225"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.231" endtime="20201030 15:52:28.530"></status>
</kw>
<msg timestamp="20201030 15:52:28.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.092879403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.092912931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.230" endtime="20201030 15:52:28.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.092879403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.092912931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:28.534" endtime="20201030 15:52:28.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.542" endtime="20201030 15:52:28.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.227" endtime="20201030 15:52:28.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.226" endtime="20201030 15:52:28.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:28.549" level="INFO">${RESULT} = [{'diff': 3.3527999999893865e-05}, {'diff': 3.3624999999926075e-05}, {'diff': 3.354199999971996e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.3624999999926075e-05}...</msg>
<status status="PASS" starttime="20201030 15:52:28.546" endtime="20201030 15:52:28.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:28.553" level="INFO">${OVERHEAD} = {'diff': [3.3527999999893865e-05, 3.3624999999926075e-05, 3.354199999971996e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:52:28.550" endtime="20201030 15:52:28.553"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.558" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 15:52:28.557" endtime="20201030 15:52:28.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:28.560" level="INFO">VALUE: [3.3527999999893865e-05, 3.3624999999926075e-05, 3.354199999971996e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.361100000009998e-05, 3.3624999999926075e-05, 3.3625000000370164e-05, 3.358300000000369e-05, 3.361100000009998e-05, 3.356999999981625e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.363899999975217e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.363899999975217e-05, 3.359799999991253e-05, 3.359699999982979e-05, 3.363899999975217e-05, 3.363800000011352e-05, 3.3625000000370164e-05, 3.3624999999926075e-05, 3.3625000000370164e-05, 3.3624999999926075e-05, 3.361100000009998e-05, 3.3624999999926075e-05, 3.361100000009998e-05, 3.3624999999926075e-05, 3.363900000019626e-05, 3.3624999999926075e-05, 3.363899999975217e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.361100000009998e-05, 3.361100000009998e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.361100000009998e-05, 3.3624999999926075e-05, 3.355599999999015e-05, 3.363900000019626e-05, 3.3624999999926075e-05, 3.3624999999926075e-05, 3.361100000009998e-05, 3.3625000000370164e-05, 3.363899999975217e-05]</msg>
<status status="PASS" starttime="20201030 15:52:28.559" endtime="20201030 15:52:28.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.554" endtime="20201030 15:52:28.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.565" endtime="20201030 15:52:28.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.563" endtime="20201030 15:52:28.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.562" endtime="20201030 15:52:28.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.123" endtime="20201030 15:52:28.586"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:25.028" endtime="20201030 15:52:28.586" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:28.593" endtime="20201030 15:52:28.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.591" endtime="20201030 15:52:28.613"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:28.627" endtime="20201030 15:52:31.648"></status>
</kw>
<msg timestamp="20201030 15:52:31.649" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:28.625" endtime="20201030 15:52:31.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.654" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.651" endtime="20201030 15:52:31.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.661" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:31.657" endtime="20201030 15:52:31.661"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:28.623" endtime="20201030 15:52:31.662"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:28.620" endtime="20201030 15:52:31.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.619" endtime="20201030 15:52:31.664"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:31.672" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:31.670" endtime="20201030 15:52:31.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.666" endtime="20201030 15:52:31.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.618" endtime="20201030 15:52:31.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.617" endtime="20201030 15:52:31.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.675" endtime="20201030 15:52:31.678"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.615" endtime="20201030 15:52:31.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.614" endtime="20201030 15:52:31.680"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:28.590" endtime="20201030 15:52:31.681"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.696" endtime="20201030 15:52:31.891"></status>
</kw>
<msg timestamp="20201030 15:52:31.891" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.695" endtime="20201030 15:52:31.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.894" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:31.892" endtime="20201030 15:52:31.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.895" endtime="20201030 15:52:31.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.690" endtime="20201030 15:52:31.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.685" endtime="20201030 15:52:31.898"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.900" endtime="20201030 15:52:31.902"></status>
</kw>
<msg timestamp="20201030 15:52:31.902" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:31.899" endtime="20201030 15:52:31.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.906" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:31.905" endtime="20201030 15:52:31.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.908" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:31.907" endtime="20201030 15:52:31.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.903" endtime="20201030 15:52:31.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.914" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:31.913" endtime="20201030 15:52:31.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:31.916" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:31.915" endtime="20201030 15:52:31.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.911" endtime="20201030 15:52:31.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:31.923" endtime="20201030 15:52:32.225"></status>
</kw>
<msg timestamp="20201030 15:52:32.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098023681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098087569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:31.922" endtime="20201030 15:52:32.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098023681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098087569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:32.229" endtime="20201030 15:52:32.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.236" endtime="20201030 15:52:32.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.919" endtime="20201030 15:52:32.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.917" endtime="20201030 15:52:32.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:32.243" level="INFO">${RESULT} = [{'diff': 6.388800000012296e-05}, {'diff': 6.35419999999165e-05}, {'diff': 6.354099999983376e-05}, {'diff': 6.354100000027785e-05}, {'diff': 6.355600000018669e-05}, {'diff': 6.355600000018669e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:32.240" endtime="20201030 15:52:32.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:32.247" level="INFO">${OVERHEAD} = {'diff': [6.388800000012296e-05, 6.35419999999165e-05, 6.354099999983376e-05, 6.354100000027785e-05, 6.355600000018669e-05, 6.355600000018669e-05, 6.35559999997426e-05, 6.357000000001278e-05, 6.354099...</msg>
<status status="PASS" starttime="20201030 15:52:32.244" endtime="20201030 15:52:32.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.252" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 15:52:32.251" endtime="20201030 15:52:32.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:32.255" level="INFO">VALUE: [6.388800000012296e-05, 6.35419999999165e-05, 6.354099999983376e-05, 6.354100000027785e-05, 6.355600000018669e-05, 6.355600000018669e-05, 6.35559999997426e-05, 6.357000000001278e-05, 6.354099999983376e-05, 6.355499999965986e-05, 6.352700000000766e-05, 6.359700000002633e-05, 6.357000000001278e-05, 6.351399999982021e-05, 6.357000000001278e-05, 6.35559999997426e-05, 6.361099999985242e-05, 6.35419999999165e-05, 6.361199999993516e-05, 6.347199999989783e-05, 6.35140000002643e-05, 6.35280000000904e-05, 6.354200000036059e-05, 6.35419999999165e-05, 6.354100000027785e-05, 6.354200000036059e-05, 6.358299999975614e-05, 6.35419999999165e-05, 6.355600000018669e-05, 6.35419999999165e-05, 6.357000000001278e-05, 6.355600000018669e-05, 6.355500000010395e-05, 6.354100000027785e-05, 6.354099999983376e-05, 6.35419999999165e-05, 6.35559999997426e-05, 6.354099999983376e-05, 6.358299999975614e-05, 6.359700000002633e-05, 6.355500000010395e-05, 6.357000000001278e-05, 6.35559999997426e-05, 6.355600000018669e-05, 6.35280000000904e-05, 6.362499999967852e-05, 6.355600000018669e-05, 6.355600000018669e-05, 6.358300000020023e-05, 6.35419999999165e-05]</msg>
<status status="PASS" starttime="20201030 15:52:32.253" endtime="20201030 15:52:32.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.248" endtime="20201030 15:52:32.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.260" endtime="20201030 15:52:32.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.258" endtime="20201030 15:52:32.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.257" endtime="20201030 15:52:32.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:31.682" endtime="20201030 15:52:32.281"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:28.588" endtime="20201030 15:52:32.282" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:32.290" endtime="20201030 15:52:32.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.288" endtime="20201030 15:52:32.312"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:32.324" endtime="20201030 15:52:35.345"></status>
</kw>
<msg timestamp="20201030 15:52:35.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:32.323" endtime="20201030 15:52:35.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.351" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.348" endtime="20201030 15:52:35.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.357" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:35.353" endtime="20201030 15:52:35.358"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:32.320" endtime="20201030 15:52:35.359"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:32.318" endtime="20201030 15:52:35.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.317" endtime="20201030 15:52:35.361"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:35.369" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:35.367" endtime="20201030 15:52:35.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.363" endtime="20201030 15:52:35.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.316" endtime="20201030 15:52:35.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.315" endtime="20201030 15:52:35.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.372" endtime="20201030 15:52:35.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.314" endtime="20201030 15:52:35.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.312" endtime="20201030 15:52:35.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:32.287" endtime="20201030 15:52:35.378"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.402" endtime="20201030 15:52:35.427"></status>
</kw>
<msg timestamp="20201030 15:52:35.428" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.399" endtime="20201030 15:52:35.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.433" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.430" endtime="20201030 15:52:35.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.436" endtime="20201030 15:52:35.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.387" endtime="20201030 15:52:35.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.382" endtime="20201030 15:52:35.441"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.445" endtime="20201030 15:52:35.449"></status>
</kw>
<msg timestamp="20201030 15:52:35.450" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:35.443" endtime="20201030 15:52:35.450"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.458" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:35.456" endtime="20201030 15:52:35.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.462" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:35.460" endtime="20201030 15:52:35.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.451" endtime="20201030 15:52:35.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.468" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:35.467" endtime="20201030 15:52:35.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.470" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:35.469" endtime="20201030 15:52:35.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.464" endtime="20201030 15:52:35.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.478" endtime="20201030 15:52:35.775"></status>
</kw>
<msg timestamp="20201030 15:52:35.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10322925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103230556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:35.476" endtime="20201030 15:52:35.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10322925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103230556, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:35.779" endtime="20201030 15:52:35.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.787" endtime="20201030 15:52:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.473" endtime="20201030 15:52:35.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.471" endtime="20201030 15:52:35.790"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:35.793" level="INFO">${RESULT} = [{'diff': 1.3060000001452465e-06}, {'diff': 1.3340000002415309e-06}, {'diff': 1.2909999997923194e-06}, {'diff': 1.3200000004154333e-06}, {'diff': 1.2780000000489622e-06}, {'diff': 1.3189999998886037e-...</msg>
<status status="PASS" starttime="20201030 15:52:35.790" endtime="20201030 15:52:35.794"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:35.799" level="INFO">${OVERHEAD} = {'diff': [1.3060000001452465e-06, 1.3340000002415309e-06, 1.2909999997923194e-06, 1.3200000004154333e-06, 1.2780000000489622e-06, 1.3189999998886037e-06, 1.3060000001452465e-06, 1.2919999998750598e-06...</msg>
<status status="PASS" starttime="20201030 15:52:35.794" endtime="20201030 15:52:35.799"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.803" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 15:52:35.802" endtime="20201030 15:52:35.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:35.806" level="INFO">VALUE: [1.3060000001452465e-06, 1.3340000002415309e-06, 1.2909999997923194e-06, 1.3200000004154333e-06, 1.2780000000489622e-06, 1.3189999998886037e-06, 1.3060000001452465e-06, 1.2919999998750598e-06, 1.346999999984888e-06, 1.319999999971344e-06, 1.3189999998886037e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.3480000000676284e-06, 1.2909999997923194e-06, 1.3050000000625062e-06, 1.3060000001452465e-06, 1.2640000002228646e-06, 1.3060000001452465e-06, 1.2909999997923194e-06, 1.3330000001587905e-06, 1.2919999998750598e-06, 1.2919999998750598e-06, 1.304999999618417e-06, 1.2769999999662218e-06, 1.277999999604873e-06, 1.292000000319149e-06, 1.3060000001452465e-06, 1.3060000001452465e-06, 1.2910000002364086e-06, 1.3059999997011573e-06, 1.3060000001452465e-06, 1.3050000000625062e-06, 1.2499999999526779e-06, 1.304999999618417e-06, 1.319000000332693e-06, 1.3609999998109856e-06, 1.319000000332693e-06, 1.2780000000489622e-06, 1.319999999971344e-06, 1.2919999998750598e-06, 1.2909999997923194e-06, 1.3330000001587905e-06, 1.2919999998750598e-06, 1.3060000001452465e-06, 1.3059999997011573e-06, 1.2639999997787754e-06, 1.2919999998750598e-06, 1.346999999984888e-06, 1.3059999997011573e-06]</msg>
<status status="PASS" starttime="20201030 15:52:35.804" endtime="20201030 15:52:35.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.799" endtime="20201030 15:52:35.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.816" endtime="20201030 15:52:35.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.814" endtime="20201030 15:52:35.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.813" endtime="20201030 15:52:35.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.379" endtime="20201030 15:52:35.838"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:32.284" endtime="20201030 15:52:35.838" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:35.849" endtime="20201030 15:52:35.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.846" endtime="20201030 15:52:35.869"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:35.883" endtime="20201030 15:52:38.904"></status>
</kw>
<msg timestamp="20201030 15:52:38.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:35.881" endtime="20201030 15:52:38.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.910" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.907" endtime="20201030 15:52:38.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:38.916" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:38.912" endtime="20201030 15:52:38.917"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.878" endtime="20201030 15:52:38.918"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:35.876" endtime="20201030 15:52:38.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.875" endtime="20201030 15:52:38.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:38.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:38.926" endtime="20201030 15:52:38.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.922" endtime="20201030 15:52:38.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.874" endtime="20201030 15:52:38.929"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.873" endtime="20201030 15:52:38.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.931" endtime="20201030 15:52:38.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.872" endtime="20201030 15:52:38.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.870" endtime="20201030 15:52:38.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:35.845" endtime="20201030 15:52:38.937"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:38.954" endtime="20201030 15:52:39.026"></status>
</kw>
<msg timestamp="20201030 15:52:39.027" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:38.951" endtime="20201030 15:52:39.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.032" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.029" endtime="20201030 15:52:39.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.035" endtime="20201030 15:52:39.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.945" endtime="20201030 15:52:39.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.941" endtime="20201030 15:52:39.041"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.045" endtime="20201030 15:52:39.048"></status>
</kw>
<msg timestamp="20201030 15:52:39.049" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:39.042" endtime="20201030 15:52:39.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.058" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:39.055" endtime="20201030 15:52:39.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.062" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:39.060" endtime="20201030 15:52:39.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.051" endtime="20201030 15:52:39.064"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.071" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:39.069" endtime="20201030 15:52:39.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.076" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:39.074" endtime="20201030 15:52:39.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.065" endtime="20201030 15:52:39.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.091" endtime="20201030 15:52:39.395"></status>
</kw>
<msg timestamp="20201030 15:52:39.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098171583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098179889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.088" endtime="20201030 15:52:39.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098171583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098179889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:39.399" endtime="20201030 15:52:39.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.407" endtime="20201030 15:52:39.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.082" endtime="20201030 15:52:39.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.079" endtime="20201030 15:52:39.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:39.413" level="INFO">${RESULT} = [{'diff': 8.305999999791425e-06}, {'diff': 8.361000000345342e-06}, {'diff': 8.305999999791425e-06}, {'diff': 8.290999999882587e-06}, {'diff': 8.250000000042945e-06}, {'diff': 8.291999999965327e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:39.410" endtime="20201030 15:52:39.414"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:39.418" level="INFO">${OVERHEAD} = {'diff': [8.305999999791425e-06, 8.361000000345342e-06, 8.305999999791425e-06, 8.290999999882587e-06, 8.250000000042945e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.291000000326676e-06, 8.2919...</msg>
<status status="PASS" starttime="20201030 15:52:39.414" endtime="20201030 15:52:39.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.422" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 15:52:39.421" endtime="20201030 15:52:39.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:39.424" level="INFO">VALUE: [8.305999999791425e-06, 8.361000000345342e-06, 8.305999999791425e-06, 8.290999999882587e-06, 8.250000000042945e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.291000000326676e-06, 8.291999999965327e-06, 8.332999999804969e-06, 8.291000000326676e-06, 8.305000000152774e-06, 8.347000000075155e-06, 8.291999999965327e-06, 8.27799999969514e-06, 8.361999999983993e-06, 8.291000000326676e-06, 8.292000000409416e-06, 8.291999999965327e-06, 8.305000000152774e-06, 8.27800000013923e-06, 8.305000000152774e-06, 8.250000000042945e-06, 8.291999999965327e-06, 8.306000000235514e-06, 8.290999999882587e-06, 8.305999999791425e-06, 8.263999999869043e-06, 8.306000000235514e-06, 8.304999999708684e-06, 8.305000000152774e-06, 8.290999999882587e-06, 8.305000000152774e-06, 8.27800000013923e-06, 8.305000000152774e-06, 8.320000000061611e-06, 8.388999999997537e-06, 8.27800000013923e-06, 8.27800000013923e-06, 8.318999999978871e-06, 8.318999999978871e-06, 8.318999999978871e-06, 8.333999999887709e-06, 8.27700000005649e-06, 8.290999999882587e-06, 8.320000000061611e-06, 8.306000000235514e-06, 8.291999999965327e-06, 8.306000000235514e-06, 8.291000000326676e-06]</msg>
<status status="PASS" starttime="20201030 15:52:39.423" endtime="20201030 15:52:39.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.418" endtime="20201030 15:52:39.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.430" endtime="20201030 15:52:39.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.428" endtime="20201030 15:52:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.427" endtime="20201030 15:52:39.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:38.938" endtime="20201030 15:52:39.450"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:35.840" endtime="20201030 15:52:39.451" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:39.458" endtime="20201030 15:52:39.477"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.456" endtime="20201030 15:52:39.478"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:39.491" endtime="20201030 15:52:42.512"></status>
</kw>
<msg timestamp="20201030 15:52:42.513" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:39.490" endtime="20201030 15:52:42.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.519" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.516" endtime="20201030 15:52:42.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.525" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:42.521" endtime="20201030 15:52:42.525"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:39.487" endtime="20201030 15:52:42.527"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:39.485" endtime="20201030 15:52:42.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.484" endtime="20201030 15:52:42.529"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:42.536" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:42.535" endtime="20201030 15:52:42.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.531" endtime="20201030 15:52:42.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.483" endtime="20201030 15:52:42.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.481" endtime="20201030 15:52:42.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.540" endtime="20201030 15:52:42.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.480" endtime="20201030 15:52:42.544"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.478" endtime="20201030 15:52:42.545"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:39.455" endtime="20201030 15:52:42.545"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.563" endtime="20201030 15:52:42.758"></status>
</kw>
<msg timestamp="20201030 15:52:42.759" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.560" endtime="20201030 15:52:42.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.761" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:42.760" endtime="20201030 15:52:42.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.763" endtime="20201030 15:52:42.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.554" endtime="20201030 15:52:42.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.550" endtime="20201030 15:52:42.766"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.768" endtime="20201030 15:52:42.769"></status>
</kw>
<msg timestamp="20201030 15:52:42.770" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 15:52:42.766" endtime="20201030 15:52:42.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.774" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 15:52:42.773" endtime="20201030 15:52:42.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.776" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 15:52:42.775" endtime="20201030 15:52:42.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.771" endtime="20201030 15:52:42.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.782" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 15:52:42.780" endtime="20201030 15:52:42.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:42.784" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 15:52:42.783" endtime="20201030 15:52:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.777" endtime="20201030 15:52:42.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:42.791" endtime="20201030 15:52:43.094"></status>
</kw>
<msg timestamp="20201030 15:52:43.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100593139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:42.790" endtime="20201030 15:52:43.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.100577722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.100593139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:43.102" endtime="20201030 15:52:43.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.109" endtime="20201030 15:52:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.787" endtime="20201030 15:52:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.785" endtime="20201030 15:52:43.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:43.116" level="INFO">${RESULT} = [{'diff': 1.541699999974e-05}, {'diff': 1.5431000000010187e-05}, {'diff': 1.5431000000010187e-05}, {'diff': 1.5429999999927446e-05}, {'diff': 1.5444999999836284e-05}, {'diff': 1.5472000000293917e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:43.113" endtime="20201030 15:52:43.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 15:52:43.120" level="INFO">${OVERHEAD} = {'diff': [1.541699999974e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.5472000000293917e-05, 1.5431000000010187e-05, 1.5444000000197633e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:43.117" endtime="20201030 15:52:43.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.125" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 15:52:43.124" endtime="20201030 15:52:43.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:43.128" level="INFO">VALUE: [1.541699999974e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.5472000000293917e-05, 1.5431000000010187e-05, 1.5444000000197633e-05, 1.5499999999946112e-05, 1.5444000000197633e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5431000000010187e-05, 1.545800000002373e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.55140000002163e-05, 1.541599999965726e-05, 1.5499999999946112e-05, 1.5389000000087805e-05, 1.5444000000197633e-05, 1.545900000010647e-05, 1.5444000000197633e-05, 1.5444999999836284e-05, 1.5444999999836284e-05, 1.5444999999836284e-05, 1.5444000000197633e-05, 1.545800000002373e-05, 1.541699999974e-05, 1.5445000000280373e-05, 1.5445000000280373e-05, 1.5444999999836284e-05, 1.5444000000197633e-05, 1.5443999999753544e-05, 1.545900000010647e-05, 1.5429999999927446e-05, 1.5471999999849828e-05, 1.541700000018409e-05, 1.5429999999927446e-05, 1.5444000000197633e-05, 1.5471999999849828e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5443999999753544e-05, 1.5471999999849828e-05, 1.5443999999753544e-05, 1.5429999999927446e-05, 1.5431000000010187e-05]</msg>
<status status="PASS" starttime="20201030 15:52:43.126" endtime="20201030 15:52:43.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.121" endtime="20201030 15:52:43.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.133" endtime="20201030 15:52:43.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.132" endtime="20201030 15:52:43.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.130" endtime="20201030 15:52:43.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:42.547" endtime="20201030 15:52:43.154"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:39.452" endtime="20201030 15:52:43.154" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:43.161" endtime="20201030 15:52:43.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.160" endtime="20201030 15:52:43.181"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:43.194" endtime="20201030 15:52:46.215"></status>
</kw>
<msg timestamp="20201030 15:52:46.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:43.192" endtime="20201030 15:52:46.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.222" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:46.219" endtime="20201030 15:52:46.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.228" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:52:46.224" endtime="20201030 15:52:46.229"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:43.190" endtime="20201030 15:52:46.230"></status>
</kw>
<status status="FAIL" starttime="20201030 15:52:43.188" endtime="20201030 15:52:46.235"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.186" endtime="20201030 15:52:46.237"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:52:46.245" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:52:46.243" endtime="20201030 15:52:46.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.239" endtime="20201030 15:52:46.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.185" endtime="20201030 15:52:46.247"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.185" endtime="20201030 15:52:46.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:46.249" endtime="20201030 15:52:46.252"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.183" endtime="20201030 15:52:46.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.182" endtime="20201030 15:52:46.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:43.158" endtime="20201030 15:52:46.254"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:52:46.262" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:52:46.279" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:52:47.438" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:52:46.259" endtime="20201030 15:52:47.439"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.442" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:52:47.440" endtime="20201030 15:52:50.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:46.256" endtime="20201030 15:52:50.445"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.469" endtime="20201030 15:52:50.481"></status>
</kw>
<msg timestamp="20201030 15:52:50.482" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.465" endtime="20201030 15:52:50.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.487" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.484" endtime="20201030 15:52:50.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.490" endtime="20201030 15:52:50.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.459" endtime="20201030 15:52:50.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.454" endtime="20201030 15:52:50.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.509" endtime="20201030 15:52:50.817"></status>
</kw>
<msg timestamp="20201030 15:52:50.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.89290225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.219585444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.506" endtime="20201030 15:52:50.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.89290225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.219585444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:50.822" endtime="20201030 15:52:50.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.831" endtime="20201030 15:52:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.500" endtime="20201030 15:52:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.496" endtime="20201030 15:52:50.834"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:50.838" level="INFO">${PHILIP_RES} = [{'diff': 0.3266831939999997}, {'diff': 5.096999999842922e-06}, {'diff': 4.9579999998883295e-06}, {'diff': 4.986000000428703e-06}, {'diff': 4.986000000428703e-06}, {'diff': 4.985999999540525e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 15:52:50.834" endtime="20201030 15:52:50.838"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:50.843" level="INFO">${RESULT} = {'diff': [0.3266831939999997, 5.096999999842922e-06, 4.9579999998883295e-06, 4.986000000428703e-06, 4.986000000428703e-06, 4.985999999540525e-06, 4.972999999353078e-06, 4.986000000428703e-06, 4.985999...</msg>
<status status="PASS" starttime="20201030 15:52:50.839" endtime="20201030 15:52:50.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.847" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:50.846" endtime="20201030 15:52:50.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.850" level="INFO">VALUE: [0.3266831939999997, 5.096999999842922e-06, 4.9579999998883295e-06, 4.986000000428703e-06, 4.986000000428703e-06, 4.985999999540525e-06, 4.972999999353078e-06, 4.986000000428703e-06, 4.985999999540525e-06, 4.971999999270338e-06, 4.985999999540525e-06, 4.973000000241257e-06, 4.985999999540525e-06, 4.999999999810711e-06, 4.999999999810711e-06, 4.9579999998883295e-06, 5.014000000080898e-06, 4.986000000428703e-06, 4.999999999810711e-06, 4.9579999998883295e-06, 5.00000000069889e-06, 4.985999999540525e-06, 5.00000000069889e-06, 4.972000000158516e-06, 5.00000000069889e-06, 4.986000000428703e-06, 4.986000000428703e-06, 4.973000000241257e-06, 5.014000000080898e-06, 4.986000000428703e-06, 4.999999999810711e-06, 4.971999999270338e-06, 4.999999999810711e-06, 4.986000000428703e-06, 4.999999999810711e-06, 4.971999999270338e-06, 4.999999999810711e-06, 4.985999999540525e-06, 4.986999999623265e-06, 4.971999999270338e-06, 5.014000000080898e-06, 4.985999999540525e-06, 4.999999999810711e-06, 4.972000000158516e-06, 4.999999999810711e-06, 4.985999999540525e-06, 4.986000000428703e-06, 4.972000000158516e-06, 4.999999999810711e-06, 4.9870000005114434e-06, 4.986000000428703e-06]</msg>
<status status="PASS" starttime="20201030 15:52:50.848" endtime="20201030 15:52:50.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.844" endtime="20201030 15:52:50.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:50.854" endtime="20201030 15:52:50.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.853" endtime="20201030 15:52:50.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.852" endtime="20201030 15:52:50.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.448" endtime="20201030 15:52:50.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.447" endtime="20201030 15:52:50.875"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.884" endtime="20201030 15:52:50.895"></status>
</kw>
<msg timestamp="20201030 15:52:50.895" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.883" endtime="20201030 15:52:50.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:50.898" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:50.896" endtime="20201030 15:52:50.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.899" endtime="20201030 15:52:50.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.880" endtime="20201030 15:52:50.901"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.878" endtime="20201030 15:52:50.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:50.909" endtime="20201030 15:52:51.198"></status>
</kw>
<msg timestamp="20201030 15:52:51.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:50.907" endtime="20201030 15:52:51.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018467681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018477111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.202" endtime="20201030 15:52:51.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.211" endtime="20201030 15:52:51.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.904" endtime="20201030 15:52:51.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.902" endtime="20201030 15:52:51.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:51.217" level="INFO">${PHILIP_RES} = [{'diff': 9.430000000001243e-06}, {'diff': 9.389000000002007e-06}, {'diff': 9.319000000000688e-06}, {'diff': 9.304999999997648e-06}, {'diff': 9.319000000000688e-06}, {'diff': 9.333000000000258e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:52:51.214" endtime="20201030 15:52:51.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.223" level="INFO">${RESULT} = {'diff': [9.430000000001243e-06, 9.389000000002007e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.346999999999828e-06, 9.3200...</msg>
<status status="PASS" starttime="20201030 15:52:51.218" endtime="20201030 15:52:51.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.227" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:51.226" endtime="20201030 15:52:51.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.230" level="INFO">VALUE: [9.430000000001243e-06, 9.389000000002007e-06, 9.319000000000688e-06, 9.304999999997648e-06, 9.319000000000688e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.346999999999828e-06, 9.320000000000161e-06, 9.374999999998967e-06, 9.346999999999828e-06, 9.292000000001022e-06, 9.292000000001022e-06, 9.306000000000592e-06, 9.375000000002437e-06, 9.320000000000161e-06, 9.375000000002437e-06, 9.278000000001452e-06, 9.263999999998412e-06, 9.319000000000688e-06, 9.305999999997122e-06, 9.319000000000688e-06, 9.346999999999828e-06, 9.306000000000592e-06, 9.305000000001118e-06, 9.333000000000258e-06, 9.360999999999398e-06, 9.361000000002867e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.374999999998967e-06, 9.347000000003297e-06, 9.333000000000258e-06, 9.318999999997218e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.346999999999828e-06, 9.264000000001882e-06, 9.333999999999731e-06, 9.306000000000592e-06, 9.34800000000277e-06, 9.333999999999731e-06, 9.320000000000161e-06, 9.333999999999731e-06, 9.333000000000258e-06, 9.319000000000688e-06, 9.319000000000688e-06, 9.375000000002437e-06]</msg>
<status status="PASS" starttime="20201030 15:52:51.228" endtime="20201030 15:52:51.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.223" endtime="20201030 15:52:51.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.234" endtime="20201030 15:52:51.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.233" endtime="20201030 15:52:51.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.231" endtime="20201030 15:52:51.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.876" endtime="20201030 15:52:51.255"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.876" endtime="20201030 15:52:51.255"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.264" endtime="20201030 15:52:51.273"></status>
</kw>
<msg timestamp="20201030 15:52:51.273" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.262" endtime="20201030 15:52:51.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.275" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.274" endtime="20201030 15:52:51.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.277" endtime="20201030 15:52:51.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.260" endtime="20201030 15:52:51.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.258" endtime="20201030 15:52:51.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.286" endtime="20201030 15:52:51.574"></status>
</kw>
<msg timestamp="20201030 15:52:51.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018341486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.284" endtime="20201030 15:52:51.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018327139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018341486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.578" endtime="20201030 15:52:51.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.586" endtime="20201030 15:52:51.588"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.282" endtime="20201030 15:52:51.589"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.280" endtime="20201030 15:52:51.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:51.593" level="INFO">${PHILIP_RES} = [{'diff': 1.4347000000001359e-05}, {'diff': 1.4263999999999943e-05}, {'diff': 1.4263999999999943e-05}, {'diff': 1.431899999999875e-05}, {'diff': 1.426300000000047e-05}, {'diff': 1.4263999999999943e-05...</msg>
<status status="PASS" starttime="20201030 15:52:51.590" endtime="20201030 15:52:51.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.597" level="INFO">${RESULT} = {'diff': [1.4347000000001359e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.431899999999875e-05, 1.426300000000047e-05, 1.4263999999999943e-05, 1.4223000000000707e-05, 1.4263999999999943e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:51.594" endtime="20201030 15:52:51.598"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.602" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:51.601" endtime="20201030 15:52:51.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.604" level="INFO">VALUE: [1.4347000000001359e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.431899999999875e-05, 1.426300000000047e-05, 1.4263999999999943e-05, 1.4223000000000707e-05, 1.4263999999999943e-05, 1.427700000000004e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4249999999996904e-05, 1.4263999999999943e-05, 1.4222000000001234e-05, 1.4277999999999513e-05, 1.431899999999875e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4277999999999513e-05, 1.4250000000000373e-05, 1.4235999999997334e-05, 1.4263999999999943e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4334000000001262e-05, 1.4263999999999943e-05, 1.4320000000001692e-05, 1.4291999999999083e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.427700000000004e-05, 1.4221999999997764e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.427700000000004e-05, 1.4263999999999943e-05, 1.4236000000000804e-05, 1.4263999999999943e-05, 1.4208999999997668e-05, 1.4250000000000373e-05, 1.4263999999999943e-05, 1.4263999999999943e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.603" endtime="20201030 15:52:51.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.598" endtime="20201030 15:52:51.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.609" endtime="20201030 15:52:51.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.608" endtime="20201030 15:52:51.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.606" endtime="20201030 15:52:51.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.256" endtime="20201030 15:52:51.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.256" endtime="20201030 15:52:51.630"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.639" endtime="20201030 15:52:51.649"></status>
</kw>
<msg timestamp="20201030 15:52:51.649" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.637" endtime="20201030 15:52:51.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.652" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:51.650" endtime="20201030 15:52:51.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.653" endtime="20201030 15:52:51.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.634" endtime="20201030 15:52:51.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.632" endtime="20201030 15:52:51.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.662" endtime="20201030 15:52:51.948"></status>
</kw>
<msg timestamp="20201030 15:52:51.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.661" endtime="20201030 15:52:51.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018894833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018914778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:51.953" endtime="20201030 15:52:51.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:51.961" endtime="20201030 15:52:51.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.658" endtime="20201030 15:52:51.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.656" endtime="20201030 15:52:51.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:51.967" level="INFO">${PHILIP_RES} = [{'diff': 1.994500000000038e-05}, {'diff': 1.981900000000078e-05}, {'diff': 1.981899999999731e-05}, {'diff': 1.979099999999817e-05}, {'diff': 1.9820000000000254e-05}, {'diff': 1.9806000000000684e-05},...</msg>
<status status="PASS" starttime="20201030 15:52:51.964" endtime="20201030 15:52:51.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:51.972" level="INFO">${RESULT} = {'diff': [1.994500000000038e-05, 1.981900000000078e-05, 1.981899999999731e-05, 1.979099999999817e-05, 1.9820000000000254e-05, 1.9806000000000684e-05, 1.9806000000000684e-05, 1.9763999999998505e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:52:51.968" endtime="20201030 15:52:51.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.979" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:51.975" endtime="20201030 15:52:51.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:51.982" level="INFO">VALUE: [1.994500000000038e-05, 1.981900000000078e-05, 1.981899999999731e-05, 1.979099999999817e-05, 1.9820000000000254e-05, 1.9806000000000684e-05, 1.9806000000000684e-05, 1.9763999999998505e-05, 1.981900000000078e-05, 1.980500000000121e-05, 1.981900000000078e-05, 1.9805999999997215e-05, 1.9833999999999824e-05, 1.9792000000001114e-05, 1.981900000000078e-05, 1.981899999999731e-05, 1.9820000000000254e-05, 1.9833999999999824e-05, 1.9792000000001114e-05, 1.981900000000078e-05, 1.984699999999992e-05, 1.981900000000078e-05, 1.9806000000000684e-05, 1.9806000000000684e-05, 1.9763999999998505e-05, 1.980499999999774e-05, 1.987499999999906e-05, 1.981900000000078e-05, 1.9778000000001544e-05, 1.9820000000000254e-05, 1.987499999999906e-05, 1.981900000000078e-05, 1.977700000000207e-05, 1.987499999999906e-05, 1.9806000000000684e-05, 1.9820000000000254e-05, 1.9806000000000684e-05, 1.9777999999998075e-05, 1.980499999999774e-05, 1.981900000000078e-05, 1.981900000000078e-05, 1.9778000000001544e-05, 1.9805999999997215e-05, 1.981900000000078e-05, 1.981900000000078e-05, 1.981900000000078e-05, 1.986099999999949e-05, 1.9820000000000254e-05, 1.9862000000002433e-05, 1.987499999999906e-05]</msg>
<status status="PASS" starttime="20201030 15:52:51.980" endtime="20201030 15:52:51.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.973" endtime="20201030 15:52:51.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:51.987" endtime="20201030 15:52:52.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.985" endtime="20201030 15:52:52.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.984" endtime="20201030 15:52:52.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.631" endtime="20201030 15:52:52.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:51.630" endtime="20201030 15:52:52.008"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.016" endtime="20201030 15:52:52.026"></status>
</kw>
<msg timestamp="20201030 15:52:52.026" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.015" endtime="20201030 15:52:52.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.029" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.027" endtime="20201030 15:52:52.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.030" endtime="20201030 15:52:52.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.012" endtime="20201030 15:52:52.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.010" endtime="20201030 15:52:52.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.039" endtime="20201030 15:52:52.324"></status>
</kw>
<msg timestamp="20201030 15:52:52.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017938722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017964792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.037" endtime="20201030 15:52:52.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017938722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017964792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.329" endtime="20201030 15:52:52.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.337" endtime="20201030 15:52:52.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.035" endtime="20201030 15:52:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.033" endtime="20201030 15:52:52.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:52.343" level="INFO">${PHILIP_RES} = [{'diff': 2.6069999999999566e-05}, {'diff': 2.6028000000000856e-05}, {'diff': 2.597300000000205e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.5971999999999107e-05}, {'diff': 2.5985999999998677e-0...</msg>
<status status="PASS" starttime="20201030 15:52:52.340" endtime="20201030 15:52:52.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.348" level="INFO">${RESULT} = {'diff': [2.6069999999999566e-05, 2.6028000000000856e-05, 2.597300000000205e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.5971999999999107e-05,...</msg>
<status status="PASS" starttime="20201030 15:52:52.344" endtime="20201030 15:52:52.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.353" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:52.352" endtime="20201030 15:52:52.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.355" level="INFO">VALUE: [2.6069999999999566e-05, 2.6028000000000856e-05, 2.597300000000205e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.598700000000162e-05, 2.5971999999999107e-05, 2.597300000000205e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5999999999998247e-05, 2.5985999999998677e-05, 2.5957999999999537e-05, 2.5957999999999537e-05, 2.593099999999987e-05, 2.6013999999997817e-05, 2.595899999999901e-05, 2.5972000000002576e-05, 2.5971999999999107e-05, 2.5972000000002576e-05, 2.6027999999997387e-05, 2.594499999999944e-05, 2.5958000000003006e-05, 2.595899999999901e-05, 2.5943999999999967e-05, 2.595899999999901e-05, 2.6014000000001286e-05, 2.595899999999901e-05, 2.5971999999999107e-05, 2.5958000000003006e-05, 2.5971999999999107e-05, 2.5971999999999107e-05, 2.5985999999998677e-05, 2.5971999999999107e-05, 2.6000000000001716e-05, 2.6055000000000522e-05, 2.597300000000205e-05, 2.5957999999999537e-05, 2.5985999999998677e-05, 2.593099999999987e-05, 2.5971999999999107e-05, 2.5972000000002576e-05, 2.5971999999999107e-05, 2.59170000000003e-05, 2.5985999999998677e-05, 2.597299999999858e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.354" endtime="20201030 15:52:52.356"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.349" endtime="20201030 15:52:52.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.360" endtime="20201030 15:52:52.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.359" endtime="20201030 15:52:52.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.358" endtime="20201030 15:52:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.009" endtime="20201030 15:52:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.008" endtime="20201030 15:52:52.382"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.394" endtime="20201030 15:52:52.406"></status>
</kw>
<msg timestamp="20201030 15:52:52.406" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.392" endtime="20201030 15:52:52.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.409" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.408" endtime="20201030 15:52:52.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.410" endtime="20201030 15:52:52.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.388" endtime="20201030 15:52:52.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.385" endtime="20201030 15:52:52.413"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.419" endtime="20201030 15:52:52.705"></status>
</kw>
<msg timestamp="20201030 15:52:52.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023240819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.418" endtime="20201030 15:52:52.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023207972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023240819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.710" endtime="20201030 15:52:52.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.718" endtime="20201030 15:52:52.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.415" endtime="20201030 15:52:52.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.413" endtime="20201030 15:52:52.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:52.725" level="INFO">${PHILIP_RES} = [{'diff': 3.2846999999999044e-05}, {'diff': 3.275000000000153e-05}, {'diff': 3.270800000000282e-05}, {'diff': 3.272199999999892e-05}, {'diff': 3.273599999999849e-05}, {'diff': 3.273599999999849e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:52.722" endtime="20201030 15:52:52.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:52.730" level="INFO">${RESULT} = {'diff': [3.2846999999999044e-05, 3.275000000000153e-05, 3.270800000000282e-05, 3.272199999999892e-05, 3.273599999999849e-05, 3.273599999999849e-05, 3.273700000000143e-05, 3.273699999999796e-05, 3.272...</msg>
<status status="PASS" starttime="20201030 15:52:52.727" endtime="20201030 15:52:52.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.734" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:52.733" endtime="20201030 15:52:52.734"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.737" level="INFO">VALUE: [3.2846999999999044e-05, 3.275000000000153e-05, 3.270800000000282e-05, 3.272199999999892e-05, 3.273599999999849e-05, 3.273599999999849e-05, 3.273700000000143e-05, 3.273699999999796e-05, 3.272199999999892e-05, 3.269399999999978e-05, 3.272200000000239e-05, 3.273599999999849e-05, 3.273599999999849e-05, 3.272299999999839e-05, 3.266700000000011e-05, 3.272299999999839e-05, 3.274999999999806e-05, 3.275000000000153e-05, 3.273600000000196e-05, 3.272199999999892e-05, 3.273599999999849e-05, 3.266700000000011e-05, 3.273700000000143e-05, 3.273599999999849e-05, 3.270799999999935e-05, 3.27640000000011e-05, 3.273600000000196e-05, 3.270799999999935e-05, 3.274999999999806e-05, 3.273600000000196e-05, 3.26389999999975e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.273600000000196e-05, 3.273600000000196e-05, 3.272199999999892e-05, 3.272199999999892e-05, 3.273700000000143e-05, 3.269399999999978e-05, 3.273599999999849e-05, 3.275000000000153e-05, 3.275000000000153e-05, 3.273599999999849e-05, 3.273599999999849e-05, 3.2818999999999904e-05, 3.275000000000153e-05, 3.273599999999849e-05, 3.272199999999892e-05, 3.272200000000239e-05, 3.273600000000196e-05]</msg>
<status status="PASS" starttime="20201030 15:52:52.735" endtime="20201030 15:52:52.737"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.731" endtime="20201030 15:52:52.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:52.742" endtime="20201030 15:52:52.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.740" endtime="20201030 15:52:52.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.739" endtime="20201030 15:52:52.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.383" endtime="20201030 15:52:52.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.383" endtime="20201030 15:52:52.762"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.771" endtime="20201030 15:52:52.783"></status>
</kw>
<msg timestamp="20201030 15:52:52.784" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.769" endtime="20201030 15:52:52.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:52.787" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:52.785" endtime="20201030 15:52:52.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.788" endtime="20201030 15:52:52.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.767" endtime="20201030 15:52:52.791"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.765" endtime="20201030 15:52:52.792"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:52.798" endtime="20201030 15:52:53.084"></status>
</kw>
<msg timestamp="20201030 15:52:53.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019104208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019144472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:52.797" endtime="20201030 15:52:53.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019104208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019144472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.089" endtime="20201030 15:52:53.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.097" endtime="20201030 15:52:53.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.794" endtime="20201030 15:52:53.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.792" endtime="20201030 15:52:53.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:53.104" level="INFO">${PHILIP_RES} = [{'diff': 4.026399999999819e-05}, {'diff': 4.0111000000002395e-05}, {'diff': 4.0082999999999785e-05}, {'diff': 4.0096999999999355e-05}, {'diff': 4.0082999999999785e-05}, {'diff': 4.0111000000002395e-0...</msg>
<status status="PASS" starttime="20201030 15:52:53.101" endtime="20201030 15:52:53.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.108" level="INFO">${RESULT} = {'diff': [4.026399999999819e-05, 4.0111000000002395e-05, 4.0082999999999785e-05, 4.0096999999999355e-05, 4.0082999999999785e-05, 4.0111000000002395e-05, 4.0096999999999355e-05, 4.009799999999883e-05, ...</msg>
<status status="PASS" starttime="20201030 15:52:53.105" endtime="20201030 15:52:53.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.112" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:53.111" endtime="20201030 15:52:53.113"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.115" level="INFO">VALUE: [4.026399999999819e-05, 4.0111000000002395e-05, 4.0082999999999785e-05, 4.0096999999999355e-05, 4.0082999999999785e-05, 4.0111000000002395e-05, 4.0096999999999355e-05, 4.009799999999883e-05, 4.0110999999998925e-05, 4.0111000000002395e-05, 4.0110999999998925e-05, 4.0110999999998925e-05, 4.0096999999999355e-05, 4.0139000000001535e-05, 4.009799999999883e-05, 4.0082999999999785e-05, 4.009799999999883e-05, 4.0125000000001965e-05, 4.0124999999998495e-05, 4.0124999999998495e-05, 4.0096999999999355e-05, 4.0153000000001104e-05, 4.0125000000001965e-05, 4.004200000000055e-05, 4.0096999999999355e-05, 4.0111000000002395e-05, 4.0082999999999785e-05, 4.0096999999999355e-05, 4.0124999999998495e-05, 4.0082999999999785e-05, 4.0069000000000216e-05, 4.0096999999999355e-05, 4.0096999999999355e-05, 4.002800000000098e-05, 4.0110999999998925e-05, 4.008399999999926e-05, 4.0124999999998495e-05, 4.011200000000187e-05, 4.0110999999998925e-05, 4.0082999999999785e-05, 4.0110999999998925e-05, 4.0111000000002395e-05, 4.01660000000012e-05, 4.0096999999999355e-05, 4.00980000000023e-05, 4.0096999999999355e-05, 4.0181000000000244e-05, 4.0110999999998925e-05, 4.0124999999998495e-05, 4.008400000000273e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.114" endtime="20201030 15:52:53.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.109" endtime="20201030 15:52:53.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.121" endtime="20201030 15:52:53.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.119" endtime="20201030 15:52:53.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.118" endtime="20201030 15:52:53.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.763" endtime="20201030 15:52:53.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:52.763" endtime="20201030 15:52:53.142"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.150" endtime="20201030 15:52:53.160"></status>
</kw>
<msg timestamp="20201030 15:52:53.161" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.149" endtime="20201030 15:52:53.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.163" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.162" endtime="20201030 15:52:53.163"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.164" endtime="20201030 15:52:53.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.146" endtime="20201030 15:52:53.166"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.144" endtime="20201030 15:52:53.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.173" endtime="20201030 15:52:53.460"></status>
</kw>
<msg timestamp="20201030 15:52:53.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.172" endtime="20201030 15:52:53.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017968097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018016278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.464" endtime="20201030 15:52:53.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.472" endtime="20201030 15:52:53.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.169" endtime="20201030 15:52:53.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.167" endtime="20201030 15:52:53.474"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:53.478" level="INFO">${PHILIP_RES} = [{'diff': 4.8181000000001306e-05}, {'diff': 4.808299999999738e-05}, {'diff': 4.805600000000118e-05}, {'diff': 4.806899999999781e-05}, {'diff': 4.805500000000171e-05}, {'diff': 4.806900000000128e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:52:53.475" endtime="20201030 15:52:53.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.484" level="INFO">${RESULT} = {'diff': [4.8181000000001306e-05, 4.808299999999738e-05, 4.805600000000118e-05, 4.806899999999781e-05, 4.805500000000171e-05, 4.806900000000128e-05, 4.808400000000032e-05, 4.809700000000042e-05, 4.806...</msg>
<status status="PASS" starttime="20201030 15:52:53.479" endtime="20201030 15:52:53.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.488" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:53.487" endtime="20201030 15:52:53.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.490" level="INFO">VALUE: [4.8181000000001306e-05, 4.808299999999738e-05, 4.805600000000118e-05, 4.806899999999781e-05, 4.805500000000171e-05, 4.806900000000128e-05, 4.808400000000032e-05, 4.809700000000042e-05, 4.806999999999728e-05, 4.806900000000128e-05, 4.808299999999738e-05, 4.808300000000085e-05, 4.808300000000085e-05, 4.805500000000171e-05, 4.808400000000032e-05, 4.812499999999956e-05, 4.805600000000118e-05, 4.798599999999986e-05, 4.808300000000085e-05, 4.805499999999824e-05, 4.801299999999953e-05, 4.808400000000032e-05, 4.805600000000118e-05, 4.807000000000075e-05, 4.808299999999738e-05, 4.808300000000085e-05, 4.808300000000085e-05, 4.811099999999999e-05, 4.807000000000075e-05, 4.807000000000075e-05, 4.808300000000085e-05, 4.809700000000042e-05, 4.806900000000128e-05, 4.805499999999824e-05, 4.808300000000085e-05, 4.808400000000032e-05, 4.807000000000075e-05, 4.808400000000032e-05, 4.808300000000085e-05, 4.808300000000085e-05, 4.806899999999781e-05, 4.808300000000085e-05, 4.806999999999728e-05, 4.809799999999989e-05, 4.808400000000032e-05, 4.806900000000128e-05, 4.805500000000171e-05, 4.805500000000171e-05, 4.808300000000085e-05, 4.806999999999728e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.489" endtime="20201030 15:52:53.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.484" endtime="20201030 15:52:53.492"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.495" endtime="20201030 15:52:53.515"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.494" endtime="20201030 15:52:53.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.493" endtime="20201030 15:52:53.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.142" endtime="20201030 15:52:53.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.142" endtime="20201030 15:52:53.516"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.525" endtime="20201030 15:52:53.537"></status>
</kw>
<msg timestamp="20201030 15:52:53.537" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.523" endtime="20201030 15:52:53.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.540" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.538" endtime="20201030 15:52:53.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.541" endtime="20201030 15:52:53.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.521" endtime="20201030 15:52:53.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.519" endtime="20201030 15:52:53.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.550" endtime="20201030 15:52:53.836"></status>
</kw>
<msg timestamp="20201030 15:52:53.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.548" endtime="20201030 15:52:53.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017796222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.840" endtime="20201030 15:52:53.847"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.848" endtime="20201030 15:52:53.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.546" endtime="20201030 15:52:53.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.544" endtime="20201030 15:52:53.852"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:53.856" level="INFO">${PHILIP_RES} = [{'diff': 5.6764000000000814e-05}, {'diff': 5.66809999999994e-05}, {'diff': 5.666699999999983e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.669499999999897e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:53.853" endtime="20201030 15:52:53.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:53.860" level="INFO">${RESULT} = {'diff': [5.6764000000000814e-05, 5.66809999999994e-05, 5.666699999999983e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.669499999999897e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.6666...</msg>
<status status="PASS" starttime="20201030 15:52:53.857" endtime="20201030 15:52:53.860"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.864" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:53.863" endtime="20201030 15:52:53.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.867" level="INFO">VALUE: [5.6764000000000814e-05, 5.66809999999994e-05, 5.666699999999983e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.669499999999897e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.663900000000069e-05, 5.662499999999765e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.66809999999994e-05, 5.66670000000033e-05, 5.663900000000069e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.66670000000033e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.66809999999994e-05, 5.66809999999994e-05, 5.663899999999722e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.666699999999983e-05, 5.6665999999996886e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.6679999999999925e-05, 5.6666000000000355e-05, 5.6679999999999925e-05, 5.6679999999999925e-05, 5.6665999999996886e-05, 5.665300000000026e-05, 5.659699999999851e-05, 5.661200000000102e-05, 5.6721999999998635e-05, 5.6666000000000355e-05, 5.6652000000000785e-05]</msg>
<status status="PASS" starttime="20201030 15:52:53.866" endtime="20201030 15:52:53.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.861" endtime="20201030 15:52:53.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:53.872" endtime="20201030 15:52:53.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.870" endtime="20201030 15:52:53.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.869" endtime="20201030 15:52:53.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.517" endtime="20201030 15:52:53.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.517" endtime="20201030 15:52:53.893"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.901" endtime="20201030 15:52:53.914"></status>
</kw>
<msg timestamp="20201030 15:52:53.915" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.900" endtime="20201030 15:52:53.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:53.917" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:53.916" endtime="20201030 15:52:53.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.918" endtime="20201030 15:52:53.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.897" endtime="20201030 15:52:53.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.895" endtime="20201030 15:52:53.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:53.927" endtime="20201030 15:52:54.213"></status>
</kw>
<msg timestamp="20201030 15:52:54.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:53.926" endtime="20201030 15:52:54.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019215486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019281458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.218" endtime="20201030 15:52:54.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.226" endtime="20201030 15:52:54.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.923" endtime="20201030 15:52:54.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.921" endtime="20201030 15:52:54.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:54.233" level="INFO">${PHILIP_RES} = [{'diff': 6.597200000000095e-05}, {'diff': 6.588899999999953e-05}, {'diff': 6.577799999999898e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.579099999999907e-05}, {'diff': 6.583300000000125e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:54.229" endtime="20201030 15:52:54.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.237" level="INFO">${RESULT} = {'diff': [6.597200000000095e-05, 6.588899999999953e-05, 6.577799999999898e-05, 6.587499999999996e-05, 6.579099999999907e-05, 6.583300000000125e-05, 6.583300000000125e-05, 6.593099999999824e-05, 6.5861...</msg>
<status status="PASS" starttime="20201030 15:52:54.234" endtime="20201030 15:52:54.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.241" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:54.240" endtime="20201030 15:52:54.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.244" level="INFO">VALUE: [6.597200000000095e-05, 6.588899999999953e-05, 6.577799999999898e-05, 6.587499999999996e-05, 6.579099999999907e-05, 6.583300000000125e-05, 6.583300000000125e-05, 6.593099999999824e-05, 6.586100000000039e-05, 6.584699999999735e-05, 6.584699999999735e-05, 6.584700000000082e-05, 6.579199999999855e-05, 6.584700000000082e-05, 6.584700000000082e-05, 6.584700000000082e-05, 6.594399999999834e-05, 6.586100000000039e-05, 6.586100000000039e-05, 6.584700000000082e-05, 6.579199999999855e-05, 6.586100000000039e-05, 6.584700000000082e-05, 6.586199999999987e-05, 6.583399999999726e-05, 6.581999999999769e-05, 6.58480000000003e-05, 6.586100000000039e-05, 6.586199999999987e-05, 6.586100000000039e-05, 6.583400000000073e-05, 6.5889000000003e-05, 6.586100000000039e-05, 6.583400000000073e-05, 6.586100000000039e-05, 6.579099999999907e-05, 6.586100000000039e-05, 6.586100000000039e-05, 6.584699999999735e-05, 6.586100000000039e-05, 6.584700000000082e-05, 6.586100000000039e-05, 6.586100000000039e-05, 6.584700000000082e-05, 6.580500000000211e-05, 6.583299999999778e-05, 6.584699999999735e-05, 6.584700000000082e-05, 6.583300000000125e-05, 6.583300000000125e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.242" endtime="20201030 15:52:54.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.238" endtime="20201030 15:52:54.246"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.250" endtime="20201030 15:52:54.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.248" endtime="20201030 15:52:54.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.247" endtime="20201030 15:52:54.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.894" endtime="20201030 15:52:54.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:53.893" endtime="20201030 15:52:54.271"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.285" endtime="20201030 15:52:54.298"></status>
</kw>
<msg timestamp="20201030 15:52:54.299" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.282" endtime="20201030 15:52:54.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.301" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.300" endtime="20201030 15:52:54.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.302" endtime="20201030 15:52:54.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.278" endtime="20201030 15:52:54.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.276" endtime="20201030 15:52:54.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.312" endtime="20201030 15:52:54.597"></status>
</kw>
<msg timestamp="20201030 15:52:54.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.310" endtime="20201030 15:52:54.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024210528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024286278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.601" endtime="20201030 15:52:54.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.609" endtime="20201030 15:52:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.307" endtime="20201030 15:52:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.306" endtime="20201030 15:52:54.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:54.616" level="INFO">${PHILIP_RES} = [{'diff': 7.57500000000029e-05}, {'diff': 7.568100000000105e-05}, {'diff': 7.565300000000191e-05}, {'diff': 7.561099999999973e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.563899999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:52:54.613" endtime="20201030 15:52:54.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:54.621" level="INFO">${RESULT} = {'diff': [7.57500000000029e-05, 7.568100000000105e-05, 7.565300000000191e-05, 7.561099999999973e-05, 7.566700000000148e-05, 7.563899999999887e-05, 7.565199999999897e-05, 7.566600000000201e-05, 7.56530...</msg>
<status status="PASS" starttime="20201030 15:52:54.617" endtime="20201030 15:52:54.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.625" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:54.624" endtime="20201030 15:52:54.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.628" level="INFO">VALUE: [7.57500000000029e-05, 7.568100000000105e-05, 7.565300000000191e-05, 7.561099999999973e-05, 7.566700000000148e-05, 7.563899999999887e-05, 7.565199999999897e-05, 7.566600000000201e-05, 7.565300000000191e-05, 7.563899999999887e-05, 7.563900000000234e-05, 7.56249999999993e-05, 7.569500000000062e-05, 7.563899999999887e-05, 7.55830000000006e-05, 7.562500000000277e-05, 7.563899999999887e-05, 7.56249999999993e-05, 7.563899999999887e-05, 7.565299999999844e-05, 7.563900000000234e-05, 7.565299999999844e-05, 7.562500000000277e-05, 7.565299999999844e-05, 7.56379999999994e-05, 7.565200000000244e-05, 7.563899999999887e-05, 7.563900000000234e-05, 7.565299999999844e-05, 7.565299999999844e-05, 7.55830000000006e-05, 7.563899999999887e-05, 7.563900000000234e-05, 7.563899999999887e-05, 7.565199999999897e-05, 7.565300000000191e-05, 7.563899999999887e-05, 7.566700000000148e-05, 7.566700000000148e-05, 7.563899999999887e-05, 7.568100000000105e-05, 7.565299999999844e-05, 7.561099999999973e-05, 7.565199999999897e-05, 7.565299999999844e-05, 7.565300000000191e-05, 7.567999999999811e-05, 7.565300000000191e-05, 7.559700000000016e-05, 7.565299999999844e-05]</msg>
<status status="PASS" starttime="20201030 15:52:54.627" endtime="20201030 15:52:54.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.622" endtime="20201030 15:52:54.629"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:54.633" endtime="20201030 15:52:54.652"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.631" endtime="20201030 15:52:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.630" endtime="20201030 15:52:54.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.273" endtime="20201030 15:52:54.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.272" endtime="20201030 15:52:54.654"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.662" endtime="20201030 15:52:54.677"></status>
</kw>
<msg timestamp="20201030 15:52:54.677" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.661" endtime="20201030 15:52:54.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.680" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:54.678" endtime="20201030 15:52:54.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.681" endtime="20201030 15:52:54.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.658" endtime="20201030 15:52:54.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.656" endtime="20201030 15:52:54.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.690" endtime="20201030 15:52:54.976"></status>
</kw>
<msg timestamp="20201030 15:52:54.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018100028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.688" endtime="20201030 15:52:54.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:54.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018100028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018186125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:54.980" endtime="20201030 15:52:54.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:54.989" endtime="20201030 15:52:54.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.686" endtime="20201030 15:52:54.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.684" endtime="20201030 15:52:54.992"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:54.996" level="INFO">${PHILIP_RES} = [{'diff': 8.609700000000026e-05}, {'diff': 8.605500000000155e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.606900000000112e-05}, {'diff': 8.607000000000059e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:54.993" endtime="20201030 15:52:54.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.000" level="INFO">${RESULT} = {'diff': [8.609700000000026e-05, 8.605500000000155e-05, 8.605600000000102e-05, 8.605600000000102e-05, 8.606900000000112e-05, 8.607000000000059e-05, 8.602800000000188e-05, 8.608300000000069e-05, 8.6042...</msg>
<status status="PASS" starttime="20201030 15:52:54.997" endtime="20201030 15:52:55.001"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.005" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:55.004" endtime="20201030 15:52:55.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.007" level="INFO">VALUE: [8.609700000000026e-05, 8.605500000000155e-05, 8.605600000000102e-05, 8.605600000000102e-05, 8.606900000000112e-05, 8.607000000000059e-05, 8.602800000000188e-05, 8.608300000000069e-05, 8.604200000000145e-05, 8.604099999999851e-05, 8.604200000000145e-05, 8.606900000000112e-05, 8.607000000000059e-05, 8.608400000000016e-05, 8.608300000000069e-05, 8.605600000000102e-05, 8.602799999999841e-05, 8.605600000000102e-05, 8.604199999999798e-05, 8.605500000000155e-05, 8.604199999999798e-05, 8.605499999999808e-05, 8.605499999999808e-05, 8.602799999999841e-05, 8.605499999999808e-05, 8.605599999999755e-05, 8.605599999999755e-05, 8.608299999999722e-05, 8.605599999999755e-05, 8.605499999999808e-05, 8.605599999999755e-05, 8.606999999999712e-05, 8.605499999999808e-05, 8.606999999999712e-05, 8.605499999999808e-05, 8.605500000000155e-05, 8.605599999999755e-05, 8.602799999999841e-05, 8.605599999999755e-05, 8.604200000000145e-05, 8.605500000000155e-05, 8.607000000000059e-05, 8.604200000000145e-05, 8.608300000000069e-05, 8.609799999999973e-05, 8.606900000000112e-05, 8.602800000000188e-05, 8.604200000000145e-05, 8.606900000000112e-05, 8.607000000000059e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.006" endtime="20201030 15:52:55.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.001" endtime="20201030 15:52:55.009"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.012" endtime="20201030 15:52:55.032"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.011" endtime="20201030 15:52:55.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.010" endtime="20201030 15:52:55.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.655" endtime="20201030 15:52:55.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:54.654" endtime="20201030 15:52:55.033"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.042" endtime="20201030 15:52:55.057"></status>
</kw>
<msg timestamp="20201030 15:52:55.058" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.040" endtime="20201030 15:52:55.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.060" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.059" endtime="20201030 15:52:55.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.061" endtime="20201030 15:52:55.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.038" endtime="20201030 15:52:55.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.036" endtime="20201030 15:52:55.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.070" endtime="20201030 15:52:55.356"></status>
</kw>
<msg timestamp="20201030 15:52:55.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018963625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.069" endtime="20201030 15:52:55.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018963625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019060833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.361" endtime="20201030 15:52:55.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.369" endtime="20201030 15:52:55.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.066" endtime="20201030 15:52:55.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.064" endtime="20201030 15:52:55.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:55.375" level="INFO">${PHILIP_RES} = [{'diff': 9.720799999999793e-05}, {'diff': 9.705499999999867e-05}, {'diff': 9.709699999999738e-05}, {'diff': 9.708299999999781e-05}, {'diff': 9.708400000000075e-05}, {'diff': 9.707000000000118e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:52:55.372" endtime="20201030 15:52:55.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.380" level="INFO">${RESULT} = {'diff': [9.720799999999793e-05, 9.705499999999867e-05, 9.709699999999738e-05, 9.708299999999781e-05, 9.708400000000075e-05, 9.707000000000118e-05, 9.712499999999999e-05, 9.706900000000171e-05, 9.7069...</msg>
<status status="PASS" starttime="20201030 15:52:55.376" endtime="20201030 15:52:55.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.384" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:55.383" endtime="20201030 15:52:55.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.387" level="INFO">VALUE: [9.720799999999793e-05, 9.705499999999867e-05, 9.709699999999738e-05, 9.708299999999781e-05, 9.708400000000075e-05, 9.707000000000118e-05, 9.712499999999999e-05, 9.706900000000171e-05, 9.706900000000171e-05, 9.705599999999814e-05, 9.713899999999956e-05, 9.706999999999771e-05, 9.708299999999781e-05, 9.709700000000085e-05, 9.704200000000204e-05, 9.705600000000161e-05, 9.707000000000118e-05, 9.706899999999824e-05, 9.713899999999956e-05, 9.709699999999738e-05, 9.706999999999771e-05, 9.705600000000161e-05, 9.706900000000171e-05, 9.705500000000214e-05, 9.707000000000118e-05, 9.704199999999857e-05, 9.705599999999814e-05, 9.705499999999867e-05, 9.705499999999867e-05, 9.712499999999999e-05, 9.708400000000075e-05, 9.708300000000128e-05, 9.706900000000171e-05, 9.705500000000214e-05, 9.705599999999814e-05, 9.708399999999728e-05, 9.704199999999857e-05, 9.709700000000085e-05, 9.708300000000128e-05, 9.708300000000128e-05, 9.707000000000118e-05, 9.709700000000085e-05, 9.706900000000171e-05, 9.705499999999867e-05, 9.705599999999814e-05, 9.706999999999771e-05, 9.707000000000118e-05, 9.706900000000171e-05, 9.708300000000128e-05, 9.708300000000128e-05]</msg>
<status status="PASS" starttime="20201030 15:52:55.385" endtime="20201030 15:52:55.390"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.381" endtime="20201030 15:52:55.391"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.394" endtime="20201030 15:52:55.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.393" endtime="20201030 15:52:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.392" endtime="20201030 15:52:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.034" endtime="20201030 15:52:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.034" endtime="20201030 15:52:55.415"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.424" endtime="20201030 15:52:55.438"></status>
</kw>
<msg timestamp="20201030 15:52:55.438" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.422" endtime="20201030 15:52:55.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.441" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.439" endtime="20201030 15:52:55.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.442" endtime="20201030 15:52:55.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.420" endtime="20201030 15:52:55.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.418" endtime="20201030 15:52:55.444"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.451" endtime="20201030 15:52:55.737"></status>
</kw>
<msg timestamp="20201030 15:52:55.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.449" endtime="20201030 15:52:55.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018027917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.741" endtime="20201030 15:52:55.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.749" endtime="20201030 15:52:55.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.447" endtime="20201030 15:52:55.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.445" endtime="20201030 15:52:55.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:55.755" level="INFO">${PHILIP_RES} = [{'diff': 0.00010879199999999992}, {'diff': 0.00010868100000000283}, {'diff': 0.00010867999999999989}, {'diff': 0.00010866700000000326}, {'diff': 0.00010868100000000283}, {'diff': 0.000108693999999999...</msg>
<status status="PASS" starttime="20201030 15:52:55.752" endtime="20201030 15:52:55.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:55.760" level="INFO">${RESULT} = {'diff': [0.00010879199999999992, 0.00010868100000000283, 0.00010867999999999989, 0.00010866700000000326, 0.00010868100000000283, 0.00010869399999999946, 0.00010869499999999893, 0.00010867999999999989...</msg>
<status status="PASS" starttime="20201030 15:52:55.756" endtime="20201030 15:52:55.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.765" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:55.763" endtime="20201030 15:52:55.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.767" level="INFO">VALUE: [0.00010879199999999992, 0.00010868100000000283, 0.00010867999999999989, 0.00010866700000000326, 0.00010868100000000283, 0.00010869399999999946, 0.00010869499999999893, 0.00010867999999999989, 0.00010869499999999893, 0.00010872299999999807, 0.00010867999999999989, 0.00010869499999999893, 0.00010866699999999979, 0.00010869399999999946, 0.00010868099999999936, 0.00010867999999999989, 0.00010869399999999946, 0.00010868099999999936, 0.00010867999999999989, 0.00010869499999999893, 0.00010869499999999893, 0.00010870799999999903, 0.00010868100000000283, 0.0001086950000000024, 0.00010875000000000121, 0.00010869499999999893, 0.00010865300000000022, 0.00010869399999999946, 0.00010869499999999893, 0.00010869399999999946, 0.00010865300000000022, 0.00010869499999999893, 0.00010870799999999903, 0.00010868100000000283, 0.0001086950000000024, 0.00010869399999999946, 0.00010872200000000207, 0.00010867999999999989, 0.00010873599999999817, 0.00010869499999999893, 0.00010877700000000087, 0.00010866699999999979, 0.00010869499999999893, 0.00010870799999999903, 0.0001086950000000024, 0.00010868099999999936, 0.00010867999999999989, 0.00010869499999999893, 0.00010869399999999946, 0.00010867999999999989]</msg>
<status status="PASS" starttime="20201030 15:52:55.766" endtime="20201030 15:52:55.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.761" endtime="20201030 15:52:55.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:55.772" endtime="20201030 15:52:55.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.770" endtime="20201030 15:52:55.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.769" endtime="20201030 15:52:55.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.416" endtime="20201030 15:52:55.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.416" endtime="20201030 15:52:55.794"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.803" endtime="20201030 15:52:55.818"></status>
</kw>
<msg timestamp="20201030 15:52:55.819" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.801" endtime="20201030 15:52:55.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:55.821" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:55.820" endtime="20201030 15:52:55.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.822" endtime="20201030 15:52:55.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.799" endtime="20201030 15:52:55.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.797" endtime="20201030 15:52:55.825"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:55.832" endtime="20201030 15:52:56.117"></status>
</kw>
<msg timestamp="20201030 15:52:56.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:55.830" endtime="20201030 15:52:56.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019736264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019857306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.121" endtime="20201030 15:52:56.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.130" endtime="20201030 15:52:56.132"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.827" endtime="20201030 15:52:56.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.825" endtime="20201030 15:52:56.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:56.137" level="INFO">${PHILIP_RES} = [{'diff': 0.00012104200000000176}, {'diff': 0.00012090300000000206}, {'diff': 0.0001209449999999973}, {'diff': 0.00012094500000000077}, {'diff': 0.00012091700000000163}, {'diff': 0.0001209169999999981...</msg>
<status status="PASS" starttime="20201030 15:52:56.134" endtime="20201030 15:52:56.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.141" level="INFO">${RESULT} = {'diff': [0.00012104200000000176, 0.00012090300000000206, 0.0001209449999999973, 0.00012094500000000077, 0.00012091700000000163, 0.00012091699999999816, 0.00012087500000000292, 0.00012091700000000163,...</msg>
<status status="PASS" starttime="20201030 15:52:56.138" endtime="20201030 15:52:56.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.146" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:56.145" endtime="20201030 15:52:56.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.148" level="INFO">VALUE: [0.00012104200000000176, 0.00012090300000000206, 0.0001209449999999973, 0.00012094500000000077, 0.00012091700000000163, 0.00012091699999999816, 0.00012087500000000292, 0.00012091700000000163, 0.0001209440000000013, 0.00012093000000000173, 0.00012091599999999869, 0.00012093000000000173, 0.00012090199999999912, 0.00012088799999999955, 0.00012091700000000163, 0.0001209310000000012, 0.00012091700000000163, 0.0001209310000000012, 0.00012091699999999816, 0.0001209310000000012, 0.0001209310000000012, 0.00012091699999999816, 0.00012098600000000001, 0.00012091700000000163, 0.00012092999999999826, 0.00012091600000000216, 0.00012091599999999869, 0.00012086099999999989, 0.00012090199999999912, 0.00012091699999999816, 0.00012090300000000206, 0.00012091700000000163, 0.00012091699999999816, 0.00012090300000000206, 0.00012091699999999816, 0.00012091700000000163, 0.0001209310000000012, 0.0001209449999999973, 0.00012091700000000163, 0.00012091599999999869, 0.00012087499999999946, 0.00012091600000000216, 0.00012094399999999783, 0.00012090199999999912, 0.00012091600000000216, 0.00012092999999999826, 0.00012090300000000206, 0.00012093099999999773, 0.00012091699999999816, 0.00012097200000000044]</msg>
<status status="PASS" starttime="20201030 15:52:56.147" endtime="20201030 15:52:56.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.142" endtime="20201030 15:52:56.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.153" endtime="20201030 15:52:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.152" endtime="20201030 15:52:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.150" endtime="20201030 15:52:56.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.795" endtime="20201030 15:52:56.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:55.794" endtime="20201030 15:52:56.174"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.182" endtime="20201030 15:52:56.199"></status>
</kw>
<msg timestamp="20201030 15:52:56.200" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.181" endtime="20201030 15:52:56.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.202" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.201" endtime="20201030 15:52:56.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.203" endtime="20201030 15:52:56.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.178" endtime="20201030 15:52:56.205"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.176" endtime="20201030 15:52:56.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.212" endtime="20201030 15:52:56.498"></status>
</kw>
<msg timestamp="20201030 15:52:56.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018735681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018869556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.211" endtime="20201030 15:52:56.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018735681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018869556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.502" endtime="20201030 15:52:56.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.510" endtime="20201030 15:52:56.511"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.208" endtime="20201030 15:52:56.512"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.206" endtime="20201030 15:52:56.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:56.516" level="INFO">${PHILIP_RES} = [{'diff': 0.00013387499999999858}, {'diff': 0.0001337640000000015}, {'diff': 0.00013374999999999845}, {'diff': 0.00013375000000000192}, {'diff': 0.00013374999999999845}, {'diff': 0.0001336940000000001...</msg>
<status status="PASS" starttime="20201030 15:52:56.513" endtime="20201030 15:52:56.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.521" level="INFO">${RESULT} = {'diff': [0.00013387499999999858, 0.0001337640000000015, 0.00013374999999999845, 0.00013375000000000192, 0.00013374999999999845, 0.00013369400000000017, 0.00013374999999999845, 0.00013375000000000192,...</msg>
<status status="PASS" starttime="20201030 15:52:56.517" endtime="20201030 15:52:56.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.525" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:56.524" endtime="20201030 15:52:56.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.527" level="INFO">VALUE: [0.00013387499999999858, 0.0001337640000000015, 0.00013374999999999845, 0.00013375000000000192, 0.00013374999999999845, 0.00013369400000000017, 0.00013374999999999845, 0.00013375000000000192, 0.00013370799999999974, 0.00013372200000000278, 0.00013376399999999802, 0.00013373600000000235, 0.00013374999999999845, 0.00013375000000000192, 0.00013374999999999845, 0.0001337770000000016, 0.00013376399999999802, 0.00013379200000000063, 0.00013374999999999845, 0.00013369400000000017, 0.00013375000000000192, 0.0001337640000000015, 0.0001337640000000015, 0.00013376399999999802, 0.00013375000000000192, 0.00013373699999999836, 0.00013375000000000192, 0.00013376399999999802, 0.00013375000000000192, 0.00013374999999999845, 0.00013375000000000192, 0.00013376399999999802, 0.0001337640000000015, 0.00013374999999999845, 0.00013373600000000235, 0.00013374999999999845, 0.00013375000000000192, 0.00013376299999999855, 0.00013375000000000192, 0.00013369400000000017, 0.00013375000000000192, 0.00013373599999999888, 0.00013376399999999802, 0.0001337640000000015, 0.00013368100000000008, 0.00013373600000000235, 0.00013376399999999802, 0.0001337770000000016, 0.00013376299999999855, 0.00013375000000000192]</msg>
<status status="PASS" starttime="20201030 15:52:56.526" endtime="20201030 15:52:56.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.521" endtime="20201030 15:52:56.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.533" endtime="20201030 15:52:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.532" endtime="20201030 15:52:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.530" endtime="20201030 15:52:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.175" endtime="20201030 15:52:56.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.174" endtime="20201030 15:52:56.554"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.562" endtime="20201030 15:52:56.579"></status>
</kw>
<msg timestamp="20201030 15:52:56.580" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.561" endtime="20201030 15:52:56.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.582" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.581" endtime="20201030 15:52:56.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.583" endtime="20201030 15:52:56.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.558" endtime="20201030 15:52:56.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.556" endtime="20201030 15:52:56.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.593" endtime="20201030 15:52:56.888"></status>
</kw>
<msg timestamp="20201030 15:52:56.893" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.591" endtime="20201030 15:52:56.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017859375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018006694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:56.895" endtime="20201030 15:52:56.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.910" endtime="20201030 15:52:56.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.588" endtime="20201030 15:52:56.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.587" endtime="20201030 15:52:56.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:56.924" level="INFO">${PHILIP_RES} = [{'diff': 0.00014731899999999992}, {'diff': 0.00014715199999999762}, {'diff': 0.0001471939999999998}, {'diff': 0.00014712500000000142}, {'diff': 0.00014718000000000023}, {'diff': 0.0001471809999999997...</msg>
<status status="PASS" starttime="20201030 15:52:56.918" endtime="20201030 15:52:56.924"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:56.930" level="INFO">${RESULT} = {'diff': [0.00014731899999999992, 0.00014715199999999762, 0.0001471939999999998, 0.00014712500000000142, 0.00014718000000000023, 0.0001471809999999997, 0.00014719499999999927, 0.00014719500000000274, ...</msg>
<status status="PASS" starttime="20201030 15:52:56.925" endtime="20201030 15:52:56.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.934" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:56.933" endtime="20201030 15:52:56.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.937" level="INFO">VALUE: [0.00014731899999999992, 0.00014715199999999762, 0.0001471939999999998, 0.00014712500000000142, 0.00014718000000000023, 0.0001471809999999997, 0.00014719499999999927, 0.00014719500000000274, 0.00014720799999999937, 0.00014720799999999937, 0.0001471939999999998, 0.0001471939999999998, 0.0001471939999999998, 0.0001472220000000024, 0.00014722199999999894, 0.0001471939999999998, 0.00014719500000000274, 0.00014719499999999927, 0.0001472220000000024, 0.0001471809999999997, 0.0001471939999999998, 0.00014718000000000023, 0.0001472359999999985, 0.0001471939999999998, 0.00014719400000000327, 0.00014719499999999927, 0.00014719499999999927, 0.00014719500000000274, 0.000147139000000001, 0.0001471939999999998, 0.0001471939999999998, 0.0001471939999999998, 0.0001471939999999998, 0.0001471939999999998, 0.0001471939999999998, 0.00014719499999999927, 0.0001471809999999997, 0.00014719499999999927, 0.00014719500000000274, 0.0001471939999999998, 0.00014720799999999937, 0.00014726399999999765, 0.00014720799999999937, 0.0001471939999999998, 0.0001471939999999998, 0.0001471809999999997, 0.0001471809999999997, 0.00014716700000000013, 0.00014719499999999927, 0.00014720800000000284]</msg>
<status status="PASS" starttime="20201030 15:52:56.936" endtime="20201030 15:52:56.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.931" endtime="20201030 15:52:56.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:56.943" endtime="20201030 15:52:56.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.942" endtime="20201030 15:52:56.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.940" endtime="20201030 15:52:56.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.555" endtime="20201030 15:52:56.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.554" endtime="20201030 15:52:56.964"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.974" endtime="20201030 15:52:56.991"></status>
</kw>
<msg timestamp="20201030 15:52:56.992" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.972" endtime="20201030 15:52:56.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:56.994" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:56.993" endtime="20201030 15:52:56.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:56.995" endtime="20201030 15:52:56.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.969" endtime="20201030 15:52:56.998"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.967" endtime="20201030 15:52:56.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.006" endtime="20201030 15:52:57.291"></status>
</kw>
<msg timestamp="20201030 15:52:57.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018868014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.004" endtime="20201030 15:52:57.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018868014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019029375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.295" endtime="20201030 15:52:57.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.303" endtime="20201030 15:52:57.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.001" endtime="20201030 15:52:57.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.999" endtime="20201030 15:52:57.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:57.311" level="INFO">${PHILIP_RES} = [{'diff': 0.00016136100000000222}, {'diff': 0.00016125000000000167}, {'diff': 0.0001612499999999982}, {'diff': 0.00016123599999999863}, {'diff': 0.0001612079999999995}, {'diff': 0.00016127799999999734...</msg>
<status status="PASS" starttime="20201030 15:52:57.307" endtime="20201030 15:52:57.311"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.315" level="INFO">${RESULT} = {'diff': [0.00016136100000000222, 0.00016125000000000167, 0.0001612499999999982, 0.00016123599999999863, 0.0001612079999999995, 0.00016127799999999734, 0.00016129200000000038, 0.0001612360000000021, 0...</msg>
<status status="PASS" starttime="20201030 15:52:57.312" endtime="20201030 15:52:57.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.319" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:57.318" endtime="20201030 15:52:57.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.321" level="INFO">VALUE: [0.00016136100000000222, 0.00016125000000000167, 0.0001612499999999982, 0.00016123599999999863, 0.0001612079999999995, 0.00016127799999999734, 0.00016129200000000038, 0.0001612360000000021, 0.0001612360000000021, 0.00016122200000000253, 0.00016129200000000038, 0.00016130599999999995, 0.00016122199999999906, 0.0001612079999999995, 0.00016126400000000124, 0.00016116600000000078, 0.0001612360000000021, 0.00016125000000000167, 0.0001612499999999982, 0.00016123599999999863, 0.00016123599999999863, 0.0001612369999999981, 0.00016125000000000167, 0.00016126300000000177, 0.00016125000000000167, 0.00016126300000000177, 0.00016122299999999853, 0.0001612499999999982, 0.0001612499999999982, 0.0001611949999999994, 0.0001612360000000021, 0.00016126400000000124, 0.0001612780000000008, 0.00016125000000000167, 0.0001612910000000009, 0.0001612499999999982, 0.00016126399999999777, 0.00016126399999999777, 0.00016122199999999906, 0.00016122200000000253, 0.00016126400000000124, 0.00016126400000000124, 0.0001612079999999995, 0.00016122199999999906, 0.0001612499999999982, 0.00016123599999999863, 0.00016125000000000167, 0.0001612360000000021, 0.00016122200000000253, 0.0001612499999999982]</msg>
<status status="PASS" starttime="20201030 15:52:57.320" endtime="20201030 15:52:57.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.315" endtime="20201030 15:52:57.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.327" endtime="20201030 15:52:57.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.325" endtime="20201030 15:52:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.324" endtime="20201030 15:52:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.965" endtime="20201030 15:52:57.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:56.965" endtime="20201030 15:52:57.347"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.356" endtime="20201030 15:52:57.375"></status>
</kw>
<msg timestamp="20201030 15:52:57.376" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.354" endtime="20201030 15:52:57.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.378" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.377" endtime="20201030 15:52:57.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.380" endtime="20201030 15:52:57.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.352" endtime="20201030 15:52:57.382"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.350" endtime="20201030 15:52:57.382"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.389" endtime="20201030 15:52:57.674"></status>
</kw>
<msg timestamp="20201030 15:52:57.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01878025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:57.387" endtime="20201030 15:52:57.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01878025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018956333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:57.679" endtime="20201030 15:52:57.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.687" endtime="20201030 15:52:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.385" endtime="20201030 15:52:57.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.383" endtime="20201030 15:52:57.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:57.693" level="INFO">${PHILIP_RES} = [{'diff': 0.0001760830000000005}, {'diff': 0.00017594500000000027}, {'diff': 0.00017592999999999775}, {'diff': 0.00017591699999999766}, {'diff': 0.0001759029999999981}, {'diff': 0.00017587499999999895...</msg>
<status status="PASS" starttime="20201030 15:52:57.690" endtime="20201030 15:52:57.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:57.697" level="INFO">${RESULT} = {'diff': [0.0001760830000000005, 0.00017594500000000027, 0.00017592999999999775, 0.00017591699999999766, 0.0001759029999999981, 0.00017587499999999895, 0.00017588899999999852, 0.0001759029999999981, 0...</msg>
<status status="PASS" starttime="20201030 15:52:57.694" endtime="20201030 15:52:57.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.702" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:57.701" endtime="20201030 15:52:57.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.704" level="INFO">VALUE: [0.0001760830000000005, 0.00017594500000000027, 0.00017592999999999775, 0.00017591699999999766, 0.0001759029999999981, 0.00017587499999999895, 0.00017588899999999852, 0.0001759029999999981, 0.0001758189999999972, 0.00017590300000000156, 0.00017590300000000156, 0.00017595899999999984, 0.00017591600000000165, 0.00017587499999999895, 0.00017594500000000027, 0.00017590200000000208, 0.00017590300000000156, 0.0001759029999999981, 0.0001759729999999994, 0.00017597199999999993, 0.00017588899999999852, 0.00017588899999999852, 0.00017590199999999862, 0.00017591700000000113, 0.000175889000000002, 0.00017593000000000122, 0.000175889000000002, 0.00017590300000000156, 0.00017590300000000156, 0.00017590300000000156, 0.00017591700000000113, 0.00017583300000000024, 0.00017590199999999862, 0.00017588899999999852, 0.0001759029999999981, 0.0001759029999999981, 0.00017590300000000156, 0.000175889000000002, 0.00017590300000000156, 0.00017586099999999938, 0.000175889000000002, 0.00017581900000000067, 0.00017591600000000165, 0.00017590300000000156, 0.00017591700000000113, 0.0001758469999999998, 0.00017587499999999895, 0.00017588899999999852, 0.0001759029999999981, 0.00017590199999999862]</msg>
<status status="PASS" starttime="20201030 15:52:57.703" endtime="20201030 15:52:57.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.698" endtime="20201030 15:52:57.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:57.710" endtime="20201030 15:52:57.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.709" endtime="20201030 15:52:57.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.708" endtime="20201030 15:52:57.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.348" endtime="20201030 15:52:57.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.348" endtime="20201030 15:52:57.731"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.740" endtime="20201030 15:52:57.759"></status>
</kw>
<msg timestamp="20201030 15:52:57.760" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.738" endtime="20201030 15:52:57.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:57.762" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:57.761" endtime="20201030 15:52:57.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.763" endtime="20201030 15:52:57.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.735" endtime="20201030 15:52:57.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.733" endtime="20201030 15:52:57.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:57.773" endtime="20201030 15:52:58.058"></status>
</kw>
<msg timestamp="20201030 15:52:58.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:57.771" endtime="20201030 15:52:58.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018184778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.062" endtime="20201030 15:52:58.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.071" endtime="20201030 15:52:58.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.768" endtime="20201030 15:52:58.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.767" endtime="20201030 15:52:58.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:58.077" level="INFO">${PHILIP_RES} = [{'diff': 0.0001912359999999974}, {'diff': 0.00019117999999999913}, {'diff': 0.00019115299999999946}, {'diff': 0.00019116699999999903}, {'diff': 0.00019116699999999903}, {'diff': 0.0001911799999999991...</msg>
<status status="PASS" starttime="20201030 15:52:58.074" endtime="20201030 15:52:58.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.082" level="INFO">${RESULT} = {'diff': [0.0001912359999999974, 0.00019117999999999913, 0.00019115299999999946, 0.00019116699999999903, 0.00019116699999999903, 0.00019117999999999913, 0.00019116699999999903, 0.00019116699999999903,...</msg>
<status status="PASS" starttime="20201030 15:52:58.078" endtime="20201030 15:52:58.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.086" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:58.085" endtime="20201030 15:52:58.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.089" level="INFO">VALUE: [0.0001912359999999974, 0.00019117999999999913, 0.00019115299999999946, 0.00019116699999999903, 0.00019116699999999903, 0.00019117999999999913, 0.00019116699999999903, 0.00019116699999999903, 0.00019116599999999956, 0.0001911809999999986, 0.00019115299999999946, 0.00019117999999999913, 0.0001911809999999986, 0.0001911670000000025, 0.00019115299999999946, 0.000191152, 0.0001911670000000025, 0.00019112500000000032, 0.00019115300000000293, 0.0001911670000000025, 0.0001911670000000025, 0.00019115299999999946, 0.00019116599999999956, 0.00019122300000000078, 0.0001911389999999999, 0.00019116599999999956, 0.00019117999999999913, 0.00019116699999999903, 0.00019112500000000032, 0.00019117999999999913, 0.00019115299999999946, 0.00019109700000000118, 0.00019116599999999956, 0.00019117999999999913, 0.00019116699999999903, 0.00019116699999999903, 0.000191152, 0.00019112500000000032, 0.0001911670000000025, 0.00019116600000000303, 0.00019115299999999946, 0.00019115299999999946, 0.00019116699999999903, 0.0001911389999999999, 0.0001911809999999986, 0.00019115299999999946, 0.00019116599999999956, 0.00019116699999999903, 0.0001911389999999999, 0.00019116599999999956]</msg>
<status status="PASS" starttime="20201030 15:52:58.088" endtime="20201030 15:52:58.090"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.083" endtime="20201030 15:52:58.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.094" endtime="20201030 15:52:58.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.092" endtime="20201030 15:52:58.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.091" endtime="20201030 15:52:58.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.732" endtime="20201030 15:52:58.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:57.731" endtime="20201030 15:52:58.115"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.123" endtime="20201030 15:52:58.142"></status>
</kw>
<msg timestamp="20201030 15:52:58.142" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.122" endtime="20201030 15:52:58.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.145" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.143" endtime="20201030 15:52:58.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.146" endtime="20201030 15:52:58.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.119" endtime="20201030 15:52:58.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.117" endtime="20201030 15:52:58.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.155" endtime="20201030 15:52:58.442"></status>
</kw>
<msg timestamp="20201030 15:52:58.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018347181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.154" endtime="20201030 15:52:58.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018347181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.446" endtime="20201030 15:52:58.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.454" endtime="20201030 15:52:58.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.151" endtime="20201030 15:52:58.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.149" endtime="20201030 15:52:58.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:58.461" level="INFO">${PHILIP_RES} = [{'diff': 0.00020713900000000202}, {'diff': 0.0002070690000000007}, {'diff': 0.00020704200000000103}, {'diff': 0.0002070409999999981}, {'diff': 0.00020699999999999885}, {'diff': 0.00020704199999999756...</msg>
<status status="PASS" starttime="20201030 15:52:58.458" endtime="20201030 15:52:58.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.465" level="INFO">${RESULT} = {'diff': [0.00020713900000000202, 0.0002070690000000007, 0.00020704200000000103, 0.0002070409999999981, 0.00020699999999999885, 0.00020704199999999756, 0.00020704200000000103, 0.00020702699999999852, ...</msg>
<status status="PASS" starttime="20201030 15:52:58.462" endtime="20201030 15:52:58.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.470" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:58.469" endtime="20201030 15:52:58.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.472" level="INFO">VALUE: [0.00020713900000000202, 0.0002070690000000007, 0.00020704200000000103, 0.0002070409999999981, 0.00020699999999999885, 0.00020704199999999756, 0.00020704200000000103, 0.00020702699999999852, 0.00020704200000000103, 0.0002069719999999997, 0.00020704100000000156, 0.0002070409999999981, 0.00020701399999999842, 0.000207027999999998, 0.0002070140000000019, 0.00020709699999999984, 0.00020704199999999756, 0.000207027999999998, 0.0002070409999999981, 0.00020702800000000146, 0.00020704199999999756, 0.00020704200000000103, 0.0002070409999999981, 0.00020702800000000146, 0.00020707000000000017, 0.00020702800000000146, 0.0002070409999999981, 0.00020704200000000103, 0.00020704199999999756, 0.0002070140000000019, 0.00020699999999999885, 0.0002070560000000006, 0.00020704199999999756, 0.00020704100000000156, 0.00020699999999999885, 0.00020704200000000103, 0.00020705599999999713, 0.0002070690000000007, 0.0002070560000000006, 0.0002070140000000019, 0.00020708399999999974, 0.000207027000000002, 0.00020704200000000103, 0.00020704200000000103, 0.00020701399999999842, 0.00020702800000000146, 0.0002070140000000019, 0.00020704200000000103, 0.00020697200000000318, 0.0002070409999999981]</msg>
<status status="PASS" starttime="20201030 15:52:58.471" endtime="20201030 15:52:58.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.466" endtime="20201030 15:52:58.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.477" endtime="20201030 15:52:58.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.476" endtime="20201030 15:52:58.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.475" endtime="20201030 15:52:58.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.116" endtime="20201030 15:52:58.498"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.115" endtime="20201030 15:52:58.498"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.507" endtime="20201030 15:52:58.526"></status>
</kw>
<msg timestamp="20201030 15:52:58.527" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.505" endtime="20201030 15:52:58.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.529" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.528" endtime="20201030 15:52:58.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.530" endtime="20201030 15:52:58.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.502" endtime="20201030 15:52:58.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.501" endtime="20201030 15:52:58.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.540" endtime="20201030 15:52:58.826"></status>
</kw>
<msg timestamp="20201030 15:52:58.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.538" endtime="20201030 15:52:58.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018711972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:58.830" endtime="20201030 15:52:58.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.838" endtime="20201030 15:52:58.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.535" endtime="20201030 15:52:58.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.534" endtime="20201030 15:52:58.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:58.844" level="INFO">${PHILIP_RES} = [{'diff': 0.00022362499999999813}, {'diff': 0.00022351400000000105}, {'diff': 0.00022351400000000105}, {'diff': 0.00022350000000000148}, {'diff': 0.00022354200000000019}, {'diff': 0.000223527999999997...</msg>
<status status="PASS" starttime="20201030 15:52:58.841" endtime="20201030 15:52:58.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:58.849" level="INFO">${RESULT} = {'diff': [0.00022362499999999813, 0.00022351400000000105, 0.00022351400000000105, 0.00022350000000000148, 0.00022354200000000019, 0.00022352799999999715, 0.00022350000000000148, 0.00022351400000000105...</msg>
<status status="PASS" starttime="20201030 15:52:58.845" endtime="20201030 15:52:58.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.853" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:58.852" endtime="20201030 15:52:58.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.855" level="INFO">VALUE: [0.00022362499999999813, 0.00022351400000000105, 0.00022351400000000105, 0.00022350000000000148, 0.00022354200000000019, 0.00022352799999999715, 0.00022350000000000148, 0.00022351400000000105, 0.00022350000000000148, 0.00022351399999999758, 0.00022351400000000105, 0.00022348599999999844, 0.0002235410000000007, 0.00022351399999999758, 0.00022356899999999985, 0.0002234869999999979, 0.00022350000000000148, 0.000223499999999998, 0.00022345899999999877, 0.00022352700000000114, 0.00022351400000000105, 0.00022352700000000114, 0.000223499999999998, 0.00022344399999999973, 0.00022351400000000105, 0.00022345800000000277, 0.00022351399999999758, 0.000223499999999998, 0.00022351400000000105, 0.00022350000000000148, 0.00022351399999999758, 0.00022347199999999887, 0.0002234860000000019, 0.00022347200000000234, 0.00022354200000000019, 0.00022352800000000062, 0.00022351400000000105, 0.00022352800000000062, 0.00022352800000000062, 0.00022355500000000028, 0.00022348599999999844, 0.00022351400000000105, 0.00022351400000000105, 0.000223499999999998, 0.00022356899999999985, 0.00022351400000000105, 0.00022351400000000105, 0.0002235129999999981, 0.00022351400000000105, 0.00022351300000000157]</msg>
<status status="PASS" starttime="20201030 15:52:58.854" endtime="20201030 15:52:58.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.849" endtime="20201030 15:52:58.860"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:58.864" endtime="20201030 15:52:58.883"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.862" endtime="20201030 15:52:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.861" endtime="20201030 15:52:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.499" endtime="20201030 15:52:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.499" endtime="20201030 15:52:58.884"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.893" endtime="20201030 15:52:58.916"></status>
</kw>
<msg timestamp="20201030 15:52:58.916" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.891" endtime="20201030 15:52:58.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:58.919" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:58.917" endtime="20201030 15:52:58.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.920" endtime="20201030 15:52:58.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.889" endtime="20201030 15:52:58.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.887" endtime="20201030 15:52:58.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:58.929" endtime="20201030 15:52:59.215"></status>
</kw>
<msg timestamp="20201030 15:52:59.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01792575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:58.927" endtime="20201030 15:52:59.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01792575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018166486, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:52:59.219" endtime="20201030 15:52:59.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.227" endtime="20201030 15:52:59.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.925" endtime="20201030 15:52:59.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.923" endtime="20201030 15:52:59.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:59.234" level="INFO">${PHILIP_RES} = [{'diff': 0.00024073599999999834}, {'diff': 0.00024055499999999994}, {'diff': 0.00024062500000000125}, {'diff': 0.00024061099999999822}, {'diff': 0.00024062500000000125}, {'diff': 0.000240597000000002...</msg>
<status status="PASS" starttime="20201030 15:52:59.231" endtime="20201030 15:52:59.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.239" level="INFO">${RESULT} = {'diff': [0.00024073599999999834, 0.00024055499999999994, 0.00024062500000000125, 0.00024061099999999822, 0.00024062500000000125, 0.00024059700000000211, 0.00024059699999999865, 0.00024061100000000168...</msg>
<status status="PASS" starttime="20201030 15:52:59.235" endtime="20201030 15:52:59.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.243" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:59.242" endtime="20201030 15:52:59.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.246" level="INFO">VALUE: [0.00024073599999999834, 0.00024055499999999994, 0.00024062500000000125, 0.00024061099999999822, 0.00024062500000000125, 0.00024059700000000211, 0.00024059699999999865, 0.00024061100000000168, 0.00024061100000000168, 0.00024058399999999855, 0.00024056999999999898, 0.00024059700000000211, 0.00024059699999999865, 0.00024062500000000125, 0.00024061100000000168, 0.0002406119999999977, 0.00024058299999999908, 0.00024058300000000254, 0.00024059699999999865, 0.00024061099999999822, 0.00024058400000000202, 0.00024058299999999908, 0.00024061099999999822, 0.00024061100000000168, 0.00024059699999999865, 0.00024058399999999855, 0.00024055499999999994, 0.00024061100000000168, 0.00024059699999999865, 0.00024059699999999865, 0.0002405980000000016, 0.00024058299999999908, 0.00024059699999999865, 0.00024059700000000211, 0.00024059699999999865, 0.00024059799999999812, 0.00024059700000000211, 0.00024059699999999865, 0.00024059699999999865, 0.00024062500000000125, 0.00024062500000000125, 0.00024061099999999822, 0.00024066699999999996, 0.00024059700000000211, 0.00024059699999999865, 0.00024058399999999855, 0.00024061100000000168, 0.00024059699999999865, 0.00024054100000000037, 0.00024059699999999865]</msg>
<status status="PASS" starttime="20201030 15:52:59.244" endtime="20201030 15:52:59.246"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.240" endtime="20201030 15:52:59.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.251" endtime="20201030 15:52:59.270"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.249" endtime="20201030 15:52:59.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.248" endtime="20201030 15:52:59.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.885" endtime="20201030 15:52:59.271"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:58.885" endtime="20201030 15:52:59.271"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.280" endtime="20201030 15:52:59.300"></status>
</kw>
<msg timestamp="20201030 15:52:59.301" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.278" endtime="20201030 15:52:59.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.303" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.302" endtime="20201030 15:52:59.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.304" endtime="20201030 15:52:59.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.276" endtime="20201030 15:52:59.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.274" endtime="20201030 15:52:59.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.314" endtime="20201030 15:52:59.602"></status>
</kw>
<msg timestamp="20201030 15:52:59.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018107278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.312" endtime="20201030 15:52:59.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017848875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018107278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.607" endtime="20201030 15:52:59.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.615" endtime="20201030 15:52:59.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.310" endtime="20201030 15:52:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.308" endtime="20201030 15:52:59.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:52:59.621" level="INFO">${PHILIP_RES} = [{'diff': 0.0002584030000000008}, {'diff': 0.00025830500000000034}, {'diff': 0.00025829100000000077}, {'diff': 0.00025825000000000153}, {'diff': 0.00025829200000000024}, {'diff': 0.0002583059999999998...</msg>
<status status="PASS" starttime="20201030 15:52:59.618" endtime="20201030 15:52:59.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:52:59.625" level="INFO">${RESULT} = {'diff': [0.0002584030000000008, 0.00025830500000000034, 0.00025829100000000077, 0.00025825000000000153, 0.00025829200000000024, 0.0002583059999999998, 0.00025829100000000077, 0.00025829100000000077, ...</msg>
<status status="PASS" starttime="20201030 15:52:59.622" endtime="20201030 15:52:59.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.630" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 15:52:59.629" endtime="20201030 15:52:59.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.632" level="INFO">VALUE: [0.0002584030000000008, 0.00025830500000000034, 0.00025829100000000077, 0.00025825000000000153, 0.00025829200000000024, 0.0002583059999999998, 0.00025829100000000077, 0.00025829100000000077, 0.00025824999999999806, 0.00025829200000000024, 0.0002582640000000011, 0.0002582770000000012, 0.0002582909999999973, 0.0002582780000000007, 0.0002583059999999998, 0.00025830500000000034, 0.0002582770000000012, 0.0002583059999999998, 0.0002582780000000007, 0.0002582779999999972, 0.00025830500000000034, 0.0002582770000000012, 0.0002583059999999998, 0.00025829200000000024, 0.00025829200000000024, 0.00025829100000000077, 0.00025830500000000034, 0.00025829200000000024, 0.00025829200000000024, 0.00025829200000000024, 0.00025829100000000077, 0.00025829200000000024, 0.00025829200000000024, 0.00025829200000000024, 0.0002582780000000007, 0.00025830499999999687, 0.0002583059999999998, 0.0002582780000000007, 0.00025829200000000024, 0.00025829100000000077, 0.00025830500000000034, 0.00025833399999999895, 0.0002583059999999998, 0.0002583059999999998, 0.00025830500000000034, 0.00025826399999999763, 0.0002583059999999998, 0.00025829200000000024, 0.0002582780000000007, 0.00025829100000000077]</msg>
<status status="PASS" starttime="20201030 15:52:59.631" endtime="20201030 15:52:59.633"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.626" endtime="20201030 15:52:59.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:52:59.637" endtime="20201030 15:52:59.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.636" endtime="20201030 15:52:59.657"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.635" endtime="20201030 15:52:59.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.272" endtime="20201030 15:52:59.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.272" endtime="20201030 15:52:59.658"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.667" endtime="20201030 15:52:59.690"></status>
</kw>
<msg timestamp="20201030 15:52:59.690" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.665" endtime="20201030 15:52:59.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:52:59.693" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:52:59.691" endtime="20201030 15:52:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.694" endtime="20201030 15:52:59.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.662" endtime="20201030 15:52:59.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.660" endtime="20201030 15:52:59.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:52:59.703" endtime="20201030 15:52:59.990"></status>
</kw>
<msg timestamp="20201030 15:52:59.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018715375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.702" endtime="20201030 15:52:59.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018715375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018992083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:52:59.994" endtime="20201030 15:53:00.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.002" endtime="20201030 15:53:00.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.699" endtime="20201030 15:53:00.005"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.697" endtime="20201030 15:53:00.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:00.009" level="INFO">${PHILIP_RES} = [{'diff': 0.0002767080000000005}, {'diff': 0.00027659699999999995}, {'diff': 0.0002766109999999995}, {'diff': 0.0002765830000000004}, {'diff': 0.00027659699999999995}, {'diff': 0.0002765700000000003},...</msg>
<status status="PASS" starttime="20201030 15:53:00.006" endtime="20201030 15:53:00.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.013" level="INFO">${RESULT} = {'diff': [0.0002767080000000005, 0.00027659699999999995, 0.0002766109999999995, 0.0002765830000000004, 0.00027659699999999995, 0.0002765700000000003, 0.00027659699999999995, 0.00027661200000000247, 0....</msg>
<status status="PASS" starttime="20201030 15:53:00.010" endtime="20201030 15:53:00.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.018" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:00.016" endtime="20201030 15:53:00.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.020" level="INFO">VALUE: [0.0002767080000000005, 0.00027659699999999995, 0.0002766109999999995, 0.0002765830000000004, 0.00027659699999999995, 0.0002765700000000003, 0.00027659699999999995, 0.00027661200000000247, 0.00027659799999999943, 0.00027658400000000333, 0.0002766109999999995, 0.0002765690000000008, 0.0002765829999999969, 0.0002765830000000004, 0.0002765549999999978, 0.00027659699999999995, 0.00027659699999999995, 0.0002766109999999995, 0.00027659699999999995, 0.0002765980000000029, 0.0002765700000000003, 0.00027658399999999986, 0.00027659699999999995, 0.00027655500000000124, 0.00027659699999999995, 0.00027659699999999995, 0.0002765830000000004, 0.00027659699999999995, 0.00027659699999999995, 0.00027659699999999995, 0.00027658399999999986, 0.0002766670000000013, 0.00027659799999999943, 0.00027659699999999995, 0.0002765409999999982, 0.0002766109999999995, 0.0002765830000000004, 0.0002765830000000004, 0.0002766109999999995, 0.000276611000000003, 0.0002765700000000003, 0.0002765969999999965, 0.0002765980000000029, 0.00027657000000000376, 0.0002765839999999964, 0.0002765970000000034, 0.0002765409999999982, 0.0002765829999999969, 0.0002765829999999969, 0.0002765970000000034]</msg>
<status status="PASS" starttime="20201030 15:53:00.019" endtime="20201030 15:53:00.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.014" endtime="20201030 15:53:00.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.030" endtime="20201030 15:53:00.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.028" endtime="20201030 15:53:00.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.027" endtime="20201030 15:53:00.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.659" endtime="20201030 15:53:00.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:59.658" endtime="20201030 15:53:00.051"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.060" endtime="20201030 15:53:00.083"></status>
</kw>
<msg timestamp="20201030 15:53:00.083" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.058" endtime="20201030 15:53:00.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.086" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.084" endtime="20201030 15:53:00.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.087" endtime="20201030 15:53:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.055" endtime="20201030 15:53:00.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.053" endtime="20201030 15:53:00.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.096" endtime="20201030 15:53:00.382"></status>
</kw>
<msg timestamp="20201030 15:53:00.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018186153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.095" endtime="20201030 15:53:00.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018186153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018481778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.386" endtime="20201030 15:53:00.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.394" endtime="20201030 15:53:00.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.092" endtime="20201030 15:53:00.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.090" endtime="20201030 15:53:00.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:00.400" level="INFO">${PHILIP_RES} = [{'diff': 0.00029562500000000075}, {'diff': 0.0002955000000000006}, {'diff': 0.00029548600000000105}, {'diff': 0.0002955000000000006}, {'diff': 0.0002955000000000006}, {'diff': 0.0002955000000000006},...</msg>
<status status="PASS" starttime="20201030 15:53:00.397" endtime="20201030 15:53:00.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.405" level="INFO">${RESULT} = {'diff': [0.00029562500000000075, 0.0002955000000000006, 0.00029548600000000105, 0.0002955000000000006, 0.0002955000000000006, 0.0002955000000000006, 0.0002955000000000006, 0.00029548600000000105, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:00.401" endtime="20201030 15:53:00.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.410" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:00.409" endtime="20201030 15:53:00.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.412" level="INFO">VALUE: [0.00029562500000000075, 0.0002955000000000006, 0.00029548600000000105, 0.0002955000000000006, 0.0002955000000000006, 0.0002955000000000006, 0.0002955000000000006, 0.00029548600000000105, 0.0002955140000000002, 0.00029548600000000105, 0.0002954859999999976, 0.000295471999999998, 0.00029548600000000105, 0.0002954859999999976, 0.00029548600000000105, 0.00029549999999999715, 0.0002955000000000006, 0.00029549999999999715, 0.0002954720000000015, 0.0002955000000000006, 0.0002955000000000006, 0.0002954870000000005, 0.0002955140000000002, 0.00029548600000000105, 0.0002955140000000002, 0.0002955000000000006, 0.00029547300000000096, 0.00029549999999999715, 0.0002955140000000002, 0.0002955140000000002, 0.0002955140000000002, 0.00029549999999999715, 0.0002955000000000006, 0.00029548600000000105, 0.0002954859999999976, 0.00029552799999999976, 0.000295471999999998, 0.0002955140000000002, 0.0002955000000000006, 0.00029554099999999986, 0.00029548600000000105, 0.0002954859999999976, 0.0002954299999999993, 0.0002955000000000041, 0.00029549999999999715, 0.00029549999999999715, 0.0002955000000000041, 0.00029545799999999844, 0.0002955139999999967, 0.00029556900000000247]</msg>
<status status="PASS" starttime="20201030 15:53:00.411" endtime="20201030 15:53:00.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.406" endtime="20201030 15:53:00.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.417" endtime="20201030 15:53:00.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.416" endtime="20201030 15:53:00.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.414" endtime="20201030 15:53:00.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.052" endtime="20201030 15:53:00.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.051" endtime="20201030 15:53:00.438"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.447" endtime="20201030 15:53:00.472"></status>
</kw>
<msg timestamp="20201030 15:53:00.473" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.445" endtime="20201030 15:53:00.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.475" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.474" endtime="20201030 15:53:00.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.476" endtime="20201030 15:53:00.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.442" endtime="20201030 15:53:00.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.440" endtime="20201030 15:53:00.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.485" endtime="20201030 15:53:00.771"></status>
</kw>
<msg timestamp="20201030 15:53:00.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01822525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:00.484" endtime="20201030 15:53:00.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017910097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01822525, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:00.776" endtime="20201030 15:53:00.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.784" endtime="20201030 15:53:00.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.481" endtime="20201030 15:53:00.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.479" endtime="20201030 15:53:00.786"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:00.790" level="INFO">${PHILIP_RES} = [{'diff': 0.0003151529999999986}, {'diff': 0.00031501400000000235}, {'diff': 0.00031505600000000106}, {'diff': 0.00031502799999999845}, {'diff': 0.000315026999999999}, {'diff': 0.0003150139999999989},...</msg>
<status status="PASS" starttime="20201030 15:53:00.787" endtime="20201030 15:53:00.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:00.794" level="INFO">${RESULT} = {'diff': [0.0003151529999999986, 0.00031501400000000235, 0.00031505600000000106, 0.00031502799999999845, 0.000315026999999999, 0.0003150139999999989, 0.0003149999999999993, 0.0003150139999999989, 0.00...</msg>
<status status="PASS" starttime="20201030 15:53:00.791" endtime="20201030 15:53:00.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.799" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:00.798" endtime="20201030 15:53:00.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.801" level="INFO">VALUE: [0.0003151529999999986, 0.00031501400000000235, 0.00031505600000000106, 0.00031502799999999845, 0.000315026999999999, 0.0003150139999999989, 0.0003149999999999993, 0.0003150139999999989, 0.0003150139999999989, 0.0003150280000000019, 0.0003150000000000028, 0.0003150139999999989, 0.0003149999999999993, 0.0003150139999999989, 0.0003150000000000028, 0.0003150139999999989, 0.0003149999999999993, 0.0003150139999999989, 0.0003150280000000019, 0.0003149999999999993, 0.0003149999999999993, 0.000315041000000002, 0.0003149999999999993, 0.0003149999999999993, 0.0003150139999999989, 0.0003149999999999993, 0.0003150550000000016, 0.00031501400000000235, 0.0003150139999999989, 0.00031494400000000103, 0.0003150139999999989, 0.0003150280000000019, 0.0003149999999999993, 0.0003150139999999989, 0.0003149580000000006, 0.0003149999999999993, 0.000315041000000002, 0.0003150139999999989, 0.0003150000000000028, 0.00031498599999999627, 0.00031501400000000235, 0.00031498599999999627, 0.00031501400000000235, 0.000315041000000002, 0.0003150139999999954, 0.00031501400000000235, 0.0003150000000000028, 0.000315027999999995, 0.0003149870000000027, 0.0003150139999999954]</msg>
<status status="PASS" starttime="20201030 15:53:00.800" endtime="20201030 15:53:00.802"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.795" endtime="20201030 15:53:00.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:00.806" endtime="20201030 15:53:00.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.805" endtime="20201030 15:53:00.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.803" endtime="20201030 15:53:00.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.439" endtime="20201030 15:53:00.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.438" endtime="20201030 15:53:00.827"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.835" endtime="20201030 15:53:00.862"></status>
</kw>
<msg timestamp="20201030 15:53:00.862" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.834" endtime="20201030 15:53:00.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:00.865" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:00.863" endtime="20201030 15:53:00.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.866" endtime="20201030 15:53:00.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.831" endtime="20201030 15:53:00.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.829" endtime="20201030 15:53:00.868"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:00.875" endtime="20201030 15:53:01.161"></status>
</kw>
<msg timestamp="20201030 15:53:01.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019074667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:00.873" endtime="20201030 15:53:01.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018739347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019074667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.165" endtime="20201030 15:53:01.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.173" endtime="20201030 15:53:01.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.871" endtime="20201030 15:53:01.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.869" endtime="20201030 15:53:01.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:01.180" level="INFO">${PHILIP_RES} = [{'diff': 0.00033532000000000006}, {'diff': 0.00033513900000000166}, {'diff': 0.0003351250000000021}, {'diff': 0.0003351389999999982}, {'diff': 0.0003351250000000021}, {'diff': 0.0003351389999999982},...</msg>
<status status="PASS" starttime="20201030 15:53:01.177" endtime="20201030 15:53:01.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.184" level="INFO">${RESULT} = {'diff': [0.00033532000000000006, 0.00033513900000000166, 0.0003351250000000021, 0.0003351389999999982, 0.0003351250000000021, 0.0003351389999999982, 0.00033513900000000166, 0.00033515300000000123, 0....</msg>
<status status="PASS" starttime="20201030 15:53:01.181" endtime="20201030 15:53:01.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.188" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:01.187" endtime="20201030 15:53:01.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.191" level="INFO">VALUE: [0.00033532000000000006, 0.00033513900000000166, 0.0003351250000000021, 0.0003351389999999982, 0.0003351250000000021, 0.0003351389999999982, 0.00033513900000000166, 0.00033515300000000123, 0.00033511099999999905, 0.0003351250000000021, 0.00033516599999999785, 0.00033513900000000166, 0.00033518100000000037, 0.00033513900000000166, 0.00033515300000000123, 0.0003351249999999986, 0.0003351380000000022, 0.0003351389999999982, 0.0003351250000000021, 0.0003351249999999986, 0.00033516699999999733, 0.0003351389999999982, 0.0003351249999999986, 0.00033513900000000166, 0.0003351389999999982, 0.00033513900000000166, 0.0003350829999999999, 0.0003351249999999986, 0.0003351250000000021, 0.0003351249999999986, 0.0003351250000000021, 0.0003350839999999994, 0.00033513900000000166, 0.0003351249999999986, 0.00033513900000000166, 0.0003351249999999986, 0.00033512500000000556, 0.0003351379999999987, 0.0003351389999999982, 0.0003351389999999982, 0.0003351389999999982, 0.0003351249999999986, 0.0003350829999999999, 0.0003350970000000064, 0.0003351249999999986, 0.0003350839999999994, 0.0003352220000000031, 0.00033516699999999733, 0.0003351249999999986, 0.0003351389999999982]</msg>
<status status="PASS" starttime="20201030 15:53:01.189" endtime="20201030 15:53:01.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.185" endtime="20201030 15:53:01.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.197" endtime="20201030 15:53:01.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.195" endtime="20201030 15:53:01.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.194" endtime="20201030 15:53:01.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.828" endtime="20201030 15:53:01.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:00.827" endtime="20201030 15:53:01.218"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.229" endtime="20201030 15:53:01.258"></status>
</kw>
<msg timestamp="20201030 15:53:01.258" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.227" endtime="20201030 15:53:01.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.261" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.259" endtime="20201030 15:53:01.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.263" endtime="20201030 15:53:01.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.224" endtime="20201030 15:53:01.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.221" endtime="20201030 15:53:01.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.274" endtime="20201030 15:53:01.560"></status>
</kw>
<msg timestamp="20201030 15:53:01.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.273" endtime="20201030 15:53:01.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021450722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021806694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.564" endtime="20201030 15:53:01.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.572" endtime="20201030 15:53:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.269" endtime="20201030 15:53:01.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.267" endtime="20201030 15:53:01.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:01.578" level="INFO">${PHILIP_RES} = [{'diff': 0.000355972000000003}, {'diff': 0.00035587499999999855}, {'diff': 0.000355860999999999}, {'diff': 0.000355860999999999}, {'diff': 0.000355860999999999}, {'diff': 0.00035586100000000245}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:01.575" endtime="20201030 15:53:01.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:01.583" level="INFO">${RESULT} = {'diff': [0.000355972000000003, 0.00035587499999999855, 0.000355860999999999, 0.000355860999999999, 0.000355860999999999, 0.00035586100000000245, 0.000355860999999999, 0.000355875000000002, 0.00035583...</msg>
<status status="PASS" starttime="20201030 15:53:01.579" endtime="20201030 15:53:01.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.588" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:01.587" endtime="20201030 15:53:01.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.590" level="INFO">VALUE: [0.000355972000000003, 0.00035587499999999855, 0.000355860999999999, 0.000355860999999999, 0.000355860999999999, 0.00035586100000000245, 0.000355860999999999, 0.000355875000000002, 0.00035583299999999984, 0.00035587499999999855, 0.0003558470000000029, 0.0003558479999999989, 0.0003558469999999994, 0.0003558469999999994, 0.000355860999999999, 0.000355860999999999, 0.00035583299999999984, 0.00035587499999999855, 0.00035587499999999855, 0.000355860999999999, 0.00035586100000000245, 0.00035587499999999855, 0.0003559029999999977, 0.00035593000000000083, 0.0003558339999999993, 0.00035587499999999855, 0.0003558610000000059, 0.0003558469999999994, 0.000355860999999999, 0.0003558750000000055, 0.0003558050000000007, 0.0003558469999999994, 0.0003558610000000059, 0.0003559029999999977, 0.000355860999999999, 0.000355860999999999, 0.0003558610000000059, 0.0003558469999999994, 0.0003559029999999977, 0.0003558610000000059, 0.0003558469999999994, 0.0003558889999999981, 0.000355860999999999, 0.0003559029999999977, 0.0003558469999999994, 0.0003558469999999994, 0.0003558469999999994, 0.0003558339999999993, 0.000355860999999999, 0.00035590300000000463]</msg>
<status status="PASS" starttime="20201030 15:53:01.589" endtime="20201030 15:53:01.591"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.584" endtime="20201030 15:53:01.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:01.595" endtime="20201030 15:53:01.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.594" endtime="20201030 15:53:01.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.593" endtime="20201030 15:53:01.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.219" endtime="20201030 15:53:01.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.218" endtime="20201030 15:53:01.616"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.624" endtime="20201030 15:53:01.652"></status>
</kw>
<msg timestamp="20201030 15:53:01.653" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.623" endtime="20201030 15:53:01.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.655" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:01.654" endtime="20201030 15:53:01.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.656" endtime="20201030 15:53:01.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.620" endtime="20201030 15:53:01.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.618" endtime="20201030 15:53:01.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.665" endtime="20201030 15:53:01.963"></status>
</kw>
<msg timestamp="20201030 15:53:01.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.664" endtime="20201030 15:53:01.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:01.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017826708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018204028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:01.973" endtime="20201030 15:53:01.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:01.991" endtime="20201030 15:53:01.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.661" endtime="20201030 15:53:01.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.660" endtime="20201030 15:53:01.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:02.004" level="INFO">${PHILIP_RES} = [{'diff': 0.00037732000000000043}, {'diff': 0.00037719400000000083}, {'diff': 0.000377222}, {'diff': 0.0003771950000000003}, {'diff': 0.0003772080000000004}, {'diff': 0.00037719400000000083}, {'diff':...</msg>
<status status="PASS" starttime="20201030 15:53:01.998" endtime="20201030 15:53:02.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.011" level="INFO">${RESULT} = {'diff': [0.00037732000000000043, 0.00037719400000000083, 0.000377222, 0.0003771950000000003, 0.0003772080000000004, 0.00037719400000000083, 0.0003771950000000003, 0.0003771950000000003, 0.00037719400...</msg>
<status status="PASS" starttime="20201030 15:53:02.007" endtime="20201030 15:53:02.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.015" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:02.014" endtime="20201030 15:53:02.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.018" level="INFO">VALUE: [0.00037732000000000043, 0.00037719400000000083, 0.000377222, 0.0003771950000000003, 0.0003772080000000004, 0.00037719400000000083, 0.0003771950000000003, 0.0003771950000000003, 0.00037719400000000083, 0.0003772089999999999, 0.0003772080000000004, 0.00037715299999999813, 0.0003771950000000003, 0.000377222, 0.00037718000000000126, 0.00037719499999999684, 0.000377222, 0.00037718000000000126, 0.000377222, 0.0003771950000000003, 0.0003772080000000004, 0.0003772230000000029, 0.0003771950000000003, 0.0003772639999999987, 0.00037718100000000074, 0.0003771950000000003, 0.00037719400000000083, 0.00037719400000000083, 0.0003771950000000003, 0.00037718000000000126, 0.00037723599999999954, 0.00037713899999999856, 0.0003772359999999961, 0.0003772219999999965, 0.0003771950000000038, 0.00037724999999999564, 0.0003771799999999978, 0.0003771950000000038, 0.00037720799999999693, 0.00037720799999999693, 0.00037720900000000335, 0.0003771379999999991, 0.0003771940000000043, 0.00037720900000000335, 0.00037719399999999736, 0.0003772080000000039, 0.0003771950000000038, 0.00037720799999999693, 0.0003771799999999978, 0.0003771950000000038]</msg>
<status status="PASS" starttime="20201030 15:53:02.016" endtime="20201030 15:53:02.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.012" endtime="20201030 15:53:02.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.023" endtime="20201030 15:53:02.042"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.021" endtime="20201030 15:53:02.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.020" endtime="20201030 15:53:02.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.617" endtime="20201030 15:53:02.043"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:01.616" endtime="20201030 15:53:02.043"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.052" endtime="20201030 15:53:02.082"></status>
</kw>
<msg timestamp="20201030 15:53:02.082" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.050" endtime="20201030 15:53:02.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.085" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.083" endtime="20201030 15:53:02.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.086" endtime="20201030 15:53:02.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.048" endtime="20201030 15:53:02.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.046" endtime="20201030 15:53:02.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.095" endtime="20201030 15:53:02.381"></status>
</kw>
<msg timestamp="20201030 15:53:02.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019135889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.094" endtime="20201030 15:53:02.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018736625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019135889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.385" endtime="20201030 15:53:02.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.393" endtime="20201030 15:53:02.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.091" endtime="20201030 15:53:02.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.089" endtime="20201030 15:53:02.396"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:02.400" level="INFO">${PHILIP_RES} = [{'diff': 0.00039926399999999987}, {'diff': 0.000399179999999999}, {'diff': 0.0003991250000000002}, {'diff': 0.0003991250000000002}, {'diff': 0.0003991250000000002}, {'diff': 0.0003991810000000019}, {...</msg>
<status status="PASS" starttime="20201030 15:53:02.397" endtime="20201030 15:53:02.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.404" level="INFO">${RESULT} = {'diff': [0.00039926399999999987, 0.000399179999999999, 0.0003991250000000002, 0.0003991250000000002, 0.0003991250000000002, 0.0003991810000000019, 0.000399194000000002, 0.0003991250000000002, 0.00039...</msg>
<status status="PASS" starttime="20201030 15:53:02.401" endtime="20201030 15:53:02.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.408" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:02.407" endtime="20201030 15:53:02.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.411" level="INFO">VALUE: [0.00039926399999999987, 0.000399179999999999, 0.0003991250000000002, 0.0003991250000000002, 0.0003991250000000002, 0.0003991810000000019, 0.000399194000000002, 0.0003991250000000002, 0.0003991250000000002, 0.00039913899999999974, 0.0003991659999999994, 0.0003992089999999976, 0.0003991249999999967, 0.00039915199999999984, 0.0003991529999999993, 0.00039913899999999974, 0.00039913899999999974, 0.0003991250000000002, 0.0003991529999999993, 0.00039913899999999974, 0.00039918099999999845, 0.0003991250000000002, 0.0003991250000000002, 0.0003991250000000002, 0.00039915199999999984, 0.0003991390000000032, 0.0003991250000000002, 0.0003991250000000002, 0.00039913899999999974, 0.00039919399999999855, 0.0003991659999999994, 0.0003990969999999941, 0.00039913899999999974, 0.00039913800000000027, 0.0003991670000000058, 0.0003991250000000002, 0.00039913899999999974, 0.0003991670000000058, 0.0003991529999999993, 0.00039913899999999974, 0.00039913899999999974, 0.0003991250000000002, 0.00039913899999999974, 0.0003991250000000002, 0.00039907000000000137, 0.0003991250000000002, 0.00039913899999999974, 0.0003991659999999994, 0.0003991670000000058, 0.0003991669999999989]</msg>
<status status="PASS" starttime="20201030 15:53:02.409" endtime="20201030 15:53:02.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.405" endtime="20201030 15:53:02.415"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.419" endtime="20201030 15:53:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.417" endtime="20201030 15:53:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.416" endtime="20201030 15:53:02.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.044" endtime="20201030 15:53:02.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.044" endtime="20201030 15:53:02.440"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.448" endtime="20201030 15:53:02.480"></status>
</kw>
<msg timestamp="20201030 15:53:02.480" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.447" endtime="20201030 15:53:02.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.483" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.481" endtime="20201030 15:53:02.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.484" endtime="20201030 15:53:02.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.444" endtime="20201030 15:53:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.442" endtime="20201030 15:53:02.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.493" endtime="20201030 15:53:02.791"></status>
</kw>
<msg timestamp="20201030 15:53:02.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017975625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.491" endtime="20201030 15:53:02.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017975625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018397431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.800" endtime="20201030 15:53:02.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.818" endtime="20201030 15:53:02.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.489" endtime="20201030 15:53:02.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.487" endtime="20201030 15:53:02.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:02.825" level="INFO">${PHILIP_RES} = [{'diff': 0.00042180600000000026}, {'diff': 0.00042168000000000067}, {'diff': 0.0004217079999999998}, {'diff': 0.0004216949999999997}, {'diff': 0.0004216949999999997}, {'diff': 0.0004216520000000015},...</msg>
<status status="PASS" starttime="20201030 15:53:02.822" endtime="20201030 15:53:02.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:02.830" level="INFO">${RESULT} = {'diff': [0.00042180600000000026, 0.00042168000000000067, 0.0004217079999999998, 0.0004216949999999997, 0.0004216949999999997, 0.0004216520000000015, 0.00042163900000000143, 0.00042168100000000014, 0....</msg>
<status status="PASS" starttime="20201030 15:53:02.826" endtime="20201030 15:53:02.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.836" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:02.834" endtime="20201030 15:53:02.836"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.840" level="INFO">VALUE: [0.00042180600000000026, 0.00042168000000000067, 0.0004217079999999998, 0.0004216949999999997, 0.0004216949999999997, 0.0004216520000000015, 0.00042163900000000143, 0.00042168100000000014, 0.00042168099999999667, 0.00042169399999999677, 0.0004217079999999998, 0.00042162500000000186, 0.00042168100000000014, 0.00042168100000000014, 0.00042168000000000067, 0.0004217079999999998, 0.0004217089999999993, 0.00042170900000000275, 0.00042169400000000024, 0.0004217219999999994, 0.0004217079999999998, 0.00042166700000000057, 0.0004216949999999997, 0.00042169400000000024, 0.00042169400000000024, 0.0004217089999999993, 0.0004216949999999997, 0.00042169400000000024, 0.0004217079999999998, 0.00042169399999999677, 0.0004216949999999997, 0.0004216949999999997, 0.0004216939999999933, 0.00042169400000000024, 0.0004216949999999997, 0.00042169400000000024, 0.00042168000000000067, 0.0004216799999999937, 0.00042166700000000057, 0.00042161099999999535, 0.00042168000000000067, 0.00042168000000000067, 0.00042169400000000024, 0.0004216949999999997, 0.0004216949999999997, 0.0004217079999999998, 0.00042169400000000024, 0.00042168100000000014, 0.00042168100000000014, 0.0004217219999999994]</msg>
<status status="PASS" starttime="20201030 15:53:02.837" endtime="20201030 15:53:02.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.831" endtime="20201030 15:53:02.841"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:02.847" endtime="20201030 15:53:02.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.845" endtime="20201030 15:53:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.842" endtime="20201030 15:53:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.441" endtime="20201030 15:53:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.440" endtime="20201030 15:53:02.869"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.877" endtime="20201030 15:53:02.909"></status>
</kw>
<msg timestamp="20201030 15:53:02.910" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.875" endtime="20201030 15:53:02.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:02.912" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:02.911" endtime="20201030 15:53:02.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.913" endtime="20201030 15:53:02.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.873" endtime="20201030 15:53:02.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.871" endtime="20201030 15:53:02.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:02.922" endtime="20201030 15:53:03.209"></status>
</kw>
<msg timestamp="20201030 15:53:03.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018585056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:02.921" endtime="20201030 15:53:03.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018140083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018585056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.213" endtime="20201030 15:53:03.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.221" endtime="20201030 15:53:03.222"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.918" endtime="20201030 15:53:03.223"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.916" endtime="20201030 15:53:03.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:03.227" level="INFO">${PHILIP_RES} = [{'diff': 0.0004449729999999978}, {'diff': 0.00044484800000000116}, {'diff': 0.00044486199999999726}, {'diff': 0.00044491600000000006}, {'diff': 0.0004448609999999978}, {'diff': 0.000444820000000002},...</msg>
<status status="PASS" starttime="20201030 15:53:03.224" endtime="20201030 15:53:03.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.231" level="INFO">${RESULT} = {'diff': [0.0004449729999999978, 0.00044484800000000116, 0.00044486199999999726, 0.00044491600000000006, 0.0004448609999999978, 0.000444820000000002, 0.00044481999999999855, 0.0004448470000000017, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:03.228" endtime="20201030 15:53:03.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.236" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:03.235" endtime="20201030 15:53:03.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.238" level="INFO">VALUE: [0.0004449729999999978, 0.00044484800000000116, 0.00044486199999999726, 0.00044491600000000006, 0.0004448609999999978, 0.000444820000000002, 0.00044481999999999855, 0.0004448470000000017, 0.0004448750000000008, 0.00044486100000000126, 0.00044486100000000126, 0.0004448469999999982, 0.0004448469999999982, 0.0004448189999999991, 0.0004448470000000017, 0.00044483299999999865, 0.00044486100000000126, 0.0004448469999999982, 0.00044491699999999954, 0.0004448469999999982, 0.0004448330000000021, 0.0004448469999999982, 0.0004448470000000017, 0.00044483299999999865, 0.00044484800000000116, 0.0004448479999999977, 0.0004448750000000008, 0.00044486199999999726, 0.0004448479999999977, 0.00044484800000000463, 0.0004448339999999981, 0.0004448339999999981, 0.00044476400000000027, 0.0004448339999999981, 0.0004449300000000031, 0.0004448189999999991, 0.0004449159999999966, 0.0004448609999999978, 0.00044484700000000515, 0.00044487499999999736, 0.00044487499999999736, 0.0004448469999999982, 0.00044484700000000515, 0.00044483299999999865, 0.00044483299999999865, 0.0004448049999999995, 0.00044483299999999865, 0.0004448609999999978, 0.0004448609999999978, 0.0004448889999999969]</msg>
<status status="PASS" starttime="20201030 15:53:03.237" endtime="20201030 15:53:03.239"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.232" endtime="20201030 15:53:03.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.243" endtime="20201030 15:53:03.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.242" endtime="20201030 15:53:03.263"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.240" endtime="20201030 15:53:03.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.869" endtime="20201030 15:53:03.264"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:02.869" endtime="20201030 15:53:03.264"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.272" endtime="20201030 15:53:03.307"></status>
</kw>
<msg timestamp="20201030 15:53:03.308" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.271" endtime="20201030 15:53:03.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.310" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.309" endtime="20201030 15:53:03.311"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.311" endtime="20201030 15:53:03.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.268" endtime="20201030 15:53:03.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.266" endtime="20201030 15:53:03.314"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.320" endtime="20201030 15:53:03.607"></status>
</kw>
<msg timestamp="20201030 15:53:03.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018750153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.319" endtime="20201030 15:53:03.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018750153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019218889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.611" endtime="20201030 15:53:03.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.619" endtime="20201030 15:53:03.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.316" endtime="20201030 15:53:03.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.314" endtime="20201030 15:53:03.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:03.625" level="INFO">${PHILIP_RES} = [{'diff': 0.00046873600000000085}, {'diff': 0.00046865299999999943}, {'diff': 0.00046859700000000115}, {'diff': 0.0004686530000000029}, {'diff': 0.0004686120000000002}, {'diff': 0.00046859700000000115...</msg>
<status status="PASS" starttime="20201030 15:53:03.622" endtime="20201030 15:53:03.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:03.629" level="INFO">${RESULT} = {'diff': [0.00046873600000000085, 0.00046865299999999943, 0.00046859700000000115, 0.0004686530000000029, 0.0004686120000000002, 0.00046859700000000115, 0.0004685980000000006, 0.00046859700000000115, 0...</msg>
<status status="PASS" starttime="20201030 15:53:03.626" endtime="20201030 15:53:03.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.634" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:03.633" endtime="20201030 15:53:03.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.636" level="INFO">VALUE: [0.00046873600000000085, 0.00046865299999999943, 0.00046859700000000115, 0.0004686530000000029, 0.0004686120000000002, 0.00046859700000000115, 0.0004685980000000006, 0.00046859700000000115, 0.0004686250000000003, 0.0004686250000000003, 0.0004686250000000003, 0.00046859700000000115, 0.0004685830000000016, 0.0004686110000000007, 0.0004686110000000007, 0.0004686250000000003, 0.00046859700000000115, 0.0004686110000000007, 0.0004686250000000003, 0.0004685969999999977, 0.0004686110000000007, 0.00046861099999999725, 0.0004686799999999991, 0.0004685969999999977, 0.0004686120000000002, 0.00046869399999999867, 0.0004686250000000003, 0.00046859700000000115, 0.0004686250000000003, 0.0004686110000000007, 0.0004686250000000003, 0.0004686110000000007, 0.0004686250000000003, 0.0004686120000000002, 0.0004686110000000007, 0.00046865299999999943, 0.00046859700000000115, 0.0004686250000000003, 0.00046869399999999867, 0.00046865299999999943, 0.0004685980000000006, 0.00046863899999999986, 0.0004685980000000006, 0.00046866700000000594, 0.00046859700000000115, 0.0004686109999999938, 0.00046863899999999986, 0.0004685839999999941, 0.00046869499999999814, 0.0004686250000000003]</msg>
<status status="PASS" starttime="20201030 15:53:03.635" endtime="20201030 15:53:03.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.630" endtime="20201030 15:53:03.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:03.642" endtime="20201030 15:53:03.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.641" endtime="20201030 15:53:03.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.639" endtime="20201030 15:53:03.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.265" endtime="20201030 15:53:03.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.264" endtime="20201030 15:53:03.663"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.671" endtime="20201030 15:53:03.708"></status>
</kw>
<msg timestamp="20201030 15:53:03.708" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.670" endtime="20201030 15:53:03.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:03.711" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:03.709" endtime="20201030 15:53:03.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.712" endtime="20201030 15:53:03.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.667" endtime="20201030 15:53:03.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.665" endtime="20201030 15:53:03.714"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:03.721" endtime="20201030 15:53:04.007"></status>
</kw>
<msg timestamp="20201030 15:53:04.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017914569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:03.719" endtime="20201030 15:53:04.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017914569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018407653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.011" endtime="20201030 15:53:04.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.019" endtime="20201030 15:53:04.020"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.717" endtime="20201030 15:53:04.021"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.715" endtime="20201030 15:53:04.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:04.025" level="INFO">${PHILIP_RES} = [{'diff': 0.0004930839999999978}, {'diff': 0.000493012999999997}, {'diff': 0.0004929719999999978}, {'diff': 0.0004929590000000011}, {'diff': 0.0004929730000000007}, {'diff': 0.0004929450000000016}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:04.022" endtime="20201030 15:53:04.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.030" level="INFO">${RESULT} = {'diff': [0.0004930839999999978, 0.000493012999999997, 0.0004929719999999978, 0.0004929590000000011, 0.0004929730000000007, 0.0004929450000000016, 0.0004929860000000008, 0.0004930000000000004, 0.00049...</msg>
<status status="PASS" starttime="20201030 15:53:04.026" endtime="20201030 15:53:04.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.034" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:04.033" endtime="20201030 15:53:04.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.037" level="INFO">VALUE: [0.0004930839999999978, 0.000493012999999997, 0.0004929719999999978, 0.0004929590000000011, 0.0004929730000000007, 0.0004929450000000016, 0.0004929860000000008, 0.0004930000000000004, 0.0004929860000000008, 0.0004929860000000008, 0.0004929860000000008, 0.0004929590000000011, 0.0004929860000000008, 0.000493027, 0.0004929729999999972, 0.0004929170000000024, 0.0004929870000000003, 0.0004929870000000003, 0.0004929450000000016, 0.0004930000000000004, 0.0004929860000000008, 0.0004929860000000008, 0.0004930000000000004, 0.0004929870000000003, 0.0004929859999999973, 0.0004929870000000003, 0.0004929870000000003, 0.0004929870000000003, 0.0004929450000000016, 0.0004929860000000008, 0.0004929450000000016, 0.000493014, 0.0004929720000000012, 0.0004929860000000008, 0.0004929860000000008, 0.0004929720000000012, 0.0004929860000000008, 0.0004930000000000004, 0.0004930000000000004, 0.0004929720000000012, 0.0004929720000000012, 0.0004929580000000017, 0.0004929299999999956, 0.0004929580000000017, 0.0004929720000000012, 0.0004930000000000004, 0.0004930000000000004, 0.0004929440000000021, 0.0004929860000000008, 0.0004929720000000012]</msg>
<status status="PASS" starttime="20201030 15:53:04.035" endtime="20201030 15:53:04.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.031" endtime="20201030 15:53:04.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.042" endtime="20201030 15:53:04.061"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.040" endtime="20201030 15:53:04.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.039" endtime="20201030 15:53:04.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.664" endtime="20201030 15:53:04.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:03.663" endtime="20201030 15:53:04.063"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.071" endtime="20201030 15:53:04.108"></status>
</kw>
<msg timestamp="20201030 15:53:04.109" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.070" endtime="20201030 15:53:04.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.111" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.110" endtime="20201030 15:53:04.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.112" endtime="20201030 15:53:04.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.067" endtime="20201030 15:53:04.114"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.065" endtime="20201030 15:53:04.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.121" endtime="20201030 15:53:04.408"></status>
</kw>
<msg timestamp="20201030 15:53:04.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.120" endtime="20201030 15:53:04.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017949528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018467611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.412" endtime="20201030 15:53:04.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.420" endtime="20201030 15:53:04.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.117" endtime="20201030 15:53:04.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.115" endtime="20201030 15:53:04.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:04.427" level="INFO">${PHILIP_RES} = [{'diff': 0.000518082999999999}, {'diff': 0.0005179730000000014}, {'diff': 0.0005179299999999998}, {'diff': 0.0005180140000000007}, {'diff': 0.0005179719999999985}, {'diff': 0.0005179589999999984}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:04.424" endtime="20201030 15:53:04.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.431" level="INFO">${RESULT} = {'diff': [0.000518082999999999, 0.0005179730000000014, 0.0005179299999999998, 0.0005180140000000007, 0.0005179719999999985, 0.0005179589999999984, 0.0005179580000000024, 0.0005179580000000024, 0.00051...</msg>
<status status="PASS" starttime="20201030 15:53:04.428" endtime="20201030 15:53:04.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.435" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:04.434" endtime="20201030 15:53:04.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.438" level="INFO">VALUE: [0.000518082999999999, 0.0005179730000000014, 0.0005179299999999998, 0.0005180140000000007, 0.0005179719999999985, 0.0005179589999999984, 0.0005179580000000024, 0.0005179580000000024, 0.0005179590000000019, 0.0005179580000000024, 0.000517972000000002, 0.0005179449999999988, 0.0005179719999999985, 0.0005179309999999993, 0.0005179309999999993, 0.0005179579999999989, 0.0005179580000000024, 0.0005179590000000019, 0.0005179580000000024, 0.0005179579999999989, 0.0005179860000000015, 0.0005179579999999989, 0.0005179439999999993, 0.0005179590000000019, 0.0005179719999999985, 0.0005179579999999989, 0.0005179449999999988, 0.0005179579999999989, 0.0005179579999999989, 0.0005179579999999989, 0.000517972999999998, 0.0005179579999999989, 0.0005179579999999989, 0.0005179589999999984, 0.0005179579999999989, 0.0005179579999999989, 0.0005179449999999988, 0.0005179579999999989, 0.0005179720000000054, 0.0005179870000000045, 0.0005179580000000059, 0.0005179580000000059, 0.0005179730000000049, 0.000517986000000005, 0.0005179859999999981, 0.0005179589999999984, 0.0005179589999999984, 0.0005180279999999968, 0.0005179030000000001, 0.0005179589999999984]</msg>
<status status="PASS" starttime="20201030 15:53:04.437" endtime="20201030 15:53:04.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.432" endtime="20201030 15:53:04.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.443" endtime="20201030 15:53:04.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.441" endtime="20201030 15:53:04.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.440" endtime="20201030 15:53:04.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.063" endtime="20201030 15:53:04.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.063" endtime="20201030 15:53:04.464"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.472" endtime="20201030 15:53:04.511"></status>
</kw>
<msg timestamp="20201030 15:53:04.511" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.471" endtime="20201030 15:53:04.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.514" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.512" endtime="20201030 15:53:04.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.515" endtime="20201030 15:53:04.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.468" endtime="20201030 15:53:04.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.466" endtime="20201030 15:53:04.517"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.524" endtime="20201030 15:53:04.810"></status>
</kw>
<msg timestamp="20201030 15:53:04.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.522" endtime="20201030 15:53:04.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018820778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019364472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.815" endtime="20201030 15:53:04.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.823" endtime="20201030 15:53:04.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.520" endtime="20201030 15:53:04.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.518" endtime="20201030 15:53:04.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:04.829" level="INFO">${PHILIP_RES} = [{'diff': 0.0005436940000000008}, {'diff': 0.000543542000000001}, {'diff': 0.0005435409999999981}, {'diff': 0.0005435280000000015}, {'diff': 0.0005435139999999984}, {'diff': 0.0005435560000000006}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:04.826" endtime="20201030 15:53:04.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:04.833" level="INFO">${RESULT} = {'diff': [0.0005436940000000008, 0.000543542000000001, 0.0005435409999999981, 0.0005435280000000015, 0.0005435139999999984, 0.0005435560000000006, 0.000543542000000001, 0.0005435699999999967, 0.000543...</msg>
<status status="PASS" starttime="20201030 15:53:04.830" endtime="20201030 15:53:04.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.838" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:04.837" endtime="20201030 15:53:04.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.840" level="INFO">VALUE: [0.0005436940000000008, 0.000543542000000001, 0.0005435409999999981, 0.0005435280000000015, 0.0005435139999999984, 0.0005435560000000006, 0.000543542000000001, 0.0005435699999999967, 0.000543542000000001, 0.0005435280000000015, 0.0005435560000000006, 0.000543542000000001, 0.0005435560000000006, 0.0005435550000000011, 0.0005435560000000006, 0.0005435419999999976, 0.0005435560000000006, 0.0005435280000000015, 0.0005435560000000006, 0.0005435830000000003, 0.0005435139999999984, 0.0005435549999999977, 0.000543542000000001, 0.0005435550000000011, 0.0005435700000000002, 0.0005435550000000011, 0.000543542000000001, 0.0005435689999999938, 0.0005435280000000015, 0.0005435550000000011, 0.000543542000000001, 0.0005435000000000023, 0.0005435560000000006, 0.0005435690000000007, 0.000543542000000001, 0.0005436389999999985, 0.0005435560000000006, 0.000543542000000001, 0.0005435560000000006, 0.0005435140000000019, 0.0005435419999999941, 0.0005435560000000006, 0.0005435560000000006, 0.0005435560000000006, 0.0005435550000000011, 0.0005435280000000015, 0.0005435560000000006, 0.000543542000000001, 0.0005435969999999998, 0.000543542000000001]</msg>
<status status="PASS" starttime="20201030 15:53:04.839" endtime="20201030 15:53:04.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.834" endtime="20201030 15:53:04.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:04.846" endtime="20201030 15:53:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.845" endtime="20201030 15:53:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.843" endtime="20201030 15:53:04.866"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.465" endtime="20201030 15:53:04.867"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.464" endtime="20201030 15:53:04.867"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.875" endtime="20201030 15:53:04.916"></status>
</kw>
<msg timestamp="20201030 15:53:04.917" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.874" endtime="20201030 15:53:04.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:04.919" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:04.918" endtime="20201030 15:53:04.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.920" endtime="20201030 15:53:04.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.871" endtime="20201030 15:53:04.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.869" endtime="20201030 15:53:04.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:04.929" endtime="20201030 15:53:05.215"></status>
</kw>
<msg timestamp="20201030 15:53:05.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019101903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:04.928" endtime="20201030 15:53:05.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018532083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019101903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.220" endtime="20201030 15:53:05.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.228" endtime="20201030 15:53:05.229"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.925" endtime="20201030 15:53:05.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.923" endtime="20201030 15:53:05.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:05.234" level="INFO">${PHILIP_RES} = [{'diff': 0.0005698199999999987}, {'diff': 0.0005697219999999982}, {'diff': 0.0005697500000000008}, {'diff': 0.0005697499999999973}, {'diff': 0.000569791}, {'diff': 0.0005697500000000008}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:53:05.231" endtime="20201030 15:53:05.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.239" level="INFO">${RESULT} = {'diff': [0.0005698199999999987, 0.0005697219999999982, 0.0005697500000000008, 0.0005697499999999973, 0.000569791, 0.0005697500000000008, 0.0005697079999999986, 0.0005697640000000004, 0.000569791, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:05.235" endtime="20201030 15:53:05.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.243" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:05.242" endtime="20201030 15:53:05.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.246" level="INFO">VALUE: [0.0005698199999999987, 0.0005697219999999982, 0.0005697500000000008, 0.0005697499999999973, 0.000569791, 0.0005697500000000008, 0.0005697079999999986, 0.0005697640000000004, 0.000569791, 0.0005698199999999987, 0.0005697359999999978, 0.0005697360000000012, 0.0005697499999999973, 0.0005697220000000017, 0.0005697640000000004, 0.0005697220000000017, 0.0005697360000000012, 0.0005697640000000004, 0.0005697090000000016, 0.0005697500000000008, 0.0005697360000000012, 0.0005697500000000008, 0.0005697359999999943, 0.0005697360000000012, 0.0005697500000000008, 0.0005697360000000012, 0.0005697500000000008, 0.0005697219999999947, 0.0005697230000000011, 0.0005697360000000012, 0.0005697360000000012, 0.0005697359999999943, 0.0005697370000000007, 0.0005697500000000008, 0.0005697370000000007, 0.0005697359999999943, 0.0005697500000000008, 0.0005697360000000012, 0.000569695000000002, 0.0005697500000000008, 0.0005697370000000007, 0.0005697500000000008, 0.0005697370000000007, 0.0005697500000000008, 0.0005697369999999938, 0.0005697220000000017, 0.0005697500000000008, 0.0005697919999999995, 0.0005697640000000004, 0.0005697219999999947]</msg>
<status status="PASS" starttime="20201030 15:53:05.245" endtime="20201030 15:53:05.253"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.240" endtime="20201030 15:53:05.254"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.258" endtime="20201030 15:53:05.277"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.256" endtime="20201030 15:53:05.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.255" endtime="20201030 15:53:05.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.868" endtime="20201030 15:53:05.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:04.867" endtime="20201030 15:53:05.279"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.287" endtime="20201030 15:53:05.326"></status>
</kw>
<msg timestamp="20201030 15:53:05.326" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.286" endtime="20201030 15:53:05.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.329" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.328" endtime="20201030 15:53:05.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.330" endtime="20201030 15:53:05.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.283" endtime="20201030 15:53:05.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.281" endtime="20201030 15:53:05.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.339" endtime="20201030 15:53:05.626"></status>
</kw>
<msg timestamp="20201030 15:53:05.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018084417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018681069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.338" endtime="20201030 15:53:05.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018084417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018681069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.630" endtime="20201030 15:53:05.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.638" endtime="20201030 15:53:05.640"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.335" endtime="20201030 15:53:05.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.333" endtime="20201030 15:53:05.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:05.646" level="INFO">${PHILIP_RES} = [{'diff': 0.0005966520000000031}, {'diff': 0.0005965839999999972}, {'diff': 0.0005965280000000024}, {'diff': 0.000596540999999999}, {'diff': 0.0005966110000000004}, {'diff': 0.0005964860000000002}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:05.642" endtime="20201030 15:53:05.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:05.655" level="INFO">${RESULT} = {'diff': [0.0005966520000000031, 0.0005965839999999972, 0.0005965280000000024, 0.000596540999999999, 0.0005966110000000004, 0.0005964860000000002, 0.0005965559999999981, 0.0005965419999999985, 0.00059...</msg>
<status status="PASS" starttime="20201030 15:53:05.648" endtime="20201030 15:53:05.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.664" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:05.662" endtime="20201030 15:53:05.665"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.669" level="INFO">VALUE: [0.0005966520000000031, 0.0005965839999999972, 0.0005965280000000024, 0.000596540999999999, 0.0005966110000000004, 0.0005964860000000002, 0.0005965559999999981, 0.0005965419999999985, 0.000596540999999999, 0.0005965419999999985, 0.0005965270000000029, 0.0005965419999999985, 0.000596542000000002, 0.0005965410000000025, 0.0005965419999999985, 0.0005965140000000028, 0.0005965419999999985, 0.0005965419999999985, 0.000596540999999999, 0.0005965419999999985, 0.0005965139999999994, 0.0005965419999999985, 0.0005965419999999985, 0.000596540999999999, 0.0005965420000000055, 0.0005965419999999985, 0.000596540999999999, 0.000596527999999999, 0.000596540999999999, 0.000596527999999999, 0.0005965559999999981, 0.0005965549999999986, 0.000596527999999999, 0.000596540999999999, 0.000596556000000005, 0.0005965419999999985, 0.000596540999999999, 0.0005965559999999981, 0.000596540999999999, 0.0005965280000000059, 0.0005965699999999977, 0.0005965689999999982, 0.0005965419999999985, 0.0005965690000000051, 0.0005965280000000059, 0.0005965559999999981, 0.0005965269999999995, 0.0005965559999999981, 0.0005965830000000047, 0.000596541000000006]</msg>
<status status="PASS" starttime="20201030 15:53:05.666" endtime="20201030 15:53:05.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.657" endtime="20201030 15:53:05.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:05.680" endtime="20201030 15:53:05.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.676" endtime="20201030 15:53:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.674" endtime="20201030 15:53:05.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.280" endtime="20201030 15:53:05.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.279" endtime="20201030 15:53:05.704"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.723" endtime="20201030 15:53:05.768"></status>
</kw>
<msg timestamp="20201030 15:53:05.768" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.719" endtime="20201030 15:53:05.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:05.771" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:05.769" endtime="20201030 15:53:05.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.772" endtime="20201030 15:53:05.773"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.714" endtime="20201030 15:53:05.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.710" endtime="20201030 15:53:05.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:05.781" endtime="20201030 15:53:06.067"></status>
</kw>
<msg timestamp="20201030 15:53:06.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:05.780" endtime="20201030 15:53:06.070"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034075736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.071" endtime="20201030 15:53:06.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.079" endtime="20201030 15:53:06.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.777" endtime="20201030 15:53:06.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.775" endtime="20201030 15:53:06.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:06.085" level="INFO">${PHILIP_RES} = [{'diff': 0.0006240829999999975}, {'diff': 0.0006239580000000008}, {'diff': 0.0006239580000000008}, {'diff': 0.0006239300000000017}, {'diff': 0.0006239720000000004}, {'diff': 0.0006239450000000007}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.082" endtime="20201030 15:53:06.086"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.090" level="INFO">${RESULT} = {'diff': [0.0006240829999999975, 0.0006239580000000008, 0.0006239580000000008, 0.0006239300000000017, 0.0006239720000000004, 0.0006239450000000007, 0.0006239729999999999, 0.0006239720000000004, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:53:06.087" endtime="20201030 15:53:06.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.094" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:06.093" endtime="20201030 15:53:06.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.097" level="INFO">VALUE: [0.0006240829999999975, 0.0006239580000000008, 0.0006239580000000008, 0.0006239300000000017, 0.0006239720000000004, 0.0006239450000000007, 0.0006239729999999999, 0.0006239720000000004, 0.0006239440000000013, 0.0006239440000000013, 0.0006239300000000017, 0.0006239580000000008, 0.0006239720000000004, 0.0006239310000000012, 0.0006239300000000017, 0.0006239580000000008, 0.0006239439999999943, 0.0006239579999999939, 0.0006239439999999943, 0.0006239439999999943, 0.0006239590000000003, 0.000623986, 0.0006240140000000061, 0.0006238879999999961, 0.0006239440000000013, 0.0006239580000000008, 0.0006239310000000012, 0.0006239720000000004, 0.0006239590000000003, 0.0006239450000000007, 0.0006239450000000007, 0.0006239580000000008, 0.0006239720000000004, 0.0006239580000000008, 0.0006239440000000013, 0.000623986, 0.0006239450000000007, 0.0006239590000000003, 0.0006239020000000026, 0.0006239440000000013, 0.0006239440000000013, 0.0006239440000000013, 0.0006239589999999934, 0.0006239590000000073, 0.0006239590000000073, 0.0006239450000000007, 0.0006239720000000004, 0.0006240139999999922, 0.0006239720000000004, 0.0006239579999999939]</msg>
<status status="PASS" starttime="20201030 15:53:06.095" endtime="20201030 15:53:06.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.091" endtime="20201030 15:53:06.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.105" endtime="20201030 15:53:06.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.103" endtime="20201030 15:53:06.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.102" endtime="20201030 15:53:06.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.706" endtime="20201030 15:53:06.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:05.705" endtime="20201030 15:53:06.126"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.136" endtime="20201030 15:53:06.179"></status>
</kw>
<msg timestamp="20201030 15:53:06.179" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.134" endtime="20201030 15:53:06.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.181" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.180" endtime="20201030 15:53:06.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.182" endtime="20201030 15:53:06.184"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.131" endtime="20201030 15:53:06.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.129" endtime="20201030 15:53:06.185"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.192" endtime="20201030 15:53:06.485"></status>
</kw>
<msg timestamp="20201030 15:53:06.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020790208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.190" endtime="20201030 15:53:06.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020790208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.494" endtime="20201030 15:53:06.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.512" endtime="20201030 15:53:06.516"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.188" endtime="20201030 15:53:06.517"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.186" endtime="20201030 15:53:06.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:06.527" level="INFO">${PHILIP_RES} = [{'diff': 0.0006520830000000012}, {'diff': 0.0006519860000000002}, {'diff': 0.0006519720000000007}, {'diff': 0.0006519719999999972}, {'diff': 0.0006519030000000023}, {'diff': 0.0006519590000000006}, {...</msg>
<status status="PASS" starttime="20201030 15:53:06.519" endtime="20201030 15:53:06.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.538" level="INFO">${RESULT} = {'diff': [0.0006520830000000012, 0.0006519860000000002, 0.0006519720000000007, 0.0006519719999999972, 0.0006519030000000023, 0.0006519590000000006, 0.0006519590000000006, 0.0006519580000000011, 0.0006...</msg>
<status status="PASS" starttime="20201030 15:53:06.529" endtime="20201030 15:53:06.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.547" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:06.545" endtime="20201030 15:53:06.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.552" level="INFO">VALUE: [0.0006520830000000012, 0.0006519860000000002, 0.0006519720000000007, 0.0006519719999999972, 0.0006519030000000023, 0.0006519590000000006, 0.0006519590000000006, 0.0006519580000000011, 0.0006519580000000011, 0.0006518889999999992, 0.000651943999999998, 0.0006520279999999989, 0.0006519720000000007, 0.0006519590000000006, 0.0006519440000000015, 0.0006519720000000007, 0.0006519999999999998, 0.0006519580000000011, 0.0006519720000000007, 0.0006519720000000007, 0.0006520139999999994, 0.0006519720000000007, 0.0006519720000000007, 0.0006519720000000007, 0.0006519590000000006, 0.0006519720000000007, 0.0006519439999999946, 0.0006519449999999941, 0.0006519579999999942, 0.0006520419999999985, 0.0006519720000000007, 0.0006519590000000006, 0.0006519720000000007, 0.0006519580000000011, 0.0006519720000000007, 0.0006519590000000006, 0.0006519580000000011, 0.0006519999999999998, 0.0006519590000000006, 0.0006519029999999953, 0.0006519579999999942, 0.0006519019999999959, 0.0006520419999999985, 0.0006519580000000011, 0.0006519720000000007, 0.0006519720000000007, 0.0006519999999999998, 0.0006519580000000011, 0.0006519580000000011, 0.0006519720000000007]</msg>
<status status="PASS" starttime="20201030 15:53:06.549" endtime="20201030 15:53:06.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.540" endtime="20201030 15:53:06.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.560" endtime="20201030 15:53:06.580"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.559" endtime="20201030 15:53:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.557" endtime="20201030 15:53:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.127" endtime="20201030 15:53:06.581"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.126" endtime="20201030 15:53:06.581"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.590" endtime="20201030 15:53:06.633"></status>
</kw>
<msg timestamp="20201030 15:53:06.633" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.588" endtime="20201030 15:53:06.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.636" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.634" endtime="20201030 15:53:06.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.637" endtime="20201030 15:53:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.586" endtime="20201030 15:53:06.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.584" endtime="20201030 15:53:06.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.646" endtime="20201030 15:53:06.933"></status>
</kw>
<msg timestamp="20201030 15:53:06.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018611681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.644" endtime="20201030 15:53:06.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017930972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018611681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:06.937" endtime="20201030 15:53:06.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.945" endtime="20201030 15:53:06.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.642" endtime="20201030 15:53:06.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.640" endtime="20201030 15:53:06.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:06.951" level="INFO">${PHILIP_RES} = [{'diff': 0.0006807090000000016}, {'diff': 0.0006805970000000015}, {'diff': 0.000680583000000002}, {'diff': 0.0006805970000000015}, {'diff': 0.0006806250000000007}, {'diff': 0.0006805560000000023}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:06.948" endtime="20201030 15:53:06.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:06.955" level="INFO">${RESULT} = {'diff': [0.0006807090000000016, 0.0006805970000000015, 0.000680583000000002, 0.0006805970000000015, 0.0006806250000000007, 0.0006805560000000023, 0.0006806110000000011, 0.000680583000000002, 0.000680...</msg>
<status status="PASS" starttime="20201030 15:53:06.952" endtime="20201030 15:53:06.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.960" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:06.959" endtime="20201030 15:53:06.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:06.962" level="INFO">VALUE: [0.0006807090000000016, 0.0006805970000000015, 0.000680583000000002, 0.0006805970000000015, 0.0006806250000000007, 0.0006805560000000023, 0.0006806110000000011, 0.000680583000000002, 0.000680583000000002, 0.0006805829999999985, 0.0006805840000000014, 0.0006805699999999984, 0.0006805969999999981, 0.0006806250000000007, 0.0006805969999999981, 0.0006806109999999976, 0.0006805829999999985, 0.0006805829999999985, 0.0006806110000000011, 0.0006805140000000001, 0.0006806249999999972, 0.0006806119999999971, 0.0006805559999999988, 0.0006805689999999989, 0.0006805829999999985, 0.0006805419999999993, 0.0006805699999999984, 0.0006806109999999976, 0.0006805969999999981, 0.0006806110000000046, 0.0006805559999999988, 0.0006805279999999997, 0.0006805699999999984, 0.0006806110000000046, 0.0006805829999999985, 0.0006805830000000054, 0.0006806109999999976, 0.0006806390000000037, 0.0006805969999999981, 0.0006806110000000046, 0.0006806109999999976, 0.0006805559999999988, 0.0006805969999999981, 0.0006806249999999972, 0.0006806109999999976, 0.0006805829999999985, 0.0006805829999999985, 0.0006806379999999973, 0.000680583999999998, 0.0006806249999999972]</msg>
<status status="PASS" starttime="20201030 15:53:06.961" endtime="20201030 15:53:06.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.956" endtime="20201030 15:53:06.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:06.967" endtime="20201030 15:53:06.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.966" endtime="20201030 15:53:06.987"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.965" endtime="20201030 15:53:06.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.582" endtime="20201030 15:53:06.988"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.582" endtime="20201030 15:53:06.988"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:06.996" endtime="20201030 15:53:07.042"></status>
</kw>
<msg timestamp="20201030 15:53:07.043" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:06.995" endtime="20201030 15:53:07.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.045" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.044" endtime="20201030 15:53:07.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.046" endtime="20201030 15:53:07.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.992" endtime="20201030 15:53:07.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.990" endtime="20201030 15:53:07.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.055" endtime="20201030 15:53:07.366"></status>
</kw>
<msg timestamp="20201030 15:53:07.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.054" endtime="20201030 15:53:07.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018600444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019310361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.371" endtime="20201030 15:53:07.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.379" endtime="20201030 15:53:07.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.051" endtime="20201030 15:53:07.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.050" endtime="20201030 15:53:07.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:07.386" level="INFO">${PHILIP_RES} = [{'diff': 0.0007099170000000009}, {'diff': 0.000709833}, {'diff': 0.0007097780000000012}, {'diff': 0.0007098199999999999}, {'diff': 0.0007098190000000004}, {'diff': 0.0007098060000000003}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:53:07.383" endtime="20201030 15:53:07.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.390" level="INFO">${RESULT} = {'diff': [0.0007099170000000009, 0.000709833, 0.0007097780000000012, 0.0007098199999999999, 0.0007098190000000004, 0.0007098060000000003, 0.000709833, 0.0007097910000000013, 0.0007098469999999996, 0.0...</msg>
<status status="PASS" starttime="20201030 15:53:07.387" endtime="20201030 15:53:07.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.394" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:07.393" endtime="20201030 15:53:07.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.396" level="INFO">VALUE: [0.0007099170000000009, 0.000709833, 0.0007097780000000012, 0.0007098199999999999, 0.0007098190000000004, 0.0007098060000000003, 0.000709833, 0.0007097910000000013, 0.0007098469999999996, 0.0007098199999999999, 0.000709833, 0.0007098060000000003, 0.0007098190000000004, 0.0007098050000000009, 0.000709833, 0.0007097499999999986, 0.0007098049999999974, 0.0007098199999999999, 0.0007098190000000004, 0.0007098190000000004, 0.000709833, 0.0007098199999999999, 0.0007098190000000004, 0.000709833, 0.0007098190000000004, 0.0007098190000000004, 0.0007097920000000008, 0.000709833, 0.0007098749999999987, 0.000709750000000002, 0.0007098190000000004, 0.0007098199999999999, 0.000709833, 0.000709833, 0.0007098190000000004, 0.0007098199999999999, 0.0007098749999999987, 0.000709833, 0.0007098609999999991, 0.000709750000000002, 0.0007098190000000004, 0.0007098199999999999, 0.0007098190000000004, 0.0007098199999999999, 0.0007098190000000004, 0.0007098199999999999, 0.0007098190000000004, 0.0007098050000000009, 0.000709833, 0.0007098199999999999]</msg>
<status status="PASS" starttime="20201030 15:53:07.395" endtime="20201030 15:53:07.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.391" endtime="20201030 15:53:07.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.402" endtime="20201030 15:53:07.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.401" endtime="20201030 15:53:07.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.400" endtime="20201030 15:53:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.989" endtime="20201030 15:53:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:06.988" endtime="20201030 15:53:07.423"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.432" endtime="20201030 15:53:07.480"></status>
</kw>
<msg timestamp="20201030 15:53:07.481" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.430" endtime="20201030 15:53:07.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.483" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.482" endtime="20201030 15:53:07.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.484" endtime="20201030 15:53:07.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.427" endtime="20201030 15:53:07.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.425" endtime="20201030 15:53:07.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.494" endtime="20201030 15:53:07.779"></status>
</kw>
<msg timestamp="20201030 15:53:07.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018655819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.492" endtime="20201030 15:53:07.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017916097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018655819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.783" endtime="20201030 15:53:07.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.791" endtime="20201030 15:53:07.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.489" endtime="20201030 15:53:07.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.488" endtime="20201030 15:53:07.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:07.798" level="INFO">${PHILIP_RES} = [{'diff': 0.0007397220000000017}, {'diff': 0.0007396529999999998}, {'diff': 0.0007396669999999994}, {'diff': 0.0007396390000000003}, {'diff': 0.0007396670000000029}, {'diff': 0.0007396529999999998}, {...</msg>
<status status="PASS" starttime="20201030 15:53:07.795" endtime="20201030 15:53:07.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:07.803" level="INFO">${RESULT} = {'diff': [0.0007397220000000017, 0.0007396529999999998, 0.0007396669999999994, 0.0007396390000000003, 0.0007396670000000029, 0.0007396529999999998, 0.0007396529999999998, 0.0007396529999999998, 0.0007...</msg>
<status status="PASS" starttime="20201030 15:53:07.799" endtime="20201030 15:53:07.803"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.807" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:07.806" endtime="20201030 15:53:07.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.810" level="INFO">VALUE: [0.0007397220000000017, 0.0007396529999999998, 0.0007396669999999994, 0.0007396390000000003, 0.0007396670000000029, 0.0007396529999999998, 0.0007396529999999998, 0.0007396529999999998, 0.000739680999999999, 0.0007396520000000004, 0.0007396669999999994, 0.0007396529999999998, 0.0007396529999999998, 0.0007396670000000029, 0.0007396669999999994, 0.0007396520000000004, 0.0007396669999999994, 0.000739680999999999, 0.0007397080000000056, 0.0007396529999999998, 0.0007397230000000046, 0.0007396659999999999, 0.0007396390000000003, 0.0007396529999999998, 0.0007396799999999995, 0.0007396529999999998, 0.0007396529999999998, 0.0007396659999999999, 0.0007396529999999998, 0.0007396529999999998, 0.0007396520000000004, 0.0007397220000000052, 0.0007396669999999994, 0.0007396520000000004, 0.0007396390000000003, 0.0007396669999999994, 0.0007396379999999939, 0.0007396669999999994, 0.0007396390000000003, 0.0007396380000000008, 0.000739680999999999, 0.0007396529999999998, 0.0007396520000000004, 0.0007396669999999994, 0.0007396669999999994, 0.0007396520000000004, 0.0007396669999999994, 0.0007396669999999994, 0.0007396659999999999, 0.0007395839999999945]</msg>
<status status="PASS" starttime="20201030 15:53:07.808" endtime="20201030 15:53:07.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.804" endtime="20201030 15:53:07.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:07.816" endtime="20201030 15:53:07.836"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.814" endtime="20201030 15:53:07.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.812" endtime="20201030 15:53:07.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.424" endtime="20201030 15:53:07.837"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.423" endtime="20201030 15:53:07.837"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.846" endtime="20201030 15:53:07.894"></status>
</kw>
<msg timestamp="20201030 15:53:07.894" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.844" endtime="20201030 15:53:07.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:07.897" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:07.895" endtime="20201030 15:53:07.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.898" endtime="20201030 15:53:07.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.842" endtime="20201030 15:53:07.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.840" endtime="20201030 15:53:07.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:07.907" endtime="20201030 15:53:08.213"></status>
</kw>
<msg timestamp="20201030 15:53:08.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018944181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:07.906" endtime="20201030 15:53:08.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018173958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018944181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.217" endtime="20201030 15:53:08.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.225" endtime="20201030 15:53:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.903" endtime="20201030 15:53:08.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.901" endtime="20201030 15:53:08.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:08.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0007702230000000004}, {'diff': 0.0007700830000000013}, {'diff': 0.0007700829999999978}, {'diff': 0.000770125}, {'diff': 0.0007701110000000004}, {'diff': 0.0007700970000000008}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 15:53:08.229" endtime="20201030 15:53:08.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.236" level="INFO">${RESULT} = {'diff': [0.0007702230000000004, 0.0007700830000000013, 0.0007700829999999978, 0.000770125, 0.0007701110000000004, 0.0007700970000000008, 0.0007700970000000008, 0.0007701119999999999, 0.00077011100000...</msg>
<status status="PASS" starttime="20201030 15:53:08.233" endtime="20201030 15:53:08.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.240" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:08.239" endtime="20201030 15:53:08.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.243" level="INFO">VALUE: [0.0007702230000000004, 0.0007700830000000013, 0.0007700829999999978, 0.000770125, 0.0007701110000000004, 0.0007700970000000008, 0.0007700970000000008, 0.0007701119999999999, 0.0007701110000000004, 0.0007700829999999978, 0.0007700970000000008, 0.0007700970000000008, 0.0007700970000000008, 0.0007700970000000008, 0.0007700970000000008, 0.0007700969999999974, 0.0007701249999999965, 0.0007700839999999973, 0.0007700689999999982, 0.0007701109999999969, 0.0007700840000000042, 0.0007701110000000039, 0.0007701250000000034, 0.0007700830000000047, 0.0007700980000000038, 0.0007701109999999969, 0.0007700829999999978, 0.0007701119999999964, 0.0007700689999999982, 0.0007700969999999974, 0.0007700699999999977, 0.0007701249999999965, 0.0007700970000000043, 0.0007701110000000039, 0.0007700970000000043, 0.0007700970000000043, 0.0007700970000000043, 0.0007701120000000033, 0.0007701109999999969, 0.0007701109999999969, 0.0007700419999999986, 0.0007700699999999977, 0.0007701109999999969, 0.0007700969999999974, 0.0007701519999999962, 0.0007700829999999978, 0.0007701110000000039, 0.0007700980000000038, 0.0007700830000000047, 0.0007701110000000039]</msg>
<status status="PASS" starttime="20201030 15:53:08.241" endtime="20201030 15:53:08.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.237" endtime="20201030 15:53:08.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.248" endtime="20201030 15:53:08.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.246" endtime="20201030 15:53:08.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.245" endtime="20201030 15:53:08.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.838" endtime="20201030 15:53:08.268"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:07.838" endtime="20201030 15:53:08.269"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.277" endtime="20201030 15:53:08.328"></status>
</kw>
<msg timestamp="20201030 15:53:08.329" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.275" endtime="20201030 15:53:08.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.331" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.330" endtime="20201030 15:53:08.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.332" endtime="20201030 15:53:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.273" endtime="20201030 15:53:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.271" endtime="20201030 15:53:08.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.341" endtime="20201030 15:53:08.627"></status>
</kw>
<msg timestamp="20201030 15:53:08.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018847931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.340" endtime="20201030 15:53:08.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018847931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.631" endtime="20201030 15:53:08.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.639" endtime="20201030 15:53:08.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.337" endtime="20201030 15:53:08.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.335" endtime="20201030 15:53:08.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:08.646" level="INFO">${PHILIP_RES} = [{'diff': 0.0008012500000000033}, {'diff': 0.0008011669999999985}, {'diff': 0.0008011940000000016}, {'diff': 0.0008011529999999989}, {'diff': 0.0008011389999999993}, {'diff': 0.000801165999999999}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:08.643" endtime="20201030 15:53:08.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:08.650" level="INFO">${RESULT} = {'diff': [0.0008012500000000033, 0.0008011669999999985, 0.0008011940000000016, 0.0008011529999999989, 0.0008011389999999993, 0.000801165999999999, 0.0008011389999999993, 0.0008011519999999994, 0.00080...</msg>
<status status="PASS" starttime="20201030 15:53:08.647" endtime="20201030 15:53:08.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.654" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:08.653" endtime="20201030 15:53:08.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.657" level="INFO">VALUE: [0.0008012500000000033, 0.0008011669999999985, 0.0008011940000000016, 0.0008011529999999989, 0.0008011389999999993, 0.000801165999999999, 0.0008011389999999993, 0.0008011519999999994, 0.0008011529999999989, 0.0008011529999999989, 0.0008011669999999985, 0.0008011249999999998, 0.0008011519999999994, 0.0008011530000000024, 0.0008010970000000006, 0.0008011249999999998, 0.0008011530000000058, 0.0008011389999999993, 0.0008011669999999985, 0.000801165999999999, 0.0008011670000000054, 0.0008011529999999989, 0.0008011389999999993, 0.0008011669999999985, 0.000801165999999999, 0.0008011389999999993, 0.0008011389999999993, 0.0008011249999999998, 0.0008011670000000054, 0.000801165999999999, 0.0008011389999999993, 0.0008011939999999981, 0.0008011249999999998, 0.0008011529999999989, 0.0008011529999999989, 0.0008011390000000063, 0.0008011519999999994, 0.0008011389999999993, 0.0008011669999999985, 0.0008011390000000063, 0.0008011669999999985, 0.0008010690000000015, 0.0008011669999999985, 0.0008011519999999994, 0.0008011529999999989, 0.0008011529999999989, 0.0008011519999999994, 0.0008012220000000042, 0.0008011379999999999, 0.0008011529999999989]</msg>
<status status="PASS" starttime="20201030 15:53:08.655" endtime="20201030 15:53:08.658"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.651" endtime="20201030 15:53:08.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:08.663" endtime="20201030 15:53:08.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.661" endtime="20201030 15:53:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.660" endtime="20201030 15:53:08.683"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.269" endtime="20201030 15:53:08.684"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.269" endtime="20201030 15:53:08.684"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.692" endtime="20201030 15:53:08.746"></status>
</kw>
<msg timestamp="20201030 15:53:08.746" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.691" endtime="20201030 15:53:08.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:08.749" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:08.747" endtime="20201030 15:53:08.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.750" endtime="20201030 15:53:08.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.688" endtime="20201030 15:53:08.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.686" endtime="20201030 15:53:08.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:08.759" endtime="20201030 15:53:09.063"></status>
</kw>
<msg timestamp="20201030 15:53:09.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:08.757" endtime="20201030 15:53:09.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017993028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018825958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.067" endtime="20201030 15:53:09.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.075" endtime="20201030 15:53:09.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.755" endtime="20201030 15:53:09.077"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.753" endtime="20201030 15:53:09.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:09.082" level="INFO">${PHILIP_RES} = [{'diff': 0.0008329299999999991}, {'diff': 0.0008328200000000015}, {'diff': 0.000832834000000001}, {'diff': 0.0008328329999999981}, {'diff': 0.000832804999999999}, {'diff': 0.0008328060000000019}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:09.079" endtime="20201030 15:53:09.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.087" level="INFO">${RESULT} = {'diff': [0.0008329299999999991, 0.0008328200000000015, 0.000832834000000001, 0.0008328329999999981, 0.000832804999999999, 0.0008328060000000019, 0.0008328050000000024, 0.0008327919999999989, 0.000832...</msg>
<status status="PASS" starttime="20201030 15:53:09.083" endtime="20201030 15:53:09.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.091" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:09.090" endtime="20201030 15:53:09.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.093" level="INFO">VALUE: [0.0008329299999999991, 0.0008328200000000015, 0.000832834000000001, 0.0008328329999999981, 0.000832804999999999, 0.0008328060000000019, 0.0008328050000000024, 0.0008327919999999989, 0.0008327639999999997, 0.0008328189999999985, 0.0008328050000000024, 0.0008327909999999994, 0.0008328750000000003, 0.0008328329999999981, 0.0008327919999999989, 0.0008328050000000024, 0.000832804999999999, 0.0008328890000000033, 0.0008327910000000063, 0.0008327500000000002, 0.0008327919999999989, 0.000832804999999999, 0.0008327919999999989, 0.0008328059999999984, 0.0008328749999999968, 0.0008328059999999984, 0.0008327500000000002, 0.0008328190000000055, 0.0008328880000000038, 0.0008328190000000055, 0.0008328189999999985, 0.0008327919999999989, 0.0008328059999999984, 0.0008328189999999985, 0.0008328469999999977, 0.0008328059999999984, 0.0008328190000000055, 0.000832833000000005, 0.0008328059999999984, 0.000832804999999999, 0.0008328189999999985, 0.0008327779999999993, 0.0008328749999999968, 0.0008327779999999993, 0.0008328609999999972, 0.0008328060000000054, 0.0008327910000000063, 0.0008327499999999932, 0.0008328059999999984, 0.0008327779999999993]</msg>
<status status="PASS" starttime="20201030 15:53:09.092" endtime="20201030 15:53:09.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.087" endtime="20201030 15:53:09.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.099" endtime="20201030 15:53:09.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.097" endtime="20201030 15:53:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.096" endtime="20201030 15:53:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.685" endtime="20201030 15:53:09.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:08.684" endtime="20201030 15:53:09.119"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.128" endtime="20201030 15:53:09.181"></status>
</kw>
<msg timestamp="20201030 15:53:09.181" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.127" endtime="20201030 15:53:09.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.184" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.182" endtime="20201030 15:53:09.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.185" endtime="20201030 15:53:09.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.124" endtime="20201030 15:53:09.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.122" endtime="20201030 15:53:09.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.195" endtime="20201030 15:53:09.480"></status>
</kw>
<msg timestamp="20201030 15:53:09.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.194" endtime="20201030 15:53:09.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018097097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018962333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.484" endtime="20201030 15:53:09.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.492" endtime="20201030 15:53:09.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.191" endtime="20201030 15:53:09.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.189" endtime="20201030 15:53:09.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:09.499" level="INFO">${PHILIP_RES} = [{'diff': 0.0008652360000000019}, {'diff': 0.0008650970000000022}, {'diff': 0.000865069999999999}, {'diff': 0.0008650559999999995}, {'diff': 0.0008650830000000026}, {'diff': 0.0008650689999999996}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:09.495" endtime="20201030 15:53:09.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.503" level="INFO">${RESULT} = {'diff': [0.0008652360000000019, 0.0008650970000000022, 0.000865069999999999, 0.0008650559999999995, 0.0008650830000000026, 0.0008650689999999996, 0.0008650419999999999, 0.0008650689999999996, 0.00086...</msg>
<status status="PASS" starttime="20201030 15:53:09.500" endtime="20201030 15:53:09.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.507" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:09.506" endtime="20201030 15:53:09.508"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.510" level="INFO">VALUE: [0.0008652360000000019, 0.0008650970000000022, 0.000865069999999999, 0.0008650559999999995, 0.0008650830000000026, 0.0008650689999999996, 0.0008650419999999999, 0.0008650689999999996, 0.0008650689999999996, 0.0008651250000000013, 0.0008651110000000017, 0.0008650829999999991, 0.0008650130000000013, 0.0008650560000000029, 0.0008650840000000021, 0.0008650700000000025, 0.0008650699999999956, 0.0008650700000000025, 0.0008650699999999956, 0.0008650830000000026, 0.000865069000000003, 0.0008650689999999961, 0.0008650830000000026, 0.0008650689999999961, 0.0008650970000000022, 0.000865069000000003, 0.0008650689999999961, 0.0008650140000000042, 0.0008650699999999956, 0.0008650560000000029, 0.0008651110000000017, 0.0008650699999999956, 0.0008650840000000021, 0.0008650700000000025, 0.0008650830000000026, 0.0008650830000000026, 0.0008650549999999965, 0.000865069000000003, 0.0008650830000000026, 0.0008650549999999965, 0.0008650550000000035, 0.0008651109999999948, 0.0008650970000000022, 0.0008650419999999964, 0.0008650699999999956, 0.0008650840000000021, 0.000865055999999996, 0.0008651250000000013, 0.0008650700000000094, 0.0008650560000000029]</msg>
<status status="PASS" starttime="20201030 15:53:09.508" endtime="20201030 15:53:09.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.504" endtime="20201030 15:53:09.511"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.515" endtime="20201030 15:53:09.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.513" endtime="20201030 15:53:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.512" endtime="20201030 15:53:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.120" endtime="20201030 15:53:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.120" endtime="20201030 15:53:09.535"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.544" endtime="20201030 15:53:09.601"></status>
</kw>
<msg timestamp="20201030 15:53:09.602" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.542" endtime="20201030 15:53:09.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.604" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.603" endtime="20201030 15:53:09.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.605" endtime="20201030 15:53:09.607"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.540" endtime="20201030 15:53:09.608"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.538" endtime="20201030 15:53:09.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.614" endtime="20201030 15:53:09.918"></status>
</kw>
<msg timestamp="20201030 15:53:09.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.613" endtime="20201030 15:53:09.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019731417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:09.922" endtime="20201030 15:53:09.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.930" endtime="20201030 15:53:09.931"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.610" endtime="20201030 15:53:09.932"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.609" endtime="20201030 15:53:09.932"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:09.936" level="INFO">${PHILIP_RES} = [{'diff': 0.0008980560000000012}, {'diff': 0.0008979440000000012}, {'diff': 0.0008979450000000007}, {'diff': 0.0008979440000000012}, {'diff': 0.0008979439999999977}, {'diff': 0.0008979450000000007}, {...</msg>
<status status="PASS" starttime="20201030 15:53:09.933" endtime="20201030 15:53:09.936"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:09.940" level="INFO">${RESULT} = {'diff': [0.0008980560000000012, 0.0008979440000000012, 0.0008979450000000007, 0.0008979440000000012, 0.0008979439999999977, 0.0008979450000000007, 0.0008979439999999977, 0.0008979450000000007, 0.0008...</msg>
<status status="PASS" starttime="20201030 15:53:09.937" endtime="20201030 15:53:09.941"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.945" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:09.944" endtime="20201030 15:53:09.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:09.947" level="INFO">VALUE: [0.0008980560000000012, 0.0008979440000000012, 0.0008979450000000007, 0.0008979440000000012, 0.0008979439999999977, 0.0008979450000000007, 0.0008979439999999977, 0.0008979450000000007, 0.0008979579999999973, 0.0008979440000000012, 0.0008979450000000007, 0.0008979300000000016, 0.0008979580000000008, 0.0008979440000000012, 0.0008979859999999965, 0.0008979449999999972, 0.0008979720000000038, 0.0008979440000000047, 0.0008979589999999968, 0.0008979439999999977, 0.0008978889999999989, 0.0008979440000000047, 0.0008979589999999968, 0.0008979589999999968, 0.0008979159999999986, 0.0008979450000000042, 0.0008978609999999998, 0.0008979439999999977, 0.0008979449999999972, 0.0008979440000000047, 0.0008979590000000037, 0.0008979309999999976, 0.0008978749999999994, 0.0008979450000000042, 0.0008979440000000047, 0.0008979719999999969, 0.0008979579999999973, 0.0008979579999999973, 0.0008979450000000042, 0.0008979159999999986, 0.0008979439999999977, 0.0008979579999999973, 0.0008979440000000047, 0.0008979450000000042, 0.0008979579999999973, 0.0008979309999999976, 0.0008979309999999907, 0.0008979439999999977, 0.0008979449999999972, 0.0008979440000000116]</msg>
<status status="PASS" starttime="20201030 15:53:09.946" endtime="20201030 15:53:09.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.941" endtime="20201030 15:53:09.952"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:09.955" endtime="20201030 15:53:09.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.954" endtime="20201030 15:53:09.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.953" endtime="20201030 15:53:09.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.536" endtime="20201030 15:53:09.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.536" endtime="20201030 15:53:09.976"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:09.985" endtime="20201030 15:53:10.041"></status>
</kw>
<msg timestamp="20201030 15:53:10.042" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:09.983" endtime="20201030 15:53:10.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.044" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:10.043" endtime="20201030 15:53:10.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.045" endtime="20201030 15:53:10.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.981" endtime="20201030 15:53:10.047"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.979" endtime="20201030 15:53:10.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.054" endtime="20201030 15:53:10.339"></status>
</kw>
<msg timestamp="20201030 15:53:10.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018781542, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:10.053" endtime="20201030 15:53:10.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01785, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018781542, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:10.343" endtime="20201030 15:53:10.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:10.351" endtime="20201030 15:53:10.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.050" endtime="20201030 15:53:10.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.048" endtime="20201030 15:53:10.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 15:53:10.358" level="INFO">${PHILIP_RES} = [{'diff': 0.000931541999999997}, {'diff': 0.0009314170000000004}, {'diff': 0.0009314300000000005}, {'diff': 0.0009314170000000004}, {'diff': 0.0009314170000000004}, {'diff': 0.0009314300000000005}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:10.355" endtime="20201030 15:53:10.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:10.363" level="INFO">${RESULT} = {'diff': [0.000931541999999997, 0.0009314170000000004, 0.0009314300000000005, 0.0009314170000000004, 0.0009314170000000004, 0.0009314300000000005, 0.0009314859999999987, 0.0009314309999999999, 0.00093...</msg>
<status status="PASS" starttime="20201030 15:53:10.359" endtime="20201030 15:53:10.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.367" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 15:53:10.366" endtime="20201030 15:53:10.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.370" level="INFO">VALUE: [0.000931541999999997, 0.0009314170000000004, 0.0009314300000000005, 0.0009314170000000004, 0.0009314170000000004, 0.0009314300000000005, 0.0009314859999999987, 0.0009314309999999999, 0.0009314449999999995, 0.0009314300000000005, 0.0009314170000000004, 0.0009314169999999969, 0.0009314029999999973, 0.0009314300000000039, 0.0009314029999999973, 0.000931444999999996, 0.0009314580000000031, 0.0009314309999999965, 0.0009314310000000034, 0.000931429999999997, 0.0009314159999999974, 0.000931445000000003, 0.0009314169999999969, 0.0009314300000000039, 0.0009314859999999953, 0.000931445000000003, 0.000931429999999997, 0.0009314169999999969, 0.000931445000000003, 0.0009313889999999977, 0.0009314160000000044, 0.0009314309999999965, 0.000931444999999996, 0.0009314160000000044, 0.000931429999999997, 0.0009314170000000038, 0.0009314589999999956, 0.000931429999999997, 0.0009314310000000034, 0.0009314169999999969, 0.0009314440000000035, 0.000931429999999997, 0.0009314310000000034, 0.0009313889999999977, 0.0009314860000000022, 0.0009315000000000018, 0.0009314030000000112, 0.000931429999999997, 0.0009314309999999965, 0.000931445000000003]</msg>
<status status="PASS" starttime="20201030 15:53:10.368" endtime="20201030 15:53:10.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.364" endtime="20201030 15:53:10.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:10.379" endtime="20201030 15:53:10.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.377" endtime="20201030 15:53:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.376" endtime="20201030 15:53:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.977" endtime="20201030 15:53:10.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:09.977" endtime="20201030 15:53:10.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:52:50.446" endtime="20201030 15:53:10.400"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 15:52:43.156" endtime="20201030 15:53:10.400" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:51:51.655" endtime="20201030 15:53:10.410"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:53:10.484" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:53:10.492" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:53:11.597" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:53:10.483" endtime="20201030 15:53:11.598"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:53:14.601" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:53:11.599" endtime="20201030 15:53:14.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.481" endtime="20201030 15:53:14.603"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:14.607" endtime="20201030 15:53:14.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.604" endtime="20201030 15:53:14.849"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:14.862" endtime="20201030 15:53:17.881"></status>
</kw>
<msg timestamp="20201030 15:53:17.881" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:14.860" endtime="20201030 15:53:17.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.884" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.882" endtime="20201030 15:53:17.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:17.887" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:17.885" endtime="20201030 15:53:17.887"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:14.858" endtime="20201030 15:53:17.888"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:14.855" endtime="20201030 15:53:17.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.854" endtime="20201030 15:53:17.889"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:17.893" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:17.892" endtime="20201030 15:53:17.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.890" endtime="20201030 15:53:17.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.853" endtime="20201030 15:53:17.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.853" endtime="20201030 15:53:17.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.895" endtime="20201030 15:53:17.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.852" endtime="20201030 15:53:17.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.898" endtime="20201030 15:53:17.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:14.850" endtime="20201030 15:53:17.900"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:10.480" endtime="20201030 15:53:17.901"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:17.907" endtime="20201030 15:53:17.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.905" endtime="20201030 15:53:17.929"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:17.956" endtime="20201030 15:53:20.978"></status>
</kw>
<msg timestamp="20201030 15:53:20.979" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:17.952" endtime="20201030 15:53:20.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.984" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:20.981" endtime="20201030 15:53:20.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:53:20.991" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:53:20.987" endtime="20201030 15:53:20.991"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:17.947" endtime="20201030 15:53:20.993"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:17.942" endtime="20201030 15:53:20.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.939" endtime="20201030 15:53:20.994"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:53:21.002" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:53:21.001" endtime="20201030 15:53:21.003"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:20.996" endtime="20201030 15:53:21.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.938" endtime="20201030 15:53:21.004"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.936" endtime="20201030 15:53:21.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.006" endtime="20201030 15:53:21.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.934" endtime="20201030 15:53:21.010"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.930" endtime="20201030 15:53:21.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:17.904" endtime="20201030 15:53:21.011"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.033" endtime="20201030 15:53:21.051"></status>
</kw>
<msg timestamp="20201030 15:53:21.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.030" endtime="20201030 15:53:21.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.057" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.054" endtime="20201030 15:53:21.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.060" endtime="20201030 15:53:21.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.022" endtime="20201030 15:53:21.064"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.018" endtime="20201030 15:53:21.065"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.078" endtime="20201030 15:53:21.373"></status>
</kw>
<msg timestamp="20201030 15:53:21.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.118366944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.075" endtime="20201030 15:53:21.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118363972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.118366944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.378" endtime="20201030 15:53:21.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.386" endtime="20201030 15:53:21.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.070" endtime="20201030 15:53:21.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.066" endtime="20201030 15:53:21.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.392" level="INFO">${RESULT} = [{'diff': 2.9719999998789604e-06}, {'diff': 3.3329999999942572e-06}, {'diff': 2.596999999937566e-06}, {'diff': 2.6250000000338503e-06}, {'diff': 2.9580000000528628e-06}, {'diff': 3.3059999999807133e-0...</msg>
<status status="PASS" starttime="20201030 15:53:21.389" endtime="20201030 15:53:21.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.397" level="INFO">${ACCURACY} = {'diff': [2.9719999998789604e-06, 3.3329999999942572e-06, 2.596999999937566e-06, 2.6250000000338503e-06, 2.9580000000528628e-06, 3.3059999999807133e-06, 2.638999999859948e-06, 2.6250000000338503e-06, ...</msg>
<status status="PASS" starttime="20201030 15:53:21.393" endtime="20201030 15:53:21.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.402" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.401" endtime="20201030 15:53:21.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.404" level="INFO">VALUE: [2.9719999998789604e-06, 3.3329999999942572e-06, 2.596999999937566e-06, 2.6250000000338503e-06, 2.9580000000528628e-06, 3.3059999999807133e-06, 2.638999999859948e-06, 2.6250000000338503e-06, 2.9720000003230496e-06, 2.6250000000338503e-06, 2.9720000003230496e-06, 2.6109999997636635e-06, 2.6110000002077527e-06, 3.3189999997240704e-06, 2.9719999998789604e-06, 2.6110000002077527e-06, 2.9720000003230496e-06, 2.9580000000528628e-06, 3.3059999999807133e-06, 2.6250000000338503e-06, 3.304999999897973e-06, 2.9580000000528628e-06, 2.958999999691514e-06, 2.6109999997636635e-06, 2.985999999705058e-06, 2.943999999782676e-06, 2.9580000000528628e-06, 2.6800000001436786e-06, 3.304999999897973e-06, 3.3190000001681597e-06, 2.6250000000338503e-06, 2.6110000002077527e-06, 2.9719999998789604e-06, 2.9580000000528628e-06, 2.9719999998789604e-06, 3.3059999999807133e-06, 3.6389999999997258e-06, 2.9719999998789604e-06, 2.985999999705058e-06, 3.304999999897973e-06, 3.304999999897973e-06, 2.6250000000338503e-06, 3.304999999897973e-06, 2.6250000000338503e-06, 2.6659999998734918e-06, 2.959000000135603e-06, 2.9999999999752447e-06, 2.6109999997636635e-06, 2.639000000304037e-06, 3.3059999999807133e-06]</msg>
<status status="PASS" starttime="20201030 15:53:21.403" endtime="20201030 15:53:21.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.397" endtime="20201030 15:53:21.405"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.409" endtime="20201030 15:53:21.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.407" endtime="20201030 15:53:21.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.406" endtime="20201030 15:53:21.429"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.015" endtime="20201030 15:53:21.430"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.014" endtime="20201030 15:53:21.430"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.438" endtime="20201030 15:53:21.452"></status>
</kw>
<msg timestamp="20201030 15:53:21.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.437" endtime="20201030 15:53:21.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.453" endtime="20201030 15:53:21.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.456" endtime="20201030 15:53:21.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.434" endtime="20201030 15:53:21.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.432" endtime="20201030 15:53:21.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.465" endtime="20201030 15:53:21.754"></status>
</kw>
<msg timestamp="20201030 15:53:21.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01944, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:21.464" endtime="20201030 15:53:21.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019436347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01944, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:53:21.759" endtime="20201030 15:53:21.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.767" endtime="20201030 15:53:21.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.461" endtime="20201030 15:53:21.769"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.460" endtime="20201030 15:53:21.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:21.773" level="INFO">${RESULT} = [{'diff': 3.6529999999992957e-06}, {'diff': 4.403000000000046e-06}, {'diff': 4.000000000000531e-06}, {'diff': 4.000000000000531e-06}, {'diff': 4.000000000000531e-06}, {'diff': 3.6529999999992957e-06},...</msg>
<status status="PASS" starttime="20201030 15:53:21.770" endtime="20201030 15:53:21.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:21.779" level="INFO">${ACCURACY} = {'diff': [3.6529999999992957e-06, 4.403000000000046e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.6529999999992957e-06, 4.000000000000531e-06, 3.653000000002765e-06, 3.66...</msg>
<status status="PASS" starttime="20201030 15:53:21.774" endtime="20201030 15:53:21.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.783" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 15:53:21.782" endtime="20201030 15:53:21.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.786" level="INFO">VALUE: [3.6529999999992957e-06, 4.403000000000046e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 3.6529999999992957e-06, 4.000000000000531e-06, 3.653000000002765e-06, 3.665999999999392e-06, 3.9449999999982555e-06, 3.6389999999997258e-06, 4.361000000001336e-06, 4.000000000000531e-06, 4.361000000001336e-06, 4.000000000000531e-06, 3.986000000000961e-06, 3.653000000002765e-06, 4.34800000000124e-06, 4.000000000000531e-06, 4.403000000000046e-06, 4.000000000000531e-06, 3.987000000000435e-06, 4.027000000000197e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.332999999998727e-06, 4.346999999998297e-06, 3.986000000000961e-06, 4.000000000000531e-06, 4.332999999998727e-06, 3.959000000001295e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.000000000000531e-06, 4.332999999998727e-06, 4.346999999998297e-06, 3.651999999999822e-06, 4.333000000002196e-06, 3.6389999999997258e-06, 3.6529999999992957e-06, 3.6529999999992957e-06, 3.665999999999392e-06, 4.014000000000101e-06, 4.333000000002196e-06, 4.027000000000197e-06, 4.347000000001766e-06, 3.653000000002765e-06, 3.6529999999992957e-06, 4.014000000000101e-06, 3.6389999999997258e-06]</msg>
<status status="PASS" starttime="20201030 15:53:21.784" endtime="20201030 15:53:21.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.780" endtime="20201030 15:53:21.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:21.790" endtime="20201030 15:53:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.789" endtime="20201030 15:53:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.788" endtime="20201030 15:53:21.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.431" endtime="20201030 15:53:21.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.430" endtime="20201030 15:53:21.811"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.819" endtime="20201030 15:53:21.833"></status>
</kw>
<msg timestamp="20201030 15:53:21.833" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.818" endtime="20201030 15:53:21.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:21.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:21.834" endtime="20201030 15:53:21.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.837" endtime="20201030 15:53:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.815" endtime="20201030 15:53:21.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.813" endtime="20201030 15:53:21.840"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:21.846" endtime="20201030 15:53:22.134"></status>
</kw>
<msg timestamp="20201030 15:53:22.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:21.845" endtime="20201030 15:53:22.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019325236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019330653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.138" endtime="20201030 15:53:22.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.147" endtime="20201030 15:53:22.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.842" endtime="20201030 15:53:22.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.840" endtime="20201030 15:53:22.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.153" level="INFO">${RESULT} = [{'diff': 5.417000000000616e-06}, {'diff': 5.403000000001046e-06}, {'diff': 4.680999999999436e-06}, {'diff': 5.389000000001476e-06}, {'diff': 4.680999999999436e-06}, {'diff': 5.375000000001906e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:53:22.150" endtime="20201030 15:53:22.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.157" level="INFO">${ACCURACY} = {'diff': [5.417000000000616e-06, 5.403000000001046e-06, 4.680999999999436e-06, 5.389000000001476e-06, 4.680999999999436e-06, 5.375000000001906e-06, 5.042000000000241e-06, 5.416000000001142e-06, 5.0280...</msg>
<status status="PASS" starttime="20201030 15:53:22.154" endtime="20201030 15:53:22.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.162" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.161" endtime="20201030 15:53:22.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.164" level="INFO">VALUE: [5.417000000000616e-06, 5.403000000001046e-06, 4.680999999999436e-06, 5.389000000001476e-06, 4.680999999999436e-06, 5.375000000001906e-06, 5.042000000000241e-06, 5.416000000001142e-06, 5.028000000000671e-06, 5.375000000001906e-06, 4.693999999999532e-06, 5.374999999998437e-06, 4.971999999998922e-06, 5.402000000001572e-06, 5.3889999999980065e-06, 5.028000000000671e-06, 4.347000000001766e-06, 4.695000000002475e-06, 4.707999999999102e-06, 4.693999999999532e-06, 5.389000000001476e-06, 4.695000000002475e-06, 5.375000000001906e-06, 5.417000000000616e-06, 5.042000000000241e-06, 4.6949999999990055e-06, 4.971999999998922e-06, 4.6949999999990055e-06, 4.9999999999980616e-06, 4.707999999999102e-06, 5.0699999999993806e-06, 4.6949999999990055e-06, 5.028000000000671e-06, 5.014000000001101e-06, 5.042000000000241e-06, 4.9999999999980616e-06, 5.014000000001101e-06, 5.403000000001046e-06, 5.3889999999980065e-06, 5.346999999999297e-06, 5.055999999999811e-06, 5.014000000001101e-06, 5.360999999998867e-06, 4.693999999999532e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.027000000001197e-06, 5.028000000000671e-06, 5.444999999999756e-06, 4.611000000001586e-06]</msg>
<status status="PASS" starttime="20201030 15:53:22.163" endtime="20201030 15:53:22.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.158" endtime="20201030 15:53:22.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.169" endtime="20201030 15:53:22.188"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.167" endtime="20201030 15:53:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.166" endtime="20201030 15:53:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.812" endtime="20201030 15:53:22.190"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.811" endtime="20201030 15:53:22.190"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.199" endtime="20201030 15:53:22.214"></status>
</kw>
<msg timestamp="20201030 15:53:22.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.197" endtime="20201030 15:53:22.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.216" endtime="20201030 15:53:22.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.219" endtime="20201030 15:53:22.220"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.194" endtime="20201030 15:53:22.221"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.192" endtime="20201030 15:53:22.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.228" endtime="20201030 15:53:22.516"></status>
</kw>
<msg timestamp="20201030 15:53:22.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.226" endtime="20201030 15:53:22.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020294306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020300056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.520" endtime="20201030 15:53:22.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.529" endtime="20201030 15:53:22.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.224" endtime="20201030 15:53:22.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.222" endtime="20201030 15:53:22.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.535" level="INFO">${RESULT} = [{'diff': 5.749999999998812e-06}, {'diff': 6.139000000002226e-06}, {'diff': 6.403000000002046e-06}, {'diff': 5.416999999997146e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.431000000001186e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:53:22.532" endtime="20201030 15:53:22.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.539" level="INFO">${ACCURACY} = {'diff': [5.749999999998812e-06, 6.139000000002226e-06, 6.403000000002046e-06, 5.416999999997146e-06, 6.069000000000907e-06, 6.431000000001186e-06, 5.695000000000006e-06, 6.097000000000047e-06, 5.7089...</msg>
<status status="PASS" starttime="20201030 15:53:22.536" endtime="20201030 15:53:22.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.544" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.543" endtime="20201030 15:53:22.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.546" level="INFO">VALUE: [5.749999999998812e-06, 6.139000000002226e-06, 6.403000000002046e-06, 5.416999999997146e-06, 6.069000000000907e-06, 6.431000000001186e-06, 5.695000000000006e-06, 6.097000000000047e-06, 5.7089999999995755e-06, 6.070000000000381e-06, 6.361000000003336e-06, 5.721999999999672e-06, 6.431000000001186e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.694000000000532e-06, 5.7089999999995755e-06, 6.069000000000907e-06, 5.721999999999672e-06, 5.777000000001947e-06, 6.429999999998243e-06, 5.736000000002711e-06, 5.708000000000102e-06, 5.708000000000102e-06, 6.417000000001616e-06, 6.443999999997813e-06, 5.694000000000532e-06, 6.083000000000477e-06, 5.721999999999672e-06, 5.681000000000436e-06, 6.070000000000381e-06, 5.721999999999672e-06, 5.721999999999672e-06, 6.110999999999617e-06, 6.415999999998673e-06, 6.416999999998146e-06, 6.0689999999974376e-06, 5.737000000002185e-06, 6.416999999998146e-06, 5.7229999999991454e-06, 6.430999999997716e-06, 6.056000000000811e-06, 6.083000000000477e-06, 5.667000000000866e-06, 6.431000000001186e-06, 6.0839999999999506e-06, 5.374999999998437e-06, 6.4029999999985765e-06, 6.040999999998298e-06, 5.735999999999242e-06]</msg>
<status status="PASS" starttime="20201030 15:53:22.545" endtime="20201030 15:53:22.548"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.540" endtime="20201030 15:53:22.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.552" endtime="20201030 15:53:22.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.550" endtime="20201030 15:53:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.549" endtime="20201030 15:53:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.191" endtime="20201030 15:53:22.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.190" endtime="20201030 15:53:22.572"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.582" endtime="20201030 15:53:22.596"></status>
</kw>
<msg timestamp="20201030 15:53:22.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.580" endtime="20201030 15:53:22.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.598" endtime="20201030 15:53:22.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.600" endtime="20201030 15:53:22.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.577" endtime="20201030 15:53:22.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.575" endtime="20201030 15:53:22.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.609" endtime="20201030 15:53:22.894"></status>
</kw>
<msg timestamp="20201030 15:53:22.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.608" endtime="20201030 15:53:22.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020964014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020971167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.898" endtime="20201030 15:53:22.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.907" endtime="20201030 15:53:22.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.605" endtime="20201030 15:53:22.909"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.603" endtime="20201030 15:53:22.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:22.914" level="INFO">${RESULT} = [{'diff': 7.1529999999993266e-06}, {'diff': 7.458000000001852e-06}, {'diff': 7.457999999998383e-06}, {'diff': 6.764000000002851e-06}, {'diff': 7.459000000001326e-06}, {'diff': 6.806000000001561e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:53:22.910" endtime="20201030 15:53:22.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:22.919" level="INFO">${ACCURACY} = {'diff': [7.1529999999993266e-06, 7.458000000001852e-06, 7.457999999998383e-06, 6.764000000002851e-06, 7.459000000001326e-06, 6.806000000001561e-06, 6.763999999999382e-06, 7.444999999998286e-06, 7.096...</msg>
<status status="PASS" starttime="20201030 15:53:22.915" endtime="20201030 15:53:22.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.924" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 15:53:22.923" endtime="20201030 15:53:22.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.926" level="INFO">VALUE: [7.1529999999993266e-06, 7.458000000001852e-06, 7.457999999998383e-06, 6.764000000002851e-06, 7.459000000001326e-06, 6.806000000001561e-06, 6.763999999999382e-06, 7.444999999998286e-06, 7.0969999999975775e-06, 7.0980000000005206e-06, 6.792000000001991e-06, 7.457999999998383e-06, 7.457999999998383e-06, 7.444000000002282e-06, 6.764000000002851e-06, 6.778000000002421e-06, 7.125000000000187e-06, 6.749999999999812e-06, 7.097000000001047e-06, 7.097000000001047e-06, 6.430999999997716e-06, 6.776999999999478e-06, 7.1669999999988965e-06, 7.097000000001047e-06, 7.1120000000000905e-06, 6.776999999999478e-06, 7.054999999998868e-06, 7.457999999998383e-06, 7.445000000001756e-06, 7.1120000000000905e-06, 7.444999999998286e-06, 6.763999999999382e-06, 7.457999999998383e-06, 7.0829999999980076e-06, 6.736000000000242e-06, 7.111000000000617e-06, 7.459000000001326e-06, 7.097000000001047e-06, 6.736000000000242e-06, 6.762999999999908e-06, 6.695000000001006e-06, 7.458000000001852e-06, 7.458999999997856e-06, 7.111000000000617e-06, 6.709000000000576e-06, 6.763999999999382e-06, 6.749999999999812e-06, 7.1120000000000905e-06, 7.111000000000617e-06, 6.7219999999972024e-06]</msg>
<status status="PASS" starttime="20201030 15:53:22.925" endtime="20201030 15:53:22.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.920" endtime="20201030 15:53:22.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:22.931" endtime="20201030 15:53:22.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.929" endtime="20201030 15:53:22.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.928" endtime="20201030 15:53:22.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.573" endtime="20201030 15:53:22.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.573" endtime="20201030 15:53:22.952"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.962" endtime="20201030 15:53:22.976"></status>
</kw>
<msg timestamp="20201030 15:53:22.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.960" endtime="20201030 15:53:22.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:22.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:22.978" endtime="20201030 15:53:22.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.980" endtime="20201030 15:53:22.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.957" endtime="20201030 15:53:22.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.955" endtime="20201030 15:53:22.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:22.990" endtime="20201030 15:53:23.303"></status>
</kw>
<msg timestamp="20201030 15:53:23.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:22.988" endtime="20201030 15:53:23.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020551597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.307" endtime="20201030 15:53:23.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.315" endtime="20201030 15:53:23.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.985" endtime="20201030 15:53:23.318"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.984" endtime="20201030 15:53:23.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.322" level="INFO">${RESULT} = [{'diff': 7.430000000002712e-06}, {'diff': 7.804999999999618e-06}, {'diff': 8.153000000000327e-06}, {'diff': 7.791000000000048e-06}, {'diff': 7.791999999999522e-06}, {'diff': 7.735999999997772e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:53:23.319" endtime="20201030 15:53:23.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.327" level="INFO">${ACCURACY} = {'diff': [7.430000000002712e-06, 7.804999999999618e-06, 8.153000000000327e-06, 7.791000000000048e-06, 7.791999999999522e-06, 7.735999999997772e-06, 7.804999999999618e-06, 7.791999999999522e-06, 7.7229...</msg>
<status status="PASS" starttime="20201030 15:53:23.323" endtime="20201030 15:53:23.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.331" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.330" endtime="20201030 15:53:23.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.334" level="INFO">VALUE: [7.430000000002712e-06, 7.804999999999618e-06, 8.153000000000327e-06, 7.791000000000048e-06, 7.791999999999522e-06, 7.735999999997772e-06, 7.804999999999618e-06, 7.791999999999522e-06, 7.722999999997676e-06, 8.139000000000757e-06, 7.818999999999188e-06, 8.153000000000327e-06, 8.125000000001187e-06, 7.791999999999522e-06, 8.486999999997996e-06, 7.805999999999091e-06, 7.804999999999618e-06, 8.110999999998147e-06, 7.805999999999091e-06, 8.125000000001187e-06, 8.153000000000327e-06, 7.86200000000084e-06, 7.804999999999618e-06, 7.777999999999952e-06, 8.473000000001896e-06, 7.457999999998383e-06, 7.791999999999522e-06, 8.512999999998189e-06, 8.125000000001187e-06, 8.138999999997287e-06, 8.139000000000757e-06, 7.792000000002991e-06, 8.138000000001283e-06, 7.8340000000017e-06, 8.138999999997287e-06, 8.152999999996857e-06, 7.805999999999091e-06, 7.791000000000048e-06, 8.125000000001187e-06, 8.139000000000757e-06, 7.805999999999091e-06, 7.791999999999522e-06, 8.152999999996857e-06, 8.153000000000327e-06, 8.138999999997287e-06, 7.806000000002561e-06, 8.153000000000327e-06, 7.777999999999952e-06, 7.750000000000812e-06, 8.499999999998092e-06]</msg>
<status status="PASS" starttime="20201030 15:53:23.332" endtime="20201030 15:53:23.334"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.327" endtime="20201030 15:53:23.335"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.339" endtime="20201030 15:53:23.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.337" endtime="20201030 15:53:23.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.336" endtime="20201030 15:53:23.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.953" endtime="20201030 15:53:23.360"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:22.953" endtime="20201030 15:53:23.360"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.369" endtime="20201030 15:53:23.385"></status>
</kw>
<msg timestamp="20201030 15:53:23.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.367" endtime="20201030 15:53:23.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.387" endtime="20201030 15:53:23.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.389" endtime="20201030 15:53:23.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.365" endtime="20201030 15:53:23.391"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.362" endtime="20201030 15:53:23.392"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.399" endtime="20201030 15:53:23.684"></status>
</kw>
<msg timestamp="20201030 15:53:23.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020826875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.397" endtime="20201030 15:53:23.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020826875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.688" endtime="20201030 15:53:23.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.697" endtime="20201030 15:53:23.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.394" endtime="20201030 15:53:23.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.392" endtime="20201030 15:53:23.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:23.704" level="INFO">${RESULT} = [{'diff': 8.832999999999758e-06}, {'diff': 9.527000000002228e-06}, {'diff': 9.485999999999523e-06}, {'diff': 8.832999999999758e-06}, {'diff': 8.471999999998953e-06}, {'diff': 9.180000000000993e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:53:23.700" endtime="20201030 15:53:23.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:23.708" level="INFO">${ACCURACY} = {'diff': [8.832999999999758e-06, 9.527000000002228e-06, 9.485999999999523e-06, 8.832999999999758e-06, 8.471999999998953e-06, 9.180000000000993e-06, 9.526999999998759e-06, 8.832999999999758e-06, 8.8190...</msg>
<status status="PASS" starttime="20201030 15:53:23.705" endtime="20201030 15:53:23.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.713" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 15:53:23.712" endtime="20201030 15:53:23.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.715" level="INFO">VALUE: [8.832999999999758e-06, 9.527000000002228e-06, 9.485999999999523e-06, 8.832999999999758e-06, 8.471999999998953e-06, 9.180000000000993e-06, 9.526999999998759e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.833999999999231e-06, 9.152999999997857e-06, 8.819000000000188e-06, 8.485999999998523e-06, 8.832999999999758e-06, 9.153000000001327e-06, 9.181000000000467e-06, 8.806000000000092e-06, 9.138999999998287e-06, 9.541000000001798e-06, 9.194000000000563e-06, 8.500000000001562e-06, 8.833999999999231e-06, 8.846999999999328e-06, 9.195000000000036e-06, 8.902999999997607e-06, 8.8340000000027e-06, 8.528000000000702e-06, 8.500000000001562e-06, 9.180999999996997e-06, 8.486000000001992e-06, 9.499999999999093e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.167000000000897e-06, 9.194000000000563e-06, 8.833000000003227e-06, 8.472999999998426e-06, 8.833999999999231e-06, 9.180000000000993e-06, 9.499999999999093e-06, 8.486000000001992e-06, 9.179999999997523e-06, 9.542000000001272e-06, 8.833999999999231e-06, 9.249999999998842e-06, 9.194000000000563e-06, 8.486000000001992e-06, 9.167000000000897e-06, 9.528000000001702e-06]</msg>
<status status="PASS" starttime="20201030 15:53:23.714" endtime="20201030 15:53:23.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.709" endtime="20201030 15:53:23.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:23.721" endtime="20201030 15:53:23.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.720" endtime="20201030 15:53:23.741"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.718" endtime="20201030 15:53:23.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.361" endtime="20201030 15:53:23.742"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.360" endtime="20201030 15:53:23.742"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.751" endtime="20201030 15:53:23.766"></status>
</kw>
<msg timestamp="20201030 15:53:23.766" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.750" endtime="20201030 15:53:23.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:23.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:23.768" endtime="20201030 15:53:23.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.770" endtime="20201030 15:53:23.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.747" endtime="20201030 15:53:23.772"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.745" endtime="20201030 15:53:23.773"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:23.780" endtime="20201030 15:53:24.066"></status>
</kw>
<msg timestamp="20201030 15:53:24.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:23.778" endtime="20201030 15:53:24.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019973014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019982514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.070" endtime="20201030 15:53:24.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.078" endtime="20201030 15:53:24.080"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.775" endtime="20201030 15:53:24.081"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.773" endtime="20201030 15:53:24.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.085" level="INFO">${RESULT} = [{'diff': 9.499999999999093e-06}, {'diff': 9.874999999999468e-06}, {'diff': 1.0568999999998469e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 9.860999999999898e-06}, {'diff': 9.860999999999898e-06},...</msg>
<status status="PASS" starttime="20201030 15:53:24.082" endtime="20201030 15:53:24.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.091" level="INFO">${ACCURACY} = {'diff': [9.499999999999093e-06, 9.874999999999468e-06, 1.0568999999998469e-05, 1.0222000000000703e-05, 9.860999999999898e-06, 9.860999999999898e-06, 9.861000000003367e-06, 9.903000000002077e-06, 1.05...</msg>
<status status="PASS" starttime="20201030 15:53:24.086" endtime="20201030 15:53:24.091"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.095" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.094" endtime="20201030 15:53:24.096"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.098" level="INFO">VALUE: [9.499999999999093e-06, 9.874999999999468e-06, 1.0568999999998469e-05, 1.0222000000000703e-05, 9.860999999999898e-06, 9.860999999999898e-06, 9.861000000003367e-06, 9.903000000002077e-06, 1.0570000000001412e-05, 1.0569999999997942e-05, 1.0277999999998982e-05, 9.541999999997802e-06, 9.931000000001217e-06, 9.541999999997802e-06, 9.514000000002132e-06, 9.875000000002937e-06, 9.513999999998662e-06, 9.514000000002132e-06, 1.0193999999998093e-05, 1.0222000000000703e-05, 9.486000000002992e-06, 9.888999999999037e-06, 9.860999999999898e-06, 9.528000000001702e-06, 9.903000000002077e-06, 9.541000000001798e-06, 1.0207999999997663e-05, 1.0222000000000703e-05, 9.875000000002937e-06, 9.527999999998232e-06, 9.861999999999371e-06, 9.860999999999898e-06, 1.0236000000000273e-05, 9.583999999999981e-06, 9.528000000001702e-06, 1.0207999999997663e-05, 9.944000000001313e-06, 9.527999999998232e-06, 1.0179999999998524e-05, 9.874999999999468e-06, 9.860999999999898e-06, 1.0209000000000606e-05, 1.0195000000001037e-05, 1.0598000000000551e-05, 1.0236000000000273e-05, 9.527999999998232e-06, 9.527999999998232e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.901999999999134e-06]</msg>
<status status="PASS" starttime="20201030 15:53:24.096" endtime="20201030 15:53:24.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.092" endtime="20201030 15:53:24.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.103" endtime="20201030 15:53:24.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.101" endtime="20201030 15:53:24.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.100" endtime="20201030 15:53:24.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.743" endtime="20201030 15:53:24.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:23.742" endtime="20201030 15:53:24.124"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.133" endtime="20201030 15:53:24.147"></status>
</kw>
<msg timestamp="20201030 15:53:24.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.131" endtime="20201030 15:53:24.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.150" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.149" endtime="20201030 15:53:24.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.151" endtime="20201030 15:53:24.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.129" endtime="20201030 15:53:24.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.127" endtime="20201030 15:53:24.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.161" endtime="20201030 15:53:24.448"></status>
</kw>
<msg timestamp="20201030 15:53:24.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.159" endtime="20201030 15:53:24.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020145264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.452" endtime="20201030 15:53:24.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.461" endtime="20201030 15:53:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.157" endtime="20201030 15:53:24.463"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.155" endtime="20201030 15:53:24.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.468" level="INFO">${RESULT} = [{'diff': 1.0541999999998802e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.0569000000001938e-05}, {'diff': 1.1250000000000843e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.1277999999999982e-...</msg>
<status status="PASS" starttime="20201030 15:53:24.464" endtime="20201030 15:53:24.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.472" level="INFO">${ACCURACY} = {'diff': [1.0541999999998802e-05, 1.1249999999997373e-05, 1.0569000000001938e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1598000000001552e-05, 1.0903000000003077e-05...</msg>
<status status="PASS" starttime="20201030 15:53:24.469" endtime="20201030 15:53:24.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.477" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.476" endtime="20201030 15:53:24.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.479" level="INFO">VALUE: [1.0541999999998802e-05, 1.1249999999997373e-05, 1.0569000000001938e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.1277999999999982e-05, 1.1598000000001552e-05, 1.0903000000003077e-05, 1.0556000000001842e-05, 1.0902999999999607e-05, 1.0902999999999607e-05, 1.1264000000000413e-05, 1.1236000000001273e-05, 1.0569000000001938e-05, 1.1625000000001218e-05, 1.0929999999999274e-05, 1.1264000000000413e-05, 1.1277999999999982e-05, 1.1291999999999552e-05, 1.0556000000001842e-05, 1.0568999999998469e-05, 1.0860999999997428e-05, 1.0554999999998899e-05, 1.0556000000001842e-05, 1.0889000000000038e-05, 1.0556000000001842e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1249999999997373e-05, 1.0568999999998469e-05, 1.0916999999999177e-05, 1.0930999999998747e-05, 1.0570000000001412e-05, 1.0902999999999607e-05, 1.0555999999998372e-05, 1.0902999999999607e-05, 1.0569000000001938e-05, 1.1235999999997803e-05, 1.0569999999997942e-05, 1.0902999999999607e-05, 1.1597000000002078e-05, 1.1250000000000843e-05, 1.0861000000000898e-05, 1.0569999999997942e-05, 1.0889000000000038e-05, 1.1249999999997373e-05, 1.0902999999999607e-05, 1.0930999999998747e-05, 1.1250000000000843e-05, 1.0915999999999704e-05]</msg>
<status status="PASS" starttime="20201030 15:53:24.478" endtime="20201030 15:53:24.480"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.473" endtime="20201030 15:53:24.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.485" endtime="20201030 15:53:24.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.483" endtime="20201030 15:53:24.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.482" endtime="20201030 15:53:24.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.125" endtime="20201030 15:53:24.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.124" endtime="20201030 15:53:24.505"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.514" endtime="20201030 15:53:24.529"></status>
</kw>
<msg timestamp="20201030 15:53:24.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.513" endtime="20201030 15:53:24.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.530" endtime="20201030 15:53:24.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.533" endtime="20201030 15:53:24.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.510" endtime="20201030 15:53:24.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.508" endtime="20201030 15:53:24.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.543" endtime="20201030 15:53:24.830"></status>
</kw>
<msg timestamp="20201030 15:53:24.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02112225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:24.542" endtime="20201030 15:53:24.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021109958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02112225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:24.834" endtime="20201030 15:53:24.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.843" endtime="20201030 15:53:24.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.539" endtime="20201030 15:53:24.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.537" endtime="20201030 15:53:24.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:24.850" level="INFO">${RESULT} = [{'diff': 1.2291999999997083e-05}, {'diff': 1.1611000000001648e-05}, {'diff': 1.1625000000001218e-05}, {'diff': 1.1944999999999317e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.1611000000001648e-...</msg>
<status status="PASS" starttime="20201030 15:53:24.846" endtime="20201030 15:53:24.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:24.854" level="INFO">${ACCURACY} = {'diff': [1.2291999999997083e-05, 1.1611000000001648e-05, 1.1625000000001218e-05, 1.1944999999999317e-05, 1.1582999999999039e-05, 1.1611000000001648e-05, 1.1596999999998608e-05, 1.1944999999999317e-05...</msg>
<status status="PASS" starttime="20201030 15:53:24.851" endtime="20201030 15:53:24.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.859" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 15:53:24.858" endtime="20201030 15:53:24.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.862" level="INFO">VALUE: [1.2291999999997083e-05, 1.1611000000001648e-05, 1.1625000000001218e-05, 1.1944999999999317e-05, 1.1582999999999039e-05, 1.1611000000001648e-05, 1.1596999999998608e-05, 1.1944999999999317e-05, 1.2263999999997943e-05, 1.227699999999804e-05, 1.2264000000001413e-05, 1.1930000000000274e-05, 1.1930999999999747e-05, 1.1611000000001648e-05, 1.2291000000001079e-05, 1.2292000000000552e-05, 1.1971999999998983e-05, 1.2332999999999789e-05, 1.1598000000001552e-05, 1.2639000000001788e-05, 1.2292000000000552e-05, 1.1611000000001648e-05, 1.1930000000000274e-05, 1.2346999999999358e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.1596999999998608e-05, 1.2292000000000552e-05, 1.1596999999998608e-05, 1.1957999999999414e-05, 1.1598000000001552e-05, 1.1596999999998608e-05, 1.2333999999999262e-05, 1.2277999999997513e-05, 1.1597000000002078e-05, 1.2278000000000983e-05, 1.1957999999999414e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.1596999999998608e-05, 1.2278000000000983e-05, 1.1583999999998512e-05, 1.2263999999997943e-05, 1.1957999999999414e-05, 1.1582999999999039e-05, 1.1944999999999317e-05, 1.2305000000000649e-05, 1.1528000000000233e-05, 1.2333999999999262e-05, 1.2319000000000219e-05]</msg>
<status status="PASS" starttime="20201030 15:53:24.860" endtime="20201030 15:53:24.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.855" endtime="20201030 15:53:24.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:24.868" endtime="20201030 15:53:24.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.866" endtime="20201030 15:53:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.865" endtime="20201030 15:53:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.506" endtime="20201030 15:53:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.506" endtime="20201030 15:53:24.889"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.898" endtime="20201030 15:53:24.913"></status>
</kw>
<msg timestamp="20201030 15:53:24.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.896" endtime="20201030 15:53:24.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:24.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:24.915" endtime="20201030 15:53:24.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.917" endtime="20201030 15:53:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.893" endtime="20201030 15:53:24.920"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.891" endtime="20201030 15:53:24.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:24.927" endtime="20201030 15:53:25.213"></status>
</kw>
<msg timestamp="20201030 15:53:25.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:24.925" endtime="20201030 15:53:25.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.218" endtime="20201030 15:53:25.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.227" endtime="20201030 15:53:25.230"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.922" endtime="20201030 15:53:25.231"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.921" endtime="20201030 15:53:25.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.238" level="INFO">${RESULT} = [{'diff': 1.3320000000000692e-05}, {'diff': 1.2971999999999984e-05}, {'diff': 1.2985999999999553e-05}, {'diff': 1.3320000000000692e-05}, {'diff': 1.2611000000002648e-05}, {'diff': 1.2625000000002218e-...</msg>
<status status="PASS" starttime="20201030 15:53:25.234" endtime="20201030 15:53:25.239"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.246" level="INFO">${ACCURACY} = {'diff': [1.3320000000000692e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.3320000000000692e-05, 1.2611000000002648e-05, 1.2625000000002218e-05, 1.2971999999999984e-05, 1.2971999999999984e-05...</msg>
<status status="PASS" starttime="20201030 15:53:25.240" endtime="20201030 15:53:25.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.253" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.251" endtime="20201030 15:53:25.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.256" level="INFO">VALUE: [1.3320000000000692e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.3320000000000692e-05, 1.2611000000002648e-05, 1.2625000000002218e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2610999999999178e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2624999999998748e-05, 1.2901999999998665e-05, 1.2986000000003023e-05, 1.2639000000001788e-05, 1.2958000000000414e-05, 1.3320000000000692e-05, 1.3346999999996889e-05, 1.2985999999999553e-05, 1.2639000000001788e-05, 1.2958999999999887e-05, 1.3305000000001649e-05, 1.2944000000000844e-05, 1.2999999999999123e-05, 1.2596999999999609e-05, 1.2985999999999553e-05, 1.2639000000001788e-05, 1.2625000000002218e-05, 1.2972999999999457e-05, 1.2610999999999178e-05, 1.2638999999998318e-05, 1.3306000000001122e-05, 1.2931000000000747e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.331899999999775e-05, 1.2653000000001358e-05, 1.2653000000001358e-05, 1.333299999999732e-05, 1.3028000000001733e-05, 1.2957999999996944e-05, 1.2931000000000747e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2639000000001788e-05, 1.2610999999999178e-05, 1.2625000000002218e-05, 1.3306000000001122e-05]</msg>
<status status="PASS" starttime="20201030 15:53:25.254" endtime="20201030 15:53:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.247" endtime="20201030 15:53:25.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.265" endtime="20201030 15:53:25.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.262" endtime="20201030 15:53:25.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.260" endtime="20201030 15:53:25.285"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.890" endtime="20201030 15:53:25.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:24.889" endtime="20201030 15:53:25.286"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.295" endtime="20201030 15:53:25.310"></status>
</kw>
<msg timestamp="20201030 15:53:25.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.293" endtime="20201030 15:53:25.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.312" endtime="20201030 15:53:25.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.314" endtime="20201030 15:53:25.316"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.291" endtime="20201030 15:53:25.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.289" endtime="20201030 15:53:25.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.324" endtime="20201030 15:53:25.611"></status>
</kw>
<msg timestamp="20201030 15:53:25.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.322" endtime="20201030 15:53:25.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020234764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020248778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.615" endtime="20201030 15:53:25.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.624" endtime="20201030 15:53:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.320" endtime="20201030 15:53:25.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.318" endtime="20201030 15:53:25.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:25.630" level="INFO">${RESULT} = [{'diff': 1.4013999999999693e-05}, {'diff': 1.3666999999998458e-05}, {'diff': 1.3665999999998985e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.3652999999998888e-05}, {'diff': 1.4013999999999693e-...</msg>
<status status="PASS" starttime="20201030 15:53:25.627" endtime="20201030 15:53:25.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:25.635" level="INFO">${ACCURACY} = {'diff': [1.4013999999999693e-05, 1.3666999999998458e-05, 1.3665999999998985e-05, 1.4347000000001359e-05, 1.3652999999998888e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4334000000001262e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:25.632" endtime="20201030 15:53:25.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.640" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 15:53:25.639" endtime="20201030 15:53:25.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.642" level="INFO">VALUE: [1.4013999999999693e-05, 1.3666999999998458e-05, 1.3665999999998985e-05, 1.4347000000001359e-05, 1.3652999999998888e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4334000000001262e-05, 1.4013999999999693e-05, 1.433299999999832e-05, 1.4348000000000832e-05, 1.4027999999999263e-05, 1.4375000000000498e-05, 1.433299999999832e-05, 1.3695000000001067e-05, 1.4000000000000123e-05, 1.402699999999979e-05, 1.3679999999998554e-05, 1.3665999999998985e-05, 1.4013999999999693e-05, 1.3665999999998985e-05, 1.3680999999998028e-05, 1.4375000000000498e-05, 1.3680000000002024e-05, 1.3986000000000554e-05, 1.434699999999789e-05, 1.4013999999999693e-05, 1.3667000000001928e-05, 1.4402000000000165e-05, 1.4360999999997459e-05, 1.4361000000000929e-05, 1.3680999999998028e-05, 1.434699999999789e-05, 1.3722000000000734e-05, 1.4000000000000123e-05, 1.3679999999998554e-05, 1.3624999999999748e-05, 1.4027999999999263e-05, 1.3679999999998554e-05, 1.4000000000000123e-05, 1.4361999999996933e-05, 1.3667000000001928e-05, 1.4360999999997459e-05, 1.4013999999999693e-05, 1.3651999999999415e-05, 1.4361000000000929e-05, 1.4013999999999693e-05, 1.3666999999998458e-05, 1.4027999999999263e-05, 1.3667000000001928e-05]</msg>
<status status="PASS" starttime="20201030 15:53:25.641" endtime="20201030 15:53:25.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.636" endtime="20201030 15:53:25.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:25.647" endtime="20201030 15:53:25.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.646" endtime="20201030 15:53:25.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.645" endtime="20201030 15:53:25.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.287" endtime="20201030 15:53:25.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.286" endtime="20201030 15:53:25.668"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.678" endtime="20201030 15:53:25.692"></status>
</kw>
<msg timestamp="20201030 15:53:25.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.676" endtime="20201030 15:53:25.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:25.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:25.694" endtime="20201030 15:53:25.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.697" endtime="20201030 15:53:25.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.673" endtime="20201030 15:53:25.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.671" endtime="20201030 15:53:25.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:25.706" endtime="20201030 15:53:25.993"></status>
</kw>
<msg timestamp="20201030 15:53:25.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.704" endtime="20201030 15:53:25.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021411167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021425875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:25.997" endtime="20201030 15:53:26.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.006" endtime="20201030 15:53:26.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.702" endtime="20201030 15:53:26.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.700" endtime="20201030 15:53:26.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.013" level="INFO">${RESULT} = [{'diff': 1.4708000000002164e-05}, {'diff': 1.4707999999998694e-05}, {'diff': 1.541700000000021e-05}, {'diff': 1.4707999999998694e-05}, {'diff': 1.504099999999689e-05}, {'diff': 1.4736000000001304e-05...</msg>
<status status="PASS" starttime="20201030 15:53:26.009" endtime="20201030 15:53:26.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.018" level="INFO">${ACCURACY} = {'diff': [1.4708000000002164e-05, 1.4707999999998694e-05, 1.541700000000021e-05, 1.4707999999998694e-05, 1.504099999999689e-05, 1.4736000000001304e-05, 1.4721999999998264e-05, 1.502700000000079e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:53:26.014" endtime="20201030 15:53:26.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.023" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.022" endtime="20201030 15:53:26.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.026" level="INFO">VALUE: [1.4708000000002164e-05, 1.4707999999998694e-05, 1.541700000000021e-05, 1.4707999999998694e-05, 1.504099999999689e-05, 1.4736000000001304e-05, 1.4721999999998264e-05, 1.502700000000079e-05, 1.4694999999998598e-05, 1.4361000000000929e-05, 1.5028000000000263e-05, 1.4736000000001304e-05, 1.5041999999999833e-05, 1.4749999999997404e-05, 1.4750000000000874e-05, 1.540300000000064e-05, 1.540299999999717e-05, 1.4639000000000318e-05, 1.4736000000001304e-05, 1.4707999999998694e-05, 1.5056000000002873e-05, 1.534699999999889e-05, 1.5028000000000263e-05, 1.5083000000002539e-05, 1.538900000000107e-05, 1.5041999999999833e-05, 1.5056000000002873e-05, 1.538900000000107e-05, 1.4694999999998598e-05, 1.53889999999976e-05, 1.4361000000000929e-05, 1.4985999999998084e-05, 1.538900000000107e-05, 1.4986000000001554e-05, 1.4693999999999124e-05, 1.541700000000021e-05, 1.53750000000015e-05, 1.4680999999999028e-05, 1.5055999999999403e-05, 1.537499999999803e-05, 1.4652999999999888e-05, 1.4695000000002068e-05, 1.504100000000036e-05, 1.4348000000000832e-05, 1.4721999999998264e-05, 1.53889999999976e-05, 1.4721999999998264e-05, 1.53889999999976e-05, 1.4708000000002164e-05, 1.4694999999998598e-05]</msg>
<status status="PASS" starttime="20201030 15:53:26.024" endtime="20201030 15:53:26.027"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.019" endtime="20201030 15:53:26.028"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.032" endtime="20201030 15:53:26.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.030" endtime="20201030 15:53:26.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.029" endtime="20201030 15:53:26.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.669" endtime="20201030 15:53:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:25.669" endtime="20201030 15:53:26.053"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.062" endtime="20201030 15:53:26.077"></status>
</kw>
<msg timestamp="20201030 15:53:26.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.060" endtime="20201030 15:53:26.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.079" endtime="20201030 15:53:26.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.081" endtime="20201030 15:53:26.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.058" endtime="20201030 15:53:26.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.055" endtime="20201030 15:53:26.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.091" endtime="20201030 15:53:26.377"></status>
</kw>
<msg timestamp="20201030 15:53:26.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:26.089" endtime="20201030 15:53:26.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020281417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0202975, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:26.381" endtime="20201030 15:53:26.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.390" endtime="20201030 15:53:26.392"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.087" endtime="20201030 15:53:26.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.085" endtime="20201030 15:53:26.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.398" level="INFO">${RESULT} = [{'diff': 1.608300000000007e-05}, {'diff': 1.6444000000000875e-05}, {'diff': 1.5722999999998738e-05}, {'diff': 1.5735999999998834e-05}, {'diff': 1.641700000000121e-05}, {'diff': 1.640299999999817e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:26.394" endtime="20201030 15:53:26.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.404" level="INFO">${ACCURACY} = {'diff': [1.608300000000007e-05, 1.6444000000000875e-05, 1.5722999999998738e-05, 1.5735999999998834e-05, 1.641700000000121e-05, 1.640299999999817e-05, 1.579100000000111e-05, 1.6445000000000348e-05, 1....</msg>
<status status="PASS" starttime="20201030 15:53:26.399" endtime="20201030 15:53:26.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.409" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.408" endtime="20201030 15:53:26.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.413" level="INFO">VALUE: [1.608300000000007e-05, 1.6444000000000875e-05, 1.5722999999998738e-05, 1.5735999999998834e-05, 1.641700000000121e-05, 1.640299999999817e-05, 1.579100000000111e-05, 1.6445000000000348e-05, 1.6445000000000348e-05, 1.6083999999999543e-05, 1.641700000000121e-05, 1.615299999999792e-05, 1.608300000000007e-05, 1.5749999999998404e-05, 1.6083999999999543e-05, 1.538900000000107e-05, 1.537499999999803e-05, 1.5750000000001874e-05, 1.643100000000078e-05, 1.53889999999976e-05, 1.6041999999997364e-05, 1.5749999999998404e-05, 1.5819999999999723e-05, 1.6083999999999543e-05, 1.6083999999999543e-05, 1.5750000000001874e-05, 1.6083999999999543e-05, 1.5721999999999264e-05, 1.608300000000007e-05, 1.5735999999998834e-05, 1.5681000000000028e-05, 1.609699999999964e-05, 1.609700000000311e-05, 1.609699999999964e-05, 1.5736000000002304e-05, 1.5735999999998834e-05, 1.531899999999975e-05, 1.609699999999964e-05, 1.611099999999921e-05, 1.5749999999998404e-05, 1.5736000000002304e-05, 1.615299999999792e-05, 1.6430000000001305e-05, 1.5735999999998834e-05, 1.5750000000001874e-05, 1.6415999999998265e-05, 1.6083999999999543e-05, 1.643100000000078e-05, 1.6445000000000348e-05, 1.5792000000000583e-05]</msg>
<status status="PASS" starttime="20201030 15:53:26.411" endtime="20201030 15:53:26.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.405" endtime="20201030 15:53:26.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.418" endtime="20201030 15:53:26.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.416" endtime="20201030 15:53:26.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.415" endtime="20201030 15:53:26.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.054" endtime="20201030 15:53:26.439"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.053" endtime="20201030 15:53:26.439"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.448" endtime="20201030 15:53:26.462"></status>
</kw>
<msg timestamp="20201030 15:53:26.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.446" endtime="20201030 15:53:26.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.464" endtime="20201030 15:53:26.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.466" endtime="20201030 15:53:26.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.443" endtime="20201030 15:53:26.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.441" endtime="20201030 15:53:26.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.476" endtime="20201030 15:53:26.766"></status>
</kw>
<msg timestamp="20201030 15:53:26.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.474" endtime="20201030 15:53:26.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020191917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.770" endtime="20201030 15:53:26.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.779" endtime="20201030 15:53:26.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.471" endtime="20201030 15:53:26.781"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.470" endtime="20201030 15:53:26.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:26.785" level="INFO">${RESULT} = [{'diff': 1.712499999999978e-05}, {'diff': 1.711099999999674e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.6777999999998544e-05}, {'diff': 1.6778000000002014e-05}, {'diff': 1.7472000000001014e-05...</msg>
<status status="PASS" starttime="20201030 15:53:26.782" endtime="20201030 15:53:26.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:26.790" level="INFO">${ACCURACY} = {'diff': [1.712499999999978e-05, 1.711099999999674e-05, 1.6778000000002014e-05, 1.6777999999998544e-05, 1.6778000000002014e-05, 1.7472000000001014e-05, 1.6777999999998544e-05, 1.737500000000003e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:53:26.787" endtime="20201030 15:53:26.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.795" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 15:53:26.793" endtime="20201030 15:53:26.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.798" level="INFO">VALUE: [1.712499999999978e-05, 1.711099999999674e-05, 1.6778000000002014e-05, 1.6777999999998544e-05, 1.6778000000002014e-05, 1.7472000000001014e-05, 1.6777999999998544e-05, 1.737500000000003e-05, 1.7458000000001445e-05, 1.7472000000001014e-05, 1.7513999999999724e-05, 1.677699999999907e-05, 1.712499999999978e-05, 1.712500000000325e-05, 1.677699999999907e-05, 1.6443999999997405e-05, 1.7472000000001014e-05, 1.679099999999864e-05, 1.643100000000078e-05, 1.712499999999978e-05, 1.6415999999998265e-05, 1.6777999999998544e-05, 1.679099999999864e-05, 1.7486000000000584e-05, 1.6722000000000264e-05, 1.6834000000000293e-05, 1.7513999999999724e-05, 1.6778000000002014e-05, 1.6777999999998544e-05, 1.713899999999935e-05, 1.6749999999999404e-05, 1.6777999999998544e-05, 1.6777999999998544e-05, 1.640300000000164e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.6778000000002014e-05, 1.67629999999995e-05, 1.686099999999996e-05, 1.7194000000001625e-05, 1.712500000000325e-05, 1.6778000000002014e-05, 1.6792000000001583e-05, 1.7137999999999876e-05, 1.7471999999997545e-05, 1.6763999999998974e-05, 1.6764000000002444e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.7500000000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:53:26.796" endtime="20201030 15:53:26.799"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.791" endtime="20201030 15:53:26.799"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:26.803" endtime="20201030 15:53:26.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.801" endtime="20201030 15:53:26.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.800" endtime="20201030 15:53:26.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.440" endtime="20201030 15:53:26.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.439" endtime="20201030 15:53:26.825"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.840" endtime="20201030 15:53:26.856"></status>
</kw>
<msg timestamp="20201030 15:53:26.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.837" endtime="20201030 15:53:26.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:26.859" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:26.857" endtime="20201030 15:53:26.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.860" endtime="20201030 15:53:26.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.833" endtime="20201030 15:53:26.862"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.829" endtime="20201030 15:53:26.863"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:26.869" endtime="20201030 15:53:27.155"></status>
</kw>
<msg timestamp="20201030 15:53:27.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028329903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028347722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:26.868" endtime="20201030 15:53:27.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028329903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028347722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.160" endtime="20201030 15:53:27.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.168" endtime="20201030 15:53:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.865" endtime="20201030 15:53:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.863" endtime="20201030 15:53:27.171"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.175" level="INFO">${RESULT} = [{'diff': 1.781899999999878e-05}, {'diff': 1.780499999999921e-05}, {'diff': 1.8541999999999864e-05}, {'diff': 1.7819999999998254e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.8500000000001154e-05...</msg>
<status status="PASS" starttime="20201030 15:53:27.172" endtime="20201030 15:53:27.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.179" level="INFO">${ACCURACY} = {'diff': [1.781899999999878e-05, 1.780499999999921e-05, 1.8541999999999864e-05, 1.7819999999998254e-05, 1.8514000000000724e-05, 1.8500000000001154e-05, 1.7486000000000584e-05, 1.816699999999949e-05, 1...</msg>
<status status="PASS" starttime="20201030 15:53:27.176" endtime="20201030 15:53:27.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.184" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.183" endtime="20201030 15:53:27.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.186" level="INFO">VALUE: [1.781899999999878e-05, 1.780499999999921e-05, 1.8541999999999864e-05, 1.7819999999998254e-05, 1.8514000000000724e-05, 1.8500000000001154e-05, 1.7486000000000584e-05, 1.816699999999949e-05, 1.783300000000182e-05, 1.784700000000139e-05, 1.813900000000035e-05, 1.813900000000035e-05, 1.7805999999998684e-05, 1.815299999999992e-05, 1.818099999999906e-05, 1.780499999999921e-05, 1.81950000000021e-05, 1.8221999999998295e-05, 1.7805999999998684e-05, 1.8152000000000446e-05, 1.7459000000000918e-05, 1.744500000000135e-05, 1.812500000000078e-05, 1.740300000000264e-05, 1.8500000000001154e-05, 1.7819999999998254e-05, 1.7833999999997824e-05, 1.7834000000001293e-05, 1.8166000000000015e-05, 1.781900000000225e-05, 1.779099999999964e-05, 1.780500000000268e-05, 1.781899999999878e-05, 1.811100000000121e-05, 1.7805999999998684e-05, 1.815299999999992e-05, 1.8152000000000446e-05, 1.737500000000003e-05, 1.783300000000182e-05, 1.844500000000235e-05, 1.7834000000001293e-05, 1.780499999999921e-05, 1.7458000000001445e-05, 1.7473000000000488e-05, 1.781899999999878e-05, 1.7458000000001445e-05, 1.815299999999992e-05, 1.8500000000001154e-05, 1.7834000000001293e-05, 1.7471999999997545e-05]</msg>
<status status="PASS" starttime="20201030 15:53:27.185" endtime="20201030 15:53:27.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.180" endtime="20201030 15:53:27.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.198" endtime="20201030 15:53:27.217"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.196" endtime="20201030 15:53:27.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.195" endtime="20201030 15:53:27.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.827" endtime="20201030 15:53:27.219"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:26.826" endtime="20201030 15:53:27.219"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.228" endtime="20201030 15:53:27.244"></status>
</kw>
<msg timestamp="20201030 15:53:27.244" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.226" endtime="20201030 15:53:27.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.246" endtime="20201030 15:53:27.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.248" endtime="20201030 15:53:27.250"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.223" endtime="20201030 15:53:27.251"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.221" endtime="20201030 15:53:27.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.258" endtime="20201030 15:53:27.542"></status>
</kw>
<msg timestamp="20201030 15:53:27.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.256" endtime="20201030 15:53:27.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020048292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020067486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:27.546" endtime="20201030 15:53:27.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.554" endtime="20201030 15:53:27.556"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.253" endtime="20201030 15:53:27.557"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.252" endtime="20201030 15:53:27.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.561" level="INFO">${RESULT} = [{'diff': 1.9194000000000155e-05}, {'diff': 1.9207999999999725e-05}, {'diff': 1.886099999999849e-05}, {'diff': 1.9180000000000585e-05}, {'diff': 1.952699999999835e-05}, {'diff': 1.9194000000000155e-05...</msg>
<status status="PASS" starttime="20201030 15:53:27.558" endtime="20201030 15:53:27.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.567" level="INFO">${ACCURACY} = {'diff': [1.9194000000000155e-05, 1.9207999999999725e-05, 1.886099999999849e-05, 1.9180000000000585e-05, 1.952699999999835e-05, 1.9194000000000155e-05, 1.8500000000001154e-05, 1.8500000000001154e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:27.562" endtime="20201030 15:53:27.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.571" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.570" endtime="20201030 15:53:27.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.574" level="INFO">VALUE: [1.9194000000000155e-05, 1.9207999999999725e-05, 1.886099999999849e-05, 1.9180000000000585e-05, 1.952699999999835e-05, 1.9194000000000155e-05, 1.8500000000001154e-05, 1.8500000000001154e-05, 1.884699999999892e-05, 1.8778000000000544e-05, 1.887500000000153e-05, 1.884700000000239e-05, 1.887500000000153e-05, 1.8500000000001154e-05, 1.8792000000000114e-05, 1.8848000000001863e-05, 1.8500000000001154e-05, 1.8499999999997685e-05, 1.851300000000125e-05, 1.919499999999963e-05, 1.8500000000001154e-05, 1.9194000000000155e-05, 1.954099999999792e-05, 1.884699999999892e-05, 1.886100000000196e-05, 1.919499999999963e-05, 1.8833999999998824e-05, 1.8833999999998824e-05, 1.884699999999892e-05, 1.918100000000006e-05, 1.884699999999892e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 1.915300000000092e-05, 1.883299999999935e-05, 1.8862000000001433e-05, 1.915300000000092e-05, 1.886099999999849e-05, 1.883299999999935e-05, 1.884700000000239e-05, 1.9541999999997395e-05, 1.8805999999999684e-05, 1.9194000000000155e-05, 1.918100000000006e-05, 1.9264000000001474e-05, 1.884700000000239e-05, 1.881899999999978e-05, 1.954100000000139e-05, 1.9527999999997825e-05, 1.955499999999749e-05]</msg>
<status status="PASS" starttime="20201030 15:53:27.572" endtime="20201030 15:53:27.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.568" endtime="20201030 15:53:27.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.579" endtime="20201030 15:53:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.578" endtime="20201030 15:53:27.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.576" endtime="20201030 15:53:27.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.220" endtime="20201030 15:53:27.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.219" endtime="20201030 15:53:27.600"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.609" endtime="20201030 15:53:27.625"></status>
</kw>
<msg timestamp="20201030 15:53:27.626" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.608" endtime="20201030 15:53:27.626"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.627" endtime="20201030 15:53:27.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.629" endtime="20201030 15:53:27.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.605" endtime="20201030 15:53:27.632"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.603" endtime="20201030 15:53:27.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.639" endtime="20201030 15:53:27.926"></status>
</kw>
<msg timestamp="20201030 15:53:27.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:27.637" endtime="20201030 15:53:27.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020163444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020183, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:27.930" endtime="20201030 15:53:27.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.939" endtime="20201030 15:53:27.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.634" endtime="20201030 15:53:27.941"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.633" endtime="20201030 15:53:27.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:27.945" level="INFO">${RESULT} = [{'diff': 1.9556000000000434e-05}, {'diff': 1.987500000000253e-05}, {'diff': 2.0222000000000295e-05}, {'diff': 1.987500000000253e-05}, {'diff': 2.05830000000011e-05}, {'diff': 1.9541999999997395e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:27.942" endtime="20201030 15:53:27.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:27.950" level="INFO">${ACCURACY} = {'diff': [1.9556000000000434e-05, 1.987500000000253e-05, 2.0222000000000295e-05, 1.987500000000253e-05, 2.05830000000011e-05, 1.9541999999997395e-05, 2.0292000000001614e-05, 2.0584000000000574e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:27.946" endtime="20201030 15:53:27.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.955" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 15:53:27.953" endtime="20201030 15:53:27.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:27.957" level="INFO">VALUE: [1.9556000000000434e-05, 1.987500000000253e-05, 2.0222000000000295e-05, 1.987500000000253e-05, 2.05830000000011e-05, 1.9541999999997395e-05, 2.0292000000001614e-05, 2.0584000000000574e-05, 2.019500000000063e-05, 1.9528000000001294e-05, 1.986099999999949e-05, 2.0222000000000295e-05, 2.0584000000000574e-05, 2.0264000000002474e-05, 2.0222000000000295e-05, 1.990300000000167e-05, 1.9902000000002196e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 2.022299999999977e-05, 1.9542000000000864e-05, 2.0165999999998546e-05, 1.987499999999906e-05, 1.9528000000001294e-05, 2.02090000000002e-05, 1.991699999999777e-05, 2.0235999999999865e-05, 1.9556000000000434e-05, 1.98890000000021e-05, 2.056899999999806e-05, 1.988899999999863e-05, 2.0570000000001004e-05, 2.0235999999999865e-05, 1.987499999999906e-05, 1.9528000000001294e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 1.9542000000000864e-05, 2.018099999999759e-05, 2.022299999999977e-05, 2.0291999999998145e-05, 2.0249999999999435e-05, 1.9556000000000434e-05, 2.054099999999892e-05, 1.987499999999906e-05, 2.0221999999996826e-05, 1.987499999999906e-05, 2.022299999999977e-05, 1.955500000000096e-05, 2.0208000000000725e-05]</msg>
<status status="PASS" starttime="20201030 15:53:27.956" endtime="20201030 15:53:27.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.951" endtime="20201030 15:53:27.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:27.962" endtime="20201030 15:53:27.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.961" endtime="20201030 15:53:27.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.959" endtime="20201030 15:53:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.601" endtime="20201030 15:53:27.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.601" endtime="20201030 15:53:27.983"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:27.992" endtime="20201030 15:53:28.010"></status>
</kw>
<msg timestamp="20201030 15:53:28.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:27.991" endtime="20201030 15:53:28.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.011" endtime="20201030 15:53:28.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.014" endtime="20201030 15:53:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.988" endtime="20201030 15:53:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.986" endtime="20201030 15:53:28.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.023" endtime="20201030 15:53:28.309"></status>
</kw>
<msg timestamp="20201030 15:53:28.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.022" endtime="20201030 15:53:28.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021740125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021761389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.313" endtime="20201030 15:53:28.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.321" endtime="20201030 15:53:28.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.019" endtime="20201030 15:53:28.323"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.017" endtime="20201030 15:53:28.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.328" level="INFO">${RESULT} = [{'diff': 2.1264000000000005e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.056899999999806e-05}, {'diff': 2.061100000000024e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.1264000000000005e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:28.325" endtime="20201030 15:53:28.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.332" level="INFO">${ACCURACY} = {'diff': [2.1264000000000005e-05, 2.05830000000011e-05, 2.056899999999806e-05, 2.061100000000024e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:28.329" endtime="20201030 15:53:28.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.337" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.336" endtime="20201030 15:53:28.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.340" level="INFO">VALUE: [2.1264000000000005e-05, 2.05830000000011e-05, 2.056899999999806e-05, 2.061100000000024e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.0901999999999726e-05, 2.0598000000000144e-05, 2.1264000000000005e-05, 2.161099999999777e-05, 2.056900000000153e-05, 2.0915999999999296e-05, 2.091700000000224e-05, 2.091700000000224e-05, 2.0570000000001004e-05, 2.090300000000267e-05, 2.1264000000000005e-05, 2.0569999999997535e-05, 2.1250000000000435e-05, 2.1292000000002614e-05, 2.1570000000002004e-05, 2.1235999999997396e-05, 2.091699999999877e-05, 2.1277999999999575e-05, 2.0570000000001004e-05, 2.091699999999877e-05, 2.126300000000053e-05, 2.093100000000181e-05, 2.090300000000267e-05, 2.05830000000011e-05, 2.161100000000124e-05, 2.093100000000181e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.093099999999834e-05, 2.1264000000000005e-05, 2.0915999999999296e-05, 2.093099999999834e-05, 2.0915999999999296e-05, 2.0930000000002336e-05, 2.1264000000000005e-05, 2.084700000000092e-05, 2.1264000000000005e-05, 2.087499999999659e-05, 2.087500000000006e-05, 2.126300000000053e-05, 2.09029999999992e-05]</msg>
<status status="PASS" starttime="20201030 15:53:28.338" endtime="20201030 15:53:28.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.333" endtime="20201030 15:53:28.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.346" endtime="20201030 15:53:28.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.344" endtime="20201030 15:53:28.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.343" endtime="20201030 15:53:28.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.984" endtime="20201030 15:53:28.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:27.983" endtime="20201030 15:53:28.367"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.376" endtime="20201030 15:53:28.391"></status>
</kw>
<msg timestamp="20201030 15:53:28.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.374" endtime="20201030 15:53:28.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.393" endtime="20201030 15:53:28.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.395" endtime="20201030 15:53:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.371" endtime="20201030 15:53:28.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.369" endtime="20201030 15:53:28.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.404" endtime="20201030 15:53:28.689"></status>
</kw>
<msg timestamp="20201030 15:53:28.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.403" endtime="20201030 15:53:28.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020089583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:28.693" endtime="20201030 15:53:28.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.703" endtime="20201030 15:53:28.705"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.400" endtime="20201030 15:53:28.706"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.398" endtime="20201030 15:53:28.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:28.712" level="INFO">${RESULT} = [{'diff': 2.1958000000002476e-05}, {'diff': 2.1957999999999006e-05}, {'diff': 2.161099999999777e-05}, {'diff': 2.154099999999992e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.2292000000000145e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:28.708" endtime="20201030 15:53:28.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:28.719" level="INFO">${ACCURACY} = {'diff': [2.1958000000002476e-05, 2.1957999999999006e-05, 2.161099999999777e-05, 2.154099999999992e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.1612000000000714e-05, 2.161100000000124e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:28.714" endtime="20201030 15:53:28.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.725" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 15:53:28.724" endtime="20201030 15:53:28.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.729" level="INFO">VALUE: [2.1958000000002476e-05, 2.1957999999999006e-05, 2.161099999999777e-05, 2.154099999999992e-05, 2.231899999999981e-05, 2.2292000000000145e-05, 2.1612000000000714e-05, 2.161100000000124e-05, 2.2278000000000575e-05, 2.1902000000000726e-05, 2.161099999999777e-05, 2.194499999999891e-05, 2.1958000000002476e-05, 2.1971999999998576e-05, 2.162500000000081e-05, 2.2305999999999715e-05, 2.161099999999777e-05, 2.1957999999999006e-05, 2.195900000000195e-05, 2.2292000000000145e-05, 2.195900000000195e-05, 2.2305999999999715e-05, 2.2304999999996772e-05, 2.194499999999891e-05, 2.1958000000002476e-05, 2.1943999999999436e-05, 2.1957999999999006e-05, 2.2292000000000145e-05, 2.2278000000000575e-05, 2.1957999999999006e-05, 2.1652000000000476e-05, 2.1929999999999866e-05, 2.2319999999999285e-05, 2.1972000000002045e-05, 2.1902000000000726e-05, 2.162500000000081e-05, 2.2292000000000145e-05, 2.1958000000002476e-05, 2.162500000000081e-05, 2.1957999999999006e-05, 2.2319999999999285e-05, 2.1971999999998576e-05, 2.2305999999999715e-05, 2.1943999999999436e-05, 2.195900000000195e-05, 2.265299999999748e-05, 2.161100000000124e-05, 2.231899999999981e-05, 2.162500000000081e-05, 2.2290999999997202e-05]</msg>
<status status="PASS" starttime="20201030 15:53:28.727" endtime="20201030 15:53:28.730"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.721" endtime="20201030 15:53:28.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:28.735" endtime="20201030 15:53:28.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.733" endtime="20201030 15:53:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.732" endtime="20201030 15:53:28.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.368" endtime="20201030 15:53:28.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.367" endtime="20201030 15:53:28.756"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.765" endtime="20201030 15:53:28.780"></status>
</kw>
<msg timestamp="20201030 15:53:28.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.763" endtime="20201030 15:53:28.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:28.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:28.782" endtime="20201030 15:53:28.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.784" endtime="20201030 15:53:28.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.760" endtime="20201030 15:53:28.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.758" endtime="20201030 15:53:28.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:28.794" endtime="20201030 15:53:29.081"></status>
</kw>
<msg timestamp="20201030 15:53:29.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:28.792" endtime="20201030 15:53:29.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020081875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0201045, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:53:29.085" endtime="20201030 15:53:29.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.094" endtime="20201030 15:53:29.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.790" endtime="20201030 15:53:29.096"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.788" endtime="20201030 15:53:29.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.101" level="INFO">${RESULT} = [{'diff': 2.262500000000181e-05}, {'diff': 2.2971999999999576e-05}, {'diff': 2.263899999999791e-05}, {'diff': 2.265299999999748e-05}, {'diff': 2.263899999999791e-05}, {'diff': 2.2958000000000006e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:29.097" endtime="20201030 15:53:29.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:29.105" level="INFO">${ACCURACY} = {'diff': [2.262500000000181e-05, 2.2971999999999576e-05, 2.263899999999791e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.2958000000000006e-05, 2.2999999999998716e-05, 2.2972000000003046e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:53:29.102" endtime="20201030 15:53:29.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.110" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 15:53:29.109" endtime="20201030 15:53:29.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.112" level="INFO">VALUE: [2.262500000000181e-05, 2.2971999999999576e-05, 2.263899999999791e-05, 2.265299999999748e-05, 2.263899999999791e-05, 2.2958000000000006e-05, 2.2999999999998716e-05, 2.2972000000003046e-05, 2.3306000000000715e-05, 2.263900000000138e-05, 2.3000000000002185e-05, 2.263900000000138e-05, 2.3014000000001755e-05, 2.333300000000038e-05, 2.2971999999999576e-05, 2.2999999999998716e-05, 2.297299999999905e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.334699999999995e-05, 2.3347999999999425e-05, 2.2972000000003046e-05, 2.3278000000001575e-05, 2.3333999999999855e-05, 2.333300000000038e-05, 2.2985999999999146e-05, 2.263900000000138e-05, 2.3332999999996912e-05, 2.333300000000038e-05, 2.263900000000138e-05, 2.265300000000095e-05, 2.25969999999992e-05, 2.2986000000002615e-05, 2.2985999999999146e-05, 2.3013999999998286e-05, 2.333300000000038e-05, 2.3347999999999425e-05, 2.263899999999791e-05, 2.266700000000052e-05, 2.2985999999999146e-05, 2.3262999999999062e-05, 2.2666000000001046e-05, 2.3014000000001755e-05, 2.263900000000138e-05, 2.3000000000002185e-05, 2.263899999999791e-05, 2.2985999999999146e-05, 2.3333999999999855e-05, 2.2985999999999146e-05, 2.2666000000001046e-05]</msg>
<status status="PASS" starttime="20201030 15:53:29.111" endtime="20201030 15:53:29.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.106" endtime="20201030 15:53:29.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.118" endtime="20201030 15:53:29.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.116" endtime="20201030 15:53:29.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.115" endtime="20201030 15:53:29.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.757" endtime="20201030 15:53:29.138"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:28.756" endtime="20201030 15:53:29.138"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.148" endtime="20201030 15:53:29.165"></status>
</kw>
<msg timestamp="20201030 15:53:29.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.146" endtime="20201030 15:53:29.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.166" endtime="20201030 15:53:29.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.169" endtime="20201030 15:53:29.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.143" endtime="20201030 15:53:29.171"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.141" endtime="20201030 15:53:29.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.178" endtime="20201030 15:53:29.464"></status>
</kw>
<msg timestamp="20201030 15:53:29.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.177" endtime="20201030 15:53:29.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021680625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021704292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.468" endtime="20201030 15:53:29.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.476" endtime="20201030 15:53:29.478"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.174" endtime="20201030 15:53:29.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.172" endtime="20201030 15:53:29.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.483" level="INFO">${RESULT} = [{'diff': 2.366700000000152e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.3680000000001616e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.433300000000138e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:29.480" endtime="20201030 15:53:29.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:29.488" level="INFO">${ACCURACY} = {'diff': [2.366700000000152e-05, 2.436100000000052e-05, 2.3680000000001616e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.437500000000009e-05, 2.4443999999998467e-05, 2.40...</msg>
<status status="PASS" starttime="20201030 15:53:29.484" endtime="20201030 15:53:29.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.492" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 15:53:29.491" endtime="20201030 15:53:29.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.495" level="INFO">VALUE: [2.366700000000152e-05, 2.436100000000052e-05, 2.3680000000001616e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.433300000000138e-05, 2.437500000000009e-05, 2.4443999999998467e-05, 2.4027999999998856e-05, 2.437500000000009e-05, 2.4346999999997482e-05, 2.436100000000052e-05, 2.4026999999999382e-05, 2.368099999999762e-05, 2.4026999999999382e-05, 2.438899999999966e-05, 2.4040999999998952e-05, 2.369499999999719e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.438899999999966e-05, 2.37229999999998e-05, 2.369500000000066e-05, 2.438899999999966e-05, 2.366700000000152e-05, 2.3680000000001616e-05, 2.437500000000009e-05, 2.3679999999998147e-05, 2.4041999999998426e-05, 2.369500000000066e-05, 2.3665999999998577e-05, 2.4040999999998952e-05, 2.3665999999998577e-05, 2.366700000000152e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.402700000000285e-05, 2.3666000000002047e-05, 2.3680000000001616e-05, 2.366699999999805e-05, 2.369499999999719e-05, 2.3665999999998577e-05, 2.438899999999966e-05, 2.438899999999966e-05, 2.436100000000052e-05, 2.434700000000095e-05, 2.3999999999999716e-05, 2.3749999999999466e-05, 2.366700000000152e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:53:29.493" endtime="20201030 15:53:29.497"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.488" endtime="20201030 15:53:29.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.501" endtime="20201030 15:53:29.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.499" endtime="20201030 15:53:29.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.498" endtime="20201030 15:53:29.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.139" endtime="20201030 15:53:29.522"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.139" endtime="20201030 15:53:29.522"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.531" endtime="20201030 15:53:29.546"></status>
</kw>
<msg timestamp="20201030 15:53:29.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.529" endtime="20201030 15:53:29.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.548" endtime="20201030 15:53:29.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.550" endtime="20201030 15:53:29.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.527" endtime="20201030 15:53:29.552"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.524" endtime="20201030 15:53:29.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.560" endtime="20201030 15:53:29.845"></status>
</kw>
<msg timestamp="20201030 15:53:29.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.558" endtime="20201030 15:53:29.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020027181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.850" endtime="20201030 15:53:29.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.858" endtime="20201030 15:53:29.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.555" endtime="20201030 15:53:29.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.553" endtime="20201030 15:53:29.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:29.865" level="INFO">${RESULT} = [{'diff': 2.5401999999997288e-05}, {'diff': 2.5332999999998912e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.5401999999997288e-05}, {'diff': 2.5055999999998996e-05}, {'diff': 2.5332999999998912e-...</msg>
<status status="PASS" starttime="20201030 15:53:29.862" endtime="20201030 15:53:29.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:29.870" level="INFO">${ACCURACY} = {'diff': [2.5401999999997288e-05, 2.5332999999998912e-05, 2.4707999999998287e-05, 2.5401999999997288e-05, 2.5055999999998996e-05, 2.5332999999998912e-05, 2.5402000000000757e-05, 2.5054999999999522e-05...</msg>
<status status="PASS" starttime="20201030 15:53:29.866" endtime="20201030 15:53:29.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.875" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 15:53:29.874" endtime="20201030 15:53:29.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.878" level="INFO">VALUE: [2.5401999999997288e-05, 2.5332999999998912e-05, 2.4707999999998287e-05, 2.5401999999997288e-05, 2.5055999999998996e-05, 2.5332999999998912e-05, 2.5402000000000757e-05, 2.5054999999999522e-05, 2.5429999999999897e-05, 2.4721999999997857e-05, 2.538900000000066e-05, 2.54169999999998e-05, 2.5041999999999426e-05, 2.4722000000001326e-05, 2.543099999999937e-05, 2.54169999999998e-05, 2.506900000000256e-05, 2.5082999999998662e-05, 2.541700000000327e-05, 2.4708000000001756e-05, 2.5056000000002465e-05, 2.4722000000001326e-05, 2.54169999999998e-05, 2.5055999999998996e-05, 2.4306000000001715e-05, 2.47230000000008e-05, 2.4722000000001326e-05, 2.54169999999998e-05, 2.4750000000000466e-05, 2.5055999999998996e-05, 2.540299999999676e-05, 2.472299999999733e-05, 2.5055999999998996e-05, 2.4722000000001326e-05, 2.544500000000241e-05, 2.4348000000000425e-05, 2.5111999999997275e-05, 2.5054999999999522e-05, 2.4694000000002186e-05, 2.470899999999776e-05, 2.5040999999999952e-05, 2.513900000000041e-05, 2.54169999999998e-05, 2.538900000000066e-05, 2.5082999999998662e-05, 2.540300000000023e-05, 2.5054999999999522e-05, 2.543099999999937e-05, 2.443099999999837e-05, 2.437500000000009e-05]</msg>
<status status="PASS" starttime="20201030 15:53:29.876" endtime="20201030 15:53:29.878"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.871" endtime="20201030 15:53:29.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:29.883" endtime="20201030 15:53:29.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.881" endtime="20201030 15:53:29.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.880" endtime="20201030 15:53:29.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.523" endtime="20201030 15:53:29.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.522" endtime="20201030 15:53:29.904"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.913" endtime="20201030 15:53:29.927"></status>
</kw>
<msg timestamp="20201030 15:53:29.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.911" endtime="20201030 15:53:29.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:29.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:29.929" endtime="20201030 15:53:29.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.931" endtime="20201030 15:53:29.933"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.908" endtime="20201030 15:53:29.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.906" endtime="20201030 15:53:29.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:29.941" endtime="20201030 15:53:30.230"></status>
</kw>
<msg timestamp="20201030 15:53:30.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020053306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:29.939" endtime="20201030 15:53:30.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.242" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020026847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020053306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.234" endtime="20201030 15:53:30.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.243" endtime="20201030 15:53:30.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.937" endtime="20201030 15:53:30.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.935" endtime="20201030 15:53:30.246"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:30.250" level="INFO">${RESULT} = [{'diff': 2.645899999999951e-05}, {'diff': 2.6110999999998802e-05}, {'diff': 2.6110999999998802e-05}, {'diff': 2.5763999999997567e-05}, {'diff': 2.643100000000037e-05}, {'diff': 2.5749999999997997e-05...</msg>
<status status="PASS" starttime="20201030 15:53:30.247" endtime="20201030 15:53:30.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:30.254" level="INFO">${ACCURACY} = {'diff': [2.645899999999951e-05, 2.6110999999998802e-05, 2.6110999999998802e-05, 2.5763999999997567e-05, 2.643100000000037e-05, 2.5749999999997997e-05, 2.5750000000001466e-05, 2.5749999999997997e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:30.251" endtime="20201030 15:53:30.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.259" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 15:53:30.258" endtime="20201030 15:53:30.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.262" level="INFO">VALUE: [2.645899999999951e-05, 2.6110999999998802e-05, 2.6110999999998802e-05, 2.5763999999997567e-05, 2.643100000000037e-05, 2.5749999999997997e-05, 2.5750000000001466e-05, 2.5749999999997997e-05, 2.64170000000008e-05, 2.6082999999999662e-05, 2.6444000000000467e-05, 2.6110999999998802e-05, 2.6055999999999996e-05, 2.5778000000000606e-05, 2.544499999999894e-05, 2.6444000000000467e-05, 2.5764000000001036e-05, 2.543100000000284e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.6084000000002605e-05, 2.5778000000000606e-05, 2.545900000000198e-05, 2.5750000000001466e-05, 2.6096999999999232e-05, 2.6014000000001286e-05, 2.643100000000037e-05, 2.5750000000001466e-05, 2.5792000000000176e-05, 2.5749999999997997e-05, 2.6429999999997428e-05, 2.6096999999999232e-05, 2.6069999999999566e-05, 2.5778000000000606e-05, 2.5764000000001036e-05, 2.640300000000123e-05, 2.6360999999999052e-05, 2.5819999999999316e-05, 2.6111999999998275e-05, 2.5735999999998427e-05, 2.5763999999997567e-05, 2.5764000000001036e-05, 2.6055000000000522e-05, 2.5694000000003187e-05, 2.6429999999997428e-05, 2.6096999999999232e-05, 2.5721999999998857e-05, 2.647299999999908e-05, 2.5763999999997567e-05, 2.6110999999998802e-05]</msg>
<status status="PASS" starttime="20201030 15:53:30.260" endtime="20201030 15:53:30.262"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.255" endtime="20201030 15:53:30.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:30.267" endtime="20201030 15:53:30.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.265" endtime="20201030 15:53:30.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.264" endtime="20201030 15:53:30.287"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.905" endtime="20201030 15:53:30.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:29.904" endtime="20201030 15:53:30.288"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.297" endtime="20201030 15:53:30.313"></status>
</kw>
<msg timestamp="20201030 15:53:30.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.295" endtime="20201030 15:53:30.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.315" endtime="20201030 15:53:30.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.317" endtime="20201030 15:53:30.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.293" endtime="20201030 15:53:30.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.290" endtime="20201030 15:53:30.320"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.327" endtime="20201030 15:53:30.613"></status>
</kw>
<msg timestamp="20201030 15:53:30.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.325" endtime="20201030 15:53:30.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021017944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.617" endtime="20201030 15:53:30.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.626" endtime="20201030 15:53:30.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.322" endtime="20201030 15:53:30.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.321" endtime="20201030 15:53:30.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:30.633" level="INFO">${RESULT} = [{'diff': 2.6762999999999093e-05}, {'diff': 2.6806000000000746e-05}, {'diff': 2.6791999999997707e-05}, {'diff': 2.712500000000284e-05}, {'diff': 2.6444000000000467e-05}, {'diff': 2.6736000000002896e-0...</msg>
<status status="PASS" starttime="20201030 15:53:30.630" endtime="20201030 15:53:30.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:30.638" level="INFO">${ACCURACY} = {'diff': [2.6762999999999093e-05, 2.6806000000000746e-05, 2.6791999999997707e-05, 2.712500000000284e-05, 2.6444000000000467e-05, 2.6736000000002896e-05, 2.6847999999999456e-05, 2.7124999999999372e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:30.634" endtime="20201030 15:53:30.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.643" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 15:53:30.642" endtime="20201030 15:53:30.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.645" level="INFO">VALUE: [2.6762999999999093e-05, 2.6806000000000746e-05, 2.6791999999997707e-05, 2.712500000000284e-05, 2.6444000000000467e-05, 2.6736000000002896e-05, 2.6847999999999456e-05, 2.7124999999999372e-05, 2.7138999999998942e-05, 2.6777999999998137e-05, 2.6792000000001176e-05, 2.7486000000000177e-05, 2.6790999999998233e-05, 2.7124999999999372e-05, 2.6415999999997858e-05, 2.7138999999998942e-05, 2.713900000000241e-05, 2.747300000000008e-05, 2.7472000000000607e-05, 2.7110999999999802e-05, 2.6415999999997858e-05, 2.6708000000000287e-05, 2.7499999999999747e-05, 2.64170000000008e-05, 2.6833000000000412e-05, 2.644499999999994e-05, 2.6790999999998233e-05, 2.712500000000284e-05, 2.6764000000002036e-05, 2.7208000000000787e-05, 2.7472000000000607e-05, 2.6749999999998997e-05, 2.6777999999998137e-05, 2.6791999999997707e-05, 2.6777999999998137e-05, 2.713900000000241e-05, 2.7138999999998942e-05, 2.6792000000001176e-05, 2.7471999999997138e-05, 2.644499999999994e-05, 2.7124999999999372e-05, 2.6429999999997428e-05, 2.7110999999999802e-05, 2.6805000000001272e-05, 2.6790999999998233e-05, 2.713900000000241e-05, 2.6833000000000412e-05, 2.6805000000001272e-05, 2.6750000000002466e-05, 2.713900000000241e-05]</msg>
<status status="PASS" starttime="20201030 15:53:30.644" endtime="20201030 15:53:30.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.639" endtime="20201030 15:53:30.648"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:30.652" endtime="20201030 15:53:30.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.650" endtime="20201030 15:53:30.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.649" endtime="20201030 15:53:30.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.289" endtime="20201030 15:53:30.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.288" endtime="20201030 15:53:30.673"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.682" endtime="20201030 15:53:30.697"></status>
</kw>
<msg timestamp="20201030 15:53:30.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.680" endtime="20201030 15:53:30.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:30.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:30.699" endtime="20201030 15:53:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.701" endtime="20201030 15:53:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.677" endtime="20201030 15:53:30.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.675" endtime="20201030 15:53:30.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:30.711" endtime="20201030 15:53:30.996"></status>
</kw>
<msg timestamp="20201030 15:53:30.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:30.709" endtime="20201030 15:53:31.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020172375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.001" endtime="20201030 15:53:31.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.009" endtime="20201030 15:53:31.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.706" endtime="20201030 15:53:31.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.704" endtime="20201030 15:53:31.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.016" level="INFO">${RESULT} = [{'diff': 2.7861000000000552e-05}, {'diff': 2.8152999999999512e-05}, {'diff': 2.7820000000001316e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.8152999999999512e-0...</msg>
<status status="PASS" starttime="20201030 15:53:31.013" endtime="20201030 15:53:31.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:31.021" level="INFO">${ACCURACY} = {'diff': [2.7861000000000552e-05, 2.8152999999999512e-05, 2.7820000000001316e-05, 2.816699999999908e-05, 2.7486000000000177e-05, 2.8152999999999512e-05, 2.7833000000001412e-05, 2.8430000000002897e-05,...</msg>
<status status="PASS" starttime="20201030 15:53:31.017" endtime="20201030 15:53:31.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.026" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 15:53:31.025" endtime="20201030 15:53:31.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.029" level="INFO">VALUE: [2.7861000000000552e-05, 2.8152999999999512e-05, 2.7820000000001316e-05, 2.816699999999908e-05, 2.7486000000000177e-05, 2.8152999999999512e-05, 2.7833000000001412e-05, 2.8430000000002897e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.818100000000212e-05, 2.8513999999996847e-05, 2.7818999999998373e-05, 2.7500000000003216e-05, 2.816699999999908e-05, 2.7833000000001412e-05, 2.8485999999997708e-05, 2.7791999999998707e-05, 2.816699999999908e-05, 2.816699999999908e-05, 2.8180000000002647e-05, 2.819500000000169e-05, 2.7819999999997846e-05, 2.816699999999908e-05, 2.7818999999998373e-05, 2.747300000000008e-05, 2.8499999999997278e-05, 2.816699999999908e-05, 2.8098000000000706e-05, 2.8555999999999027e-05, 2.7833000000001412e-05, 2.7806000000001746e-05, 2.8152999999999512e-05, 2.788900000000316e-05, 2.7820000000001316e-05, 2.7819999999997846e-05, 2.816700000000255e-05, 2.816700000000255e-05, 2.816700000000255e-05, 2.8152999999999512e-05, 2.8179999999999178e-05, 2.8527999999999887e-05, 2.8152000000000038e-05, 2.7804999999998803e-05, 2.8514000000000317e-05, 2.8152000000000038e-05, 2.816700000000255e-05, 2.8179999999999178e-05, 2.815300000000298e-05, 2.8152999999999512e-05]</msg>
<status status="PASS" starttime="20201030 15:53:31.027" endtime="20201030 15:53:31.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.022" endtime="20201030 15:53:31.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.034" endtime="20201030 15:53:31.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.032" endtime="20201030 15:53:31.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.031" endtime="20201030 15:53:31.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.673" endtime="20201030 15:53:31.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:30.673" endtime="20201030 15:53:31.055"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.064" endtime="20201030 15:53:31.078"></status>
</kw>
<msg timestamp="20201030 15:53:31.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.062" endtime="20201030 15:53:31.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.080" endtime="20201030 15:53:31.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.083" endtime="20201030 15:53:31.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.060" endtime="20201030 15:53:31.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.057" endtime="20201030 15:53:31.085"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.092" endtime="20201030 15:53:31.386"></status>
</kw>
<msg timestamp="20201030 15:53:31.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020294444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.091" endtime="20201030 15:53:31.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020294444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.391" endtime="20201030 15:53:31.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.399" endtime="20201030 15:53:31.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.088" endtime="20201030 15:53:31.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.086" endtime="20201030 15:53:31.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.406" level="INFO">${RESULT} = [{'diff': 2.8860999999998083e-05}, {'diff': 2.9208000000002787e-05}, {'diff': 2.9207999999999318e-05}, {'diff': 2.8846999999998513e-05}, {'diff': 2.8889000000000692e-05}, {'diff': 2.8847000000001982e-...</msg>
<status status="PASS" starttime="20201030 15:53:31.403" endtime="20201030 15:53:31.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:31.410" level="INFO">${ACCURACY} = {'diff': [2.8860999999998083e-05, 2.9208000000002787e-05, 2.9207999999999318e-05, 2.8846999999998513e-05, 2.8889000000000692e-05, 2.8847000000001982e-05, 2.9208000000002787e-05, 2.9236000000001927e-05...</msg>
<status status="PASS" starttime="20201030 15:53:31.407" endtime="20201030 15:53:31.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.415" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 15:53:31.414" endtime="20201030 15:53:31.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.417" level="INFO">VALUE: [2.8860999999998083e-05, 2.9208000000002787e-05, 2.9207999999999318e-05, 2.8846999999998513e-05, 2.8889000000000692e-05, 2.8847000000001982e-05, 2.9208000000002787e-05, 2.9236000000001927e-05, 2.8874999999997653e-05, 2.8512999999997374e-05, 2.8846999999998513e-05, 2.8847000000001982e-05, 2.8833000000002412e-05, 2.9221999999998888e-05, 2.8861000000001552e-05, 2.9542000000000457e-05, 2.9263999999997597e-05, 2.9207999999999318e-05, 2.920900000000226e-05, 2.8862000000001026e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.9235999999998458e-05, 2.9207999999999318e-05, 2.8514000000000317e-05, 2.8540999999999983e-05, 2.8875000000001122e-05, 2.9139000000000942e-05, 2.9235999999998458e-05, 2.920899999999879e-05, 2.9207999999999318e-05, 2.920900000000226e-05, 2.8916999999999832e-05, 2.920899999999879e-05, 2.9193999999999748e-05, 2.8846999999998513e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.8526999999996944e-05, 2.8860999999998083e-05, 2.9193999999999748e-05, 2.9263999999997597e-05, 2.9193999999999748e-05, 2.8846999999998513e-05, 2.8875000000001122e-05, 2.8861000000001552e-05, 2.8874999999997653e-05, 2.920900000000226e-05, 2.9500000000001747e-05, 2.8568999999999123e-05]</msg>
<status status="PASS" starttime="20201030 15:53:31.416" endtime="20201030 15:53:31.418"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.411" endtime="20201030 15:53:31.418"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.422" endtime="20201030 15:53:31.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.421" endtime="20201030 15:53:31.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.419" endtime="20201030 15:53:31.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.056" endtime="20201030 15:53:31.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.055" endtime="20201030 15:53:31.443"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.452" endtime="20201030 15:53:31.468"></status>
</kw>
<msg timestamp="20201030 15:53:31.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.450" endtime="20201030 15:53:31.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.469" endtime="20201030 15:53:31.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.472" endtime="20201030 15:53:31.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.447" endtime="20201030 15:53:31.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.445" endtime="20201030 15:53:31.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.481" endtime="20201030 15:53:31.766"></status>
</kw>
<msg timestamp="20201030 15:53:31.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.479" endtime="20201030 15:53:31.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020522375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020552611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.771" endtime="20201030 15:53:31.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.782" endtime="20201030 15:53:31.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.476" endtime="20201030 15:53:31.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.475" endtime="20201030 15:53:31.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:31.797" level="INFO">${RESULT} = [{'diff': 3.0235999999999458e-05}, {'diff': 2.9888999999998223e-05}, {'diff': 2.9875000000002122e-05}, {'diff': 2.9555000000000553e-05}, {'diff': 2.9569999999999597e-05}, {'diff': 2.9902999999997792e-...</msg>
<status status="PASS" starttime="20201030 15:53:31.790" endtime="20201030 15:53:31.797"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:31.807" level="INFO">${ACCURACY} = {'diff': [3.0235999999999458e-05, 2.9888999999998223e-05, 2.9875000000002122e-05, 2.9555000000000553e-05, 2.9569999999999597e-05, 2.9902999999997792e-05, 3.0249999999999028e-05, 3.0235999999999458e-05...</msg>
<status status="PASS" starttime="20201030 15:53:31.799" endtime="20201030 15:53:31.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.817" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 15:53:31.814" endtime="20201030 15:53:31.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.822" level="INFO">VALUE: [3.0235999999999458e-05, 2.9888999999998223e-05, 2.9875000000002122e-05, 2.9555000000000553e-05, 2.9569999999999597e-05, 2.9902999999997792e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 3.059700000000026e-05, 3.0263999999998598e-05, 3.0249999999999028e-05, 3.020899999999979e-05, 2.9583999999999167e-05, 3.0235999999999458e-05, 2.9917000000000832e-05, 2.9903000000001262e-05, 3.0249999999999028e-05, 3.0278000000001637e-05, 3.0277000000002163e-05, 2.9569999999999597e-05, 2.9916000000001358e-05, 2.9888999999998223e-05, 3.0222000000003357e-05, 3.059700000000026e-05, 3.0235999999999458e-05, 2.9540999999997514e-05, 2.9569999999999597e-05, 2.9902999999997792e-05, 3.0306000000000777e-05, 2.9931000000000402e-05, 2.9917000000000832e-05, 3.055500000000155e-05, 3.0249999999999028e-05, 2.9874999999998653e-05, 2.9832999999999943e-05, 2.9542000000000457e-05, 2.9875000000002122e-05, 2.9917000000000832e-05, 3.0584000000000167e-05, 3.0249999999999028e-05, 2.9874999999998653e-05, 3.0596999999996793e-05, 3.0249999999999028e-05, 2.9514000000001317e-05, 3.0582999999997224e-05, 2.9582999999999693e-05, 2.9888999999998223e-05, 2.9888999999998223e-05, 3.056900000000112e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201030 15:53:31.819" endtime="20201030 15:53:31.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.809" endtime="20201030 15:53:31.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:31.835" endtime="20201030 15:53:31.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.831" endtime="20201030 15:53:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.829" endtime="20201030 15:53:31.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.444" endtime="20201030 15:53:31.860"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.443" endtime="20201030 15:53:31.861"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.880" endtime="20201030 15:53:31.897"></status>
</kw>
<msg timestamp="20201030 15:53:31.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.878" endtime="20201030 15:53:31.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:31.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:31.898" endtime="20201030 15:53:31.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.901" endtime="20201030 15:53:31.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.871" endtime="20201030 15:53:31.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.866" endtime="20201030 15:53:31.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:31.910" endtime="20201030 15:53:32.196"></status>
</kw>
<msg timestamp="20201030 15:53:32.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035021431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035052319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:31.909" endtime="20201030 15:53:32.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035021431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.035052319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.200" endtime="20201030 15:53:32.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.209" endtime="20201030 15:53:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.906" endtime="20201030 15:53:32.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.904" endtime="20201030 15:53:32.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:32.216" level="INFO">${RESULT} = [{'diff': 3.088799999999975e-05}, {'diff': 3.127800000000264e-05}, {'diff': 3.0554999999994614e-05}, {'diff': 3.058300000000069e-05}, {'diff': 3.09449999999975e-05}, {'diff': 3.058300000000069e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:32.212" endtime="20201030 15:53:32.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:32.221" level="INFO">${ACCURACY} = {'diff': [3.088799999999975e-05, 3.127800000000264e-05, 3.0554999999994614e-05, 3.058300000000069e-05, 3.09449999999975e-05, 3.058300000000069e-05, 3.134700000000101e-05, 3.127700000000316e-05, 3.1264...</msg>
<status status="PASS" starttime="20201030 15:53:32.217" endtime="20201030 15:53:32.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.226" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 15:53:32.225" endtime="20201030 15:53:32.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.228" level="INFO">VALUE: [3.088799999999975e-05, 3.127800000000264e-05, 3.0554999999994614e-05, 3.058300000000069e-05, 3.09449999999975e-05, 3.058300000000069e-05, 3.134700000000101e-05, 3.127700000000316e-05, 3.126400000000307e-05, 3.052700000000241e-05, 3.093099999999793e-05, 3.058300000000069e-05, 3.087499999999965e-05, 3.0596999999993324e-05, 3.091699999999836e-05, 3.059700000000026e-05, 3.127800000000264e-05, 3.059700000000026e-05, 3.093100000000487e-05, 3.0584000000000167e-05, 3.0860999999993144e-05, 3.123599999999699e-05, 3.16250000000004e-05, 3.123600000000393e-05, 3.127800000000264e-05, 3.09300000000054e-05, 3.09579999999976e-05, 3.127700000000316e-05, 3.09300000000054e-05, 3.095900000000401e-05, 3.123599999999699e-05, 3.126399999999613e-05, 3.09579999999976e-05, 3.063900000000591e-05, 3.095900000000401e-05, 3.094500000000444e-05, 3.095900000000401e-05, 3.161100000000083e-05, 3.126400000000307e-05, 3.093099999999793e-05, 3.090199999999932e-05, 3.12779999999957e-05, 3.056900000000112e-05, 3.126399999999613e-05, 3.091699999999836e-05, 3.127800000000264e-05, 3.12779999999957e-05, 3.095800000000454e-05, 3.124999999999656e-05, 3.129199999999527e-05]</msg>
<status status="PASS" starttime="20201030 15:53:32.227" endtime="20201030 15:53:32.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.222" endtime="20201030 15:53:32.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:32.238" endtime="20201030 15:53:32.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.236" endtime="20201030 15:53:32.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.235" endtime="20201030 15:53:32.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.863" endtime="20201030 15:53:32.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:31.861" endtime="20201030 15:53:32.259"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.268" endtime="20201030 15:53:32.284"></status>
</kw>
<msg timestamp="20201030 15:53:32.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.267" endtime="20201030 15:53:32.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.285" endtime="20201030 15:53:32.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.288" endtime="20201030 15:53:32.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.264" endtime="20201030 15:53:32.290"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.262" endtime="20201030 15:53:32.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.297" endtime="20201030 15:53:32.585"></status>
</kw>
<msg timestamp="20201030 15:53:32.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.296" endtime="20201030 15:53:32.588"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020214819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020250097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:32.589" endtime="20201030 15:53:32.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.598" endtime="20201030 15:53:32.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.293" endtime="20201030 15:53:32.600"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.291" endtime="20201030 15:53:32.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:32.605" level="INFO">${RESULT} = [{'diff': 3.527800000000317e-05}, {'diff': 3.4847000000001044e-05}, {'diff': 3.498600000000074e-05}, {'diff': 3.551400000000038e-05}, {'diff': 3.4791000000002764e-05}, {'diff': 3.51520000000001e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:32.601" endtime="20201030 15:53:32.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:32.609" level="INFO">${ACCURACY} = {'diff': [3.527800000000317e-05, 3.4847000000001044e-05, 3.498600000000074e-05, 3.551400000000038e-05, 3.4791000000002764e-05, 3.51520000000001e-05, 3.5569000000002654e-05, 3.4624999999999934e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 15:53:32.606" endtime="20201030 15:53:32.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.614" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 15:53:32.612" endtime="20201030 15:53:32.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.616" level="INFO">VALUE: [3.527800000000317e-05, 3.4847000000001044e-05, 3.498600000000074e-05, 3.551400000000038e-05, 3.4791000000002764e-05, 3.51520000000001e-05, 3.5569000000002654e-05, 3.4624999999999934e-05, 3.494399999999856e-05, 3.519400000000228e-05, 3.504200000000249e-05, 3.500000000000031e-05, 3.4597000000000794e-05, 3.465300000000254e-05, 3.518099999999871e-05, 3.5166999999999143e-05, 3.488900000000322e-05, 3.544499999999853e-05, 3.47640000000031e-05, 3.45840000000007e-05, 3.4624999999999934e-05, 3.470899999999735e-05, 3.500000000000031e-05, 3.541599999999992e-05, 3.461199999999984e-05, 3.504200000000249e-05, 3.46519999999996e-05, 3.540200000000035e-05, 3.501399999999988e-05, 3.4832999999998004e-05, 3.4554999999998615e-05, 3.4805000000002334e-05, 3.526400000000013e-05, 3.520800000000185e-05, 3.492999999999899e-05, 3.500000000000031e-05, 3.5389000000000254e-05, 3.525000000000056e-05, 3.5361000000001114e-05, 3.530600000000231e-05, 3.548600000000124e-05, 3.4902999999999323e-05, 3.469500000000125e-05, 3.548600000000124e-05, 3.491699999999889e-05, 3.459800000000027e-05, 3.548600000000124e-05, 3.505600000000206e-05, 3.530600000000231e-05, 3.4902999999999323e-05]</msg>
<status status="PASS" starttime="20201030 15:53:32.615" endtime="20201030 15:53:32.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.610" endtime="20201030 15:53:32.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:32.621" endtime="20201030 15:53:32.641"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.620" endtime="20201030 15:53:32.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.619" endtime="20201030 15:53:32.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.260" endtime="20201030 15:53:32.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.259" endtime="20201030 15:53:32.642"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.652" endtime="20201030 15:53:32.668"></status>
</kw>
<msg timestamp="20201030 15:53:32.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.650" endtime="20201030 15:53:32.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.671" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:32.670" endtime="20201030 15:53:32.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.673" endtime="20201030 15:53:32.674"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.647" endtime="20201030 15:53:32.675"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.645" endtime="20201030 15:53:32.675"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.682" endtime="20201030 15:53:32.968"></status>
</kw>
<msg timestamp="20201030 15:53:32.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02114175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:32.681" endtime="20201030 15:53:32.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02114175, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021177653, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:32.972" endtime="20201030 15:53:32.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:32.981" endtime="20201030 15:53:32.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.678" endtime="20201030 15:53:32.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.676" endtime="20201030 15:53:32.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:32.988" level="INFO">${RESULT} = [{'diff': 3.5903000000000324e-05}, {'diff': 3.601400000000088e-05}, {'diff': 3.597299999999817e-05}, {'diff': 3.611200000000134e-05}, {'diff': 3.6430999999999963e-05}, {'diff': 3.629200000000027e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:32.984" endtime="20201030 15:53:32.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:32.992" level="INFO">${ACCURACY} = {'diff': [3.5903000000000324e-05, 3.601400000000088e-05, 3.597299999999817e-05, 3.611200000000134e-05, 3.6430999999999963e-05, 3.629200000000027e-05, 3.573600000000149e-05, 3.5889000000000754e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 15:53:32.989" endtime="20201030 15:53:32.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.997" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 15:53:32.996" endtime="20201030 15:53:32.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:32.999" level="INFO">VALUE: [3.5903000000000324e-05, 3.601400000000088e-05, 3.597299999999817e-05, 3.611200000000134e-05, 3.6430999999999963e-05, 3.629200000000027e-05, 3.573600000000149e-05, 3.5889000000000754e-05, 3.5791000000000295e-05, 3.6291000000000795e-05, 3.59719999999987e-05, 3.5582999999998755e-05, 3.5639000000000504e-05, 3.5804999999999865e-05, 3.5554999999999615e-05, 3.5847000000002044e-05, 3.601399999999741e-05, 3.64719999999992e-05, 3.619399999999981e-05, 3.557000000000213e-05, 3.5889000000000754e-05, 3.576399999999716e-05, 3.622199999999895e-05, 3.606999999999916e-05, 3.554199999999952e-05, 3.575000000000106e-05, 3.648599999999877e-05, 3.5624999999997464e-05, 3.573699999999749e-05, 3.6110999999998394e-05, 3.57780000000002e-05, 3.569399999999931e-05, 3.567999999999974e-05, 3.6277000000001225e-05, 3.593100000000293e-05, 3.594399999999956e-05, 3.5874999999997714e-05, 3.5875000000001184e-05, 3.5875000000001184e-05, 3.5611000000001364e-05, 3.6417000000000394e-05, 3.600000000000131e-05, 3.6139000000001004e-05, 3.57780000000002e-05, 3.6110999999998394e-05, 3.60979999999983e-05, 3.602800000000045e-05, 3.6430999999999963e-05, 3.5874999999997714e-05, 3.651400000000138e-05]</msg>
<status status="PASS" starttime="20201030 15:53:32.998" endtime="20201030 15:53:33.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.993" endtime="20201030 15:53:33.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:33.006" endtime="20201030 15:53:33.025"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.004" endtime="20201030 15:53:33.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.003" endtime="20201030 15:53:33.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.643" endtime="20201030 15:53:33.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:32.643" endtime="20201030 15:53:33.027"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.036" endtime="20201030 15:53:33.052"></status>
</kw>
<msg timestamp="20201030 15:53:33.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.034" endtime="20201030 15:53:33.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.053" endtime="20201030 15:53:33.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.056" endtime="20201030 15:53:33.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.031" endtime="20201030 15:53:33.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.029" endtime="20201030 15:53:33.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.065" endtime="20201030 15:53:33.351"></status>
</kw>
<msg timestamp="20201030 15:53:33.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.064" endtime="20201030 15:53:33.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020395056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.356" endtime="20201030 15:53:33.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.364" endtime="20201030 15:53:33.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.061" endtime="20201030 15:53:33.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.059" endtime="20201030 15:53:33.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:33.371" level="INFO">${RESULT} = [{'diff': 3.700000000000231e-05}, {'diff': 3.6624999999998464e-05}, {'diff': 3.6875000000002184e-05}, {'diff': 3.6860999999999144e-05}, {'diff': 3.7333000000000505e-05}, {'diff': 3.6776999999998256e-0...</msg>
<status status="PASS" starttime="20201030 15:53:33.368" endtime="20201030 15:53:33.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:33.376" level="INFO">${ACCURACY} = {'diff': [3.700000000000231e-05, 3.6624999999998464e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.7333000000000505e-05, 3.6776999999998256e-05, 3.7096999999999825e-05, 3.675000000000206e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:33.372" endtime="20201030 15:53:33.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.381" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 15:53:33.380" endtime="20201030 15:53:33.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.384" level="INFO">VALUE: [3.700000000000231e-05, 3.6624999999998464e-05, 3.6875000000002184e-05, 3.6860999999999144e-05, 3.7333000000000505e-05, 3.6776999999998256e-05, 3.7096999999999825e-05, 3.675000000000206e-05, 3.749999999999934e-05, 3.752800000000195e-05, 3.7125000000002434e-05, 3.6582999999999755e-05, 3.7402999999998354e-05, 3.6931000000000463e-05, 3.699999999999884e-05, 3.749999999999934e-05, 3.72919999999978e-05, 3.748599999999977e-05, 3.670899999999935e-05, 3.707000000000016e-05, 3.663799999999856e-05, 3.67780000000012e-05, 3.751399999999891e-05, 3.743000000000149e-05, 3.6624999999998464e-05, 3.734800000000302e-05, 3.7083000000000255e-05, 3.676400000000163e-05, 3.74720000000002e-05, 3.7083000000000255e-05, 3.6790999999997825e-05, 3.748599999999977e-05, 3.7041000000001545e-05, 3.7111000000002864e-05, 3.7124999999998964e-05, 3.6681000000000213e-05, 3.6681000000000213e-05, 3.729200000000127e-05, 3.702799999999798e-05, 3.680600000000034e-05, 3.6917000000000894e-05, 3.694500000000003e-05, 3.724999999999909e-05, 3.7347000000000075e-05, 3.6875000000002184e-05, 3.698700000000221e-05, 3.65979999999988e-05, 3.7055000000001115e-05, 3.74590000000001e-05, 3.718000000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:53:33.382" endtime="20201030 15:53:33.384"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.377" endtime="20201030 15:53:33.385"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:33.389" endtime="20201030 15:53:33.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.387" endtime="20201030 15:53:33.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.386" endtime="20201030 15:53:33.409"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.028" endtime="20201030 15:53:33.410"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.027" endtime="20201030 15:53:33.410"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.419" endtime="20201030 15:53:33.435"></status>
</kw>
<msg timestamp="20201030 15:53:33.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.417" endtime="20201030 15:53:33.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.438" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.436" endtime="20201030 15:53:33.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.439" endtime="20201030 15:53:33.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.414" endtime="20201030 15:53:33.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.412" endtime="20201030 15:53:33.442"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.449" endtime="20201030 15:53:33.737"></status>
</kw>
<msg timestamp="20201030 15:53:33.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.447" endtime="20201030 15:53:33.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.749" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020094639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.742" endtime="20201030 15:53:33.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.750" endtime="20201030 15:53:33.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.444" endtime="20201030 15:53:33.752"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.442" endtime="20201030 15:53:33.753"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:33.757" level="INFO">${RESULT} = [{'diff': 3.776399999999916e-05}, {'diff': 3.772200000000045e-05}, {'diff': 3.782000000000091e-05}, {'diff': 3.834799999999708e-05}, {'diff': 3.799999999999984e-05}, {'diff': 3.826399999999966e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:33.754" endtime="20201030 15:53:33.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:33.761" level="INFO">${ACCURACY} = {'diff': [3.776399999999916e-05, 3.772200000000045e-05, 3.782000000000091e-05, 3.834799999999708e-05, 3.799999999999984e-05, 3.826399999999966e-05, 3.817999999999877e-05, 3.830599999999837e-05, 3.7943...</msg>
<status status="PASS" starttime="20201030 15:53:33.758" endtime="20201030 15:53:33.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.766" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 15:53:33.765" endtime="20201030 15:53:33.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.769" level="INFO">VALUE: [3.776399999999916e-05, 3.772200000000045e-05, 3.782000000000091e-05, 3.834799999999708e-05, 3.799999999999984e-05, 3.826399999999966e-05, 3.817999999999877e-05, 3.830599999999837e-05, 3.794399999999809e-05, 3.792999999999852e-05, 3.798600000000027e-05, 3.801400000000288e-05, 3.8054999999998645e-05, 3.7624999999999464e-05, 3.8417000000002394e-05, 3.8124999999999964e-05, 3.8110999999996925e-05, 3.795799999999766e-05, 3.8055000000002115e-05, 3.8388999999999784e-05, 3.772200000000045e-05, 3.84720000000012e-05, 3.773600000000002e-05, 3.8346999999997605e-05, 3.799999999999984e-05, 3.7888999999999284e-05, 3.770900000000035e-05, 3.832000000000141e-05, 3.7791000000002295e-05, 3.769399999999784e-05, 3.8083000000001255e-05, 3.76659999999987e-05, 3.7638999999999034e-05, 3.772200000000045e-05, 3.7847000000000575e-05, 3.7889000000002754e-05, 3.81659999999992e-05, 3.794399999999809e-05, 3.8305000000002365e-05, 3.777799999999873e-05, 3.8166999999998674e-05, 3.7681000000001214e-05, 3.795800000000113e-05, 3.799999999999984e-05, 3.8333000000001505e-05, 3.8069000000001685e-05, 3.7666999999998174e-05, 3.840199999999988e-05, 3.847300000000067e-05, 3.772299999999992e-05]</msg>
<status status="PASS" starttime="20201030 15:53:33.767" endtime="20201030 15:53:33.770"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.762" endtime="20201030 15:53:33.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:33.774" endtime="20201030 15:53:33.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.772" endtime="20201030 15:53:33.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.771" endtime="20201030 15:53:33.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.411" endtime="20201030 15:53:33.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.410" endtime="20201030 15:53:33.795"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.804" endtime="20201030 15:53:33.822"></status>
</kw>
<msg timestamp="20201030 15:53:33.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.802" endtime="20201030 15:53:33.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:33.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:33.823" endtime="20201030 15:53:33.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.826" endtime="20201030 15:53:33.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.800" endtime="20201030 15:53:33.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.797" endtime="20201030 15:53:33.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:33.835" endtime="20201030 15:53:34.120"></status>
</kw>
<msg timestamp="20201030 15:53:34.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:33.834" endtime="20201030 15:53:34.123"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020924264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020963375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.124" endtime="20201030 15:53:34.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.133" endtime="20201030 15:53:34.134"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.831" endtime="20201030 15:53:34.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.829" endtime="20201030 15:53:34.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.140" level="INFO">${RESULT} = [{'diff': 3.9110999999997925e-05}, {'diff': 3.926400000000066e-05}, {'diff': 3.9416999999999924e-05}, {'diff': 3.9097000000001825e-05}, {'diff': 3.908399999999826e-05}, {'diff': 3.952800000000048e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:34.136" endtime="20201030 15:53:34.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:34.144" level="INFO">${ACCURACY} = {'diff': [3.9110999999997925e-05, 3.926400000000066e-05, 3.9416999999999924e-05, 3.9097000000001825e-05, 3.908399999999826e-05, 3.952800000000048e-05, 3.8652999999999604e-05, 3.9209000000001853e-05, 3...</msg>
<status status="PASS" starttime="20201030 15:53:34.141" endtime="20201030 15:53:34.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.149" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 15:53:34.148" endtime="20201030 15:53:34.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.151" level="INFO">VALUE: [3.9110999999997925e-05, 3.926400000000066e-05, 3.9416999999999924e-05, 3.9097000000001825e-05, 3.908399999999826e-05, 3.952800000000048e-05, 3.8652999999999604e-05, 3.9209000000001853e-05, 3.8889000000000284e-05, 3.873700000000049e-05, 3.87919999999993e-05, 3.8833000000002005e-05, 3.9319000000002935e-05, 3.9403000000000354e-05, 3.9125000000000965e-05, 3.895800000000213e-05, 3.8611000000000895e-05, 3.9388999999997315e-05, 3.89720000000017e-05, 3.870799999999841e-05, 3.9347000000002075e-05, 3.8625000000000465e-05, 3.857000000000166e-05, 3.8639000000000034e-05, 3.87919999999993e-05, 3.8639000000000034e-05, 3.87919999999993e-05, 3.897300000000117e-05, 3.8902999999999854e-05, 3.8708999999997884e-05, 3.87919999999993e-05, 3.8611000000000895e-05, 3.9097000000001825e-05, 3.9347000000002075e-05, 3.923600000000152e-05, 3.9068999999999215e-05, 3.901400000000041e-05, 3.9111000000001395e-05, 3.8804999999999396e-05, 3.941600000000045e-05, 3.8652999999999604e-05, 3.877799999999973e-05, 3.8639000000000034e-05, 3.9346999999998605e-05, 3.904199999999955e-05, 3.8846999999998105e-05, 3.926399999999719e-05, 3.8596999999997855e-05, 3.92919999999998e-05, 3.9222999999997954e-05]</msg>
<status status="PASS" starttime="20201030 15:53:34.150" endtime="20201030 15:53:34.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.145" endtime="20201030 15:53:34.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.157" endtime="20201030 15:53:34.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.156" endtime="20201030 15:53:34.177"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.154" endtime="20201030 15:53:34.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.796" endtime="20201030 15:53:34.178"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:33.795" endtime="20201030 15:53:34.178"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.187" endtime="20201030 15:53:34.204"></status>
</kw>
<msg timestamp="20201030 15:53:34.204" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.186" endtime="20201030 15:53:34.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.205" endtime="20201030 15:53:34.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.208" endtime="20201030 15:53:34.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.183" endtime="20201030 15:53:34.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.181" endtime="20201030 15:53:34.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.218" endtime="20201030 15:53:34.504"></status>
</kw>
<msg timestamp="20201030 15:53:34.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.216" endtime="20201030 15:53:34.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020883764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020923833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.508" endtime="20201030 15:53:34.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.517" endtime="20201030 15:53:34.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.213" endtime="20201030 15:53:34.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.211" endtime="20201030 15:53:34.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.523" level="INFO">${RESULT} = [{'diff': 4.0069000000000216e-05}, {'diff': 3.9582999999999285e-05}, {'diff': 4.050000000000234e-05}, {'diff': 4.0417000000000924e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.0333000000000035e-0...</msg>
<status status="PASS" starttime="20201030 15:53:34.520" endtime="20201030 15:53:34.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:34.529" level="INFO">${ACCURACY} = {'diff': [4.0069000000000216e-05, 3.9582999999999285e-05, 4.050000000000234e-05, 4.0417000000000924e-05, 4.0167000000000674e-05, 4.0333000000000035e-05, 3.9652999999997135e-05, 3.976399999999769e-05, ...</msg>
<status status="PASS" starttime="20201030 15:53:34.524" endtime="20201030 15:53:34.529"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.533" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 15:53:34.532" endtime="20201030 15:53:34.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.536" level="INFO">VALUE: [4.0069000000000216e-05, 3.9582999999999285e-05, 4.050000000000234e-05, 4.0417000000000924e-05, 4.0167000000000674e-05, 4.0333000000000035e-05, 3.9652999999997135e-05, 3.976399999999769e-05, 3.972200000000245e-05, 4.023599999999905e-05, 3.9625000000001465e-05, 3.951400000000091e-05, 4.0472999999999204e-05, 4.0459000000003104e-05, 4.034799999999908e-05, 4.0124999999998495e-05, 3.9959000000002604e-05, 3.9667000000000174e-05, 4.0263000000002186e-05, 4.0526999999998536e-05, 4.0305000000000896e-05, 3.9541000000000576e-05, 4.0138999999998065e-05, 3.990199999999791e-05, 3.977800000000073e-05, 3.9846999999999105e-05, 4.051399999999844e-05, 4.001399999999794e-05, 3.9805000000000396e-05, 4.0403000000001354e-05, 4.0138999999998065e-05, 4.0110999999998925e-05, 3.958399999999876e-05, 3.9944999999999564e-05, 4.049999999999887e-05, 3.984799999999858e-05, 4.033399999999951e-05, 4.011200000000187e-05, 4.031999999999994e-05, 3.9875000000001715e-05, 4.0417000000000924e-05, 4.047199999999973e-05, 4.0262999999998716e-05, 3.997199999999923e-05, 4.0082999999999785e-05, 4.002799999999751e-05, 4.002800000000098e-05, 3.9875000000001715e-05, 4.022199999999948e-05, 4.0319000000000466e-05]</msg>
<status status="PASS" starttime="20201030 15:53:34.534" endtime="20201030 15:53:34.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.530" endtime="20201030 15:53:34.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.541" endtime="20201030 15:53:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.540" endtime="20201030 15:53:34.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.538" endtime="20201030 15:53:34.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.179" endtime="20201030 15:53:34.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.179" endtime="20201030 15:53:34.562"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.571" endtime="20201030 15:53:34.588"></status>
</kw>
<msg timestamp="20201030 15:53:34.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.570" endtime="20201030 15:53:34.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.590" endtime="20201030 15:53:34.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.592" endtime="20201030 15:53:34.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.567" endtime="20201030 15:53:34.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.565" endtime="20201030 15:53:34.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.602" endtime="20201030 15:53:34.889"></status>
</kw>
<msg timestamp="20201030 15:53:34.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020632764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.600" endtime="20201030 15:53:34.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020591903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020632764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.893" endtime="20201030 15:53:34.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.902" endtime="20201030 15:53:34.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.597" endtime="20201030 15:53:34.904"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.595" endtime="20201030 15:53:34.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:34.909" level="INFO">${RESULT} = [{'diff': 4.0860999999999675e-05}, {'diff': 4.082000000000044e-05}, {'diff': 4.105599999999765e-05}, {'diff': 4.099999999999937e-05}, {'diff': 4.127799999999876e-05}, {'diff': 4.059799999999933e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:34.905" endtime="20201030 15:53:34.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:34.913" level="INFO">${ACCURACY} = {'diff': [4.0860999999999675e-05, 4.082000000000044e-05, 4.105599999999765e-05, 4.099999999999937e-05, 4.127799999999876e-05, 4.059799999999933e-05, 4.0945000000000564e-05, 4.122200000000048e-05, 4.14...</msg>
<status status="PASS" starttime="20201030 15:53:34.910" endtime="20201030 15:53:34.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.918" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 15:53:34.917" endtime="20201030 15:53:34.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.920" level="INFO">VALUE: [4.0860999999999675e-05, 4.082000000000044e-05, 4.105599999999765e-05, 4.099999999999937e-05, 4.127799999999876e-05, 4.059799999999933e-05, 4.0945000000000564e-05, 4.122200000000048e-05, 4.141600000000245e-05, 4.119399999999787e-05, 4.145799999999769e-05, 4.147200000000073e-05, 4.145800000000116e-05, 4.0569000000000716e-05, 4.095799999999719e-05, 4.1083000000000786e-05, 4.0638999999998565e-05, 4.070800000000041e-05, 4.1124999999999495e-05, 4.120800000000091e-05, 4.131999999999747e-05, 4.123600000000005e-05, 4.054199999999758e-05, 4.1458999999997165e-05, 4.133400000000051e-05, 4.0695000000000314e-05, 4.102799999999851e-05, 4.09859999999998e-05, 4.149999999999987e-05, 4.0819000000000966e-05, 4.1055000000001646e-05, 4.134800000000008e-05, 4.068000000000127e-05, 4.1305000000001896e-05, 4.068000000000127e-05, 4.099999999999937e-05, 4.1138999999999065e-05, 4.0611000000002895e-05, 4.0639000000002035e-05, 4.077799999999826e-05, 4.1181000000001244e-05, 4.097200000000023e-05, 4.1181000000001244e-05, 4.055599999999715e-05, 4.0680999999997275e-05, 4.0847000000000105e-05, 4.09859999999998e-05, 4.0708999999999884e-05, 4.05980000000028e-05, 4.1139000000002535e-05]</msg>
<status status="PASS" starttime="20201030 15:53:34.919" endtime="20201030 15:53:34.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.914" endtime="20201030 15:53:34.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:34.926" endtime="20201030 15:53:34.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.924" endtime="20201030 15:53:34.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.923" endtime="20201030 15:53:34.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.563" endtime="20201030 15:53:34.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.562" endtime="20201030 15:53:34.947"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.956" endtime="20201030 15:53:34.973"></status>
</kw>
<msg timestamp="20201030 15:53:34.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.954" endtime="20201030 15:53:34.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:34.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:34.975" endtime="20201030 15:53:34.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.977" endtime="20201030 15:53:34.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.951" endtime="20201030 15:53:34.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.949" endtime="20201030 15:53:34.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:34.987" endtime="20201030 15:53:35.273"></status>
</kw>
<msg timestamp="20201030 15:53:35.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:34.985" endtime="20201030 15:53:35.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021308653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021351194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.278" endtime="20201030 15:53:35.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.286" endtime="20201030 15:53:35.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.982" endtime="20201030 15:53:35.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.981" endtime="20201030 15:53:35.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.293" level="INFO">${RESULT} = [{'diff': 4.2541000000000107e-05}, {'diff': 4.177799999999926e-05}, {'diff': 4.1666999999998705e-05}, {'diff': 4.19860000000008e-05}, {'diff': 4.254099999999664e-05}, {'diff': 4.241599999999998e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:35.290" endtime="20201030 15:53:35.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:35.297" level="INFO">${ACCURACY} = {'diff': [4.2541000000000107e-05, 4.177799999999926e-05, 4.1666999999998705e-05, 4.19860000000008e-05, 4.254099999999664e-05, 4.241599999999998e-05, 4.192999999999905e-05, 4.2277000000000287e-05, 4.17...</msg>
<status status="PASS" starttime="20201030 15:53:35.294" endtime="20201030 15:53:35.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.302" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 15:53:35.301" endtime="20201030 15:53:35.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.305" level="INFO">VALUE: [4.2541000000000107e-05, 4.177799999999926e-05, 4.1666999999998705e-05, 4.19860000000008e-05, 4.254099999999664e-05, 4.241599999999998e-05, 4.192999999999905e-05, 4.2277000000000287e-05, 4.17920000000023e-05, 4.1846999999997636e-05, 4.242999999999955e-05, 4.250000000000087e-05, 4.1973000000000704e-05, 4.170799999999794e-05, 4.2402999999999885e-05, 4.2389000000000315e-05, 4.194399999999862e-05, 4.2402999999999885e-05, 4.248599999999783e-05, 4.197200000000123e-05, 4.2223000000000954e-05, 4.2473000000001204e-05, 4.176300000000022e-05, 4.213800000000059e-05, 4.2083000000001786e-05, 4.2277000000000287e-05, 4.247200000000173e-05, 4.24860000000013e-05, 4.2554999999999676e-05, 4.2167000000002675e-05, 4.2055000000002646e-05, 4.225000000000062e-05, 4.1652999999999135e-05, 4.2180999999998775e-05, 4.1902999999999385e-05, 4.220799999999844e-05, 4.175000000000012e-05, 4.2360999999997706e-05, 4.183399999999754e-05, 4.1695000000001314e-05, 4.1694999999997845e-05, 4.1624999999999995e-05, 4.157000000000119e-05, 4.1916999999998955e-05, 4.169399999999837e-05, 4.2096999999997886e-05, 4.176399999999969e-05, 4.251400000000044e-05, 4.1833000000001536e-05, 4.1611000000000425e-05]</msg>
<status status="PASS" starttime="20201030 15:53:35.303" endtime="20201030 15:53:35.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.298" endtime="20201030 15:53:35.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.311" endtime="20201030 15:53:35.330"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.309" endtime="20201030 15:53:35.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.308" endtime="20201030 15:53:35.331"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.948" endtime="20201030 15:53:35.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:34.947" endtime="20201030 15:53:35.332"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.341" endtime="20201030 15:53:35.358"></status>
</kw>
<msg timestamp="20201030 15:53:35.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.339" endtime="20201030 15:53:35.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.360" endtime="20201030 15:53:35.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.362" endtime="20201030 15:53:35.364"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.336" endtime="20201030 15:53:35.365"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.334" endtime="20201030 15:53:35.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.372" endtime="20201030 15:53:35.658"></status>
</kw>
<msg timestamp="20201030 15:53:35.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.370" endtime="20201030 15:53:35.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020072444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020115556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.663" endtime="20201030 15:53:35.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.671" endtime="20201030 15:53:35.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.368" endtime="20201030 15:53:35.673"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.366" endtime="20201030 15:53:35.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:35.678" level="INFO">${RESULT} = [{'diff': 4.31120000000014e-05}, {'diff': 4.2833000000002536e-05}, {'diff': 4.297199999999876e-05}, {'diff': 4.3082999999999316e-05}, {'diff': 4.327800000000076e-05}, {'diff': 4.280600000000287e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:35.675" endtime="20201030 15:53:35.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:35.683" level="INFO">${ACCURACY} = {'diff': [4.31120000000014e-05, 4.2833000000002536e-05, 4.297199999999876e-05, 4.3082999999999316e-05, 4.327800000000076e-05, 4.280600000000287e-05, 4.298599999999833e-05, 4.329200000000033e-05, 4.284...</msg>
<status status="PASS" starttime="20201030 15:53:35.679" endtime="20201030 15:53:35.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.688" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 15:53:35.687" endtime="20201030 15:53:35.688"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.691" level="INFO">VALUE: [4.31120000000014e-05, 4.2833000000002536e-05, 4.297199999999876e-05, 4.3082999999999316e-05, 4.327800000000076e-05, 4.280600000000287e-05, 4.298599999999833e-05, 4.329200000000033e-05, 4.2846999999998636e-05, 4.2610999999997956e-05, 4.276400000000069e-05, 4.3444999999999595e-05, 4.3012999999998e-05, 4.2875000000001245e-05, 4.301300000000147e-05, 4.343000000000055e-05, 4.2568999999999246e-05, 4.2903000000000385e-05, 4.293000000000005e-05, 4.323599999999858e-05, 4.3153000000000635e-05, 4.322199999999901e-05, 4.3138999999997596e-05, 4.3333000000003036e-05, 4.279199999999983e-05, 4.2610999999997956e-05, 4.275000000000112e-05, 4.320799999999944e-05, 4.3431000000000025e-05, 4.3389000000001315e-05, 4.2874999999997776e-05, 4.29999999999979e-05, 4.284800000000158e-05, 4.34999999999984e-05, 4.3431000000000025e-05, 4.315200000000116e-05, 4.3541000000001107e-05, 4.327799999999729e-05, 4.272200000000198e-05, 4.2625000000000995e-05, 4.3360999999998706e-05, 4.3167000000000205e-05, 4.3360999999998706e-05, 4.2860999999998206e-05, 4.3318999999999996e-05, 4.3194999999999345e-05, 4.323599999999858e-05, 4.3444999999999595e-05, 4.3374999999998276e-05, 4.2639000000000565e-05]</msg>
<status status="PASS" starttime="20201030 15:53:35.689" endtime="20201030 15:53:35.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.684" endtime="20201030 15:53:35.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:35.696" endtime="20201030 15:53:35.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.694" endtime="20201030 15:53:35.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.693" endtime="20201030 15:53:35.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.333" endtime="20201030 15:53:35.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.332" endtime="20201030 15:53:35.717"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.726" endtime="20201030 15:53:35.744"></status>
</kw>
<msg timestamp="20201030 15:53:35.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.724" endtime="20201030 15:53:35.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:35.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:35.745" endtime="20201030 15:53:35.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.748" endtime="20201030 15:53:35.749"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.722" endtime="20201030 15:53:35.750"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.719" endtime="20201030 15:53:35.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:35.757" endtime="20201030 15:53:36.044"></status>
</kw>
<msg timestamp="20201030 15:53:36.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:35.756" endtime="20201030 15:53:36.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021108556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.049" endtime="20201030 15:53:36.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.057" endtime="20201030 15:53:36.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.753" endtime="20201030 15:53:36.059"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.751" endtime="20201030 15:53:36.060"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.064" level="INFO">${RESULT} = [{'diff': 4.39999999999989e-05}, {'diff': 4.36800000000008e-05}, {'diff': 4.3819000000000496e-05}, {'diff': 4.372199999999951e-05}, {'diff': 4.391599999999801e-05}, {'diff': 4.393000000000105e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:36.060" endtime="20201030 15:53:36.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:36.068" level="INFO">${ACCURACY} = {'diff': [4.39999999999989e-05, 4.36800000000008e-05, 4.3819000000000496e-05, 4.372199999999951e-05, 4.391599999999801e-05, 4.393000000000105e-05, 4.3652999999997666e-05, 4.3902999999997916e-05, 4.412...</msg>
<status status="PASS" starttime="20201030 15:53:36.065" endtime="20201030 15:53:36.069"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.073" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 15:53:36.072" endtime="20201030 15:53:36.073"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.075" level="INFO">VALUE: [4.39999999999989e-05, 4.36800000000008e-05, 4.3819000000000496e-05, 4.372199999999951e-05, 4.391599999999801e-05, 4.393000000000105e-05, 4.3652999999997666e-05, 4.3902999999997916e-05, 4.4124999999999026e-05, 4.4055000000001177e-05, 4.4403000000001885e-05, 4.376300000000222e-05, 4.3596999999999386e-05, 4.383400000000301e-05, 4.452799999999854e-05, 4.426399999999872e-05, 4.429200000000133e-05, 4.4124999999999026e-05, 4.4569000000001247e-05, 4.420800000000044e-05, 4.3722999999998985e-05, 4.402699999999857e-05, 4.373599999999908e-05, 4.398599999999933e-05, 4.377800000000126e-05, 4.4319000000000996e-05, 4.373599999999908e-05, 4.3666999999997236e-05, 4.4402999999998416e-05, 4.4181000000000775e-05, 4.3902999999997916e-05, 4.4083000000000316e-05, 4.429200000000133e-05, 4.426399999999872e-05, 4.4083000000000316e-05, 4.427800000000176e-05, 4.4347000000000136e-05, 4.386199999999868e-05, 4.4416999999997986e-05, 4.3902999999997916e-05, 4.39999999999989e-05, 4.4195000000000345e-05, 4.3889000000001815e-05, 4.41800000000013e-05, 4.3639000000001565e-05, 4.4124999999999026e-05, 4.455600000000115e-05, 4.424999999999915e-05, 4.4124999999999026e-05, 4.4402999999998416e-05]</msg>
<status status="PASS" starttime="20201030 15:53:36.074" endtime="20201030 15:53:36.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.069" endtime="20201030 15:53:36.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.081" endtime="20201030 15:53:36.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.079" endtime="20201030 15:53:36.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.078" endtime="20201030 15:53:36.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.718" endtime="20201030 15:53:36.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:35.717" endtime="20201030 15:53:36.102"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.111" endtime="20201030 15:53:36.129"></status>
</kw>
<msg timestamp="20201030 15:53:36.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.109" endtime="20201030 15:53:36.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.130" endtime="20201030 15:53:36.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.133" endtime="20201030 15:53:36.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.106" endtime="20201030 15:53:36.135"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.104" endtime="20201030 15:53:36.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.143" endtime="20201030 15:53:36.429"></status>
</kw>
<msg timestamp="20201030 15:53:36.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.141" endtime="20201030 15:53:36.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021672181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021717028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.433" endtime="20201030 15:53:36.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.441" endtime="20201030 15:53:36.443"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.138" endtime="20201030 15:53:36.444"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.136" endtime="20201030 15:53:36.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.448" level="INFO">${RESULT} = [{'diff': 4.4847000000000636e-05}, {'diff': 4.520800000000144e-05}, {'diff': 4.530599999999843e-05}, {'diff': 4.554199999999911e-05}, {'diff': 4.5430999999998556e-05}, {'diff': 4.4555000000001677e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:36.445" endtime="20201030 15:53:36.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:36.453" level="INFO">${ACCURACY} = {'diff': [4.4847000000000636e-05, 4.520800000000144e-05, 4.530599999999843e-05, 4.554199999999911e-05, 4.5430999999998556e-05, 4.4555000000001677e-05, 4.491600000000248e-05, 4.476399999999922e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 15:53:36.449" endtime="20201030 15:53:36.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.457" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 15:53:36.456" endtime="20201030 15:53:36.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.460" level="INFO">VALUE: [4.4847000000000636e-05, 4.520800000000144e-05, 4.530599999999843e-05, 4.554199999999911e-05, 4.5430999999998556e-05, 4.4555000000001677e-05, 4.491600000000248e-05, 4.476399999999922e-05, 4.479099999999889e-05, 4.5083000000001316e-05, 4.5375000000000276e-05, 4.504199999999861e-05, 4.46800000000018e-05, 4.507000000000122e-05, 4.5402999999999416e-05, 4.4888999999999346e-05, 4.552700000000007e-05, 4.4861000000000206e-05, 4.5361000000000706e-05, 4.4709000000000415e-05, 4.4652999999998666e-05, 4.554199999999911e-05, 4.49999999999999e-05, 4.48060000000014e-05, 4.542999999999908e-05, 4.477700000000279e-05, 4.469400000000137e-05, 4.491600000000248e-05, 4.498600000000033e-05, 4.529099999999939e-05, 4.498600000000033e-05, 4.5152999999999166e-05, 4.4680999999997806e-05, 4.455600000000115e-05, 4.469400000000137e-05, 4.473600000000008e-05, 4.469400000000137e-05, 4.507000000000122e-05, 4.4930999999998056e-05, 4.533400000000104e-05, 4.508400000000079e-05, 4.454200000000158e-05, 4.4666999999998236e-05, 4.4610999999999956e-05, 4.465199999999919e-05, 4.504099999999914e-05, 4.5097000000000886e-05, 4.522200000000101e-05, 4.544400000000212e-05, 4.5347000000001136e-05]</msg>
<status status="PASS" starttime="20201030 15:53:36.458" endtime="20201030 15:53:36.462"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.454" endtime="20201030 15:53:36.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.466" endtime="20201030 15:53:36.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.464" endtime="20201030 15:53:36.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.463" endtime="20201030 15:53:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.103" endtime="20201030 15:53:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.102" endtime="20201030 15:53:36.487"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.496" endtime="20201030 15:53:36.513"></status>
</kw>
<msg timestamp="20201030 15:53:36.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.495" endtime="20201030 15:53:36.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.514" endtime="20201030 15:53:36.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.517" endtime="20201030 15:53:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.492" endtime="20201030 15:53:36.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.490" endtime="20201030 15:53:36.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.527" endtime="20201030 15:53:36.812"></status>
</kw>
<msg timestamp="20201030 15:53:36.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.525" endtime="20201030 15:53:36.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020567167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.816" endtime="20201030 15:53:36.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.824" endtime="20201030 15:53:36.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.522" endtime="20201030 15:53:36.827"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.520" endtime="20201030 15:53:36.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:36.831" level="INFO">${RESULT} = [{'diff': 4.583400000000154e-05}, {'diff': 4.605599999999918e-05}, {'diff': 4.5611000000000956e-05}, {'diff': 4.608299999999885e-05}, {'diff': 4.5597000000001386e-05}, {'diff': 4.591600000000001e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:36.828" endtime="20201030 15:53:36.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:36.837" level="INFO">${ACCURACY} = {'diff': [4.583400000000154e-05, 4.605599999999918e-05, 4.5611000000000956e-05, 4.608299999999885e-05, 4.5597000000001386e-05, 4.591600000000001e-05, 4.630499999999996e-05, 4.598599999999786e-05, 4.57...</msg>
<status status="PASS" starttime="20201030 15:53:36.832" endtime="20201030 15:53:36.837"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.841" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 15:53:36.840" endtime="20201030 15:53:36.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.844" level="INFO">VALUE: [4.583400000000154e-05, 4.605599999999918e-05, 4.5611000000000956e-05, 4.608299999999885e-05, 4.5597000000001386e-05, 4.591600000000001e-05, 4.630499999999996e-05, 4.598599999999786e-05, 4.570800000000194e-05, 4.570800000000194e-05, 4.61939999999994e-05, 4.586099999999774e-05, 4.6416999999999986e-05, 4.56939999999989e-05, 4.5889000000000346e-05, 4.6194999999998876e-05, 4.5653000000003136e-05, 4.598600000000133e-05, 4.5639000000000096e-05, 4.647199999999879e-05, 4.606999999999875e-05, 4.5889000000000346e-05, 4.6416999999999986e-05, 4.570799999999847e-05, 4.605499999999971e-05, 4.648599999999836e-05, 4.597200000000176e-05, 4.602800000000004e-05, 4.576400000000022e-05, 4.6153000000000166e-05, 4.643000000000008e-05, 4.620799999999897e-05, 4.594399999999915e-05, 4.6083000000002317e-05, 4.577799999999979e-05, 4.6430999999999556e-05, 4.6153000000000166e-05, 4.5875000000000776e-05, 4.575000000000065e-05, 4.6361000000001706e-05, 4.5889000000000346e-05, 4.558399999999782e-05, 4.634800000000161e-05, 4.611199999999746e-05, 4.616600000000026e-05, 4.6111000000001456e-05, 4.6139000000000596e-05, 4.605499999999971e-05, 4.56939999999989e-05, 4.6153000000000166e-05]</msg>
<status status="PASS" starttime="20201030 15:53:36.842" endtime="20201030 15:53:36.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.838" endtime="20201030 15:53:36.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:36.849" endtime="20201030 15:53:36.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.848" endtime="20201030 15:53:36.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.846" endtime="20201030 15:53:36.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.488" endtime="20201030 15:53:36.870"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.487" endtime="20201030 15:53:36.870"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.879" endtime="20201030 15:53:36.896"></status>
</kw>
<msg timestamp="20201030 15:53:36.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.878" endtime="20201030 15:53:36.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:36.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:36.897" endtime="20201030 15:53:36.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.900" endtime="20201030 15:53:36.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.875" endtime="20201030 15:53:36.902"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.873" endtime="20201030 15:53:36.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:36.909" endtime="20201030 15:53:37.199"></status>
</kw>
<msg timestamp="20201030 15:53:37.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:36.908" endtime="20201030 15:53:37.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020211347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020258708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:37.204" endtime="20201030 15:53:37.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.212" endtime="20201030 15:53:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.905" endtime="20201030 15:53:37.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.903" endtime="20201030 15:53:37.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:37.219" level="INFO">${RESULT} = [{'diff': 4.736099999999924e-05}, {'diff': 4.709699999999942e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.727699999999835e-05}, {'diff': 4.740200000000194e-05}, {'diff': 4.716600000000126e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:37.216" endtime="20201030 15:53:37.219"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:37.223" level="INFO">${ACCURACY} = {'diff': [4.736099999999924e-05, 4.709699999999942e-05, 4.727800000000129e-05, 4.727699999999835e-05, 4.740200000000194e-05, 4.716600000000126e-05, 4.681900000000003e-05, 4.737499999999881e-05, 4.6693...</msg>
<status status="PASS" starttime="20201030 15:53:37.220" endtime="20201030 15:53:37.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.228" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 15:53:37.227" endtime="20201030 15:53:37.228"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.230" level="INFO">VALUE: [4.736099999999924e-05, 4.709699999999942e-05, 4.727800000000129e-05, 4.727699999999835e-05, 4.740200000000194e-05, 4.716600000000126e-05, 4.681900000000003e-05, 4.737499999999881e-05, 4.66939999999999e-05, 4.747199999999979e-05, 4.686099999999874e-05, 4.688899999999788e-05, 4.6917000000000486e-05, 4.655599999999968e-05, 4.711099999999899e-05, 4.672200000000251e-05, 4.6958999999999196e-05, 4.706999999999975e-05, 4.727699999999835e-05, 4.658400000000229e-05, 4.7375000000002276e-05, 4.731900000000053e-05, 4.66939999999999e-05, 4.726300000000225e-05, 4.73330000000001e-05, 4.73330000000001e-05, 4.713899999999813e-05, 4.6639000000001096e-05, 4.711099999999899e-05, 4.742999999999761e-05, 4.704200000000061e-05, 4.6625000000001526e-05, 4.670800000000294e-05, 4.680599999999993e-05, 4.676400000000122e-05, 4.720799999999997e-05, 4.748599999999936e-05, 4.691600000000101e-05, 4.666699999999677e-05, 4.731900000000053e-05, 4.681900000000003e-05, 4.6889000000001346e-05, 4.717999999999736e-05, 4.656899999999978e-05, 4.655500000000021e-05, 4.715200000000169e-05, 4.738899999999838e-05, 4.6611000000001956e-05, 4.6903000000000916e-05, 4.730600000000043e-05]</msg>
<status status="PASS" starttime="20201030 15:53:37.229" endtime="20201030 15:53:37.238"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.224" endtime="20201030 15:53:37.239"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:37.245" endtime="20201030 15:53:37.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.243" endtime="20201030 15:53:37.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.241" endtime="20201030 15:53:37.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.871" endtime="20201030 15:53:37.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:36.870" endtime="20201030 15:53:37.267"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.278" endtime="20201030 15:53:37.296"></status>
</kw>
<msg timestamp="20201030 15:53:37.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.276" endtime="20201030 15:53:37.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.298" endtime="20201030 15:53:37.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.301" endtime="20201030 15:53:37.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.273" endtime="20201030 15:53:37.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.271" endtime="20201030 15:53:37.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.310" endtime="20201030 15:53:37.596"></status>
</kw>
<msg timestamp="20201030 15:53:37.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:37.308" endtime="20201030 15:53:37.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024630194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024677722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:37.600" endtime="20201030 15:53:37.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.609" endtime="20201030 15:53:37.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.306" endtime="20201030 15:53:37.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.304" endtime="20201030 15:53:37.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:37.616" level="INFO">${RESULT} = [{'diff': 4.752799999999807e-05}, {'diff': 4.795800000000072e-05}, {'diff': 4.843000000000208e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.812499999999956e-05}, {'diff': 4.7681000000000806e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:37.612" endtime="20201030 15:53:37.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:37.620" level="INFO">${ACCURACY} = {'diff': [4.752799999999807e-05, 4.795800000000072e-05, 4.843000000000208e-05, 4.755500000000121e-05, 4.812499999999956e-05, 4.7681000000000806e-05, 4.812499999999956e-05, 4.7681000000000806e-05, 4.79...</msg>
<status status="PASS" starttime="20201030 15:53:37.617" endtime="20201030 15:53:37.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.625" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 15:53:37.624" endtime="20201030 15:53:37.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.627" level="INFO">VALUE: [4.752799999999807e-05, 4.795800000000072e-05, 4.843000000000208e-05, 4.755500000000121e-05, 4.812499999999956e-05, 4.7681000000000806e-05, 4.812499999999956e-05, 4.7681000000000806e-05, 4.797200000000029e-05, 4.809700000000042e-05, 4.762499999999906e-05, 4.798599999999986e-05, 4.8236999999999586e-05, 4.779200000000136e-05, 4.81529999999987e-05, 4.805500000000171e-05, 4.849999999999993e-05, 4.759699999999992e-05, 4.802799999999857e-05, 4.812499999999956e-05, 4.787499999999931e-05, 4.802799999999857e-05, 4.849999999999993e-05, 4.776399999999875e-05, 4.777800000000179e-05, 4.8139000000002596e-05, 4.784700000000017e-05, 4.7695000000000376e-05, 4.779200000000136e-05, 4.766699999999777e-05, 4.768099999999734e-05, 4.759799999999939e-05, 4.813799999999965e-05, 4.765199999999872e-05, 4.793000000000158e-05, 4.802700000000257e-05, 4.831899999999806e-05, 4.779099999999842e-05, 4.829099999999892e-05, 4.852799999999907e-05, 4.754100000000164e-05, 4.813899999999913e-05, 4.774999999999918e-05, 4.7917000000001486e-05, 4.754199999999764e-05, 4.841699999999852e-05, 4.8208999999996976e-05, 4.840299999999895e-05, 4.8167000000001736e-05, 4.762499999999906e-05]</msg>
<status status="PASS" starttime="20201030 15:53:37.626" endtime="20201030 15:53:37.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.621" endtime="20201030 15:53:37.630"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:37.633" endtime="20201030 15:53:37.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.632" endtime="20201030 15:53:37.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.631" endtime="20201030 15:53:37.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.268" endtime="20201030 15:53:37.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.267" endtime="20201030 15:53:37.654"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.663" endtime="20201030 15:53:37.681"></status>
</kw>
<msg timestamp="20201030 15:53:37.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.662" endtime="20201030 15:53:37.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:37.682" endtime="20201030 15:53:37.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.685" endtime="20201030 15:53:37.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.659" endtime="20201030 15:53:37.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.657" endtime="20201030 15:53:37.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.694" endtime="20201030 15:53:37.981"></status>
</kw>
<msg timestamp="20201030 15:53:37.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:37.693" endtime="20201030 15:53:37.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:37.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02064875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:37.985" endtime="20201030 15:53:37.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:37.994" endtime="20201030 15:53:37.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.690" endtime="20201030 15:53:37.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.688" endtime="20201030 15:53:37.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.001" level="INFO">${RESULT} = [{'diff': 4.912500000000056e-05}, {'diff': 4.940299999999995e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.88330000000016e-05}, {'diff': 4.912500000000056e-05}, {'diff': 4.857000000000125e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:37.997" endtime="20201030 15:53:38.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:38.006" level="INFO">${ACCURACY} = {'diff': [4.912500000000056e-05, 4.940299999999995e-05, 4.952800000000007e-05, 4.88330000000016e-05, 4.912500000000056e-05, 4.857000000000125e-05, 4.952800000000007e-05, 4.9459000000001696e-05, 4.8819...</msg>
<status status="PASS" starttime="20201030 15:53:38.002" endtime="20201030 15:53:38.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.011" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 15:53:38.010" endtime="20201030 15:53:38.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.013" level="INFO">VALUE: [4.912500000000056e-05, 4.940299999999995e-05, 4.952800000000007e-05, 4.88330000000016e-05, 4.912500000000056e-05, 4.857000000000125e-05, 4.952800000000007e-05, 4.9459000000001696e-05, 4.881999999999803e-05, 4.880599999999846e-05, 4.9486999999997366e-05, 4.880599999999846e-05, 4.93330000000021e-05, 4.88880000000004e-05, 4.855499999999874e-05, 4.934700000000167e-05, 4.884700000000117e-05, 4.891599999999954e-05, 4.940299999999995e-05, 4.869399999999843e-05, 4.879199999999889e-05, 4.897199999999782e-05, 4.894499999999816e-05, 4.863899999999963e-05, 4.8931000000002056e-05, 4.883400000000107e-05, 4.9181000000002306e-05, 4.952800000000007e-05, 4.876399999999975e-05, 4.8707999999998e-05, 4.941600000000004e-05, 4.870800000000147e-05, 4.876399999999975e-05, 4.947199999999832e-05, 4.906899999999881e-05, 4.887500000000031e-05, 4.893000000000258e-05, 4.861099999999702e-05, 4.93330000000021e-05, 4.930600000000243e-05, 4.858300000000135e-05, 4.950000000000093e-05, 4.923600000000111e-05, 4.927799999999982e-05, 4.886100000000074e-05, 4.876399999999975e-05, 4.857000000000125e-05, 4.926400000000025e-05, 4.898600000000086e-05, 4.886100000000074e-05]</msg>
<status status="PASS" starttime="20201030 15:53:38.012" endtime="20201030 15:53:38.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.007" endtime="20201030 15:53:38.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.019" endtime="20201030 15:53:38.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.017" endtime="20201030 15:53:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.016" endtime="20201030 15:53:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.655" endtime="20201030 15:53:38.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:37.655" endtime="20201030 15:53:38.040"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.049" endtime="20201030 15:53:38.065"></status>
</kw>
<msg timestamp="20201030 15:53:38.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.047" endtime="20201030 15:53:38.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.067" endtime="20201030 15:53:38.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.070" endtime="20201030 15:53:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.044" endtime="20201030 15:53:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.042" endtime="20201030 15:53:38.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.079" endtime="20201030 15:53:38.366"></status>
</kw>
<msg timestamp="20201030 15:53:38.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.078" endtime="20201030 15:53:38.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.370" endtime="20201030 15:53:38.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.379" endtime="20201030 15:53:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.075" endtime="20201030 15:53:38.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.073" endtime="20201030 15:53:38.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.386" level="INFO">${RESULT} = [{'diff': 5.023600000000211e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.9695000000002376e-05}, {'diff': 4.991700000000002e-05}, {'diff': 4.9707999999999e-05}, {'diff': 5.027700000000135e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:38.382" endtime="20201030 15:53:38.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:38.390" level="INFO">${ACCURACY} = {'diff': [5.023600000000211e-05, 4.980599999999946e-05, 4.9695000000002376e-05, 4.991700000000002e-05, 4.9707999999999e-05, 5.027700000000135e-05, 4.961100000000149e-05, 5.006899999999981e-05, 4.99300...</msg>
<status status="PASS" starttime="20201030 15:53:38.387" endtime="20201030 15:53:38.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.395" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 15:53:38.394" endtime="20201030 15:53:38.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.397" level="INFO">VALUE: [5.023600000000211e-05, 4.980599999999946e-05, 4.9695000000002376e-05, 4.991700000000002e-05, 4.9707999999999e-05, 5.027700000000135e-05, 4.961100000000149e-05, 5.006899999999981e-05, 4.993000000000011e-05, 4.967999999999986e-05, 4.973600000000161e-05, 4.963900000000063e-05, 4.969399999999943e-05, 5.044400000000018e-05, 4.96530000000002e-05, 4.999999999999796e-05, 5.01530000000007e-05, 4.9667000000003236e-05, 5.018099999999984e-05, 4.980599999999946e-05, 4.956999999999878e-05, 5.013899999999766e-05, 4.997199999999882e-05, 4.962500000000106e-05, 5.005600000000318e-05, 5.048599999999889e-05, 5.049999999999846e-05, 4.983299999999913e-05, 4.991600000000054e-05, 5.05279999999976e-05, 5.037499999999834e-05, 5.033299999999963e-05, 5.009700000000242e-05, 4.998599999999839e-05, 4.962500000000106e-05, 4.98200000000025e-05, 5.029200000000039e-05, 5.012500000000156e-05, 5.048599999999889e-05, 4.975000000000118e-05, 5.019499999999941e-05, 4.991700000000002e-05, 5.026300000000178e-05, 5.011100000000199e-05, 5.044400000000018e-05, 5.026300000000178e-05, 5.048600000000236e-05, 4.987499999999784e-05, 4.983299999999913e-05, 4.976400000000075e-05]</msg>
<status status="PASS" starttime="20201030 15:53:38.396" endtime="20201030 15:53:38.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.391" endtime="20201030 15:53:38.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.403" endtime="20201030 15:53:38.422"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.401" endtime="20201030 15:53:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.400" endtime="20201030 15:53:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.040" endtime="20201030 15:53:38.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.040" endtime="20201030 15:53:38.424"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.433" endtime="20201030 15:53:38.451"></status>
</kw>
<msg timestamp="20201030 15:53:38.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.431" endtime="20201030 15:53:38.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.453" endtime="20201030 15:53:38.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.456" endtime="20201030 15:53:38.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.428" endtime="20201030 15:53:38.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.426" endtime="20201030 15:53:38.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.465" endtime="20201030 15:53:38.751"></status>
</kw>
<msg timestamp="20201030 15:53:38.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021195486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021246278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.464" endtime="20201030 15:53:38.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021195486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021246278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:38.755" endtime="20201030 15:53:38.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.764" endtime="20201030 15:53:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.461" endtime="20201030 15:53:38.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.459" endtime="20201030 15:53:38.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:38.771" level="INFO">${RESULT} = [{'diff': 5.079200000000089e-05}, {'diff': 5.122299999999955e-05}, {'diff': 5.144500000000066e-05}, {'diff': 5.068100000000034e-05}, {'diff': 5.058299999999988e-05}, {'diff': 5.0902000000001973e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:53:38.768" endtime="20201030 15:53:38.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:38.775" level="INFO">${ACCURACY} = {'diff': [5.079200000000089e-05, 5.122299999999955e-05, 5.144500000000066e-05, 5.068100000000034e-05, 5.058299999999988e-05, 5.0902000000001973e-05, 5.118000000000136e-05, 5.08469999999997e-05, 5.1556...</msg>
<status status="PASS" starttime="20201030 15:53:38.772" endtime="20201030 15:53:38.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.780" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 15:53:38.779" endtime="20201030 15:53:38.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.783" level="INFO">VALUE: [5.079200000000089e-05, 5.122299999999955e-05, 5.144500000000066e-05, 5.068100000000034e-05, 5.058299999999988e-05, 5.0902000000001973e-05, 5.118000000000136e-05, 5.08469999999997e-05, 5.155600000000121e-05, 5.083300000000013e-05, 5.1443999999997714e-05, 5.059699999999945e-05, 5.10279999999981e-05, 5.112500000000256e-05, 5.073599999999914e-05, 5.148599999999989e-05, 5.105600000000071e-05, 5.120899999999998e-05, 5.088900000000188e-05, 5.124999999999921e-05, 5.100000000000243e-05, 5.062500000000206e-05, 5.102800000000157e-05, 5.072200000000304e-05, 5.098600000000286e-05, 5.088900000000188e-05, 5.059699999999945e-05, 5.080500000000099e-05, 5.129100000000192e-05, 5.129200000000139e-05, 5.052800000000107e-05, 5.086099999999927e-05, 5.101399999999853e-05, 5.101300000000253e-05, 5.097199999999982e-05, 5.095899999999973e-05, 5.1193999999997464e-05, 5.082000000000003e-05, 5.08339999999996e-05, 5.119400000000093e-05, 5.084700000000317e-05, 5.091700000000102e-05, 5.097199999999982e-05, 5.1193999999997464e-05, 5.113899999999866e-05, 5.074999999999871e-05, 5.1415999999998574e-05, 5.0708e-05, 5.119400000000093e-05, 5.087499999999884e-05]</msg>
<status status="PASS" starttime="20201030 15:53:38.781" endtime="20201030 15:53:38.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.776" endtime="20201030 15:53:38.785"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:38.789" endtime="20201030 15:53:38.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.787" endtime="20201030 15:53:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.786" endtime="20201030 15:53:38.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.424" endtime="20201030 15:53:38.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.424" endtime="20201030 15:53:38.810"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.819" endtime="20201030 15:53:38.837"></status>
</kw>
<msg timestamp="20201030 15:53:38.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.817" endtime="20201030 15:53:38.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:38.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:38.839" endtime="20201030 15:53:38.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.841" endtime="20201030 15:53:38.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.815" endtime="20201030 15:53:38.843"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.812" endtime="20201030 15:53:38.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:38.851" endtime="20201030 15:53:39.137"></status>
</kw>
<msg timestamp="20201030 15:53:39.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:38.849" endtime="20201030 15:53:39.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021181514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021234, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:39.141" endtime="20201030 15:53:39.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.149" endtime="20201030 15:53:39.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.846" endtime="20201030 15:53:39.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.844" endtime="20201030 15:53:39.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.156" level="INFO">${RESULT} = [{'diff': 5.248600000000089e-05}, {'diff': 5.244499999999819e-05}, {'diff': 5.2471999999997854e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.251300000000056e-05}, {'diff': 5.219500000000141e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:39.153" endtime="20201030 15:53:39.156"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:39.161" level="INFO">${ACCURACY} = {'diff': [5.248600000000089e-05, 5.244499999999819e-05, 5.2471999999997854e-05, 5.23470000000012e-05, 5.251300000000056e-05, 5.219500000000141e-05, 5.208400000000085e-05, 5.174999999999971e-05, 5.1791...</msg>
<status status="PASS" starttime="20201030 15:53:39.157" endtime="20201030 15:53:39.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.166" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 15:53:39.165" endtime="20201030 15:53:39.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.169" level="INFO">VALUE: [5.248600000000089e-05, 5.244499999999819e-05, 5.2471999999997854e-05, 5.23470000000012e-05, 5.251300000000056e-05, 5.219500000000141e-05, 5.208400000000085e-05, 5.174999999999971e-05, 5.179199999999842e-05, 5.197200000000082e-05, 5.227799999999935e-05, 5.1665999999998824e-05, 5.2151999999999754e-05, 5.154200000000164e-05, 5.222200000000107e-05, 5.241700000000252e-05, 5.206900000000181e-05, 5.223600000000064e-05, 5.226399999999978e-05, 5.209700000000095e-05, 5.240299999999948e-05, 5.174999999999971e-05, 5.244500000000166e-05, 5.241699999999905e-05, 5.243099999999862e-05, 5.230499999999902e-05, 5.236200000000024e-05, 5.177700000000285e-05, 5.213899999999966e-05, 5.231899999999859e-05, 5.2179999999998894e-05, 5.169400000000143e-05, 5.175000000000318e-05, 5.208300000000138e-05, 5.199999999999996e-05, 5.250000000000046e-05, 5.1708000000001e-05, 5.201399999999953e-05, 5.2457999999998284e-05, 5.172200000000057e-05, 5.18470000000007e-05, 5.251400000000003e-05, 5.247299999999733e-05, 5.205499999999877e-05, 5.157000000000078e-05, 5.237500000000034e-05, 5.252700000000013e-05, 5.226399999999978e-05, 5.163899999999916e-05, 5.2429999999999144e-05]</msg>
<status status="PASS" starttime="20201030 15:53:39.167" endtime="20201030 15:53:39.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.162" endtime="20201030 15:53:39.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.174" endtime="20201030 15:53:39.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.172" endtime="20201030 15:53:39.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.171" endtime="20201030 15:53:39.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.811" endtime="20201030 15:53:39.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:38.810" endtime="20201030 15:53:39.195"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.204" endtime="20201030 15:53:39.222"></status>
</kw>
<msg timestamp="20201030 15:53:39.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.203" endtime="20201030 15:53:39.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.225" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.223" endtime="20201030 15:53:39.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.226" endtime="20201030 15:53:39.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.200" endtime="20201030 15:53:39.228"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.198" endtime="20201030 15:53:39.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.235" endtime="20201030 15:53:39.522"></status>
</kw>
<msg timestamp="20201030 15:53:39.525" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02098025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021033028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:39.234" endtime="20201030 15:53:39.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02098025, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021033028, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:39.526" endtime="20201030 15:53:39.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.534" endtime="20201030 15:53:39.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.231" endtime="20201030 15:53:39.537"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.229" endtime="20201030 15:53:39.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.541" level="INFO">${RESULT} = [{'diff': 5.277799999999985e-05}, {'diff': 5.336100000000177e-05}, {'diff': 5.334699999999873e-05}, {'diff': 5.33479999999982e-05}, {'diff': 5.3249999999997744e-05}, {'diff': 5.334699999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:39.538" endtime="20201030 15:53:39.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:39.546" level="INFO">${ACCURACY} = {'diff': [5.277799999999985e-05, 5.336100000000177e-05, 5.334699999999873e-05, 5.33479999999982e-05, 5.3249999999997744e-05, 5.334699999999873e-05, 5.263900000000016e-05, 5.277799999999985e-05, 5.2695...</msg>
<status status="PASS" starttime="20201030 15:53:39.542" endtime="20201030 15:53:39.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.550" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 15:53:39.549" endtime="20201030 15:53:39.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.553" level="INFO">VALUE: [5.277799999999985e-05, 5.336100000000177e-05, 5.334699999999873e-05, 5.33479999999982e-05, 5.3249999999997744e-05, 5.334699999999873e-05, 5.263900000000016e-05, 5.277799999999985e-05, 5.269500000000191e-05, 5.334800000000167e-05, 5.2638000000000684e-05, 5.330599999999949e-05, 5.3416000000000574e-05, 5.291699999999955e-05, 5.3166000000000324e-05, 5.255600000000221e-05, 5.256999999999831e-05, 5.262499999999712e-05, 5.283300000000213e-05, 5.309700000000195e-05, 5.343100000000309e-05, 5.277799999999985e-05, 5.313900000000066e-05, 5.309800000000142e-05, 5.309799999999795e-05, 5.2999999999997494e-05, 5.287500000000084e-05, 5.300000000000096e-05, 5.2652000000000254e-05, 5.3179999999999894e-05, 5.269499999999844e-05, 5.261099999999755e-05, 5.3207999999999034e-05, 5.255599999999874e-05, 5.323600000000164e-05, 5.348600000000189e-05, 5.35280000000006e-05, 5.329199999999992e-05, 5.323600000000164e-05, 5.3235999999998174e-05, 5.302799999999663e-05, 5.304199999999967e-05, 5.345900000000223e-05, 5.295900000000173e-05, 5.319499999999894e-05, 5.276400000000028e-05, 5.3249999999997744e-05, 5.2929999999999644e-05, 5.259700000000145e-05, 5.326400000000078e-05]</msg>
<status status="PASS" starttime="20201030 15:53:39.551" endtime="20201030 15:53:39.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.547" endtime="20201030 15:53:39.554"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.558" endtime="20201030 15:53:39.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.557" endtime="20201030 15:53:39.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.555" endtime="20201030 15:53:39.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.196" endtime="20201030 15:53:39.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.195" endtime="20201030 15:53:39.579"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.588" endtime="20201030 15:53:39.606"></status>
</kw>
<msg timestamp="20201030 15:53:39.607" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.586" endtime="20201030 15:53:39.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.609" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.608" endtime="20201030 15:53:39.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.610" endtime="20201030 15:53:39.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.584" endtime="20201030 15:53:39.613"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.582" endtime="20201030 15:53:39.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.620" endtime="20201030 15:53:39.906"></status>
</kw>
<msg timestamp="20201030 15:53:39.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.618" endtime="20201030 15:53:39.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021463375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021517847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:39.910" endtime="20201030 15:53:39.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.919" endtime="20201030 15:53:39.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.615" endtime="20201030 15:53:39.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.614" endtime="20201030 15:53:39.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:39.926" level="INFO">${RESULT} = [{'diff': 5.4471999999999854e-05}, {'diff': 5.3916000000001074e-05}, {'diff': 5.4194000000000464e-05}, {'diff': 5.4499999999998994e-05}, {'diff': 5.388899999999794e-05}, {'diff': 5.4485999999999424e-0...</msg>
<status status="PASS" starttime="20201030 15:53:39.922" endtime="20201030 15:53:39.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:39.930" level="INFO">${ACCURACY} = {'diff': [5.4471999999999854e-05, 5.3916000000001074e-05, 5.4194000000000464e-05, 5.4499999999998994e-05, 5.388899999999794e-05, 5.4485999999999424e-05, 5.411099999999905e-05, 5.455600000000074e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:39.927" endtime="20201030 15:53:39.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.935" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 15:53:39.934" endtime="20201030 15:53:39.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.937" level="INFO">VALUE: [5.4471999999999854e-05, 5.3916000000001074e-05, 5.4194000000000464e-05, 5.4499999999998994e-05, 5.388899999999794e-05, 5.4485999999999424e-05, 5.411099999999905e-05, 5.455600000000074e-05, 5.362499999999812e-05, 5.413900000000166e-05, 5.409799999999895e-05, 5.447299999999933e-05, 5.373699999999815e-05, 5.35410000000007e-05, 5.3944000000000214e-05, 5.365300000000073e-05, 5.406900000000034e-05, 5.381900000000009e-05, 5.4471999999999854e-05, 5.4208000000000034e-05, 5.363899999999769e-05, 5.35549999999968e-05, 5.394499999999969e-05, 5.388900000000141e-05, 5.384699999999923e-05, 5.376400000000128e-05, 5.376400000000128e-05, 5.415300000000123e-05, 5.436199999999877e-05, 5.411200000000199e-05, 5.379100000000095e-05, 5.454099999999823e-05, 5.4444000000000714e-05, 5.4430000000001144e-05, 5.38609999999988e-05, 5.4415999999998105e-05, 5.356899999999984e-05, 5.390300000000098e-05, 5.4458000000000284e-05, 5.38609999999988e-05, 5.361099999999855e-05, 5.4527999999998134e-05, 5.415299999999776e-05, 5.375000000000171e-05, 5.413900000000166e-05, 5.386200000000174e-05, 5.405500000000077e-05, 5.391700000000055e-05, 5.3707999999999534e-05, 5.383299999999966e-05]</msg>
<status status="PASS" starttime="20201030 15:53:39.936" endtime="20201030 15:53:39.939"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.931" endtime="20201030 15:53:39.940"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:39.943" endtime="20201030 15:53:39.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.942" endtime="20201030 15:53:39.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.941" endtime="20201030 15:53:39.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.580" endtime="20201030 15:53:39.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.579" endtime="20201030 15:53:39.964"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.973" endtime="20201030 15:53:39.990"></status>
</kw>
<msg timestamp="20201030 15:53:39.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.972" endtime="20201030 15:53:39.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:39.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:39.992" endtime="20201030 15:53:39.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:39.994" endtime="20201030 15:53:39.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.969" endtime="20201030 15:53:39.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.967" endtime="20201030 15:53:39.997"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.004" endtime="20201030 15:53:40.289"></status>
</kw>
<msg timestamp="20201030 15:53:40.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.002" endtime="20201030 15:53:40.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020131847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.294" endtime="20201030 15:53:40.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.302" endtime="20201030 15:53:40.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.000" endtime="20201030 15:53:40.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.998" endtime="20201030 15:53:40.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.309" level="INFO">${RESULT} = [{'diff': 5.51809999999979e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.5236000000000174e-05}, {'diff': 5.490299999999851e-05}, {'diff': 5.459699999999998e-05}, {'diff': 5.480500000000152e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:40.305" endtime="20201030 15:53:40.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:40.314" level="INFO">${ACCURACY} = {'diff': [5.51809999999979e-05, 5.490299999999851e-05, 5.5236000000000174e-05, 5.490299999999851e-05, 5.459699999999998e-05, 5.480500000000152e-05, 5.50549999999983e-05, 5.477699999999891e-05, 5.54999...</msg>
<status status="PASS" starttime="20201030 15:53:40.310" endtime="20201030 15:53:40.315"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.319" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 15:53:40.318" endtime="20201030 15:53:40.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.322" level="INFO">VALUE: [5.51809999999979e-05, 5.490299999999851e-05, 5.5236000000000174e-05, 5.490299999999851e-05, 5.459699999999998e-05, 5.480500000000152e-05, 5.50549999999983e-05, 5.477699999999891e-05, 5.5499999999999994e-05, 5.504099999999873e-05, 5.463899999999869e-05, 5.479100000000195e-05, 5.488899999999894e-05, 5.519500000000094e-05, 5.541700000000205e-05, 5.458399999999988e-05, 5.494500000000069e-05, 5.519500000000094e-05, 5.527800000000235e-05, 5.532000000000106e-05, 5.5291999999998453e-05, 5.5401999999999535e-05, 5.5041999999998203e-05, 5.551299999999662e-05, 5.458300000000041e-05, 5.455500000000127e-05, 5.5499999999999994e-05, 5.4735999999999674e-05, 5.5222000000000604e-05, 5.5013999999999064e-05, 5.5249999999999744e-05, 5.4735999999999674e-05, 5.4763999999998814e-05, 5.493100000000112e-05, 5.531900000000159e-05, 5.5263999999999314e-05, 5.523699999999965e-05, 5.459799999999945e-05, 5.506899999999787e-05, 5.533399999999716e-05, 5.5457999999997815e-05, 5.5194000000001464e-05, 5.5165999999998855e-05, 5.5291999999998453e-05, 5.534700000000073e-05, 5.491700000000155e-05, 5.480600000000099e-05, 5.4777999999998384e-05, 5.4944000000001214e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:53:40.320" endtime="20201030 15:53:40.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.315" endtime="20201030 15:53:40.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:40.327" endtime="20201030 15:53:40.346"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.325" endtime="20201030 15:53:40.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.324" endtime="20201030 15:53:40.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.965" endtime="20201030 15:53:40.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:39.965" endtime="20201030 15:53:40.348"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.357" endtime="20201030 15:53:40.374"></status>
</kw>
<msg timestamp="20201030 15:53:40.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.355" endtime="20201030 15:53:40.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.375" endtime="20201030 15:53:40.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.378" endtime="20201030 15:53:40.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.353" endtime="20201030 15:53:40.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.350" endtime="20201030 15:53:40.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.387" endtime="20201030 15:53:40.677"></status>
</kw>
<msg timestamp="20201030 15:53:40.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.386" endtime="20201030 15:53:40.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020124972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.681" endtime="20201030 15:53:40.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.690" endtime="20201030 15:53:40.691"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.383" endtime="20201030 15:53:40.692"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.381" endtime="20201030 15:53:40.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:40.696" level="INFO">${RESULT} = [{'diff': 5.634699999999826e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.6208000000002034e-05}, {'diff': 5.5915999999999605e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.606900000000234e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:40.693" endtime="20201030 15:53:40.697"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:40.701" level="INFO">${ACCURACY} = {'diff': [5.634699999999826e-05, 5.5791999999998954e-05, 5.6208000000002034e-05, 5.5915999999999605e-05, 5.613900000000019e-05, 5.606900000000234e-05, 5.5930000000002644e-05, 5.6250000000000744e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:40.698" endtime="20201030 15:53:40.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.705" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 15:53:40.704" endtime="20201030 15:53:40.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.708" level="INFO">VALUE: [5.634699999999826e-05, 5.5791999999998954e-05, 5.6208000000002034e-05, 5.5915999999999605e-05, 5.613900000000019e-05, 5.606900000000234e-05, 5.5930000000002644e-05, 5.6250000000000744e-05, 5.6250000000000744e-05, 5.6319999999998593e-05, 5.634700000000173e-05, 5.595900000000126e-05, 5.593100000000212e-05, 5.581999999999809e-05, 5.5791999999998954e-05, 5.615299999999976e-05, 5.565299999999926e-05, 5.5750000000000244e-05, 5.559700000000098e-05, 5.641700000000305e-05, 5.6236000000001174e-05, 5.637500000000087e-05, 5.6000000000000494e-05, 5.583300000000166e-05, 5.6305999999999023e-05, 5.6485999999997955e-05, 5.5750000000000244e-05, 5.583300000000166e-05, 5.5777999999999384e-05, 5.6027999999999634e-05, 5.6291999999999454e-05, 5.555600000000174e-05, 5.579200000000242e-05, 5.562500000000012e-05, 5.6541999999999704e-05, 5.6151999999996816e-05, 5.566699999999883e-05, 5.5666000000002824e-05, 5.5708000000001534e-05, 5.559700000000098e-05, 5.6264000000000314e-05, 5.6221999999998135e-05, 5.5736000000000674e-05, 5.637500000000087e-05, 5.5736000000000674e-05, 5.6472000000001854e-05, 5.647300000000133e-05, 5.640300000000001e-05, 5.6236000000001174e-05, 5.561099999999708e-05]</msg>
<status status="PASS" starttime="20201030 15:53:40.707" endtime="20201030 15:53:40.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.702" endtime="20201030 15:53:40.709"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:40.713" endtime="20201030 15:53:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.712" endtime="20201030 15:53:40.733"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.710" endtime="20201030 15:53:40.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.349" endtime="20201030 15:53:40.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.348" endtime="20201030 15:53:40.734"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.743" endtime="20201030 15:53:40.761"></status>
</kw>
<msg timestamp="20201030 15:53:40.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.742" endtime="20201030 15:53:40.762"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:40.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:40.763" endtime="20201030 15:53:40.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.766" endtime="20201030 15:53:40.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.739" endtime="20201030 15:53:40.768"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.737" endtime="20201030 15:53:40.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:40.775" endtime="20201030 15:53:41.061"></status>
</kw>
<msg timestamp="20201030 15:53:41.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:40.774" endtime="20201030 15:53:41.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021617681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021674736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.065" endtime="20201030 15:53:41.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.074" endtime="20201030 15:53:41.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.771" endtime="20201030 15:53:41.076"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.769" endtime="20201030 15:53:41.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:41.081" level="INFO">${RESULT} = [{'diff': 5.70550000000003e-05}, {'diff': 5.6736000000001674e-05}, {'diff': 5.656899999999937e-05}, {'diff': 5.6985999999998455e-05}, {'diff': 5.7013999999997594e-05}, {'diff': 5.669499999999897e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:41.077" endtime="20201030 15:53:41.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:41.085" level="INFO">${ACCURACY} = {'diff': [5.70550000000003e-05, 5.6736000000001674e-05, 5.656899999999937e-05, 5.6985999999998455e-05, 5.7013999999997594e-05, 5.669499999999897e-05, 5.6749999999997774e-05, 5.71809999999999e-05, 5.71...</msg>
<status status="PASS" starttime="20201030 15:53:41.082" endtime="20201030 15:53:41.085"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.090" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 15:53:41.088" endtime="20201030 15:53:41.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.092" level="INFO">VALUE: [5.70550000000003e-05, 5.6736000000001674e-05, 5.656899999999937e-05, 5.6985999999998455e-05, 5.7013999999997594e-05, 5.669499999999897e-05, 5.6749999999997774e-05, 5.71809999999999e-05, 5.712500000000162e-05, 5.651300000000109e-05, 5.7430000000000675e-05, 5.680500000000005e-05, 5.652700000000066e-05, 5.652700000000066e-05, 5.71809999999999e-05, 5.712499999999815e-05, 5.7207999999999565e-05, 5.665300000000026e-05, 5.690300000000051e-05, 5.665300000000026e-05, 5.6735999999998205e-05, 5.662500000000112e-05, 5.7291999999996984e-05, 5.7013999999997594e-05, 5.6541999999999704e-05, 5.6500000000000994e-05, 5.683300000000266e-05, 5.6915999999997136e-05, 5.7444000000000245e-05, 5.7207999999999565e-05, 5.7444000000000245e-05, 5.6930000000000175e-05, 5.7264000000001314e-05, 5.740299999999754e-05, 5.688900000000094e-05, 5.7306000000000024e-05, 5.7500000000001994e-05, 5.6763999999997344e-05, 5.720900000000251e-05, 5.734799999999873e-05, 5.687500000000137e-05, 5.7306000000000024e-05, 5.711099999999858e-05, 5.7485999999998955e-05, 5.6693999999999495e-05, 5.66809999999994e-05, 5.7180000000000425e-05, 5.7499999999998525e-05, 5.7292000000000454e-05, 5.690300000000051e-05]</msg>
<status status="PASS" starttime="20201030 15:53:41.091" endtime="20201030 15:53:41.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.086" endtime="20201030 15:53:41.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.098" endtime="20201030 15:53:41.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.097" endtime="20201030 15:53:41.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.095" endtime="20201030 15:53:41.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.735" endtime="20201030 15:53:41.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:40.734" endtime="20201030 15:53:41.119"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.129" endtime="20201030 15:53:41.147"></status>
</kw>
<msg timestamp="20201030 15:53:41.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.127" endtime="20201030 15:53:41.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.149" endtime="20201030 15:53:41.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.153" endtime="20201030 15:53:41.156"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.124" endtime="20201030 15:53:41.157"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.122" endtime="20201030 15:53:41.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.165" endtime="20201030 15:53:41.451"></status>
</kw>
<msg timestamp="20201030 15:53:41.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.164" endtime="20201030 15:53:41.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020377986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020436472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.456" endtime="20201030 15:53:41.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.464" endtime="20201030 15:53:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.161" endtime="20201030 15:53:41.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.159" endtime="20201030 15:53:41.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:41.471" level="INFO">${RESULT} = [{'diff': 5.8485999999999955e-05}, {'diff': 5.78749999999989e-05}, {'diff': 5.7833999999999663e-05}, {'diff': 5.791700000000108e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.7735999999999205e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:41.468" endtime="20201030 15:53:41.471"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:41.476" level="INFO">${ACCURACY} = {'diff': [5.8485999999999955e-05, 5.78749999999989e-05, 5.7833999999999663e-05, 5.791700000000108e-05, 5.8222000000000135e-05, 5.7735999999999205e-05, 5.812499999999915e-05, 5.784699999999976e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 15:53:41.472" endtime="20201030 15:53:41.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.481" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 15:53:41.480" endtime="20201030 15:53:41.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.484" level="INFO">VALUE: [5.8485999999999955e-05, 5.78749999999989e-05, 5.7833999999999663e-05, 5.791700000000108e-05, 5.8222000000000135e-05, 5.7735999999999205e-05, 5.812499999999915e-05, 5.784699999999976e-05, 5.843100000000115e-05, 5.820900000000004e-05, 5.8070000000000344e-05, 5.8416000000002105e-05, 5.7930000000001175e-05, 5.8208000000000565e-05, 5.7901999999998566e-05, 5.836099999999983e-05, 5.8028000000001634e-05, 5.7750000000002244e-05, 5.8263999999998844e-05, 5.8056000000000774e-05, 5.8527999999998664e-05, 5.83749999999994e-05, 5.84870000000029e-05, 5.834700000000026e-05, 5.7820000000000094e-05, 5.8402000000002535e-05, 5.8235999999999705e-05, 5.8056000000000774e-05, 5.8013999999998594e-05, 5.7971999999999885e-05, 5.8415999999998636e-05, 5.8249999999999275e-05, 5.7708000000000065e-05, 5.8042000000001204e-05, 5.8472000000000385e-05, 5.8027999999998164e-05, 5.7721999999999635e-05, 5.76810000000004e-05, 5.7820000000000094e-05, 5.7583999999999413e-05, 5.7943999999997275e-05, 5.797300000000283e-05, 5.779100000000148e-05, 5.8165999999998386e-05, 5.809700000000001e-05, 5.830499999999808e-05, 5.811099999999958e-05, 5.7999999999999025e-05, 5.8208000000000565e-05, 5.7680000000000925e-05]</msg>
<status status="PASS" starttime="20201030 15:53:41.482" endtime="20201030 15:53:41.484"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.477" endtime="20201030 15:53:41.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.489" endtime="20201030 15:53:41.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.487" endtime="20201030 15:53:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.486" endtime="20201030 15:53:41.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.120" endtime="20201030 15:53:41.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.119" endtime="20201030 15:53:41.510"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.519" endtime="20201030 15:53:41.537"></status>
</kw>
<msg timestamp="20201030 15:53:41.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.517" endtime="20201030 15:53:41.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.538" endtime="20201030 15:53:41.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.541" endtime="20201030 15:53:41.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.515" endtime="20201030 15:53:41.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.512" endtime="20201030 15:53:41.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.550" endtime="20201030 15:53:41.837"></status>
</kw>
<msg timestamp="20201030 15:53:41.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.549" endtime="20201030 15:53:41.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020961444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:41.842" endtime="20201030 15:53:41.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.850" endtime="20201030 15:53:41.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.546" endtime="20201030 15:53:41.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.544" endtime="20201030 15:53:41.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:41.857" level="INFO">${RESULT} = [{'diff': 5.8957999999997845e-05}, {'diff': 5.8985999999996985e-05}, {'diff': 5.8693999999998026e-05}, {'diff': 5.8929999999998706e-05}, {'diff': 5.9221999999997665e-05}, {'diff': 5.933299999999822e-0...</msg>
<status status="PASS" starttime="20201030 15:53:41.854" endtime="20201030 15:53:41.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:41.861" level="INFO">${ACCURACY} = {'diff': [5.8957999999997845e-05, 5.8985999999996985e-05, 5.8693999999998026e-05, 5.8929999999998706e-05, 5.9221999999997665e-05, 5.933299999999822e-05, 5.88619999999998e-05, 5.8820000000001094e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:53:41.858" endtime="20201030 15:53:41.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.866" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 15:53:41.865" endtime="20201030 15:53:41.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.869" level="INFO">VALUE: [5.8957999999997845e-05, 5.8985999999996985e-05, 5.8693999999998026e-05, 5.8929999999998706e-05, 5.9221999999997665e-05, 5.933299999999822e-05, 5.88619999999998e-05, 5.8820000000001094e-05, 5.863899999999922e-05, 5.895900000000079e-05, 5.918099999999843e-05, 5.918099999999843e-05, 5.8763999999999345e-05, 5.9362000000000303e-05, 5.8848000000000233e-05, 5.929099999999951e-05, 5.888900000000294e-05, 5.9415999999999636e-05, 5.9193999999998526e-05, 5.9429999999999206e-05, 5.908300000000144e-05, 5.9222000000001135e-05, 5.8514000000002564e-05, 5.9027999999999164e-05, 5.859700000000051e-05, 5.926300000000037e-05, 5.9291999999998984e-05, 5.865299999999879e-05, 5.8736000000000205e-05, 5.8887999999999996e-05, 5.905499999999883e-05, 5.936099999999736e-05, 5.858300000000094e-05, 5.8972000000000885e-05, 5.93750000000004e-05, 5.9541999999999234e-05, 5.884699999999729e-05, 5.880500000000205e-05, 5.88749999999999e-05, 5.8693999999998026e-05, 5.886099999999686e-05, 5.9042000000002204e-05, 5.866700000000183e-05, 5.894500000000122e-05, 5.922300000000061e-05, 5.888899999999947e-05, 5.9236000000000705e-05, 5.8929999999998706e-05, 5.919500000000147e-05, 5.9527999999999665e-05]</msg>
<status status="PASS" starttime="20201030 15:53:41.867" endtime="20201030 15:53:41.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.862" endtime="20201030 15:53:41.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:41.874" endtime="20201030 15:53:41.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.872" endtime="20201030 15:53:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.871" endtime="20201030 15:53:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.511" endtime="20201030 15:53:41.895"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.510" endtime="20201030 15:53:41.895"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.904" endtime="20201030 15:53:41.921"></status>
</kw>
<msg timestamp="20201030 15:53:41.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.902" endtime="20201030 15:53:41.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:41.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:41.923" endtime="20201030 15:53:41.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.925" endtime="20201030 15:53:41.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.900" endtime="20201030 15:53:41.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.897" endtime="20201030 15:53:41.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:41.935" endtime="20201030 15:53:42.221"></status>
</kw>
<msg timestamp="20201030 15:53:42.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:41.933" endtime="20201030 15:53:42.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021110486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021171, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:42.226" endtime="20201030 15:53:42.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.234" endtime="20201030 15:53:42.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.931" endtime="20201030 15:53:42.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.929" endtime="20201030 15:53:42.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.241" level="INFO">${RESULT} = [{'diff': 6.0513999999997625e-05}, {'diff': 5.9707999999998596e-05}, {'diff': 5.991700000000308e-05}, {'diff': 6.044500000000272e-05}, {'diff': 5.9819999999998624e-05}, {'diff': 5.966700000000283e-05}...</msg>
<status status="PASS" starttime="20201030 15:53:42.238" endtime="20201030 15:53:42.242"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:42.246" level="INFO">${ACCURACY} = {'diff': [6.0513999999997625e-05, 5.9707999999998596e-05, 5.991700000000308e-05, 6.044500000000272e-05, 5.9819999999998624e-05, 5.966700000000283e-05, 6.0014000000000595e-05, 6.0362000000001304e-05, 6...</msg>
<status status="PASS" starttime="20201030 15:53:42.242" endtime="20201030 15:53:42.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.250" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 15:53:42.249" endtime="20201030 15:53:42.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.253" level="INFO">VALUE: [6.0513999999997625e-05, 5.9707999999998596e-05, 5.991700000000308e-05, 6.044500000000272e-05, 5.9819999999998624e-05, 5.966700000000283e-05, 6.0014000000000595e-05, 6.0362000000001304e-05, 6.036099999999836e-05, 6.0457999999999346e-05, 5.965300000000326e-05, 5.9901999999997096e-05, 5.965299999999979e-05, 6.0486000000001955e-05, 5.983300000000219e-05, 6.0193999999999526e-05, 5.994499999999875e-05, 5.990300000000004e-05, 5.9999999999997555e-05, 5.991699999999961e-05, 5.966699999999936e-05, 6.041700000000011e-05, 6.036100000000183e-05, 6.031899999999965e-05, 5.990300000000004e-05, 5.961099999999761e-05, 6.011099999999811e-05, 6.0193999999999526e-05, 5.9694000000002495e-05, 5.9665999999999886e-05, 5.988900000000047e-05, 5.9679999999999456e-05, 5.96810000000024e-05, 6.0319999999999124e-05, 5.9708000000002065e-05, 6.013900000000072e-05, 6.0055999999999304e-05, 5.994500000000222e-05, 6.0013999999997125e-05, 5.9750000000000775e-05, 6.0041999999999734e-05, 5.9651999999996846e-05, 6.0152000000000816e-05, 5.9888999999997e-05, 5.9943999999999276e-05, 6.03750000000014e-05, 6.011100000000158e-05, 6.00689999999994e-05, 6.0499999999998055e-05, 6.033300000000269e-05]</msg>
<status status="PASS" starttime="20201030 15:53:42.251" endtime="20201030 15:53:42.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.247" endtime="20201030 15:53:42.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.263" endtime="20201030 15:53:42.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.262" endtime="20201030 15:53:42.283"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.260" endtime="20201030 15:53:42.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.896" endtime="20201030 15:53:42.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:41.895" endtime="20201030 15:53:42.284"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.293" endtime="20201030 15:53:42.311"></status>
</kw>
<msg timestamp="20201030 15:53:42.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.292" endtime="20201030 15:53:42.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.312" endtime="20201030 15:53:42.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.315" endtime="20201030 15:53:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.289" endtime="20201030 15:53:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.287" endtime="20201030 15:53:42.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.324" endtime="20201030 15:53:42.610"></status>
</kw>
<msg timestamp="20201030 15:53:42.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02113325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:42.323" endtime="20201030 15:53:42.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021072069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02113325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:42.615" endtime="20201030 15:53:42.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.623" endtime="20201030 15:53:42.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.320" endtime="20201030 15:53:42.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.318" endtime="20201030 15:53:42.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:42.630" level="INFO">${RESULT} = [{'diff': 6.118100000000043e-05}, {'diff': 6.116599999999792e-05}, {'diff': 6.0778000000000915e-05}, {'diff': 6.058300000000294e-05}, {'diff': 6.120899999999957e-05}, {'diff': 6.0957999999999846e-05},...</msg>
<status status="PASS" starttime="20201030 15:53:42.627" endtime="20201030 15:53:42.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:42.635" level="INFO">${ACCURACY} = {'diff': [6.118100000000043e-05, 6.116599999999792e-05, 6.0778000000000915e-05, 6.058300000000294e-05, 6.120899999999957e-05, 6.0957999999999846e-05, 6.143100000000068e-05, 6.145800000000035e-05, 6.14...</msg>
<status status="PASS" starttime="20201030 15:53:42.631" endtime="20201030 15:53:42.635"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.640" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 15:53:42.639" endtime="20201030 15:53:42.640"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.643" level="INFO">VALUE: [6.118100000000043e-05, 6.116599999999792e-05, 6.0778000000000915e-05, 6.058300000000294e-05, 6.120899999999957e-05, 6.0957999999999846e-05, 6.143100000000068e-05, 6.145800000000035e-05, 6.147199999999992e-05, 6.137499999999893e-05, 6.106999999999987e-05, 6.062500000000165e-05, 6.13339999999997e-05, 6.1028000000001165e-05, 6.13889999999985e-05, 6.149999999999906e-05, 6.077699999999797e-05, 6.0916000000001136e-05, 6.0694000000000026e-05, 6.112499999999868e-05, 6.1013999999998125e-05, 6.113899999999825e-05, 6.0722000000002635e-05, 6.1014000000001595e-05, 6.0763999999997875e-05, 6.1195e-05, 6.141700000000111e-05, 6.097299999999889e-05, 6.123599999999924e-05, 6.0833999999999194e-05, 6.072299999999864e-05, 6.133300000000022e-05, 6.0499999999998055e-05, 6.112499999999868e-05, 6.133300000000022e-05, 6.0735999999998735e-05, 6.05689999999999e-05, 6.12499999999988e-05, 6.1195e-05, 6.133300000000022e-05, 6.062499999999818e-05, 6.126399999999838e-05, 6.13339999999997e-05, 6.118100000000043e-05, 6.129199999999752e-05, 6.120900000000304e-05, 6.143100000000068e-05, 6.0680000000000456e-05, 6.0750000000001775e-05, 6.0944000000000276e-05]</msg>
<status status="PASS" starttime="20201030 15:53:42.641" endtime="20201030 15:53:42.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.636" endtime="20201030 15:53:42.644"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:42.648" endtime="20201030 15:53:42.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.646" endtime="20201030 15:53:42.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.645" endtime="20201030 15:53:42.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.285" endtime="20201030 15:53:42.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.284" endtime="20201030 15:53:42.669"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.678" endtime="20201030 15:53:42.695"></status>
</kw>
<msg timestamp="20201030 15:53:42.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.676" endtime="20201030 15:53:42.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:42.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:42.697" endtime="20201030 15:53:42.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.700" endtime="20201030 15:53:42.701"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.673" endtime="20201030 15:53:42.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.671" endtime="20201030 15:53:42.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:42.709" endtime="20201030 15:53:42.996"></status>
</kw>
<msg timestamp="20201030 15:53:42.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020784292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020846375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:42.707" endtime="20201030 15:53:43.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020784292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020846375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.001" endtime="20201030 15:53:43.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.009" endtime="20201030 15:53:43.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.705" endtime="20201030 15:53:43.011"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.703" endtime="20201030 15:53:43.012"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.016" level="INFO">${RESULT} = [{'diff': 6.208300000000097e-05}, {'diff': 6.168100000000093e-05}, {'diff': 6.22219999999972e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.236100000000036e-05}, {'diff': 6.169499999999703e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:43.012" endtime="20201030 15:53:43.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:43.020" level="INFO">${ACCURACY} = {'diff': [6.208300000000097e-05, 6.168100000000093e-05, 6.22219999999972e-05, 6.250000000000006e-05, 6.236100000000036e-05, 6.169499999999703e-05, 6.254199999999877e-05, 6.163899999999875e-05, 6.16940...</msg>
<status status="PASS" starttime="20201030 15:53:43.017" endtime="20201030 15:53:43.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.025" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 15:53:43.024" endtime="20201030 15:53:43.025"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.027" level="INFO">VALUE: [6.208300000000097e-05, 6.168100000000093e-05, 6.22219999999972e-05, 6.250000000000006e-05, 6.236100000000036e-05, 6.169499999999703e-05, 6.254199999999877e-05, 6.163899999999875e-05, 6.169400000000103e-05, 6.209700000000054e-05, 6.15690000000009e-05, 6.19300000000017e-05, 6.162499999999918e-05, 6.236100000000036e-05, 6.215299999999882e-05, 6.183300000000072e-05, 6.212499999999968e-05, 6.198599999999999e-05, 6.241700000000211e-05, 6.212499999999968e-05, 6.16950000000005e-05, 6.170900000000007e-05, 6.207000000000087e-05, 6.205500000000183e-05, 6.234700000000079e-05, 6.17080000000006e-05, 6.187499999999943e-05, 6.229199999999852e-05, 6.231900000000165e-05, 6.247199999999745e-05, 6.163900000000222e-05, 6.190299999999857e-05, 6.172200000000017e-05, 6.166700000000136e-05, 6.212499999999968e-05, 6.248600000000049e-05, 6.18750000000029e-05, 6.24300000000022e-05, 6.231900000000165e-05, 6.194500000000075e-05, 6.191699999999814e-05, 6.223600000000024e-05, 6.242999999999874e-05, 6.254099999999929e-05, 6.241699999999864e-05, 6.181900000000115e-05, 6.213899999999925e-05, 6.222200000000067e-05, 6.17219999999967e-05, 6.177799999999845e-05]</msg>
<status status="PASS" starttime="20201030 15:53:43.026" endtime="20201030 15:53:43.028"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.021" endtime="20201030 15:53:43.029"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.033" endtime="20201030 15:53:43.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.031" endtime="20201030 15:53:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.030" endtime="20201030 15:53:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.670" endtime="20201030 15:53:43.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:42.669" endtime="20201030 15:53:43.053"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.063" endtime="20201030 15:53:43.080"></status>
</kw>
<msg timestamp="20201030 15:53:43.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.061" endtime="20201030 15:53:43.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.082" endtime="20201030 15:53:43.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.084" endtime="20201030 15:53:43.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.058" endtime="20201030 15:53:43.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.056" endtime="20201030 15:53:43.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.094" endtime="20201030 15:53:43.380"></status>
</kw>
<msg timestamp="20201030 15:53:43.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.092" endtime="20201030 15:53:43.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021437097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021500569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.384" endtime="20201030 15:53:43.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.393" endtime="20201030 15:53:43.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.090" endtime="20201030 15:53:43.395"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.088" endtime="20201030 15:53:43.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.400" level="INFO">${RESULT} = [{'diff': 6.347200000000192e-05}, {'diff': 6.344400000000278e-05}, {'diff': 6.311099999999764e-05}, {'diff': 6.323600000000124e-05}, {'diff': 6.263899999999975e-05}, {'diff': 6.308300000000197e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:43.396" endtime="20201030 15:53:43.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:43.404" level="INFO">${ACCURACY} = {'diff': [6.347200000000192e-05, 6.344400000000278e-05, 6.311099999999764e-05, 6.323600000000124e-05, 6.263899999999975e-05, 6.308300000000197e-05, 6.277799999999945e-05, 6.323599999999777e-05, 6.3027...</msg>
<status status="PASS" starttime="20201030 15:53:43.401" endtime="20201030 15:53:43.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.409" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 15:53:43.408" endtime="20201030 15:53:43.409"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.411" level="INFO">VALUE: [6.347200000000192e-05, 6.344400000000278e-05, 6.311099999999764e-05, 6.323600000000124e-05, 6.263899999999975e-05, 6.308300000000197e-05, 6.277799999999945e-05, 6.323599999999777e-05, 6.30279999999997e-05, 6.301400000000013e-05, 6.294500000000175e-05, 6.283300000000172e-05, 6.351400000000063e-05, 6.263899999999975e-05, 6.337500000000093e-05, 6.337499999999746e-05, 6.34439999999993e-05, 6.326400000000038e-05, 6.337500000000093e-05, 6.29439999999988e-05, 6.277799999999945e-05, 6.347300000000139e-05, 6.29439999999988e-05, 6.276399999999988e-05, 6.320799999999863e-05, 6.341699999999964e-05, 6.295900000000132e-05, 6.3195000000002e-05, 6.331899999999918e-05, 6.261100000000061e-05, 6.298700000000046e-05, 6.273599999999727e-05, 6.27080000000016e-05, 6.34159999999967e-05, 6.341700000000311e-05, 6.30279999999997e-05, 6.326400000000038e-05, 6.326400000000038e-05, 6.35280000000002e-05, 6.319399999999906e-05, 6.255599999999834e-05, 6.254099999999929e-05, 6.27080000000016e-05, 6.311099999999764e-05, 6.350000000000106e-05, 6.254099999999929e-05, 6.295800000000185e-05, 6.32500000000008e-05, 6.269400000000203e-05, 6.340300000000007e-05]</msg>
<status status="PASS" starttime="20201030 15:53:43.410" endtime="20201030 15:53:43.413"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.405" endtime="20201030 15:53:43.413"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.417" endtime="20201030 15:53:43.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.416" endtime="20201030 15:53:43.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.414" endtime="20201030 15:53:43.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.054" endtime="20201030 15:53:43.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.054" endtime="20201030 15:53:43.438"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.448" endtime="20201030 15:53:43.464"></status>
</kw>
<msg timestamp="20201030 15:53:43.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.446" endtime="20201030 15:53:43.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.466" endtime="20201030 15:53:43.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.469" endtime="20201030 15:53:43.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.443" endtime="20201030 15:53:43.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.441" endtime="20201030 15:53:43.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.478" endtime="20201030 15:53:43.765"></status>
</kw>
<msg timestamp="20201030 15:53:43.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.477" endtime="20201030 15:53:43.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.776" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020424722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.769" endtime="20201030 15:53:43.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.777" endtime="20201030 15:53:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.474" endtime="20201030 15:53:43.780"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.472" endtime="20201030 15:53:43.780"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:43.784" level="INFO">${RESULT} = [{'diff': 6.365300000000032e-05}, {'diff': 6.416700000000039e-05}, {'diff': 6.434700000000279e-05}, {'diff': 6.398599999999852e-05}, {'diff': 6.409700000000254e-05}, {'diff': 6.438899999999803e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:43.781" endtime="20201030 15:53:43.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:43.789" level="INFO">${ACCURACY} = {'diff': [6.365300000000032e-05, 6.416700000000039e-05, 6.434700000000279e-05, 6.398599999999852e-05, 6.409700000000254e-05, 6.438899999999803e-05, 6.443000000000074e-05, 6.404100000000079e-05, 6.4458...</msg>
<status status="PASS" starttime="20201030 15:53:43.785" endtime="20201030 15:53:43.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.794" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 15:53:43.793" endtime="20201030 15:53:43.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.797" level="INFO">VALUE: [6.365300000000032e-05, 6.416700000000039e-05, 6.434700000000279e-05, 6.398599999999852e-05, 6.409700000000254e-05, 6.438899999999803e-05, 6.443000000000074e-05, 6.404100000000079e-05, 6.445899999999935e-05, 6.401299999999818e-05, 6.398600000000199e-05, 6.42500000000018e-05, 6.380500000000011e-05, 6.366699999999989e-05, 6.361099999999814e-05, 6.398600000000199e-05, 6.431900000000018e-05, 6.40829999999995e-05, 6.448599999999902e-05, 6.436200000000183e-05, 6.424999999999834e-05, 6.452799999999773e-05, 6.420799999999963e-05, 6.415200000000135e-05, 6.391600000000067e-05, 6.416599999999745e-05, 6.376400000000088e-05, 6.437500000000193e-05, 6.413900000000125e-05, 6.408399999999898e-05, 6.426400000000138e-05, 6.423599999999877e-05, 6.38479999999983e-05, 6.419499999999953e-05, 6.45280000000012e-05, 6.44029999999976e-05, 6.406899999999993e-05, 6.437499999999846e-05, 6.412500000000168e-05, 6.413899999999778e-05, 6.427700000000147e-05, 6.433299999999975e-05, 6.451400000000163e-05, 6.383300000000272e-05, 6.441699999999717e-05, 6.373600000000174e-05, 6.448599999999902e-05, 6.434699999999932e-05, 6.383299999999925e-05, 6.409799999999855e-05]</msg>
<status status="PASS" starttime="20201030 15:53:43.795" endtime="20201030 15:53:43.798"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.790" endtime="20201030 15:53:43.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:43.802" endtime="20201030 15:53:43.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.801" endtime="20201030 15:53:43.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.799" endtime="20201030 15:53:43.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.439" endtime="20201030 15:53:43.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.439" endtime="20201030 15:53:43.823"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.833" endtime="20201030 15:53:43.851"></status>
</kw>
<msg timestamp="20201030 15:53:43.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.832" endtime="20201030 15:53:43.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:43.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:43.852" endtime="20201030 15:53:43.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.855" endtime="20201030 15:53:43.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.829" endtime="20201030 15:53:43.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.826" endtime="20201030 15:53:43.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:43.864" endtime="20201030 15:53:44.154"></status>
</kw>
<msg timestamp="20201030 15:53:44.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:43.863" endtime="20201030 15:53:44.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021679931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021745236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.158" endtime="20201030 15:53:44.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.167" endtime="20201030 15:53:44.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.860" endtime="20201030 15:53:44.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.858" endtime="20201030 15:53:44.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.174" level="INFO">${RESULT} = [{'diff': 6.530500000000161e-05}, {'diff': 6.462500000000218e-05}, {'diff': 6.479200000000102e-05}, {'diff': 6.549999999999959e-05}, {'diff': 6.520800000000063e-05}, {'diff': 6.47089999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:44.171" endtime="20201030 15:53:44.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:44.178" level="INFO">${ACCURACY} = {'diff': [6.530500000000161e-05, 6.462500000000218e-05, 6.479200000000102e-05, 6.549999999999959e-05, 6.520800000000063e-05, 6.47089999999996e-05, 6.509799999999955e-05, 6.541699999999817e-05, 6.53619...</msg>
<status status="PASS" starttime="20201030 15:53:44.175" endtime="20201030 15:53:44.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.183" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 15:53:44.182" endtime="20201030 15:53:44.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.185" level="INFO">VALUE: [6.530500000000161e-05, 6.462500000000218e-05, 6.479200000000102e-05, 6.549999999999959e-05, 6.520800000000063e-05, 6.47089999999996e-05, 6.509799999999955e-05, 6.541699999999817e-05, 6.536199999999937e-05, 6.494500000000028e-05, 6.551400000000263e-05, 6.529099999999857e-05, 6.455499999999739e-05, 6.483300000000025e-05, 6.530499999999814e-05, 6.454200000000077e-05, 6.538899999999903e-05, 6.509799999999955e-05, 6.469500000000003e-05, 6.466700000000089e-05, 6.498599999999952e-05, 6.479199999999755e-05, 6.505499999999789e-05, 6.495899999999985e-05, 6.5276999999999e-05, 6.488800000000253e-05, 6.47769999999985e-05, 6.500000000000256e-05, 6.54159999999987e-05, 6.54029999999986e-05, 6.470800000000013e-05, 6.50419999999978e-05, 6.462500000000218e-05, 6.470800000000013e-05, 6.534700000000032e-05, 6.490300000000157e-05, 6.516699999999792e-05, 6.542999999999827e-05, 6.461199999999861e-05, 6.477700000000197e-05, 6.456900000000043e-05, 6.461099999999914e-05, 6.480500000000111e-05, 6.474999999999884e-05, 6.52639999999989e-05, 6.479200000000102e-05, 6.486099999999939e-05, 6.477799999999798e-05, 6.511099999999964e-05, 6.502799999999823e-05]</msg>
<status status="PASS" starttime="20201030 15:53:44.184" endtime="20201030 15:53:44.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.179" endtime="20201030 15:53:44.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.191" endtime="20201030 15:53:44.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.189" endtime="20201030 15:53:44.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.188" endtime="20201030 15:53:44.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.824" endtime="20201030 15:53:44.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:43.824" endtime="20201030 15:53:44.212"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.221" endtime="20201030 15:53:44.239"></status>
</kw>
<msg timestamp="20201030 15:53:44.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.219" endtime="20201030 15:53:44.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.242" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.241" endtime="20201030 15:53:44.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.243" endtime="20201030 15:53:44.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.216" endtime="20201030 15:53:44.245"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.214" endtime="20201030 15:53:44.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.253" endtime="20201030 15:53:44.539"></status>
</kw>
<msg timestamp="20201030 15:53:44.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.251" endtime="20201030 15:53:44.542"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021462458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021528278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.543" endtime="20201030 15:53:44.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.552" endtime="20201030 15:53:44.553"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.248" endtime="20201030 15:53:44.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.247" endtime="20201030 15:53:44.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.559" level="INFO">${RESULT} = [{'diff': 6.582000000000116e-05}, {'diff': 6.597200000000095e-05}, {'diff': 6.568100000000146e-05}, {'diff': 6.643099999999874e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.60839999999975e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:44.555" endtime="20201030 15:53:44.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:44.563" level="INFO">${ACCURACY} = {'diff': [6.582000000000116e-05, 6.597200000000095e-05, 6.568100000000146e-05, 6.643099999999874e-05, 6.587499999999996e-05, 6.60839999999975e-05, 6.57769999999995e-05, 6.59440000000018e-05, 6.5637999...</msg>
<status status="PASS" starttime="20201030 15:53:44.560" endtime="20201030 15:53:44.563"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.568" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 15:53:44.567" endtime="20201030 15:53:44.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.570" level="INFO">VALUE: [6.582000000000116e-05, 6.597200000000095e-05, 6.568100000000146e-05, 6.643099999999874e-05, 6.587499999999996e-05, 6.60839999999975e-05, 6.57769999999995e-05, 6.59440000000018e-05, 6.563799999999981e-05, 6.654100000000329e-05, 6.64159999999997e-05, 6.613899999999978e-05, 6.570800000000113e-05, 6.612500000000021e-05, 6.558400000000048e-05, 6.568100000000146e-05, 6.593100000000171e-05, 6.568100000000146e-05, 6.566699999999842e-05, 6.612500000000021e-05, 6.59029999999991e-05, 6.57220000000007e-05, 6.556900000000143e-05, 6.611100000000064e-05, 6.648600000000102e-05, 6.556900000000143e-05, 6.565299999999885e-05, 6.595800000000138e-05, 6.609700000000107e-05, 6.651400000000016e-05, 6.55419999999983e-05, 6.598600000000052e-05, 6.584700000000082e-05, 6.615199999999988e-05, 6.64029999999996e-05, 6.634700000000132e-05, 6.600000000000009e-05, 6.600000000000009e-05, 6.611100000000064e-05, 6.620800000000163e-05, 6.573600000000027e-05, 6.588899999999953e-05, 6.609700000000107e-05, 6.638900000000003e-05, 6.584700000000082e-05, 6.55969999999971e-05, 6.629199999999905e-05, 6.62359999999973e-05, 6.638800000000056e-05, 6.569400000000156e-05]</msg>
<status status="PASS" starttime="20201030 15:53:44.569" endtime="20201030 15:53:44.572"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.564" endtime="20201030 15:53:44.573"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.576" endtime="20201030 15:53:44.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.575" endtime="20201030 15:53:44.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.574" endtime="20201030 15:53:44.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.213" endtime="20201030 15:53:44.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.212" endtime="20201030 15:53:44.597"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.606" endtime="20201030 15:53:44.625"></status>
</kw>
<msg timestamp="20201030 15:53:44.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.605" endtime="20201030 15:53:44.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.626" endtime="20201030 15:53:44.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.629" endtime="20201030 15:53:44.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.602" endtime="20201030 15:53:44.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.600" endtime="20201030 15:53:44.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.638" endtime="20201030 15:53:44.925"></status>
</kw>
<msg timestamp="20201030 15:53:44.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.637" endtime="20201030 15:53:44.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:44.929" endtime="20201030 15:53:44.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.938" endtime="20201030 15:53:44.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.634" endtime="20201030 15:53:44.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.632" endtime="20201030 15:53:44.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:44.945" level="INFO">${RESULT} = [{'diff': 6.745800000000288e-05}, {'diff': 6.684699999999835e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.713900000000078e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.665299999999985e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:44.941" endtime="20201030 15:53:44.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:44.950" level="INFO">${ACCURACY} = {'diff': [6.745800000000288e-05, 6.684699999999835e-05, 6.663900000000028e-05, 6.713900000000078e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.677799999999998e-05, 6.698600000000152e-05, 6.65699...</msg>
<status status="PASS" starttime="20201030 15:53:44.946" endtime="20201030 15:53:44.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.955" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 15:53:44.954" endtime="20201030 15:53:44.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:44.957" level="INFO">VALUE: [6.745800000000288e-05, 6.684699999999835e-05, 6.663900000000028e-05, 6.713900000000078e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.677799999999998e-05, 6.698600000000152e-05, 6.656999999999844e-05, 6.654200000000277e-05, 6.731899999999971e-05, 6.726300000000143e-05, 6.716600000000045e-05, 6.698599999999805e-05, 6.698599999999805e-05, 6.686100000000139e-05, 6.680499999999964e-05, 6.688900000000053e-05, 6.670799999999866e-05, 6.734699999999885e-05, 6.715300000000035e-05, 6.719399999999959e-05, 6.680599999999912e-05, 6.756899999999996e-05, 6.65700000000019e-05, 6.679199999999955e-05, 6.697200000000195e-05, 6.743000000000027e-05, 6.719399999999959e-05, 6.688900000000053e-05, 6.712499999999774e-05, 6.695799999999891e-05, 6.686100000000139e-05, 6.686100000000139e-05, 6.744499999999931e-05, 6.661099999999767e-05, 6.745799999999941e-05, 6.711200000000112e-05, 6.683400000000173e-05, 6.751299999999821e-05, 6.656899999999896e-05, 6.665299999999985e-05, 6.662500000000071e-05, 6.656899999999896e-05, 6.656900000000243e-05, 6.708299999999903e-05, 6.74030000000006e-05, 6.733299999999928e-05, 6.7277000000001e-05, 6.711200000000112e-05]</msg>
<status status="PASS" starttime="20201030 15:53:44.956" endtime="20201030 15:53:44.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.951" endtime="20201030 15:53:44.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:44.963" endtime="20201030 15:53:44.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.961" endtime="20201030 15:53:44.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.960" endtime="20201030 15:53:44.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.598" endtime="20201030 15:53:44.983"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.598" endtime="20201030 15:53:44.983"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:44.993" endtime="20201030 15:53:45.011"></status>
</kw>
<msg timestamp="20201030 15:53:45.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:44.991" endtime="20201030 15:53:45.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.012" endtime="20201030 15:53:45.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.015" endtime="20201030 15:53:45.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.988" endtime="20201030 15:53:45.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.986" endtime="20201030 15:53:45.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.024" endtime="20201030 15:53:45.311"></status>
</kw>
<msg timestamp="20201030 15:53:45.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021091569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.023" endtime="20201030 15:53:45.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021023708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021091569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.316" endtime="20201030 15:53:45.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.324" endtime="20201030 15:53:45.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.020" endtime="20201030 15:53:45.326"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.018" endtime="20201030 15:53:45.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.331" level="INFO">${RESULT} = [{'diff': 6.786100000000239e-05}, {'diff': 6.819400000000059e-05}, {'diff': 6.758299999999953e-05}, {'diff': 6.761099999999867e-05}, {'diff': 6.802800000000123e-05}, {'diff': 6.75420000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:45.328" endtime="20201030 15:53:45.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:45.335" level="INFO">${ACCURACY} = {'diff': [6.786100000000239e-05, 6.819400000000059e-05, 6.758299999999953e-05, 6.761099999999867e-05, 6.802800000000123e-05, 6.75420000000003e-05, 6.786099999999892e-05, 6.759700000000257e-05, 6.79590...</msg>
<status status="PASS" starttime="20201030 15:53:45.332" endtime="20201030 15:53:45.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.340" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 15:53:45.339" endtime="20201030 15:53:45.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.343" level="INFO">VALUE: [6.786100000000239e-05, 6.819400000000059e-05, 6.758299999999953e-05, 6.761099999999867e-05, 6.802800000000123e-05, 6.75420000000003e-05, 6.786099999999892e-05, 6.759700000000257e-05, 6.795900000000285e-05, 6.770899999999913e-05, 6.77640000000014e-05, 6.77909999999976e-05, 6.840199999999866e-05, 6.812499999999874e-05, 6.844400000000084e-05, 6.766600000000095e-05, 6.806900000000046e-05, 6.805600000000037e-05, 6.811099999999917e-05, 6.832000000000019e-05, 6.801400000000166e-05, 6.795799999999991e-05, 6.822199999999973e-05, 6.799999999999862e-05, 6.82090000000031e-05, 6.769499999999956e-05, 6.768000000000052e-05, 6.820899999999963e-05, 6.783299999999978e-05, 6.788900000000153e-05, 6.763899999999781e-05, 6.822199999999973e-05, 6.780600000000012e-05, 6.804199999999733e-05, 6.75969999999991e-05, 6.829199999999758e-05, 6.793100000000024e-05, 6.827799999999801e-05, 6.818100000000049e-05, 6.815300000000135e-05, 6.779200000000055e-05, 6.801400000000166e-05, 6.770799999999966e-05, 6.805499999999742e-05, 6.813899999999831e-05, 6.805499999999742e-05, 6.806999999999994e-05, 6.833300000000028e-05, 6.826399999999844e-05, 6.762499999999824e-05]</msg>
<status status="PASS" starttime="20201030 15:53:45.341" endtime="20201030 15:53:45.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.336" endtime="20201030 15:53:45.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:45.348" endtime="20201030 15:53:45.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.346" endtime="20201030 15:53:45.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.345" endtime="20201030 15:53:45.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.984" endtime="20201030 15:53:45.369"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:44.984" endtime="20201030 15:53:45.369"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.378" endtime="20201030 15:53:45.397"></status>
</kw>
<msg timestamp="20201030 15:53:45.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.376" endtime="20201030 15:53:45.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.399" endtime="20201030 15:53:45.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.401" endtime="20201030 15:53:45.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.374" endtime="20201030 15:53:45.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.371" endtime="20201030 15:53:45.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.411" endtime="20201030 15:53:45.696"></status>
</kw>
<msg timestamp="20201030 15:53:45.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:45.409" endtime="20201030 15:53:45.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021133, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021202417, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:45.701" endtime="20201030 15:53:45.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.709" endtime="20201030 15:53:45.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.406" endtime="20201030 15:53:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.405" endtime="20201030 15:53:45.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:45.716" level="INFO">${RESULT} = [{'diff': 6.941700000000217e-05}, {'diff': 6.870800000000066e-05}, {'diff': 6.881900000000121e-05}, {'diff': 6.922200000000073e-05}, {'diff': 6.872200000000023e-05}, {'diff': 6.854099999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:45.713" endtime="20201030 15:53:45.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:45.721" level="INFO">${ACCURACY} = {'diff': [6.941700000000217e-05, 6.870800000000066e-05, 6.881900000000121e-05, 6.922200000000073e-05, 6.872200000000023e-05, 6.854099999999835e-05, 6.915299999999888e-05, 6.95420000000023e-05, 6.89999...</msg>
<status status="PASS" starttime="20201030 15:53:45.717" endtime="20201030 15:53:45.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.725" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 15:53:45.724" endtime="20201030 15:53:45.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.728" level="INFO">VALUE: [6.941700000000217e-05, 6.870800000000066e-05, 6.881900000000121e-05, 6.922200000000073e-05, 6.872200000000023e-05, 6.854099999999835e-05, 6.915299999999888e-05, 6.95420000000023e-05, 6.899999999999962e-05, 6.948600000000055e-05, 6.861099999999967e-05, 6.868099999999752e-05, 6.905499999999842e-05, 6.920900000000063e-05, 6.916600000000245e-05, 6.947199999999751e-05, 6.884700000000035e-05, 6.897200000000048e-05, 6.924999999999987e-05, 6.90970000000006e-05, 6.917999999999855e-05, 6.912499999999974e-05, 6.922200000000073e-05, 6.943100000000174e-05, 6.945800000000141e-05, 6.865300000000185e-05, 6.882000000000069e-05, 6.877799999999851e-05, 6.863899999999881e-05, 6.863899999999881e-05, 6.858300000000053e-05, 6.934700000000085e-05, 6.884700000000035e-05, 6.938899999999956e-05, 6.85970000000001e-05, 6.922200000000073e-05, 6.948600000000055e-05, 6.874999999999937e-05, 6.897200000000048e-05, 6.87640000000024e-05, 6.904199999999833e-05, 6.933400000000076e-05, 6.893100000000124e-05, 6.867999999999805e-05, 6.930499999999867e-05, 6.884700000000035e-05, 6.85970000000001e-05, 6.897200000000048e-05, 6.898600000000005e-05, 6.931900000000171e-05]</msg>
<status status="PASS" starttime="20201030 15:53:45.726" endtime="20201030 15:53:45.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.721" endtime="20201030 15:53:45.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:45.734" endtime="20201030 15:53:45.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.732" endtime="20201030 15:53:45.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.731" endtime="20201030 15:53:45.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.370" endtime="20201030 15:53:45.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.369" endtime="20201030 15:53:45.755"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.764" endtime="20201030 15:53:45.782"></status>
</kw>
<msg timestamp="20201030 15:53:45.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.762" endtime="20201030 15:53:45.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:45.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:45.783" endtime="20201030 15:53:45.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.786" endtime="20201030 15:53:45.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.760" endtime="20201030 15:53:45.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.757" endtime="20201030 15:53:45.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:45.795" endtime="20201030 15:53:46.083"></status>
</kw>
<msg timestamp="20201030 15:53:46.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:45.794" endtime="20201030 15:53:46.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.087" endtime="20201030 15:53:46.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.096" endtime="20201030 15:53:46.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.791" endtime="20201030 15:53:46.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.789" endtime="20201030 15:53:46.099"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:46.103" level="INFO">${RESULT} = [{'diff': 6.984700000000135e-05}, {'diff': 7.029199999999958e-05}, {'diff': 7.001400000000019e-05}, {'diff': 6.994399999999887e-05}, {'diff': 6.95970000000011e-05}, {'diff': 7.018099999999902e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:46.100" endtime="20201030 15:53:46.104"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:46.109" level="INFO">${ACCURACY} = {'diff': [6.984700000000135e-05, 7.029199999999958e-05, 7.001400000000019e-05, 6.994399999999887e-05, 6.95970000000011e-05, 7.018099999999902e-05, 7.020799999999869e-05, 6.984700000000135e-05, 7.02360...</msg>
<status status="PASS" starttime="20201030 15:53:46.105" endtime="20201030 15:53:46.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.114" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 15:53:46.113" endtime="20201030 15:53:46.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.116" level="INFO">VALUE: [6.984700000000135e-05, 7.029199999999958e-05, 7.001400000000019e-05, 6.994399999999887e-05, 6.95970000000011e-05, 7.018099999999902e-05, 7.020799999999869e-05, 6.984700000000135e-05, 7.02360000000013e-05, 6.995799999999844e-05, 7.040300000000013e-05, 6.972199999999776e-05, 7.019400000000259e-05, 6.988900000000006e-05, 6.955600000000187e-05, 6.975000000000037e-05, 7.006999999999847e-05, 6.970899999999766e-05, 7.020900000000163e-05, 7.033299999999881e-05, 7.022199999999826e-05, 6.97360000000008e-05, 6.991599999999973e-05, 7.020799999999869e-05, 7.019499999999859e-05, 7.000000000000062e-05, 7.043099999999927e-05, 7.012499999999727e-05, 6.994500000000181e-05, 6.972200000000123e-05, 7.051300000000121e-05, 6.962500000000024e-05, 6.995899999999791e-05, 6.977700000000003e-05, 6.972200000000123e-05, 7.016599999999998e-05, 6.963899999999981e-05, 7.022200000000173e-05, 7.045799999999894e-05, 7.044399999999937e-05, 7.033299999999881e-05, 6.961200000000015e-05, 7.033300000000228e-05, 7.011100000000117e-05, 6.984700000000135e-05, 6.963900000000328e-05, 7.018000000000302e-05, 7.03620000000009e-05, 6.963799999999687e-05, 7.020800000000216e-05]</msg>
<status status="PASS" starttime="20201030 15:53:46.115" endtime="20201030 15:53:46.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.110" endtime="20201030 15:53:46.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.122" endtime="20201030 15:53:46.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.120" endtime="20201030 15:53:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.119" endtime="20201030 15:53:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.756" endtime="20201030 15:53:46.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:45.755" endtime="20201030 15:53:46.142"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.152" endtime="20201030 15:53:46.169"></status>
</kw>
<msg timestamp="20201030 15:53:46.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.150" endtime="20201030 15:53:46.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.171" endtime="20201030 15:53:46.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.174" endtime="20201030 15:53:46.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.147" endtime="20201030 15:53:46.176"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.145" endtime="20201030 15:53:46.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.184" endtime="20201030 15:53:46.472"></status>
</kw>
<msg timestamp="20201030 15:53:46.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.182" endtime="20201030 15:53:46.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020492097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020563292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.476" endtime="20201030 15:53:46.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.485" endtime="20201030 15:53:46.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.179" endtime="20201030 15:53:46.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.178" endtime="20201030 15:53:46.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:46.491" level="INFO">${RESULT} = [{'diff': 7.119499999999959e-05}, {'diff': 7.061199999999768e-05}, {'diff': 7.081899999999974e-05}, {'diff': 7.095800000000291e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.075000000000137e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:46.488" endtime="20201030 15:53:46.492"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:46.496" level="INFO">${ACCURACY} = {'diff': [7.119499999999959e-05, 7.061199999999768e-05, 7.081899999999974e-05, 7.095800000000291e-05, 7.066699999999995e-05, 7.075000000000137e-05, 7.068000000000005e-05, 7.108299999999956e-05, 7.0805...</msg>
<status status="PASS" starttime="20201030 15:53:46.492" endtime="20201030 15:53:46.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.501" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 15:53:46.499" endtime="20201030 15:53:46.501"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.503" level="INFO">VALUE: [7.119499999999959e-05, 7.061199999999768e-05, 7.081899999999974e-05, 7.095800000000291e-05, 7.066699999999995e-05, 7.075000000000137e-05, 7.068000000000005e-05, 7.108299999999956e-05, 7.080500000000017e-05, 7.093099999999977e-05, 7.147199999999951e-05, 7.056999999999897e-05, 7.100000000000162e-05, 7.14170000000007e-05, 7.09170000000002e-05, 7.102800000000076e-05, 7.126400000000144e-05, 7.090199999999769e-05, 7.083299999999931e-05, 7.062500000000124e-05, 7.086099999999845e-05, 7.149999999999865e-05, 7.112499999999827e-05, 7.134699999999938e-05, 7.131999999999972e-05, 7.109699999999913e-05, 7.147199999999951e-05, 7.140300000000113e-05, 7.095799999999944e-05, 7.07499999999979e-05, 7.104100000000085e-05, 7.099999999999815e-05, 7.129099999999763e-05, 7.120799999999969e-05, 7.05970000000021e-05, 7.112499999999827e-05, 7.073599999999833e-05, 7.138899999999809e-05, 7.070799999999919e-05, 7.123700000000177e-05, 7.127800000000101e-05, 7.149999999999865e-05, 7.079200000000008e-05, 7.105500000000042e-05, 7.1069e-05, 7.065200000000091e-05, 7.113899999999784e-05, 7.086099999999845e-05, 7.081900000000321e-05, 7.065300000000038e-05]</msg>
<status status="PASS" starttime="20201030 15:53:46.502" endtime="20201030 15:53:46.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.497" endtime="20201030 15:53:46.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.508" endtime="20201030 15:53:46.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.507" endtime="20201030 15:53:46.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.505" endtime="20201030 15:53:46.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.143" endtime="20201030 15:53:46.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.143" endtime="20201030 15:53:46.529"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.538" endtime="20201030 15:53:46.557"></status>
</kw>
<msg timestamp="20201030 15:53:46.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.537" endtime="20201030 15:53:46.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.559" endtime="20201030 15:53:46.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.561" endtime="20201030 15:53:46.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.534" endtime="20201030 15:53:46.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.532" endtime="20201030 15:53:46.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.571" endtime="20201030 15:53:46.856"></status>
</kw>
<msg timestamp="20201030 15:53:46.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.569" endtime="20201030 15:53:46.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021049319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021121375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.861" endtime="20201030 15:53:46.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.869" endtime="20201030 15:53:46.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.566" endtime="20201030 15:53:46.872"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.564" endtime="20201030 15:53:46.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:46.877" level="INFO">${RESULT} = [{'diff': 7.20560000000009e-05}, {'diff': 7.177800000000151e-05}, {'diff': 7.166699999999748e-05}, {'diff': 7.199999999999915e-05}, {'diff': 7.165299999999791e-05}, {'diff': 7.213899999999884e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:46.873" endtime="20201030 15:53:46.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:46.882" level="INFO">${ACCURACY} = {'diff': [7.20560000000009e-05, 7.177800000000151e-05, 7.166699999999748e-05, 7.199999999999915e-05, 7.165299999999791e-05, 7.213899999999884e-05, 7.234799999999986e-05, 7.165300000000138e-05, 7.20829...</msg>
<status status="PASS" starttime="20201030 15:53:46.878" endtime="20201030 15:53:46.882"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.886" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 15:53:46.885" endtime="20201030 15:53:46.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.889" level="INFO">VALUE: [7.20560000000009e-05, 7.177800000000151e-05, 7.166699999999748e-05, 7.199999999999915e-05, 7.165299999999791e-05, 7.213899999999884e-05, 7.234799999999986e-05, 7.165300000000138e-05, 7.20829999999971e-05, 7.249999999999965e-05, 7.234700000000038e-05, 7.236099999999995e-05, 7.234700000000038e-05, 7.227799999999854e-05, 7.22360000000033e-05, 7.188900000000206e-05, 7.24170000000017e-05, 7.22499999999994e-05, 7.17230000000027e-05, 7.230599999999768e-05, 7.190199999999869e-05, 7.197200000000001e-05, 7.254100000000235e-05, 7.173599999999933e-05, 7.199999999999915e-05, 7.209700000000013e-05, 7.188900000000206e-05, 7.230599999999768e-05, 7.240299999999866e-05, 7.251399999999922e-05, 7.173599999999933e-05, 7.208400000000004e-05, 7.216699999999798e-05, 7.184799999999936e-05, 7.173599999999933e-05, 7.199999999999915e-05, 7.179099999999813e-05, 7.215299999999841e-05, 7.232000000000072e-05, 7.213899999999884e-05, 7.170800000000019e-05, 7.245800000000094e-05, 7.244500000000084e-05, 7.216599999999851e-05, 7.169500000000009e-05, 7.186099999999945e-05, 7.216700000000145e-05, 7.151400000000169e-05, 7.163900000000181e-05, 7.252799999999879e-05]</msg>
<status status="PASS" starttime="20201030 15:53:46.887" endtime="20201030 15:53:46.891"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.883" endtime="20201030 15:53:46.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:46.895" endtime="20201030 15:53:46.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.893" endtime="20201030 15:53:46.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.892" endtime="20201030 15:53:46.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.530" endtime="20201030 15:53:46.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.530" endtime="20201030 15:53:46.916"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.925" endtime="20201030 15:53:46.943"></status>
</kw>
<msg timestamp="20201030 15:53:46.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.924" endtime="20201030 15:53:46.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:46.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:46.945" endtime="20201030 15:53:46.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.948" endtime="20201030 15:53:46.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.921" endtime="20201030 15:53:46.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.919" endtime="20201030 15:53:46.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:46.957" endtime="20201030 15:53:47.242"></status>
</kw>
<msg timestamp="20201030 15:53:47.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:46.956" endtime="20201030 15:53:47.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020373486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020446389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.247" endtime="20201030 15:53:47.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.255" endtime="20201030 15:53:47.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.953" endtime="20201030 15:53:47.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.951" endtime="20201030 15:53:47.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:47.262" level="INFO">${RESULT} = [{'diff': 7.290299999999916e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.352799999999979e-05}, {'diff': 7.279199999999861e-05}, {'diff': 7.330599999999868e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:47.259" endtime="20201030 15:53:47.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:47.267" level="INFO">${ACCURACY} = {'diff': [7.290299999999916e-05, 7.313899999999984e-05, 7.30560000000019e-05, 7.352799999999979e-05, 7.279199999999861e-05, 7.330599999999868e-05, 7.27499999999999e-05, 7.337499999999705e-05, 7.336100...</msg>
<status status="PASS" starttime="20201030 15:53:47.263" endtime="20201030 15:53:47.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.272" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 15:53:47.271" endtime="20201030 15:53:47.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.275" level="INFO">VALUE: [7.290299999999916e-05, 7.313899999999984e-05, 7.30560000000019e-05, 7.352799999999979e-05, 7.279199999999861e-05, 7.330599999999868e-05, 7.27499999999999e-05, 7.337499999999705e-05, 7.336100000000095e-05, 7.277799999999904e-05, 7.290299999999916e-05, 7.280600000000165e-05, 7.276399999999947e-05, 7.341699999999923e-05, 7.322200000000126e-05, 7.309700000000113e-05, 7.293100000000177e-05, 7.320900000000116e-05, 7.304099999999938e-05, 7.276399999999947e-05, 7.259700000000063e-05, 7.277799999999904e-05, 7.337499999999705e-05, 7.323600000000083e-05, 7.354199999999936e-05, 7.297200000000101e-05, 7.351400000000022e-05, 7.313899999999984e-05, 7.304199999999886e-05, 7.313899999999984e-05, 7.354199999999936e-05, 7.277799999999904e-05, 7.269500000000109e-05, 7.333300000000181e-05, 7.350000000000065e-05, 7.295800000000144e-05, 7.283300000000131e-05, 7.283300000000131e-05, 7.300000000000015e-05, 7.263899999999934e-05, 7.279199999999861e-05, 7.333400000000129e-05, 7.336100000000095e-05, 7.282000000000122e-05, 7.286100000000045e-05, 7.279099999999913e-05, 7.270800000000119e-05, 7.305499999999895e-05, 7.276399999999947e-05, 7.297199999999754e-05]</msg>
<status status="PASS" starttime="20201030 15:53:47.273" endtime="20201030 15:53:47.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.268" endtime="20201030 15:53:47.281"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:47.285" endtime="20201030 15:53:47.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.283" endtime="20201030 15:53:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.282" endtime="20201030 15:53:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.917" endtime="20201030 15:53:47.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:46.916" endtime="20201030 15:53:47.306"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.315" endtime="20201030 15:53:47.332"></status>
</kw>
<msg timestamp="20201030 15:53:47.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.313" endtime="20201030 15:53:47.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.335" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.334" endtime="20201030 15:53:47.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.337" endtime="20201030 15:53:47.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.310" endtime="20201030 15:53:47.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.308" endtime="20201030 15:53:47.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.346" endtime="20201030 15:53:47.634"></status>
</kw>
<msg timestamp="20201030 15:53:47.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.344" endtime="20201030 15:53:47.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020686222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.638" endtime="20201030 15:53:47.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.646" endtime="20201030 15:53:47.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.342" endtime="20201030 15:53:47.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.340" endtime="20201030 15:53:47.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:47.653" level="INFO">${RESULT} = [{'diff': 7.436100000000195e-05}, {'diff': 7.376400000000047e-05}, {'diff': 7.44439999999999e-05}, {'diff': 7.419400000000312e-05}, {'diff': 7.413900000000084e-05}, {'diff': 7.379199999999961e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:47.649" endtime="20201030 15:53:47.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:47.657" level="INFO">${ACCURACY} = {'diff': [7.436100000000195e-05, 7.376400000000047e-05, 7.44439999999999e-05, 7.419400000000312e-05, 7.413900000000084e-05, 7.379199999999961e-05, 7.402800000000029e-05, 7.401399999999725e-05, 7.37640...</msg>
<status status="PASS" starttime="20201030 15:53:47.654" endtime="20201030 15:53:47.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.661" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 15:53:47.660" endtime="20201030 15:53:47.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.664" level="INFO">VALUE: [7.436100000000195e-05, 7.376400000000047e-05, 7.44439999999999e-05, 7.419400000000312e-05, 7.413900000000084e-05, 7.379199999999961e-05, 7.402800000000029e-05, 7.401399999999725e-05, 7.376400000000047e-05, 7.437499999999805e-05, 7.447299999999851e-05, 7.386100000000145e-05, 7.409699999999866e-05, 7.372199999999829e-05, 7.398599999999811e-05, 7.359699999999816e-05, 7.430599999999968e-05, 7.418099999999955e-05, 7.380599999999918e-05, 7.362500000000077e-05, 7.4069999999999e-05, 7.418099999999955e-05, 7.452800000000079e-05, 7.433299999999934e-05, 7.361200000000068e-05, 7.370799999999872e-05, 7.383299999999884e-05, 7.391699999999973e-05, 7.416699999999998e-05, 7.423599999999836e-05, 7.415300000000041e-05, 7.391699999999973e-05, 7.400000000000115e-05, 7.362500000000077e-05, 7.434699999999891e-05, 7.35699999999985e-05, 7.415300000000041e-05, 7.409700000000213e-05, 7.436099999999848e-05, 7.400000000000115e-05, 7.454099999999741e-05, 7.373600000000133e-05, 7.386099999999798e-05, 7.420799999999922e-05, 7.441700000000023e-05, 7.379199999999961e-05, 7.383300000000231e-05, 7.377800000000004e-05, 7.394499999999887e-05, 7.401400000000072e-05]</msg>
<status status="PASS" starttime="20201030 15:53:47.662" endtime="20201030 15:53:47.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.658" endtime="20201030 15:53:47.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:47.669" endtime="20201030 15:53:47.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.667" endtime="20201030 15:53:47.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.666" endtime="20201030 15:53:47.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.307" endtime="20201030 15:53:47.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.306" endtime="20201030 15:53:47.689"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.698" endtime="20201030 15:53:47.716"></status>
</kw>
<msg timestamp="20201030 15:53:47.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.696" endtime="20201030 15:53:47.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:47.719" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:47.718" endtime="20201030 15:53:47.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.720" endtime="20201030 15:53:47.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.694" endtime="20201030 15:53:47.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.692" endtime="20201030 15:53:47.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:47.729" endtime="20201030 15:53:48.015"></status>
</kw>
<msg timestamp="20201030 15:53:48.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:47.728" endtime="20201030 15:53:48.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020341736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.019" endtime="20201030 15:53:48.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.027" endtime="20201030 15:53:48.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.725" endtime="20201030 15:53:48.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.723" endtime="20201030 15:53:48.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:48.033" level="INFO">${RESULT} = [{'diff': 7.506900000000052e-05}, {'diff': 7.543000000000133e-05}, {'diff': 7.4763999999998e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.527799999999807e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:48.030" endtime="20201030 15:53:48.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:48.038" level="INFO">${ACCURACY} = {'diff': [7.506900000000052e-05, 7.543000000000133e-05, 7.4763999999998e-05, 7.548599999999961e-05, 7.536099999999948e-05, 7.527799999999807e-05, 7.537500000000252e-05, 7.454200000000036e-05, 7.554199...</msg>
<status status="PASS" starttime="20201030 15:53:48.034" endtime="20201030 15:53:48.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.042" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 15:53:48.041" endtime="20201030 15:53:48.042"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.044" level="INFO">VALUE: [7.506900000000052e-05, 7.543000000000133e-05, 7.4763999999998e-05, 7.548599999999961e-05, 7.536099999999948e-05, 7.527799999999807e-05, 7.537500000000252e-05, 7.454200000000036e-05, 7.554199999999789e-05, 7.470899999999919e-05, 7.504200000000086e-05, 7.472200000000276e-05, 7.486099999999898e-05, 7.468000000000058e-05, 7.530499999999773e-05, 7.512500000000227e-05, 7.488900000000159e-05, 7.530600000000068e-05, 7.458300000000306e-05, 7.54310000000008e-05, 7.463900000000134e-05, 7.477800000000104e-05, 7.501400000000172e-05, 7.541700000000123e-05, 7.479199999999714e-05, 7.537499999999905e-05, 7.492999999999736e-05, 7.515299999999794e-05, 7.520800000000022e-05, 7.522200000000326e-05, 7.532000000000025e-05, 7.468100000000005e-05, 7.540199999999872e-05, 7.483399999999932e-05, 7.481900000000027e-05, 7.515300000000141e-05, 7.486100000000245e-05, 7.533300000000034e-05, 7.455500000000045e-05, 7.502800000000129e-05, 7.484700000000288e-05, 7.531900000000077e-05, 7.473599999999886e-05, 7.522199999999979e-05, 7.49440000000004e-05, 7.529199999999764e-05, 7.468100000000005e-05, 7.522199999999979e-05, 7.549999999999918e-05, 7.465300000000091e-05]</msg>
<status status="PASS" starttime="20201030 15:53:48.043" endtime="20201030 15:53:48.046"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.038" endtime="20201030 15:53:48.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:48.050" endtime="20201030 15:53:48.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.049" endtime="20201030 15:53:48.070"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.048" endtime="20201030 15:53:48.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.690" endtime="20201030 15:53:48.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:47.690" endtime="20201030 15:53:48.071"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.080" endtime="20201030 15:53:48.097"></status>
</kw>
<msg timestamp="20201030 15:53:48.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.078" endtime="20201030 15:53:48.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.100" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.099" endtime="20201030 15:53:48.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.101" endtime="20201030 15:53:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.075" endtime="20201030 15:53:48.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.073" endtime="20201030 15:53:48.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.110" endtime="20201030 15:53:48.414"></status>
</kw>
<msg timestamp="20201030 15:53:48.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.109" endtime="20201030 15:53:48.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019539556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.418" endtime="20201030 15:53:48.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.426" endtime="20201030 15:53:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.106" endtime="20201030 15:53:48.428"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.105" endtime="20201030 15:53:48.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:48.432" level="INFO">${RESULT} = [{'diff': 7.584700000000041e-05}, {'diff': 7.604199999999839e-05}, {'diff': 7.615300000000241e-05}, {'diff': 7.654100000000288e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.626300000000003e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:48.429" endtime="20201030 15:53:48.433"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:48.437" level="INFO">${ACCURACY} = {'diff': [7.584700000000041e-05, 7.604199999999839e-05, 7.615300000000241e-05, 7.654100000000288e-05, 7.61249999999998e-05, 7.626300000000003e-05, 7.580499999999823e-05, 7.634700000000091e-05, 7.55550...</msg>
<status status="PASS" starttime="20201030 15:53:48.433" endtime="20201030 15:53:48.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.442" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 15:53:48.441" endtime="20201030 15:53:48.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.444" level="INFO">VALUE: [7.584700000000041e-05, 7.604199999999839e-05, 7.615300000000241e-05, 7.654100000000288e-05, 7.61249999999998e-05, 7.626300000000003e-05, 7.580499999999823e-05, 7.634700000000091e-05, 7.555500000000145e-05, 7.638899999999962e-05, 7.602800000000229e-05, 7.573599999999986e-05, 7.569499999999715e-05, 7.619400000000165e-05, 7.56249999999993e-05, 7.648600000000061e-05, 7.616700000000198e-05, 7.573599999999986e-05, 7.618000000000208e-05, 7.63189999999983e-05, 7.563899999999887e-05, 7.624999999999993e-05, 7.59440000000014e-05, 7.623600000000036e-05, 7.615300000000241e-05, 7.563900000000234e-05, 7.583400000000032e-05, 7.558400000000007e-05, 7.648600000000061e-05, 7.641599999999929e-05, 7.623600000000036e-05, 7.580499999999823e-05, 7.64029999999992e-05, 7.572200000000029e-05, 7.574999999999943e-05, 7.633299999999787e-05, 7.584699999999694e-05, 7.637500000000005e-05, 7.586099999999998e-05, 7.623600000000036e-05, 7.61249999999998e-05, 7.563900000000234e-05, 7.620900000000069e-05, 7.63189999999983e-05, 7.598600000000011e-05, 7.641599999999929e-05, 7.588899999999912e-05, 7.59579999999975e-05, 7.599999999999968e-05, 7.634700000000091e-05]</msg>
<status status="PASS" starttime="20201030 15:53:48.443" endtime="20201030 15:53:48.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.438" endtime="20201030 15:53:48.446"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:48.449" endtime="20201030 15:53:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.448" endtime="20201030 15:53:48.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.447" endtime="20201030 15:53:48.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.072" endtime="20201030 15:53:48.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.071" endtime="20201030 15:53:48.470"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.479" endtime="20201030 15:53:48.496"></status>
</kw>
<msg timestamp="20201030 15:53:48.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.477" endtime="20201030 15:53:48.496"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.497" endtime="20201030 15:53:48.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.500" endtime="20201030 15:53:48.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.475" endtime="20201030 15:53:48.502"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.473" endtime="20201030 15:53:48.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.509" endtime="20201030 15:53:48.795"></status>
</kw>
<msg timestamp="20201030 15:53:48.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.507" endtime="20201030 15:53:48.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019859292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.799" endtime="20201030 15:53:48.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.808" endtime="20201030 15:53:48.809"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.505" endtime="20201030 15:53:48.810"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.503" endtime="20201030 15:53:48.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:48.814" level="INFO">${RESULT} = [{'diff': 7.745900000000194e-05}, {'diff': 7.724999999999746e-05}, {'diff': 7.716700000000298e-05}, {'diff': 7.754100000000042e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.713900000000037e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:48.811" endtime="20201030 15:53:48.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:48.818" level="INFO">${ACCURACY} = {'diff': [7.745900000000194e-05, 7.724999999999746e-05, 7.716700000000298e-05, 7.754100000000042e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.704199999999939e-05, 7.65969999999977e-05, 7.74299...</msg>
<status status="PASS" starttime="20201030 15:53:48.815" endtime="20201030 15:53:48.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.823" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 15:53:48.822" endtime="20201030 15:53:48.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.825" level="INFO">VALUE: [7.745900000000194e-05, 7.724999999999746e-05, 7.716700000000298e-05, 7.754100000000042e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.704199999999939e-05, 7.65969999999977e-05, 7.742999999999986e-05, 7.698599999999764e-05, 7.712499999999733e-05, 7.754199999999989e-05, 7.725000000000093e-05, 7.680499999999923e-05, 7.742999999999986e-05, 7.725000000000093e-05, 7.702700000000035e-05, 7.667999999999911e-05, 7.694399999999893e-05, 7.73050000000032e-05, 7.702799999999982e-05, 7.755599999999946e-05, 7.698600000000111e-05, 7.691699999999926e-05, 7.659799999999717e-05, 7.708400000000157e-05, 7.751399999999728e-05, 7.716600000000004e-05, 7.717999999999961e-05, 7.676300000000053e-05, 7.715299999999994e-05, 7.70830000000021e-05, 7.738900000000062e-05, 7.686200000000046e-05, 7.697199999999807e-05, 7.663900000000334e-05, 7.679199999999914e-05, 7.672300000000076e-05, 7.712499999999733e-05, 7.686099999999751e-05, 7.693000000000283e-05, 7.715299999999994e-05, 7.704099999999992e-05, 7.666599999999954e-05, 7.715299999999994e-05, 7.747199999999857e-05, 7.741699999999976e-05, 7.748600000000161e-05, 7.701400000000025e-05, 7.754199999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:53:48.824" endtime="20201030 15:53:48.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.819" endtime="20201030 15:53:48.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:48.830" endtime="20201030 15:53:48.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.829" endtime="20201030 15:53:48.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.827" endtime="20201030 15:53:48.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.471" endtime="20201030 15:53:48.851"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.470" endtime="20201030 15:53:48.851"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.860" endtime="20201030 15:53:48.879"></status>
</kw>
<msg timestamp="20201030 15:53:48.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.858" endtime="20201030 15:53:48.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:48.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:48.880" endtime="20201030 15:53:48.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.883" endtime="20201030 15:53:48.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.856" endtime="20201030 15:53:48.885"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.853" endtime="20201030 15:53:48.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:48.892" endtime="20201030 15:53:49.177"></status>
</kw>
<msg timestamp="20201030 15:53:49.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020605292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:48.890" endtime="20201030 15:53:49.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020605292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020683583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.181" endtime="20201030 15:53:49.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.189" endtime="20201030 15:53:49.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.888" endtime="20201030 15:53:49.191"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.886" endtime="20201030 15:53:49.192"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.196" level="INFO">${RESULT} = [{'diff': 7.82909999999977e-05}, {'diff': 7.812499999999833e-05}, {'diff': 7.817999999999714e-05}, {'diff': 7.761100000000173e-05}, {'diff': 7.802799999999735e-05}, {'diff': 7.794399999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:49.192" endtime="20201030 15:53:49.196"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:49.200" level="INFO">${ACCURACY} = {'diff': [7.82909999999977e-05, 7.812499999999833e-05, 7.817999999999714e-05, 7.761100000000173e-05, 7.802799999999735e-05, 7.794399999999993e-05, 7.777800000000057e-05, 7.836100000000248e-05, 7.80969...</msg>
<status status="PASS" starttime="20201030 15:53:49.197" endtime="20201030 15:53:49.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.204" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 15:53:49.203" endtime="20201030 15:53:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.207" level="INFO">VALUE: [7.82909999999977e-05, 7.812499999999833e-05, 7.817999999999714e-05, 7.761100000000173e-05, 7.802799999999735e-05, 7.794399999999993e-05, 7.777800000000057e-05, 7.836100000000248e-05, 7.80969999999992e-05, 7.75839999999986e-05, 7.768099999999958e-05, 7.769499999999915e-05, 7.818100000000008e-05, 7.761100000000173e-05, 7.770799999999925e-05, 7.823600000000236e-05, 7.801400000000125e-05, 7.793000000000036e-05, 7.820799999999975e-05, 7.822199999999932e-05, 7.848599999999914e-05, 7.834800000000239e-05, 7.763900000000087e-05, 7.833399999999935e-05, 7.783399999999885e-05, 7.766600000000054e-05, 7.755499999999999e-05, 7.776399999999753e-05, 7.776399999999753e-05, 7.758299999999912e-05, 7.844400000000043e-05, 7.848600000000261e-05, 7.79579999999995e-05, 7.770799999999925e-05, 7.819499999999965e-05, 7.805599999999996e-05, 7.845899999999947e-05, 7.79449999999994e-05, 7.777800000000057e-05, 7.786100000000198e-05, 7.849999999999871e-05, 7.766599999999707e-05, 7.829200000000064e-05, 7.8458e-05, 7.837500000000205e-05, 7.805599999999996e-05, 7.79449999999994e-05, 7.791700000000026e-05, 7.819499999999965e-05, 7.82229999999988e-05]</msg>
<status status="PASS" starttime="20201030 15:53:49.205" endtime="20201030 15:53:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.201" endtime="20201030 15:53:49.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.213" endtime="20201030 15:53:49.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.211" endtime="20201030 15:53:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.210" endtime="20201030 15:53:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.852" endtime="20201030 15:53:49.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:48.851" endtime="20201030 15:53:49.233"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.242" endtime="20201030 15:53:49.260"></status>
</kw>
<msg timestamp="20201030 15:53:49.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.240" endtime="20201030 15:53:49.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.261" endtime="20201030 15:53:49.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.264" endtime="20201030 15:53:49.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.238" endtime="20201030 15:53:49.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.236" endtime="20201030 15:53:49.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.273" endtime="20201030 15:53:49.559"></status>
</kw>
<msg timestamp="20201030 15:53:49.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01950475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:49.271" endtime="20201030 15:53:49.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019426194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01950475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:53:49.563" endtime="20201030 15:53:49.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.571" endtime="20201030 15:53:49.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.269" endtime="20201030 15:53:49.573"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.267" endtime="20201030 15:53:49.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.578" level="INFO">${RESULT} = [{'diff': 7.855600000000046e-05}, {'diff': 7.85969999999997e-05}, {'diff': 7.868100000000058e-05}, {'diff': 7.865299999999797e-05}, {'diff': 7.949999999999971e-05}, {'diff': 7.924999999999946e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:49.574" endtime="20201030 15:53:49.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:49.583" level="INFO">${ACCURACY} = {'diff': [7.855600000000046e-05, 7.85969999999997e-05, 7.868100000000058e-05, 7.865299999999797e-05, 7.949999999999971e-05, 7.924999999999946e-05, 7.869400000000068e-05, 7.906900000000106e-05, 7.89859...</msg>
<status status="PASS" starttime="20201030 15:53:49.578" endtime="20201030 15:53:49.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.587" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 15:53:49.586" endtime="20201030 15:53:49.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.590" level="INFO">VALUE: [7.855600000000046e-05, 7.85969999999997e-05, 7.868100000000058e-05, 7.865299999999797e-05, 7.949999999999971e-05, 7.924999999999946e-05, 7.869400000000068e-05, 7.906900000000106e-05, 7.898599999999964e-05, 7.936100000000001e-05, 7.905500000000149e-05, 7.893099999999736e-05, 7.8764000000002e-05, 7.888900000000212e-05, 7.90970000000002e-05, 7.923599999999989e-05, 7.92779999999986e-05, 7.933400000000035e-05, 7.901399999999878e-05, 7.870799999999678e-05, 7.884699999999994e-05, 7.936100000000001e-05, 7.85969999999997e-05, 7.954200000000189e-05, 7.866700000000101e-05, 7.932000000000078e-05, 7.89030000000017e-05, 7.89580000000005e-05, 7.923599999999989e-05, 7.872300000000276e-05, 7.902799999999835e-05, 7.902800000000182e-05, 7.879200000000114e-05, 7.906900000000106e-05, 7.894400000000093e-05, 7.936100000000001e-05, 7.944399999999796e-05, 7.929199999999817e-05, 7.866699999999754e-05, 7.872199999999982e-05, 7.862499999999883e-05, 7.873599999999939e-05, 7.89450000000004e-05, 7.904099999999845e-05, 7.947300000000004e-05, 7.923599999999989e-05, 7.908300000000063e-05, 7.94450000000009e-05, 7.948600000000014e-05, 7.87779999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:53:49.588" endtime="20201030 15:53:49.590"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.583" endtime="20201030 15:53:49.591"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.594" endtime="20201030 15:53:49.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.593" endtime="20201030 15:53:49.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.592" endtime="20201030 15:53:49.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.234" endtime="20201030 15:53:49.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.234" endtime="20201030 15:53:49.615"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.624" endtime="20201030 15:53:49.641"></status>
</kw>
<msg timestamp="20201030 15:53:49.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.622" endtime="20201030 15:53:49.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:49.643" endtime="20201030 15:53:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.645" endtime="20201030 15:53:49.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.620" endtime="20201030 15:53:49.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.618" endtime="20201030 15:53:49.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.654" endtime="20201030 15:53:49.941"></status>
</kw>
<msg timestamp="20201030 15:53:49.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.653" endtime="20201030 15:53:49.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019485264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019565556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:49.945" endtime="20201030 15:53:49.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:49.953" endtime="20201030 15:53:49.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.650" endtime="20201030 15:53:49.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.648" endtime="20201030 15:53:49.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:49.960" level="INFO">${RESULT} = [{'diff': 8.029200000000264e-05}, {'diff': 8.040299999999972e-05}, {'diff': 8.050000000000071e-05}, {'diff': 8.040299999999972e-05}, {'diff': 7.983300000000138e-05}, {'diff': 8.002799999999935e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:49.957" endtime="20201030 15:53:49.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:49.964" level="INFO">${ACCURACY} = {'diff': [8.029200000000264e-05, 8.040299999999972e-05, 8.050000000000071e-05, 8.040299999999972e-05, 7.983300000000138e-05, 8.002799999999935e-05, 8.016700000000251e-05, 8.020799999999828e-05, 8.0389...</msg>
<status status="PASS" starttime="20201030 15:53:49.961" endtime="20201030 15:53:49.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.968" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 15:53:49.967" endtime="20201030 15:53:49.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:49.971" level="INFO">VALUE: [8.029200000000264e-05, 8.040299999999972e-05, 8.050000000000071e-05, 8.040299999999972e-05, 7.983300000000138e-05, 8.002799999999935e-05, 8.016700000000251e-05, 8.020799999999828e-05, 8.038900000000015e-05, 8.02230000000008e-05, 7.955499999999852e-05, 8.000000000000021e-05, 7.986100000000051e-05, 8.0152e-05, 7.987500000000008e-05, 8.001399999999978e-05, 7.965299999999897e-05, 7.998600000000064e-05, 8.02779999999996e-05, 7.966700000000201e-05, 7.974999999999996e-05, 7.982000000000128e-05, 8.030599999999874e-05, 7.982000000000128e-05, 8.015299999999947e-05, 7.969400000000168e-05, 8.040299999999972e-05, 7.973599999999692e-05, 8.01109999999973e-05, 8.01389999999999e-05, 7.979200000000214e-05, 7.988899999999965e-05, 8.043099999999886e-05, 7.977800000000257e-05, 8.04169999999993e-05, 8.04169999999993e-05, 8.00130000000003e-05, 8.043000000000286e-05, 8.019399999999871e-05, 7.974999999999996e-05, 7.988899999999965e-05, 8.012500000000033e-05, 8.034700000000145e-05, 7.987500000000008e-05, 8.005600000000196e-05, 8.036100000000101e-05, 7.969499999999768e-05, 7.95840000000006e-05, 7.995900000000097e-05, 7.963900000000287e-05]</msg>
<status status="PASS" starttime="20201030 15:53:49.970" endtime="20201030 15:53:49.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.965" endtime="20201030 15:53:49.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:49.976" endtime="20201030 15:53:49.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.974" endtime="20201030 15:53:49.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.973" endtime="20201030 15:53:49.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.616" endtime="20201030 15:53:49.997"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.616" endtime="20201030 15:53:49.997"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.005" endtime="20201030 15:53:50.025"></status>
</kw>
<msg timestamp="20201030 15:53:50.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.004" endtime="20201030 15:53:50.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.026" endtime="20201030 15:53:50.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.029" endtime="20201030 15:53:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.001" endtime="20201030 15:53:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.999" endtime="20201030 15:53:50.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.038" endtime="20201030 15:53:50.324"></status>
</kw>
<msg timestamp="20201030 15:53:50.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020947667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:50.036" endtime="20201030 15:53:50.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020947667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:50.328" endtime="20201030 15:53:50.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.336" endtime="20201030 15:53:50.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.034" endtime="20201030 15:53:50.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.032" endtime="20201030 15:53:50.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:50.343" level="INFO">${RESULT} = [{'diff': 8.084700000000195e-05}, {'diff': 8.132000000000278e-05}, {'diff': 8.123599999999842e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.106899999999959e-05}, {'diff': 8.084800000000142e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:50.339" endtime="20201030 15:53:50.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:50.347" level="INFO">${ACCURACY} = {'diff': [8.084700000000195e-05, 8.132000000000278e-05, 8.123599999999842e-05, 8.11109999999983e-05, 8.106899999999959e-05, 8.084800000000142e-05, 8.059699999999823e-05, 8.095799999999903e-05, 8.11390...</msg>
<status status="PASS" starttime="20201030 15:53:50.344" endtime="20201030 15:53:50.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.351" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 15:53:50.350" endtime="20201030 15:53:50.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.354" level="INFO">VALUE: [8.084700000000195e-05, 8.132000000000278e-05, 8.123599999999842e-05, 8.11109999999983e-05, 8.106899999999959e-05, 8.084800000000142e-05, 8.059699999999823e-05, 8.095799999999903e-05, 8.11390000000009e-05, 8.083300000000238e-05, 8.148599999999867e-05, 8.05970000000017e-05, 8.125000000000146e-05, 8.095799999999903e-05, 8.065299999999997e-05, 8.084800000000142e-05, 8.097300000000154e-05, 8.134699999999898e-05, 8.068100000000258e-05, 8.07910000000002e-05, 8.102700000000088e-05, 8.055500000000299e-05, 8.143099999999986e-05, 8.072199999999835e-05, 8.09580000000025e-05, 8.12780000000006e-05, 8.083400000000185e-05, 8.094499999999893e-05, 8.130599999999974e-05, 8.09450000000024e-05, 8.067999999999964e-05, 8.118000000000014e-05, 8.070799999999878e-05, 8.098600000000164e-05, 8.134700000000245e-05, 8.116700000000004e-05, 8.104199999999992e-05, 8.106899999999959e-05, 8.088900000000065e-05, 8.105600000000296e-05, 8.065299999999997e-05, 8.06390000000004e-05, 8.137500000000158e-05, 8.092999999999989e-05, 8.06109999999978e-05, 8.115300000000047e-05, 8.080499999999977e-05, 8.125000000000146e-05, 8.093100000000283e-05, 8.100000000000121e-05]</msg>
<status status="PASS" starttime="20201030 15:53:50.352" endtime="20201030 15:53:50.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.348" endtime="20201030 15:53:50.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:50.360" endtime="20201030 15:53:50.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.358" endtime="20201030 15:53:50.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.357" endtime="20201030 15:53:50.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.998" endtime="20201030 15:53:50.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:49.997" endtime="20201030 15:53:50.381"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.389" endtime="20201030 15:53:50.408"></status>
</kw>
<msg timestamp="20201030 15:53:50.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.388" endtime="20201030 15:53:50.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.411" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.410" endtime="20201030 15:53:50.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.412" endtime="20201030 15:53:50.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.385" endtime="20201030 15:53:50.414"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.383" endtime="20201030 15:53:50.415"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.421" endtime="20201030 15:53:50.706"></status>
</kw>
<msg timestamp="20201030 15:53:50.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:50.419" endtime="20201030 15:53:50.710"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019547181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:50.710" endtime="20201030 15:53:50.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.719" endtime="20201030 15:53:50.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.417" endtime="20201030 15:53:50.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.415" endtime="20201030 15:53:50.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:50.725" level="INFO">${RESULT} = [{'diff': 8.190199999999828e-05}, {'diff': 8.254200000000142e-05}, {'diff': 8.24309999999974e-05}, {'diff': 8.244500000000043e-05}, {'diff': 8.191599999999785e-05}, {'diff': 8.169400000000021e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:50.722" endtime="20201030 15:53:50.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:50.730" level="INFO">${ACCURACY} = {'diff': [8.190199999999828e-05, 8.254200000000142e-05, 8.24309999999974e-05, 8.244500000000043e-05, 8.191599999999785e-05, 8.169400000000021e-05, 8.234699999999998e-05, 8.202800000000135e-05, 8.19170...</msg>
<status status="PASS" starttime="20201030 15:53:50.726" endtime="20201030 15:53:50.730"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.735" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 15:53:50.734" endtime="20201030 15:53:50.735"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.737" level="INFO">VALUE: [8.190199999999828e-05, 8.254200000000142e-05, 8.24309999999974e-05, 8.244500000000043e-05, 8.191599999999785e-05, 8.169400000000021e-05, 8.234699999999998e-05, 8.202800000000135e-05, 8.19170000000008e-05, 8.181900000000034e-05, 8.234699999999998e-05, 8.205600000000049e-05, 8.244500000000043e-05, 8.201399999999831e-05, 8.17230000000023e-05, 8.170799999999978e-05, 8.188800000000218e-05, 8.215199999999853e-05, 8.198599999999917e-05, 8.16529999999975e-05, 8.176400000000153e-05, 8.21390000000019e-05, 8.212500000000234e-05, 8.22910000000017e-05, 8.17780000000011e-05, 8.224999999999899e-05, 8.220899999999975e-05, 8.238900000000215e-05, 8.222199999999985e-05, 8.223600000000289e-05, 8.206900000000059e-05, 8.21390000000019e-05, 8.258400000000013e-05, 8.222199999999985e-05, 8.249999999999924e-05, 8.207000000000006e-05, 8.179200000000067e-05, 8.158399999999913e-05, 8.172299999999882e-05, 8.243000000000139e-05, 8.215199999999853e-05, 8.24720000000001e-05, 8.234699999999998e-05, 8.220800000000028e-05, 8.165300000000097e-05, 8.176399999999806e-05, 8.205600000000049e-05, 8.244500000000043e-05, 8.155599999999999e-05, 8.19719999999996e-05]</msg>
<status status="PASS" starttime="20201030 15:53:50.736" endtime="20201030 15:53:50.738"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.731" endtime="20201030 15:53:50.738"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:50.742" endtime="20201030 15:53:50.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.741" endtime="20201030 15:53:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.739" endtime="20201030 15:53:50.762"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.381" endtime="20201030 15:53:50.763"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.381" endtime="20201030 15:53:50.763"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.772" endtime="20201030 15:53:50.790"></status>
</kw>
<msg timestamp="20201030 15:53:50.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.770" endtime="20201030 15:53:50.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:50.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:50.791" endtime="20201030 15:53:50.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.794" endtime="20201030 15:53:50.795"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.767" endtime="20201030 15:53:50.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.765" endtime="20201030 15:53:50.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:50.803" endtime="20201030 15:53:51.092"></status>
</kw>
<msg timestamp="20201030 15:53:51.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:50.801" endtime="20201030 15:53:51.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019627458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019710875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.096" endtime="20201030 15:53:51.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.104" endtime="20201030 15:53:51.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.799" endtime="20201030 15:53:51.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.797" endtime="20201030 15:53:51.107"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:51.111" level="INFO">${RESULT} = [{'diff': 8.341699999999883e-05}, {'diff': 8.282000000000081e-05}, {'diff': 8.272200000000035e-05}, {'diff': 8.29309999999979e-05}, {'diff': 8.333400000000088e-05}, {'diff': 8.319400000000171e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:51.108" endtime="20201030 15:53:51.111"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:51.115" level="INFO">${ACCURACY} = {'diff': [8.341699999999883e-05, 8.282000000000081e-05, 8.272200000000035e-05, 8.29309999999979e-05, 8.333400000000088e-05, 8.319400000000171e-05, 8.352699999999991e-05, 8.26390000000024e-05, 8.276399...</msg>
<status status="PASS" starttime="20201030 15:53:51.112" endtime="20201030 15:53:51.115"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.120" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 15:53:51.119" endtime="20201030 15:53:51.120"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.122" level="INFO">VALUE: [8.341699999999883e-05, 8.282000000000081e-05, 8.272200000000035e-05, 8.29309999999979e-05, 8.333400000000088e-05, 8.319400000000171e-05, 8.352699999999991e-05, 8.26390000000024e-05, 8.276399999999906e-05, 8.350000000000024e-05, 8.322200000000085e-05, 8.306899999999812e-05, 8.323599999999695e-05, 8.336100000000055e-05, 8.255599999999752e-05, 8.334800000000045e-05, 8.257000000000056e-05, 8.329200000000217e-05, 8.265199999999903e-05, 8.294500000000093e-05, 8.291599999999885e-05, 8.26529999999985e-05, 8.301399999999931e-05, 8.309700000000073e-05, 8.332000000000131e-05, 8.27780000000021e-05, 8.276399999999906e-05, 8.26529999999985e-05, 8.280600000000124e-05, 8.336100000000055e-05, 8.256900000000109e-05, 8.316600000000257e-05, 8.354100000000295e-05, 8.265300000000197e-05, 8.34170000000023e-05, 8.307000000000106e-05, 8.282000000000081e-05, 8.322200000000085e-05, 8.258400000000013e-05, 8.265300000000197e-05, 8.326399999999956e-05, 8.298600000000017e-05, 8.286100000000005e-05, 8.327799999999913e-05, 8.270800000000078e-05, 8.305499999999855e-05, 8.33330000000014e-05, 8.341699999999883e-05, 8.255599999999752e-05, 8.30980000000002e-05]</msg>
<status status="PASS" starttime="20201030 15:53:51.121" endtime="20201030 15:53:51.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.116" endtime="20201030 15:53:51.124"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:51.127" endtime="20201030 15:53:51.147"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.126" endtime="20201030 15:53:51.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.125" endtime="20201030 15:53:51.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.764" endtime="20201030 15:53:51.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:50.763" endtime="20201030 15:53:51.149"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.157" endtime="20201030 15:53:51.177"></status>
</kw>
<msg timestamp="20201030 15:53:51.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.156" endtime="20201030 15:53:51.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.179" endtime="20201030 15:53:51.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.181" endtime="20201030 15:53:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.153" endtime="20201030 15:53:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.151" endtime="20201030 15:53:51.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.190" endtime="20201030 15:53:51.477"></status>
</kw>
<msg timestamp="20201030 15:53:51.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.189" endtime="20201030 15:53:51.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020633653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.481" endtime="20201030 15:53:51.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.489" endtime="20201030 15:53:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.186" endtime="20201030 15:53:51.491"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.184" endtime="20201030 15:53:51.492"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:51.496" level="INFO">${RESULT} = [{'diff': 8.402800000000335e-05}, {'diff': 8.43330000000024e-05}, {'diff': 8.408400000000163e-05}, {'diff': 8.420800000000228e-05}, {'diff': 8.394400000000246e-05}, {'diff': 8.391699999999933e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:51.493" endtime="20201030 15:53:51.496"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:51.500" level="INFO">${ACCURACY} = {'diff': [8.402800000000335e-05, 8.43330000000024e-05, 8.408400000000163e-05, 8.420800000000228e-05, 8.394400000000246e-05, 8.391699999999933e-05, 8.376400000000006e-05, 8.370800000000178e-05, 8.39309...</msg>
<status status="PASS" starttime="20201030 15:53:51.497" endtime="20201030 15:53:51.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.504" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 15:53:51.503" endtime="20201030 15:53:51.505"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.507" level="INFO">VALUE: [8.402800000000335e-05, 8.43330000000024e-05, 8.408400000000163e-05, 8.420800000000228e-05, 8.394400000000246e-05, 8.391699999999933e-05, 8.376400000000006e-05, 8.370800000000178e-05, 8.39309999999989e-05, 8.363899999999994e-05, 8.352799999999938e-05, 8.445799999999906e-05, 8.424999999999752e-05, 8.355599999999852e-05, 8.412500000000087e-05, 8.451300000000134e-05, 8.392999999999942e-05, 8.401400000000031e-05, 8.40980000000012e-05, 8.444399999999949e-05, 8.416699999999958e-05, 8.388900000000019e-05, 8.412500000000087e-05, 8.36529999999995e-05, 8.375000000000049e-05, 8.386099999999758e-05, 8.425000000000099e-05, 8.358299999999819e-05, 8.419399999999924e-05, 8.437499999999765e-05, 8.369399999999874e-05, 8.436100000000155e-05, 8.377799999999963e-05, 8.401400000000031e-05, 8.405599999999902e-05, 8.372299999999736e-05, 8.422199999999838e-05, 8.384799999999748e-05, 8.370799999999831e-05, 8.355499999999905e-05, 8.41110000000013e-05, 8.411099999999783e-05, 8.451400000000081e-05, 8.39309999999989e-05, 8.386100000000105e-05, 8.452800000000038e-05, 8.427800000000013e-05, 8.425000000000099e-05, 8.36110000000008e-05, 8.383399999999791e-05]</msg>
<status status="PASS" starttime="20201030 15:53:51.505" endtime="20201030 15:53:51.508"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.501" endtime="20201030 15:53:51.509"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:51.513" endtime="20201030 15:53:51.532"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.511" endtime="20201030 15:53:51.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.510" endtime="20201030 15:53:51.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.149" endtime="20201030 15:53:51.533"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.149" endtime="20201030 15:53:51.533"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.542" endtime="20201030 15:53:51.562"></status>
</kw>
<msg timestamp="20201030 15:53:51.562" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.541" endtime="20201030 15:53:51.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.563" endtime="20201030 15:53:51.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.566" endtime="20201030 15:53:51.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.538" endtime="20201030 15:53:51.568"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.536" endtime="20201030 15:53:51.569"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.575" endtime="20201030 15:53:51.860"></status>
</kw>
<msg timestamp="20201030 15:53:51.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.574" endtime="20201030 15:53:51.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020202417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.864" endtime="20201030 15:53:51.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.873" endtime="20201030 15:53:51.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.571" endtime="20201030 15:53:51.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.569" endtime="20201030 15:53:51.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:51.879" level="INFO">${RESULT} = [{'diff': 8.515199999999806e-05}, {'diff': 8.479099999999726e-05}, {'diff': 8.470799999999931e-05}, {'diff': 8.462500000000137e-05}, {'diff': 8.4846999999999e-05}, {'diff': 8.520799999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:51.876" endtime="20201030 15:53:51.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:51.884" level="INFO">${ACCURACY} = {'diff': [8.515199999999806e-05, 8.479099999999726e-05, 8.470799999999931e-05, 8.462500000000137e-05, 8.4846999999999e-05, 8.520799999999981e-05, 8.541700000000083e-05, 8.506999999999959e-05, 8.519499...</msg>
<status status="PASS" starttime="20201030 15:53:51.880" endtime="20201030 15:53:51.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.889" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 15:53:51.888" endtime="20201030 15:53:51.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.891" level="INFO">VALUE: [8.515199999999806e-05, 8.479099999999726e-05, 8.470799999999931e-05, 8.462500000000137e-05, 8.4846999999999e-05, 8.520799999999981e-05, 8.541700000000083e-05, 8.506999999999959e-05, 8.519499999999972e-05, 8.543099999999693e-05, 8.459700000000223e-05, 8.463900000000094e-05, 8.463899999999747e-05, 8.469399999999974e-05, 8.470799999999931e-05, 8.512500000000187e-05, 8.469400000000321e-05, 8.475000000000149e-05, 8.458299999999919e-05, 8.469500000000268e-05, 8.46530000000005e-05, 8.506999999999959e-05, 8.536199999999855e-05, 8.544399999999702e-05, 8.473599999999845e-05, 8.487499999999815e-05, 8.498600000000217e-05, 8.487500000000162e-05, 8.512500000000187e-05, 8.466700000000008e-05, 8.54859999999992e-05, 8.516700000000058e-05, 8.513799999999849e-05, 8.533399999999941e-05, 8.494499999999947e-05, 8.552699999999844e-05, 8.477700000000116e-05, 8.516700000000058e-05, 8.472199999999888e-05, 8.505500000000055e-05, 8.541700000000083e-05, 8.463900000000094e-05, 8.472199999999888e-05, 8.486100000000205e-05, 8.495899999999904e-05, 8.506999999999959e-05, 8.499999999999827e-05, 8.502699999999794e-05, 8.529100000000123e-05, 8.520799999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:53:51.890" endtime="20201030 15:53:51.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.885" endtime="20201030 15:53:51.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:51.896" endtime="20201030 15:53:51.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.894" endtime="20201030 15:53:51.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.893" endtime="20201030 15:53:51.916"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.534" endtime="20201030 15:53:51.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.534" endtime="20201030 15:53:51.917"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.925" endtime="20201030 15:53:51.944"></status>
</kw>
<msg timestamp="20201030 15:53:51.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.924" endtime="20201030 15:53:51.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:51.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:51.945" endtime="20201030 15:53:51.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.948" endtime="20201030 15:53:51.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.921" endtime="20201030 15:53:51.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.919" endtime="20201030 15:53:51.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:51.958" endtime="20201030 15:53:52.245"></status>
</kw>
<msg timestamp="20201030 15:53:52.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:51.957" endtime="20201030 15:53:52.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019528708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.249" endtime="20201030 15:53:52.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.258" endtime="20201030 15:53:52.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.954" endtime="20201030 15:53:52.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.952" endtime="20201030 15:53:52.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:52.264" level="INFO">${RESULT} = [{'diff': 8.622299999999986e-05}, {'diff': 8.563900000000194e-05}, {'diff': 8.586099999999958e-05}, {'diff': 8.570899999999979e-05}, {'diff': 8.624999999999952e-05}, {'diff': 8.569400000000074e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:52.261" endtime="20201030 15:53:52.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:52.268" level="INFO">${ACCURACY} = {'diff': [8.622299999999986e-05, 8.563900000000194e-05, 8.586099999999958e-05, 8.570899999999979e-05, 8.624999999999952e-05, 8.569400000000074e-05, 8.626299999999962e-05, 8.640199999999931e-05, 8.5944...</msg>
<status status="PASS" starttime="20201030 15:53:52.265" endtime="20201030 15:53:52.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.273" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 15:53:52.272" endtime="20201030 15:53:52.273"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.275" level="INFO">VALUE: [8.622299999999986e-05, 8.563900000000194e-05, 8.586099999999958e-05, 8.570899999999979e-05, 8.624999999999952e-05, 8.569400000000074e-05, 8.626299999999962e-05, 8.640199999999931e-05, 8.594400000000099e-05, 8.602799999999841e-05, 8.61249999999994e-05, 8.57920000000012e-05, 8.634699999999704e-05, 8.570899999999979e-05, 8.641700000000183e-05, 8.624999999999952e-05, 8.59859999999997e-05, 8.570800000000031e-05, 8.605500000000155e-05, 8.64860000000002e-05, 8.599999999999927e-05, 8.609700000000026e-05, 8.652799999999891e-05, 8.555600000000052e-05, 8.6153000000002e-05, 8.637499999999965e-05, 8.641699999999836e-05, 8.568100000000065e-05, 8.6153000000002e-05, 8.654199999999848e-05, 8.552699999999844e-05, 8.613899999999897e-05, 8.558300000000019e-05, 8.601400000000231e-05, 8.557000000000009e-05, 8.561099999999933e-05, 8.607000000000059e-05, 8.630600000000127e-05, 8.611099999999983e-05, 8.606899999999765e-05, 8.591700000000133e-05, 8.638900000000269e-05, 8.579100000000173e-05, 8.572199999999988e-05, 8.601399999999884e-05, 8.620800000000081e-05, 8.604200000000145e-05, 8.637499999999965e-05, 8.636100000000008e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201030 15:53:52.274" endtime="20201030 15:53:52.280"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.269" endtime="20201030 15:53:52.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:52.284" endtime="20201030 15:53:52.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.282" endtime="20201030 15:53:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.281" endtime="20201030 15:53:52.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.918" endtime="20201030 15:53:52.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:51.917" endtime="20201030 15:53:52.305"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.314" endtime="20201030 15:53:52.334"></status>
</kw>
<msg timestamp="20201030 15:53:52.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.312" endtime="20201030 15:53:52.334"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.337" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.335" endtime="20201030 15:53:52.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.338" endtime="20201030 15:53:52.339"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.309" endtime="20201030 15:53:52.340"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.307" endtime="20201030 15:53:52.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.347" endtime="20201030 15:53:52.633"></status>
</kw>
<msg timestamp="20201030 15:53:52.636" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020619944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.345" endtime="20201030 15:53:52.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020619944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020706833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.637" endtime="20201030 15:53:52.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.645" endtime="20201030 15:53:52.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.342" endtime="20201030 15:53:52.647"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.341" endtime="20201030 15:53:52.648"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:52.652" level="INFO">${RESULT} = [{'diff': 8.688899999999972e-05}, {'diff': 8.754099999999654e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.726400000000009e-05}, {'diff': 8.691700000000233e-05}, {'diff': 8.691700000000233e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:52.648" endtime="20201030 15:53:52.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:52.656" level="INFO">${ACCURACY} = {'diff': [8.688899999999972e-05, 8.754099999999654e-05, 8.673600000000045e-05, 8.726400000000009e-05, 8.691700000000233e-05, 8.691700000000233e-05, 8.655600000000152e-05, 8.676399999999959e-05, 8.6916...</msg>
<status status="PASS" starttime="20201030 15:53:52.653" endtime="20201030 15:53:52.656"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.660" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 15:53:52.659" endtime="20201030 15:53:52.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.663" level="INFO">VALUE: [8.688899999999972e-05, 8.754099999999654e-05, 8.673600000000045e-05, 8.726400000000009e-05, 8.691700000000233e-05, 8.691700000000233e-05, 8.655600000000152e-05, 8.676399999999959e-05, 8.691699999999886e-05, 8.727799999999966e-05, 8.736100000000108e-05, 8.669399999999827e-05, 8.686100000000058e-05, 8.663899999999947e-05, 8.701400000000331e-05, 8.709699999999779e-05, 8.69860000000007e-05, 8.747200000000163e-05, 8.71250000000004e-05, 8.669499999999775e-05, 8.701399999999984e-05, 8.718099999999868e-05, 8.663900000000294e-05, 8.743000000000292e-05, 8.679099999999926e-05, 8.690299999999929e-05, 8.727800000000313e-05, 8.694399999999852e-05, 8.68189999999984e-05, 8.71250000000004e-05, 8.687500000000015e-05, 8.743099999999893e-05, 8.683400000000091e-05, 8.668100000000165e-05, 8.694400000000199e-05, 8.73189999999989e-05, 8.666700000000208e-05, 8.663899999999947e-05, 8.669400000000174e-05, 8.669400000000174e-05, 8.727799999999966e-05, 8.688899999999972e-05, 8.736100000000108e-05, 8.723600000000095e-05, 8.683400000000091e-05, 8.691699999999886e-05, 8.719399999999877e-05, 8.686099999999711e-05, 8.713899999999997e-05, 8.716700000000258e-05]</msg>
<status status="PASS" starttime="20201030 15:53:52.661" endtime="20201030 15:53:52.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.657" endtime="20201030 15:53:52.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:52.669" endtime="20201030 15:53:52.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.667" endtime="20201030 15:53:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.666" endtime="20201030 15:53:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.306" endtime="20201030 15:53:52.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.305" endtime="20201030 15:53:52.689"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.698" endtime="20201030 15:53:52.718"></status>
</kw>
<msg timestamp="20201030 15:53:52.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.697" endtime="20201030 15:53:52.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:52.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:52.719" endtime="20201030 15:53:52.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.722" endtime="20201030 15:53:52.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.694" endtime="20201030 15:53:52.724"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.692" endtime="20201030 15:53:52.724"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:52.731" endtime="20201030 15:53:53.017"></status>
</kw>
<msg timestamp="20201030 15:53:53.020" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:52.729" endtime="20201030 15:53:53.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.021" endtime="20201030 15:53:53.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.029" endtime="20201030 15:53:53.030"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.726" endtime="20201030 15:53:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.725" endtime="20201030 15:53:53.031"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:53.035" level="INFO">${RESULT} = [{'diff': 8.819499999999925e-05}, {'diff': 8.834700000000251e-05}, {'diff': 8.798700000000118e-05}, {'diff': 8.831999999999937e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.770799999999884e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:53.032" endtime="20201030 15:53:53.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:53.040" level="INFO">${ACCURACY} = {'diff': [8.819499999999925e-05, 8.834700000000251e-05, 8.798700000000118e-05, 8.831999999999937e-05, 8.793099999999943e-05, 8.770799999999884e-05, 8.788900000000072e-05, 8.827800000000066e-05, 8.8221...</msg>
<status status="PASS" starttime="20201030 15:53:53.036" endtime="20201030 15:53:53.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.045" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 15:53:53.044" endtime="20201030 15:53:53.045"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.047" level="INFO">VALUE: [8.819499999999925e-05, 8.834700000000251e-05, 8.798700000000118e-05, 8.831999999999937e-05, 8.793099999999943e-05, 8.770799999999884e-05, 8.788900000000072e-05, 8.827800000000066e-05, 8.822199999999891e-05, 8.773600000000145e-05, 8.815300000000054e-05, 8.7944999999999e-05, 8.779199999999973e-05, 8.83059999999998e-05, 8.788900000000072e-05, 8.787499999999768e-05, 8.822199999999891e-05, 8.790200000000081e-05, 8.792999999999995e-05, 8.791600000000038e-05, 8.755599999999905e-05, 8.836099999999861e-05, 8.847199999999916e-05, 8.755600000000252e-05, 8.777800000000016e-05, 8.822199999999891e-05, 8.763900000000047e-05, 8.841600000000088e-05, 8.770799999999884e-05, 8.845799999999959e-05, 8.834700000000251e-05, 8.827800000000066e-05, 8.825000000000152e-05, 8.759699999999829e-05, 8.822200000000238e-05, 8.809799999999826e-05, 8.83059999999998e-05, 8.762499999999743e-05, 8.822199999999891e-05, 8.850000000000177e-05, 8.822199999999891e-05, 8.805500000000008e-05, 8.763900000000047e-05, 8.815300000000054e-05, 8.78059999999993e-05, 8.84860000000022e-05, 8.840200000000131e-05, 8.787500000000115e-05, 8.776400000000059e-05, 8.840300000000079e-05]</msg>
<status status="PASS" starttime="20201030 15:53:53.046" endtime="20201030 15:53:53.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.041" endtime="20201030 15:53:53.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:53.052" endtime="20201030 15:53:53.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.051" endtime="20201030 15:53:53.072"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.050" endtime="20201030 15:53:53.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.690" endtime="20201030 15:53:53.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:52.690" endtime="20201030 15:53:53.073"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.082" endtime="20201030 15:53:53.102"></status>
</kw>
<msg timestamp="20201030 15:53:53.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.080" endtime="20201030 15:53:53.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.104" endtime="20201030 15:53:53.106"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.106" endtime="20201030 15:53:53.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.078" endtime="20201030 15:53:53.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.075" endtime="20201030 15:53:53.109"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.115" endtime="20201030 15:53:53.402"></status>
</kw>
<msg timestamp="20201030 15:53:53.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.114" endtime="20201030 15:53:53.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020494639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.406" endtime="20201030 15:53:53.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.415" endtime="20201030 15:53:53.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.111" endtime="20201030 15:53:53.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.110" endtime="20201030 15:53:53.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:53.421" level="INFO">${RESULT} = [{'diff': 8.905500000000108e-05}, {'diff': 8.888799999999877e-05}, {'diff': 8.870799999999984e-05}, {'diff': 8.942999999999798e-05}, {'diff': 8.936099999999961e-05}, {'diff': 8.927800000000166e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:53.418" endtime="20201030 15:53:53.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:53.425" level="INFO">${ACCURACY} = {'diff': [8.905500000000108e-05, 8.888799999999877e-05, 8.870799999999984e-05, 8.942999999999798e-05, 8.936099999999961e-05, 8.927800000000166e-05, 8.86670000000006e-05, 8.884800000000248e-05, 8.86660...</msg>
<status status="PASS" starttime="20201030 15:53:53.422" endtime="20201030 15:53:53.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.430" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 15:53:53.429" endtime="20201030 15:53:53.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.432" level="INFO">VALUE: [8.905500000000108e-05, 8.888799999999877e-05, 8.870799999999984e-05, 8.942999999999798e-05, 8.936099999999961e-05, 8.927800000000166e-05, 8.86670000000006e-05, 8.884800000000248e-05, 8.866600000000113e-05, 8.947299999999964e-05, 8.907000000000012e-05, 8.940199999999884e-05, 8.876400000000159e-05, 8.922199999999991e-05, 8.906900000000065e-05, 8.872199999999941e-05, 8.902800000000141e-05, 8.88060000000003e-05, 8.926400000000209e-05, 8.873599999999898e-05, 8.856999999999962e-05, 8.898599999999923e-05, 8.902800000000141e-05, 8.913799999999902e-05, 8.944400000000102e-05, 8.906900000000065e-05, 8.884699999999954e-05, 8.904200000000098e-05, 8.948599999999973e-05, 8.858400000000266e-05, 8.912499999999893e-05, 8.938900000000222e-05, 8.94869999999992e-05, 8.890300000000129e-05, 8.909699999999979e-05, 8.923599999999948e-05, 8.890200000000181e-05, 8.926400000000209e-05, 8.91670000000011e-05, 8.894400000000052e-05, 8.915300000000154e-05, 8.936099999999961e-05, 8.858399999999919e-05, 8.912499999999893e-05, 8.920899999999982e-05, 8.870799999999984e-05, 8.858299999999972e-05, 8.91250000000024e-05, 8.915300000000154e-05, 8.901399999999837e-05]</msg>
<status status="PASS" starttime="20201030 15:53:53.431" endtime="20201030 15:53:53.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.426" endtime="20201030 15:53:53.433"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:53.437" endtime="20201030 15:53:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.435" endtime="20201030 15:53:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.434" endtime="20201030 15:53:53.457"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.074" endtime="20201030 15:53:53.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.073" endtime="20201030 15:53:53.458"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.467" endtime="20201030 15:53:53.487"></status>
</kw>
<msg timestamp="20201030 15:53:53.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.465" endtime="20201030 15:53:53.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.489" endtime="20201030 15:53:53.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.491" endtime="20201030 15:53:53.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.462" endtime="20201030 15:53:53.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.460" endtime="20201030 15:53:53.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.500" endtime="20201030 15:53:53.786"></status>
</kw>
<msg timestamp="20201030 15:53:53.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.499" endtime="20201030 15:53:53.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.797" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020617583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.790" endtime="20201030 15:53:53.797"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.798" endtime="20201030 15:53:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.496" endtime="20201030 15:53:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.494" endtime="20201030 15:53:53.801"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:53.804" level="INFO">${RESULT} = [{'diff': 8.972300000000336e-05}, {'diff': 9.016599999999916e-05}, {'diff': 8.990200000000281e-05}, {'diff': 8.96250000000029e-05}, {'diff': 8.976399999999912e-05}, {'diff': 9.023600000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:53.801" endtime="20201030 15:53:53.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:53.809" level="INFO">${ACCURACY} = {'diff': [8.972300000000336e-05, 9.016599999999916e-05, 8.990200000000281e-05, 8.96250000000029e-05, 8.976399999999912e-05, 9.023600000000048e-05, 9.03060000000018e-05, 8.986100000000011e-05, 8.994500...</msg>
<status status="PASS" starttime="20201030 15:53:53.805" endtime="20201030 15:53:53.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.813" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 15:53:53.812" endtime="20201030 15:53:53.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.816" level="INFO">VALUE: [8.972300000000336e-05, 9.016599999999916e-05, 8.990200000000281e-05, 8.96250000000029e-05, 8.976399999999912e-05, 9.023600000000048e-05, 9.03060000000018e-05, 8.986100000000011e-05, 8.9945000000001e-05, 9.036100000000061e-05, 9.01389999999995e-05, 9.023600000000048e-05, 8.983399999999697e-05, 8.991599999999891e-05, 8.975000000000302e-05, 8.994400000000152e-05, 9.015299999999907e-05, 8.976399999999912e-05, 8.977800000000216e-05, 8.99999999999998e-05, 8.983400000000044e-05, 9.045900000000107e-05, 9.01389999999995e-05, 8.958399999999672e-05, 9.03199999999979e-05, 9.01800000000022e-05, 9.002799999999894e-05, 8.980500000000183e-05, 9.032000000000137e-05, 9.047199999999769e-05, 8.998600000000023e-05, 8.955599999999758e-05, 8.988899999999925e-05, 9.020900000000082e-05, 9.006999999999765e-05, 9.016699999999864e-05, 8.9638999999999e-05, 8.990299999999882e-05, 9.006899999999818e-05, 9.005600000000155e-05, 8.988899999999925e-05, 9.020799999999787e-05, 8.998599999999676e-05, 8.977799999999869e-05, 9.03060000000018e-05, 9.019499999999778e-05, 9.020800000000134e-05, 8.979100000000226e-05, 9.0332999999998e-05, 9.027799999999919e-05]</msg>
<status status="PASS" starttime="20201030 15:53:53.814" endtime="20201030 15:53:53.817"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.809" endtime="20201030 15:53:53.818"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:53.821" endtime="20201030 15:53:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.820" endtime="20201030 15:53:53.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.819" endtime="20201030 15:53:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.459" endtime="20201030 15:53:53.842"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.458" endtime="20201030 15:53:53.842"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.851" endtime="20201030 15:53:53.869"></status>
</kw>
<msg timestamp="20201030 15:53:53.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.849" endtime="20201030 15:53:53.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:53.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:53.871" endtime="20201030 15:53:53.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.873" endtime="20201030 15:53:53.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.847" endtime="20201030 15:53:53.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.845" endtime="20201030 15:53:53.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:53.882" endtime="20201030 15:53:54.169"></status>
</kw>
<msg timestamp="20201030 15:53:54.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:53.881" endtime="20201030 15:53:54.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019429069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019519958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.173" endtime="20201030 15:53:54.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.181" endtime="20201030 15:53:54.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.878" endtime="20201030 15:53:54.183"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.877" endtime="20201030 15:53:54.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:54.187" level="INFO">${RESULT} = [{'diff': 9.088900000000025e-05}, {'diff': 9.115300000000007e-05}, {'diff': 9.106899999999918e-05}, {'diff': 9.073600000000098e-05}, {'diff': 9.098600000000123e-05}, {'diff': 9.093099999999896e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:54.184" endtime="20201030 15:53:54.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:54.192" level="INFO">${ACCURACY} = {'diff': [9.088900000000025e-05, 9.115300000000007e-05, 9.106899999999918e-05, 9.073600000000098e-05, 9.098600000000123e-05, 9.093099999999896e-05, 9.077799999999969e-05, 9.130599999999933e-05, 9.1444...</msg>
<status status="PASS" starttime="20201030 15:53:54.188" endtime="20201030 15:53:54.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.197" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 15:53:54.196" endtime="20201030 15:53:54.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.199" level="INFO">VALUE: [9.088900000000025e-05, 9.115300000000007e-05, 9.106899999999918e-05, 9.073600000000098e-05, 9.098600000000123e-05, 9.093099999999896e-05, 9.077799999999969e-05, 9.130599999999933e-05, 9.144499999999903e-05, 9.104100000000004e-05, 9.09870000000007e-05, 9.127699999999725e-05, 9.10000000000008e-05, 9.145799999999912e-05, 9.087500000000068e-05, 9.11520000000006e-05, 9.143099999999946e-05, 9.094499999999853e-05, 9.08199999999984e-05, 9.143099999999946e-05, 9.06520000000001e-05, 9.119400000000277e-05, 9.108299999999875e-05, 9.120799999999887e-05, 9.113899999999703e-05, 9.140300000000032e-05, 9.091699999999939e-05, 9.161100000000186e-05, 9.10000000000008e-05, 9.101400000000037e-05, 9.141699999999989e-05, 9.068099999999871e-05, 9.054099999999954e-05, 9.055500000000258e-05, 9.094399999999905e-05, 9.08329999999985e-05, 9.098600000000123e-05, 9.084700000000154e-05, 9.073600000000098e-05, 9.061100000000086e-05, 9.101400000000037e-05, 9.063800000000052e-05, 9.129100000000029e-05, 9.102700000000047e-05, 9.122200000000191e-05, 9.124999999999758e-05, 9.116699999999964e-05, 9.08329999999985e-05, 9.061100000000086e-05, 9.141699999999989e-05]</msg>
<status status="PASS" starttime="20201030 15:53:54.198" endtime="20201030 15:53:54.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.193" endtime="20201030 15:53:54.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.204" endtime="20201030 15:53:54.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.203" endtime="20201030 15:53:54.224"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.202" endtime="20201030 15:53:54.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.843" endtime="20201030 15:53:54.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:53.843" endtime="20201030 15:53:54.225"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.234" endtime="20201030 15:53:54.254"></status>
</kw>
<msg timestamp="20201030 15:53:54.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.232" endtime="20201030 15:53:54.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.255" endtime="20201030 15:53:54.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.258" endtime="20201030 15:53:54.259"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.230" endtime="20201030 15:53:54.260"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.228" endtime="20201030 15:53:54.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.267" endtime="20201030 15:53:54.557"></status>
</kw>
<msg timestamp="20201030 15:53:54.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.265" endtime="20201030 15:53:54.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.561" endtime="20201030 15:53:54.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.569" endtime="20201030 15:53:54.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.262" endtime="20201030 15:53:54.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.261" endtime="20201030 15:53:54.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:54.575" level="INFO">${RESULT} = [{'diff': 9.24719999999997e-05}, {'diff': 9.248599999999926e-05}, {'diff': 9.216600000000116e-05}, {'diff': 9.251400000000187e-05}, {'diff': 9.187499999999821e-05}, {'diff': 9.20000000000018e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:54.572" endtime="20201030 15:53:54.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:54.580" level="INFO">${ACCURACY} = {'diff': [9.24719999999997e-05, 9.248599999999926e-05, 9.216600000000116e-05, 9.251400000000187e-05, 9.187499999999821e-05, 9.20000000000018e-05, 9.168000000000023e-05, 9.179200000000026e-05, 9.220799...</msg>
<status status="PASS" starttime="20201030 15:53:54.576" endtime="20201030 15:53:54.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.584" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 15:53:54.583" endtime="20201030 15:53:54.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.586" level="INFO">VALUE: [9.24719999999997e-05, 9.248599999999926e-05, 9.216600000000116e-05, 9.251400000000187e-05, 9.187499999999821e-05, 9.20000000000018e-05, 9.168000000000023e-05, 9.179200000000026e-05, 9.220799999999987e-05, 9.157000000000262e-05, 9.206999999999965e-05, 9.186099999999864e-05, 9.241700000000089e-05, 9.206999999999965e-05, 9.177700000000122e-05, 9.208299999999975e-05, 9.241600000000141e-05, 9.241600000000141e-05, 9.238900000000175e-05, 9.177800000000069e-05, 9.19589999999991e-05, 9.227800000000119e-05, 9.207000000000312e-05, 9.161200000000133e-05, 9.195799999999962e-05, 9.226299999999868e-05, 9.177799999999722e-05, 9.168000000000023e-05, 9.218000000000073e-05, 9.194400000000005e-05, 9.165300000000057e-05, 9.219499999999978e-05, 9.157000000000262e-05, 9.205600000000008e-05, 9.162500000000143e-05, 9.184799999999854e-05, 9.237500000000218e-05, 9.211099999999889e-05, 9.227800000000119e-05, 9.193099999999996e-05, 9.212500000000193e-05, 9.236099999999914e-05, 9.172199999999894e-05, 9.234699999999957e-05, 9.172300000000189e-05, 9.208399999999922e-05, 9.209800000000226e-05, 9.188900000000125e-05, 9.241599999999794e-05, 9.243100000000046e-05]</msg>
<status status="PASS" starttime="20201030 15:53:54.585" endtime="20201030 15:53:54.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.580" endtime="20201030 15:53:54.588"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.591" endtime="20201030 15:53:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.590" endtime="20201030 15:53:54.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.589" endtime="20201030 15:53:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.226" endtime="20201030 15:53:54.612"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.225" endtime="20201030 15:53:54.612"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.621" endtime="20201030 15:53:54.640"></status>
</kw>
<msg timestamp="20201030 15:53:54.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.619" endtime="20201030 15:53:54.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:54.641" endtime="20201030 15:53:54.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.644" endtime="20201030 15:53:54.645"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.617" endtime="20201030 15:53:54.646"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.614" endtime="20201030 15:53:54.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.652" endtime="20201030 15:53:54.937"></status>
</kw>
<msg timestamp="20201030 15:53:54.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.651" endtime="20201030 15:53:54.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020817944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020910681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:54.941" endtime="20201030 15:53:54.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:54.950" endtime="20201030 15:53:54.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.648" endtime="20201030 15:53:54.952"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.647" endtime="20201030 15:53:54.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:54.956" level="INFO">${RESULT} = [{'diff': 9.273699999999899e-05}, {'diff': 9.304200000000151e-05}, {'diff': 9.327800000000219e-05}, {'diff': 9.340299999999885e-05}, {'diff': 9.270899999999985e-05}, {'diff': 9.326399999999915e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:54.953" endtime="20201030 15:53:54.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:54.960" level="INFO">${ACCURACY} = {'diff': [9.273699999999899e-05, 9.304200000000151e-05, 9.327800000000219e-05, 9.340299999999885e-05, 9.270899999999985e-05, 9.326399999999915e-05, 9.340300000000232e-05, 9.309700000000032e-05, 9.3153...</msg>
<status status="PASS" starttime="20201030 15:53:54.957" endtime="20201030 15:53:54.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.965" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 15:53:54.964" endtime="20201030 15:53:54.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:54.967" level="INFO">VALUE: [9.273699999999899e-05, 9.304200000000151e-05, 9.327800000000219e-05, 9.340299999999885e-05, 9.270899999999985e-05, 9.326399999999915e-05, 9.340300000000232e-05, 9.309700000000032e-05, 9.315300000000207e-05, 9.309700000000032e-05, 9.294500000000053e-05, 9.291700000000139e-05, 9.322299999999992e-05, 9.331899999999796e-05, 9.320800000000087e-05, 9.277799999999822e-05, 9.317999999999826e-05, 9.28330000000005e-05, 9.273599999999951e-05, 9.34720000000007e-05, 9.277799999999822e-05, 9.293100000000096e-05, 9.322300000000339e-05, 9.280500000000136e-05, 9.259699999999982e-05, 9.317999999999826e-05, 9.329199999999829e-05, 9.320800000000087e-05, 9.284700000000007e-05, 9.336100000000014e-05, 9.322200000000044e-05, 9.343099999999799e-05, 9.324999999999958e-05, 9.298599999999976e-05, 9.28330000000005e-05, 9.263899999999853e-05, 9.305499999999814e-05, 9.26940000000008e-05, 9.35139999999994e-05, 9.349999999999983e-05, 9.272299999999942e-05, 9.352799999999897e-05, 9.31529999999986e-05, 9.258400000000319e-05, 9.261099999999939e-05, 9.284700000000007e-05, 9.316700000000164e-05, 9.322199999999697e-05, 9.333299999999753e-05, 9.334700000000057e-05]</msg>
<status status="PASS" starttime="20201030 15:53:54.966" endtime="20201030 15:53:54.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.961" endtime="20201030 15:53:54.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:54.973" endtime="20201030 15:53:54.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.972" endtime="20201030 15:53:54.993"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.970" endtime="20201030 15:53:54.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.613" endtime="20201030 15:53:54.994"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.612" endtime="20201030 15:53:54.994"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.004" endtime="20201030 15:53:55.023"></status>
</kw>
<msg timestamp="20201030 15:53:55.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.002" endtime="20201030 15:53:55.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.026" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.024" endtime="20201030 15:53:55.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.027" endtime="20201030 15:53:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.999" endtime="20201030 15:53:55.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.997" endtime="20201030 15:53:55.030"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.036" endtime="20201030 15:53:55.321"></status>
</kw>
<msg timestamp="20201030 15:53:55.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021026875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.034" endtime="20201030 15:53:55.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020933333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021026875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.325" endtime="20201030 15:53:55.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.333" endtime="20201030 15:53:55.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.032" endtime="20201030 15:53:55.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.030" endtime="20201030 15:53:55.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.340" level="INFO">${RESULT} = [{'diff': 9.354200000000201e-05}, {'diff': 9.394399999999858e-05}, {'diff': 9.372199999999747e-05}, {'diff': 9.419499999999831e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.408400000000122e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:55.336" endtime="20201030 15:53:55.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:55.345" level="INFO">${ACCURACY} = {'diff': [9.354200000000201e-05, 9.394399999999858e-05, 9.372199999999747e-05, 9.419499999999831e-05, 9.380600000000183e-05, 9.408400000000122e-05, 9.376300000000018e-05, 9.41659999999997e-05, 9.41940...</msg>
<status status="PASS" starttime="20201030 15:53:55.341" endtime="20201030 15:53:55.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.349" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 15:53:55.348" endtime="20201030 15:53:55.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.351" level="INFO">VALUE: [9.354200000000201e-05, 9.394399999999858e-05, 9.372199999999747e-05, 9.419499999999831e-05, 9.380600000000183e-05, 9.408400000000122e-05, 9.376300000000018e-05, 9.41659999999997e-05, 9.41940000000023e-05, 9.437500000000071e-05, 9.368000000000223e-05, 9.431900000000243e-05, 9.413900000000003e-05, 9.448600000000126e-05, 9.398600000000076e-05, 9.440299999999985e-05, 9.411200000000036e-05, 9.442999999999951e-05, 9.380499999999889e-05, 9.444399999999908e-05, 9.39720000000012e-05, 9.450000000000083e-05, 9.433299999999853e-05, 9.423600000000101e-05, 9.423600000000101e-05, 9.425000000000058e-05, 9.379200000000226e-05, 9.392999999999901e-05, 9.441599999999994e-05, 9.437500000000071e-05, 9.388899999999978e-05, 9.437500000000071e-05, 9.397199999999772e-05, 9.368100000000171e-05, 9.404200000000251e-05, 9.366699999999867e-05, 9.370900000000085e-05, 9.440299999999985e-05, 9.4333000000002e-05, 9.423600000000101e-05, 9.422199999999797e-05, 9.402799999999947e-05, 9.416700000000264e-05, 9.408300000000175e-05, 9.359700000000082e-05, 9.426400000000015e-05, 9.362499999999996e-05, 9.41659999999997e-05, 9.407000000000165e-05, 9.431899999999896e-05]</msg>
<status status="PASS" starttime="20201030 15:53:55.350" endtime="20201030 15:53:55.352"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.345" endtime="20201030 15:53:55.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.356" endtime="20201030 15:53:55.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.355" endtime="20201030 15:53:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.354" endtime="20201030 15:53:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.995" endtime="20201030 15:53:55.377"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:54.994" endtime="20201030 15:53:55.377"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.386" endtime="20201030 15:53:55.405"></status>
</kw>
<msg timestamp="20201030 15:53:55.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.384" endtime="20201030 15:53:55.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.407" endtime="20201030 15:53:55.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.410" endtime="20201030 15:53:55.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.382" endtime="20201030 15:53:55.412"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.380" endtime="20201030 15:53:55.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.419" endtime="20201030 15:53:55.706"></status>
</kw>
<msg timestamp="20201030 15:53:55.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.417" endtime="20201030 15:53:55.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019583958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019678514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.710" endtime="20201030 15:53:55.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.718" endtime="20201030 15:53:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.414" endtime="20201030 15:53:55.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.413" endtime="20201030 15:53:55.721"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:55.724" level="INFO">${RESULT} = [{'diff': 9.455600000000258e-05}, {'diff': 9.461100000000139e-05}, {'diff': 9.491699999999992e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.477800000000022e-05}, {'diff': 9.509699999999885e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:55.721" endtime="20201030 15:53:55.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:55.729" level="INFO">${ACCURACY} = {'diff': [9.455600000000258e-05, 9.461100000000139e-05, 9.491699999999992e-05, 9.52079999999994e-05, 9.477800000000022e-05, 9.509699999999885e-05, 9.502699999999753e-05, 9.486100000000164e-05, 9.52080...</msg>
<status status="PASS" starttime="20201030 15:53:55.725" endtime="20201030 15:53:55.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.733" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 15:53:55.732" endtime="20201030 15:53:55.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.735" level="INFO">VALUE: [9.455600000000258e-05, 9.461100000000139e-05, 9.491699999999992e-05, 9.52079999999994e-05, 9.477800000000022e-05, 9.509699999999885e-05, 9.502699999999753e-05, 9.486100000000164e-05, 9.520800000000287e-05, 9.473600000000151e-05, 9.458299999999878e-05, 9.505599999999961e-05, 9.500000000000133e-05, 9.469399999999933e-05, 9.488900000000078e-05, 9.506900000000318e-05, 9.508299999999928e-05, 9.488899999999731e-05, 9.49859999999983e-05, 9.523599999999854e-05, 9.463899999999706e-05, 9.515200000000112e-05, 9.516700000000017e-05, 9.519499999999931e-05, 9.487500000000121e-05, 9.484700000000207e-05, 9.512500000000146e-05, 9.473599999999804e-05, 9.491600000000044e-05, 9.550000000000183e-05, 9.506899999999971e-05, 9.484700000000207e-05, 9.518100000000321e-05, 9.466699999999967e-05, 9.523600000000201e-05, 9.529200000000029e-05, 9.543000000000051e-05, 9.554100000000107e-05, 9.51530000000006e-05, 9.511099999999842e-05, 9.509799999999832e-05, 9.484700000000207e-05, 9.513900000000103e-05, 9.481899999999946e-05, 9.462500000000096e-05, 9.466699999999967e-05, 9.500000000000133e-05, 9.543000000000051e-05, 9.54720000000027e-05, 9.518000000000026e-05]</msg>
<status status="PASS" starttime="20201030 15:53:55.734" endtime="20201030 15:53:55.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.730" endtime="20201030 15:53:55.737"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:55.741" endtime="20201030 15:53:55.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.739" endtime="20201030 15:53:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.738" endtime="20201030 15:53:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.378" endtime="20201030 15:53:55.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.378" endtime="20201030 15:53:55.761"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.770" endtime="20201030 15:53:55.790"></status>
</kw>
<msg timestamp="20201030 15:53:55.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.769" endtime="20201030 15:53:55.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:55.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:55.792" endtime="20201030 15:53:55.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.794" endtime="20201030 15:53:55.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.766" endtime="20201030 15:53:55.796"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.764" endtime="20201030 15:53:55.797"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:55.803" endtime="20201030 15:53:56.089"></status>
</kw>
<msg timestamp="20201030 15:53:56.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020736694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:55.802" endtime="20201030 15:53:56.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020640208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020736694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.093" endtime="20201030 15:53:56.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.101" endtime="20201030 15:53:56.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.799" endtime="20201030 15:53:56.104"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.797" endtime="20201030 15:53:56.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.108" level="INFO">${RESULT} = [{'diff': 9.64859999999998e-05}, {'diff': 9.577700000000175e-05}, {'diff': 9.62080000000004e-05}, {'diff': 9.641600000000194e-05}, {'diff': 9.623600000000301e-05}, {'diff': 9.645900000000013e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:53:56.105" endtime="20201030 15:53:56.108"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:56.112" level="INFO">${ACCURACY} = {'diff': [9.64859999999998e-05, 9.577700000000175e-05, 9.62080000000004e-05, 9.641600000000194e-05, 9.623600000000301e-05, 9.645900000000013e-05, 9.57079999999999e-05, 9.59859999999993e-05, 9.60700000...</msg>
<status status="PASS" starttime="20201030 15:53:56.109" endtime="20201030 15:53:56.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.116" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 15:53:56.115" endtime="20201030 15:53:56.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.119" level="INFO">VALUE: [9.64859999999998e-05, 9.577700000000175e-05, 9.62080000000004e-05, 9.641600000000194e-05, 9.623600000000301e-05, 9.645900000000013e-05, 9.57079999999999e-05, 9.59859999999993e-05, 9.607000000000018e-05, 9.61530000000016e-05, 9.579200000000079e-05, 9.61799999999978e-05, 9.627699999999878e-05, 9.579100000000132e-05, 9.555500000000064e-05, 9.583300000000003e-05, 9.608300000000028e-05, 9.601399999999843e-05, 9.636099999999967e-05, 9.613900000000203e-05, 9.640299999999838e-05, 9.59019999999984e-05, 9.59859999999993e-05, 9.58469999999996e-05, 9.643000000000151e-05, 9.58469999999996e-05, 9.604200000000104e-05, 9.59859999999993e-05, 9.572199999999947e-05, 9.615199999999866e-05, 9.65279999999985e-05, 9.615299999999813e-05, 9.641599999999848e-05, 9.608300000000028e-05, 9.558299999999978e-05, 9.555499999999717e-05, 9.619399999999736e-05, 9.65279999999985e-05, 9.594500000000006e-05, 9.570899999999938e-05, 9.593000000000101e-05, 9.609799999999932e-05, 9.581900000000046e-05, 9.63470000000001e-05, 9.55279999999975e-05, 9.580499999999742e-05, 9.63470000000001e-05, 9.56530000000011e-05, 9.645800000000065e-05, 9.580600000000036e-05]</msg>
<status status="PASS" starttime="20201030 15:53:56.118" endtime="20201030 15:53:56.121"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.113" endtime="20201030 15:53:56.121"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.125" endtime="20201030 15:53:56.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.123" endtime="20201030 15:53:56.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.122" endtime="20201030 15:53:56.145"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.762" endtime="20201030 15:53:56.146"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:55.762" endtime="20201030 15:53:56.146"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.154" endtime="20201030 15:53:56.175"></status>
</kw>
<msg timestamp="20201030 15:53:56.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.153" endtime="20201030 15:53:56.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.176" endtime="20201030 15:53:56.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.179" endtime="20201030 15:53:56.180"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.150" endtime="20201030 15:53:56.181"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.148" endtime="20201030 15:53:56.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.188" endtime="20201030 15:53:56.474"></status>
</kw>
<msg timestamp="20201030 15:53:56.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.187" endtime="20201030 15:53:56.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020375097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020472417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.479" endtime="20201030 15:53:56.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.487" endtime="20201030 15:53:56.488"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.184" endtime="20201030 15:53:56.489"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.182" endtime="20201030 15:53:56.489"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.493" level="INFO">${RESULT} = [{'diff': 9.731999999999796e-05}, {'diff': 9.723599999999707e-05}, {'diff': 9.750000000000036e-05}, {'diff': 9.741699999999895e-05}, {'diff': 9.716700000000217e-05}, {'diff': 9.674999999999961e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:53:56.490" endtime="20201030 15:53:56.493"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:56.498" level="INFO">${ACCURACY} = {'diff': [9.731999999999796e-05, 9.723599999999707e-05, 9.750000000000036e-05, 9.741699999999895e-05, 9.716700000000217e-05, 9.674999999999961e-05, 9.756999999999821e-05, 9.742999999999905e-05, 9.6805...</msg>
<status status="PASS" starttime="20201030 15:53:56.494" endtime="20201030 15:53:56.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.503" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 15:53:56.502" endtime="20201030 15:53:56.503"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.505" level="INFO">VALUE: [9.731999999999796e-05, 9.723599999999707e-05, 9.750000000000036e-05, 9.741699999999895e-05, 9.716700000000217e-05, 9.674999999999961e-05, 9.756999999999821e-05, 9.742999999999905e-05, 9.68059999999979e-05, 9.719500000000131e-05, 9.751399999999993e-05, 9.715299999999913e-05, 9.694500000000106e-05, 9.741699999999895e-05, 9.750000000000036e-05, 9.715299999999913e-05, 9.747200000000122e-05, 9.730600000000186e-05, 9.733299999999806e-05, 9.7027999999999e-05, 9.741700000000242e-05, 9.708300000000128e-05, 9.750000000000036e-05, 9.677800000000222e-05, 9.69019999999994e-05, 9.673600000000004e-05, 9.691600000000244e-05, 9.71669999999987e-05, 9.676399999999918e-05, 9.716700000000217e-05, 9.711100000000042e-05, 9.715299999999913e-05, 9.672299999999995e-05, 9.7334000000001e-05, 9.748599999999732e-05, 9.69019999999994e-05, 9.74860000000008e-05, 9.736100000000067e-05, 9.666700000000167e-05, 9.727799999999925e-05, 9.674999999999961e-05, 9.688899999999931e-05, 9.674999999999961e-05, 9.755499999999917e-05, 9.688899999999931e-05, 9.66660000000022e-05, 9.67080000000009e-05, 9.713899999999956e-05, 9.686100000000017e-05, 9.747200000000122e-05]</msg>
<status status="PASS" starttime="20201030 15:53:56.504" endtime="20201030 15:53:56.506"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.499" endtime="20201030 15:53:56.506"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.510" endtime="20201030 15:53:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.509" endtime="20201030 15:53:56.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.508" endtime="20201030 15:53:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.147" endtime="20201030 15:53:56.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.146" endtime="20201030 15:53:56.531"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.540" endtime="20201030 15:53:56.560"></status>
</kw>
<msg timestamp="20201030 15:53:56.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.538" endtime="20201030 15:53:56.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.561" endtime="20201030 15:53:56.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.564" endtime="20201030 15:53:56.565"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.535" endtime="20201030 15:53:56.566"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.533" endtime="20201030 15:53:56.566"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.573" endtime="20201030 15:53:56.860"></status>
</kw>
<msg timestamp="20201030 15:53:56.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.571" endtime="20201030 15:53:56.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020334972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.864" endtime="20201030 15:53:56.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.872" endtime="20201030 15:53:56.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.569" endtime="20201030 15:53:56.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.567" endtime="20201030 15:53:56.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:56.878" level="INFO">${RESULT} = [{'diff': 9.770900000000138e-05}, {'diff': 9.815300000000013e-05}, {'diff': 9.772200000000147e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.78470000000016e-05}, {'diff': 9.794499999999859e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:56.875" endtime="20201030 15:53:56.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:56.883" level="INFO">${ACCURACY} = {'diff': [9.770900000000138e-05, 9.815300000000013e-05, 9.772200000000147e-05, 9.809699999999838e-05, 9.78470000000016e-05, 9.794499999999859e-05, 9.85280000000005e-05, 9.79860000000013e-05, 9.8097000...</msg>
<status status="PASS" starttime="20201030 15:53:56.879" endtime="20201030 15:53:56.883"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.887" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 15:53:56.886" endtime="20201030 15:53:56.887"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.890" level="INFO">VALUE: [9.770900000000138e-05, 9.815300000000013e-05, 9.772200000000147e-05, 9.809699999999838e-05, 9.78470000000016e-05, 9.794499999999859e-05, 9.85280000000005e-05, 9.79860000000013e-05, 9.809700000000185e-05, 9.809699999999838e-05, 9.790299999999988e-05, 9.82080000000024e-05, 9.798599999999782e-05, 9.804199999999957e-05, 9.794500000000206e-05, 9.757000000000168e-05, 9.851400000000093e-05, 9.801299999999749e-05, 9.816600000000023e-05, 9.781900000000246e-05, 9.800000000000086e-05, 9.7721999999998e-05, 9.78059999999989e-05, 9.834800000000157e-05, 9.827800000000025e-05, 9.775000000000061e-05, 9.798599999999782e-05, 9.788799999999737e-05, 9.795799999999869e-05, 9.783300000000203e-05, 9.833299999999906e-05, 9.811100000000142e-05, 9.791699999999945e-05, 9.76669999999992e-05, 9.791699999999945e-05, 9.770900000000138e-05, 9.781999999999846e-05, 9.773700000000052e-05, 9.781900000000246e-05, 9.81799999999998e-05, 9.770799999999843e-05, 9.845799999999919e-05, 9.85280000000005e-05, 9.809700000000185e-05, 9.812500000000099e-05, 9.83059999999994e-05, 9.794499999999859e-05, 9.83470000000021e-05, 9.801300000000096e-05, 9.837500000000124e-05]</msg>
<status status="PASS" starttime="20201030 15:53:56.888" endtime="20201030 15:53:56.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.883" endtime="20201030 15:53:56.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:56.894" endtime="20201030 15:53:56.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.893" endtime="20201030 15:53:56.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.892" endtime="20201030 15:53:56.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.532" endtime="20201030 15:53:56.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.531" endtime="20201030 15:53:56.915"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.924" endtime="20201030 15:53:56.944"></status>
</kw>
<msg timestamp="20201030 15:53:56.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.922" endtime="20201030 15:53:56.945"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:56.947" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:56.946" endtime="20201030 15:53:56.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.948" endtime="20201030 15:53:56.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.920" endtime="20201030 15:53:56.950"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.918" endtime="20201030 15:53:56.951"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:56.957" endtime="20201030 15:53:57.242"></status>
</kw>
<msg timestamp="20201030 15:53:57.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:56.956" endtime="20201030 15:53:57.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020991181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021090653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.247" endtime="20201030 15:53:57.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.255" endtime="20201030 15:53:57.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.953" endtime="20201030 15:53:57.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.951" endtime="20201030 15:53:57.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.261" level="INFO">${RESULT} = [{'diff': 9.947199999999976e-05}, {'diff': 9.888899999999784e-05}, {'diff': 9.861100000000192e-05}, {'diff': 9.858300000000278e-05}, {'diff': 9.89999999999984e-05}, {'diff': 9.887500000000174e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:57.258" endtime="20201030 15:53:57.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:57.266" level="INFO">${ACCURACY} = {'diff': [9.947199999999976e-05, 9.888899999999784e-05, 9.861100000000192e-05, 9.858300000000278e-05, 9.89999999999984e-05, 9.887500000000174e-05, 9.93609999999992e-05, 9.895799999999969e-05, 9.930500...</msg>
<status status="PASS" starttime="20201030 15:53:57.262" endtime="20201030 15:53:57.266"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.270" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 15:53:57.269" endtime="20201030 15:53:57.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.273" level="INFO">VALUE: [9.947199999999976e-05, 9.888899999999784e-05, 9.861100000000192e-05, 9.858300000000278e-05, 9.89999999999984e-05, 9.887500000000174e-05, 9.93609999999992e-05, 9.895799999999969e-05, 9.930500000000092e-05, 9.941600000000148e-05, 9.919400000000037e-05, 9.904200000000057e-05, 9.888900000000131e-05, 9.898599999999882e-05, 9.858400000000225e-05, 9.952699999999856e-05, 9.895799999999969e-05, 9.923599999999907e-05, 9.880500000000042e-05, 9.890300000000088e-05, 9.84999999999979e-05, 9.877799999999728e-05, 9.906999999999971e-05, 9.858299999999931e-05, 9.888899999999784e-05, 9.863900000000106e-05, 9.936199999999867e-05, 9.915199999999819e-05, 9.898599999999882e-05, 9.931900000000049e-05, 9.90410000000011e-05, 9.883299999999956e-05, 9.923599999999907e-05, 9.870900000000238e-05, 9.94860000000028e-05, 9.876400000000118e-05, 9.908299999999981e-05, 9.876300000000171e-05, 9.93609999999992e-05, 9.933300000000006e-05, 9.908299999999981e-05, 9.943000000000105e-05, 9.912499999999852e-05, 9.913900000000156e-05, 9.91809999999968e-05, 9.94999999999989e-05, 9.891600000000098e-05, 9.952699999999856e-05, 9.934699999999963e-05, 9.916600000000123e-05]</msg>
<status status="PASS" starttime="20201030 15:53:57.271" endtime="20201030 15:53:57.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.267" endtime="20201030 15:53:57.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.283" endtime="20201030 15:53:57.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.282" endtime="20201030 15:53:57.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.281" endtime="20201030 15:53:57.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.916" endtime="20201030 15:53:57.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:56.916" endtime="20201030 15:53:57.304"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.313" endtime="20201030 15:53:57.332"></status>
</kw>
<msg timestamp="20201030 15:53:57.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.311" endtime="20201030 15:53:57.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.334" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.333" endtime="20201030 15:53:57.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.335" endtime="20201030 15:53:57.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.309" endtime="20201030 15:53:57.338"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.307" endtime="20201030 15:53:57.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.344" endtime="20201030 15:53:57.630"></status>
</kw>
<msg timestamp="20201030 15:53:57.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.343" endtime="20201030 15:53:57.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019852819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:57.634" endtime="20201030 15:53:57.641"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.642" endtime="20201030 15:53:57.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.340" endtime="20201030 15:53:57.644"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.339" endtime="20201030 15:53:57.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:57.648" level="INFO">${RESULT} = [{'diff': 9.976299999999924e-05}, {'diff': 9.976399999999871e-05}, {'diff': 9.988799999999937e-05}, {'diff': 0.000100415999999999}, {'diff': 0.0001004999999999999}, {'diff': 9.987499999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:53:57.645" endtime="20201030 15:53:57.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:57.653" level="INFO">${ACCURACY} = {'diff': [9.976299999999924e-05, 9.976399999999871e-05, 9.988799999999937e-05, 0.000100415999999999, 0.0001004999999999999, 9.987499999999927e-05, 9.965300000000163e-05, 0.00010002799999999853, 9.9722...</msg>
<status status="PASS" starttime="20201030 15:53:57.649" endtime="20201030 15:53:57.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.658" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 15:53:57.657" endtime="20201030 15:53:57.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.660" level="INFO">VALUE: [9.976299999999924e-05, 9.976399999999871e-05, 9.988799999999937e-05, 0.000100415999999999, 0.0001004999999999999, 9.987499999999927e-05, 9.965300000000163e-05, 0.00010002799999999853, 9.9722e-05, 9.990300000000188e-05, 0.00010034700000000063, 0.00010022299999999998, 0.00010019400000000137, 9.984700000000013e-05, 9.990300000000188e-05, 0.00010041700000000195, 9.983300000000056e-05, 9.96670000000012e-05, 0.00010034700000000063, 0.0001005280000000025, 9.954200000000107e-05, 0.00010012499999999952, 9.956899999999727e-05, 9.995800000000069e-05, 9.983300000000056e-05, 0.00010024999999999964, 0.00010029200000000182, 0.00010045800000000119, 0.00010004099999999863, 9.994500000000059e-05, 9.974999999999914e-05, 0.00010020800000000094, 9.956899999999727e-05, 9.976399999999871e-05, 9.998599999999983e-05, 0.00010022299999999998, 9.962499999999902e-05, 9.993100000000102e-05, 0.00010027799999999878, 0.00010020900000000041, 0.00010051299999999999, 9.979199999999785e-05, 9.966600000000173e-05, 0.00010033299999999759, 9.96800000000013e-05, 0.0001002220000000005, 0.00010034700000000063, 0.00010043100000000152, 0.00010020900000000041, 9.955600000000064e-05]</msg>
<status status="PASS" starttime="20201030 15:53:57.659" endtime="20201030 15:53:57.661"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.654" endtime="20201030 15:53:57.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:57.665" endtime="20201030 15:53:57.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.664" endtime="20201030 15:53:57.685"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.663" endtime="20201030 15:53:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.305" endtime="20201030 15:53:57.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.304" endtime="20201030 15:53:57.686"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.695" endtime="20201030 15:53:57.715"></status>
</kw>
<msg timestamp="20201030 15:53:57.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.693" endtime="20201030 15:53:57.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:57.718" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:57.716" endtime="20201030 15:53:57.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.719" endtime="20201030 15:53:57.720"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.691" endtime="20201030 15:53:57.721"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.689" endtime="20201030 15:53:57.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:57.728" endtime="20201030 15:53:58.019"></status>
</kw>
<msg timestamp="20201030 15:53:58.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019524431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:57.726" endtime="20201030 15:53:58.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019423, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019524431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:53:58.023" endtime="20201030 15:53:58.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.031" endtime="20201030 15:53:58.033"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.724" endtime="20201030 15:53:58.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.722" endtime="20201030 15:53:58.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.038" level="INFO">${RESULT} = [{'diff': 0.00010143099999999905}, {'diff': 0.000101416}, {'diff': 0.00010156999999999874}, {'diff': 0.00010098600000000083}, {'diff': 0.00010097200000000126}, {'diff': 0.00010148599999999786}, {'diff...</msg>
<status status="PASS" starttime="20201030 15:53:58.035" endtime="20201030 15:53:58.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:58.043" level="INFO">${ACCURACY} = {'diff': [0.00010143099999999905, 0.000101416, 0.00010156999999999874, 0.00010098600000000083, 0.00010097200000000126, 0.00010148599999999786, 0.00010058300000000131, 0.0001013199999999985, 0.00010059...</msg>
<status status="PASS" starttime="20201030 15:53:58.039" endtime="20201030 15:53:58.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.047" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 15:53:58.046" endtime="20201030 15:53:58.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.050" level="INFO">VALUE: [0.00010143099999999905, 0.000101416, 0.00010156999999999874, 0.00010098600000000083, 0.00010097200000000126, 0.00010148599999999786, 0.00010058300000000131, 0.0001013199999999985, 0.00010059700000000088, 0.00010130599999999892, 0.00010090199999999994, 0.00010111099999999748, 0.0001008610000000007, 0.00010148599999999786, 0.00010084699999999766, 0.0001006670000000022, 0.00010087500000000027, 0.00010124999999999718, 0.0001006670000000022, 0.00010109799999999738, 0.00010141699999999948, 0.00010067999999999883, 0.00010098600000000083, 0.00010058300000000131, 0.00010148699999999733, 0.00010065300000000263, 0.00010141699999999948, 0.00010091699999999898, 0.0001013610000000012, 0.0001013610000000012, 0.00010079200000000232, 0.0001005549999999987, 0.00010152700000000056, 0.00010075000000000014, 0.00010072199999999754, 0.00010059700000000088, 0.00010097200000000126, 0.0001011809999999988, 0.00010090299999999941, 0.00010065299999999916, 0.0001010000000000004, 0.0001010000000000004, 0.00010108300000000181, 0.00010059700000000088, 0.00010058299999999784, 0.00010158400000000178, 0.0001013610000000012, 0.00010082000000000146, 0.00010058400000000078, 0.00010143100000000252]</msg>
<status status="PASS" starttime="20201030 15:53:58.048" endtime="20201030 15:53:58.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.043" endtime="20201030 15:53:58.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.055" endtime="20201030 15:53:58.074"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.053" endtime="20201030 15:53:58.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.052" endtime="20201030 15:53:58.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.687" endtime="20201030 15:53:58.075"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:57.686" endtime="20201030 15:53:58.075"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.087" endtime="20201030 15:53:58.109"></status>
</kw>
<msg timestamp="20201030 15:53:58.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.085" endtime="20201030 15:53:58.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.112" endtime="20201030 15:53:58.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.115" endtime="20201030 15:53:58.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.082" endtime="20201030 15:53:58.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.079" endtime="20201030 15:53:58.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.124" endtime="20201030 15:53:58.409"></status>
</kw>
<msg timestamp="20201030 15:53:58.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024465625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.122" endtime="20201030 15:53:58.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024363847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024465625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.413" endtime="20201030 15:53:58.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.421" endtime="20201030 15:53:58.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.120" endtime="20201030 15:53:58.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.118" endtime="20201030 15:53:58.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.427" level="INFO">${RESULT} = [{'diff': 0.00010177800000000028}, {'diff': 0.00010244400000000015}, {'diff': 0.00010177800000000028}, {'diff': 0.00010216700000000023}, {'diff': 0.00010237500000000177}, {'diff': 0.000102278000000000...</msg>
<status status="PASS" starttime="20201030 15:53:58.424" endtime="20201030 15:53:58.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:58.431" level="INFO">${ACCURACY} = {'diff': [0.00010177800000000028, 0.00010244400000000015, 0.00010177800000000028, 0.00010216700000000023, 0.00010237500000000177, 0.00010227800000000078, 0.0001021939999999999, 0.00010204100000000063,...</msg>
<status status="PASS" starttime="20201030 15:53:58.428" endtime="20201030 15:53:58.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.436" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 15:53:58.435" endtime="20201030 15:53:58.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.438" level="INFO">VALUE: [0.00010177800000000028, 0.00010244400000000015, 0.00010177800000000028, 0.00010216700000000023, 0.00010237500000000177, 0.00010227800000000078, 0.0001021939999999999, 0.00010204100000000063, 0.00010213900000000109, 0.00010220799999999947, 0.0001020000000000014, 0.00010188900000000084, 0.00010162499999999755, 0.00010201400000000097, 0.00010179100000000038, 0.00010233399999999906, 0.00010240300000000091, 0.00010206899999999977, 0.00010230500000000045, 0.00010163900000000059, 0.00010156899999999927, 0.0001020000000000014, 0.00010191699999999998, 0.00010233399999999906, 0.00010216600000000076, 0.00010236200000000167, 0.00010197200000000226, 0.00010213900000000109, 0.00010238899999999787, 0.00010245799999999972, 0.00010229200000000035, 0.0001020420000000001, 0.0001023199999999995, 0.0001023749999999983, 0.00010237500000000177, 0.00010243100000000005, 0.00010165200000000069, 0.00010248599999999886, 0.00010181899999999952, 0.0001016939999999994, 0.00010245799999999972, 0.000101722000000002, 0.00010243100000000005, 0.00010249999999999843, 0.00010186099999999823, 0.0001023610000000022, 0.00010227699999999784, 0.00010211099999999848, 0.0001025000000000019, 0.00010166699999999973]</msg>
<status status="PASS" starttime="20201030 15:53:58.437" endtime="20201030 15:53:58.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.432" endtime="20201030 15:53:58.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.444" endtime="20201030 15:53:58.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.443" endtime="20201030 15:53:58.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.441" endtime="20201030 15:53:58.464"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.076" endtime="20201030 15:53:58.465"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.076" endtime="20201030 15:53:58.465"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.473" endtime="20201030 15:53:58.493"></status>
</kw>
<msg timestamp="20201030 15:53:58.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.472" endtime="20201030 15:53:58.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.495" endtime="20201030 15:53:58.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.497" endtime="20201030 15:53:58.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.469" endtime="20201030 15:53:58.499"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.467" endtime="20201030 15:53:58.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.506" endtime="20201030 15:53:58.792"></status>
</kw>
<msg timestamp="20201030 15:53:58.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.505" endtime="20201030 15:53:58.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.797" endtime="20201030 15:53:58.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.804" endtime="20201030 15:53:58.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.502" endtime="20201030 15:53:58.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.500" endtime="20201030 15:53:58.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:58.811" level="INFO">${RESULT} = [{'diff': 0.00010316699999999776}, {'diff': 0.00010312500000000252}, {'diff': 0.0001029160000000015}, {'diff': 0.0001027359999999991}, {'diff': 0.00010320800000000047}, {'diff': 0.00010279099999999791...</msg>
<status status="PASS" starttime="20201030 15:53:58.808" endtime="20201030 15:53:58.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:58.816" level="INFO">${ACCURACY} = {'diff': [0.00010316699999999776, 0.00010312500000000252, 0.0001029160000000015, 0.0001027359999999991, 0.00010320800000000047, 0.00010279099999999791, 0.00010352800000000204, 0.000103513999999999, 0....</msg>
<status status="PASS" starttime="20201030 15:53:58.812" endtime="20201030 15:53:58.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.820" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 15:53:58.819" endtime="20201030 15:53:58.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.823" level="INFO">VALUE: [0.00010316699999999776, 0.00010312500000000252, 0.0001029160000000015, 0.0001027359999999991, 0.00010320800000000047, 0.00010279099999999791, 0.00010352800000000204, 0.000103513999999999, 0.00010270899999999944, 0.00010287500000000227, 0.00010330600000000092, 0.00010269499999999987, 0.00010318000000000133, 0.0001030139999999985, 0.0001026940000000004, 0.00010288900000000184, 0.00010284699999999966, 0.00010308300000000034, 0.00010282, 0.0001025550000000007, 0.0001028480000000026, 0.00010261199999999845, 0.0001031940000000009, 0.00010309699999999991, 0.00010255600000000017, 0.00010338900000000234, 0.00010255600000000017, 0.00010340299999999844, 0.00010263900000000159, 0.00010319500000000037, 0.00010263900000000159, 0.0001033480000000031, 0.00010270799999999997, 0.00010336099999999973, 0.00010330500000000145, 0.0001031810000000008, 0.00010270799999999997, 0.00010340300000000191, 0.00010290300000000141, 0.00010293100000000055, 0.00010301400000000197, 0.00010272300000000248, 0.00010279100000000138, 0.00010299999999999893, 0.00010293000000000108, 0.00010329200000000135, 0.00010286099999999923, 0.00010291699999999751, 0.0001032359999999996, 0.00010256999999999974]</msg>
<status status="PASS" starttime="20201030 15:53:58.822" endtime="20201030 15:53:58.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.817" endtime="20201030 15:53:58.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:58.828" endtime="20201030 15:53:58.847"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.826" endtime="20201030 15:53:58.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.825" endtime="20201030 15:53:58.848"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.466" endtime="20201030 15:53:58.849"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.465" endtime="20201030 15:53:58.849"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.857" endtime="20201030 15:53:58.878"></status>
</kw>
<msg timestamp="20201030 15:53:58.879" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.856" endtime="20201030 15:53:58.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:58.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:58.880" endtime="20201030 15:53:58.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.882" endtime="20201030 15:53:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.853" endtime="20201030 15:53:58.884"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.851" endtime="20201030 15:53:58.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:58.891" endtime="20201030 15:53:59.179"></status>
</kw>
<msg timestamp="20201030 15:53:59.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:58.890" endtime="20201030 15:53:59.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020328042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.183" endtime="20201030 15:53:59.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.191" endtime="20201030 15:53:59.192"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.887" endtime="20201030 15:53:59.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.885" endtime="20201030 15:53:59.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.197" level="INFO">${RESULT} = [{'diff': 0.00010419399999999843}, {'diff': 0.00010448600000000086}, {'diff': 0.00010431999999999803}, {'diff': 0.00010390299999999894}, {'diff': 0.0001041810000000018}, {'diff': 0.0001038340000000005...</msg>
<status status="PASS" starttime="20201030 15:53:59.194" endtime="20201030 15:53:59.198"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:59.201" level="INFO">${ACCURACY} = {'diff': [0.00010419399999999843, 0.00010448600000000086, 0.00010431999999999803, 0.00010390299999999894, 0.0001041810000000018, 0.00010383400000000056, 0.00010441699999999901, 0.00010447300000000076,...</msg>
<status status="PASS" starttime="20201030 15:53:59.198" endtime="20201030 15:53:59.202"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.206" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 15:53:59.205" endtime="20201030 15:53:59.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.208" level="INFO">VALUE: [0.00010419399999999843, 0.00010448600000000086, 0.00010431999999999803, 0.00010390299999999894, 0.0001041810000000018, 0.00010383400000000056, 0.00010441699999999901, 0.00010447300000000076, 0.0001038879999999999, 0.00010383300000000109, 0.00010450000000000043, 0.00010442999999999911, 0.00010426399999999975, 0.00010411100000000048, 0.00010425000000000018, 0.00010434700000000116, 0.00010393100000000155, 0.00010425000000000018, 0.00010440199999999997, 0.00010429199999999889, 0.000104514, 0.00010393100000000155, 0.00010395800000000122, 0.00010425000000000018, 0.00010366700000000173, 0.00010398600000000036, 0.00010357000000000074, 0.00010404199999999864, 0.00010377700000000281, 0.00010411100000000048, 0.00010433299999999812, 0.00010359700000000041, 0.00010405600000000167, 0.00010390299999999894, 0.00010416699999999876, 0.0001036949999999974, 0.00010441699999999901, 0.0001042360000000006, 0.00010390200000000294, 0.00010447199999999782, 0.00010355499999999823, 0.00010436100000000073, 0.00010427799999999932, 0.00010430499999999898, 0.0001042360000000006, 0.00010413899999999962, 0.00010381899999999805, 0.00010417999999999886, 0.00010379099999999891, 0.00010411100000000048]</msg>
<status status="PASS" starttime="20201030 15:53:59.207" endtime="20201030 15:53:59.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.202" endtime="20201030 15:53:59.210"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.213" endtime="20201030 15:53:59.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.212" endtime="20201030 15:53:59.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.211" endtime="20201030 15:53:59.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.850" endtime="20201030 15:53:59.234"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:58.849" endtime="20201030 15:53:59.234"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.243" endtime="20201030 15:53:59.263"></status>
</kw>
<msg timestamp="20201030 15:53:59.264" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.241" endtime="20201030 15:53:59.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.266" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.265" endtime="20201030 15:53:59.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.267" endtime="20201030 15:53:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.239" endtime="20201030 15:53:59.269"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.237" endtime="20201030 15:53:59.270"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.276" endtime="20201030 15:53:59.560"></status>
</kw>
<msg timestamp="20201030 15:53:59.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.275" endtime="20201030 15:53:59.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020482208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:53:59.565" endtime="20201030 15:53:59.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.573" endtime="20201030 15:53:59.574"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.272" endtime="20201030 15:53:59.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.270" endtime="20201030 15:53:59.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:53:59.579" level="INFO">${RESULT} = [{'diff': 0.00010476400000000025}, {'diff': 0.00010462500000000055}, {'diff': 0.00010533299999999912}, {'diff': 0.00010541700000000001}, {'diff': 0.00010473700000000058}, {'diff': 0.000104999999999997...</msg>
<status status="PASS" starttime="20201030 15:53:59.576" endtime="20201030 15:53:59.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:53:59.583" level="INFO">${ACCURACY} = {'diff': [0.00010476400000000025, 0.00010462500000000055, 0.00010533299999999912, 0.00010541700000000001, 0.00010473700000000058, 0.00010499999999999746, 0.0001048750000000008, 0.00010493000000000308,...</msg>
<status status="PASS" starttime="20201030 15:53:59.580" endtime="20201030 15:53:59.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.588" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 15:53:59.587" endtime="20201030 15:53:59.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:53:59.590" level="INFO">VALUE: [0.00010476400000000025, 0.00010462500000000055, 0.00010533299999999912, 0.00010541700000000001, 0.00010473700000000058, 0.00010499999999999746, 0.0001048750000000008, 0.00010493000000000308, 0.0001047079999999985, 0.00010499999999999746, 0.00010547199999999882, 0.00010543000000000011, 0.00010536099999999826, 0.0001047360000000011, 0.00010531999999999903, 0.00010549999999999796, 0.00010540300000000044, 0.00010515199999999725, 0.00010502700000000059, 0.00010469399999999893, 0.0001048750000000008, 0.00010519399999999943, 0.00010509699999999844, 0.00010548599999999839, 0.00010493099999999908, 0.00010518099999999933, 0.00010531899999999955, 0.00010527700000000084, 0.00010543000000000011, 0.00010473599999999764, 0.00010515300000000019, 0.00010522200000000204, 0.00010550000000000143, 0.0001051949999999989, 0.00010495900000000169, 0.00010466699999999926, 0.00010534800000000163, 0.00010505499999999973, 0.00010548600000000186, 0.00010544400000000315, 0.00010502800000000007, 0.00010554200000000014, 0.00010508299999999887, 0.00010533400000000206, 0.00010463900000000012, 0.00010541599999999707, 0.00010525000000000118, 0.0001045689999999988, 0.00010547199999999882, 0.0001052360000000016]</msg>
<status status="PASS" starttime="20201030 15:53:59.589" endtime="20201030 15:53:59.592"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.584" endtime="20201030 15:53:59.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.596" endtime="20201030 15:53:59.615"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.594" endtime="20201030 15:53:59.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.593" endtime="20201030 15:53:59.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.235" endtime="20201030 15:53:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.234" endtime="20201030 15:53:59.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:21.012" endtime="20201030 15:53:59.617"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:17.901" endtime="20201030 15:53:59.617" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:53:59.624" endtime="20201030 15:53:59.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.622" endtime="20201030 15:53:59.644"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:53:59.657" endtime="20201030 15:54:02.677"></status>
</kw>
<msg timestamp="20201030 15:54:02.678" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:53:59.655" endtime="20201030 15:54:02.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.684" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.681" endtime="20201030 15:54:02.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.690" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:02.686" endtime="20201030 15:54:02.690"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:59.653" endtime="20201030 15:54:02.692"></status>
</kw>
<status status="FAIL" starttime="20201030 15:53:59.650" endtime="20201030 15:54:02.693"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.649" endtime="20201030 15:54:02.694"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:02.701" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:02.700" endtime="20201030 15:54:02.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.695" endtime="20201030 15:54:02.702"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.648" endtime="20201030 15:54:02.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.648" endtime="20201030 15:54:02.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.705" endtime="20201030 15:54:02.708"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.646" endtime="20201030 15:54:02.709"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.645" endtime="20201030 15:54:02.710"></status>
</kw>
<status status="PASS" starttime="20201030 15:53:59.621" endtime="20201030 15:54:02.710"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.727" endtime="20201030 15:54:02.741"></status>
</kw>
<msg timestamp="20201030 15:54:02.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.725" endtime="20201030 15:54:02.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:02.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:02.742" endtime="20201030 15:54:02.750"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.751" endtime="20201030 15:54:02.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.721" endtime="20201030 15:54:02.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.717" endtime="20201030 15:54:02.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:02.761" endtime="20201030 15:54:03.057"></status>
</kw>
<msg timestamp="20201030 15:54:03.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.093386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.093392667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:02.759" endtime="20201030 15:54:03.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.093386931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.093392667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.061" endtime="20201030 15:54:03.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.069" endtime="20201030 15:54:03.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.756" endtime="20201030 15:54:03.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.755" endtime="20201030 15:54:03.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.076" level="INFO">${RESULT} = [{'diff': 5.735999999867403e-06}, {'diff': 6.068999999886415e-06}, {'diff': 6.055999999698969e-06}, {'diff': 5.735999999867403e-06}, {'diff': 5.722000000041305e-06}, {'diff': 6.013999999776587e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:03.073" endtime="20201030 15:54:03.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:03.080" level="INFO">${ACCURACY} = {'diff': [5.735999999867403e-06, 6.068999999886415e-06, 6.055999999698969e-06, 5.735999999867403e-06, 5.722000000041305e-06, 6.013999999776587e-06, 5.736000000311492e-06, 5.387999999939552e-06, 6.0280...</msg>
<status status="PASS" starttime="20201030 15:54:03.077" endtime="20201030 15:54:03.080"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.085" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 15:54:03.084" endtime="20201030 15:54:03.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.088" level="INFO">VALUE: [5.735999999867403e-06, 6.068999999886415e-06, 6.055999999698969e-06, 5.735999999867403e-06, 5.722000000041305e-06, 6.013999999776587e-06, 5.736000000311492e-06, 5.387999999939552e-06, 6.028000000046774e-06, 6.069999999969156e-06, 5.375000000196195e-06, 5.374999999752106e-06, 5.736999999950143e-06, 6.084000000239342e-06, 5.389000000022293e-06, 5.416000000035837e-06, 6.083999999795253e-06, 5.389000000022293e-06, 5.722000000041305e-06, 5.736000000311492e-06, 6.056000000143058e-06, 5.736000000311492e-06, 5.736000000311492e-06, 5.7500000001375895e-06, 5.763000000325036e-06, 6.069999999969156e-06, 5.389000000022293e-06, 5.7499999996935e-06, 5.735999999867403e-06, 6.0969999999827e-06, 6.068999999886415e-06, 5.736999999950143e-06, 5.417000000118577e-06, 6.055000000060318e-06, 5.375000000196195e-06, 6.0690000003305045e-06, 6.0969999999827e-06, 6.415999999731525e-06, 5.417000000118577e-06, 6.0969999999827e-06, 6.069999999969156e-06, 5.736000000311492e-06, 5.736000000311492e-06, 6.083000000156602e-06, 5.735999999867403e-06, 6.124999999634895e-06, 5.375000000196195e-06, 5.374999999752106e-06, 5.735999999867403e-06, 5.7500000001375895e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.086" endtime="20201030 15:54:03.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.081" endtime="20201030 15:54:03.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.092" endtime="20201030 15:54:03.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.091" endtime="20201030 15:54:03.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.090" endtime="20201030 15:54:03.112"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.713" endtime="20201030 15:54:03.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.712" endtime="20201030 15:54:03.113"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.122" endtime="20201030 15:54:03.137"></status>
</kw>
<msg timestamp="20201030 15:54:03.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.120" endtime="20201030 15:54:03.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.139" endtime="20201030 15:54:03.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.141" endtime="20201030 15:54:03.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.118" endtime="20201030 15:54:03.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.115" endtime="20201030 15:54:03.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.151" endtime="20201030 15:54:03.437"></status>
</kw>
<msg timestamp="20201030 15:54:03.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.150" endtime="20201030 15:54:03.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020688903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.442" endtime="20201030 15:54:03.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.450" endtime="20201030 15:54:03.451"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.147" endtime="20201030 15:54:03.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.145" endtime="20201030 15:54:03.452"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.456" level="INFO">${RESULT} = [{'diff': 7.125000000000187e-06}, {'diff': 6.430999999997716e-06}, {'diff': 7.138999999999757e-06}, {'diff': 7.180999999998466e-06}, {'diff': 6.417000000001616e-06}, {'diff': 7.0969999999975775e-06}, ...</msg>
<status status="PASS" starttime="20201030 15:54:03.453" endtime="20201030 15:54:03.456"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:03.461" level="INFO">${ACCURACY} = {'diff': [7.125000000000187e-06, 6.430999999997716e-06, 7.138999999999757e-06, 7.180999999998466e-06, 6.417000000001616e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.125000000000187e-06, 6.431...</msg>
<status status="PASS" starttime="20201030 15:54:03.457" endtime="20201030 15:54:03.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.466" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 15:54:03.465" endtime="20201030 15:54:03.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.468" level="INFO">VALUE: [7.125000000000187e-06, 6.430999999997716e-06, 7.138999999999757e-06, 7.180999999998466e-06, 6.417000000001616e-06, 7.0969999999975775e-06, 7.124999999996717e-06, 7.125000000000187e-06, 6.431000000001186e-06, 6.416999999998146e-06, 7.125000000000187e-06, 7.069000000001907e-06, 7.070000000001381e-06, 7.138999999999757e-06, 6.7779999999989515e-06, 7.125000000000187e-06, 6.444000000001282e-06, 7.138999999999757e-06, 6.417000000001616e-06, 6.763999999999382e-06, 7.111000000000617e-06, 6.806000000001561e-06, 6.819000000001657e-06, 7.138999999999757e-06, 6.7779999999989515e-06, 7.138999999999757e-06, 6.459000000000326e-06, 7.097000000001047e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 6.430999999997716e-06, 6.415999999998673e-06, 6.416999999998146e-06, 7.180999999998466e-06, 6.388999999999007e-06, 6.430999999997716e-06, 7.111000000000617e-06, 6.749999999999812e-06, 6.778000000002421e-06, 6.429999999998243e-06, 6.429999999998243e-06, 7.1529999999993266e-06, 7.125000000000187e-06, 6.776999999999478e-06, 7.125000000000187e-06, 7.111000000000617e-06, 6.458000000000852e-06, 6.443999999997813e-06, 6.777000000002947e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.467" endtime="20201030 15:54:03.469"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.462" endtime="20201030 15:54:03.469"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.473" endtime="20201030 15:54:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.472" endtime="20201030 15:54:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.470" endtime="20201030 15:54:03.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.114" endtime="20201030 15:54:03.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.113" endtime="20201030 15:54:03.494"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.503" endtime="20201030 15:54:03.518"></status>
</kw>
<msg timestamp="20201030 15:54:03.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.501" endtime="20201030 15:54:03.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.520" endtime="20201030 15:54:03.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.522" endtime="20201030 15:54:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.499" endtime="20201030 15:54:03.524"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.496" endtime="20201030 15:54:03.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.531" endtime="20201030 15:54:03.820"></status>
</kw>
<msg timestamp="20201030 15:54:03.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.530" endtime="20201030 15:54:03.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.824" endtime="20201030 15:54:03.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.832" endtime="20201030 15:54:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.527" endtime="20201030 15:54:03.834"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.525" endtime="20201030 15:54:03.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:03.839" level="INFO">${RESULT} = [{'diff': 7.805000000003087e-06}, {'diff': 7.832999999998758e-06}, {'diff': 8.166000000000423e-06}, {'diff': 7.457999999998383e-06}, {'diff': 7.847000000001797e-06}, {'diff': 7.459000000001326e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:03.836" endtime="20201030 15:54:03.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:03.843" level="INFO">${ACCURACY} = {'diff': [7.805000000003087e-06, 7.832999999998758e-06, 8.166000000000423e-06, 7.457999999998383e-06, 7.847000000001797e-06, 7.459000000001326e-06, 7.750000000000812e-06, 7.500000000000562e-06, 8.1250...</msg>
<status status="PASS" starttime="20201030 15:54:03.840" endtime="20201030 15:54:03.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.847" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 15:54:03.846" endtime="20201030 15:54:03.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.850" level="INFO">VALUE: [7.805000000003087e-06, 7.832999999998758e-06, 8.166000000000423e-06, 7.457999999998383e-06, 7.847000000001797e-06, 7.459000000001326e-06, 7.750000000000812e-06, 7.500000000000562e-06, 8.125000000001187e-06, 7.805999999999091e-06, 8.153000000000327e-06, 8.166000000000423e-06, 7.417000000002616e-06, 7.457999999998383e-06, 7.804999999999618e-06, 7.805999999999091e-06, 7.457999999998383e-06, 7.764000000000382e-06, 8.153000000000327e-06, 7.818999999999188e-06, 7.459000000001326e-06, 8.166999999999897e-06, 8.166999999999897e-06, 7.402999999999577e-06, 7.805999999999091e-06, 7.473000000000896e-06, 7.804999999999618e-06, 8.153000000000327e-06, 8.166999999999897e-06, 8.125000000001187e-06, 8.153000000000327e-06, 7.819999999998661e-06, 7.1120000000000905e-06, 7.791999999999522e-06, 7.777999999999952e-06, 7.459000000001326e-06, 7.444999999998286e-06, 7.791999999999522e-06, 7.472000000001422e-06, 8.153000000000327e-06, 7.500000000000562e-06, 7.472000000001422e-06, 7.791000000000048e-06, 8.166000000000423e-06, 7.472000000001422e-06, 7.444999999998286e-06, 7.818999999999188e-06, 8.166999999999897e-06, 8.153000000000327e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201030 15:54:03.848" endtime="20201030 15:54:03.850"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.844" endtime="20201030 15:54:03.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:03.854" endtime="20201030 15:54:03.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.853" endtime="20201030 15:54:03.874"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.852" endtime="20201030 15:54:03.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.495" endtime="20201030 15:54:03.875"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.494" endtime="20201030 15:54:03.875"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.885" endtime="20201030 15:54:03.899"></status>
</kw>
<msg timestamp="20201030 15:54:03.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.883" endtime="20201030 15:54:03.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:03.902" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:03.901" endtime="20201030 15:54:03.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.903" endtime="20201030 15:54:03.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.880" endtime="20201030 15:54:03.905"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.878" endtime="20201030 15:54:03.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:03.912" endtime="20201030 15:54:04.199"></status>
</kw>
<msg timestamp="20201030 15:54:04.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021057708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:03.911" endtime="20201030 15:54:04.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021048861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021057708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.204" endtime="20201030 15:54:04.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.212" endtime="20201030 15:54:04.213"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.908" endtime="20201030 15:54:04.214"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.907" endtime="20201030 15:54:04.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.218" level="INFO">${RESULT} = [{'diff': 8.847000000002797e-06}, {'diff': 8.500000000001562e-06}, {'diff': 9.222000000003172e-06}, {'diff': 8.847000000002797e-06}, {'diff': 9.166999999997427e-06}, {'diff': 8.846999999999328e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:04.215" endtime="20201030 15:54:04.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:04.222" level="INFO">${ACCURACY} = {'diff': [8.847000000002797e-06, 8.500000000001562e-06, 9.222000000003172e-06, 8.847000000002797e-06, 9.166999999997427e-06, 8.846999999999328e-06, 8.487000000001466e-06, 8.833999999999231e-06, 9.1950...</msg>
<status status="PASS" starttime="20201030 15:54:04.219" endtime="20201030 15:54:04.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.227" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 15:54:04.226" endtime="20201030 15:54:04.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.230" level="INFO">VALUE: [8.847000000002797e-06, 8.500000000001562e-06, 9.222000000003172e-06, 8.847000000002797e-06, 9.166999999997427e-06, 8.846999999999328e-06, 8.487000000001466e-06, 8.833999999999231e-06, 9.195000000000036e-06, 9.195000000000036e-06, 8.846999999999328e-06, 8.846999999999328e-06, 8.514000000001132e-06, 8.166999999999897e-06, 8.514000000001132e-06, 8.486000000001992e-06, 8.471999999998953e-06, 8.846999999999328e-06, 8.166999999999897e-06, 8.500000000001562e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.875000000001937e-06, 8.500000000001562e-06, 8.513999999997662e-06, 8.917000000000647e-06, 9.139000000001757e-06, 8.777999999997482e-06, 8.846999999999328e-06, 8.165999999996953e-06, 9.194000000000563e-06, 8.84800000000227e-06, 9.181000000000467e-06, 9.180000000000993e-06, 9.194000000000563e-06, 8.846999999999328e-06, 9.194000000000563e-06, 8.888999999998037e-06, 8.459000000002326e-06, 8.499999999998092e-06, 8.151999999997384e-06, 8.138999999997287e-06, 8.8340000000027e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.860999999998898e-06, 8.791999999997052e-06, 8.500000000001562e-06, 9.181000000000467e-06, 9.195000000000036e-06]</msg>
<status status="PASS" starttime="20201030 15:54:04.228" endtime="20201030 15:54:04.233"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.223" endtime="20201030 15:54:04.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.238" endtime="20201030 15:54:04.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.236" endtime="20201030 15:54:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.235" endtime="20201030 15:54:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.876" endtime="20201030 15:54:04.258"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:03.876" endtime="20201030 15:54:04.258"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.267" endtime="20201030 15:54:04.282"></status>
</kw>
<msg timestamp="20201030 15:54:04.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.265" endtime="20201030 15:54:04.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.283" endtime="20201030 15:54:04.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.286" endtime="20201030 15:54:04.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.263" endtime="20201030 15:54:04.288"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.261" endtime="20201030 15:54:04.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.295" endtime="20201030 15:54:04.582"></status>
</kw>
<msg timestamp="20201030 15:54:04.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019500639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.293" endtime="20201030 15:54:04.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019500639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.586" endtime="20201030 15:54:04.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.594" endtime="20201030 15:54:04.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.291" endtime="20201030 15:54:04.597"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.289" endtime="20201030 15:54:04.597"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.601" level="INFO">${RESULT} = [{'diff': 9.874999999999468e-06}, {'diff': 9.888999999999037e-06}, {'diff': 9.583999999999981e-06}, {'diff': 9.541000000001798e-06}, {'diff': 9.527999999998232e-06}, {'diff': 9.526999999998759e-06}, {...</msg>
<status status="PASS" starttime="20201030 15:54:04.598" endtime="20201030 15:54:04.601"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:04.606" level="INFO">${ACCURACY} = {'diff': [9.874999999999468e-06, 9.888999999999037e-06, 9.583999999999981e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.916000000002173e-06, 9.8609...</msg>
<status status="PASS" starttime="20201030 15:54:04.602" endtime="20201030 15:54:04.606"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.610" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 15:54:04.609" endtime="20201030 15:54:04.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.613" level="INFO">VALUE: [9.874999999999468e-06, 9.888999999999037e-06, 9.583999999999981e-06, 9.541000000001798e-06, 9.527999999998232e-06, 9.526999999998759e-06, 9.526999999998759e-06, 9.916000000002173e-06, 9.860999999999898e-06, 9.804999999998149e-06, 1.0222000000000703e-05, 9.541999999997802e-06, 9.541999999997802e-06, 9.556000000000842e-06, 9.527999999998232e-06, 1.0249999999999843e-05, 1.0236999999999746e-05, 9.208000000000133e-06, 9.874999999999468e-06, 9.889000000002507e-06, 9.874999999999468e-06, 9.597000000000078e-06, 9.888999999999037e-06, 9.555000000001368e-06, 9.527999999998232e-06, 9.888999999999037e-06, 1.0236000000000273e-05, 9.888999999999037e-06, 1.0236000000000273e-05, 9.195000000000036e-06, 9.901999999999134e-06, 9.902000000002603e-06, 9.818999999997718e-06, 9.930999999997747e-06, 9.860999999999898e-06, 9.208000000000133e-06, 9.819000000001188e-06, 9.972999999999926e-06, 1.0222000000000703e-05, 9.874999999999468e-06, 9.528000000001702e-06, 1.0236000000000273e-05, 9.860999999999898e-06, 9.471999999999953e-06, 9.847000000000328e-06, 9.471999999999953e-06, 9.888999999999037e-06, 9.541999999997802e-06, 9.528000000001702e-06, 9.860999999999898e-06]</msg>
<status status="PASS" starttime="20201030 15:54:04.612" endtime="20201030 15:54:04.614"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.607" endtime="20201030 15:54:04.614"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.618" endtime="20201030 15:54:04.637"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.616" endtime="20201030 15:54:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.615" endtime="20201030 15:54:04.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.259" endtime="20201030 15:54:04.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.259" endtime="20201030 15:54:04.639"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.647" endtime="20201030 15:54:04.662"></status>
</kw>
<msg timestamp="20201030 15:54:04.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.646" endtime="20201030 15:54:04.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:04.664" endtime="20201030 15:54:04.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.666" endtime="20201030 15:54:04.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.643" endtime="20201030 15:54:04.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.641" endtime="20201030 15:54:04.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.675" endtime="20201030 15:54:04.961"></status>
</kw>
<msg timestamp="20201030 15:54:04.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.674" endtime="20201030 15:54:04.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019525264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:04.965" endtime="20201030 15:54:04.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:04.974" endtime="20201030 15:54:04.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.671" endtime="20201030 15:54:04.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.670" endtime="20201030 15:54:04.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:04.980" level="INFO">${RESULT} = [{'diff': 1.1250000000000843e-05}, {'diff': 1.1263999999996943e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0569000000001938e-05}, {'diff': 1.1250000000000843e-05}, {'diff': 1.0194000000001563e-...</msg>
<status status="PASS" starttime="20201030 15:54:04.977" endtime="20201030 15:54:04.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:04.985" level="INFO">${ACCURACY} = {'diff': [1.1250000000000843e-05, 1.1263999999996943e-05, 1.0943999999998844e-05, 1.0569000000001938e-05, 1.1250000000000843e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.1277999999999982e-05...</msg>
<status status="PASS" starttime="20201030 15:54:04.981" endtime="20201030 15:54:04.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.989" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 15:54:04.988" endtime="20201030 15:54:04.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:04.991" level="INFO">VALUE: [1.1250000000000843e-05, 1.1263999999996943e-05, 1.0943999999998844e-05, 1.0569000000001938e-05, 1.1250000000000843e-05, 1.0194000000001563e-05, 1.0222000000000703e-05, 1.1277999999999982e-05, 1.0569000000001938e-05, 1.0915999999999704e-05, 1.0916999999999177e-05, 1.0222000000000703e-05, 1.0570000000001412e-05, 1.0916999999999177e-05, 1.0846999999997858e-05, 1.0582999999998038e-05, 1.0915999999999704e-05, 1.0902999999999607e-05, 1.1334000000001732e-05, 1.0221999999997233e-05, 1.0889000000000038e-05, 1.1249999999997373e-05, 1.0874999999996998e-05, 1.0570000000001412e-05, 1.0916999999999177e-05, 1.0541999999998802e-05, 1.1263000000000939e-05, 1.0930999999998747e-05, 1.0915999999999704e-05, 1.0916999999999177e-05, 1.1291999999999552e-05, 1.0916999999999177e-05, 1.1346999999998358e-05, 1.1250000000000843e-05, 1.0568999999998469e-05, 1.1264000000000413e-05, 1.0236000000000273e-05, 1.0916999999999177e-05, 1.0263999999999412e-05, 1.1207999999998663e-05, 1.0916999999999177e-05, 1.0236000000000273e-05, 1.0930999999998747e-05, 1.0874999999996998e-05, 1.0916999999999177e-05, 1.1263999999996943e-05, 1.0597000000001078e-05, 1.0222000000000703e-05, 1.0915999999999704e-05, 1.0902999999999607e-05]</msg>
<status status="PASS" starttime="20201030 15:54:04.990" endtime="20201030 15:54:04.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.985" endtime="20201030 15:54:04.993"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:04.996" endtime="20201030 15:54:05.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.995" endtime="20201030 15:54:05.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.994" endtime="20201030 15:54:05.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.640" endtime="20201030 15:54:05.017"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:04.639" endtime="20201030 15:54:05.017"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.026" endtime="20201030 15:54:05.043"></status>
</kw>
<msg timestamp="20201030 15:54:05.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.025" endtime="20201030 15:54:05.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.044" endtime="20201030 15:54:05.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.047" endtime="20201030 15:54:05.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.022" endtime="20201030 15:54:05.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.020" endtime="20201030 15:54:05.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.056" endtime="20201030 15:54:05.341"></status>
</kw>
<msg timestamp="20201030 15:54:05.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020751375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.054" endtime="20201030 15:54:05.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020751375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020762972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.345" endtime="20201030 15:54:05.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.353" endtime="20201030 15:54:05.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.052" endtime="20201030 15:54:05.355"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.050" endtime="20201030 15:54:05.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:05.360" level="INFO">${RESULT} = [{'diff': 1.1597000000002078e-05}, {'diff': 1.1958999999998887e-05}, {'diff': 1.201299999999822e-05}, {'diff': 1.1611000000001648e-05}, {'diff': 1.1666999999999927e-05}, {'diff': 1.1944999999999317e-0...</msg>
<status status="PASS" starttime="20201030 15:54:05.356" endtime="20201030 15:54:05.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:05.364" level="INFO">${ACCURACY} = {'diff': [1.1597000000002078e-05, 1.1958999999998887e-05, 1.201299999999822e-05, 1.1611000000001648e-05, 1.1666999999999927e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.2319000000000219e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:05.361" endtime="20201030 15:54:05.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.368" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 15:54:05.367" endtime="20201030 15:54:05.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.371" level="INFO">VALUE: [1.1597000000002078e-05, 1.1958999999998887e-05, 1.201299999999822e-05, 1.1611000000001648e-05, 1.1666999999999927e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.2319000000000219e-05, 1.2249999999998373e-05, 1.127699999999704e-05, 1.1250000000000843e-05, 1.1944000000003313e-05, 1.1903000000000608e-05, 1.1930000000000274e-05, 1.1263999999996943e-05, 1.2292000000000552e-05, 1.1958999999998887e-05, 1.1277999999999982e-05, 1.2278000000000983e-05, 1.1597000000002078e-05, 1.1611000000001648e-05, 1.1971999999998983e-05, 1.1264000000000413e-05, 1.1666000000000454e-05, 1.1625000000001218e-05, 1.1624999999997748e-05, 1.1596999999998608e-05, 1.1958999999998887e-05, 1.1554999999999899e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.2292000000000552e-05, 1.1652999999996888e-05, 1.1680999999999497e-05, 1.1277000000000509e-05, 1.1583000000002508e-05, 1.1250000000000843e-05, 1.1959000000002357e-05, 1.2332999999999789e-05, 1.1930000000000274e-05, 1.1597999999998082e-05, 1.1264000000000413e-05, 1.1957999999999414e-05, 1.2291000000001079e-05, 1.1930000000000274e-05, 1.1917000000000177e-05, 1.1639000000000788e-05, 1.1999999999998123e-05, 1.1264000000000413e-05, 1.1625000000001218e-05]</msg>
<status status="PASS" starttime="20201030 15:54:05.369" endtime="20201030 15:54:05.372"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.365" endtime="20201030 15:54:05.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:05.377" endtime="20201030 15:54:05.396"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.375" endtime="20201030 15:54:05.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.374" endtime="20201030 15:54:05.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.018" endtime="20201030 15:54:05.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.018" endtime="20201030 15:54:05.398"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.406" endtime="20201030 15:54:05.421"></status>
</kw>
<msg timestamp="20201030 15:54:05.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.405" endtime="20201030 15:54:05.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.422" endtime="20201030 15:54:05.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.425" endtime="20201030 15:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.402" endtime="20201030 15:54:05.427"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.400" endtime="20201030 15:54:05.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.434" endtime="20201030 15:54:05.720"></status>
</kw>
<msg timestamp="20201030 15:54:05.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.433" endtime="20201030 15:54:05.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019560056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019572347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:05.724" endtime="20201030 15:54:05.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.732" endtime="20201030 15:54:05.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.430" endtime="20201030 15:54:05.734"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.428" endtime="20201030 15:54:05.735"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:05.739" level="INFO">${RESULT} = [{'diff': 1.2291000000001079e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.3000000000002593e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.2999999999999123e-...</msg>
<status status="PASS" starttime="20201030 15:54:05.735" endtime="20201030 15:54:05.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:05.744" level="INFO">${ACCURACY} = {'diff': [1.2291000000001079e-05, 1.2624999999998748e-05, 1.3000000000002593e-05, 1.2596999999999609e-05, 1.2708000000000164e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2292000000000552e-05...</msg>
<status status="PASS" starttime="20201030 15:54:05.740" endtime="20201030 15:54:05.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.748" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 15:54:05.747" endtime="20201030 15:54:05.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.751" level="INFO">VALUE: [1.2291000000001079e-05, 1.2624999999998748e-05, 1.3000000000002593e-05, 1.2596999999999609e-05, 1.2708000000000164e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2292000000000552e-05, 1.2653000000001358e-05, 1.2625000000002218e-05, 1.2680000000001024e-05, 1.2278000000000983e-05, 1.229099999999761e-05, 1.2999999999999123e-05, 1.2610999999999178e-05, 1.2292000000000552e-05, 1.2985999999999553e-05, 1.2639000000001788e-05, 1.2292000000000552e-05, 1.3055000000001399e-05, 1.2653000000001358e-05, 1.2985999999999553e-05, 1.2319000000000219e-05, 1.2638999999998318e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.3027999999998263e-05, 1.2306000000000122e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2652999999997888e-05, 1.2999999999999123e-05, 1.2305000000000649e-05, 1.2291000000001079e-05, 1.2930000000001274e-05, 1.2306000000000122e-05, 1.3319000000001219e-05, 1.2944000000000844e-05, 1.3028000000001733e-05, 1.2999999999999123e-05, 1.2944000000000844e-05, 1.2292000000000552e-05, 1.2999999999999123e-05, 1.2652999999997888e-05, 1.3000000000002593e-05, 1.2986000000003023e-05, 1.2694000000000594e-05, 1.2306000000000122e-05, 1.2624999999998748e-05, 1.2999999999999123e-05]</msg>
<status status="PASS" starttime="20201030 15:54:05.749" endtime="20201030 15:54:05.751"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.744" endtime="20201030 15:54:05.752"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:05.756" endtime="20201030 15:54:05.775"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.754" endtime="20201030 15:54:05.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.753" endtime="20201030 15:54:05.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.399" endtime="20201030 15:54:05.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.398" endtime="20201030 15:54:05.776"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.785" endtime="20201030 15:54:05.800"></status>
</kw>
<msg timestamp="20201030 15:54:05.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.783" endtime="20201030 15:54:05.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:05.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:05.801" endtime="20201030 15:54:05.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.804" endtime="20201030 15:54:05.805"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.781" endtime="20201030 15:54:05.806"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.779" endtime="20201030 15:54:05.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:05.813" endtime="20201030 15:54:06.099"></status>
</kw>
<msg timestamp="20201030 15:54:06.102" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:05.811" endtime="20201030 15:54:06.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019774417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01978775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:06.103" endtime="20201030 15:54:06.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.111" endtime="20201030 15:54:06.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.809" endtime="20201030 15:54:06.113"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.807" endtime="20201030 15:54:06.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.119" level="INFO">${RESULT} = [{'diff': 1.3333000000000789e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.3681000000001498e-05}, {'diff': 1.331899999999775e-05}, {'diff': 1.3679999999998554e-0...</msg>
<status status="PASS" starttime="20201030 15:54:06.114" endtime="20201030 15:54:06.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:06.125" level="INFO">${ACCURACY} = {'diff': [1.3333000000000789e-05, 1.4027999999999263e-05, 1.4389000000000068e-05, 1.3681000000001498e-05, 1.331899999999775e-05, 1.3679999999998554e-05, 1.3333000000000789e-05, 1.4013999999999693e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:06.121" endtime="20201030 15:54:06.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.131" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 15:54:06.129" endtime="20201030 15:54:06.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.135" level="INFO">VALUE: [1.3333000000000789e-05, 1.4027999999999263e-05, 1.4389000000000068e-05, 1.3681000000001498e-05, 1.331899999999775e-05, 1.3679999999998554e-05, 1.3333000000000789e-05, 1.4013999999999693e-05, 1.4098000000000582e-05, 1.3334000000000262e-05, 1.3986000000000554e-05, 1.4348000000000832e-05, 1.3333000000000789e-05, 1.3944000000001844e-05, 1.4027999999999263e-05, 1.4375000000000498e-05, 1.3680999999998028e-05, 1.3347000000000359e-05, 1.3346999999996889e-05, 1.4041999999998833e-05, 1.3680999999998028e-05, 1.4013999999999693e-05, 1.402699999999979e-05, 1.3681000000001498e-05, 1.4361000000000929e-05, 1.3679999999998554e-05, 1.3333000000000789e-05, 1.3333000000000789e-05, 1.3666000000002454e-05, 1.3680999999998028e-05, 1.3347000000000359e-05, 1.4042000000002303e-05, 1.3680000000002024e-05, 1.3374999999999498e-05, 1.4000000000000123e-05, 1.4444999999998348e-05, 1.3681000000001498e-05, 1.3333000000000789e-05, 1.4333999999997793e-05, 1.4013999999999693e-05, 1.3651999999999415e-05, 1.3679999999998554e-05, 1.3736999999999777e-05, 1.4374999999997029e-05, 1.4013999999999693e-05, 1.3987000000000027e-05, 1.40689999999985e-05, 1.3347000000000359e-05, 1.3735999999996834e-05, 1.3986000000000554e-05]</msg>
<status status="PASS" starttime="20201030 15:54:06.132" endtime="20201030 15:54:06.137"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.126" endtime="20201030 15:54:06.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.144" endtime="20201030 15:54:06.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.142" endtime="20201030 15:54:06.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.139" endtime="20201030 15:54:06.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.777" endtime="20201030 15:54:06.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:05.777" endtime="20201030 15:54:06.165"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.177" endtime="20201030 15:54:06.193"></status>
</kw>
<msg timestamp="20201030 15:54:06.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.175" endtime="20201030 15:54:06.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.197" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.195" endtime="20201030 15:54:06.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.200" endtime="20201030 15:54:06.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.171" endtime="20201030 15:54:06.203"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.168" endtime="20201030 15:54:06.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.212" endtime="20201030 15:54:06.499"></status>
</kw>
<msg timestamp="20201030 15:54:06.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.210" endtime="20201030 15:54:06.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024934389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024949444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.503" endtime="20201030 15:54:06.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.511" endtime="20201030 15:54:06.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.207" endtime="20201030 15:54:06.513"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.205" endtime="20201030 15:54:06.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.518" level="INFO">${RESULT} = [{'diff': 1.505499999999993e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.4695000000002068e-05}, {'diff': 1.5083999999998543e-05}, {'diff': 1.4375000000000498e-05...</msg>
<status status="PASS" starttime="20201030 15:54:06.514" endtime="20201030 15:54:06.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:06.522" level="INFO">${ACCURACY} = {'diff': [1.505499999999993e-05, 1.4361000000000929e-05, 1.505499999999993e-05, 1.4695000000002068e-05, 1.5083999999998543e-05, 1.4375000000000498e-05, 1.5069999999998973e-05, 1.5069999999998973e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:06.519" endtime="20201030 15:54:06.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.527" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 15:54:06.525" endtime="20201030 15:54:06.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.529" level="INFO">VALUE: [1.505499999999993e-05, 1.4361000000000929e-05, 1.505499999999993e-05, 1.4695000000002068e-05, 1.5083999999998543e-05, 1.4375000000000498e-05, 1.5069999999998973e-05, 1.5069999999998973e-05, 1.505499999999993e-05, 1.5097000000002109e-05, 1.5055999999999403e-05, 1.5083000000002539e-05, 1.4375000000000498e-05, 1.508299999999907e-05, 1.4764000000000443e-05, 1.531899999999975e-05, 1.4707999999998694e-05, 1.4694000000002594e-05, 1.534699999999889e-05, 1.4694999999998598e-05, 1.5028000000000263e-05, 1.4708000000002164e-05, 1.4709000000001637e-05, 1.5098000000001582e-05, 1.5014000000000693e-05, 1.50689999999995e-05, 1.4695000000002068e-05, 1.4665999999999985e-05, 1.4360999999997459e-05, 1.4708000000002164e-05, 1.4707999999998694e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.5055999999999403e-05, 1.4375000000000498e-05, 1.4721999999998264e-05, 1.5471999999999014e-05, 1.4375000000000498e-05, 1.5097000000002109e-05, 1.4778000000000013e-05, 1.5069999999998973e-05, 1.509699999999864e-05, 1.5028000000000263e-05, 1.4708999999998168e-05, 1.4694999999998598e-05, 1.4722000000001734e-05, 1.4736000000001304e-05, 1.4362000000000402e-05, 1.50689999999995e-05, 1.4707999999998694e-05]</msg>
<status status="PASS" starttime="20201030 15:54:06.528" endtime="20201030 15:54:06.531"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.523" endtime="20201030 15:54:06.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.535" endtime="20201030 15:54:06.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.533" endtime="20201030 15:54:06.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.532" endtime="20201030 15:54:06.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.167" endtime="20201030 15:54:06.555"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.166" endtime="20201030 15:54:06.556"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.564" endtime="20201030 15:54:06.579"></status>
</kw>
<msg timestamp="20201030 15:54:06.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.563" endtime="20201030 15:54:06.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.581" endtime="20201030 15:54:06.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.583" endtime="20201030 15:54:06.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.560" endtime="20201030 15:54:06.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.558" endtime="20201030 15:54:06.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.592" endtime="20201030 15:54:06.879"></status>
</kw>
<msg timestamp="20201030 15:54:06.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.591" endtime="20201030 15:54:06.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019615625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:06.883" endtime="20201030 15:54:06.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.891" endtime="20201030 15:54:06.892"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.588" endtime="20201030 15:54:06.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.586" endtime="20201030 15:54:06.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:06.897" level="INFO">${RESULT} = [{'diff': 1.583299999999982e-05}, {'diff': 1.5749999999998404e-05}, {'diff': 1.5778000000001013e-05}, {'diff': 1.6165999999998015e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.5750000000001874e-05...</msg>
<status status="PASS" starttime="20201030 15:54:06.894" endtime="20201030 15:54:06.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:06.902" level="INFO">${ACCURACY} = {'diff': [1.583299999999982e-05, 1.5749999999998404e-05, 1.5778000000001013e-05, 1.6165999999998015e-05, 1.611099999999921e-05, 1.5750000000001874e-05, 1.5735999999998834e-05, 1.6097999999999113e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:06.898" endtime="20201030 15:54:06.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.907" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 15:54:06.906" endtime="20201030 15:54:06.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.909" level="INFO">VALUE: [1.583299999999982e-05, 1.5749999999998404e-05, 1.5778000000001013e-05, 1.6165999999998015e-05, 1.611099999999921e-05, 1.5750000000001874e-05, 1.5735999999998834e-05, 1.6097999999999113e-05, 1.5402000000001165e-05, 1.541700000000021e-05, 1.609699999999964e-05, 1.5749999999998404e-05, 1.541700000000021e-05, 1.533299999999932e-05, 1.5416000000000735e-05, 1.612499999999878e-05, 1.577699999999807e-05, 1.615300000000139e-05, 1.541700000000021e-05, 1.6041999999997364e-05, 1.538900000000107e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.5749999999998404e-05, 1.616700000000096e-05, 1.609699999999964e-05, 1.6028000000001263e-05, 1.6097999999999113e-05, 1.5749999999998404e-05, 1.541700000000021e-05, 1.5819999999999723e-05, 1.60690000000005e-05, 1.5402000000001165e-05, 1.5708999999999168e-05, 1.540300000000064e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.5430000000000305e-05, 1.5735999999998834e-05, 1.6097999999999113e-05, 1.541700000000021e-05, 1.5736000000002304e-05, 1.5749999999998404e-05, 1.5416000000000735e-05, 1.540300000000064e-05, 1.6097999999999113e-05, 1.6069999999999973e-05, 1.609699999999964e-05, 1.5749999999998404e-05, 1.611100000000268e-05]</msg>
<status status="PASS" starttime="20201030 15:54:06.908" endtime="20201030 15:54:06.910"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.903" endtime="20201030 15:54:06.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:06.914" endtime="20201030 15:54:06.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.913" endtime="20201030 15:54:06.934"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.912" endtime="20201030 15:54:06.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.557" endtime="20201030 15:54:06.935"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.556" endtime="20201030 15:54:06.935"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.944" endtime="20201030 15:54:06.960"></status>
</kw>
<msg timestamp="20201030 15:54:06.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.942" endtime="20201030 15:54:06.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:06.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:06.962" endtime="20201030 15:54:06.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.964" endtime="20201030 15:54:06.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.940" endtime="20201030 15:54:06.966"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.938" endtime="20201030 15:54:06.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:06.973" endtime="20201030 15:54:07.265"></status>
</kw>
<msg timestamp="20201030 15:54:07.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02062125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:06.972" endtime="20201030 15:54:07.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020604792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02062125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:07.269" endtime="20201030 15:54:07.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.277" endtime="20201030 15:54:07.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.969" endtime="20201030 15:54:07.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.967" endtime="20201030 15:54:07.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.284" level="INFO">${RESULT} = [{'diff': 1.6458000000000444e-05}, {'diff': 1.641699999999774e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.679099999999864e-05}, {'diff': 1.679100000000211e-05}, {'diff': 1.715300000000239e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:07.280" endtime="20201030 15:54:07.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:07.288" level="INFO">${ACCURACY} = {'diff': [1.6458000000000444e-05, 1.641699999999774e-05, 1.713899999999935e-05, 1.679099999999864e-05, 1.679100000000211e-05, 1.715300000000239e-05, 1.677700000000254e-05, 1.713899999999935e-05, 1.645...</msg>
<status status="PASS" starttime="20201030 15:54:07.285" endtime="20201030 15:54:07.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.292" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 15:54:07.291" endtime="20201030 15:54:07.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.295" level="INFO">VALUE: [1.6458000000000444e-05, 1.641699999999774e-05, 1.713899999999935e-05, 1.679099999999864e-05, 1.679100000000211e-05, 1.715300000000239e-05, 1.677700000000254e-05, 1.713899999999935e-05, 1.6458999999999918e-05, 1.7098000000000113e-05, 1.6444000000000875e-05, 1.6778000000002014e-05, 1.712499999999978e-05, 1.6806000000001153e-05, 1.641699999999774e-05, 1.6778000000002014e-05, 1.679099999999864e-05, 1.6792000000001583e-05, 1.6499999999999154e-05, 1.6819999999997254e-05, 1.680500000000168e-05, 1.713899999999935e-05, 1.6445000000000348e-05, 1.6847999999999863e-05, 1.6777999999998544e-05, 1.6445000000000348e-05, 1.6445000000000348e-05, 1.6749999999999404e-05, 1.6445000000000348e-05, 1.713899999999935e-05, 1.6778000000002014e-05, 1.6445000000000348e-05, 1.6777999999998544e-05, 1.677700000000254e-05, 1.683300000000082e-05, 1.7111999999999683e-05, 1.713899999999935e-05, 1.6778000000002014e-05, 1.715299999999892e-05, 1.6791999999998114e-05, 1.70829999999976e-05, 1.6458000000000444e-05, 1.644499999999688e-05, 1.6820000000000723e-05, 1.6499999999999154e-05, 1.6444000000000875e-05, 1.713899999999935e-05, 1.6791999999998114e-05, 1.7180000000002055e-05, 1.643100000000078e-05]</msg>
<status status="PASS" starttime="20201030 15:54:07.293" endtime="20201030 15:54:07.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.289" endtime="20201030 15:54:07.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.300" endtime="20201030 15:54:07.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.298" endtime="20201030 15:54:07.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.297" endtime="20201030 15:54:07.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.936" endtime="20201030 15:54:07.320"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:06.935" endtime="20201030 15:54:07.320"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.329" endtime="20201030 15:54:07.345"></status>
</kw>
<msg timestamp="20201030 15:54:07.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.327" endtime="20201030 15:54:07.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.346" endtime="20201030 15:54:07.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.349" endtime="20201030 15:54:07.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.325" endtime="20201030 15:54:07.351"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.323" endtime="20201030 15:54:07.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.358" endtime="20201030 15:54:07.644"></status>
</kw>
<msg timestamp="20201030 15:54:07.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.356" endtime="20201030 15:54:07.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020601556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020619708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.648" endtime="20201030 15:54:07.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.657" endtime="20201030 15:54:07.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.354" endtime="20201030 15:54:07.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.352" endtime="20201030 15:54:07.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:07.666" level="INFO">${RESULT} = [{'diff': 1.8152000000000446e-05}, {'diff': 1.740300000000264e-05}, {'diff': 1.781899999999878e-05}, {'diff': 1.7485999999997115e-05}, {'diff': 1.783299999999835e-05}, {'diff': 1.7528000000002764e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:07.662" endtime="20201030 15:54:07.667"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:07.673" level="INFO">${ACCURACY} = {'diff': [1.8152000000000446e-05, 1.740300000000264e-05, 1.781899999999878e-05, 1.7485999999997115e-05, 1.783299999999835e-05, 1.7528000000002764e-05, 1.712499999999978e-05, 1.812500000000078e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:54:07.668" endtime="20201030 15:54:07.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.680" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 15:54:07.679" endtime="20201030 15:54:07.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.689" level="INFO">VALUE: [1.8152000000000446e-05, 1.740300000000264e-05, 1.781899999999878e-05, 1.7485999999997115e-05, 1.783299999999835e-05, 1.7528000000002764e-05, 1.712499999999978e-05, 1.812500000000078e-05, 1.818100000000253e-05, 1.816699999999949e-05, 1.7471999999997545e-05, 1.7486000000000584e-05, 1.7820000000001723e-05, 1.7486000000000584e-05, 1.7833999999997824e-05, 1.783299999999835e-05, 1.8193999999999155e-05, 1.7834000000001293e-05, 1.783300000000182e-05, 1.781900000000225e-05, 1.7820000000001723e-05, 1.7820000000001723e-05, 1.8179999999999585e-05, 1.781899999999878e-05, 1.8166000000000015e-05, 1.7486000000000584e-05, 1.8152000000000446e-05, 1.754100000000286e-05, 1.8166000000000015e-05, 1.8207999999998725e-05, 1.7472000000001014e-05, 1.7819999999998254e-05, 1.780500000000268e-05, 1.7819999999998254e-05, 1.781899999999878e-05, 1.781899999999878e-05, 1.783300000000182e-05, 1.8179999999999585e-05, 1.7486000000000584e-05, 1.816699999999949e-05, 1.7471999999997545e-05, 1.7459000000000918e-05, 1.8166000000000015e-05, 1.783299999999835e-05, 1.8179999999999585e-05, 1.7805999999998684e-05, 1.7513999999999724e-05, 1.7791999999999114e-05, 1.7472000000001014e-05, 1.7500000000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:54:07.682" endtime="20201030 15:54:07.690"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.675" endtime="20201030 15:54:07.691"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:07.694" endtime="20201030 15:54:07.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.693" endtime="20201030 15:54:07.714"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.692" endtime="20201030 15:54:07.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.321" endtime="20201030 15:54:07.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.321" endtime="20201030 15:54:07.715"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.724" endtime="20201030 15:54:07.738"></status>
</kw>
<msg timestamp="20201030 15:54:07.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.722" endtime="20201030 15:54:07.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:07.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:07.740" endtime="20201030 15:54:07.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.742" endtime="20201030 15:54:07.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.720" endtime="20201030 15:54:07.744"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.717" endtime="20201030 15:54:07.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:07.751" endtime="20201030 15:54:08.038"></status>
</kw>
<msg timestamp="20201030 15:54:08.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:07.750" endtime="20201030 15:54:08.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019856778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.042" endtime="20201030 15:54:08.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.050" endtime="20201030 15:54:08.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.747" endtime="20201030 15:54:08.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.745" endtime="20201030 15:54:08.052"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:08.056" level="INFO">${RESULT} = [{'diff': 1.884700000000239e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.888899999999763e-05}, {'diff': 1.890300000000067e-05}, {'diff': 1.9207999999999725e-05}, {'diff': 1.881899999999978e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:08.053" endtime="20201030 15:54:08.057"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:08.061" level="INFO">${ACCURACY} = {'diff': [1.884700000000239e-05, 1.8514000000000724e-05, 1.888899999999763e-05, 1.890300000000067e-05, 1.9207999999999725e-05, 1.881899999999978e-05, 1.9236000000002335e-05, 1.815299999999992e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 15:54:08.057" endtime="20201030 15:54:08.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.066" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 15:54:08.065" endtime="20201030 15:54:08.066"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.068" level="INFO">VALUE: [1.884700000000239e-05, 1.8514000000000724e-05, 1.888899999999763e-05, 1.890300000000067e-05, 1.9207999999999725e-05, 1.881899999999978e-05, 1.9236000000002335e-05, 1.815299999999992e-05, 1.884700000000239e-05, 1.8514000000000724e-05, 1.92089999999992e-05, 1.913899999999788e-05, 1.8222000000001765e-05, 1.884700000000239e-05, 1.8861999999997964e-05, 1.918100000000006e-05, 1.92089999999992e-05, 1.92089999999992e-05, 1.887500000000153e-05, 1.92089999999992e-05, 1.916700000000049e-05, 1.884699999999892e-05, 1.9207999999999725e-05, 1.887499999999806e-05, 1.8819999999999254e-05, 1.887499999999806e-05, 1.92089999999992e-05, 1.8499999999997685e-05, 1.8500000000001154e-05, 1.881899999999978e-05, 1.8514000000000724e-05, 1.9180000000000585e-05, 1.9207999999999725e-05, 1.886100000000196e-05, 1.887500000000153e-05, 1.8179999999999585e-05, 1.8862000000001433e-05, 1.92089999999992e-05, 1.8513999999997255e-05, 1.8513999999997255e-05, 1.886099999999849e-05, 1.877700000000107e-05, 1.8848000000001863e-05, 1.8528000000000294e-05, 1.818099999999906e-05, 1.9166000000001016e-05, 1.92089999999992e-05, 1.8833999999998824e-05, 1.8527999999996825e-05, 1.919499999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:54:08.067" endtime="20201030 15:54:08.069"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.062" endtime="20201030 15:54:08.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:08.073" endtime="20201030 15:54:08.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.072" endtime="20201030 15:54:08.093"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.071" endtime="20201030 15:54:08.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.716" endtime="20201030 15:54:08.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:07.715" endtime="20201030 15:54:08.094"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.103" endtime="20201030 15:54:08.119"></status>
</kw>
<msg timestamp="20201030 15:54:08.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.101" endtime="20201030 15:54:08.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.120" endtime="20201030 15:54:08.122"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.123" endtime="20201030 15:54:08.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.099" endtime="20201030 15:54:08.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.097" endtime="20201030 15:54:08.125"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.132" endtime="20201030 15:54:08.418"></status>
</kw>
<msg timestamp="20201030 15:54:08.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.130" endtime="20201030 15:54:08.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020194528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020214431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.422" endtime="20201030 15:54:08.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.430" endtime="20201030 15:54:08.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.128" endtime="20201030 15:54:08.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.126" endtime="20201030 15:54:08.433"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:08.437" level="INFO">${RESULT} = [{'diff': 1.990300000000167e-05}, {'diff': 1.990300000000167e-05}, {'diff': 1.918100000000006e-05}, {'diff': 1.99029999999982e-05}, {'diff': 1.991700000000124e-05}, {'diff': 1.9556000000000434e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:08.434" endtime="20201030 15:54:08.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:08.441" level="INFO">${ACCURACY} = {'diff': [1.990300000000167e-05, 1.990300000000167e-05, 1.918100000000006e-05, 1.99029999999982e-05, 1.991700000000124e-05, 1.9556000000000434e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 1.99...</msg>
<status status="PASS" starttime="20201030 15:54:08.438" endtime="20201030 15:54:08.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.445" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 15:54:08.444" endtime="20201030 15:54:08.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.448" level="INFO">VALUE: [1.990300000000167e-05, 1.990300000000167e-05, 1.918100000000006e-05, 1.99029999999982e-05, 1.991700000000124e-05, 1.9556000000000434e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 1.990300000000167e-05, 1.991699999999777e-05, 1.9901999999998726e-05, 1.923699999999834e-05, 1.99029999999982e-05, 1.9235999999998865e-05, 1.955500000000096e-05, 1.987499999999906e-05, 1.955500000000096e-05, 1.987500000000253e-05, 1.9902000000002196e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 1.9556000000000434e-05, 2.0235999999999865e-05, 1.9235999999998865e-05, 2.0235999999999865e-05, 1.990300000000167e-05, 1.956900000000053e-05, 1.987500000000253e-05, 1.9194000000000155e-05, 2.030500000000171e-05, 1.986099999999949e-05, 1.9556000000000434e-05, 1.987499999999906e-05, 1.9542000000000864e-05, 2.0235999999999865e-05, 2.0249999999999435e-05, 1.9930000000001336e-05, 1.99029999999982e-05, 1.9263999999998005e-05, 1.98890000000021e-05, 1.9972000000000045e-05, 1.988899999999863e-05, 1.9542000000000864e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 1.9570000000000004e-05, 1.9902000000002196e-05, 1.988899999999863e-05, 1.9555999999996965e-05, 1.919499999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:54:08.447" endtime="20201030 15:54:08.449"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.442" endtime="20201030 15:54:08.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:08.453" endtime="20201030 15:54:08.472"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.451" endtime="20201030 15:54:08.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.450" endtime="20201030 15:54:08.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.095" endtime="20201030 15:54:08.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.094" endtime="20201030 15:54:08.474"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.482" endtime="20201030 15:54:08.499"></status>
</kw>
<msg timestamp="20201030 15:54:08.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.481" endtime="20201030 15:54:08.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.501" endtime="20201030 15:54:08.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.503" endtime="20201030 15:54:08.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.478" endtime="20201030 15:54:08.505"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.476" endtime="20201030 15:54:08.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.512" endtime="20201030 15:54:08.799"></status>
</kw>
<msg timestamp="20201030 15:54:08.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.511" endtime="20201030 15:54:08.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021212417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021233681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.803" endtime="20201030 15:54:08.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.811" endtime="20201030 15:54:08.812"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.508" endtime="20201030 15:54:08.813"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.507" endtime="20201030 15:54:08.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:08.817" level="INFO">${RESULT} = [{'diff': 2.1264000000000005e-05}, {'diff': 2.1250000000000435e-05}, {'diff': 2.0249999999999435e-05}, {'diff': 2.0555999999997965e-05}, {'diff': 2.05830000000011e-05}, {'diff': 2.0943999999998436e-05...</msg>
<status status="PASS" starttime="20201030 15:54:08.814" endtime="20201030 15:54:08.818"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:08.822" level="INFO">${ACCURACY} = {'diff': [2.1264000000000005e-05, 2.1250000000000435e-05, 2.0249999999999435e-05, 2.0555999999997965e-05, 2.05830000000011e-05, 2.0943999999998436e-05, 2.091699999999877e-05, 2.088899999999963e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:08.818" endtime="20201030 15:54:08.822"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.826" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 15:54:08.825" endtime="20201030 15:54:08.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.829" level="INFO">VALUE: [2.1264000000000005e-05, 2.1250000000000435e-05, 2.0249999999999435e-05, 2.0555999999997965e-05, 2.05830000000011e-05, 2.0943999999998436e-05, 2.091699999999877e-05, 2.088899999999963e-05, 2.0985999999997146e-05, 2.056899999999806e-05, 2.0249999999999435e-05, 2.056899999999806e-05, 2.1264000000000005e-05, 2.0986000000000615e-05, 2.1277999999999575e-05, 2.1264000000000005e-05, 2.094500000000138e-05, 2.0514000000002724e-05, 2.0541999999998395e-05, 2.0235999999999865e-05, 2.130499999999924e-05, 2.0929999999998866e-05, 2.05830000000011e-05, 2.0598000000000144e-05, 2.1000000000000185e-05, 2.1264000000000005e-05, 2.0929999999998866e-05, 2.1277999999999575e-05, 2.091699999999877e-05, 2.1264000000000005e-05, 2.0929999999998866e-05, 2.086099999999702e-05, 2.093100000000181e-05, 2.091699999999877e-05, 2.0915999999999296e-05, 2.09029999999992e-05, 2.058299999999763e-05, 2.0944000000001906e-05, 2.061100000000024e-05, 2.091699999999877e-05, 2.0249999999999435e-05, 2.094500000000138e-05, 2.0929999999998866e-05, 2.1000000000000185e-05, 2.059700000000067e-05, 2.1277999999999575e-05, 2.0929999999998866e-05, 2.0235999999999865e-05, 2.091699999999877e-05, 2.093099999999834e-05]</msg>
<status status="PASS" starttime="20201030 15:54:08.827" endtime="20201030 15:54:08.830"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.823" endtime="20201030 15:54:08.831"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:08.834" endtime="20201030 15:54:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.833" endtime="20201030 15:54:08.854"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.832" endtime="20201030 15:54:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.475" endtime="20201030 15:54:08.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.474" endtime="20201030 15:54:08.855"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.864" endtime="20201030 15:54:08.881"></status>
</kw>
<msg timestamp="20201030 15:54:08.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.862" endtime="20201030 15:54:08.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:08.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:08.882" endtime="20201030 15:54:08.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.887" endtime="20201030 15:54:08.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.860" endtime="20201030 15:54:08.890"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.858" endtime="20201030 15:54:08.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:08.899" endtime="20201030 15:54:09.186"></status>
</kw>
<msg timestamp="20201030 15:54:09.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:08.897" endtime="20201030 15:54:09.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020795042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.190" endtime="20201030 15:54:09.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.198" endtime="20201030 15:54:09.200"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.893" endtime="20201030 15:54:09.201"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.891" endtime="20201030 15:54:09.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.205" level="INFO">${RESULT} = [{'diff': 2.1250000000000435e-05}, {'diff': 2.165299999999995e-05}, {'diff': 2.1986000000001615e-05}, {'diff': 2.198700000000109e-05}, {'diff': 2.126300000000053e-05}, {'diff': 2.1264000000000005e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:09.202" endtime="20201030 15:54:09.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:09.210" level="INFO">${ACCURACY} = {'diff': [2.1250000000000435e-05, 2.165299999999995e-05, 2.1986000000001615e-05, 2.198700000000109e-05, 2.126300000000053e-05, 2.1264000000000005e-05, 2.1957999999999006e-05, 2.162500000000081e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:09.206" endtime="20201030 15:54:09.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.215" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 15:54:09.214" endtime="20201030 15:54:09.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.217" level="INFO">VALUE: [2.1250000000000435e-05, 2.165299999999995e-05, 2.1986000000001615e-05, 2.198700000000109e-05, 2.126300000000053e-05, 2.1264000000000005e-05, 2.1957999999999006e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.1277999999999575e-05, 2.1916000000000296e-05, 2.1943999999999436e-05, 2.1277999999999575e-05, 2.1972000000002045e-05, 2.1277999999999575e-05, 2.2026999999997382e-05, 2.1957999999999006e-05, 2.1957999999999006e-05, 2.161099999999777e-05, 2.2319999999999285e-05, 2.1972000000002045e-05, 2.1264000000000005e-05, 2.162500000000081e-05, 2.119499999999816e-05, 2.236099999999852e-05, 2.1958000000002476e-05, 2.161100000000124e-05, 2.1250000000000435e-05, 2.161099999999777e-05, 2.12770000000001e-05, 2.165299999999995e-05, 2.1929999999999866e-05, 2.165299999999995e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.166699999999952e-05, 2.195899999999848e-05, 2.234699999999895e-05, 2.162500000000081e-05, 2.161100000000124e-05, 2.1291999999999145e-05, 2.2000000000001185e-05, 2.233299999999938e-05, 2.197300000000152e-05, 2.1971999999998576e-05, 2.1277999999999575e-05, 2.1957999999999006e-05, 2.1972000000002045e-05, 2.1985999999998146e-05, 2.162499999999734e-05]</msg>
<status status="PASS" starttime="20201030 15:54:09.216" endtime="20201030 15:54:09.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.211" endtime="20201030 15:54:09.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.222" endtime="20201030 15:54:09.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.221" endtime="20201030 15:54:09.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.219" endtime="20201030 15:54:09.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.856" endtime="20201030 15:54:09.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:08.855" endtime="20201030 15:54:09.243"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.252" endtime="20201030 15:54:09.268"></status>
</kw>
<msg timestamp="20201030 15:54:09.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.251" endtime="20201030 15:54:09.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.269" endtime="20201030 15:54:09.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.272" endtime="20201030 15:54:09.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.248" endtime="20201030 15:54:09.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.246" endtime="20201030 15:54:09.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.281" endtime="20201030 15:54:09.569"></status>
</kw>
<msg timestamp="20201030 15:54:09.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.279" endtime="20201030 15:54:09.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020487194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:09.573" endtime="20201030 15:54:09.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.581" endtime="20201030 15:54:09.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.277" endtime="20201030 15:54:09.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.275" endtime="20201030 15:54:09.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:09.588" level="INFO">${RESULT} = [{'diff': 2.2680000000000616e-05}, {'diff': 2.266700000000052e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.3042000000000895e-05}, {'diff': 2.231899999999981e-05}, {'diff': 2.3000000000002185e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:09.584" endtime="20201030 15:54:09.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:09.592" level="INFO">${ACCURACY} = {'diff': [2.2680000000000616e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.3042000000000895e-05, 2.231899999999981e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.263900000000138e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:09.589" endtime="20201030 15:54:09.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.596" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 15:54:09.595" endtime="20201030 15:54:09.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.599" level="INFO">VALUE: [2.2680000000000616e-05, 2.266700000000052e-05, 2.263900000000138e-05, 2.3042000000000895e-05, 2.231899999999981e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.263900000000138e-05, 2.2735999999998896e-05, 2.25969999999992e-05, 2.3000000000002185e-05, 2.2680000000000616e-05, 2.263900000000138e-05, 2.2999999999998716e-05, 2.265300000000095e-05, 2.3042000000000895e-05, 2.334699999999995e-05, 2.265300000000095e-05, 2.2999999999998716e-05, 2.236099999999852e-05, 2.265299999999748e-05, 2.336099999999952e-05, 2.2652000000001477e-05, 2.337500000000256e-05, 2.266700000000052e-05, 2.2666000000001046e-05, 2.2944000000000436e-05, 2.266699999999705e-05, 2.2985999999999146e-05, 2.2292000000000145e-05, 2.2666000000001046e-05, 2.2665999999997577e-05, 2.265300000000095e-05, 2.3362000000002464e-05, 2.265300000000095e-05, 2.3000000000002185e-05, 2.34030000000017e-05, 2.2292000000000145e-05, 2.2999999999998716e-05, 2.265300000000095e-05, 2.3014000000001755e-05, 2.334699999999995e-05, 2.25969999999992e-05, 2.269499999999966e-05, 2.261099999999877e-05, 2.3000000000002185e-05, 2.263900000000138e-05, 2.2985999999999146e-05, 2.231899999999981e-05, 2.2292000000000145e-05]</msg>
<status status="PASS" starttime="20201030 15:54:09.597" endtime="20201030 15:54:09.599"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.593" endtime="20201030 15:54:09.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:09.604" endtime="20201030 15:54:09.623"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.602" endtime="20201030 15:54:09.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.601" endtime="20201030 15:54:09.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.244" endtime="20201030 15:54:09.624"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.244" endtime="20201030 15:54:09.624"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.633" endtime="20201030 15:54:09.652"></status>
</kw>
<msg timestamp="20201030 15:54:09.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.631" endtime="20201030 15:54:09.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:09.655" endtime="20201030 15:54:09.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.659" endtime="20201030 15:54:09.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.629" endtime="20201030 15:54:09.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.627" endtime="20201030 15:54:09.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.685" endtime="20201030 15:54:09.980"></status>
</kw>
<msg timestamp="20201030 15:54:09.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:09.683" endtime="20201030 15:54:09.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:09.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021629903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02165325, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:09.985" endtime="20201030 15:54:09.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:09.993" endtime="20201030 15:54:09.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.679" endtime="20201030 15:54:09.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.675" endtime="20201030 15:54:09.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.000" level="INFO">${RESULT} = [{'diff': 2.334699999999995e-05}, {'diff': 2.4042000000001895e-05}, {'diff': 2.4013999999999286e-05}, {'diff': 2.369500000000066e-05}, {'diff': 2.368100000000109e-05}, {'diff': 2.369499999999719e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:09.997" endtime="20201030 15:54:10.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:10.005" level="INFO">${ACCURACY} = {'diff': [2.334699999999995e-05, 2.4042000000001895e-05, 2.4013999999999286e-05, 2.369500000000066e-05, 2.368100000000109e-05, 2.369499999999719e-05, 2.3277999999998106e-05, 2.3708000000000756e-05, 2....</msg>
<status status="PASS" starttime="20201030 15:54:10.001" endtime="20201030 15:54:10.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.009" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 15:54:10.008" endtime="20201030 15:54:10.010"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.012" level="INFO">VALUE: [2.334699999999995e-05, 2.4042000000001895e-05, 2.4013999999999286e-05, 2.369500000000066e-05, 2.368100000000109e-05, 2.369499999999719e-05, 2.3277999999998106e-05, 2.3708000000000756e-05, 2.4084000000000605e-05, 2.4027999999998856e-05, 2.369500000000066e-05, 2.3693999999997717e-05, 2.4041999999998426e-05, 2.4056000000001465e-05, 2.333300000000038e-05, 2.4028000000002325e-05, 2.4042000000001895e-05, 2.334699999999995e-05, 2.334699999999995e-05, 2.4041999999998426e-05, 2.337500000000256e-05, 2.369500000000066e-05, 2.3278000000001575e-05, 2.404100000000242e-05, 2.3972000000000576e-05, 2.368100000000109e-05, 2.4054999999998522e-05, 2.3347999999999425e-05, 2.337499999999909e-05, 2.3679999999998147e-05, 2.334699999999995e-05, 2.4027999999998856e-05, 2.370900000000023e-05, 2.3347999999999425e-05, 2.3722000000000326e-05, 2.3972000000000576e-05, 2.44030000000027e-05, 2.334699999999995e-05, 2.4041999999998426e-05, 2.4027999999998856e-05, 2.4027999999998856e-05, 2.4348000000000425e-05, 2.369500000000066e-05, 2.334699999999995e-05, 2.4042000000001895e-05, 2.4042000000001895e-05, 2.4056000000001465e-05, 2.3680000000001616e-05, 2.4070000000001035e-05, 2.3708000000000756e-05]</msg>
<status status="PASS" starttime="20201030 15:54:10.010" endtime="20201030 15:54:10.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.005" endtime="20201030 15:54:10.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.018" endtime="20201030 15:54:10.037"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.016" endtime="20201030 15:54:10.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.015" endtime="20201030 15:54:10.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.625" endtime="20201030 15:54:10.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:09.625" endtime="20201030 15:54:10.039"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.048" endtime="20201030 15:54:10.065"></status>
</kw>
<msg timestamp="20201030 15:54:10.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.046" endtime="20201030 15:54:10.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.066" endtime="20201030 15:54:10.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.069" endtime="20201030 15:54:10.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.044" endtime="20201030 15:54:10.071"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.041" endtime="20201030 15:54:10.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.079" endtime="20201030 15:54:10.366"></status>
</kw>
<msg timestamp="20201030 15:54:10.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.077" endtime="20201030 15:54:10.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021274486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021299222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.370" endtime="20201030 15:54:10.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.379" endtime="20201030 15:54:10.380"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.074" endtime="20201030 15:54:10.381"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.072" endtime="20201030 15:54:10.381"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.386" level="INFO">${RESULT} = [{'diff': 2.4736000000000896e-05}, {'diff': 2.5082999999998662e-05}, {'diff': 2.5027999999999856e-05}, {'diff': 2.5097999999997705e-05}, {'diff': 2.5014000000000286e-05}, {'diff': 2.438899999999966e-0...</msg>
<status status="PASS" starttime="20201030 15:54:10.382" endtime="20201030 15:54:10.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:10.391" level="INFO">${ACCURACY} = {'diff': [2.4736000000000896e-05, 2.5082999999998662e-05, 2.5027999999999856e-05, 2.5097999999997705e-05, 2.5014000000000286e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.4388000000000187e-05, 2...</msg>
<status status="PASS" starttime="20201030 15:54:10.387" endtime="20201030 15:54:10.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.396" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 15:54:10.394" endtime="20201030 15:54:10.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.398" level="INFO">VALUE: [2.4736000000000896e-05, 2.5082999999998662e-05, 2.5027999999999856e-05, 2.5097999999997705e-05, 2.5014000000000286e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2.5069999999998566e-05, 2.4722000000001326e-05, 2.473700000000037e-05, 2.5096999999998232e-05, 2.5083999999998136e-05, 2.4722000000001326e-05, 2.512499999999737e-05, 2.5084000000001605e-05, 2.508300000000213e-05, 2.4443999999998467e-05, 2.5069999999998566e-05, 2.4736000000000896e-05, 2.4707999999998287e-05, 2.438899999999966e-05, 2.4736000000000896e-05, 2.4721999999997857e-05, 2.438899999999966e-05, 2.5070000000002035e-05, 2.437500000000009e-05, 2.508300000000213e-05, 2.506900000000256e-05, 2.4722000000001326e-05, 2.4401999999999757e-05, 2.5082999999998662e-05, 2.434700000000095e-05, 2.5096999999998232e-05, 2.4736000000000896e-05, 2.511100000000127e-05, 2.4318999999998342e-05, 2.4722000000001326e-05, 2.5082999999998662e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.4401999999999757e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.5084000000001605e-05, 2.505500000000299e-05, 2.436100000000052e-05, 2.4708000000001756e-05, 2.5082999999998662e-05]</msg>
<status status="PASS" starttime="20201030 15:54:10.397" endtime="20201030 15:54:10.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.392" endtime="20201030 15:54:10.400"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.403" endtime="20201030 15:54:10.423"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.402" endtime="20201030 15:54:10.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.401" endtime="20201030 15:54:10.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.040" endtime="20201030 15:54:10.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.039" endtime="20201030 15:54:10.425"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.434" endtime="20201030 15:54:10.450"></status>
</kw>
<msg timestamp="20201030 15:54:10.450" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.432" endtime="20201030 15:54:10.450"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.451" endtime="20201030 15:54:10.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.454" endtime="20201030 15:54:10.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.429" endtime="20201030 15:54:10.456"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.427" endtime="20201030 15:54:10.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.463" endtime="20201030 15:54:10.751"></status>
</kw>
<msg timestamp="20201030 15:54:10.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.462" endtime="20201030 15:54:10.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020931917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.755" endtime="20201030 15:54:10.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.764" endtime="20201030 15:54:10.765"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.459" endtime="20201030 15:54:10.766"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.457" endtime="20201030 15:54:10.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:10.771" level="INFO">${RESULT} = [{'diff': 2.5429999999999897e-05}, {'diff': 2.5416000000000327e-05}, {'diff': 2.5762999999998093e-05}, {'diff': 2.611100000000227e-05}, {'diff': 2.5778000000000606e-05}, {'diff': 2.6124999999998372e-0...</msg>
<status status="PASS" starttime="20201030 15:54:10.767" endtime="20201030 15:54:10.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:10.775" level="INFO">${ACCURACY} = {'diff': [2.5429999999999897e-05, 2.5416000000000327e-05, 2.5762999999998093e-05, 2.611100000000227e-05, 2.5778000000000606e-05, 2.6124999999998372e-05, 2.6110999999998802e-05, 2.5750000000001466e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:10.772" endtime="20201030 15:54:10.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.780" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 15:54:10.779" endtime="20201030 15:54:10.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.782" level="INFO">VALUE: [2.5429999999999897e-05, 2.5416000000000327e-05, 2.5762999999998093e-05, 2.611100000000227e-05, 2.5778000000000606e-05, 2.6124999999998372e-05, 2.6110999999998802e-05, 2.5750000000001466e-05, 2.6096999999999232e-05, 2.6028000000000856e-05, 2.6082999999999662e-05, 2.54169999999998e-05, 2.612500000000184e-05, 2.5735999999998427e-05, 2.6111999999998275e-05, 2.6112000000001745e-05, 2.6110999999998802e-05, 2.5778000000000606e-05, 2.6083999999999136e-05, 2.5763999999997567e-05, 2.5778000000000606e-05, 2.6098000000002175e-05, 2.5416000000000327e-05, 2.5429999999999897e-05, 2.611100000000227e-05, 2.5763999999997567e-05, 2.6110999999998802e-05, 2.612500000000184e-05, 2.5750000000001466e-05, 2.5750000000001466e-05, 2.5805000000000272e-05, 2.60970000000027e-05, 2.5764000000001036e-05, 2.54169999999998e-05, 2.5457999999999037e-05, 2.544500000000241e-05, 2.54169999999998e-05, 2.6082999999999662e-05, 2.5805999999999746e-05, 2.5749999999997997e-05, 2.5472000000002076e-05, 2.6096999999999232e-05, 2.5819999999999316e-05, 2.5429999999999897e-05, 2.6069000000000092e-05, 2.5764000000001036e-05, 2.612500000000184e-05, 2.5416000000000327e-05, 2.6110999999998802e-05, 2.5764000000001036e-05]</msg>
<status status="PASS" starttime="20201030 15:54:10.781" endtime="20201030 15:54:10.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.776" endtime="20201030 15:54:10.784"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:10.787" endtime="20201030 15:54:10.807"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.786" endtime="20201030 15:54:10.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.785" endtime="20201030 15:54:10.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.425" endtime="20201030 15:54:10.808"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.425" endtime="20201030 15:54:10.808"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.818" endtime="20201030 15:54:10.834"></status>
</kw>
<msg timestamp="20201030 15:54:10.835" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.816" endtime="20201030 15:54:10.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:10.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:10.836" endtime="20201030 15:54:10.838"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.838" endtime="20201030 15:54:10.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.813" endtime="20201030 15:54:10.841"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.811" endtime="20201030 15:54:10.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:10.848" endtime="20201030 15:54:11.134"></status>
</kw>
<msg timestamp="20201030 15:54:11.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021561931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:10.846" endtime="20201030 15:54:11.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021535125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021561931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.138" endtime="20201030 15:54:11.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.147" endtime="20201030 15:54:11.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.844" endtime="20201030 15:54:11.149"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.842" endtime="20201030 15:54:11.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:11.154" level="INFO">${RESULT} = [{'diff': 2.6806000000000746e-05}, {'diff': 2.6485999999999177e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.6833000000000412e-05}, {'diff': 2.715300000000198e-05}, {'diff': 2.6804999999997803e-0...</msg>
<status status="PASS" starttime="20201030 15:54:11.150" endtime="20201030 15:54:11.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:11.158" level="INFO">${ACCURACY} = {'diff': [2.6806000000000746e-05, 2.6485999999999177e-05, 2.6458000000000037e-05, 2.6833000000000412e-05, 2.715300000000198e-05, 2.6804999999997803e-05, 2.6819000000000842e-05, 2.719500000000069e-05, ...</msg>
<status status="PASS" starttime="20201030 15:54:11.155" endtime="20201030 15:54:11.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.163" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 15:54:11.161" endtime="20201030 15:54:11.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.168" level="INFO">VALUE: [2.6806000000000746e-05, 2.6485999999999177e-05, 2.6458000000000037e-05, 2.6833000000000412e-05, 2.715300000000198e-05, 2.6804999999997803e-05, 2.6819000000000842e-05, 2.719500000000069e-05, 2.6805000000001272e-05, 2.6792000000001176e-05, 2.6458000000000037e-05, 2.6096999999999232e-05, 2.6458000000000037e-05, 2.6429999999997428e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.6805999999997276e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.6791999999997707e-05, 2.6458000000000037e-05, 2.6806000000000746e-05, 2.6846999999999982e-05, 2.6096999999999232e-05, 2.6458000000000037e-05, 2.7138999999998942e-05, 2.6820000000000316e-05, 2.6820000000000316e-05, 2.645899999999951e-05, 2.6458000000000037e-05, 2.6458000000000037e-05, 2.715300000000198e-05, 2.6777999999998137e-05, 2.6764000000002036e-05, 2.715300000000198e-05, 2.6819000000000842e-05, 2.715299999999851e-05, 2.6819000000000842e-05, 2.7083000000000662e-05, 2.6541999999997457e-05, 2.715299999999851e-05, 2.6471999999999607e-05, 2.6792000000001176e-05, 2.6458000000000037e-05, 2.6819000000000842e-05, 2.619499999999969e-05, 2.6458000000000037e-05, 2.6848000000002925e-05, 2.6819000000000842e-05, 2.7083000000000662e-05]</msg>
<status status="PASS" starttime="20201030 15:54:11.164" endtime="20201030 15:54:11.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.159" endtime="20201030 15:54:11.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:11.174" endtime="20201030 15:54:11.193"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.172" endtime="20201030 15:54:11.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.171" endtime="20201030 15:54:11.194"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.809" endtime="20201030 15:54:11.195"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:10.809" endtime="20201030 15:54:11.195"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.204" endtime="20201030 15:54:11.220"></status>
</kw>
<msg timestamp="20201030 15:54:11.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.202" endtime="20201030 15:54:11.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.222" endtime="20201030 15:54:11.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.224" endtime="20201030 15:54:11.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.200" endtime="20201030 15:54:11.227"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.198" endtime="20201030 15:54:11.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.234" endtime="20201030 15:54:11.521"></status>
</kw>
<msg timestamp="20201030 15:54:11.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.232" endtime="20201030 15:54:11.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020414764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020442222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.525" endtime="20201030 15:54:11.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.534" endtime="20201030 15:54:11.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.230" endtime="20201030 15:54:11.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.228" endtime="20201030 15:54:11.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:11.541" level="INFO">${RESULT} = [{'diff': 2.7458000000001037e-05}, {'diff': 2.7832999999997943e-05}, {'diff': 2.818099999999865e-05}, {'diff': 2.7818999999998373e-05}, {'diff': 2.7833000000001412e-05}, {'diff': 2.8264000000000067e-0...</msg>
<status status="PASS" starttime="20201030 15:54:11.538" endtime="20201030 15:54:11.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:11.546" level="INFO">${ACCURACY} = {'diff': [2.7458000000001037e-05, 2.7832999999997943e-05, 2.818099999999865e-05, 2.7818999999998373e-05, 2.7833000000001412e-05, 2.8264000000000067e-05, 2.7471999999997138e-05, 2.7847000000000982e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:11.542" endtime="20201030 15:54:11.546"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.551" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 15:54:11.550" endtime="20201030 15:54:11.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.553" level="INFO">VALUE: [2.7458000000001037e-05, 2.7832999999997943e-05, 2.818099999999865e-05, 2.7818999999998373e-05, 2.7833000000001412e-05, 2.8264000000000067e-05, 2.7471999999997138e-05, 2.7847000000000982e-05, 2.816699999999908e-05, 2.8194000000002217e-05, 2.7513000000003313e-05, 2.7792000000002176e-05, 2.7847000000000982e-05, 2.7833999999997416e-05, 2.7472000000000607e-05, 2.747300000000008e-05, 2.8208000000001787e-05, 2.7430000000001897e-05, 2.7512999999999843e-05, 2.74170000000018e-05, 2.7901999999999788e-05, 2.7833000000001412e-05, 2.7805999999998277e-05, 2.8152999999999512e-05, 2.7513999999999317e-05, 2.7832999999997943e-05, 2.7486000000000177e-05, 2.8264000000000067e-05, 2.7499999999999747e-05, 2.745900000000051e-05, 2.7832999999997943e-05, 2.7832999999997943e-05, 2.8193999999998748e-05, 2.818100000000212e-05, 2.7847000000000982e-05, 2.7860999999997083e-05, 2.8125000000000372e-05, 2.7832999999997943e-05, 2.818100000000212e-05, 2.7834000000000886e-05, 2.8152999999999512e-05, 2.7097999999999706e-05, 2.8179999999999178e-05, 2.7790999999999233e-05, 2.7500000000003216e-05, 2.8193999999998748e-05, 2.7513999999999317e-05, 2.7834000000000886e-05, 2.7820000000001316e-05, 2.820899999999779e-05]</msg>
<status status="PASS" starttime="20201030 15:54:11.552" endtime="20201030 15:54:11.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.547" endtime="20201030 15:54:11.555"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:11.559" endtime="20201030 15:54:11.578"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.557" endtime="20201030 15:54:11.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.556" endtime="20201030 15:54:11.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.196" endtime="20201030 15:54:11.579"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.195" endtime="20201030 15:54:11.580"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.589" endtime="20201030 15:54:11.605"></status>
</kw>
<msg timestamp="20201030 15:54:11.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.587" endtime="20201030 15:54:11.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.607" endtime="20201030 15:54:11.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.609" endtime="20201030 15:54:11.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.584" endtime="20201030 15:54:11.611"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.582" endtime="20201030 15:54:11.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.619" endtime="20201030 15:54:11.906"></status>
</kw>
<msg timestamp="20201030 15:54:11.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.617" endtime="20201030 15:54:11.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020916083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:11.910" endtime="20201030 15:54:11.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.919" endtime="20201030 15:54:11.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.614" endtime="20201030 15:54:11.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.613" endtime="20201030 15:54:11.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:11.926" level="INFO">${RESULT} = [{'diff': 2.8861000000001552e-05}, {'diff': 2.8889000000000692e-05}, {'diff': 2.8943999999999498e-05}, {'diff': 2.9221999999998888e-05}, {'diff': 2.8874999999997653e-05}, {'diff': 2.8889000000000692e-...</msg>
<status status="PASS" starttime="20201030 15:54:11.922" endtime="20201030 15:54:11.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:11.930" level="INFO">${ACCURACY} = {'diff': [2.8861000000001552e-05, 2.8889000000000692e-05, 2.8943999999999498e-05, 2.9221999999998888e-05, 2.8874999999997653e-05, 2.8889000000000692e-05, 2.9207999999999318e-05, 2.8527999999999887e-05...</msg>
<status status="PASS" starttime="20201030 15:54:11.927" endtime="20201030 15:54:11.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.935" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 15:54:11.934" endtime="20201030 15:54:11.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.937" level="INFO">VALUE: [2.8861000000001552e-05, 2.8889000000000692e-05, 2.8943999999999498e-05, 2.9221999999998888e-05, 2.8874999999997653e-05, 2.8889000000000692e-05, 2.9207999999999318e-05, 2.8527999999999887e-05, 2.8846999999998513e-05, 2.8903000000000262e-05, 2.8862000000001026e-05, 2.919499999999922e-05, 2.9221999999998888e-05, 2.9221999999998888e-05, 2.8527999999999887e-05, 2.8527000000000413e-05, 2.8875000000001122e-05, 2.8832999999998943e-05, 2.8527999999999887e-05, 2.8847000000001982e-05, 2.8860999999998083e-05, 2.8179999999999178e-05, 2.8875000000001122e-05, 2.8860999999998083e-05, 2.8542000000002926e-05, 2.9221999999998888e-05, 2.8862000000001026e-05, 2.8514000000000317e-05, 2.8875000000001122e-05, 2.8179999999999178e-05, 2.8527999999999887e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8888000000001218e-05, 2.8860999999998083e-05, 2.9278000000000637e-05, 2.8860999999998083e-05, 2.8541999999999457e-05, 2.8457999999998568e-05, 2.8527999999999887e-05, 2.8514000000000317e-05, 2.8875000000001122e-05, 2.8875000000001122e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8540999999999983e-05, 2.8554999999999553e-05, 2.818099999999865e-05, 2.8889000000000692e-05, 2.8874999999997653e-05]</msg>
<status status="PASS" starttime="20201030 15:54:11.936" endtime="20201030 15:54:11.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.931" endtime="20201030 15:54:11.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:11.942" endtime="20201030 15:54:11.962"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.941" endtime="20201030 15:54:11.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.940" endtime="20201030 15:54:11.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.581" endtime="20201030 15:54:11.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.580" endtime="20201030 15:54:11.963"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.972" endtime="20201030 15:54:11.990"></status>
</kw>
<msg timestamp="20201030 15:54:11.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.971" endtime="20201030 15:54:11.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:11.993" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:11.991" endtime="20201030 15:54:11.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:11.994" endtime="20201030 15:54:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.968" endtime="20201030 15:54:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.966" endtime="20201030 15:54:11.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.003" endtime="20201030 15:54:12.289"></status>
</kw>
<msg timestamp="20201030 15:54:12.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.002" endtime="20201030 15:54:12.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021749278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.294" endtime="20201030 15:54:12.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.302" endtime="20201030 15:54:12.304"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.999" endtime="20201030 15:54:12.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.997" endtime="20201030 15:54:12.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:12.309" level="INFO">${RESULT} = [{'diff': 2.9903000000001262e-05}, {'diff': 2.9569000000000123e-05}, {'diff': 3.0208000000000318e-05}, {'diff': 2.9583999999999167e-05}, {'diff': 2.9584000000002636e-05}, {'diff': 2.9569999999999597e-...</msg>
<status status="PASS" starttime="20201030 15:54:12.306" endtime="20201030 15:54:12.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:12.314" level="INFO">${ACCURACY} = {'diff': [2.9903000000001262e-05, 2.9569000000000123e-05, 3.0208000000000318e-05, 2.9583999999999167e-05, 2.9584000000002636e-05, 2.9569999999999597e-05, 2.991599999999789e-05, 2.9555000000000553e-05,...</msg>
<status status="PASS" starttime="20201030 15:54:12.310" endtime="20201030 15:54:12.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.318" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 15:54:12.317" endtime="20201030 15:54:12.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.321" level="INFO">VALUE: [2.9903000000001262e-05, 2.9569000000000123e-05, 3.0208000000000318e-05, 2.9583999999999167e-05, 2.9584000000002636e-05, 2.9569999999999597e-05, 2.991599999999789e-05, 2.9555000000000553e-05, 2.9527000000001413e-05, 2.9569000000000123e-05, 2.919499999999922e-05, 2.9916999999997362e-05, 2.9569999999999597e-05, 2.9222000000002357e-05, 2.9874999999998653e-05, 2.9917000000000832e-05, 2.9555000000000553e-05, 2.9221999999998888e-05, 2.9569000000000123e-05, 2.9193999999999748e-05, 3.0263999999998598e-05, 3.0235999999999458e-05, 2.9917000000000832e-05, 2.9569999999999597e-05, 2.9917000000000832e-05, 3.019399999999728e-05, 2.9221999999998888e-05, 2.9917000000000832e-05, 2.9625000000001872e-05, 2.990199999999832e-05, 2.9610999999998833e-05, 3.0263999999998598e-05, 2.9874999999998653e-05, 3.0250000000002497e-05, 2.9582999999999693e-05, 2.990199999999832e-05, 2.9916999999997362e-05, 3.0276999999998694e-05, 2.9582999999999693e-05, 2.9569000000000123e-05, 3.0250000000002497e-05, 3.0277999999998167e-05, 2.9569999999999597e-05, 2.9874999999998653e-05, 2.9166000000000608e-05, 2.9624999999998403e-05, 2.9555000000000553e-05, 2.991599999999789e-05, 3.0249999999999028e-05, 3.0235999999999458e-05]</msg>
<status status="PASS" starttime="20201030 15:54:12.319" endtime="20201030 15:54:12.322"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.314" endtime="20201030 15:54:12.323"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.327" endtime="20201030 15:54:12.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.325" endtime="20201030 15:54:12.347"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.324" endtime="20201030 15:54:12.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.964" endtime="20201030 15:54:12.348"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:11.964" endtime="20201030 15:54:12.348"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.357" endtime="20201030 15:54:12.372"></status>
</kw>
<msg timestamp="20201030 15:54:12.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.355" endtime="20201030 15:54:12.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.373" endtime="20201030 15:54:12.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.376" endtime="20201030 15:54:12.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.353" endtime="20201030 15:54:12.378"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.351" endtime="20201030 15:54:12.379"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.385" endtime="20201030 15:54:12.671"></status>
</kw>
<msg timestamp="20201030 15:54:12.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020524264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.384" endtime="20201030 15:54:12.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020524264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.676" endtime="20201030 15:54:12.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.684" endtime="20201030 15:54:12.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.381" endtime="20201030 15:54:12.686"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.379" endtime="20201030 15:54:12.687"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:12.691" level="INFO">${RESULT} = [{'diff': 3.059700000000026e-05}, {'diff': 3.093000000000193e-05}, {'diff': 3.093099999999793e-05}, {'diff': 3.094500000000097e-05}, {'diff': 3.095899999999707e-05}, {'diff': 3.0263999999998598e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:12.688" endtime="20201030 15:54:12.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:12.696" level="INFO">${ACCURACY} = {'diff': [3.059700000000026e-05, 3.093000000000193e-05, 3.093099999999793e-05, 3.094500000000097e-05, 3.095899999999707e-05, 3.0263999999998598e-05, 3.129200000000221e-05, 3.127799999999917e-05, 3.095...</msg>
<status status="PASS" starttime="20201030 15:54:12.692" endtime="20201030 15:54:12.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.701" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 15:54:12.700" endtime="20201030 15:54:12.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.703" level="INFO">VALUE: [3.059700000000026e-05, 3.093000000000193e-05, 3.093099999999793e-05, 3.094500000000097e-05, 3.095899999999707e-05, 3.0263999999998598e-05, 3.129200000000221e-05, 3.127799999999917e-05, 3.095800000000107e-05, 3.066600000000211e-05, 3.129199999999874e-05, 3.0263999999998598e-05, 3.095800000000107e-05, 3.061099999999983e-05, 3.058300000000069e-05, 3.0584000000000167e-05, 3.0568999999997654e-05, 3.097200000000064e-05, 3.0249999999999028e-05, 3.0249999999999028e-05, 3.059700000000026e-05, 3.0277999999998167e-05, 3.092999999999846e-05, 3.129199999999874e-05, 3.05700000000006e-05, 3.099999999999978e-05, 3.129199999999874e-05, 3.097199999999717e-05, 3.065300000000201e-05, 3.0597999999999737e-05, 3.0250000000002497e-05, 3.130600000000178e-05, 3.0596999999996793e-05, 3.058300000000069e-05, 3.0597999999999737e-05, 3.059700000000026e-05, 3.097300000000011e-05, 3.0235999999999458e-05, 3.093000000000193e-05, 3.0611999999999306e-05, 3.0568999999997654e-05, 3.09440000000015e-05, 3.095900000000054e-05, 3.097200000000064e-05, 3.127799999999917e-05, 3.091700000000183e-05, 3.059700000000026e-05, 3.09440000000015e-05, 3.059700000000026e-05, 3.095800000000107e-05]</msg>
<status status="PASS" starttime="20201030 15:54:12.702" endtime="20201030 15:54:12.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.697" endtime="20201030 15:54:12.705"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:12.709" endtime="20201030 15:54:12.728"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.707" endtime="20201030 15:54:12.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.706" endtime="20201030 15:54:12.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.349" endtime="20201030 15:54:12.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.348" endtime="20201030 15:54:12.730"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.739" endtime="20201030 15:54:12.754"></status>
</kw>
<msg timestamp="20201030 15:54:12.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.737" endtime="20201030 15:54:12.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:12.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:12.756" endtime="20201030 15:54:12.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.758" endtime="20201030 15:54:12.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.734" endtime="20201030 15:54:12.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.732" endtime="20201030 15:54:12.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:12.768" endtime="20201030 15:54:13.055"></status>
</kw>
<msg timestamp="20201030 15:54:13.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:12.766" endtime="20201030 15:54:13.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020235486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020267458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.062" endtime="20201030 15:54:13.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.071" endtime="20201030 15:54:13.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.763" endtime="20201030 15:54:13.073"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.762" endtime="20201030 15:54:13.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:13.078" level="INFO">${RESULT} = [{'diff': 3.197199999999817e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.163899999999997e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.127799999999917e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:13.075" endtime="20201030 15:54:13.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:13.082" level="INFO">${ACCURACY} = {'diff': [3.197199999999817e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.163899999999997e-05, 3.197200000000164e-05, 3.127799999999917e-05, 3.233300000000244e-05, 3.163899999999997e-05, 3.1986...</msg>
<status status="PASS" starttime="20201030 15:54:13.079" endtime="20201030 15:54:13.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.087" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 15:54:13.086" endtime="20201030 15:54:13.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.090" level="INFO">VALUE: [3.197199999999817e-05, 3.197200000000164e-05, 3.204199999999949e-05, 3.163899999999997e-05, 3.197200000000164e-05, 3.127799999999917e-05, 3.233300000000244e-05, 3.163899999999997e-05, 3.198600000000121e-05, 3.16250000000004e-05, 3.225000000000103e-05, 3.165299999999954e-05, 3.19579999999986e-05, 3.165299999999954e-05, 3.162499999999693e-05, 3.201400000000035e-05, 3.163899999999997e-05, 3.198599999999774e-05, 3.198599999999774e-05, 3.163899999999997e-05, 3.232000000000235e-05, 3.16250000000004e-05, 3.198600000000121e-05, 3.198600000000121e-05, 3.163899999999997e-05, 3.127700000000316e-05, 3.198599999999774e-05, 3.129199999999874e-05, 3.198600000000121e-05, 3.231999999999888e-05, 3.127800000000264e-05, 3.198600000000121e-05, 3.12639999999996e-05, 3.191699999999936e-05, 3.200000000000078e-05, 3.16380000000005e-05, 3.163899999999997e-05, 3.197300000000111e-05, 3.127799999999917e-05, 3.163899999999997e-05, 3.12639999999996e-05, 3.198599999999774e-05, 3.197199999999817e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.198600000000121e-05, 3.158300000000169e-05, 3.1596999999997794e-05, 3.197300000000111e-05, 3.204199999999949e-05]</msg>
<status status="PASS" starttime="20201030 15:54:13.088" endtime="20201030 15:54:13.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.083" endtime="20201030 15:54:13.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.100" endtime="20201030 15:54:13.119"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.098" endtime="20201030 15:54:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.096" endtime="20201030 15:54:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.730" endtime="20201030 15:54:13.120"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:12.730" endtime="20201030 15:54:13.121"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.130" endtime="20201030 15:54:13.146"></status>
</kw>
<msg timestamp="20201030 15:54:13.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.128" endtime="20201030 15:54:13.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.149" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.147" endtime="20201030 15:54:13.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.150" endtime="20201030 15:54:13.151"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.125" endtime="20201030 15:54:13.152"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.123" endtime="20201030 15:54:13.152"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.159" endtime="20201030 15:54:13.446"></status>
</kw>
<msg timestamp="20201030 15:54:13.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.158" endtime="20201030 15:54:13.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021453347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021486375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.450" endtime="20201030 15:54:13.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.459" endtime="20201030 15:54:13.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.155" endtime="20201030 15:54:13.461"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.153" endtime="20201030 15:54:13.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:13.466" level="INFO">${RESULT} = [{'diff': 3.302799999999745e-05}, {'diff': 3.230599999999931e-05}, {'diff': 3.337500000000215e-05}, {'diff': 3.300000000000178e-05}, {'diff': 3.302800000000092e-05}, {'diff': 3.301399999999788e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:13.462" endtime="20201030 15:54:13.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:13.470" level="INFO">${ACCURACY} = {'diff': [3.302799999999745e-05, 3.230599999999931e-05, 3.337500000000215e-05, 3.300000000000178e-05, 3.302800000000092e-05, 3.301399999999788e-05, 3.301400000000135e-05, 3.2304999999999834e-05, 3.301...</msg>
<status status="PASS" starttime="20201030 15:54:13.467" endtime="20201030 15:54:13.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.475" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 15:54:13.474" endtime="20201030 15:54:13.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.477" level="INFO">VALUE: [3.302799999999745e-05, 3.230599999999931e-05, 3.337500000000215e-05, 3.300000000000178e-05, 3.302800000000092e-05, 3.301399999999788e-05, 3.301400000000135e-05, 3.2304999999999834e-05, 3.301399999999788e-05, 3.3374999999998683e-05, 3.336100000000258e-05, 3.3027000000001444e-05, 3.266700000000011e-05, 3.3346999999999544e-05, 3.233399999999845e-05, 3.301400000000135e-05, 3.266700000000011e-05, 3.3013000000001874e-05, 3.227800000000017e-05, 3.301400000000135e-05, 3.268099999999968e-05, 3.266700000000011e-05, 3.305600000000006e-05, 3.261100000000183e-05, 3.266700000000011e-05, 3.29579999999996e-05, 3.270799999999935e-05, 3.301399999999788e-05, 3.238900000000072e-05, 3.233300000000244e-05, 3.266699999999664e-05, 3.3374999999998683e-05, 3.266600000000064e-05, 3.334700000000301e-05, 3.265300000000054e-05, 3.2318999999999404e-05, 3.305600000000006e-05, 3.266600000000064e-05, 3.2360999999998113e-05, 3.232000000000235e-05, 3.269499999999925e-05, 3.265300000000054e-05, 3.302800000000092e-05, 3.266700000000011e-05, 3.309800000000224e-05, 3.30700000000031e-05, 3.268099999999968e-05, 3.298699999999821e-05, 3.266700000000011e-05, 3.301400000000135e-05]</msg>
<status status="PASS" starttime="20201030 15:54:13.476" endtime="20201030 15:54:13.479"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.471" endtime="20201030 15:54:13.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.483" endtime="20201030 15:54:13.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.482" endtime="20201030 15:54:13.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.481" endtime="20201030 15:54:13.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.121" endtime="20201030 15:54:13.504"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.121" endtime="20201030 15:54:13.504"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.513" endtime="20201030 15:54:13.529"></status>
</kw>
<msg timestamp="20201030 15:54:13.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.512" endtime="20201030 15:54:13.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.531" endtime="20201030 15:54:13.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.533" endtime="20201030 15:54:13.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.509" endtime="20201030 15:54:13.536"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.507" endtime="20201030 15:54:13.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.543" endtime="20201030 15:54:13.830"></status>
</kw>
<msg timestamp="20201030 15:54:13.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.541" endtime="20201030 15:54:13.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020460069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020493806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.834" endtime="20201030 15:54:13.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.842" endtime="20201030 15:54:13.844"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.539" endtime="20201030 15:54:13.845"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.537" endtime="20201030 15:54:13.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:13.849" level="INFO">${RESULT} = [{'diff': 3.373699999999896e-05}, {'diff': 3.4041000000002014e-05}, {'diff': 3.3346999999999544e-05}, {'diff': 3.4388999999999253e-05}, {'diff': 3.4068999999997684e-05}, {'diff': 3.369400000000078e-05...</msg>
<status status="PASS" starttime="20201030 15:54:13.846" endtime="20201030 15:54:13.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:13.854" level="INFO">${ACCURACY} = {'diff': [3.373699999999896e-05, 3.4041000000002014e-05, 3.3346999999999544e-05, 3.4388999999999253e-05, 3.4068999999997684e-05, 3.369400000000078e-05, 3.370800000000035e-05, 3.404200000000149e-05, 3....</msg>
<status status="PASS" starttime="20201030 15:54:13.850" endtime="20201030 15:54:13.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.859" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 15:54:13.858" endtime="20201030 15:54:13.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.862" level="INFO">VALUE: [3.373699999999896e-05, 3.4041000000002014e-05, 3.3346999999999544e-05, 3.4388999999999253e-05, 3.4068999999997684e-05, 3.369400000000078e-05, 3.370800000000035e-05, 3.404200000000149e-05, 3.3346999999999544e-05, 3.406999999999716e-05, 3.3346999999999544e-05, 3.369400000000078e-05, 3.342999999999749e-05, 3.405599999999759e-05, 3.44580000000011e-05, 3.404200000000149e-05, 3.370800000000035e-05, 3.404200000000149e-05, 3.334799999999902e-05, 3.4097000000000294e-05, 3.368100000000068e-05, 3.372199999999992e-05, 3.404199999999802e-05, 3.4040999999998545e-05, 3.404200000000149e-05, 3.370800000000035e-05, 3.3374999999998683e-05, 3.4055000000001584e-05, 3.376399999999863e-05, 3.4041000000002014e-05, 3.337500000000215e-05, 3.3360999999999114e-05, 3.3346999999999544e-05, 3.402800000000192e-05, 3.404200000000149e-05, 3.443100000000143e-05, 3.40840000000002e-05, 3.401399999999888e-05, 3.363900000000197e-05, 3.3360999999999114e-05, 3.3360999999999114e-05, 3.370800000000035e-05, 3.405599999999759e-05, 3.370800000000035e-05, 3.4012999999999405e-05, 3.370899999999982e-05, 3.369500000000025e-05, 3.4054999999998115e-05, 3.4097000000000294e-05, 3.3360999999999114e-05]</msg>
<status status="PASS" starttime="20201030 15:54:13.860" endtime="20201030 15:54:13.863"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.855" endtime="20201030 15:54:13.863"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:13.867" endtime="20201030 15:54:13.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.865" endtime="20201030 15:54:13.887"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.864" endtime="20201030 15:54:13.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.505" endtime="20201030 15:54:13.888"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.505" endtime="20201030 15:54:13.888"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.897" endtime="20201030 15:54:13.915"></status>
</kw>
<msg timestamp="20201030 15:54:13.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.896" endtime="20201030 15:54:13.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:13.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:13.917" endtime="20201030 15:54:13.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.920" endtime="20201030 15:54:13.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.893" endtime="20201030 15:54:13.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.891" endtime="20201030 15:54:13.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:13.929" endtime="20201030 15:54:14.217"></status>
</kw>
<msg timestamp="20201030 15:54:14.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:13.927" endtime="20201030 15:54:14.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021451111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021495486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:14.222" endtime="20201030 15:54:14.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.230" endtime="20201030 15:54:14.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.925" endtime="20201030 15:54:14.232"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.923" endtime="20201030 15:54:14.233"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:14.237" level="INFO">${RESULT} = [{'diff': 4.4375000000002746e-05}, {'diff': 4.473600000000008e-05}, {'diff': 4.482000000000097e-05}, {'diff': 4.4638999999999096e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.4833000000001066e-05...</msg>
<status status="PASS" starttime="20201030 15:54:14.234" endtime="20201030 15:54:14.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:14.241" level="INFO">${ACCURACY} = {'diff': [4.4375000000002746e-05, 4.473600000000008e-05, 4.482000000000097e-05, 4.4638999999999096e-05, 4.5111000000000456e-05, 4.4833000000001066e-05, 4.479200000000183e-05, 4.533400000000104e-05, 4....</msg>
<status status="PASS" starttime="20201030 15:54:14.238" endtime="20201030 15:54:14.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.246" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 15:54:14.245" endtime="20201030 15:54:14.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.249" level="INFO">VALUE: [4.4375000000002746e-05, 4.473600000000008e-05, 4.482000000000097e-05, 4.4638999999999096e-05, 4.5111000000000456e-05, 4.4833000000001066e-05, 4.479200000000183e-05, 4.533400000000104e-05, 4.484800000000011e-05, 4.484800000000011e-05, 4.5319999999998e-05, 4.4722999999999985e-05, 4.5223000000000485e-05, 4.488799999999987e-05, 4.466599999999876e-05, 4.4374999999999276e-05, 4.4374999999999276e-05, 4.445800000000069e-05, 4.5388999999999846e-05, 4.466599999999876e-05, 4.479200000000183e-05, 4.4597000000000386e-05, 4.4416999999997986e-05, 4.532000000000147e-05, 4.523600000000058e-05, 4.4819000000001497e-05, 4.504199999999861e-05, 4.48199999999975e-05, 4.523600000000058e-05, 4.452799999999854e-05, 4.502800000000251e-05, 4.477800000000226e-05, 4.481899999999803e-05, 4.4847000000000636e-05, 4.479200000000183e-05, 4.509699999999742e-05, 4.523600000000058e-05, 4.516599999999926e-05, 4.477699999999932e-05, 4.506899999999828e-05, 4.479199999999836e-05, 4.482000000000097e-05, 4.529099999999939e-05, 4.46939999999979e-05, 4.505600000000165e-05, 4.4902999999998916e-05, 4.504199999999861e-05, 4.4902999999998916e-05, 4.484699999999717e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201030 15:54:14.247" endtime="20201030 15:54:14.249"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.242" endtime="20201030 15:54:14.250"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:14.254" endtime="20201030 15:54:14.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.252" endtime="20201030 15:54:14.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.251" endtime="20201030 15:54:14.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.889" endtime="20201030 15:54:14.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:13.889" endtime="20201030 15:54:14.275"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.284" endtime="20201030 15:54:14.301"></status>
</kw>
<msg timestamp="20201030 15:54:14.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.282" endtime="20201030 15:54:14.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.302" endtime="20201030 15:54:14.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.305" endtime="20201030 15:54:14.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.280" endtime="20201030 15:54:14.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.277" endtime="20201030 15:54:14.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.315" endtime="20201030 15:54:14.602"></status>
</kw>
<msg timestamp="20201030 15:54:14.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:14.313" endtime="20201030 15:54:14.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021344861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021391014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:14.606" endtime="20201030 15:54:14.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.614" endtime="20201030 15:54:14.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.310" endtime="20201030 15:54:14.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.308" endtime="20201030 15:54:14.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:14.623" level="INFO">${RESULT} = [{'diff': 4.6153000000000166e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.5958999999998196e-05}, {'diff': 4.609699999999842e-05}, {'diff': 4.5931000000002525e-05}, {'diff': 4.5930999999999056e-0...</msg>
<status status="PASS" starttime="20201030 15:54:14.618" endtime="20201030 15:54:14.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:14.629" level="INFO">${ACCURACY} = {'diff': [4.6153000000000166e-05, 4.5889000000000346e-05, 4.5958999999998196e-05, 4.609699999999842e-05, 4.5931000000002525e-05, 4.5930999999999056e-05, 4.55000000000004e-05, 4.5402999999999416e-05, 4...</msg>
<status status="PASS" starttime="20201030 15:54:14.624" endtime="20201030 15:54:14.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.634" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 15:54:14.633" endtime="20201030 15:54:14.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.641" level="INFO">VALUE: [4.6153000000000166e-05, 4.5889000000000346e-05, 4.5958999999998196e-05, 4.609699999999842e-05, 4.5931000000002525e-05, 4.5930999999999056e-05, 4.55000000000004e-05, 4.5402999999999416e-05, 4.580499999999946e-05, 4.6237000000001055e-05, 4.573600000000108e-05, 4.538800000000037e-05, 4.622199999999854e-05, 4.6166999999999736e-05, 4.555499999999921e-05, 4.597199999999829e-05, 4.606899999999928e-05, 4.582000000000197e-05, 4.5639000000000096e-05, 4.5833000000002067e-05, 4.612499999999756e-05, 4.6195000000002345e-05, 4.609699999999842e-05, 4.55000000000004e-05, 4.6180999999999306e-05, 4.5639000000000096e-05, 4.5625000000000526e-05, 4.629199999999986e-05, 4.625000000000115e-05, 4.5723000000000985e-05, 4.6181000000002775e-05, 4.595800000000219e-05, 4.5847000000001636e-05, 4.58879999999974e-05, 4.56939999999989e-05, 4.622199999999854e-05, 4.595800000000219e-05, 4.5916999999999486e-05, 4.5875000000000776e-05, 4.577799999999979e-05, 4.5388999999999846e-05, 4.63329999999991e-05, 4.574999999999718e-05, 4.595799999999872e-05, 4.5833000000002067e-05, 4.6166999999999736e-05, 4.629199999999986e-05, 4.5430999999998556e-05, 4.5666999999999236e-05, 4.536099999999724e-05]</msg>
<status status="PASS" starttime="20201030 15:54:14.635" endtime="20201030 15:54:14.642"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.630" endtime="20201030 15:54:14.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:14.649" endtime="20201030 15:54:14.668"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.647" endtime="20201030 15:54:14.669"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.644" endtime="20201030 15:54:14.670"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.276" endtime="20201030 15:54:14.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.275" endtime="20201030 15:54:14.671"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.682" endtime="20201030 15:54:14.697"></status>
</kw>
<msg timestamp="20201030 15:54:14.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.680" endtime="20201030 15:54:14.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:14.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:14.699" endtime="20201030 15:54:14.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.702" endtime="20201030 15:54:14.703"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.676" endtime="20201030 15:54:14.704"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.674" endtime="20201030 15:54:14.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:14.711" endtime="20201030 15:54:14.998"></status>
</kw>
<msg timestamp="20201030 15:54:15.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023476375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:14.710" endtime="20201030 15:54:15.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023476375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.002" endtime="20201030 15:54:15.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.010" endtime="20201030 15:54:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.707" endtime="20201030 15:54:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.705" endtime="20201030 15:54:15.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:15.017" level="INFO">${RESULT} = [{'diff': 4.694400000000015e-05}, {'diff': 4.712499999999856e-05}, {'diff': 4.711099999999899e-05}, {'diff': 4.720799999999997e-05}, {'diff': 4.723599999999911e-05}, {'diff': 4.657000000000272e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:15.014" endtime="20201030 15:54:15.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:15.022" level="INFO">${ACCURACY} = {'diff': [4.694400000000015e-05, 4.712499999999856e-05, 4.711099999999899e-05, 4.720799999999997e-05, 4.723599999999911e-05, 4.657000000000272e-05, 4.707000000000322e-05, 4.730599999999696e-05, 4.6723...</msg>
<status status="PASS" starttime="20201030 15:54:15.018" endtime="20201030 15:54:15.023"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.027" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 15:54:15.026" endtime="20201030 15:54:15.028"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.030" level="INFO">VALUE: [4.694400000000015e-05, 4.712499999999856e-05, 4.711099999999899e-05, 4.720799999999997e-05, 4.723599999999911e-05, 4.657000000000272e-05, 4.707000000000322e-05, 4.730599999999696e-05, 4.6723000000001985e-05, 4.666600000000076e-05, 4.675000000000165e-05, 4.730500000000096e-05, 4.695800000000319e-05, 4.680500000000046e-05, 4.634699999999867e-05, 4.693000000000058e-05, 4.734699999999967e-05, 4.726399999999825e-05, 4.6861000000002206e-05, 4.677800000000079e-05, 4.723600000000258e-05, 4.73330000000001e-05, 4.730600000000043e-05, 4.6959000000002665e-05, 4.7181000000000306e-05, 4.655599999999968e-05, 4.680599999999993e-05, 4.725000000000215e-05, 4.726399999999825e-05, 4.723599999999911e-05, 4.718000000000083e-05, 4.65000000000014e-05, 4.6694999999999376e-05, 4.655500000000021e-05, 4.715200000000169e-05, 4.659699999999892e-05, 4.640199999999747e-05, 4.637499999999781e-05, 4.645800000000269e-05, 4.704200000000061e-05, 4.6653000000000666e-05, 4.698600000000233e-05, 4.73330000000001e-05, 4.655599999999968e-05, 4.648600000000183e-05, 4.702800000000104e-05, 4.706999999999975e-05, 4.6889000000001346e-05, 4.680599999999993e-05, 4.6639000000001096e-05]</msg>
<status status="PASS" starttime="20201030 15:54:15.028" endtime="20201030 15:54:15.031"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.023" endtime="20201030 15:54:15.031"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:15.035" endtime="20201030 15:54:15.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.033" endtime="20201030 15:54:15.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.032" endtime="20201030 15:54:15.055"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.672" endtime="20201030 15:54:15.056"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:14.671" endtime="20201030 15:54:15.056"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.065" endtime="20201030 15:54:15.083"></status>
</kw>
<msg timestamp="20201030 15:54:15.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.063" endtime="20201030 15:54:15.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.085" endtime="20201030 15:54:15.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.087" endtime="20201030 15:54:15.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.061" endtime="20201030 15:54:15.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.058" endtime="20201030 15:54:15.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.097" endtime="20201030 15:54:15.385"></status>
</kw>
<msg timestamp="20201030 15:54:15.388" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021384486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.095" endtime="20201030 15:54:15.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021384486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021431931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.389" endtime="20201030 15:54:15.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.398" endtime="20201030 15:54:15.399"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.092" endtime="20201030 15:54:15.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.091" endtime="20201030 15:54:15.400"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:15.404" level="INFO">${RESULT} = [{'diff': 4.7445000000000126e-05}, {'diff': 4.8320000000001e-05}, {'diff': 4.770800000000047e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.790200000000244e-05}, {'diff': 4.809700000000042e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:15.401" endtime="20201030 15:54:15.405"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:15.409" level="INFO">${ACCURACY} = {'diff': [4.7445000000000126e-05, 4.8320000000001e-05, 4.770800000000047e-05, 4.7445000000000126e-05, 4.790200000000244e-05, 4.809700000000042e-05, 4.791600000000201e-05, 4.744400000000065e-05, 4.8207...</msg>
<status status="PASS" starttime="20201030 15:54:15.405" endtime="20201030 15:54:15.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.413" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 15:54:15.412" endtime="20201030 15:54:15.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.416" level="INFO">VALUE: [4.7445000000000126e-05, 4.8320000000001e-05, 4.770800000000047e-05, 4.7445000000000126e-05, 4.790200000000244e-05, 4.809700000000042e-05, 4.791600000000201e-05, 4.744400000000065e-05, 4.82079999999975e-05, 4.748599999999936e-05, 4.819399999999793e-05, 4.7889000000002346e-05, 4.7431000000000556e-05, 4.7625000000002526e-05, 4.776400000000222e-05, 4.798599999999986e-05, 4.7431000000000556e-05, 4.8320000000001e-05, 4.7431000000000556e-05, 4.773599999999961e-05, 4.7667000000001236e-05, 4.763899999999863e-05, 4.75000000000024e-05, 4.826400000000272e-05, 4.8236999999999586e-05, 4.773600000000308e-05, 4.809700000000042e-05, 4.784700000000017e-05, 4.742999999999761e-05, 4.786099999999974e-05, 4.829199999999839e-05, 4.76529999999982e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.830599999999796e-05, 4.737499999999881e-05, 4.798599999999986e-05, 4.752799999999807e-05, 4.833400000000057e-05, 4.737499999999881e-05, 4.811099999999999e-05, 4.7667000000001236e-05, 4.743000000000108e-05, 4.7417000000000986e-05, 4.8167000000001736e-05, 4.777799999999832e-05, 4.7625000000002526e-05, 4.802700000000257e-05, 4.756900000000078e-05, 4.837499999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:54:15.415" endtime="20201030 15:54:15.417"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.410" endtime="20201030 15:54:15.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:15.421" endtime="20201030 15:54:15.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.420" endtime="20201030 15:54:15.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.418" endtime="20201030 15:54:15.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.057" endtime="20201030 15:54:15.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.056" endtime="20201030 15:54:15.442"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.451" endtime="20201030 15:54:15.468"></status>
</kw>
<msg timestamp="20201030 15:54:15.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.450" endtime="20201030 15:54:15.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.470" endtime="20201030 15:54:15.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.472" endtime="20201030 15:54:15.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.447" endtime="20201030 15:54:15.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.445" endtime="20201030 15:54:15.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.482" endtime="20201030 15:54:15.768"></status>
</kw>
<msg timestamp="20201030 15:54:15.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.480" endtime="20201030 15:54:15.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021262222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021311139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.773" endtime="20201030 15:54:15.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.781" endtime="20201030 15:54:15.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.478" endtime="20201030 15:54:15.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.476" endtime="20201030 15:54:15.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:15.788" level="INFO">${RESULT} = [{'diff': 4.891699999999902e-05}, {'diff': 4.849999999999993e-05}, {'diff': 4.848600000000036e-05}, {'diff': 4.879099999999942e-05}, {'diff': 4.869499999999791e-05}, {'diff': 4.884799999999717e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:15.785" endtime="20201030 15:54:15.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:15.792" level="INFO">${ACCURACY} = {'diff': [4.891699999999902e-05, 4.849999999999993e-05, 4.848600000000036e-05, 4.879099999999942e-05, 4.869499999999791e-05, 4.884799999999717e-05, 4.927799999999982e-05, 4.83879999999999e-05, 4.91249...</msg>
<status status="PASS" starttime="20201030 15:54:15.789" endtime="20201030 15:54:15.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.797" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 15:54:15.796" endtime="20201030 15:54:15.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.800" level="INFO">VALUE: [4.891699999999902e-05, 4.849999999999993e-05, 4.848600000000036e-05, 4.879099999999942e-05, 4.869499999999791e-05, 4.884799999999717e-05, 4.927799999999982e-05, 4.83879999999999e-05, 4.912499999999709e-05, 4.931899999999906e-05, 4.865199999999972e-05, 4.929099999999992e-05, 4.870800000000147e-05, 4.844399999999818e-05, 4.862500000000006e-05, 4.862500000000006e-05, 4.841699999999852e-05, 4.8903000000002916e-05, 4.88330000000016e-05, 4.927799999999982e-05, 4.93330000000021e-05, 4.888899999999988e-05, 4.879199999999889e-05, 4.843099999999809e-05, 4.925000000000068e-05, 4.912500000000056e-05, 4.855600000000168e-05, 4.883400000000107e-05, 4.862500000000006e-05, 4.863800000000015e-05, 4.9151999999996754e-05, 4.913900000000013e-05, 4.834700000000067e-05, 4.842999999999861e-05, 4.922200000000154e-05, 4.927799999999982e-05, 4.925000000000068e-05, 4.8667000000002236e-05, 4.904200000000261e-05, 4.93469999999982e-05, 4.880599999999846e-05, 4.852799999999907e-05, 4.9320000000002e-05, 4.8431000000001556e-05, 4.931999999999853e-05, 4.884800000000064e-05, 4.8667000000002236e-05, 4.929199999999939e-05, 4.931999999999853e-05, 4.912500000000056e-05]</msg>
<status status="PASS" starttime="20201030 15:54:15.798" endtime="20201030 15:54:15.801"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.793" endtime="20201030 15:54:15.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:15.806" endtime="20201030 15:54:15.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.804" endtime="20201030 15:54:15.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.803" endtime="20201030 15:54:15.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.443" endtime="20201030 15:54:15.826"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.443" endtime="20201030 15:54:15.827"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.836" endtime="20201030 15:54:15.852"></status>
</kw>
<msg timestamp="20201030 15:54:15.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.834" endtime="20201030 15:54:15.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:15.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:15.854" endtime="20201030 15:54:15.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.857" endtime="20201030 15:54:15.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.831" endtime="20201030 15:54:15.859"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.829" endtime="20201030 15:54:15.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:15.866" endtime="20201030 15:54:16.153"></status>
</kw>
<msg timestamp="20201030 15:54:16.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:15.864" endtime="20201030 15:54:16.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020674681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020724361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.157" endtime="20201030 15:54:16.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.165" endtime="20201030 15:54:16.167"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.862" endtime="20201030 15:54:16.168"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.860" endtime="20201030 15:54:16.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:16.172" level="INFO">${RESULT} = [{'diff': 4.967999999999986e-05}, {'diff': 4.979099999999695e-05}, {'diff': 4.942999999999961e-05}, {'diff': 5.0014000000001e-05}, {'diff': 4.955499999999974e-05}, {'diff': 5.001399999999753e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:16.169" endtime="20201030 15:54:16.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:16.177" level="INFO">${ACCURACY} = {'diff': [4.967999999999986e-05, 4.979099999999695e-05, 4.942999999999961e-05, 5.0014000000001e-05, 4.955499999999974e-05, 5.001399999999753e-05, 4.944399999999918e-05, 4.966699999999977e-05, 4.995799...</msg>
<status status="PASS" starttime="20201030 15:54:16.173" endtime="20201030 15:54:16.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.182" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 15:54:16.181" endtime="20201030 15:54:16.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.185" level="INFO">VALUE: [4.967999999999986e-05, 4.979099999999695e-05, 4.942999999999961e-05, 5.0014000000001e-05, 4.955499999999974e-05, 5.001399999999753e-05, 4.944399999999918e-05, 4.966699999999977e-05, 4.995799999999925e-05, 4.959700000000192e-05, 5.016700000000027e-05, 4.948599999999789e-05, 5.029100000000092e-05, 5.026400000000125e-05, 4.979200000000336e-05, 5.019499999999941e-05, 4.9959000000002196e-05, 4.9472999999997797e-05, 4.95140000000005e-05, 4.979100000000042e-05, 4.973599999999814e-05, 5.029100000000092e-05, 4.997199999999882e-05, 4.941699999999952e-05, 5.029200000000039e-05, 4.981899999999956e-05, 4.990300000000045e-05, 5.02079999999995e-05, 4.9723000000001516e-05, 5.022199999999907e-05, 5.022200000000254e-05, 4.998600000000186e-05, 5.03339999999991e-05, 4.954199999999964e-05, 4.936099999999777e-05, 4.981999999999903e-05, 4.955499999999974e-05, 4.98200000000025e-05, 5.013900000000113e-05, 5.030500000000049e-05, 5.005500000000024e-05, 4.952800000000007e-05, 5.023600000000211e-05, 5.018000000000036e-05, 5.012500000000156e-05, 4.980600000000293e-05, 5.012499999999809e-05, 4.950000000000093e-05, 5.006899999999981e-05, 4.975000000000118e-05]</msg>
<status status="PASS" starttime="20201030 15:54:16.183" endtime="20201030 15:54:16.185"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.178" endtime="20201030 15:54:16.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.190" endtime="20201030 15:54:16.209"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.188" endtime="20201030 15:54:16.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.187" endtime="20201030 15:54:16.210"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.828" endtime="20201030 15:54:16.211"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:15.827" endtime="20201030 15:54:16.211"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.220" endtime="20201030 15:54:16.238"></status>
</kw>
<msg timestamp="20201030 15:54:16.238" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.218" endtime="20201030 15:54:16.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.241" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.239" endtime="20201030 15:54:16.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.242" endtime="20201030 15:54:16.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.216" endtime="20201030 15:54:16.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.213" endtime="20201030 15:54:16.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.252" endtime="20201030 15:54:16.539"></status>
</kw>
<msg timestamp="20201030 15:54:16.542" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.250" endtime="20201030 15:54:16.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020425722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020476083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:16.543" endtime="20201030 15:54:16.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.552" endtime="20201030 15:54:16.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.247" endtime="20201030 15:54:16.554"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.245" endtime="20201030 15:54:16.554"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:16.559" level="INFO">${RESULT} = [{'diff': 5.036099999999877e-05}, {'diff': 5.104200000000114e-05}, {'diff': 5.109699999999995e-05}, {'diff': 5.048599999999889e-05}, {'diff': 5.06530000000012e-05}, {'diff': 5.111099999999952e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:16.555" endtime="20201030 15:54:16.559"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:16.564" level="INFO">${ACCURACY} = {'diff': [5.036099999999877e-05, 5.104200000000114e-05, 5.109699999999995e-05, 5.048599999999889e-05, 5.06530000000012e-05, 5.111099999999952e-05, 5.0708e-05, 5.097199999999982e-05, 5.072199999999957e...</msg>
<status status="PASS" starttime="20201030 15:54:16.560" endtime="20201030 15:54:16.564"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.571" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 15:54:16.569" endtime="20201030 15:54:16.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.575" level="INFO">VALUE: [5.036099999999877e-05, 5.104200000000114e-05, 5.109699999999995e-05, 5.048599999999889e-05, 5.06530000000012e-05, 5.111099999999952e-05, 5.0708e-05, 5.097199999999982e-05, 5.072199999999957e-05, 5.094400000000068e-05, 5.062499999999859e-05, 5.118100000000084e-05, 5.1151999999998754e-05, 5.122200000000007e-05, 5.063899999999816e-05, 5.08339999999996e-05, 5.061200000000196e-05, 5.116600000000179e-05, 5.0708e-05, 5.077699999999838e-05, 5.111099999999952e-05, 5.051399999999803e-05, 5.0708e-05, 5.119400000000093e-05, 5.088900000000188e-05, 5.037500000000181e-05, 5.0708e-05, 5.130599999999749e-05, 5.098599999999939e-05, 5.077800000000132e-05, 5.083300000000013e-05, 5.129200000000139e-05, 5.108300000000038e-05, 5.104200000000114e-05, 5.126400000000225e-05, 5.115299999999823e-05, 5.119400000000093e-05, 5.082000000000003e-05, 5.127699999999888e-05, 5.112499999999909e-05, 5.119400000000093e-05, 5.066600000000129e-05, 5.088899999999841e-05, 5.048599999999889e-05, 5.081900000000056e-05, 5.072199999999957e-05, 5.076399999999828e-05, 5.043100000000009e-05, 5.131900000000106e-05, 5.038899999999791e-05]</msg>
<status status="PASS" starttime="20201030 15:54:16.572" endtime="20201030 15:54:16.575"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.565" endtime="20201030 15:54:16.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.582" endtime="20201030 15:54:16.602"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.580" endtime="20201030 15:54:16.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.578" endtime="20201030 15:54:16.603"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.212" endtime="20201030 15:54:16.604"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.211" endtime="20201030 15:54:16.604"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.614" endtime="20201030 15:54:16.632"></status>
</kw>
<msg timestamp="20201030 15:54:16.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.612" endtime="20201030 15:54:16.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:16.634" endtime="20201030 15:54:16.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.636" endtime="20201030 15:54:16.638"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.610" endtime="20201030 15:54:16.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.608" endtime="20201030 15:54:16.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.646" endtime="20201030 15:54:16.932"></status>
</kw>
<msg timestamp="20201030 15:54:16.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:16.644" endtime="20201030 15:54:16.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023581, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023632778, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 15:54:16.936" endtime="20201030 15:54:16.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:16.945" endtime="20201030 15:54:16.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.642" endtime="20201030 15:54:16.947"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.640" endtime="20201030 15:54:16.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:16.952" level="INFO">${RESULT} = [{'diff': 5.177799999999885e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.145900000000023e-05}, {'diff': 5.157000000000078e-05}, {'diff': 5.149999999999946e-05}, {'diff': 5.169400000000143e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:16.948" endtime="20201030 15:54:16.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:16.956" level="INFO">${ACCURACY} = {'diff': [5.177799999999885e-05, 5.138899999999891e-05, 5.145900000000023e-05, 5.157000000000078e-05, 5.149999999999946e-05, 5.169400000000143e-05, 5.173600000000014e-05, 5.172200000000057e-05, 5.2138...</msg>
<status status="PASS" starttime="20201030 15:54:16.953" endtime="20201030 15:54:16.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.962" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 15:54:16.960" endtime="20201030 15:54:16.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:16.965" level="INFO">VALUE: [5.177799999999885e-05, 5.138899999999891e-05, 5.145900000000023e-05, 5.157000000000078e-05, 5.149999999999946e-05, 5.169400000000143e-05, 5.173600000000014e-05, 5.172200000000057e-05, 5.213899999999966e-05, 5.197200000000082e-05, 5.159699999999698e-05, 5.230500000000249e-05, 5.205499999999877e-05, 5.225000000000021e-05, 5.169500000000091e-05, 5.213899999999966e-05, 5.207000000000128e-05, 5.140300000000195e-05, 5.2235999999997174e-05, 5.222200000000107e-05, 5.211199999999999e-05, 5.211199999999999e-05, 5.144500000000066e-05, 5.137499999999934e-05, 5.193100000000159e-05, 5.22080000000015e-05, 5.148599999999989e-05, 5.198600000000039e-05, 5.145800000000075e-05, 5.213899999999966e-05, 5.159700000000045e-05, 5.163899999999916e-05, 5.179199999999842e-05, 5.193099999999812e-05, 5.223600000000064e-05, 5.2207999999998034e-05, 5.191699999999855e-05, 5.165299999999873e-05, 5.13470000000002e-05, 5.149999999999946e-05, 5.181900000000156e-05, 5.165299999999873e-05, 5.169499999999744e-05, 5.190299999999898e-05, 5.155499999999827e-05, 5.213899999999966e-05, 5.144400000000118e-05, 5.229099999999945e-05, 5.202800000000257e-05, 5.226399999999978e-05]</msg>
<status status="PASS" starttime="20201030 15:54:16.964" endtime="20201030 15:54:16.967"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.957" endtime="20201030 15:54:16.968"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:16.971" endtime="20201030 15:54:16.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.970" endtime="20201030 15:54:16.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.969" endtime="20201030 15:54:16.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.605" endtime="20201030 15:54:16.992"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.605" endtime="20201030 15:54:16.992"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.001" endtime="20201030 15:54:17.017"></status>
</kw>
<msg timestamp="20201030 15:54:17.018" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.000" endtime="20201030 15:54:17.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.019" endtime="20201030 15:54:17.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.021" endtime="20201030 15:54:17.023"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.997" endtime="20201030 15:54:17.024"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.995" endtime="20201030 15:54:17.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.031" endtime="20201030 15:54:17.318"></status>
</kw>
<msg timestamp="20201030 15:54:17.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.029" endtime="20201030 15:54:17.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020459194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020512361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.322" endtime="20201030 15:54:17.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.330" endtime="20201030 15:54:17.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.027" endtime="20201030 15:54:17.332"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.025" endtime="20201030 15:54:17.333"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.337" level="INFO">${RESULT} = [{'diff': 5.31669999999998e-05}, {'diff': 5.334699999999873e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.326400000000078e-05}, {'diff': 5.281999999999856e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:17.334" endtime="20201030 15:54:17.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:17.342" level="INFO">${ACCURACY} = {'diff': [5.31669999999998e-05, 5.334699999999873e-05, 5.238899999999991e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.281999999999856e-05, 5.331999999999906e-05, 5.262500000000059e-05, 5.25419...</msg>
<status status="PASS" starttime="20201030 15:54:17.338" endtime="20201030 15:54:17.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.347" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 15:54:17.346" endtime="20201030 15:54:17.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.350" level="INFO">VALUE: [5.31669999999998e-05, 5.334699999999873e-05, 5.238899999999991e-05, 5.327800000000035e-05, 5.326400000000078e-05, 5.281999999999856e-05, 5.331999999999906e-05, 5.262500000000059e-05, 5.254199999999917e-05, 5.245899999999776e-05, 5.275000000000071e-05, 5.2929999999999644e-05, 5.3193999999999464e-05, 5.313900000000066e-05, 5.256899999999884e-05, 5.277799999999985e-05, 5.277799999999985e-05, 5.262500000000059e-05, 5.254200000000264e-05, 5.273600000000114e-05, 5.280600000000246e-05, 5.304200000000314e-05, 5.326400000000078e-05, 5.283299999999866e-05, 5.309799999999795e-05, 5.305599999999924e-05, 5.280599999999899e-05, 5.293099999999912e-05, 5.311200000000099e-05, 5.2402000000000004e-05, 5.23470000000012e-05, 5.2429999999999144e-05, 5.261100000000102e-05, 5.33470000000022e-05, 5.330500000000002e-05, 5.279099999999995e-05, 5.330500000000002e-05, 5.2999999999997494e-05, 5.315300000000023e-05, 5.237500000000034e-05, 5.3207999999999034e-05, 5.2707999999998534e-05, 5.262500000000059e-05, 5.237500000000034e-05, 5.297200000000182e-05, 5.329199999999992e-05, 5.277800000000332e-05, 5.337500000000134e-05, 5.268099999999887e-05, 5.301400000000053e-05]</msg>
<status status="PASS" starttime="20201030 15:54:17.348" endtime="20201030 15:54:17.350"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.343" endtime="20201030 15:54:17.351"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.355" endtime="20201030 15:54:17.375"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.353" endtime="20201030 15:54:17.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.352" endtime="20201030 15:54:17.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.993" endtime="20201030 15:54:17.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:16.993" endtime="20201030 15:54:17.376"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.385" endtime="20201030 15:54:17.401"></status>
</kw>
<msg timestamp="20201030 15:54:17.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.384" endtime="20201030 15:54:17.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.403" endtime="20201030 15:54:17.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.405" endtime="20201030 15:54:17.407"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.381" endtime="20201030 15:54:17.408"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.379" endtime="20201030 15:54:17.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.415" endtime="20201030 15:54:17.703"></status>
</kw>
<msg timestamp="20201030 15:54:17.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020458556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.413" endtime="20201030 15:54:17.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.714" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020458556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020511931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.707" endtime="20201030 15:54:17.715"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.716" endtime="20201030 15:54:17.717"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.411" endtime="20201030 15:54:17.718"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.409" endtime="20201030 15:54:17.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:17.723" level="INFO">${RESULT} = [{'diff': 5.337500000000134e-05}, {'diff': 5.408300000000338e-05}, {'diff': 5.431900000000059e-05}, {'diff': 5.427800000000135e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.4291999999997453e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:17.719" endtime="20201030 15:54:17.723"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:17.727" level="INFO">${ACCURACY} = {'diff': [5.337500000000134e-05, 5.408300000000338e-05, 5.431900000000059e-05, 5.427800000000135e-05, 5.401400000000153e-05, 5.4291999999997453e-05, 5.390300000000098e-05, 5.347200000000232e-05, 5.418...</msg>
<status status="PASS" starttime="20201030 15:54:17.724" endtime="20201030 15:54:17.727"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.732" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 15:54:17.731" endtime="20201030 15:54:17.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.734" level="INFO">VALUE: [5.337500000000134e-05, 5.408300000000338e-05, 5.431900000000059e-05, 5.427800000000135e-05, 5.401400000000153e-05, 5.4291999999997453e-05, 5.390300000000098e-05, 5.347200000000232e-05, 5.4180000000000894e-05, 5.40280000000011e-05, 5.426400000000178e-05, 5.401400000000153e-05, 5.393100000000012e-05, 5.411099999999905e-05, 5.338899999999744e-05, 5.432000000000006e-05, 5.341700000000005e-05, 5.344500000000266e-05, 5.368099999999987e-05, 5.394499999999969e-05, 5.380500000000052e-05, 5.391700000000055e-05, 5.337500000000134e-05, 5.412500000000209e-05, 5.3916000000001074e-05, 5.406900000000034e-05, 5.3693999999999964e-05, 5.343099999999962e-05, 5.354099999999723e-05, 5.3944000000000214e-05, 5.344500000000266e-05, 5.384699999999923e-05, 5.373600000000214e-05, 5.383399999999913e-05, 5.387499999999837e-05, 5.398600000000239e-05, 5.393100000000012e-05, 5.384699999999923e-05, 5.413900000000166e-05, 5.3680000000000394e-05, 5.427699999999841e-05, 5.3957999999999784e-05, 5.3999999999998494e-05, 5.411099999999905e-05, 5.3430000000000144e-05, 5.4027999999997633e-05, 5.35280000000006e-05, 5.433300000000016e-05, 5.38340000000026e-05, 5.35280000000006e-05]</msg>
<status status="PASS" starttime="20201030 15:54:17.733" endtime="20201030 15:54:17.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.728" endtime="20201030 15:54:17.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:17.740" endtime="20201030 15:54:17.759"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.738" endtime="20201030 15:54:17.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.737" endtime="20201030 15:54:17.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.377" endtime="20201030 15:54:17.760"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.377" endtime="20201030 15:54:17.760"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.770" endtime="20201030 15:54:17.787"></status>
</kw>
<msg timestamp="20201030 15:54:17.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.768" endtime="20201030 15:54:17.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:17.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:17.789" endtime="20201030 15:54:17.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.791" endtime="20201030 15:54:17.793"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.765" endtime="20201030 15:54:17.794"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.763" endtime="20201030 15:54:17.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:17.801" endtime="20201030 15:54:18.087"></status>
</kw>
<msg timestamp="20201030 15:54:18.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:17.799" endtime="20201030 15:54:18.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021315514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021370278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.091" endtime="20201030 15:54:18.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.100" endtime="20201030 15:54:18.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.796" endtime="20201030 15:54:18.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.795" endtime="20201030 15:54:18.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:18.107" level="INFO">${RESULT} = [{'diff': 5.4763999999998814e-05}, {'diff': 5.495900000000026e-05}, {'diff': 5.48609999999998e-05}, {'diff': 5.455599999999727e-05}, {'diff': 5.455600000000074e-05}, {'diff': 5.4458000000000284e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:18.104" endtime="20201030 15:54:18.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:18.111" level="INFO">${ACCURACY} = {'diff': [5.4763999999998814e-05, 5.495900000000026e-05, 5.48609999999998e-05, 5.455599999999727e-05, 5.455600000000074e-05, 5.4458000000000284e-05, 5.511100000000005e-05, 5.4735999999999674e-05, 5.51...</msg>
<status status="PASS" starttime="20201030 15:54:18.108" endtime="20201030 15:54:18.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.116" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 15:54:18.115" endtime="20201030 15:54:18.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.122" level="INFO">VALUE: [5.4763999999998814e-05, 5.495900000000026e-05, 5.48609999999998e-05, 5.455599999999727e-05, 5.455600000000074e-05, 5.4458000000000284e-05, 5.511100000000005e-05, 5.4735999999999674e-05, 5.515300000000223e-05, 5.5236000000000174e-05, 5.5027999999998634e-05, 5.4471999999999854e-05, 5.4749999999999244e-05, 5.505599999999777e-05, 5.462499999999912e-05, 5.4708000000000534e-05, 5.530500000000202e-05, 5.450000000000246e-05, 5.5305999999998023e-05, 5.484700000000023e-05, 5.5207999999997565e-05, 5.506899999999787e-05, 5.4929999999998175e-05, 5.443099999999715e-05, 5.5222000000000604e-05, 5.4985999999999924e-05, 5.4735999999999674e-05, 5.4999999999999494e-05, 5.436100000000277e-05, 5.512499999999962e-05, 5.5277999999998884e-05, 5.4485999999999424e-05, 5.4972000000000354e-05, 5.4722000000000104e-05, 5.529200000000192e-05, 5.469500000000044e-05, 5.527800000000235e-05, 5.505600000000124e-05, 5.488900000000241e-05, 5.43479999999992e-05, 5.5236000000000174e-05, 5.455500000000127e-05, 5.4666000000001824e-05, 5.5151999999999285e-05, 5.4652000000002254e-05, 5.4930000000001644e-05, 5.437500000000234e-05, 5.465299999999826e-05, 5.53610000000003e-05, 5.5249999999999744e-05]</msg>
<status status="PASS" starttime="20201030 15:54:18.117" endtime="20201030 15:54:18.128"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.112" endtime="20201030 15:54:18.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:18.133" endtime="20201030 15:54:18.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.131" endtime="20201030 15:54:18.153"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.130" endtime="20201030 15:54:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.761" endtime="20201030 15:54:18.154"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:17.761" endtime="20201030 15:54:18.154"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.163" endtime="20201030 15:54:18.180"></status>
</kw>
<msg timestamp="20201030 15:54:18.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.162" endtime="20201030 15:54:18.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.182" endtime="20201030 15:54:18.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.184" endtime="20201030 15:54:18.186"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.159" endtime="20201030 15:54:18.187"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.157" endtime="20201030 15:54:18.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.194" endtime="20201030 15:54:18.480"></status>
</kw>
<msg timestamp="20201030 15:54:18.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:18.192" endtime="20201030 15:54:18.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020280944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0203365, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:18.485" endtime="20201030 15:54:18.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.493" endtime="20201030 15:54:18.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.190" endtime="20201030 15:54:18.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.188" endtime="20201030 15:54:18.496"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:18.500" level="INFO">${RESULT} = [{'diff': 5.555600000000174e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.606899999999887e-05}, {'diff': 5.562500000000012e-05}, {'diff': 5.6305999999999023e-05}, {'diff': 5.544500000000119e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:18.497" endtime="20201030 15:54:18.500"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:18.552" level="INFO">${ACCURACY} = {'diff': [5.555600000000174e-05, 5.5986000000000924e-05, 5.606899999999887e-05, 5.562500000000012e-05, 5.6305999999999023e-05, 5.544500000000119e-05, 5.577800000000285e-05, 5.60549999999993e-05, 5.552...</msg>
<status status="PASS" starttime="20201030 15:54:18.501" endtime="20201030 15:54:18.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.557" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 15:54:18.555" endtime="20201030 15:54:18.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.559" level="INFO">VALUE: [5.555600000000174e-05, 5.5986000000000924e-05, 5.606899999999887e-05, 5.562500000000012e-05, 5.6305999999999023e-05, 5.544500000000119e-05, 5.577800000000285e-05, 5.60549999999993e-05, 5.5527999999999134e-05, 5.6027999999999634e-05, 5.5915999999999605e-05, 5.5443999999998245e-05, 5.609699999999801e-05, 5.5999999999997024e-05, 5.611099999999758e-05, 5.541700000000205e-05, 5.608299999999844e-05, 5.55280000000026e-05, 5.590300000000298e-05, 5.630600000000249e-05, 5.537499999999987e-05, 5.554200000000217e-05, 5.563899999999969e-05, 5.562500000000012e-05, 5.633399999999816e-05, 5.56670000000023e-05, 5.631899999999912e-05, 5.5721999999997635e-05, 5.5888000000000465e-05, 5.5750000000000244e-05, 5.6165999999999855e-05, 5.5985999999997454e-05, 5.6000000000000494e-05, 5.584700000000123e-05, 5.5527999999999134e-05, 5.5791999999998954e-05, 5.577800000000285e-05, 5.537499999999987e-05, 5.556999999999784e-05, 5.577800000000285e-05, 5.538899999999944e-05, 5.563899999999969e-05, 5.6263999999996844e-05, 5.629200000000292e-05, 5.6264000000000314e-05, 5.6179999999999425e-05, 5.5443999999998245e-05, 5.58610000000008e-05, 5.5777999999999384e-05, 5.584700000000123e-05]</msg>
<status status="PASS" starttime="20201030 15:54:18.558" endtime="20201030 15:54:18.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.553" endtime="20201030 15:54:18.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:18.564" endtime="20201030 15:54:18.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.563" endtime="20201030 15:54:18.584"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.562" endtime="20201030 15:54:18.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.155" endtime="20201030 15:54:18.585"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.154" endtime="20201030 15:54:18.585"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.594" endtime="20201030 15:54:18.610"></status>
</kw>
<msg timestamp="20201030 15:54:18.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.593" endtime="20201030 15:54:18.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.613" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.612" endtime="20201030 15:54:18.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.615" endtime="20201030 15:54:18.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.590" endtime="20201030 15:54:18.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.588" endtime="20201030 15:54:18.617"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.624" endtime="20201030 15:54:18.911"></status>
</kw>
<msg timestamp="20201030 15:54:18.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.622" endtime="20201030 15:54:18.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020206931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020263347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:18.915" endtime="20201030 15:54:18.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.924" endtime="20201030 15:54:18.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.620" endtime="20201030 15:54:18.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.618" endtime="20201030 15:54:18.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:18.931" level="INFO">${RESULT} = [{'diff': 5.6416000000000105e-05}, {'diff': 5.644499999999872e-05}, {'diff': 5.662500000000112e-05}, {'diff': 5.6999999999998024e-05}, {'diff': 5.684799999999823e-05}, {'diff': 5.7277999999997414e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:18.927" endtime="20201030 15:54:18.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:18.935" level="INFO">${ACCURACY} = {'diff': [5.6416000000000105e-05, 5.644499999999872e-05, 5.662500000000112e-05, 5.6999999999998024e-05, 5.684799999999823e-05, 5.7277999999997414e-05, 5.6763999999997344e-05, 5.6985999999998455e-05, 5...</msg>
<status status="PASS" starttime="20201030 15:54:18.932" endtime="20201030 15:54:18.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.940" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 15:54:18.939" endtime="20201030 15:54:18.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.943" level="INFO">VALUE: [5.6416000000000105e-05, 5.644499999999872e-05, 5.662500000000112e-05, 5.6999999999998024e-05, 5.684799999999823e-05, 5.7277999999997414e-05, 5.6763999999997344e-05, 5.6985999999998455e-05, 5.7028000000000634e-05, 5.6541999999999704e-05, 5.7000000000001494e-05, 5.668100000000287e-05, 5.736099999999883e-05, 5.688899999999747e-05, 5.7166000000000855e-05, 5.677700000000091e-05, 5.6972000000002354e-05, 5.6485999999997955e-05, 5.6778000000000384e-05, 5.715300000000076e-05, 5.7014000000001064e-05, 5.7263999999997844e-05, 5.6972000000002354e-05, 5.7221999999999135e-05, 5.68610000000018e-05, 5.6735999999998205e-05, 5.6902000000001035e-05, 5.6499999999997524e-05, 5.740300000000101e-05, 5.6805999999999524e-05, 5.658399999999841e-05, 5.709800000000195e-05, 5.6652000000000785e-05, 5.7208000000003034e-05, 5.6736000000001674e-05, 5.711100000000205e-05, 5.690300000000051e-05, 5.6943999999999745e-05, 5.6443999999999245e-05, 5.711100000000205e-05, 5.656900000000284e-05, 5.6458000000002284e-05, 5.7014000000001064e-05, 5.7306000000000024e-05, 5.71809999999999e-05, 5.688899999999747e-05, 5.6500000000000994e-05, 5.716700000000033e-05, 5.6791999999999954e-05, 5.7249999999998274e-05]</msg>
<status status="PASS" starttime="20201030 15:54:18.941" endtime="20201030 15:54:18.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.936" endtime="20201030 15:54:18.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:18.948" endtime="20201030 15:54:18.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.947" endtime="20201030 15:54:18.968"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.945" endtime="20201030 15:54:18.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.586" endtime="20201030 15:54:18.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.586" endtime="20201030 15:54:18.969"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.978" endtime="20201030 15:54:18.995"></status>
</kw>
<msg timestamp="20201030 15:54:18.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.976" endtime="20201030 15:54:18.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:18.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:18.996" endtime="20201030 15:54:18.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:18.999" endtime="20201030 15:54:19.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.974" endtime="20201030 15:54:19.001"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.972" endtime="20201030 15:54:19.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.008" endtime="20201030 15:54:19.296"></status>
</kw>
<msg timestamp="20201030 15:54:19.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020667833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.007" endtime="20201030 15:54:19.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020610403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020667833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.300" endtime="20201030 15:54:19.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.309" endtime="20201030 15:54:19.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.004" endtime="20201030 15:54:19.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.002" endtime="20201030 15:54:19.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:19.315" level="INFO">${RESULT} = [{'diff': 5.7430000000000675e-05}, {'diff': 5.836099999999983e-05}, {'diff': 5.808299999999697e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.763899999999822e-05}, {'diff': 5.8194000000000995e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:19.312" endtime="20201030 15:54:19.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:19.321" level="INFO">${ACCURACY} = {'diff': [5.7430000000000675e-05, 5.836099999999983e-05, 5.808299999999697e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.8194000000000995e-05, 5.736099999999883e-05, 5.757000000000331e-05, 5.7...</msg>
<status status="PASS" starttime="20201030 15:54:19.317" endtime="20201030 15:54:19.321"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.325" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 15:54:19.324" endtime="20201030 15:54:19.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.328" level="INFO">VALUE: [5.7430000000000675e-05, 5.836099999999983e-05, 5.808299999999697e-05, 5.8222000000000135e-05, 5.763899999999822e-05, 5.8194000000000995e-05, 5.736099999999883e-05, 5.757000000000331e-05, 5.766700000000083e-05, 5.7806000000000524e-05, 5.734699999999926e-05, 5.8235999999999705e-05, 5.73749999999984e-05, 5.802699999999869e-05, 5.7763999999998344e-05, 5.8193999999997525e-05, 5.8208000000000565e-05, 5.802699999999869e-05, 5.8263999999998844e-05, 5.788900000000194e-05, 5.8014000000002064e-05, 5.766700000000083e-05, 5.7749999999998775e-05, 5.761099999999908e-05, 5.784699999999976e-05, 5.8070000000000344e-05, 5.813900000000219e-05, 5.8320000000000594e-05, 5.822299999999961e-05, 5.8334000000000163e-05, 5.7778000000001384e-05, 5.786099999999933e-05, 5.809700000000001e-05, 5.758299999999994e-05, 5.7721999999999635e-05, 5.827700000000241e-05, 5.816700000000133e-05, 5.7430000000000675e-05, 5.8249999999999275e-05, 5.8042000000001204e-05, 5.791700000000108e-05, 5.8028000000001634e-05, 5.834700000000026e-05, 5.822299999999961e-05, 5.793100000000065e-05, 5.8070000000000344e-05, 5.7513999999998094e-05, 5.838899999999897e-05, 5.790299999999804e-05, 5.8137999999999246e-05]</msg>
<status status="PASS" starttime="20201030 15:54:19.327" endtime="20201030 15:54:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.322" endtime="20201030 15:54:19.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:19.333" endtime="20201030 15:54:19.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.332" endtime="20201030 15:54:19.353"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.330" endtime="20201030 15:54:19.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.970" endtime="20201030 15:54:19.354"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:18.969" endtime="20201030 15:54:19.354"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.363" endtime="20201030 15:54:19.381"></status>
</kw>
<msg timestamp="20201030 15:54:19.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.362" endtime="20201030 15:54:19.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.382" endtime="20201030 15:54:19.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.385" endtime="20201030 15:54:19.387"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.359" endtime="20201030 15:54:19.388"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.357" endtime="20201030 15:54:19.388"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.396" endtime="20201030 15:54:19.682"></status>
</kw>
<msg timestamp="20201030 15:54:19.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.394" endtime="20201030 15:54:19.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020343097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:19.687" endtime="20201030 15:54:19.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.695" endtime="20201030 15:54:19.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.391" endtime="20201030 15:54:19.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.389" endtime="20201030 15:54:19.698"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:19.702" level="INFO">${RESULT} = [{'diff': 5.920899999999757e-05}, {'diff': 5.920899999999757e-05}, {'diff': 5.861100000000008e-05}, {'diff': 5.8958000000001315e-05}, {'diff': 5.9013999999999595e-05}, {'diff': 5.8722000000000635e-05}...</msg>
<status status="PASS" starttime="20201030 15:54:19.699" endtime="20201030 15:54:19.702"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:19.707" level="INFO">${ACCURACY} = {'diff': [5.920899999999757e-05, 5.920899999999757e-05, 5.861100000000008e-05, 5.8958000000001315e-05, 5.9013999999999595e-05, 5.8722000000000635e-05, 5.9194000000001995e-05, 5.933300000000169e-05, 5....</msg>
<status status="PASS" starttime="20201030 15:54:19.703" endtime="20201030 15:54:19.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.711" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 15:54:19.710" endtime="20201030 15:54:19.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.714" level="INFO">VALUE: [5.920899999999757e-05, 5.920899999999757e-05, 5.861100000000008e-05, 5.8958000000001315e-05, 5.9013999999999595e-05, 5.8722000000000635e-05, 5.9194000000001995e-05, 5.933300000000169e-05, 5.8429999999998206e-05, 5.9263999999999845e-05, 5.9334000000001164e-05, 5.8528000000002134e-05, 5.83610000000033e-05, 5.8541999999998234e-05, 5.9305999999998554e-05, 5.859700000000051e-05, 5.8848000000000233e-05, 5.9084000000000914e-05, 5.920900000000104e-05, 5.8485999999999955e-05, 5.902699999999969e-05, 5.902699999999969e-05, 5.8430000000001675e-05, 5.913899999999972e-05, 5.912500000000015e-05, 5.866699999999836e-05, 5.841699999999811e-05, 5.863899999999922e-05, 5.8792000000001954e-05, 5.8972000000000885e-05, 5.8792000000001954e-05, 5.8401999999999066e-05, 5.8651999999999316e-05, 5.8834000000000664e-05, 5.8915999999999136e-05, 5.873699999999968e-05, 5.931899999999865e-05, 5.8499999999999525e-05, 5.8444000000001245e-05, 5.913899999999972e-05, 5.8499999999999525e-05, 5.906900000000187e-05, 5.8834000000000664e-05, 5.9180000000002425e-05, 5.9291999999998984e-05, 5.915299999999929e-05, 5.841700000000158e-05, 5.8499999999999525e-05, 5.9069999999997874e-05, 5.890300000000251e-05]</msg>
<status status="PASS" starttime="20201030 15:54:19.712" endtime="20201030 15:54:19.715"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.707" endtime="20201030 15:54:19.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:19.719" endtime="20201030 15:54:19.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.718" endtime="20201030 15:54:19.739"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.716" endtime="20201030 15:54:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.355" endtime="20201030 15:54:19.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.354" endtime="20201030 15:54:19.740"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.750" endtime="20201030 15:54:19.768"></status>
</kw>
<msg timestamp="20201030 15:54:19.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.748" endtime="20201030 15:54:19.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:19.771" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:19.769" endtime="20201030 15:54:19.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.772" endtime="20201030 15:54:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.745" endtime="20201030 15:54:19.774"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.743" endtime="20201030 15:54:19.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:19.781" endtime="20201030 15:54:20.068"></status>
</kw>
<msg timestamp="20201030 15:54:20.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021144083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02120375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:19.780" endtime="20201030 15:54:20.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.079" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021144083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02120375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:20.072" endtime="20201030 15:54:20.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.080" endtime="20201030 15:54:20.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.777" endtime="20201030 15:54:20.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.775" endtime="20201030 15:54:20.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:20.087" level="INFO">${RESULT} = [{'diff': 5.966699999999936e-05}, {'diff': 5.938899999999997e-05}, {'diff': 6.016699999999986e-05}, {'diff': 5.941699999999911e-05}, {'diff': 6.0347999999998264e-05}, {'diff': 5.984700000000176e-05}, ...</msg>
<status status="PASS" starttime="20201030 15:54:20.084" endtime="20201030 15:54:20.087"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:20.092" level="INFO">${ACCURACY} = {'diff': [5.966699999999936e-05, 5.938899999999997e-05, 6.016699999999986e-05, 5.941699999999911e-05, 6.0347999999998264e-05, 5.984700000000176e-05, 5.972300000000111e-05, 5.9485999999997485e-05, 5.99...</msg>
<status status="PASS" starttime="20201030 15:54:20.088" endtime="20201030 15:54:20.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.096" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 15:54:20.095" endtime="20201030 15:54:20.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.100" level="INFO">VALUE: [5.966699999999936e-05, 5.938899999999997e-05, 6.016699999999986e-05, 5.941699999999911e-05, 6.0347999999998264e-05, 5.984700000000176e-05, 5.972300000000111e-05, 5.9485999999997485e-05, 5.990300000000004e-05, 6.0014000000000595e-05, 6.002700000000069e-05, 5.9471999999997915e-05, 6.033299999999922e-05, 5.9443999999998776e-05, 5.988900000000047e-05, 6.019500000000247e-05, 6.0028000000000165e-05, 5.938899999999997e-05, 6.0250000000001275e-05, 5.961100000000108e-05, 6.0222000000002135e-05, 5.9555999999998804e-05, 5.9541999999999234e-05, 5.9569999999998374e-05, 5.9569999999998374e-05, 6.0055999999999304e-05, 5.9902000000000566e-05, 5.9458000000001815e-05, 5.9763999999996875e-05, 5.984700000000176e-05, 5.9986000000001455e-05, 5.9764000000000345e-05, 5.958299999999847e-05, 6.031900000000312e-05, 5.962500000000065e-05, 6.015300000000029e-05, 5.972299999999764e-05, 6.0249999999997805e-05, 5.9665999999999886e-05, 6.0041999999999734e-05, 6.0013999999997125e-05, 5.9777999999999915e-05, 6.004100000000026e-05, 6.020900000000204e-05, 5.9472000000001385e-05, 5.9472000000001385e-05, 5.9679999999999456e-05, 6.0264000000000845e-05, 5.962500000000065e-05, 5.9500000000000525e-05]</msg>
<status status="PASS" starttime="20201030 15:54:20.097" endtime="20201030 15:54:20.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.093" endtime="20201030 15:54:20.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:20.105" endtime="20201030 15:54:20.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.103" endtime="20201030 15:54:20.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.102" endtime="20201030 15:54:20.125"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.741" endtime="20201030 15:54:20.126"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:19.740" endtime="20201030 15:54:20.126"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.135" endtime="20201030 15:54:20.153"></status>
</kw>
<msg timestamp="20201030 15:54:20.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.133" endtime="20201030 15:54:20.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.154" endtime="20201030 15:54:20.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.157" endtime="20201030 15:54:20.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.131" endtime="20201030 15:54:20.159"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.128" endtime="20201030 15:54:20.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.166" endtime="20201030 15:54:20.452"></status>
</kw>
<msg timestamp="20201030 15:54:20.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.165" endtime="20201030 15:54:20.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020427764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.456" endtime="20201030 15:54:20.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.465" endtime="20201030 15:54:20.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.162" endtime="20201030 15:54:20.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.160" endtime="20201030 15:54:20.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:20.472" level="INFO">${RESULT} = [{'diff': 6.058299999999947e-05}, {'diff': 6.090300000000104e-05}, {'diff': 6.113899999999825e-05}, {'diff': 6.122199999999967e-05}, {'diff': 6.13889999999985e-05}, {'diff': 6.087499999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:20.468" endtime="20201030 15:54:20.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:20.477" level="INFO">${ACCURACY} = {'diff': [6.058299999999947e-05, 6.090300000000104e-05, 6.113899999999825e-05, 6.122199999999967e-05, 6.13889999999985e-05, 6.087499999999843e-05, 6.090299999999757e-05, 6.044499999999925e-05, 6.09999...</msg>
<status status="PASS" starttime="20201030 15:54:20.473" endtime="20201030 15:54:20.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.482" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 15:54:20.481" endtime="20201030 15:54:20.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.484" level="INFO">VALUE: [6.058299999999947e-05, 6.090300000000104e-05, 6.113899999999825e-05, 6.122199999999967e-05, 6.13889999999985e-05, 6.087499999999843e-05, 6.090299999999757e-05, 6.044499999999925e-05, 6.0999999999998555e-05, 6.090300000000104e-05, 6.137499999999893e-05, 6.136099999999936e-05, 6.115199999999835e-05, 6.0957999999999846e-05, 6.0457999999999346e-05, 6.088900000000147e-05, 6.119400000000053e-05, 6.0500000000001525e-05, 6.113900000000172e-05, 6.123599999999924e-05, 6.0542000000000235e-05, 6.0457999999999346e-05, 6.112499999999868e-05, 6.0555999999999804e-05, 6.0555999999999804e-05, 6.104200000000073e-05, 6.097300000000236e-05, 6.0694000000000026e-05, 6.106999999999987e-05, 6.0972000000002885e-05, 6.0472000000002385e-05, 6.087499999999843e-05, 6.08750000000019e-05, 6.0528000000000665e-05, 6.0430000000000206e-05, 6.0542000000000235e-05, 6.126400000000184e-05, 6.091700000000061e-05, 6.111099999999911e-05, 6.043099999999968e-05, 6.0749999999998305e-05, 6.0819999999999624e-05, 6.104200000000073e-05, 6.0499999999998055e-05, 6.122199999999967e-05, 6.038900000000097e-05, 6.0708000000003065e-05, 6.111099999999911e-05, 6.134699999999979e-05, 6.127800000000141e-05]</msg>
<status status="PASS" starttime="20201030 15:54:20.483" endtime="20201030 15:54:20.485"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.478" endtime="20201030 15:54:20.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:20.489" endtime="20201030 15:54:20.509"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.488" endtime="20201030 15:54:20.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.487" endtime="20201030 15:54:20.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.127" endtime="20201030 15:54:20.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.126" endtime="20201030 15:54:20.510"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.519" endtime="20201030 15:54:20.536"></status>
</kw>
<msg timestamp="20201030 15:54:20.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.518" endtime="20201030 15:54:20.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.539" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.538" endtime="20201030 15:54:20.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.541" endtime="20201030 15:54:20.542"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.515" endtime="20201030 15:54:20.543"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.513" endtime="20201030 15:54:20.543"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.550" endtime="20201030 15:54:20.837"></status>
</kw>
<msg timestamp="20201030 15:54:20.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.549" endtime="20201030 15:54:20.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020265681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020328014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.842" endtime="20201030 15:54:20.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.850" endtime="20201030 15:54:20.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.546" endtime="20201030 15:54:20.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.544" endtime="20201030 15:54:20.853"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:20.857" level="INFO">${RESULT} = [{'diff': 6.233299999999775e-05}, {'diff': 6.17080000000006e-05}, {'diff': 6.223600000000024e-05}, {'diff': 6.17499999999993e-05}, {'diff': 6.163900000000222e-05}, {'diff': 6.16950000000005e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:20.853" endtime="20201030 15:54:20.857"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:20.861" level="INFO">${ACCURACY} = {'diff': [6.233299999999775e-05, 6.17080000000006e-05, 6.223600000000024e-05, 6.17499999999993e-05, 6.163900000000222e-05, 6.16950000000005e-05, 6.158399999999994e-05, 6.137499999999893e-05, 6.1764000...</msg>
<status status="PASS" starttime="20201030 15:54:20.858" endtime="20201030 15:54:20.861"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.866" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 15:54:20.865" endtime="20201030 15:54:20.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.868" level="INFO">VALUE: [6.233299999999775e-05, 6.17080000000006e-05, 6.223600000000024e-05, 6.17499999999993e-05, 6.163900000000222e-05, 6.16950000000005e-05, 6.158399999999994e-05, 6.137499999999893e-05, 6.176400000000234e-05, 6.229099999999904e-05, 6.166599999999842e-05, 6.186099999999986e-05, 6.186099999999986e-05, 6.211100000000011e-05, 6.161099999999961e-05, 6.167999999999799e-05, 6.188900000000247e-05, 6.141700000000111e-05, 6.227799999999895e-05, 6.195800000000085e-05, 6.180600000000105e-05, 6.163900000000222e-05, 6.190299999999857e-05, 6.142999999999774e-05, 6.162500000000265e-05, 6.17080000000006e-05, 6.217999999999849e-05, 6.229099999999904e-05, 6.226399999999938e-05, 6.180600000000105e-05, 6.18750000000029e-05, 6.184700000000029e-05, 6.22499999999998e-05, 6.22080000000011e-05, 6.195899999999685e-05, 6.222300000000014e-05, 6.191699999999814e-05, 6.157000000000037e-05, 6.181899999999768e-05, 6.204199999999827e-05, 6.141700000000111e-05, 6.218099999999796e-05, 6.166599999999842e-05, 6.19019999999991e-05, 6.192999999999824e-05, 6.145800000000035e-05, 6.227800000000241e-05, 6.15140000000021e-05, 6.22499999999998e-05, 6.140300000000154e-05]</msg>
<status status="PASS" starttime="20201030 15:54:20.867" endtime="20201030 15:54:20.869"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.862" endtime="20201030 15:54:20.870"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:20.874" endtime="20201030 15:54:20.893"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.872" endtime="20201030 15:54:20.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.871" endtime="20201030 15:54:20.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.511" endtime="20201030 15:54:20.894"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.511" endtime="20201030 15:54:20.895"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.904" endtime="20201030 15:54:20.921"></status>
</kw>
<msg timestamp="20201030 15:54:20.922" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.902" endtime="20201030 15:54:20.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:20.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:20.923" endtime="20201030 15:54:20.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.925" endtime="20201030 15:54:20.927"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.899" endtime="20201030 15:54:20.928"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.897" endtime="20201030 15:54:20.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:20.935" endtime="20201030 15:54:21.221"></status>
</kw>
<msg timestamp="20201030 15:54:21.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021362042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:20.933" endtime="20201030 15:54:21.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021299625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021362042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.226" endtime="20201030 15:54:21.233"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.234" endtime="20201030 15:54:21.236"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.931" endtime="20201030 15:54:21.237"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.929" endtime="20201030 15:54:21.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:21.241" level="INFO">${RESULT} = [{'diff': 6.241700000000211e-05}, {'diff': 6.27500000000003e-05}, {'diff': 6.284800000000076e-05}, {'diff': 6.287500000000043e-05}, {'diff': 6.326400000000038e-05}, {'diff': 6.32500000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:21.238" endtime="20201030 15:54:21.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:21.245" level="INFO">${ACCURACY} = {'diff': [6.241700000000211e-05, 6.27500000000003e-05, 6.284800000000076e-05, 6.287500000000043e-05, 6.326400000000038e-05, 6.32500000000008e-05, 6.27219999999977e-05, 6.272200000000117e-05, 6.2875000...</msg>
<status status="PASS" starttime="20201030 15:54:21.242" endtime="20201030 15:54:21.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.250" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 15:54:21.249" endtime="20201030 15:54:21.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.253" level="INFO">VALUE: [6.241700000000211e-05, 6.27500000000003e-05, 6.284800000000076e-05, 6.287500000000043e-05, 6.326400000000038e-05, 6.32500000000008e-05, 6.27219999999977e-05, 6.272200000000117e-05, 6.287500000000043e-05, 6.248600000000049e-05, 6.283300000000172e-05, 6.277799999999945e-05, 6.266699999999889e-05, 6.32219999999982e-05, 6.332000000000212e-05, 6.294499999999828e-05, 6.301400000000013e-05, 6.286099999999739e-05, 6.30279999999997e-05, 6.248600000000049e-05, 6.276399999999988e-05, 6.333299999999875e-05, 6.25690000000019e-05, 6.255499999999886e-05, 6.245800000000135e-05, 6.297200000000142e-05, 6.290299999999957e-05, 6.286099999999739e-05, 6.259700000000104e-05, 6.273600000000074e-05, 6.297200000000142e-05, 6.286099999999739e-05, 6.263899999999975e-05, 6.313900000000025e-05, 6.322300000000114e-05, 6.243099999999821e-05, 6.323699999999724e-05, 6.304099999999979e-05, 6.323600000000124e-05, 6.301300000000065e-05, 6.29439999999988e-05, 6.241599999999917e-05, 6.244400000000178e-05, 6.330599999999909e-05, 6.309699999999807e-05, 6.287500000000043e-05, 6.280600000000205e-05, 6.237499999999993e-05, 6.332000000000212e-05, 6.258400000000094e-05]</msg>
<status status="PASS" starttime="20201030 15:54:21.251" endtime="20201030 15:54:21.254"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.246" endtime="20201030 15:54:21.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.259" endtime="20201030 15:54:21.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.257" endtime="20201030 15:54:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.256" endtime="20201030 15:54:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.896" endtime="20201030 15:54:21.279"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:20.895" endtime="20201030 15:54:21.280"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.289" endtime="20201030 15:54:21.305"></status>
</kw>
<msg timestamp="20201030 15:54:21.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.287" endtime="20201030 15:54:21.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.307" endtime="20201030 15:54:21.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.310" endtime="20201030 15:54:21.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.284" endtime="20201030 15:54:21.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.282" endtime="20201030 15:54:21.312"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.319" endtime="20201030 15:54:21.605"></status>
</kw>
<msg timestamp="20201030 15:54:21.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.317" endtime="20201030 15:54:21.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.610" endtime="20201030 15:54:21.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.618" endtime="20201030 15:54:21.620"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.315" endtime="20201030 15:54:21.621"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.313" endtime="20201030 15:54:21.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:21.625" level="INFO">${RESULT} = [{'diff': 6.370799999999913e-05}, {'diff': 6.384699999999882e-05}, {'diff': 6.40829999999995e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.387500000000143e-05}, {'diff': 6.341699999999964e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:21.622" endtime="20201030 15:54:21.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:21.630" level="INFO">${ACCURACY} = {'diff': [6.370799999999913e-05, 6.384699999999882e-05, 6.40829999999995e-05, 6.404200000000027e-05, 6.387500000000143e-05, 6.341699999999964e-05, 6.40280000000007e-05, 6.347199999999845e-05, 6.427799...</msg>
<status status="PASS" starttime="20201030 15:54:21.626" endtime="20201030 15:54:21.631"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.635" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 15:54:21.634" endtime="20201030 15:54:21.635"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.638" level="INFO">VALUE: [6.370799999999913e-05, 6.384699999999882e-05, 6.40829999999995e-05, 6.404200000000027e-05, 6.387500000000143e-05, 6.341699999999964e-05, 6.40280000000007e-05, 6.347199999999845e-05, 6.427799999999748e-05, 6.434699999999932e-05, 6.395799999999938e-05, 6.42219999999992e-05, 6.433399999999923e-05, 6.391600000000067e-05, 6.401400000000113e-05, 6.354100000000029e-05, 6.362500000000118e-05, 6.409699999999907e-05, 6.387499999999796e-05, 6.399999999999809e-05, 6.366699999999989e-05, 6.376400000000088e-05, 6.393099999999971e-05, 6.394500000000275e-05, 6.377800000000045e-05, 6.411099999999864e-05, 6.412500000000168e-05, 6.37500000000013e-05, 6.423699999999824e-05, 6.413800000000178e-05, 6.416600000000092e-05, 6.398599999999852e-05, 6.399999999999809e-05, 6.433299999999975e-05, 6.430500000000061e-05, 6.401400000000113e-05, 6.369499999999903e-05, 6.348599999999802e-05, 6.39029999999971e-05, 6.386099999999839e-05, 6.387500000000143e-05, 6.419499999999953e-05, 6.380599999999959e-05, 6.393099999999971e-05, 6.416700000000039e-05, 6.337499999999746e-05, 6.337500000000093e-05, 6.356899999999943e-05, 6.342999999999974e-05, 6.367999999999999e-05]</msg>
<status status="PASS" starttime="20201030 15:54:21.636" endtime="20201030 15:54:21.639"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.631" endtime="20201030 15:54:21.639"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:21.643" endtime="20201030 15:54:21.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.641" endtime="20201030 15:54:21.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.640" endtime="20201030 15:54:21.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.281" endtime="20201030 15:54:21.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.280" endtime="20201030 15:54:21.664"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.673" endtime="20201030 15:54:21.691"></status>
</kw>
<msg timestamp="20201030 15:54:21.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.671" endtime="20201030 15:54:21.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:21.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:21.692" endtime="20201030 15:54:21.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.697" endtime="20201030 15:54:21.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.669" endtime="20201030 15:54:21.699"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.666" endtime="20201030 15:54:21.699"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:21.707" endtime="20201030 15:54:21.997"></status>
</kw>
<msg timestamp="20201030 15:54:22.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:21.704" endtime="20201030 15:54:22.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020903417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020968736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.001" endtime="20201030 15:54:22.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.010" endtime="20201030 15:54:22.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.702" endtime="20201030 15:54:22.012"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.700" endtime="20201030 15:54:22.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:22.017" level="INFO">${RESULT} = [{'diff': 6.531900000000118e-05}, {'diff': 6.447199999999945e-05}, {'diff': 6.493100000000071e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.462499999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:22.014" endtime="20201030 15:54:22.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:22.021" level="INFO">${ACCURACY} = {'diff': [6.531900000000118e-05, 6.447199999999945e-05, 6.493100000000071e-05, 6.505600000000084e-05, 6.502799999999823e-05, 6.462499999999871e-05, 6.445899999999935e-05, 6.502799999999823e-05, 6.4499...</msg>
<status status="PASS" starttime="20201030 15:54:22.018" endtime="20201030 15:54:22.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.026" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 15:54:22.025" endtime="20201030 15:54:22.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.028" level="INFO">VALUE: [6.531900000000118e-05, 6.447199999999945e-05, 6.493100000000071e-05, 6.505600000000084e-05, 6.502799999999823e-05, 6.462499999999871e-05, 6.445899999999935e-05, 6.502799999999823e-05, 6.449999999999859e-05, 6.465299999999785e-05, 6.527700000000247e-05, 6.506900000000093e-05, 6.4889000000002e-05, 6.509700000000007e-05, 6.500000000000256e-05, 6.452799999999773e-05, 6.47219999999997e-05, 6.44029999999976e-05, 6.441700000000064e-05, 6.459699999999957e-05, 6.491700000000114e-05, 6.482000000000016e-05, 6.50700000000004e-05, 6.491700000000114e-05, 6.47089999999996e-05, 6.501400000000213e-05, 6.455500000000086e-05, 6.443000000000074e-05, 6.451400000000163e-05, 6.447199999999945e-05, 6.533300000000075e-05, 6.520799999999716e-05, 6.484699999999982e-05, 6.497199999999995e-05, 6.533300000000075e-05, 6.436100000000236e-05, 6.444499999999978e-05, 6.52090000000001e-05, 6.43479999999988e-05, 6.498599999999952e-05, 6.519399999999759e-05, 6.538899999999903e-05, 6.473599999999927e-05, 6.440300000000107e-05, 6.533300000000075e-05, 6.502799999999823e-05, 6.491700000000114e-05, 6.45699999999999e-05, 6.448599999999902e-05, 6.473599999999927e-05]</msg>
<status status="PASS" starttime="20201030 15:54:22.027" endtime="20201030 15:54:22.029"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.022" endtime="20201030 15:54:22.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.034" endtime="20201030 15:54:22.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.032" endtime="20201030 15:54:22.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.031" endtime="20201030 15:54:22.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.665" endtime="20201030 15:54:22.054"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:21.664" endtime="20201030 15:54:22.055"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.064" endtime="20201030 15:54:22.082"></status>
</kw>
<msg timestamp="20201030 15:54:22.083" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.062" endtime="20201030 15:54:22.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.084" endtime="20201030 15:54:22.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.087" endtime="20201030 15:54:22.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.059" endtime="20201030 15:54:22.089"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.057" endtime="20201030 15:54:22.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.096" endtime="20201030 15:54:22.383"></status>
</kw>
<msg timestamp="20201030 15:54:22.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.094" endtime="20201030 15:54:22.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021277889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021344111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.387" endtime="20201030 15:54:22.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.396" endtime="20201030 15:54:22.397"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.092" endtime="20201030 15:54:22.398"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.090" endtime="20201030 15:54:22.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:22.402" level="INFO">${RESULT} = [{'diff': 6.622199999999773e-05}, {'diff': 6.573600000000027e-05}, {'diff': 6.561100000000014e-05}, {'diff': 6.561100000000014e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.543100000000121e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:22.399" endtime="20201030 15:54:22.403"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:22.407" level="INFO">${ACCURACY} = {'diff': [6.622199999999773e-05, 6.573600000000027e-05, 6.561100000000014e-05, 6.561100000000014e-05, 6.537499999999946e-05, 6.543100000000121e-05, 6.594499999999781e-05, 6.53890000000025e-05, 6.61250...</msg>
<status status="PASS" starttime="20201030 15:54:22.404" endtime="20201030 15:54:22.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.411" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 15:54:22.410" endtime="20201030 15:54:22.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.414" level="INFO">VALUE: [6.622199999999773e-05, 6.573600000000027e-05, 6.561100000000014e-05, 6.561100000000014e-05, 6.537499999999946e-05, 6.543100000000121e-05, 6.594499999999781e-05, 6.53890000000025e-05, 6.612500000000021e-05, 6.590300000000257e-05, 6.613899999999978e-05, 6.559800000000005e-05, 6.583400000000073e-05, 6.576299999999993e-05, 6.633300000000175e-05, 6.57639999999994e-05, 6.62639999999999e-05, 6.583300000000125e-05, 6.629199999999905e-05, 6.577799999999898e-05, 6.543100000000121e-05, 6.544500000000078e-05, 6.57639999999994e-05, 6.569500000000103e-05, 6.631999999999819e-05, 6.587499999999996e-05, 6.538899999999903e-05, 6.60969999999976e-05, 6.620799999999816e-05, 6.561100000000014e-05, 6.572199999999723e-05, 6.563900000000275e-05, 6.584700000000082e-05, 6.588899999999953e-05, 6.5583000000001e-05, 6.629199999999905e-05, 6.586100000000039e-05, 6.593100000000171e-05, 6.559700000000057e-05, 6.583400000000073e-05, 6.572300000000017e-05, 6.600000000000009e-05, 6.59029999999991e-05, 6.590199999999963e-05, 6.616599999999945e-05, 6.616599999999945e-05, 6.601400000000313e-05, 6.555599999999787e-05, 6.570800000000113e-05, 6.579200000000202e-05]</msg>
<status status="PASS" starttime="20201030 15:54:22.413" endtime="20201030 15:54:22.416"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.408" endtime="20201030 15:54:22.416"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.420" endtime="20201030 15:54:22.440"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.419" endtime="20201030 15:54:22.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.417" endtime="20201030 15:54:22.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.055" endtime="20201030 15:54:22.441"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.055" endtime="20201030 15:54:22.441"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.451" endtime="20201030 15:54:22.468"></status>
</kw>
<msg timestamp="20201030 15:54:22.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.449" endtime="20201030 15:54:22.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.469" endtime="20201030 15:54:22.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.472" endtime="20201030 15:54:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.446" endtime="20201030 15:54:22.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.444" endtime="20201030 15:54:22.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.481" endtime="20201030 15:54:22.767"></status>
</kw>
<msg timestamp="20201030 15:54:22.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021140986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021208194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.480" endtime="20201030 15:54:22.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021140986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021208194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.771" endtime="20201030 15:54:22.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.780" endtime="20201030 15:54:22.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.477" endtime="20201030 15:54:22.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.475" endtime="20201030 15:54:22.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:22.787" level="INFO">${RESULT} = [{'diff': 6.720799999999916e-05}, {'diff': 6.708299999999903e-05}, {'diff': 6.675000000000084e-05}, {'diff': 6.666599999999995e-05}, {'diff': 6.656899999999896e-05}, {'diff': 6.679199999999955e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:22.783" endtime="20201030 15:54:22.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:22.792" level="INFO">${ACCURACY} = {'diff': [6.720799999999916e-05, 6.708299999999903e-05, 6.675000000000084e-05, 6.666599999999995e-05, 6.656899999999896e-05, 6.679199999999955e-05, 6.684699999999835e-05, 6.698599999999805e-05, 6.7195...</msg>
<status status="PASS" starttime="20201030 15:54:22.788" endtime="20201030 15:54:22.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.797" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 15:54:22.795" endtime="20201030 15:54:22.797"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.799" level="INFO">VALUE: [6.720799999999916e-05, 6.708299999999903e-05, 6.675000000000084e-05, 6.666599999999995e-05, 6.656899999999896e-05, 6.679199999999955e-05, 6.684699999999835e-05, 6.698599999999805e-05, 6.719500000000253e-05, 6.692999999999977e-05, 6.698600000000152e-05, 6.650000000000059e-05, 6.69030000000001e-05, 6.727800000000048e-05, 6.70969999999986e-05, 6.6583000000002e-05, 6.687500000000096e-05, 6.673600000000127e-05, 6.645799999999841e-05, 6.716699999999992e-05, 6.683299999999878e-05, 6.693099999999924e-05, 6.708299999999903e-05, 6.672300000000117e-05, 6.647199999999798e-05, 6.69030000000001e-05, 6.683400000000173e-05, 6.697299999999795e-05, 6.663900000000028e-05, 6.72909999999971e-05, 6.724999999999787e-05, 6.731899999999971e-05, 6.662500000000071e-05, 6.642999999999927e-05, 6.636100000000089e-05, 6.638900000000003e-05, 6.655599999999887e-05, 6.736099999999842e-05, 6.648600000000102e-05, 6.733299999999928e-05, 6.637500000000046e-05, 6.666700000000289e-05, 6.727800000000048e-05, 6.695799999999891e-05, 6.701400000000066e-05, 6.686099999999792e-05, 6.67770000000005e-05, 6.637500000000046e-05, 6.719399999999959e-05, 6.704100000000032e-05]</msg>
<status status="PASS" starttime="20201030 15:54:22.798" endtime="20201030 15:54:22.800"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.793" endtime="20201030 15:54:22.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:22.804" endtime="20201030 15:54:22.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.803" endtime="20201030 15:54:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.802" endtime="20201030 15:54:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.442" endtime="20201030 15:54:22.825"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.442" endtime="20201030 15:54:22.825"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.834" endtime="20201030 15:54:22.852"></status>
</kw>
<msg timestamp="20201030 15:54:22.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.833" endtime="20201030 15:54:22.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:22.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:22.853" endtime="20201030 15:54:22.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.856" endtime="20201030 15:54:22.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.830" endtime="20201030 15:54:22.858"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.828" endtime="20201030 15:54:22.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:22.865" endtime="20201030 15:54:23.154"></status>
</kw>
<msg timestamp="20201030 15:54:23.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:22.864" endtime="20201030 15:54:23.158"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020230667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.159" endtime="20201030 15:54:23.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.167" endtime="20201030 15:54:23.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.861" endtime="20201030 15:54:23.169"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.859" endtime="20201030 15:54:23.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.174" level="INFO">${RESULT} = [{'diff': 6.795799999999991e-05}, {'diff': 6.822199999999973e-05}, {'diff': 6.79169999999972e-05}, {'diff': 6.813900000000178e-05}, {'diff': 6.762499999999824e-05}, {'diff': 6.798599999999905e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:23.171" endtime="20201030 15:54:23.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:23.178" level="INFO">${ACCURACY} = {'diff': [6.795799999999991e-05, 6.822199999999973e-05, 6.79169999999972e-05, 6.813900000000178e-05, 6.762499999999824e-05, 6.798599999999905e-05, 6.772199999999923e-05, 6.787499999999849e-05, 6.76250...</msg>
<status status="PASS" starttime="20201030 15:54:23.175" endtime="20201030 15:54:23.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.183" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 15:54:23.182" endtime="20201030 15:54:23.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.186" level="INFO">VALUE: [6.795799999999991e-05, 6.822199999999973e-05, 6.79169999999972e-05, 6.813900000000178e-05, 6.762499999999824e-05, 6.798599999999905e-05, 6.772199999999923e-05, 6.787499999999849e-05, 6.762500000000171e-05, 6.815300000000135e-05, 6.762499999999824e-05, 6.826300000000243e-05, 6.781900000000021e-05, 6.777800000000098e-05, 6.744399999999984e-05, 6.80420000000008e-05, 6.822199999999973e-05, 6.826399999999844e-05, 6.79030000000011e-05, 6.811099999999917e-05, 6.79030000000011e-05, 6.826399999999844e-05, 6.766700000000042e-05, 6.77640000000014e-05, 6.762499999999824e-05, 6.831900000000071e-05, 6.766600000000095e-05, 6.808300000000003e-05, 6.763900000000128e-05, 6.805499999999742e-05, 6.766700000000042e-05, 6.816699999999745e-05, 6.748599999999855e-05, 6.812500000000221e-05, 6.813899999999831e-05, 6.834699999999985e-05, 6.812499999999874e-05, 6.737499999999799e-05, 6.786200000000187e-05, 6.802800000000123e-05, 6.790200000000163e-05, 6.744399999999984e-05, 6.770799999999966e-05, 6.797199999999948e-05, 6.815300000000135e-05, 6.762500000000171e-05, 6.756899999999996e-05, 6.815299999999788e-05, 6.811099999999917e-05, 6.801400000000166e-05]</msg>
<status status="PASS" starttime="20201030 15:54:23.184" endtime="20201030 15:54:23.218"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.179" endtime="20201030 15:54:23.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.223" endtime="20201030 15:54:23.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.221" endtime="20201030 15:54:23.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.220" endtime="20201030 15:54:23.243"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.826" endtime="20201030 15:54:23.244"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:22.826" endtime="20201030 15:54:23.244"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.253" endtime="20201030 15:54:23.272"></status>
</kw>
<msg timestamp="20201030 15:54:23.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.252" endtime="20201030 15:54:23.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.275" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.273" endtime="20201030 15:54:23.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.276" endtime="20201030 15:54:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.249" endtime="20201030 15:54:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.247" endtime="20201030 15:54:23.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.285" endtime="20201030 15:54:23.572"></status>
</kw>
<msg timestamp="20201030 15:54:23.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.284" endtime="20201030 15:54:23.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021998458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022067361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:23.576" endtime="20201030 15:54:23.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.585" endtime="20201030 15:54:23.586"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.281" endtime="20201030 15:54:23.587"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.279" endtime="20201030 15:54:23.588"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.592" level="INFO">${RESULT} = [{'diff': 6.89030000000021e-05}, {'diff': 6.870800000000066e-05}, {'diff': 6.84169999999977e-05}, {'diff': 6.89169999999982e-05}, {'diff': 6.843100000000074e-05}, {'diff': 6.901400000000266e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 15:54:23.588" endtime="20201030 15:54:23.592"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:23.596" level="INFO">${ACCURACY} = {'diff': [6.89030000000021e-05, 6.870800000000066e-05, 6.84169999999977e-05, 6.89169999999982e-05, 6.843100000000074e-05, 6.901400000000266e-05, 6.918100000000149e-05, 6.862499999999924e-05, 6.9027999...</msg>
<status status="PASS" starttime="20201030 15:54:23.593" endtime="20201030 15:54:23.596"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.601" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 15:54:23.599" endtime="20201030 15:54:23.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.603" level="INFO">VALUE: [6.89030000000021e-05, 6.870800000000066e-05, 6.84169999999977e-05, 6.89169999999982e-05, 6.843100000000074e-05, 6.901400000000266e-05, 6.918100000000149e-05, 6.862499999999924e-05, 6.902799999999876e-05, 6.897199999999701e-05, 6.886099999999992e-05, 6.901399999999919e-05, 6.886099999999992e-05, 6.849999999999912e-05, 6.92360000000003e-05, 6.919399999999812e-05, 6.879200000000155e-05, 6.844500000000031e-05, 6.877799999999851e-05, 6.884700000000035e-05, 6.901399999999919e-05, 6.869400000000109e-05, 6.861099999999967e-05, 6.874999999999937e-05, 6.90970000000006e-05, 6.934700000000085e-05, 6.904100000000232e-05, 6.916599999999898e-05, 6.843000000000127e-05, 6.924999999999987e-05, 6.844400000000084e-05, 6.880600000000112e-05, 6.904199999999833e-05, 6.844500000000031e-05, 6.836100000000289e-05, 6.934700000000085e-05, 6.906899999999799e-05, 6.843099999999727e-05, 6.843099999999727e-05, 6.90970000000006e-05, 6.890199999999916e-05, 6.872200000000023e-05, 6.905500000000189e-05, 6.917999999999855e-05, 6.855500000000139e-05, 6.919399999999812e-05, 6.927800000000248e-05, 6.848600000000302e-05, 6.872200000000023e-05, 6.902799999999876e-05]</msg>
<status status="PASS" starttime="20201030 15:54:23.602" endtime="20201030 15:54:23.605"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.597" endtime="20201030 15:54:23.605"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.609" endtime="20201030 15:54:23.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.608" endtime="20201030 15:54:23.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.606" endtime="20201030 15:54:23.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.245" endtime="20201030 15:54:23.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.244" endtime="20201030 15:54:23.630"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.639" endtime="20201030 15:54:23.657"></status>
</kw>
<msg timestamp="20201030 15:54:23.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.638" endtime="20201030 15:54:23.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:23.658" endtime="20201030 15:54:23.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.661" endtime="20201030 15:54:23.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.635" endtime="20201030 15:54:23.663"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.633" endtime="20201030 15:54:23.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.670" endtime="20201030 15:54:23.957"></status>
</kw>
<msg timestamp="20201030 15:54:23.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02082975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:23.669" endtime="20201030 15:54:23.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02082975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020899944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:23.961" endtime="20201030 15:54:23.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:23.970" endtime="20201030 15:54:23.971"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.666" endtime="20201030 15:54:23.972"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.664" endtime="20201030 15:54:23.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:23.977" level="INFO">${RESULT} = [{'diff': 7.019399999999912e-05}, {'diff': 6.983299999999831e-05}, {'diff': 6.934700000000085e-05}, {'diff': 6.997199999999801e-05}, {'diff': 6.975000000000037e-05}, {'diff': 6.944399999999837e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:23.973" endtime="20201030 15:54:23.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:23.982" level="INFO">${ACCURACY} = {'diff': [7.019399999999912e-05, 6.983299999999831e-05, 6.934700000000085e-05, 6.997199999999801e-05, 6.975000000000037e-05, 6.944399999999837e-05, 6.961100000000067e-05, 6.954199999999883e-05, 7.0193...</msg>
<status status="PASS" starttime="20201030 15:54:23.978" endtime="20201030 15:54:23.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.986" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 15:54:23.985" endtime="20201030 15:54:23.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:23.989" level="INFO">VALUE: [7.019399999999912e-05, 6.983299999999831e-05, 6.934700000000085e-05, 6.997199999999801e-05, 6.975000000000037e-05, 6.944399999999837e-05, 6.961100000000067e-05, 6.954199999999883e-05, 7.019399999999912e-05, 7.016700000000292e-05, 7.006999999999847e-05, 6.990299999999963e-05, 7.011100000000117e-05, 7.002799999999976e-05, 7.012500000000074e-05, 7.033300000000228e-05, 6.991599999999973e-05, 7.036100000000142e-05, 6.994399999999887e-05, 6.97360000000008e-05, 6.979199999999908e-05, 6.990299999999963e-05, 6.944400000000184e-05, 6.991700000000267e-05, 6.980599999999865e-05, 6.970900000000113e-05, 6.975000000000037e-05, 6.979199999999908e-05, 6.970899999999766e-05, 6.969399999999862e-05, 6.94299999999988e-05, 7.012500000000074e-05, 6.983300000000178e-05, 7.006900000000246e-05, 6.988900000000006e-05, 6.97499999999969e-05, 6.945800000000141e-05, 6.979199999999908e-05, 6.994499999999834e-05, 6.987500000000049e-05, 6.966700000000242e-05, 7.017999999999955e-05, 7.026400000000044e-05, 6.99030000000031e-05, 7.008300000000203e-05, 7.029199999999958e-05, 7.012500000000074e-05, 6.998600000000105e-05, 6.972200000000123e-05, 7.02360000000013e-05]</msg>
<status status="PASS" starttime="20201030 15:54:23.988" endtime="20201030 15:54:23.990"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.983" endtime="20201030 15:54:23.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:23.994" endtime="20201030 15:54:24.014"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.993" endtime="20201030 15:54:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.992" endtime="20201030 15:54:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.631" endtime="20201030 15:54:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:23.631" endtime="20201030 15:54:24.015"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.024" endtime="20201030 15:54:24.042"></status>
</kw>
<msg timestamp="20201030 15:54:24.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.023" endtime="20201030 15:54:24.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.044" endtime="20201030 15:54:24.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.047" endtime="20201030 15:54:24.048"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.020" endtime="20201030 15:54:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.018" endtime="20201030 15:54:24.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.056" endtime="20201030 15:54:24.344"></status>
</kw>
<msg timestamp="20201030 15:54:24.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.054" endtime="20201030 15:54:24.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020646528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020717056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.348" endtime="20201030 15:54:24.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.356" endtime="20201030 15:54:24.358"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.052" endtime="20201030 15:54:24.359"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.050" endtime="20201030 15:54:24.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.363" level="INFO">${RESULT} = [{'diff': 7.052800000000026e-05}, {'diff': 7.066700000000342e-05}, {'diff': 7.054199999999983e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.112499999999827e-05}, {'diff': 7.126400000000144e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:24.360" endtime="20201030 15:54:24.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:24.368" level="INFO">${ACCURACY} = {'diff': [7.052800000000026e-05, 7.066700000000342e-05, 7.054199999999983e-05, 7.063900000000081e-05, 7.112499999999827e-05, 7.126400000000144e-05, 7.073599999999833e-05, 7.048599999999808e-05, 7.1042...</msg>
<status status="PASS" starttime="20201030 15:54:24.364" endtime="20201030 15:54:24.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.372" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 15:54:24.371" endtime="20201030 15:54:24.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.375" level="INFO">VALUE: [7.052800000000026e-05, 7.066700000000342e-05, 7.054199999999983e-05, 7.063900000000081e-05, 7.112499999999827e-05, 7.126400000000144e-05, 7.073599999999833e-05, 7.048599999999808e-05, 7.104200000000033e-05, 7.099999999999815e-05, 7.048599999999808e-05, 7.138799999999862e-05, 7.070900000000213e-05, 7.033400000000176e-05, 7.062499999999777e-05, 7.086099999999845e-05, 7.056999999999897e-05, 7.10840000000025e-05, 7.07499999999979e-05, 7.104100000000085e-05, 7.113900000000131e-05, 7.109699999999913e-05, 7.061100000000167e-05, 7.052700000000078e-05, 7.098600000000205e-05, 7.065300000000038e-05, 7.062500000000124e-05, 7.065300000000038e-05, 7.093099999999977e-05, 7.062499999999777e-05, 7.052800000000026e-05, 7.112500000000174e-05, 7.090200000000116e-05, 7.097199999999901e-05, 7.105500000000042e-05, 7.133299999999981e-05, 7.12499999999984e-05, 7.093099999999977e-05, 7.055499999999992e-05, 7.125000000000187e-05, 7.073599999999833e-05, 7.063900000000081e-05, 7.123599999999883e-05, 7.075000000000137e-05, 7.07910000000006e-05, 7.065199999999744e-05, 7.075000000000137e-05, 7.070799999999919e-05, 7.097199999999901e-05, 7.080500000000017e-05]</msg>
<status status="PASS" starttime="20201030 15:54:24.373" endtime="20201030 15:54:24.376"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.369" endtime="20201030 15:54:24.376"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.380" endtime="20201030 15:54:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.378" endtime="20201030 15:54:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.377" endtime="20201030 15:54:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.016" endtime="20201030 15:54:24.401"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.016" endtime="20201030 15:54:24.401"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.410" endtime="20201030 15:54:24.429"></status>
</kw>
<msg timestamp="20201030 15:54:24.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.408" endtime="20201030 15:54:24.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.431" endtime="20201030 15:54:24.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.434" endtime="20201030 15:54:24.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.406" endtime="20201030 15:54:24.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.403" endtime="20201030 15:54:24.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.443" endtime="20201030 15:54:24.728"></status>
</kw>
<msg timestamp="20201030 15:54:24.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.442" endtime="20201030 15:54:24.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021185569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021257653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.733" endtime="20201030 15:54:24.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.741" endtime="20201030 15:54:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.439" endtime="20201030 15:54:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.437" endtime="20201030 15:54:24.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:24.748" level="INFO">${RESULT} = [{'diff': 7.208400000000004e-05}, {'diff': 7.17360000000028e-05}, {'diff': 7.202799999999829e-05}, {'diff': 7.193100000000077e-05}, {'diff': 7.229099999999863e-05}, {'diff': 7.188799999999912e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:24.745" endtime="20201030 15:54:24.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:24.752" level="INFO">${ACCURACY} = {'diff': [7.208400000000004e-05, 7.17360000000028e-05, 7.202799999999829e-05, 7.193100000000077e-05, 7.229099999999863e-05, 7.188799999999912e-05, 7.137500000000199e-05, 7.226400000000244e-05, 7.19579...</msg>
<status status="PASS" starttime="20201030 15:54:24.749" endtime="20201030 15:54:24.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.757" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 15:54:24.756" endtime="20201030 15:54:24.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.761" level="INFO">VALUE: [7.208400000000004e-05, 7.17360000000028e-05, 7.202799999999829e-05, 7.193100000000077e-05, 7.229099999999863e-05, 7.188799999999912e-05, 7.137500000000199e-05, 7.226400000000244e-05, 7.195799999999697e-05, 7.145799999999994e-05, 7.162499999999877e-05, 7.159699999999963e-05, 7.206899999999752e-05, 7.161199999999868e-05, 7.173599999999933e-05, 7.166700000000095e-05, 7.140300000000113e-05, 7.168100000000052e-05, 7.227800000000201e-05, 7.155500000000092e-05, 7.149999999999865e-05, 7.220800000000069e-05, 7.197200000000001e-05, 7.177799999999804e-05, 7.227799999999854e-05, 7.2069000000001e-05, 7.159799999999911e-05, 7.180599999999718e-05, 7.202800000000176e-05, 7.222299999999973e-05, 7.158300000000006e-05, 7.138800000000209e-05, 7.220800000000069e-05, 7.234700000000038e-05, 7.212499999999927e-05, 7.207000000000047e-05, 7.208300000000056e-05, 7.165299999999791e-05, 7.137499999999852e-05, 7.207000000000047e-05, 7.162499999999877e-05, 7.158300000000006e-05, 7.226400000000244e-05, 7.187500000000249e-05, 7.150000000000212e-05, 7.201399999999872e-05, 7.143100000000027e-05, 7.208400000000004e-05, 7.168000000000105e-05, 7.215200000000241e-05]</msg>
<status status="PASS" starttime="20201030 15:54:24.758" endtime="20201030 15:54:24.761"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.753" endtime="20201030 15:54:24.762"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:24.766" endtime="20201030 15:54:24.785"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.764" endtime="20201030 15:54:24.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.763" endtime="20201030 15:54:24.786"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.402" endtime="20201030 15:54:24.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.401" endtime="20201030 15:54:24.787"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.796" endtime="20201030 15:54:24.814"></status>
</kw>
<msg timestamp="20201030 15:54:24.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.794" endtime="20201030 15:54:24.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:24.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:24.816" endtime="20201030 15:54:24.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.818" endtime="20201030 15:54:24.820"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.792" endtime="20201030 15:54:24.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.789" endtime="20201030 15:54:24.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:24.828" endtime="20201030 15:54:25.115"></status>
</kw>
<msg timestamp="20201030 15:54:25.118" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:24.826" endtime="20201030 15:54:25.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020340403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020413514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.119" endtime="20201030 15:54:25.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.127" endtime="20201030 15:54:25.129"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.824" endtime="20201030 15:54:25.130"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.822" endtime="20201030 15:54:25.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.134" level="INFO">${RESULT} = [{'diff': 7.31110000000007e-05}, {'diff': 7.316599999999951e-05}, {'diff': 7.331899999999877e-05}, {'diff': 7.295900000000091e-05}, {'diff': 7.255499999999845e-05}, {'diff': 7.286100000000045e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:25.131" endtime="20201030 15:54:25.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:25.140" level="INFO">${ACCURACY} = {'diff': [7.31110000000007e-05, 7.316599999999951e-05, 7.331899999999877e-05, 7.295900000000091e-05, 7.255499999999845e-05, 7.286100000000045e-05, 7.297199999999754e-05, 7.31110000000007e-05, 7.309699...</msg>
<status status="PASS" starttime="20201030 15:54:25.135" endtime="20201030 15:54:25.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.144" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 15:54:25.143" endtime="20201030 15:54:25.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.147" level="INFO">VALUE: [7.31110000000007e-05, 7.316599999999951e-05, 7.331899999999877e-05, 7.295900000000091e-05, 7.255499999999845e-05, 7.286100000000045e-05, 7.297199999999754e-05, 7.31110000000007e-05, 7.309699999999766e-05, 7.277800000000251e-05, 7.280600000000165e-05, 7.269500000000109e-05, 7.272300000000023e-05, 7.309800000000061e-05, 7.252699999999931e-05, 7.298600000000058e-05, 7.317999999999908e-05, 7.272200000000076e-05, 7.24300000000018e-05, 7.333300000000181e-05, 7.288899999999959e-05, 7.252799999999879e-05, 7.305500000000242e-05, 7.25699999999975e-05, 7.266700000000195e-05, 7.334800000000086e-05, 7.290299999999916e-05, 7.290299999999916e-05, 7.32500000000004e-05, 7.334699999999791e-05, 7.254099999999888e-05, 7.315299999999941e-05, 7.244400000000137e-05, 7.241699999999823e-05, 7.273600000000033e-05, 7.236099999999995e-05, 7.302799999999929e-05, 7.270800000000119e-05, 7.294499999999787e-05, 7.279199999999861e-05, 7.261199999999968e-05, 7.284800000000036e-05, 7.304199999999886e-05, 7.329099999999963e-05, 7.238899999999909e-05, 7.237499999999952e-05, 7.266599999999901e-05, 7.238899999999909e-05, 7.33049999999992e-05, 7.295900000000091e-05]</msg>
<status status="PASS" starttime="20201030 15:54:25.145" endtime="20201030 15:54:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.141" endtime="20201030 15:54:25.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.152" endtime="20201030 15:54:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.151" endtime="20201030 15:54:25.172"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.149" endtime="20201030 15:54:25.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.788" endtime="20201030 15:54:25.173"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:24.787" endtime="20201030 15:54:25.173"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.182" endtime="20201030 15:54:25.200"></status>
</kw>
<msg timestamp="20201030 15:54:25.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.181" endtime="20201030 15:54:25.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.201" endtime="20201030 15:54:25.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.204" endtime="20201030 15:54:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.178" endtime="20201030 15:54:25.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.176" endtime="20201030 15:54:25.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.214" endtime="20201030 15:54:25.503"></status>
</kw>
<msg timestamp="20201030 15:54:25.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02063325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:54:25.212" endtime="20201030 15:54:25.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020559, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02063325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 15:54:25.508" endtime="20201030 15:54:25.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.516" endtime="20201030 15:54:25.518"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.209" endtime="20201030 15:54:25.519"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.207" endtime="20201030 15:54:25.519"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.523" level="INFO">${RESULT} = [{'diff': 7.424999999999793e-05}, {'diff': 7.431999999999925e-05}, {'diff': 7.422200000000226e-05}, {'diff': 7.379199999999961e-05}, {'diff': 7.4069999999999e-05}, {'diff': 7.427700000000106e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:25.520" endtime="20201030 15:54:25.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:25.528" level="INFO">${ACCURACY} = {'diff': [7.424999999999793e-05, 7.431999999999925e-05, 7.422200000000226e-05, 7.379199999999961e-05, 7.4069999999999e-05, 7.427700000000106e-05, 7.419499999999912e-05, 7.384699999999841e-05, 7.348600...</msg>
<status status="PASS" starttime="20201030 15:54:25.524" endtime="20201030 15:54:25.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.532" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 15:54:25.531" endtime="20201030 15:54:25.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.535" level="INFO">VALUE: [7.424999999999793e-05, 7.431999999999925e-05, 7.422200000000226e-05, 7.379199999999961e-05, 7.4069999999999e-05, 7.427700000000106e-05, 7.419499999999912e-05, 7.384699999999841e-05, 7.348600000000108e-05, 7.361099999999773e-05, 7.356899999999902e-05, 7.344400000000237e-05, 7.391699999999973e-05, 7.366700000000295e-05, 7.40829999999991e-05, 7.338900000000009e-05, 7.365299999999991e-05, 7.358399999999807e-05, 7.3763000000001e-05, 7.41110000000017e-05, 7.395799999999897e-05, 7.418000000000008e-05, 7.434700000000238e-05, 7.348600000000108e-05, 7.433399999999882e-05, 7.356899999999902e-05, 7.418099999999955e-05, 7.365299999999991e-05, 7.42769999999976e-05, 7.42500000000014e-05, 7.350000000000065e-05, 7.380599999999918e-05, 7.334800000000086e-05, 7.373599999999786e-05, 7.419499999999912e-05, 7.405499999999995e-05, 7.390200000000069e-05, 7.377700000000056e-05, 7.35829999999986e-05, 7.348600000000108e-05, 7.43050000000002e-05, 7.40829999999991e-05, 7.370799999999872e-05, 7.424999999999793e-05, 7.370800000000219e-05, 7.344499999999837e-05, 7.400000000000115e-05, 7.376400000000047e-05, 7.348600000000108e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201030 15:54:25.533" endtime="20201030 15:54:25.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.528" endtime="20201030 15:54:25.536"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.540" endtime="20201030 15:54:25.559"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.538" endtime="20201030 15:54:25.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.537" endtime="20201030 15:54:25.560"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.174" endtime="20201030 15:54:25.561"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.173" endtime="20201030 15:54:25.561"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.570" endtime="20201030 15:54:25.589"></status>
</kw>
<msg timestamp="20201030 15:54:25.590" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.568" endtime="20201030 15:54:25.590"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.591" endtime="20201030 15:54:25.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.593" endtime="20201030 15:54:25.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.565" endtime="20201030 15:54:25.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.563" endtime="20201030 15:54:25.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.603" endtime="20201030 15:54:25.888"></status>
</kw>
<msg timestamp="20201030 15:54:25.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021253944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.601" endtime="20201030 15:54:25.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021253944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.892" endtime="20201030 15:54:25.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.901" endtime="20201030 15:54:25.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.599" endtime="20201030 15:54:25.903"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.597" endtime="20201030 15:54:25.904"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:25.908" level="INFO">${RESULT} = [{'diff': 7.526299999999903e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.490199999999822e-05}, {'diff': 7.46249999999983e-05}, {'diff': 7.455500000000045e-05}, {'diff': 7.463899999999787e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:25.905" endtime="20201030 15:54:25.908"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:25.912" level="INFO">${ACCURACY} = {'diff': [7.526299999999903e-05, 7.472199999999929e-05, 7.490199999999822e-05, 7.46249999999983e-05, 7.455500000000045e-05, 7.463899999999787e-05, 7.527800000000154e-05, 7.463900000000134e-05, 7.46810...</msg>
<status status="PASS" starttime="20201030 15:54:25.909" endtime="20201030 15:54:25.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.917" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 15:54:25.916" endtime="20201030 15:54:25.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.920" level="INFO">VALUE: [7.526299999999903e-05, 7.472199999999929e-05, 7.490199999999822e-05, 7.46249999999983e-05, 7.455500000000045e-05, 7.463899999999787e-05, 7.527800000000154e-05, 7.463900000000134e-05, 7.468100000000005e-05, 7.49310000000003e-05, 7.476400000000147e-05, 7.46110000000022e-05, 7.509799999999914e-05, 7.497299999999901e-05, 7.454200000000036e-05, 7.491600000000126e-05, 7.483299999999984e-05, 7.44439999999999e-05, 7.436099999999848e-05, 7.481900000000027e-05, 7.533300000000034e-05, 7.53189999999973e-05, 7.491700000000073e-05, 7.472199999999929e-05, 7.451399999999775e-05, 7.499999999999868e-05, 7.508399999999957e-05, 7.487499999999855e-05, 7.493000000000083e-05, 7.436099999999848e-05, 7.473599999999886e-05, 7.533300000000034e-05, 7.483299999999984e-05, 7.518100000000055e-05, 7.500000000000215e-05, 7.509699999999966e-05, 7.498600000000258e-05, 7.4763999999998e-05, 7.473599999999886e-05, 7.533399999999982e-05, 7.445799999999947e-05, 7.474999999999843e-05, 7.481900000000027e-05, 7.436100000000195e-05, 7.490200000000169e-05, 7.483299999999984e-05, 7.50830000000001e-05, 7.502800000000129e-05, 7.527799999999807e-05, 7.501400000000172e-05]</msg>
<status status="PASS" starttime="20201030 15:54:25.918" endtime="20201030 15:54:25.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.913" endtime="20201030 15:54:25.922"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:25.926" endtime="20201030 15:54:25.945"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.924" endtime="20201030 15:54:25.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.923" endtime="20201030 15:54:25.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.562" endtime="20201030 15:54:25.946"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.561" endtime="20201030 15:54:25.947"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.956" endtime="20201030 15:54:25.974"></status>
</kw>
<msg timestamp="20201030 15:54:25.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.954" endtime="20201030 15:54:25.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:25.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:25.976" endtime="20201030 15:54:25.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.980" endtime="20201030 15:54:25.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.951" endtime="20201030 15:54:25.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.949" endtime="20201030 15:54:25.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:25.991" endtime="20201030 15:54:26.279"></status>
</kw>
<msg timestamp="20201030 15:54:26.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:25.989" endtime="20201030 15:54:26.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.283" endtime="20201030 15:54:26.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.291" endtime="20201030 15:54:26.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.986" endtime="20201030 15:54:26.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.984" endtime="20201030 15:54:26.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.298" level="INFO">${RESULT} = [{'diff': 7.562500000000277e-05}, {'diff': 7.55830000000006e-05}, {'diff': 7.537499999999905e-05}, {'diff': 7.632000000000125e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.566700000000148e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:26.295" endtime="20201030 15:54:26.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:26.304" level="INFO">${ACCURACY} = {'diff': [7.562500000000277e-05, 7.55830000000006e-05, 7.537499999999905e-05, 7.632000000000125e-05, 7.611100000000023e-05, 7.566700000000148e-05, 7.590300000000216e-05, 7.611100000000023e-05, 7.60969...</msg>
<status status="PASS" starttime="20201030 15:54:26.299" endtime="20201030 15:54:26.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.308" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 15:54:26.307" endtime="20201030 15:54:26.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.311" level="INFO">VALUE: [7.562500000000277e-05, 7.55830000000006e-05, 7.537499999999905e-05, 7.632000000000125e-05, 7.611100000000023e-05, 7.566700000000148e-05, 7.590300000000216e-05, 7.611100000000023e-05, 7.60969999999972e-05, 7.622199999999732e-05, 7.559700000000016e-05, 7.581900000000127e-05, 7.537499999999905e-05, 7.616699999999851e-05, 7.579200000000161e-05, 7.537499999999905e-05, 7.595900000000044e-05, 7.602799999999882e-05, 7.54310000000008e-05, 7.598600000000011e-05, 7.572299999999976e-05, 7.620899999999722e-05, 7.569399999999768e-05, 7.563900000000234e-05, 7.54440000000009e-05, 7.56249999999993e-05, 7.606899999999805e-05, 7.611100000000023e-05, 7.623600000000036e-05, 7.593099999999783e-05, 7.580599999999771e-05, 7.616599999999904e-05, 7.565299999999844e-05, 7.602800000000229e-05, 7.632000000000125e-05, 7.565299999999844e-05, 7.61249999999998e-05, 7.57769999999991e-05, 7.618000000000208e-05, 7.62639999999995e-05, 7.604199999999839e-05, 7.58890000000026e-05, 7.54440000000009e-05, 7.544500000000037e-05, 7.583400000000032e-05, 7.634800000000039e-05, 7.586099999999998e-05, 7.590300000000216e-05, 7.590300000000216e-05, 7.568000000000158e-05]</msg>
<status status="PASS" starttime="20201030 15:54:26.309" endtime="20201030 15:54:26.312"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.304" endtime="20201030 15:54:26.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.316" endtime="20201030 15:54:26.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.314" endtime="20201030 15:54:26.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.313" endtime="20201030 15:54:26.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.948" endtime="20201030 15:54:26.337"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:25.947" endtime="20201030 15:54:26.337"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.346" endtime="20201030 15:54:26.364"></status>
</kw>
<msg timestamp="20201030 15:54:26.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.344" endtime="20201030 15:54:26.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.366" endtime="20201030 15:54:26.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.368" endtime="20201030 15:54:26.370"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.342" endtime="20201030 15:54:26.371"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.340" endtime="20201030 15:54:26.371"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.378" endtime="20201030 15:54:26.666"></status>
</kw>
<msg timestamp="20201030 15:54:26.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020315806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.376" endtime="20201030 15:54:26.669"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020239028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020315806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.670" endtime="20201030 15:54:26.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.679" endtime="20201030 15:54:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.374" endtime="20201030 15:54:26.681"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.372" endtime="20201030 15:54:26.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:26.686" level="INFO">${RESULT} = [{'diff': 7.677799999999957e-05}, {'diff': 7.723599999999789e-05}, {'diff': 7.663900000000334e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.691699999999926e-05}, {'diff': 7.715299999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:26.682" endtime="20201030 15:54:26.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:26.690" level="INFO">${ACCURACY} = {'diff': [7.677799999999957e-05, 7.723599999999789e-05, 7.663900000000334e-05, 7.713900000000037e-05, 7.691699999999926e-05, 7.715299999999994e-05, 7.665299999999944e-05, 7.669400000000215e-05, 7.7180...</msg>
<status status="PASS" starttime="20201030 15:54:26.687" endtime="20201030 15:54:26.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.695" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 15:54:26.694" endtime="20201030 15:54:26.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.697" level="INFO">VALUE: [7.677799999999957e-05, 7.723599999999789e-05, 7.663900000000334e-05, 7.713900000000037e-05, 7.691699999999926e-05, 7.715299999999994e-05, 7.665299999999944e-05, 7.669400000000215e-05, 7.718099999999908e-05, 7.681999999999828e-05, 7.656999999999803e-05, 7.718099999999908e-05, 7.667999999999911e-05, 7.638899999999962e-05, 7.655499999999898e-05, 7.67770000000001e-05, 7.679099999999967e-05, 7.698600000000111e-05, 7.702800000000329e-05, 7.687500000000055e-05, 7.733299999999887e-05, 7.658299999999812e-05, 7.693099999999883e-05, 7.684700000000141e-05, 7.702800000000329e-05, 7.672300000000076e-05, 7.645900000000094e-05, 7.68189999999988e-05, 7.686100000000098e-05, 7.700000000000068e-05, 7.708299999999862e-05, 7.716600000000004e-05, 7.725000000000093e-05, 7.733300000000234e-05, 7.686100000000098e-05, 7.695899999999797e-05, 7.684700000000141e-05, 7.687500000000055e-05, 7.705500000000295e-05, 7.673600000000086e-05, 7.637500000000005e-05, 7.701400000000025e-05, 7.717999999999961e-05, 7.651399999999975e-05, 7.705499999999949e-05, 7.738900000000062e-05, 7.679199999999914e-05, 7.695800000000197e-05, 7.70830000000021e-05, 7.681999999999828e-05]</msg>
<status status="PASS" starttime="20201030 15:54:26.696" endtime="20201030 15:54:26.698"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.691" endtime="20201030 15:54:26.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:26.703" endtime="20201030 15:54:26.722"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.701" endtime="20201030 15:54:26.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.700" endtime="20201030 15:54:26.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.338" endtime="20201030 15:54:26.723"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.337" endtime="20201030 15:54:26.724"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.733" endtime="20201030 15:54:26.752"></status>
</kw>
<msg timestamp="20201030 15:54:26.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.731" endtime="20201030 15:54:26.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:26.755" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:26.754" endtime="20201030 15:54:26.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.756" endtime="20201030 15:54:26.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.728" endtime="20201030 15:54:26.758"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.726" endtime="20201030 15:54:26.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:26.765" endtime="20201030 15:54:27.051"></status>
</kw>
<msg timestamp="20201030 15:54:27.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:26.764" endtime="20201030 15:54:27.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021165903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021243444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.056" endtime="20201030 15:54:27.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.064" endtime="20201030 15:54:27.066"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.761" endtime="20201030 15:54:27.067"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.759" endtime="20201030 15:54:27.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.071" level="INFO">${RESULT} = [{'diff': 7.754100000000042e-05}, {'diff': 7.783299999999937e-05}, {'diff': 7.780500000000024e-05}, {'diff': 7.744399999999943e-05}, {'diff': 7.731900000000277e-05}, {'diff': 7.817999999999714e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:27.068" endtime="20201030 15:54:27.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:27.075" level="INFO">${ACCURACY} = {'diff': [7.754100000000042e-05, 7.783299999999937e-05, 7.780500000000024e-05, 7.744399999999943e-05, 7.731900000000277e-05, 7.817999999999714e-05, 7.744399999999943e-05, 7.750000000000118e-05, 7.7792...</msg>
<status status="PASS" starttime="20201030 15:54:27.072" endtime="20201030 15:54:27.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.080" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 15:54:27.079" endtime="20201030 15:54:27.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.083" level="INFO">VALUE: [7.754100000000042e-05, 7.783299999999937e-05, 7.780500000000024e-05, 7.744399999999943e-05, 7.731900000000277e-05, 7.817999999999714e-05, 7.744399999999943e-05, 7.750000000000118e-05, 7.779200000000014e-05, 7.786099999999851e-05, 7.74449999999989e-05, 7.829199999999717e-05, 7.769399999999968e-05, 7.816699999999704e-05, 7.82770000000016e-05, 7.7764000000001e-05, 7.773599999999839e-05, 7.7457999999999e-05, 7.779200000000014e-05, 7.758299999999912e-05, 7.744399999999943e-05, 7.781999999999928e-05, 7.79449999999994e-05, 7.784699999999894e-05, 7.765300000000044e-05, 7.79449999999994e-05, 7.787500000000155e-05, 7.780500000000024e-05, 7.786099999999851e-05, 7.808299999999962e-05, 7.822199999999932e-05, 7.816700000000051e-05, 7.820799999999975e-05, 7.799999999999821e-05, 7.777800000000057e-05, 7.79579999999995e-05, 7.765300000000044e-05, 7.816700000000051e-05, 7.750000000000118e-05, 7.762499999999783e-05, 7.756899999999955e-05, 7.790200000000122e-05, 7.813900000000137e-05, 7.737500000000105e-05, 7.765300000000044e-05, 7.813900000000137e-05, 7.765300000000044e-05, 7.737500000000105e-05, 7.745899999999847e-05, 7.750000000000118e-05]</msg>
<status status="PASS" starttime="20201030 15:54:27.081" endtime="20201030 15:54:27.084"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.076" endtime="20201030 15:54:27.085"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.089" endtime="20201030 15:54:27.108"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.087" endtime="20201030 15:54:27.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.086" endtime="20201030 15:54:27.109"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.725" endtime="20201030 15:54:27.110"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:26.724" endtime="20201030 15:54:27.110"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.119" endtime="20201030 15:54:27.137"></status>
</kw>
<msg timestamp="20201030 15:54:27.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.117" endtime="20201030 15:54:27.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.138" endtime="20201030 15:54:27.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.141" endtime="20201030 15:54:27.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.114" endtime="20201030 15:54:27.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.112" endtime="20201030 15:54:27.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.150" endtime="20201030 15:54:27.437"></status>
</kw>
<msg timestamp="20201030 15:54:27.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020249569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02032875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:27.149" endtime="20201030 15:54:27.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020249569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02032875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 15:54:27.442" endtime="20201030 15:54:27.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.450" endtime="20201030 15:54:27.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.146" endtime="20201030 15:54:27.452"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.144" endtime="20201030 15:54:27.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.457" level="INFO">${RESULT} = [{'diff': 7.918100000000108e-05}, {'diff': 7.897200000000007e-05}, {'diff': 7.925000000000293e-05}, {'diff': 7.907000000000053e-05}, {'diff': 7.916699999999804e-05}, {'diff': 7.90840000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:27.453" endtime="20201030 15:54:27.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:27.462" level="INFO">${ACCURACY} = {'diff': [7.918100000000108e-05, 7.897200000000007e-05, 7.925000000000293e-05, 7.907000000000053e-05, 7.916699999999804e-05, 7.90840000000001e-05, 7.857000000000003e-05, 7.907000000000053e-05, 7.92910...</msg>
<status status="PASS" starttime="20201030 15:54:27.458" endtime="20201030 15:54:27.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.467" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 15:54:27.466" endtime="20201030 15:54:27.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.469" level="INFO">VALUE: [7.918100000000108e-05, 7.897200000000007e-05, 7.925000000000293e-05, 7.907000000000053e-05, 7.916699999999804e-05, 7.90840000000001e-05, 7.857000000000003e-05, 7.907000000000053e-05, 7.929100000000217e-05, 7.883300000000037e-05, 7.92640000000025e-05, 7.879100000000167e-05, 7.833299999999987e-05, 7.897200000000007e-05, 7.880600000000071e-05, 7.905600000000096e-05, 7.866700000000101e-05, 7.911099999999976e-05, 7.838900000000162e-05, 7.930600000000121e-05, 7.873599999999939e-05, 7.865200000000197e-05, 7.917999999999814e-05, 7.891600000000179e-05, 7.886099999999951e-05, 7.854100000000142e-05, 7.899999999999921e-05, 7.868099999999711e-05, 7.872199999999982e-05, 7.927699999999913e-05, 7.916700000000151e-05, 7.89169999999978e-05, 7.89169999999978e-05, 7.911199999999924e-05, 7.85129999999988e-05, 7.872199999999982e-05, 7.879100000000167e-05, 7.887499999999908e-05, 7.883300000000037e-05, 7.873599999999939e-05, 7.916699999999804e-05, 7.85969999999997e-05, 7.90970000000002e-05, 7.872199999999982e-05, 7.919500000000065e-05, 7.879200000000114e-05, 7.901399999999878e-05, 7.91389999999989e-05, 7.836100000000248e-05, 7.924999999999946e-05]</msg>
<status status="PASS" starttime="20201030 15:54:27.468" endtime="20201030 15:54:27.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.463" endtime="20201030 15:54:27.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.474" endtime="20201030 15:54:27.494"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.473" endtime="20201030 15:54:27.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.472" endtime="20201030 15:54:27.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.111" endtime="20201030 15:54:27.495"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.110" endtime="20201030 15:54:27.495"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.505" endtime="20201030 15:54:27.524"></status>
</kw>
<msg timestamp="20201030 15:54:27.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.503" endtime="20201030 15:54:27.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.525" endtime="20201030 15:54:27.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.528" endtime="20201030 15:54:27.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.500" endtime="20201030 15:54:27.530"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.498" endtime="20201030 15:54:27.531"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.537" endtime="20201030 15:54:27.825"></status>
</kw>
<msg timestamp="20201030 15:54:27.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020994861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.536" endtime="20201030 15:54:27.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020994861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.829" endtime="20201030 15:54:27.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.838" endtime="20201030 15:54:27.839"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.533" endtime="20201030 15:54:27.840"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.531" endtime="20201030 15:54:27.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:27.844" level="INFO">${RESULT} = [{'diff': 7.998600000000064e-05}, {'diff': 7.973600000000039e-05}, {'diff': 8.036100000000101e-05}, {'diff': 7.974999999999996e-05}, {'diff': 7.987500000000008e-05}, {'diff': 7.972200000000082e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:27.841" endtime="20201030 15:54:27.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:27.849" level="INFO">${ACCURACY} = {'diff': [7.998600000000064e-05, 7.973600000000039e-05, 8.036100000000101e-05, 7.974999999999996e-05, 7.987500000000008e-05, 7.972200000000082e-05, 8.016700000000251e-05, 7.97779999999991e-05, 7.99579...</msg>
<status status="PASS" starttime="20201030 15:54:27.845" endtime="20201030 15:54:27.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.853" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 15:54:27.852" endtime="20201030 15:54:27.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.856" level="INFO">VALUE: [7.998600000000064e-05, 7.973600000000039e-05, 8.036100000000101e-05, 7.974999999999996e-05, 7.987500000000008e-05, 7.972200000000082e-05, 8.016700000000251e-05, 7.97779999999991e-05, 7.995799999999803e-05, 7.94450000000009e-05, 7.986199999999999e-05, 7.995799999999803e-05, 7.96519999999995e-05, 7.962499999999983e-05, 7.938899999999915e-05, 8.001400000000325e-05, 7.986100000000051e-05, 8.026400000000003e-05, 7.954199999999842e-05, 8.03329999999984e-05, 7.977800000000257e-05, 8.008399999999763e-05, 7.951399999999928e-05, 7.990199999999975e-05, 7.944400000000143e-05, 7.98190000000018e-05, 8.026400000000003e-05, 7.981899999999834e-05, 8.026400000000003e-05, 7.936100000000001e-05, 7.97779999999991e-05, 8.020800000000175e-05, 7.94719999999971e-05, 7.986100000000051e-05, 8.005499999999902e-05, 8.02230000000008e-05, 8.005499999999902e-05, 7.976399999999953e-05, 7.99580000000015e-05, 7.956900000000156e-05, 7.995799999999803e-05, 8.001399999999978e-05, 8.016700000000251e-05, 7.994400000000193e-05, 7.986100000000051e-05, 8.001399999999978e-05, 8.002799999999935e-05, 7.984800000000042e-05, 8.001400000000325e-05, 8.007000000000153e-05]</msg>
<status status="PASS" starttime="20201030 15:54:27.855" endtime="20201030 15:54:27.857"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.850" endtime="20201030 15:54:27.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:27.861" endtime="20201030 15:54:27.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.860" endtime="20201030 15:54:27.881"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.858" endtime="20201030 15:54:27.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.496" endtime="20201030 15:54:27.882"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.496" endtime="20201030 15:54:27.882"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.891" endtime="20201030 15:54:27.911"></status>
</kw>
<msg timestamp="20201030 15:54:27.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.890" endtime="20201030 15:54:27.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:27.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:27.913" endtime="20201030 15:54:27.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.915" endtime="20201030 15:54:27.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.887" endtime="20201030 15:54:27.917"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.885" endtime="20201030 15:54:27.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:27.925" endtime="20201030 15:54:28.211"></status>
</kw>
<msg timestamp="20201030 15:54:28.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021227986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:27.923" endtime="20201030 15:54:28.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021227986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021308917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.215" endtime="20201030 15:54:28.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.223" endtime="20201030 15:54:28.225"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.920" endtime="20201030 15:54:28.226"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.918" endtime="20201030 15:54:28.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.230" level="INFO">${RESULT} = [{'diff': 8.093099999999936e-05}, {'diff': 8.080599999999924e-05}, {'diff': 8.094499999999893e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.109699999999873e-05}, {'diff': 8.072199999999835e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:28.227" endtime="20201030 15:54:28.231"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:28.235" level="INFO">${ACCURACY} = {'diff': [8.093099999999936e-05, 8.080599999999924e-05, 8.094499999999893e-05, 8.112500000000133e-05, 8.109699999999873e-05, 8.072199999999835e-05, 8.056899999999909e-05, 8.080499999999977e-05, 8.0486...</msg>
<status status="PASS" starttime="20201030 15:54:28.231" endtime="20201030 15:54:28.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.239" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 15:54:28.238" endtime="20201030 15:54:28.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.243" level="INFO">VALUE: [8.093099999999936e-05, 8.080599999999924e-05, 8.094499999999893e-05, 8.112500000000133e-05, 8.109699999999873e-05, 8.072199999999835e-05, 8.056899999999909e-05, 8.080499999999977e-05, 8.048600000000114e-05, 8.122200000000232e-05, 8.068099999999911e-05, 8.038900000000015e-05, 8.076400000000053e-05, 8.087500000000108e-05, 8.10979999999982e-05, 8.077700000000063e-05, 8.073600000000139e-05, 8.073599999999792e-05, 8.119399999999971e-05, 8.047200000000157e-05, 8.073599999999792e-05, 8.070800000000225e-05, 8.051400000000028e-05, 8.07780000000001e-05, 8.063899999999694e-05, 8.083400000000185e-05, 8.129200000000017e-05, 8.080599999999924e-05, 8.097300000000154e-05, 8.130500000000027e-05, 8.042999999999939e-05, 8.123600000000189e-05, 8.098600000000164e-05, 8.12780000000006e-05, 8.086099999999805e-05, 8.055599999999899e-05, 8.054200000000289e-05, 8.063899999999694e-05, 8.122299999999832e-05, 8.056900000000256e-05, 8.062500000000083e-05, 8.066699999999954e-05, 8.066600000000007e-05, 8.100000000000121e-05, 8.106899999999959e-05, 8.06109999999978e-05, 8.066699999999954e-05, 8.045799999999853e-05, 8.061100000000126e-05, 8.04719999999981e-05]</msg>
<status status="PASS" starttime="20201030 15:54:28.241" endtime="20201030 15:54:28.248"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.236" endtime="20201030 15:54:28.249"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.253" endtime="20201030 15:54:28.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.252" endtime="20201030 15:54:28.273"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.250" endtime="20201030 15:54:28.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.883" endtime="20201030 15:54:28.274"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:27.882" endtime="20201030 15:54:28.274"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.283" endtime="20201030 15:54:28.302"></status>
</kw>
<msg timestamp="20201030 15:54:28.302" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.282" endtime="20201030 15:54:28.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.305" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.303" endtime="20201030 15:54:28.305"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.306" endtime="20201030 15:54:28.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.279" endtime="20201030 15:54:28.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.277" endtime="20201030 15:54:28.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.315" endtime="20201030 15:54:28.602"></status>
</kw>
<msg timestamp="20201030 15:54:28.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:28.314" endtime="20201030 15:54:28.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020355889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0204375, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 15:54:28.607" endtime="20201030 15:54:28.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.615" endtime="20201030 15:54:28.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.311" endtime="20201030 15:54:28.617"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.309" endtime="20201030 15:54:28.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:28.622" level="INFO">${RESULT} = [{'diff': 8.161100000000227e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.173600000000239e-05}, {'diff': 8.143099999999986e-05}, {'diff': 8.207000000000006e-05}, {'diff': 8.22780000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:28.619" endtime="20201030 15:54:28.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:28.627" level="INFO">${ACCURACY} = {'diff': [8.161100000000227e-05, 8.19170000000008e-05, 8.173600000000239e-05, 8.143099999999986e-05, 8.207000000000006e-05, 8.22780000000016e-05, 8.202800000000135e-05, 8.145799999999953e-05, 8.169400...</msg>
<status status="PASS" starttime="20201030 15:54:28.623" endtime="20201030 15:54:28.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.632" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 15:54:28.631" endtime="20201030 15:54:28.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.634" level="INFO">VALUE: [8.161100000000227e-05, 8.19170000000008e-05, 8.173600000000239e-05, 8.143099999999986e-05, 8.207000000000006e-05, 8.22780000000016e-05, 8.202800000000135e-05, 8.145799999999953e-05, 8.169400000000021e-05, 8.134699999999898e-05, 8.223599999999942e-05, 8.23049999999978e-05, 8.180600000000024e-05, 8.161100000000227e-05, 8.165300000000097e-05, 8.180600000000024e-05, 8.207000000000006e-05, 8.162500000000183e-05, 8.188800000000218e-05, 8.2152000000002e-05, 8.150000000000171e-05, 8.208300000000016e-05, 8.165300000000097e-05, 8.17780000000011e-05, 8.226399999999856e-05, 8.195800000000003e-05, 8.169499999999968e-05, 8.186099999999905e-05, 8.181999999999981e-05, 8.229099999999823e-05, 8.138900000000115e-05, 8.198599999999917e-05, 8.16109999999988e-05, 8.144399999999996e-05, 8.159699999999923e-05, 8.170799999999978e-05, 8.200000000000221e-05, 8.14719999999991e-05, 8.157000000000303e-05, 8.149999999999824e-05, 8.148599999999867e-05, 8.16109999999988e-05, 8.186099999999905e-05, 8.217999999999767e-05, 8.136099999999855e-05, 8.176400000000153e-05, 8.181900000000034e-05, 8.231900000000084e-05, 8.175000000000196e-05, 8.222199999999985e-05]</msg>
<status status="PASS" starttime="20201030 15:54:28.633" endtime="20201030 15:54:28.635"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.628" endtime="20201030 15:54:28.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:28.640" endtime="20201030 15:54:28.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.638" endtime="20201030 15:54:28.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.637" endtime="20201030 15:54:28.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.275" endtime="20201030 15:54:28.660"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.274" endtime="20201030 15:54:28.661"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.670" endtime="20201030 15:54:28.690"></status>
</kw>
<msg timestamp="20201030 15:54:28.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.668" endtime="20201030 15:54:28.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:28.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:28.691" endtime="20201030 15:54:28.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.694" endtime="20201030 15:54:28.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.665" endtime="20201030 15:54:28.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.663" endtime="20201030 15:54:28.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:28.703" endtime="20201030 15:54:28.994"></status>
</kw>
<msg timestamp="20201030 15:54:28.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.702" endtime="20201030 15:54:28.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021230556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021313236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:28.998" endtime="20201030 15:54:29.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.007" endtime="20201030 15:54:29.008"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.699" endtime="20201030 15:54:29.009"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.697" endtime="20201030 15:54:29.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.013" level="INFO">${RESULT} = [{'diff': 8.267999999999817e-05}, {'diff': 8.256900000000109e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.284700000000048e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.249999999999924e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:29.010" endtime="20201030 15:54:29.014"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:29.018" level="INFO">${ACCURACY} = {'diff': [8.267999999999817e-05, 8.256900000000109e-05, 8.33049999999988e-05, 8.284700000000048e-05, 8.238899999999869e-05, 8.249999999999924e-05, 8.326399999999956e-05, 8.312499999999987e-05, 8.2459e...</msg>
<status status="PASS" starttime="20201030 15:54:29.014" endtime="20201030 15:54:29.018"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.022" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 15:54:29.021" endtime="20201030 15:54:29.023"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.025" level="INFO">VALUE: [8.267999999999817e-05, 8.256900000000109e-05, 8.33049999999988e-05, 8.284700000000048e-05, 8.238899999999869e-05, 8.249999999999924e-05, 8.326399999999956e-05, 8.312499999999987e-05, 8.2459e-05, 8.26529999999985e-05, 8.280500000000177e-05, 8.238900000000215e-05, 8.270800000000078e-05, 8.292999999999842e-05, 8.273599999999992e-05, 8.243000000000139e-05, 8.256900000000109e-05, 8.320799999999781e-05, 8.268099999999765e-05, 8.288899999999919e-05, 8.319500000000118e-05, 8.280600000000124e-05, 8.33330000000014e-05, 8.326300000000009e-05, 8.259700000000023e-05, 8.291600000000232e-05, 8.254199999999795e-05, 8.251400000000228e-05, 8.31110000000003e-05, 8.309700000000073e-05, 8.275000000000296e-05, 8.255600000000099e-05, 8.332000000000131e-05, 8.320900000000075e-05, 8.237499999999912e-05, 8.272299999999982e-05, 8.309699999999726e-05, 8.284700000000048e-05, 8.287500000000309e-05, 8.29170000000018e-05, 8.29720000000006e-05, 8.316700000000204e-05, 8.333299999999794e-05, 8.31390000000029e-05, 8.291699999999833e-05, 8.30980000000002e-05, 8.284800000000342e-05, 8.2459e-05, 8.27369999999994e-05, 8.29170000000018e-05]</msg>
<status status="PASS" starttime="20201030 15:54:29.024" endtime="20201030 15:54:29.026"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.019" endtime="20201030 15:54:29.027"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.030" endtime="20201030 15:54:29.050"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.029" endtime="20201030 15:54:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.028" endtime="20201030 15:54:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.662" endtime="20201030 15:54:29.051"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:28.661" endtime="20201030 15:54:29.051"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.060" endtime="20201030 15:54:29.079"></status>
</kw>
<msg timestamp="20201030 15:54:29.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.059" endtime="20201030 15:54:29.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.081" endtime="20201030 15:54:29.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.083" endtime="20201030 15:54:29.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.056" endtime="20201030 15:54:29.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.054" endtime="20201030 15:54:29.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.093" endtime="20201030 15:54:29.379"></status>
</kw>
<msg timestamp="20201030 15:54:29.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.091" endtime="20201030 15:54:29.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021314681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021398639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.383" endtime="20201030 15:54:29.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.391" endtime="20201030 15:54:29.393"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.088" endtime="20201030 15:54:29.394"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.086" endtime="20201030 15:54:29.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.398" level="INFO">${RESULT} = [{'diff': 8.395800000000203e-05}, {'diff': 8.39170000000028e-05}, {'diff': 8.390299999999976e-05}, {'diff': 8.430599999999927e-05}, {'diff': 8.343100000000186e-05}, {'diff': 8.338899999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:29.395" endtime="20201030 15:54:29.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:29.402" level="INFO">${ACCURACY} = {'diff': [8.395800000000203e-05, 8.39170000000028e-05, 8.390299999999976e-05, 8.430599999999927e-05, 8.343100000000186e-05, 8.338899999999969e-05, 8.343100000000186e-05, 8.388800000000071e-05, 8.40700...</msg>
<status status="PASS" starttime="20201030 15:54:29.399" endtime="20201030 15:54:29.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.407" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 15:54:29.406" endtime="20201030 15:54:29.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.410" level="INFO">VALUE: [8.395800000000203e-05, 8.39170000000028e-05, 8.390299999999976e-05, 8.430599999999927e-05, 8.343100000000186e-05, 8.338899999999969e-05, 8.343100000000186e-05, 8.388800000000071e-05, 8.407000000000206e-05, 8.409699999999826e-05, 8.348600000000067e-05, 8.402799999999988e-05, 8.4153e-05, 8.43330000000024e-05, 8.404199999999945e-05, 8.41249999999974e-05, 8.427800000000013e-05, 8.377700000000016e-05, 8.375000000000049e-05, 8.370900000000125e-05, 8.405599999999902e-05, 8.406899999999912e-05, 8.391599999999985e-05, 8.370800000000178e-05, 8.398600000000117e-05, 8.387500000000062e-05, 8.404199999999945e-05, 8.344400000000196e-05, 8.355600000000199e-05, 8.423599999999795e-05, 8.336100000000055e-05, 8.409799999999773e-05, 8.406900000000259e-05, 8.408300000000216e-05, 8.431899999999937e-05, 8.373600000000092e-05, 8.352799999999938e-05, 8.375000000000049e-05, 8.392999999999942e-05, 8.402799999999988e-05, 8.386100000000105e-05, 8.348600000000067e-05, 8.374999999999702e-05, 8.347300000000057e-05, 8.348700000000014e-05, 8.405499999999955e-05, 8.376400000000006e-05, 8.413900000000044e-05, 8.355500000000252e-05, 8.354100000000295e-05]</msg>
<status status="PASS" starttime="20201030 15:54:29.408" endtime="20201030 15:54:29.411"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.403" endtime="20201030 15:54:29.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.416" endtime="20201030 15:54:29.435"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.414" endtime="20201030 15:54:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.413" endtime="20201030 15:54:29.436"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.052" endtime="20201030 15:54:29.437"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.052" endtime="20201030 15:54:29.437"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.446" endtime="20201030 15:54:29.465"></status>
</kw>
<msg timestamp="20201030 15:54:29.465" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.444" endtime="20201030 15:54:29.465"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.466" endtime="20201030 15:54:29.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.469" endtime="20201030 15:54:29.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.441" endtime="20201030 15:54:29.471"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.439" endtime="20201030 15:54:29.471"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.478" endtime="20201030 15:54:29.764"></status>
</kw>
<msg timestamp="20201030 15:54:29.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.477" endtime="20201030 15:54:29.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020308278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.768" endtime="20201030 15:54:29.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.777" endtime="20201030 15:54:29.778"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.474" endtime="20201030 15:54:29.779"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.472" endtime="20201030 15:54:29.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:29.783" level="INFO">${RESULT} = [{'diff': 8.488899999999772e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.515299999999754e-05}, {'diff': 8.502799999999741e-05}, {'diff': 8.432000000000231e-05}, {'diff': 8.466700000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:29.780" endtime="20201030 15:54:29.784"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:29.789" level="INFO">${ACCURACY} = {'diff': [8.488899999999772e-05, 8.46530000000005e-05, 8.515299999999754e-05, 8.502799999999741e-05, 8.432000000000231e-05, 8.466700000000008e-05, 8.454199999999995e-05, 8.506900000000012e-05, 8.46529...</msg>
<status status="PASS" starttime="20201030 15:54:29.784" endtime="20201030 15:54:29.789"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.793" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 15:54:29.792" endtime="20201030 15:54:29.794"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.796" level="INFO">VALUE: [8.488899999999772e-05, 8.46530000000005e-05, 8.515299999999754e-05, 8.502799999999741e-05, 8.432000000000231e-05, 8.466700000000008e-05, 8.454199999999995e-05, 8.506900000000012e-05, 8.465299999999704e-05, 8.511099999999883e-05, 8.491700000000033e-05, 8.438900000000069e-05, 8.455500000000005e-05, 8.518099999999668e-05, 8.495799999999956e-05, 8.443100000000286e-05, 8.49729999999986e-05, 8.515299999999754e-05, 8.468000000000017e-05, 8.472200000000235e-05, 8.440300000000026e-05, 8.501400000000131e-05, 8.538899999999822e-05, 8.474999999999802e-05, 8.472199999999888e-05, 8.527800000000113e-05, 8.530600000000027e-05, 8.4846999999999e-05, 8.51249999999984e-05, 8.451400000000081e-05, 8.448699999999768e-05, 8.466700000000008e-05, 8.46660000000006e-05, 8.472199999999888e-05, 8.450000000000124e-05, 8.536099999999908e-05, 8.480599999999977e-05, 8.444399999999949e-05, 8.508299999999969e-05, 8.459699999999876e-05, 8.491700000000033e-05, 8.526400000000156e-05, 8.491699999999686e-05, 8.484800000000195e-05, 8.491600000000085e-05, 8.493000000000042e-05, 8.454199999999995e-05, 8.509699999999926e-05, 8.520799999999981e-05, 8.469499999999922e-05]</msg>
<status status="PASS" starttime="20201030 15:54:29.794" endtime="20201030 15:54:29.797"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.790" endtime="20201030 15:54:29.797"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:29.801" endtime="20201030 15:54:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.800" endtime="20201030 15:54:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.798" endtime="20201030 15:54:29.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.438" endtime="20201030 15:54:29.822"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.437" endtime="20201030 15:54:29.822"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.831" endtime="20201030 15:54:29.850"></status>
</kw>
<msg timestamp="20201030 15:54:29.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.830" endtime="20201030 15:54:29.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:29.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:29.851" endtime="20201030 15:54:29.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.854" endtime="20201030 15:54:29.855"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.827" endtime="20201030 15:54:29.856"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.825" endtime="20201030 15:54:29.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:29.863" endtime="20201030 15:54:30.150"></status>
</kw>
<msg timestamp="20201030 15:54:30.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:29.862" endtime="20201030 15:54:30.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020247222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020333097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.154" endtime="20201030 15:54:30.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.163" endtime="20201030 15:54:30.164"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.859" endtime="20201030 15:54:30.165"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.857" endtime="20201030 15:54:30.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.170" level="INFO">${RESULT} = [{'diff': 8.587500000000262e-05}, {'diff': 8.59729999999996e-05}, {'diff': 8.594400000000099e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.541599999999788e-05}, {'diff': 8.565200000000203e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:30.166" endtime="20201030 15:54:30.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:30.174" level="INFO">${ACCURACY} = {'diff': [8.587500000000262e-05, 8.59729999999996e-05, 8.594400000000099e-05, 8.56249999999989e-05, 8.541599999999788e-05, 8.565200000000203e-05, 8.591600000000185e-05, 8.563900000000194e-05, 8.591700...</msg>
<status status="PASS" starttime="20201030 15:54:30.171" endtime="20201030 15:54:30.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.179" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 15:54:30.178" endtime="20201030 15:54:30.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.181" level="INFO">VALUE: [8.587500000000262e-05, 8.59729999999996e-05, 8.594400000000099e-05, 8.56249999999989e-05, 8.541599999999788e-05, 8.565200000000203e-05, 8.591600000000185e-05, 8.563900000000194e-05, 8.591700000000133e-05, 8.531999999999984e-05, 8.626399999999909e-05, 8.552800000000138e-05, 8.595900000000004e-05, 8.569500000000022e-05, 8.534800000000245e-05, 8.616599999999863e-05, 8.615199999999906e-05, 8.574999999999902e-05, 8.56799999999977e-05, 8.556900000000062e-05, 8.633300000000094e-05, 8.619400000000124e-05, 8.615299999999854e-05, 8.586099999999958e-05, 8.577799999999816e-05, 8.631999999999737e-05, 8.6153000000002e-05, 8.541599999999788e-05, 8.608300000000069e-05, 8.545800000000006e-05, 8.574999999999902e-05, 8.606900000000112e-05, 8.5847e-05, 8.609700000000026e-05, 8.56669999999976e-05, 8.620900000000029e-05, 8.632000000000084e-05, 8.544499999999997e-05, 8.565299999999804e-05, 8.552699999999844e-05, 8.618000000000167e-05, 8.626400000000256e-05, 8.619399999999777e-05, 8.579199999999773e-05, 8.544400000000049e-05, 8.538899999999822e-05, 8.580600000000077e-05, 8.609799999999973e-05, 8.591700000000133e-05, 8.570899999999979e-05]</msg>
<status status="PASS" starttime="20201030 15:54:30.180" endtime="20201030 15:54:30.182"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.175" endtime="20201030 15:54:30.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.186" endtime="20201030 15:54:30.206"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.185" endtime="20201030 15:54:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.184" endtime="20201030 15:54:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.823" endtime="20201030 15:54:30.207"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:29.822" endtime="20201030 15:54:30.207"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.216" endtime="20201030 15:54:30.235"></status>
</kw>
<msg timestamp="20201030 15:54:30.236" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.215" endtime="20201030 15:54:30.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.239" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.237" endtime="20201030 15:54:30.239"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.240" endtime="20201030 15:54:30.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.212" endtime="20201030 15:54:30.242"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.210" endtime="20201030 15:54:30.242"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.249" endtime="20201030 15:54:30.535"></status>
</kw>
<msg timestamp="20201030 15:54:30.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.248" endtime="20201030 15:54:30.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021813444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021900625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.539" endtime="20201030 15:54:30.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.548" endtime="20201030 15:54:30.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.245" endtime="20201030 15:54:30.550"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.243" endtime="20201030 15:54:30.551"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.555" level="INFO">${RESULT} = [{'diff': 8.718099999999868e-05}, {'diff': 8.663899999999947e-05}, {'diff': 8.71669999999991e-05}, {'diff': 8.697200000000113e-05}, {'diff': 8.713899999999997e-05}, {'diff': 8.651399999999934e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:30.552" endtime="20201030 15:54:30.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:30.560" level="INFO">${ACCURACY} = {'diff': [8.718099999999868e-05, 8.663899999999947e-05, 8.71669999999991e-05, 8.697200000000113e-05, 8.713899999999997e-05, 8.651399999999934e-05, 8.697199999999766e-05, 8.694399999999852e-05, 8.67500...</msg>
<status status="PASS" starttime="20201030 15:54:30.557" endtime="20201030 15:54:30.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.565" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 15:54:30.564" endtime="20201030 15:54:30.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.568" level="INFO">VALUE: [8.718099999999868e-05, 8.663899999999947e-05, 8.71669999999991e-05, 8.697200000000113e-05, 8.713899999999997e-05, 8.651399999999934e-05, 8.697199999999766e-05, 8.694399999999852e-05, 8.675000000000002e-05, 8.715299999999954e-05, 8.690299999999929e-05, 8.733399999999794e-05, 8.734800000000098e-05, 8.708300000000169e-05, 8.725000000000052e-05, 8.708299999999822e-05, 8.720800000000181e-05, 8.64860000000002e-05, 8.637499999999965e-05, 8.708299999999822e-05, 8.669499999999775e-05, 8.637499999999965e-05, 8.726300000000062e-05, 8.719499999999825e-05, 8.644500000000097e-05, 8.709700000000126e-05, 8.71250000000004e-05, 8.676300000000012e-05, 8.71660000000031e-05, 8.700000000000027e-05, 8.692999999999895e-05, 8.698599999999723e-05, 8.651399999999934e-05, 8.716700000000258e-05, 8.658399999999719e-05, 8.731999999999837e-05, 8.688899999999972e-05, 8.680600000000177e-05, 8.725000000000052e-05, 8.676300000000012e-05, 8.702699999999994e-05, 8.670800000000131e-05, 8.697200000000113e-05, 8.688899999999972e-05, 8.661100000000033e-05, 8.66249999999999e-05, 8.6847000000001e-05, 8.708400000000116e-05, 8.680600000000177e-05, 8.716599999999963e-05]</msg>
<status status="PASS" starttime="20201030 15:54:30.566" endtime="20201030 15:54:30.569"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.561" endtime="20201030 15:54:30.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.574" endtime="20201030 15:54:30.593"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.572" endtime="20201030 15:54:30.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.571" endtime="20201030 15:54:30.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.208" endtime="20201030 15:54:30.595"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.208" endtime="20201030 15:54:30.595"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.604" endtime="20201030 15:54:30.622"></status>
</kw>
<msg timestamp="20201030 15:54:30.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.602" endtime="20201030 15:54:30.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.624" endtime="20201030 15:54:30.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.627" endtime="20201030 15:54:30.628"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.600" endtime="20201030 15:54:30.629"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.597" endtime="20201030 15:54:30.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.636" endtime="20201030 15:54:30.923"></status>
</kw>
<msg timestamp="20201030 15:54:30.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.634" endtime="20201030 15:54:30.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020252292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020339986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:30.927" endtime="20201030 15:54:30.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.935" endtime="20201030 15:54:30.937"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.632" endtime="20201030 15:54:30.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.630" endtime="20201030 15:54:30.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:30.942" level="INFO">${RESULT} = [{'diff': 8.769399999999927e-05}, {'diff': 8.743099999999893e-05}, {'diff': 8.818099999999968e-05}, {'diff': 8.74310000000024e-05}, {'diff': 8.747200000000163e-05}, {'diff': 8.825000000000152e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:30.939" endtime="20201030 15:54:30.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:30.947" level="INFO">${ACCURACY} = {'diff': [8.769399999999927e-05, 8.743099999999893e-05, 8.818099999999968e-05, 8.74310000000024e-05, 8.747200000000163e-05, 8.825000000000152e-05, 8.786200000000105e-05, 8.76250000000009e-05, 8.770799...</msg>
<status status="PASS" starttime="20201030 15:54:30.943" endtime="20201030 15:54:30.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.952" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 15:54:30.951" endtime="20201030 15:54:30.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:30.954" level="INFO">VALUE: [8.769399999999927e-05, 8.743099999999893e-05, 8.818099999999968e-05, 8.74310000000024e-05, 8.747200000000163e-05, 8.825000000000152e-05, 8.786200000000105e-05, 8.76250000000009e-05, 8.770799999999884e-05, 8.79860000000017e-05, 8.758300000000219e-05, 8.770800000000231e-05, 8.743099999999893e-05, 8.777800000000016e-05, 8.740299999999979e-05, 8.83059999999998e-05, 8.791699999999986e-05, 8.755499999999958e-05, 8.76250000000009e-05, 8.783299999999897e-05, 8.825000000000152e-05, 8.825000000000152e-05, 8.794399999999952e-05, 8.779199999999973e-05, 8.823599999999848e-05, 8.737500000000065e-05, 8.818099999999968e-05, 8.804199999999998e-05, 8.815300000000054e-05, 8.787499999999768e-05, 8.805599999999955e-05, 8.820800000000281e-05, 8.816600000000063e-05, 8.829100000000076e-05, 8.769399999999927e-05, 8.78059999999993e-05, 8.745900000000154e-05, 8.741699999999936e-05, 8.800000000000127e-05, 8.797200000000213e-05, 8.823699999999796e-05, 8.829200000000023e-05, 8.773700000000093e-05, 8.750000000000077e-05, 8.816600000000063e-05, 8.834699999999904e-05, 8.769400000000274e-05, 8.797200000000213e-05, 8.781999999999887e-05, 8.791699999999986e-05]</msg>
<status status="PASS" starttime="20201030 15:54:30.953" endtime="20201030 15:54:30.955"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.948" endtime="20201030 15:54:30.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:30.960" endtime="20201030 15:54:30.979"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.958" endtime="20201030 15:54:30.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.957" endtime="20201030 15:54:30.980"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.596" endtime="20201030 15:54:30.981"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.595" endtime="20201030 15:54:30.981"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:30.990" endtime="20201030 15:54:31.009"></status>
</kw>
<msg timestamp="20201030 15:54:31.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:30.988" endtime="20201030 15:54:31.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.011" endtime="20201030 15:54:31.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.013" endtime="20201030 15:54:31.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.985" endtime="20201030 15:54:31.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.983" endtime="20201030 15:54:31.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.022" endtime="20201030 15:54:31.310"></status>
</kw>
<msg timestamp="20201030 15:54:31.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.021" endtime="20201030 15:54:31.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020177069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020266333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.314" endtime="20201030 15:54:31.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.323" endtime="20201030 15:54:31.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.018" endtime="20201030 15:54:31.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.016" endtime="20201030 15:54:31.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.330" level="INFO">${RESULT} = [{'diff': 8.926400000000209e-05}, {'diff': 8.850000000000177e-05}, {'diff': 8.936099999999961e-05}, {'diff': 8.8638999999998e-05}, {'diff': 8.841700000000036e-05}, {'diff': 8.863900000000147e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:31.327" endtime="20201030 15:54:31.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:31.334" level="INFO">${ACCURACY} = {'diff': [8.926400000000209e-05, 8.850000000000177e-05, 8.936099999999961e-05, 8.8638999999998e-05, 8.841700000000036e-05, 8.863900000000147e-05, 8.934700000000004e-05, 8.86670000000006e-05, 8.8583999...</msg>
<status status="PASS" starttime="20201030 15:54:31.331" endtime="20201030 15:54:31.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.339" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 15:54:31.338" endtime="20201030 15:54:31.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.341" level="INFO">VALUE: [8.926400000000209e-05, 8.850000000000177e-05, 8.936099999999961e-05, 8.8638999999998e-05, 8.841700000000036e-05, 8.863900000000147e-05, 8.934700000000004e-05, 8.86670000000006e-05, 8.858399999999919e-05, 8.852800000000091e-05, 8.841700000000036e-05, 8.909699999999979e-05, 8.872199999999941e-05, 8.84310000000034e-05, 8.866600000000113e-05, 8.838899999999775e-05, 8.934700000000004e-05, 8.881999999999987e-05, 8.920800000000034e-05, 8.911099999999936e-05, 8.858399999999919e-05, 8.901399999999837e-05, 8.870899999999932e-05, 8.873599999999898e-05, 8.883299999999997e-05, 8.86250000000019e-05, 8.887500000000215e-05, 8.872199999999941e-05, 8.86670000000006e-05, 8.934700000000004e-05, 8.93060000000008e-05, 8.884700000000301e-05, 8.898700000000218e-05, 8.930499999999786e-05, 8.890299999999782e-05, 8.893000000000095e-05, 8.851400000000134e-05, 8.920800000000034e-05, 8.91250000000024e-05, 8.854199999999701e-05, 8.84999999999983e-05, 8.843099999999993e-05, 8.93060000000008e-05, 8.84449999999995e-05, 8.916699999999764e-05, 8.895899999999957e-05, 8.919500000000025e-05, 8.886099999999911e-05, 8.876399999999812e-05, 8.902799999999794e-05]</msg>
<status status="PASS" starttime="20201030 15:54:31.340" endtime="20201030 15:54:31.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.335" endtime="20201030 15:54:31.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.347" endtime="20201030 15:54:31.366"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.345" endtime="20201030 15:54:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.344" endtime="20201030 15:54:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.982" endtime="20201030 15:54:31.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:30.981" endtime="20201030 15:54:31.368"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.377" endtime="20201030 15:54:31.397"></status>
</kw>
<msg timestamp="20201030 15:54:31.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.375" endtime="20201030 15:54:31.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.398" endtime="20201030 15:54:31.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.401" endtime="20201030 15:54:31.402"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.372" endtime="20201030 15:54:31.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.370" endtime="20201030 15:54:31.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.410" endtime="20201030 15:54:31.696"></status>
</kw>
<msg timestamp="20201030 15:54:31.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.409" endtime="20201030 15:54:31.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021091333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021180889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.700" endtime="20201030 15:54:31.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.709" endtime="20201030 15:54:31.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.406" endtime="20201030 15:54:31.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.404" endtime="20201030 15:54:31.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:31.716" level="INFO">${RESULT} = [{'diff': 8.955600000000105e-05}, {'diff': 8.987500000000315e-05}, {'diff': 9.020900000000082e-05}, {'diff': 9.022300000000039e-05}, {'diff': 8.959700000000029e-05}, {'diff': 9.022200000000091e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:31.712" endtime="20201030 15:54:31.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:31.720" level="INFO">${ACCURACY} = {'diff': [8.955600000000105e-05, 8.987500000000315e-05, 9.020900000000082e-05, 9.022300000000039e-05, 8.959700000000029e-05, 9.022200000000091e-05, 8.968100000000118e-05, 8.958399999999672e-05, 8.9709...</msg>
<status status="PASS" starttime="20201030 15:54:31.717" endtime="20201030 15:54:31.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.725" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 15:54:31.724" endtime="20201030 15:54:31.725"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.728" level="INFO">VALUE: [8.955600000000105e-05, 8.987500000000315e-05, 9.020900000000082e-05, 9.022300000000039e-05, 8.959700000000029e-05, 9.022200000000091e-05, 8.968100000000118e-05, 8.958399999999672e-05, 8.970900000000032e-05, 9.033300000000147e-05, 8.962499999999943e-05, 8.937499999999918e-05, 8.997199999999719e-05, 8.967999999999823e-05, 8.983300000000097e-05, 8.990299999999882e-05, 9.019500000000125e-05, 9.022200000000091e-05, 8.970800000000084e-05, 8.952800000000191e-05, 8.990199999999934e-05, 8.974999999999955e-05, 8.986100000000011e-05, 9.030499999999886e-05, 9.026399999999962e-05, 8.968100000000118e-05, 9.008299999999775e-05, 9.022300000000039e-05, 8.955600000000105e-05, 8.993100000000143e-05, 8.94999999999993e-05, 9.026399999999962e-05, 8.979099999999879e-05, 9.034700000000104e-05, 8.944499999999703e-05, 8.94999999999993e-05, 8.962499999999943e-05, 8.973599999999998e-05, 8.988900000000272e-05, 9.034800000000051e-05, 9.030599999999833e-05, 8.937499999999918e-05, 8.968100000000118e-05, 8.943099999999746e-05, 9.034699999999757e-05, 8.951399999999887e-05, 8.974999999999955e-05, 8.991599999999891e-05, 8.943000000000145e-05, 9.018099999999821e-05]</msg>
<status status="PASS" starttime="20201030 15:54:31.726" endtime="20201030 15:54:31.729"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.721" endtime="20201030 15:54:31.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:31.733" endtime="20201030 15:54:31.753"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.732" endtime="20201030 15:54:31.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.731" endtime="20201030 15:54:31.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.368" endtime="20201030 15:54:31.754"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.368" endtime="20201030 15:54:31.754"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.763" endtime="20201030 15:54:31.783"></status>
</kw>
<msg timestamp="20201030 15:54:31.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.762" endtime="20201030 15:54:31.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:31.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:31.785" endtime="20201030 15:54:31.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.787" endtime="20201030 15:54:31.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.759" endtime="20201030 15:54:31.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.757" endtime="20201030 15:54:31.790"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:31.797" endtime="20201030 15:54:32.083"></status>
</kw>
<msg timestamp="20201030 15:54:32.086" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:31.795" endtime="20201030 15:54:32.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020333347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020424208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.087" endtime="20201030 15:54:32.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.095" endtime="20201030 15:54:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.792" endtime="20201030 15:54:32.098"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.790" endtime="20201030 15:54:32.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.102" level="INFO">${RESULT} = [{'diff': 9.086099999999764e-05}, {'diff': 9.045799999999812e-05}, {'diff': 9.123599999999801e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.043099999999846e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:32.099" endtime="20201030 15:54:32.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:32.107" level="INFO">${ACCURACY} = {'diff': [9.086099999999764e-05, 9.045799999999812e-05, 9.123599999999801e-05, 9.075000000000055e-05, 9.125000000000105e-05, 9.043099999999846e-05, 9.13199999999989e-05, 9.083400000000144e-05, 9.10279...</msg>
<status status="PASS" starttime="20201030 15:54:32.103" endtime="20201030 15:54:32.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.112" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 15:54:32.111" endtime="20201030 15:54:32.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.115" level="INFO">VALUE: [9.086099999999764e-05, 9.045799999999812e-05, 9.123599999999801e-05, 9.075000000000055e-05, 9.125000000000105e-05, 9.043099999999846e-05, 9.13199999999989e-05, 9.083400000000144e-05, 9.102799999999994e-05, 9.104199999999951e-05, 9.094499999999853e-05, 9.036100000000061e-05, 9.06939999999988e-05, 9.077700000000022e-05, 9.073599999999751e-05, 9.070800000000184e-05, 9.054199999999901e-05, 9.054199999999901e-05, 9.040299999999932e-05, 9.127800000000019e-05, 9.061099999999739e-05, 9.079099999999979e-05, 9.072199999999794e-05, 9.065299999999957e-05, 9.097199999999819e-05, 9.090299999999982e-05, 9.1332999999999e-05, 9.108299999999875e-05, 9.106899999999918e-05, 9.108300000000222e-05, 9.091699999999939e-05, 9.099999999999733e-05, 9.133399999999847e-05, 9.119500000000225e-05, 9.077800000000316e-05, 9.098599999999776e-05, 9.084700000000154e-05, 9.06800000000027e-05, 9.122199999999844e-05, 9.087500000000068e-05, 9.051399999999987e-05, 9.065299999999957e-05, 9.088900000000025e-05, 9.129100000000029e-05, 9.051399999999987e-05, 9.10130000000009e-05, 9.127700000000072e-05, 9.038899999999975e-05, 9.037500000000018e-05, 9.086100000000111e-05]</msg>
<status status="PASS" starttime="20201030 15:54:32.113" endtime="20201030 15:54:32.115"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.108" endtime="20201030 15:54:32.116"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.120" endtime="20201030 15:54:32.139"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.118" endtime="20201030 15:54:32.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.117" endtime="20201030 15:54:32.140"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.755" endtime="20201030 15:54:32.141"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:31.755" endtime="20201030 15:54:32.141"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.150" endtime="20201030 15:54:32.169"></status>
</kw>
<msg timestamp="20201030 15:54:32.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.148" endtime="20201030 15:54:32.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.170" endtime="20201030 15:54:32.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.173" endtime="20201030 15:54:32.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.146" endtime="20201030 15:54:32.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.143" endtime="20201030 15:54:32.176"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.183" endtime="20201030 15:54:32.472"></status>
</kw>
<msg timestamp="20201030 15:54:32.475" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021229361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.181" endtime="20201030 15:54:32.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.483" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021229361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021321528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.476" endtime="20201030 15:54:32.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.484" endtime="20201030 15:54:32.486"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.178" endtime="20201030 15:54:32.487"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.176" endtime="20201030 15:54:32.487"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.491" level="INFO">${RESULT} = [{'diff': 9.216700000000064e-05}, {'diff': 9.141600000000041e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.220799999999987e-05}, {'diff': 9.159699999999882e-05}, {'diff': 9.175000000000155e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:32.488" endtime="20201030 15:54:32.491"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:32.495" level="INFO">${ACCURACY} = {'diff': [9.216700000000064e-05, 9.141600000000041e-05, 9.140300000000032e-05, 9.220799999999987e-05, 9.159699999999882e-05, 9.175000000000155e-05, 9.152800000000044e-05, 9.198599999999876e-05, 9.2250...</msg>
<status status="PASS" starttime="20201030 15:54:32.492" endtime="20201030 15:54:32.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.500" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 15:54:32.499" endtime="20201030 15:54:32.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.503" level="INFO">VALUE: [9.216700000000064e-05, 9.141600000000041e-05, 9.140300000000032e-05, 9.220799999999987e-05, 9.159699999999882e-05, 9.175000000000155e-05, 9.152800000000044e-05, 9.198599999999876e-05, 9.225000000000205e-05, 9.205600000000008e-05, 9.143099999999946e-05, 9.14719999999987e-05, 9.213899999999803e-05, 9.226399999999815e-05, 9.215199999999812e-05, 9.138899999999728e-05, 9.184699999999907e-05, 9.2333e-05, 9.180500000000036e-05, 9.149999999999783e-05, 9.212500000000193e-05, 9.194499999999953e-05, 9.208400000000269e-05, 9.147299999999817e-05, 9.151400000000087e-05, 9.166700000000014e-05, 9.144399999999955e-05, 9.152800000000044e-05, 9.151400000000087e-05, 9.141600000000041e-05, 9.181899999999993e-05, 9.179200000000026e-05, 9.140300000000032e-05, 9.2333e-05, 9.180599999999983e-05, 9.155599999999958e-05, 9.223700000000196e-05, 9.174999999999808e-05, 9.158299999999925e-05, 9.208299999999975e-05, 9.208299999999975e-05, 9.202800000000094e-05, 9.159699999999882e-05, 9.220899999999935e-05, 9.191700000000039e-05, 9.173600000000198e-05, 9.168099999999971e-05, 9.179200000000026e-05, 9.147299999999817e-05, 9.180500000000036e-05]</msg>
<status status="PASS" starttime="20201030 15:54:32.501" endtime="20201030 15:54:32.503"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.496" endtime="20201030 15:54:32.504"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.508" endtime="20201030 15:54:32.527"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.506" endtime="20201030 15:54:32.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.505" endtime="20201030 15:54:32.528"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.142" endtime="20201030 15:54:32.529"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.141" endtime="20201030 15:54:32.529"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.538" endtime="20201030 15:54:32.557"></status>
</kw>
<msg timestamp="20201030 15:54:32.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.536" endtime="20201030 15:54:32.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.558" endtime="20201030 15:54:32.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.561" endtime="20201030 15:54:32.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.533" endtime="20201030 15:54:32.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.531" endtime="20201030 15:54:32.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.570" endtime="20201030 15:54:32.856"></status>
</kw>
<msg timestamp="20201030 15:54:32.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021190458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.569" endtime="20201030 15:54:32.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021097222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021190458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.861" endtime="20201030 15:54:32.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.869" endtime="20201030 15:54:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.566" endtime="20201030 15:54:32.871"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.564" endtime="20201030 15:54:32.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:32.876" level="INFO">${RESULT} = [{'diff': 9.323600000000001e-05}, {'diff': 9.265300000000157e-05}, {'diff': 9.273600000000298e-05}, {'diff': 9.272199999999994e-05}, {'diff': 9.295800000000062e-05}, {'diff': 9.295800000000062e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:32.873" endtime="20201030 15:54:32.876"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:32.880" level="INFO">${ACCURACY} = {'diff': [9.323600000000001e-05, 9.265300000000157e-05, 9.273600000000298e-05, 9.272199999999994e-05, 9.295800000000062e-05, 9.295800000000062e-05, 9.257000000000015e-05, 9.29590000000001e-05, 9.27219...</msg>
<status status="PASS" starttime="20201030 15:54:32.877" endtime="20201030 15:54:32.881"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.885" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 15:54:32.884" endtime="20201030 15:54:32.885"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.888" level="INFO">VALUE: [9.323600000000001e-05, 9.265300000000157e-05, 9.273600000000298e-05, 9.272199999999994e-05, 9.295800000000062e-05, 9.295800000000062e-05, 9.257000000000015e-05, 9.29590000000001e-05, 9.272199999999994e-05, 9.304200000000151e-05, 9.280500000000136e-05, 9.330499999999839e-05, 9.238899999999828e-05, 9.326399999999915e-05, 9.304099999999857e-05, 9.322200000000044e-05, 9.295800000000062e-05, 9.327799999999872e-05, 9.248599999999926e-05, 9.243099999999699e-05, 9.320900000000035e-05, 9.330600000000133e-05, 9.311099999999989e-05, 9.313799999999955e-05, 9.309699999999685e-05, 9.24719999999997e-05, 9.288899999999878e-05, 9.286099999999964e-05, 9.241699999999742e-05, 9.287499999999921e-05, 9.327799999999872e-05, 9.255599999999711e-05, 9.240300000000132e-05, 9.299999999999933e-05, 9.298599999999976e-05, 9.286099999999964e-05, 9.31659999999987e-05, 9.29720000000002e-05, 9.331899999999796e-05, 9.327799999999872e-05, 9.247200000000316e-05, 9.293100000000096e-05, 9.326400000000262e-05, 9.251400000000187e-05, 9.257000000000015e-05, 9.254200000000101e-05, 9.329100000000229e-05, 9.245800000000012e-05, 9.280499999999789e-05, 9.316700000000164e-05]</msg>
<status status="PASS" starttime="20201030 15:54:32.886" endtime="20201030 15:54:32.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.881" endtime="20201030 15:54:32.890"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:32.894" endtime="20201030 15:54:32.913"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.892" endtime="20201030 15:54:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.891" endtime="20201030 15:54:32.914"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.530" endtime="20201030 15:54:32.915"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.529" endtime="20201030 15:54:32.915"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.924" endtime="20201030 15:54:32.943"></status>
</kw>
<msg timestamp="20201030 15:54:32.943" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.922" endtime="20201030 15:54:32.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:32.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:32.944" endtime="20201030 15:54:32.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.947" endtime="20201030 15:54:32.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.920" endtime="20201030 15:54:32.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.917" endtime="20201030 15:54:32.950"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:32.957" endtime="20201030 15:54:33.242"></status>
</kw>
<msg timestamp="20201030 15:54:33.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:32.955" endtime="20201030 15:54:33.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020317569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.246" endtime="20201030 15:54:33.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.255" endtime="20201030 15:54:33.256"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.952" endtime="20201030 15:54:33.257"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.951" endtime="20201030 15:54:33.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.261" level="INFO">${RESULT} = [{'diff': 9.392999999999901e-05}, {'diff': 9.376300000000018e-05}, {'diff': 9.408300000000175e-05}, {'diff': 9.409700000000132e-05}, {'diff': 9.367999999999876e-05}, {'diff': 9.391700000000239e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:33.258" endtime="20201030 15:54:33.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:33.267" level="INFO">${ACCURACY} = {'diff': [9.392999999999901e-05, 9.376300000000018e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.367999999999876e-05, 9.391700000000239e-05, 9.40139999999999e-05, 9.38330000000015e-05, 9.386100...</msg>
<status status="PASS" starttime="20201030 15:54:33.263" endtime="20201030 15:54:33.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.271" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 15:54:33.270" endtime="20201030 15:54:33.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.274" level="INFO">VALUE: [9.392999999999901e-05, 9.376300000000018e-05, 9.408300000000175e-05, 9.409700000000132e-05, 9.367999999999876e-05, 9.391700000000239e-05, 9.40139999999999e-05, 9.38330000000015e-05, 9.386100000000064e-05, 9.397300000000067e-05, 9.362499999999996e-05, 9.409700000000132e-05, 9.363899999999953e-05, 9.363899999999953e-05, 9.379099999999932e-05, 9.366700000000214e-05, 9.425000000000058e-05, 9.433299999999853e-05, 9.433400000000147e-05, 9.409700000000132e-05, 9.340299999999885e-05, 9.427799999999972e-05, 9.384700000000107e-05, 9.377699999999975e-05, 9.422200000000144e-05, 9.405499999999914e-05, 9.400000000000033e-05, 9.370800000000137e-05, 9.361100000000039e-05, 9.415200000000012e-05, 9.413900000000003e-05, 9.361100000000039e-05, 9.402799999999947e-05, 9.398600000000076e-05, 9.368000000000223e-05, 9.362499999999996e-05, 9.34720000000007e-05, 9.431899999999896e-05, 9.38330000000015e-05, 9.356900000000168e-05, 9.41529999999996e-05, 9.419500000000178e-05, 9.397300000000067e-05, 9.349999999999983e-05, 9.386200000000011e-05, 9.354099999999907e-05, 9.387500000000021e-05, 9.337499999999971e-05, 9.39720000000012e-05, 9.355499999999864e-05]</msg>
<status status="PASS" starttime="20201030 15:54:33.273" endtime="20201030 15:54:33.281"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.268" endtime="20201030 15:54:33.282"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.286" endtime="20201030 15:54:33.305"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.284" endtime="20201030 15:54:33.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.283" endtime="20201030 15:54:33.306"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.916" endtime="20201030 15:54:33.307"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:32.915" endtime="20201030 15:54:33.307"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.316" endtime="20201030 15:54:33.336"></status>
</kw>
<msg timestamp="20201030 15:54:33.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.314" endtime="20201030 15:54:33.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.337" endtime="20201030 15:54:33.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.340" endtime="20201030 15:54:33.341"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.312" endtime="20201030 15:54:33.342"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.309" endtime="20201030 15:54:33.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.349" endtime="20201030 15:54:33.638"></status>
</kw>
<msg timestamp="20201030 15:54:33.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.348" endtime="20201030 15:54:33.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020389472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.643" endtime="20201030 15:54:33.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.651" endtime="20201030 15:54:33.653"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.345" endtime="20201030 15:54:33.654"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.343" endtime="20201030 15:54:33.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:33.658" level="INFO">${RESULT} = [{'diff': 9.486100000000164e-05}, {'diff': 9.472200000000194e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.473599999999804e-05}, {'diff': 9.466699999999967e-05}, {'diff': 9.504200000000004e-05}, {...</msg>
<status status="PASS" starttime="20201030 15:54:33.655" endtime="20201030 15:54:33.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:33.663" level="INFO">${ACCURACY} = {'diff': [9.486100000000164e-05, 9.472200000000194e-05, 9.438900000000028e-05, 9.473599999999804e-05, 9.466699999999967e-05, 9.504200000000004e-05, 9.483400000000197e-05, 9.466699999999967e-05, 9.4625...</msg>
<status status="PASS" starttime="20201030 15:54:33.659" endtime="20201030 15:54:33.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.667" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 15:54:33.666" endtime="20201030 15:54:33.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.670" level="INFO">VALUE: [9.486100000000164e-05, 9.472200000000194e-05, 9.438900000000028e-05, 9.473599999999804e-05, 9.466699999999967e-05, 9.504200000000004e-05, 9.483400000000197e-05, 9.466699999999967e-05, 9.462500000000096e-05, 9.462499999999749e-05, 9.513900000000103e-05, 9.455500000000311e-05, 9.49859999999983e-05, 9.494400000000305e-05, 9.495799999999915e-05, 9.505500000000014e-05, 9.463900000000053e-05, 9.486100000000164e-05, 9.447199999999822e-05, 9.506999999999918e-05, 9.459799999999782e-05, 9.442999999999951e-05, 9.511099999999842e-05, 9.475000000000108e-05, 9.441599999999994e-05, 9.443000000000298e-05, 9.530599999999986e-05, 9.455599999999911e-05, 9.451399999999693e-05, 9.490300000000035e-05, 9.515200000000112e-05, 9.480499999999989e-05, 9.459699999999835e-05, 9.502699999999753e-05, 9.469399999999933e-05, 9.440299999999985e-05, 9.444399999999908e-05, 9.51530000000006e-05, 9.437500000000071e-05, 9.476400000000065e-05, 9.483400000000197e-05, 9.498600000000176e-05, 9.52079999999994e-05, 9.518000000000026e-05, 9.477800000000022e-05, 9.441599999999994e-05, 9.470800000000237e-05, 9.525000000000158e-05, 9.486100000000164e-05, 9.473600000000151e-05]</msg>
<status status="PASS" starttime="20201030 15:54:33.668" endtime="20201030 15:54:33.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.663" endtime="20201030 15:54:33.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:33.675" endtime="20201030 15:54:33.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.673" endtime="20201030 15:54:33.695"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.672" endtime="20201030 15:54:33.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.308" endtime="20201030 15:54:33.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.307" endtime="20201030 15:54:33.696"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.705" endtime="20201030 15:54:33.725"></status>
</kw>
<msg timestamp="20201030 15:54:33.725" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.703" endtime="20201030 15:54:33.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:33.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:33.726" endtime="20201030 15:54:33.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.729" endtime="20201030 15:54:33.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.701" endtime="20201030 15:54:33.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.699" endtime="20201030 15:54:33.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:33.738" endtime="20201030 15:54:34.025"></status>
</kw>
<msg timestamp="20201030 15:54:34.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:33.737" endtime="20201030 15:54:34.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021303722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021399194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.029" endtime="20201030 15:54:34.037"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.038" endtime="20201030 15:54:34.039"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.734" endtime="20201030 15:54:34.040"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.732" endtime="20201030 15:54:34.040"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.044" level="INFO">${RESULT} = [{'diff': 9.547199999999922e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.573599999999904e-05}, {'diff': 9.601299999999896e-05}, {'diff': 9.61530000000016e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:34.041" endtime="20201030 15:54:34.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:34.049" level="INFO">${ACCURACY} = {'diff': [9.547199999999922e-05, 9.58469999999996e-05, 9.597199999999972e-05, 9.573599999999904e-05, 9.601299999999896e-05, 9.61530000000016e-05, 9.537500000000171e-05, 9.591600000000144e-05, 9.573599...</msg>
<status status="PASS" starttime="20201030 15:54:34.045" endtime="20201030 15:54:34.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.053" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 15:54:34.052" endtime="20201030 15:54:34.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.056" level="INFO">VALUE: [9.547199999999922e-05, 9.58469999999996e-05, 9.597199999999972e-05, 9.573599999999904e-05, 9.601299999999896e-05, 9.61530000000016e-05, 9.537500000000171e-05, 9.591600000000144e-05, 9.573599999999904e-05, 9.593100000000049e-05, 9.556999999999968e-05, 9.619500000000031e-05, 9.56530000000011e-05, 9.61669999999977e-05, 9.559799999999882e-05, 9.588900000000178e-05, 9.631900000000096e-05, 9.591599999999798e-05, 9.59019999999984e-05, 9.566599999999773e-05, 9.611099999999942e-05, 9.550000000000183e-05, 9.619500000000031e-05, 9.627800000000172e-05, 9.620899999999988e-05, 9.593000000000101e-05, 9.59729999999992e-05, 9.545800000000312e-05, 9.594500000000006e-05, 9.626400000000215e-05, 9.545799999999965e-05, 9.627800000000172e-05, 9.61669999999977e-05, 9.62080000000004e-05, 9.59729999999992e-05, 9.61669999999977e-05, 9.556999999999968e-05, 9.588900000000178e-05, 9.56660000000012e-05, 9.623599999999954e-05, 9.583300000000003e-05, 9.599999999999886e-05, 9.594400000000058e-05, 9.550000000000183e-05, 9.540299999999738e-05, 9.638799999999934e-05, 9.558399999999925e-05, 9.624999999999911e-05, 9.570899999999938e-05, 9.622199999999997e-05]</msg>
<status status="PASS" starttime="20201030 15:54:34.055" endtime="20201030 15:54:34.058"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.050" endtime="20201030 15:54:34.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.062" endtime="20201030 15:54:34.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.060" endtime="20201030 15:54:34.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.059" endtime="20201030 15:54:34.082"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.697" endtime="20201030 15:54:34.083"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:33.696" endtime="20201030 15:54:34.083"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.092" endtime="20201030 15:54:34.110"></status>
</kw>
<msg timestamp="20201030 15:54:34.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.090" endtime="20201030 15:54:34.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.112" endtime="20201030 15:54:34.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.114" endtime="20201030 15:54:34.116"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.088" endtime="20201030 15:54:34.117"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.085" endtime="20201030 15:54:34.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.124" endtime="20201030 15:54:34.409"></status>
</kw>
<msg timestamp="20201030 15:54:34.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.122" endtime="20201030 15:54:34.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020661764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.413" endtime="20201030 15:54:34.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.422" endtime="20201030 15:54:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.120" endtime="20201030 15:54:34.424"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.118" endtime="20201030 15:54:34.425"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.429" level="INFO">${RESULT} = [{'diff': 9.66530000000021e-05}, {'diff': 9.708299999999781e-05}, {'diff': 9.680600000000136e-05}, {'diff': 9.699999999999986e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.661099999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:34.425" endtime="20201030 15:54:34.429"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:34.434" level="INFO">${ACCURACY} = {'diff': [9.66530000000021e-05, 9.708299999999781e-05, 9.680600000000136e-05, 9.699999999999986e-05, 9.708300000000128e-05, 9.661099999999992e-05, 9.669400000000133e-05, 9.695900000000063e-05, 9.73470...</msg>
<status status="PASS" starttime="20201030 15:54:34.430" endtime="20201030 15:54:34.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.439" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 15:54:34.438" endtime="20201030 15:54:34.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.441" level="INFO">VALUE: [9.66530000000021e-05, 9.708299999999781e-05, 9.680600000000136e-05, 9.699999999999986e-05, 9.708300000000128e-05, 9.661099999999992e-05, 9.669400000000133e-05, 9.695900000000063e-05, 9.73470000000011e-05, 9.708399999999728e-05, 9.712499999999999e-05, 9.711199999999989e-05, 9.6721999999997e-05, 9.70409999999991e-05, 9.711100000000042e-05, 9.644500000000056e-05, 9.668000000000176e-05, 9.67920000000018e-05, 9.731899999999849e-05, 9.672200000000047e-05, 9.657000000000068e-05, 9.669499999999734e-05, 9.68340000000005e-05, 9.73059999999984e-05, 9.661099999999992e-05, 9.669400000000133e-05, 9.722200000000097e-05, 9.641700000000142e-05, 9.701399999999943e-05, 9.694400000000158e-05, 9.688899999999931e-05, 9.666700000000167e-05, 9.706999999999771e-05, 9.650000000000283e-05, 9.680600000000136e-05, 9.719399999999837e-05, 9.725000000000011e-05, 9.690299999999888e-05, 9.656899999999774e-05, 9.730600000000186e-05, 9.701399999999943e-05, 9.722299999999698e-05, 9.713899999999956e-05, 9.668100000000124e-05, 9.690299999999888e-05, 9.688899999999931e-05, 9.67080000000009e-05, 9.690200000000287e-05, 9.680500000000189e-05, 9.723600000000054e-05]</msg>
<status status="PASS" starttime="20201030 15:54:34.440" endtime="20201030 15:54:34.442"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.435" endtime="20201030 15:54:34.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.447" endtime="20201030 15:54:34.466"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.445" endtime="20201030 15:54:34.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.444" endtime="20201030 15:54:34.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.084" endtime="20201030 15:54:34.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.083" endtime="20201030 15:54:34.468"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.477" endtime="20201030 15:54:34.495"></status>
</kw>
<msg timestamp="20201030 15:54:34.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.475" endtime="20201030 15:54:34.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.498" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.496" endtime="20201030 15:54:34.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.499" endtime="20201030 15:54:34.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.472" endtime="20201030 15:54:34.501"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.470" endtime="20201030 15:54:34.502"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.508" endtime="20201030 15:54:34.796"></status>
</kw>
<msg timestamp="20201030 15:54:34.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.507" endtime="20201030 15:54:34.800"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020668639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020766153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.801" endtime="20201030 15:54:34.808"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.809" endtime="20201030 15:54:34.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.504" endtime="20201030 15:54:34.811"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.502" endtime="20201030 15:54:34.812"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:34.816" level="INFO">${RESULT} = [{'diff': 9.751399999999993e-05}, {'diff': 9.751399999999993e-05}, {'diff': 9.76799999999993e-05}, {'diff': 9.792999999999955e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.768100000000224e-05}, {'...</msg>
<status status="PASS" starttime="20201030 15:54:34.813" endtime="20201030 15:54:34.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:34.820" level="INFO">${ACCURACY} = {'diff': [9.751399999999993e-05, 9.751399999999993e-05, 9.76799999999993e-05, 9.792999999999955e-05, 9.812500000000099e-05, 9.768100000000224e-05, 9.809700000000185e-05, 9.791699999999945e-05, 9.78329...</msg>
<status status="PASS" starttime="20201030 15:54:34.817" endtime="20201030 15:54:34.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.825" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 15:54:34.824" endtime="20201030 15:54:34.825"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.827" level="INFO">VALUE: [9.751399999999993e-05, 9.751399999999993e-05, 9.76799999999993e-05, 9.792999999999955e-05, 9.812500000000099e-05, 9.768100000000224e-05, 9.809700000000185e-05, 9.791699999999945e-05, 9.783299999999856e-05, 9.76669999999992e-05, 9.754200000000254e-05, 9.773599999999757e-05, 9.751399999999993e-05, 9.795899999999816e-05, 9.742999999999905e-05, 9.806899999999924e-05, 9.78470000000016e-05, 9.751399999999993e-05, 9.800000000000086e-05, 9.761100000000092e-05, 9.804199999999957e-05, 9.741600000000294e-05, 9.808400000000175e-05, 9.78479999999976e-05, 9.788900000000031e-05, 9.791599999999998e-05, 9.830499999999992e-05, 9.75409999999996e-05, 9.777799999999975e-05, 9.812500000000099e-05, 9.836100000000167e-05, 9.812500000000099e-05, 9.834800000000157e-05, 9.736100000000067e-05, 9.809800000000132e-05, 9.797299999999773e-05, 9.829199999999982e-05, 9.811099999999795e-05, 9.776400000000018e-05, 9.77080000000019e-05, 9.758300000000178e-05, 9.768000000000276e-05, 9.793099999999902e-05, 9.761099999999745e-05, 9.77080000000019e-05, 9.805599999999914e-05, 9.783299999999856e-05, 9.741600000000294e-05, 9.805499999999967e-05, 9.822200000000197e-05]</msg>
<status status="PASS" starttime="20201030 15:54:34.826" endtime="20201030 15:54:34.828"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.821" endtime="20201030 15:54:34.829"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:34.833" endtime="20201030 15:54:34.852"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.831" endtime="20201030 15:54:34.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.830" endtime="20201030 15:54:34.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.468" endtime="20201030 15:54:34.853"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.468" endtime="20201030 15:54:34.854"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.863" endtime="20201030 15:54:34.883"></status>
</kw>
<msg timestamp="20201030 15:54:34.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.861" endtime="20201030 15:54:34.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:34.886" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:34.885" endtime="20201030 15:54:34.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.887" endtime="20201030 15:54:34.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.858" endtime="20201030 15:54:34.889"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.856" endtime="20201030 15:54:34.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:34.897" endtime="20201030 15:54:35.183"></status>
</kw>
<msg timestamp="20201030 15:54:35.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:34.895" endtime="20201030 15:54:35.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021191333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021290069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.187" endtime="20201030 15:54:35.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.196" endtime="20201030 15:54:35.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.892" endtime="20201030 15:54:35.198"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.890" endtime="20201030 15:54:35.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.203" level="INFO">${RESULT} = [{'diff': 9.873599999999857e-05}, {'diff': 9.862500000000149e-05}, {'diff': 9.923600000000254e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.924999999999864e-05}, {'diff': 9.884699999999913e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 15:54:35.200" endtime="20201030 15:54:35.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:35.207" level="INFO">${ACCURACY} = {'diff': [9.873599999999857e-05, 9.862500000000149e-05, 9.923600000000254e-05, 9.8721999999999e-05, 9.924999999999864e-05, 9.884699999999913e-05, 9.845800000000265e-05, 9.877800000000075e-05, 9.902800...</msg>
<status status="PASS" starttime="20201030 15:54:35.204" endtime="20201030 15:54:35.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.212" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 15:54:35.211" endtime="20201030 15:54:35.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.215" level="INFO">VALUE: [9.873599999999857e-05, 9.862500000000149e-05, 9.923600000000254e-05, 9.8721999999999e-05, 9.924999999999864e-05, 9.884699999999913e-05, 9.845800000000265e-05, 9.877800000000075e-05, 9.9028000000001e-05, 9.930599999999692e-05, 9.913900000000156e-05, 9.838800000000134e-05, 9.927699999999831e-05, 9.901400000000143e-05, 9.845799999999919e-05, 9.913900000000156e-05, 9.884699999999913e-05, 9.89860000000023e-05, 9.858300000000278e-05, 9.879200000000032e-05, 9.851400000000093e-05, 9.93060000000004e-05, 9.843000000000005e-05, 9.912499999999852e-05, 9.920799999999994e-05, 9.926399999999821e-05, 9.844399999999962e-05, 9.919499999999984e-05, 9.918100000000027e-05, 9.924999999999864e-05, 9.93479999999991e-05, 9.927800000000125e-05, 9.865300000000063e-05, 9.927700000000178e-05, 9.856899999999974e-05, 9.851400000000093e-05, 9.926399999999821e-05, 9.844399999999962e-05, 9.837499999999777e-05, 9.850000000000136e-05, 9.879200000000032e-05, 9.837500000000124e-05, 9.841600000000048e-05, 9.8415999999997e-05, 9.905500000000067e-05, 9.8721999999999e-05, 9.905500000000067e-05, 9.880500000000042e-05, 9.854200000000007e-05, 9.863900000000106e-05]</msg>
<status status="PASS" starttime="20201030 15:54:35.213" endtime="20201030 15:54:35.216"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.208" endtime="20201030 15:54:35.217"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.221" endtime="20201030 15:54:35.240"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.219" endtime="20201030 15:54:35.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.218" endtime="20201030 15:54:35.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.854" endtime="20201030 15:54:35.241"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:34.854" endtime="20201030 15:54:35.241"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.251" endtime="20201030 15:54:35.269"></status>
</kw>
<msg timestamp="20201030 15:54:35.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.249" endtime="20201030 15:54:35.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.271" endtime="20201030 15:54:35.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.273" endtime="20201030 15:54:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.246" endtime="20201030 15:54:35.275"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.244" endtime="20201030 15:54:35.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.283" endtime="20201030 15:54:35.568"></status>
</kw>
<msg timestamp="20201030 15:54:35.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.281" endtime="20201030 15:54:35.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020735014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.572" endtime="20201030 15:54:35.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.580" endtime="20201030 15:54:35.582"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.278" endtime="20201030 15:54:35.583"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.277" endtime="20201030 15:54:35.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.587" level="INFO">${RESULT} = [{'diff': 0.00010038899999999934}, {'diff': 9.993000000000155e-05}, {'diff': 9.959699999999988e-05}, {'diff': 9.961099999999945e-05}, {'diff': 0.00010001399999999896}, {'diff': 9.965300000000163e-05},...</msg>
<status status="PASS" starttime="20201030 15:54:35.584" endtime="20201030 15:54:35.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:35.593" level="INFO">${ACCURACY} = {'diff': [0.00010038899999999934, 9.993000000000155e-05, 9.959699999999988e-05, 9.961099999999945e-05, 0.00010001399999999896, 9.965300000000163e-05, 0.00010007000000000071, 9.94999999999989e-05, 0.00...</msg>
<status status="PASS" starttime="20201030 15:54:35.588" endtime="20201030 15:54:35.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.597" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 15:54:35.596" endtime="20201030 15:54:35.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.600" level="INFO">VALUE: [0.00010038899999999934, 9.993000000000155e-05, 9.959699999999988e-05, 9.961099999999945e-05, 0.00010001399999999896, 9.965300000000163e-05, 0.00010007000000000071, 9.94999999999989e-05, 0.00010015200000000266, 9.980500000000142e-05, 9.937499999999877e-05, 9.944400000000062e-05, 9.962499999999902e-05, 0.00010020800000000094, 9.990299999999841e-05, 0.00010011099999999995, 9.955600000000064e-05, 9.962500000000249e-05, 9.969500000000034e-05, 9.956900000000074e-05, 9.941700000000095e-05, 9.94999999999989e-05, 9.98609999999997e-05, 9.937499999999877e-05, 9.954200000000107e-05, 9.995800000000069e-05, 9.973599999999957e-05, 9.987499999999927e-05, 9.974999999999914e-05, 9.95280000000015e-05, 9.962499999999902e-05, 0.00010033299999999759, 0.00010002799999999853, 9.979200000000132e-05, 0.0001002220000000005, 0.00010030599999999792, 9.94999999999989e-05, 0.00010033400000000053, 9.98609999999997e-05, 9.974999999999914e-05, 9.981899999999752e-05, 9.937499999999877e-05, 9.959699999999988e-05, 0.00010020800000000094, 0.00010031900000000149, 9.943100000000052e-05, 9.95280000000015e-05, 0.00010038799999999987, 9.938900000000181e-05, 9.962500000000249e-05]</msg>
<status status="PASS" starttime="20201030 15:54:35.598" endtime="20201030 15:54:35.601"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.593" endtime="20201030 15:54:35.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.605" endtime="20201030 15:54:35.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.603" endtime="20201030 15:54:35.625"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.602" endtime="20201030 15:54:35.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.242" endtime="20201030 15:54:35.626"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.242" endtime="20201030 15:54:35.626"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.636" endtime="20201030 15:54:35.656"></status>
</kw>
<msg timestamp="20201030 15:54:35.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.634" endtime="20201030 15:54:35.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:35.658" endtime="20201030 15:54:35.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.660" endtime="20201030 15:54:35.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.631" endtime="20201030 15:54:35.662"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.629" endtime="20201030 15:54:35.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.670" endtime="20201030 15:54:35.960"></status>
</kw>
<msg timestamp="20201030 15:54:35.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.668" endtime="20201030 15:54:35.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022013319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:35.964" endtime="20201030 15:54:35.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:35.972" endtime="20201030 15:54:35.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.665" endtime="20201030 15:54:35.974"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.664" endtime="20201030 15:54:35.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:35.979" level="INFO">${RESULT} = [{'diff': 0.00010130499999999945}, {'diff': 0.00010038799999999987}, {'diff': 0.00010081899999999852}, {'diff': 0.00010054200000000207}, {'diff': 0.0001013610000000012}, {'diff': 0.0001012640000000002...</msg>
<status status="PASS" starttime="20201030 15:54:35.976" endtime="20201030 15:54:35.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:35.983" level="INFO">${ACCURACY} = {'diff': [0.00010130499999999945, 0.00010038799999999987, 0.00010081899999999852, 0.00010054200000000207, 0.0001013610000000012, 0.00010126400000000021, 0.00010063899999999959, 0.00010097200000000126,...</msg>
<status status="PASS" starttime="20201030 15:54:35.980" endtime="20201030 15:54:35.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.988" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 15:54:35.987" endtime="20201030 15:54:35.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:35.990" level="INFO">VALUE: [0.00010130499999999945, 0.00010038799999999987, 0.00010081899999999852, 0.00010054200000000207, 0.0001013610000000012, 0.00010126400000000021, 0.00010063899999999959, 0.00010097200000000126, 0.00010125000000000065, 0.0001010419999999991, 0.00010101399999999996, 0.00010095900000000116, 0.0001005419999999986, 0.00010095800000000169, 0.00010123600000000108, 0.00010101399999999996, 0.000100722000000001, 0.00010109700000000138, 0.0001009159999999995, 0.00010094499999999812, 0.00010102799999999953, 0.00010081900000000199, 0.00010043000000000205, 0.00010079099999999938, 0.00010090199999999994, 0.00010048600000000033, 0.00010090299999999941, 0.00010052799999999903, 0.0001005419999999986, 0.00010102799999999953, 0.0001006809999999983, 0.00010065299999999916, 0.00010073600000000058, 0.0001004999999999999, 0.00010115200000000019, 0.0001004999999999999, 0.00010095800000000169, 0.00010133300000000206, 0.00010044500000000109, 0.00010129199999999935, 0.00010113900000000009, 0.00010043100000000152, 0.0001010000000000004, 0.00010058300000000131, 0.00010075000000000014, 0.00010108299999999834, 0.00010044399999999815, 0.00010133300000000206, 0.00010041699999999848, 0.00010116699999999923]</msg>
<status status="PASS" starttime="20201030 15:54:35.989" endtime="20201030 15:54:35.991"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.984" endtime="20201030 15:54:35.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:35.995" endtime="20201030 15:54:36.015"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.994" endtime="20201030 15:54:36.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.993" endtime="20201030 15:54:36.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.627" endtime="20201030 15:54:36.016"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:35.627" endtime="20201030 15:54:36.016"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.025" endtime="20201030 15:54:36.046"></status>
</kw>
<msg timestamp="20201030 15:54:36.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.024" endtime="20201030 15:54:36.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.049" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.048" endtime="20201030 15:54:36.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.050" endtime="20201030 15:54:36.052"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.021" endtime="20201030 15:54:36.053"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.019" endtime="20201030 15:54:36.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.060" endtime="20201030 15:54:36.347"></status>
</kw>
<msg timestamp="20201030 15:54:36.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.058" endtime="20201030 15:54:36.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021265556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021367181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.351" endtime="20201030 15:54:36.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.359" endtime="20201030 15:54:36.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.055" endtime="20201030 15:54:36.361"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.054" endtime="20201030 15:54:36.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.366" level="INFO">${RESULT} = [{'diff': 0.00010162499999999755}, {'diff': 0.00010173600000000158}, {'diff': 0.00010243100000000005}, {'diff': 0.00010190300000000041}, {'diff': 0.00010148600000000133}, {'diff': 0.000101666999999999...</msg>
<status status="PASS" starttime="20201030 15:54:36.363" endtime="20201030 15:54:36.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:36.370" level="INFO">${ACCURACY} = {'diff': [0.00010162499999999755, 0.00010173600000000158, 0.00010243100000000005, 0.00010190300000000041, 0.00010148600000000133, 0.00010166699999999973, 0.00010166699999999973, 0.00010215200000000119...</msg>
<status status="PASS" starttime="20201030 15:54:36.367" endtime="20201030 15:54:36.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.375" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 15:54:36.374" endtime="20201030 15:54:36.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.377" level="INFO">VALUE: [0.00010162499999999755, 0.00010173600000000158, 0.00010243100000000005, 0.00010190300000000041, 0.00010148600000000133, 0.00010166699999999973, 0.00010166699999999973, 0.00010215200000000119, 0.00010232000000000296, 0.00010236099999999873, 0.00010186099999999823, 0.00010193000000000008, 0.00010138900000000034, 0.00010191699999999998, 0.00010173600000000158, 0.000101722000000002, 0.00010227800000000078, 0.00010149999999999743, 0.00010216700000000023, 0.00010173600000000158, 0.00010226399999999775, 0.00010202699999999759, 0.0001020550000000002, 0.00010134699999999816, 0.00010166699999999973, 0.00010213899999999762, 0.00010137500000000077, 0.00010174999999999768, 0.00010162500000000102, 0.00010174999999999768, 0.00010202800000000053, 0.00010163899999999712, 0.00010233299999999959, 0.00010166600000000026, 0.00010216699999999676, 0.00010173600000000158, 0.00010222199999999904, 0.00010211099999999848, 0.0001016809999999993, 0.00010147300000000123, 0.0001020420000000001, 0.0001020420000000001, 0.00010193000000000008, 0.00010147200000000176, 0.00010186099999999823, 0.00010186099999999823, 0.00010209700000000238, 0.00010190300000000041, 0.00010179199999999985, 0.00010145899999999819]</msg>
<status status="PASS" starttime="20201030 15:54:36.376" endtime="20201030 15:54:36.379"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.371" endtime="20201030 15:54:36.380"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.383" endtime="20201030 15:54:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.382" endtime="20201030 15:54:36.403"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.381" endtime="20201030 15:54:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.017" endtime="20201030 15:54:36.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.017" endtime="20201030 15:54:36.404"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.413" endtime="20201030 15:54:36.432"></status>
</kw>
<msg timestamp="20201030 15:54:36.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.412" endtime="20201030 15:54:36.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.434" endtime="20201030 15:54:36.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.436" endtime="20201030 15:54:36.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.409" endtime="20201030 15:54:36.438"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.407" endtime="20201030 15:54:36.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.446" endtime="20201030 15:54:36.732"></status>
</kw>
<msg timestamp="20201030 15:54:36.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.444" endtime="20201030 15:54:36.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020185153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020288389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.736" endtime="20201030 15:54:36.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.744" endtime="20201030 15:54:36.746"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.441" endtime="20201030 15:54:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.439" endtime="20201030 15:54:36.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:36.751" level="INFO">${RESULT} = [{'diff': 0.0001032359999999996}, {'diff': 0.00010299999999999893}, {'diff': 0.00010334799999999963}, {'diff': 0.00010333300000000059}, {'diff': 0.00010273600000000258}, {'diff': 0.0001027359999999991...</msg>
<status status="PASS" starttime="20201030 15:54:36.748" endtime="20201030 15:54:36.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:36.756" level="INFO">${ACCURACY} = {'diff': [0.0001032359999999996, 0.00010299999999999893, 0.00010334799999999963, 0.00010333300000000059, 0.00010273600000000258, 0.0001027359999999991, 0.00010243000000000058, 0.00010243000000000058, ...</msg>
<status status="PASS" starttime="20201030 15:54:36.752" endtime="20201030 15:54:36.756"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.761" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 15:54:36.760" endtime="20201030 15:54:36.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.763" level="INFO">VALUE: [0.0001032359999999996, 0.00010299999999999893, 0.00010334799999999963, 0.00010333300000000059, 0.00010273600000000258, 0.0001027359999999991, 0.00010243000000000058, 0.00010243000000000058, 0.00010294400000000065, 0.00010277800000000128, 0.00010251400000000147, 0.00010261100000000245, 0.00010293100000000055, 0.0001028610000000027, 0.00010322200000000004, 0.00010297199999999979, 0.00010329099999999841, 0.00010330499999999798, 0.00010326400000000222, 0.0001028749999999988, 0.0001031940000000009, 0.00010313900000000209, 0.00010320899999999994, 0.00010258399999999931, 0.00010293099999999708, 0.00010302700000000206, 0.00010268000000000083, 0.00010331900000000102, 0.0001032359999999996, 0.00010274999999999868, 0.00010297199999999979, 0.0001033619999999992, 0.00010333400000000006, 0.00010248599999999886, 0.00010265299999999769, 0.00010313799999999915, 0.00010276300000000224, 0.00010309699999999991, 0.00010293099999999708, 0.00010313899999999862, 0.00010315300000000166, 0.00010279199999999739, 0.00010293100000000055, 0.00010249999999999843, 0.00010326400000000222, 0.00010315299999999819, 0.00010244400000000015, 0.00010329200000000135, 0.00010299999999999893, 0.00010274999999999868]</msg>
<status status="PASS" starttime="20201030 15:54:36.762" endtime="20201030 15:54:36.764"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.757" endtime="20201030 15:54:36.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:36.769" endtime="20201030 15:54:36.788"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.767" endtime="20201030 15:54:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.766" endtime="20201030 15:54:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.405" endtime="20201030 15:54:36.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.405" endtime="20201030 15:54:36.790"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.799" endtime="20201030 15:54:36.817"></status>
</kw>
<msg timestamp="20201030 15:54:36.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.797" endtime="20201030 15:54:36.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:36.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:36.819" endtime="20201030 15:54:36.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.821" endtime="20201030 15:54:36.823"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.794" endtime="20201030 15:54:36.824"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.792" endtime="20201030 15:54:36.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:36.831" endtime="20201030 15:54:37.118"></status>
</kw>
<msg timestamp="20201030 15:54:37.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:36.829" endtime="20201030 15:54:37.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020698875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020802236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.123" endtime="20201030 15:54:37.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.131" endtime="20201030 15:54:37.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.827" endtime="20201030 15:54:37.133"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.825" endtime="20201030 15:54:37.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.138" level="INFO">${RESULT} = [{'diff': 0.0001033610000000032}, {'diff': 0.00010431899999999855}, {'diff': 0.00010374999999999968}, {'diff': 0.00010394500000000112}, {'diff': 0.0001036810000000013}, {'diff': 0.00010376399999999925...</msg>
<status status="PASS" starttime="20201030 15:54:37.135" endtime="20201030 15:54:37.138"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:37.142" level="INFO">${ACCURACY} = {'diff': [0.0001033610000000032, 0.00010431899999999855, 0.00010374999999999968, 0.00010394500000000112, 0.0001036810000000013, 0.00010376399999999925, 0.00010370900000000044, 0.00010409800000000038, ...</msg>
<status status="PASS" starttime="20201030 15:54:37.139" endtime="20201030 15:54:37.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.147" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 15:54:37.146" endtime="20201030 15:54:37.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.149" level="INFO">VALUE: [0.0001033610000000032, 0.00010431899999999855, 0.00010374999999999968, 0.00010394500000000112, 0.0001036810000000013, 0.00010376399999999925, 0.00010370900000000044, 0.00010409800000000038, 0.00010362499999999955, 0.00010383300000000109, 0.00010398600000000036, 0.00010429199999999889, 0.00010415300000000266, 0.00010419500000000137, 0.00010402800000000254, 0.00010408400000000081, 0.00010345900000000019, 0.00010369500000000087, 0.00010361099999999998, 0.00010427699999999984, 0.00010413899999999962, 0.00010348599999999986, 0.00010408300000000134, 0.00010409800000000038, 0.00010363900000000259, 0.00010376399999999925, 0.000103513999999999, 0.00010369500000000087, 0.00010419399999999843, 0.00010383300000000109, 0.00010341699999999801, 0.00010390299999999894, 0.00010412500000000005, 0.00010361099999999998, 0.00010340300000000191, 0.00010363900000000259, 0.00010425000000000018, 0.0001040139999999995, 0.00010429099999999941, 0.00010408299999999787, 0.00010422200000000104, 0.00010366699999999826, 0.00010365300000000216, 0.00010343099999999758, 0.00010391699999999851, 0.00010365299999999869, 0.00010380599999999796, 0.00010397300000000026, 0.00010377800000000229, 0.00010429099999999941]</msg>
<status status="PASS" starttime="20201030 15:54:37.148" endtime="20201030 15:54:37.150"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.143" endtime="20201030 15:54:37.151"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.155" endtime="20201030 15:54:37.174"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.153" endtime="20201030 15:54:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.152" endtime="20201030 15:54:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.791" endtime="20201030 15:54:37.175"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:36.790" endtime="20201030 15:54:37.176"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.185" endtime="20201030 15:54:37.206"></status>
</kw>
<msg timestamp="20201030 15:54:37.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.183" endtime="20201030 15:54:37.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.207" endtime="20201030 15:54:37.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.210" endtime="20201030 15:54:37.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.180" endtime="20201030 15:54:37.212"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.178" endtime="20201030 15:54:37.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.220" endtime="20201030 15:54:37.506"></status>
</kw>
<msg timestamp="20201030 15:54:37.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.218" endtime="20201030 15:54:37.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021231514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021336167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.510" endtime="20201030 15:54:37.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.518" endtime="20201030 15:54:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.215" endtime="20201030 15:54:37.521"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.213" endtime="20201030 15:54:37.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.525" level="INFO">${RESULT} = [{'diff': 0.00010465299999999969}, {'diff': 0.00010508400000000181}, {'diff': 0.00010461100000000098}, {'diff': 0.00010486100000000123}, {'diff': 0.00010440199999999997}, {'diff': 0.000105346999999998...</msg>
<status status="PASS" starttime="20201030 15:54:37.522" endtime="20201030 15:54:37.525"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:37.529" level="INFO">${ACCURACY} = {'diff': [0.00010465299999999969, 0.00010508400000000181, 0.00010461100000000098, 0.00010486100000000123, 0.00010440199999999997, 0.00010534699999999869, 0.00010475000000000068, 0.00010526400000000075...</msg>
<status status="PASS" starttime="20201030 15:54:37.526" endtime="20201030 15:54:37.530"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.534" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 15:54:37.533" endtime="20201030 15:54:37.534"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.536" level="INFO">VALUE: [0.00010465299999999969, 0.00010508400000000181, 0.00010461100000000098, 0.00010486100000000123, 0.00010440199999999997, 0.00010534699999999869, 0.00010475000000000068, 0.00010526400000000075, 0.00010491700000000298, 0.00010502800000000007, 0.00010454100000000313, 0.00010509799999999792, 0.00010518099999999933, 0.00010444400000000215, 0.00010527800000000032, 0.00010492999999999961, 0.00010530499999999998, 0.00010481899999999905, 0.00010480599999999896, 0.00010479199999999939, 0.00010457000000000174, 0.00010490299999999994, 0.0001045559999999987, 0.00010531899999999955, 0.0001045689999999988, 0.00010517999999999986, 0.00010486100000000123, 0.00010436100000000073, 0.00010520800000000247, 0.0001052360000000016, 0.00010472300000000101, 0.00010454199999999914, 0.0001043620000000002, 0.00010477700000000034, 0.00010475000000000068, 0.00010463900000000012, 0.00010497200000000179, 0.00010513899999999715, 0.00010533299999999912, 0.0001051949999999989, 0.00010533400000000206, 0.00010445900000000119, 0.00010469399999999893, 0.00010458300000000184, 0.00010515300000000019, 0.00010486099999999776, 0.00010461100000000098, 0.00010433299999999812, 0.0001050689999999993, 0.00010462500000000055]</msg>
<status status="PASS" starttime="20201030 15:54:37.535" endtime="20201030 15:54:37.538"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.530" endtime="20201030 15:54:37.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.543" endtime="20201030 15:54:37.562"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.541" endtime="20201030 15:54:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.540" endtime="20201030 15:54:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.176" endtime="20201030 15:54:37.563"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.176" endtime="20201030 15:54:37.563"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.573" endtime="20201030 15:54:37.592"></status>
</kw>
<msg timestamp="20201030 15:54:37.592" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.571" endtime="20201030 15:54:37.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.593" endtime="20201030 15:54:37.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.596" endtime="20201030 15:54:37.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.568" endtime="20201030 15:54:37.598"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.566" endtime="20201030 15:54:37.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.605" endtime="20201030 15:54:37.892"></status>
</kw>
<msg timestamp="20201030 15:54:37.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.604" endtime="20201030 15:54:37.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020378583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020484111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.896" endtime="20201030 15:54:37.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.904" endtime="20201030 15:54:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.601" endtime="20201030 15:54:37.906"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.599" endtime="20201030 15:54:37.907"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:37.911" level="INFO">${RESULT} = [{'diff': 0.00010552800000000057}, {'diff': 0.00010598600000000236}, {'diff': 0.00010580599999999996}, {'diff': 0.00010566700000000026}, {'diff': 0.00010577799999999735}, {'diff': 0.000105375000000001...</msg>
<status status="PASS" starttime="20201030 15:54:37.908" endtime="20201030 15:54:37.911"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:37.916" level="INFO">${ACCURACY} = {'diff': [0.00010552800000000057, 0.00010598600000000236, 0.00010580599999999996, 0.00010566700000000026, 0.00010577799999999735, 0.0001053750000000013, 0.00010623699999999861, 0.00010538900000000087,...</msg>
<status status="PASS" starttime="20201030 15:54:37.912" endtime="20201030 15:54:37.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.921" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 15:54:37.920" endtime="20201030 15:54:37.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.923" level="INFO">VALUE: [0.00010552800000000057, 0.00010598600000000236, 0.00010580599999999996, 0.00010566700000000026, 0.00010577799999999735, 0.0001053750000000013, 0.00010623699999999861, 0.00010538900000000087, 0.00010604199999999717, 0.00010576400000000125, 0.00010629200000000089, 0.00010598599999999889, 0.00010591700000000051, 0.00010598599999999889, 0.00010587499999999833, 0.00010620899999999947, 0.00010630500000000098, 0.00010554100000000066, 0.00010580599999999996, 0.00010633300000000012, 0.00010604200000000064, 0.00010587499999999833, 0.000106208, 0.00010597199999999932, 0.0001057360000000021, 0.00010618100000000033, 0.00010575000000000168, 0.00010584699999999919, 0.00010591600000000104, 0.00010612499999999858, 0.00010584699999999919, 0.0001062499999999987, 0.00010602800000000107, 0.00010616700000000076, 0.00010632000000000003, 0.00010565300000000069, 0.00010586199999999824, 0.00010611099999999901, 0.00010634699999999969, 0.0001057360000000021, 0.00010629199999999742, 0.00010598600000000236, 0.00010573599999999864, 0.00010632000000000003, 0.00010604200000000064, 0.00010561100000000198, 0.00010543000000000011, 0.00010583299999999962, 0.0001060690000000003, 0.0001053750000000013]</msg>
<status status="PASS" starttime="20201030 15:54:37.922" endtime="20201030 15:54:37.924"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.917" endtime="20201030 15:54:37.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:37.929" endtime="20201030 15:54:37.948"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.927" endtime="20201030 15:54:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.926" endtime="20201030 15:54:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.564" endtime="20201030 15:54:37.949"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.564" endtime="20201030 15:54:37.949"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.958" endtime="20201030 15:54:37.979"></status>
</kw>
<msg timestamp="20201030 15:54:37.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.957" endtime="20201030 15:54:37.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:37.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:37.981" endtime="20201030 15:54:37.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.983" endtime="20201030 15:54:37.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.954" endtime="20201030 15:54:37.985"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.952" endtime="20201030 15:54:37.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:37.993" endtime="20201030 15:54:38.280"></status>
</kw>
<msg timestamp="20201030 15:54:38.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:37.991" endtime="20201030 15:54:38.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020785139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020891486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.284" endtime="20201030 15:54:38.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.292" endtime="20201030 15:54:38.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.988" endtime="20201030 15:54:38.295"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.987" endtime="20201030 15:54:38.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.299" level="INFO">${RESULT} = [{'diff': 0.00010634699999999969}, {'diff': 0.00010733399999999713}, {'diff': 0.00010705599999999774}, {'diff': 0.00010709699999999697}, {'diff': 0.00010661100000000298}, {'diff': 0.000106999999999999...</msg>
<status status="PASS" starttime="20201030 15:54:38.296" endtime="20201030 15:54:38.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:38.303" level="INFO">${ACCURACY} = {'diff': [0.00010634699999999969, 0.00010733399999999713, 0.00010705599999999774, 0.00010709699999999697, 0.00010661100000000298, 0.00010699999999999946, 0.00010722200000000057, 0.00010709700000000044...</msg>
<status status="PASS" starttime="20201030 15:54:38.300" endtime="20201030 15:54:38.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.308" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 15:54:38.307" endtime="20201030 15:54:38.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.310" level="INFO">VALUE: [0.00010634699999999969, 0.00010733399999999713, 0.00010705599999999774, 0.00010709699999999697, 0.00010661100000000298, 0.00010699999999999946, 0.00010722200000000057, 0.00010709700000000044, 0.00010699999999999946, 0.0001070829999999974, 0.00010693100000000108, 0.00010690299999999847, 0.00010658399999999985, 0.00010673599999999964, 0.00010684799999999967, 0.00010704199999999817, 0.00010651399999999853, 0.00010663900000000212, 0.0001068340000000001, 0.00010698599999999989, 0.0001070279999999986, 0.00010693100000000108, 0.00010707000000000078, 0.00010679200000000139, 0.0001065560000000007, 0.00010651399999999853, 0.00010673599999999964, 0.00010663900000000212, 0.00010669400000000093, 0.00010645799999999678, 0.00010699999999999946, 0.00010731900000000155, 0.00010708300000000087, 0.00010645899999999972, 0.00010687499999999933, 0.00010662499999999908, 0.00010729100000000241, 0.00010663899999999865, 0.0001067499999999992, 0.00010672200000000007, 0.0001070829999999974, 0.00010687499999999933, 0.00010668100000000083, 0.00010695800000000075, 0.00010698599999999989, 0.00010699999999999946, 0.00010638799999999893, 0.00010676399999999878, 0.00010644400000000068, 0.00010681899999999758]</msg>
<status status="PASS" starttime="20201030 15:54:38.309" endtime="20201030 15:54:38.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.304" endtime="20201030 15:54:38.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.348" endtime="20201030 15:54:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.346" endtime="20201030 15:54:38.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.344" endtime="20201030 15:54:38.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.950" endtime="20201030 15:54:38.368"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:37.950" endtime="20201030 15:54:38.368"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.378" endtime="20201030 15:54:38.398"></status>
</kw>
<msg timestamp="20201030 15:54:38.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.376" endtime="20201030 15:54:38.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.400" endtime="20201030 15:54:38.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.402" endtime="20201030 15:54:38.404"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.373" endtime="20201030 15:54:38.405"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.371" endtime="20201030 15:54:38.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.412" endtime="20201030 15:54:38.698"></status>
</kw>
<msg timestamp="20201030 15:54:38.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.410" endtime="20201030 15:54:38.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021287903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021396056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.702" endtime="20201030 15:54:38.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.711" endtime="20201030 15:54:38.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.408" endtime="20201030 15:54:38.713"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.406" endtime="20201030 15:54:38.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:38.718" level="INFO">${RESULT} = [{'diff': 0.00010815299999999972}, {'diff': 0.00010761100000000051}, {'diff': 0.00010740300000000244}, {'diff': 0.0001077500000000002}, {'diff': 0.00010816699999999929}, {'diff': 0.0001080829999999984...</msg>
<status status="PASS" starttime="20201030 15:54:38.714" endtime="20201030 15:54:38.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:38.722" level="INFO">${ACCURACY} = {'diff': [0.00010815299999999972, 0.00010761100000000051, 0.00010740300000000244, 0.0001077500000000002, 0.00010816699999999929, 0.0001080829999999984, 0.00010813900000000015, 0.00010826400000000028, ...</msg>
<status status="PASS" starttime="20201030 15:54:38.719" endtime="20201030 15:54:38.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.726" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 15:54:38.725" endtime="20201030 15:54:38.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.730" level="INFO">VALUE: [0.00010815299999999972, 0.00010761100000000051, 0.00010740300000000244, 0.0001077500000000002, 0.00010816699999999929, 0.0001080829999999984, 0.00010813900000000015, 0.00010826400000000028, 0.00010816700000000276, 0.00010792999999999914, 0.0001077089999999975, 0.00010749999999999996, 0.00010773600000000064, 0.00010780499999999901, 0.00010813900000000015, 0.00010736100000000026, 0.00010779199999999892, 0.00010834699999999822, 0.00010763899999999965, 0.00010813900000000015, 0.00010736199999999974, 0.00010812500000000058, 0.00010834699999999822, 0.00010798599999999742, 0.00010794400000000218, 0.00010766699999999879, 0.00010819499999999843, 0.00010808400000000135, 0.00010740299999999897, 0.00010748699999999986, 0.000108208000000002, 0.0001077080000000015, 0.00010786099999999729, 0.00010768000000000236, 0.00010797200000000132, 0.0001080690000000023, 0.00010772200000000107, 0.00010761099999999704, 0.00010766699999999879, 0.00010786099999999729, 0.00010819399999999896, 0.00010766600000000279, 0.0001080690000000023, 0.00010773600000000064, 0.00010758300000000137, 0.00010794500000000165, 0.00010807000000000178, 0.00010794499999999818, 0.00010763899999999965, 0.00010812500000000058]</msg>
<status status="PASS" starttime="20201030 15:54:38.728" endtime="20201030 15:54:38.731"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.723" endtime="20201030 15:54:38.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:38.735" endtime="20201030 15:54:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.734" endtime="20201030 15:54:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.732" endtime="20201030 15:54:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.369" endtime="20201030 15:54:38.756"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.369" endtime="20201030 15:54:38.756"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.765" endtime="20201030 15:54:38.786"></status>
</kw>
<msg timestamp="20201030 15:54:38.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.763" endtime="20201030 15:54:38.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:38.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:38.788" endtime="20201030 15:54:38.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.790" endtime="20201030 15:54:38.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.761" endtime="20201030 15:54:38.792"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.759" endtime="20201030 15:54:38.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:38.800" endtime="20201030 15:54:39.086"></status>
</kw>
<msg timestamp="20201030 15:54:39.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:38.798" endtime="20201030 15:54:39.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020902861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021011431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.090" endtime="20201030 15:54:39.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.099" endtime="20201030 15:54:39.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.795" endtime="20201030 15:54:39.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.793" endtime="20201030 15:54:39.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.105" level="INFO">${RESULT} = [{'diff': 0.00010857000000000228}, {'diff': 0.00010838799999999746}, {'diff': 0.00010862500000000108}, {'diff': 0.00010904200000000017}, {'diff': 0.00010867999999999989}, {'diff': 0.000108971999999998...</msg>
<status status="PASS" starttime="20201030 15:54:39.102" endtime="20201030 15:54:39.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:39.110" level="INFO">${ACCURACY} = {'diff': [0.00010857000000000228, 0.00010838799999999746, 0.00010862500000000108, 0.00010904200000000017, 0.00010867999999999989, 0.00010897199999999885, 0.00010850000000000096, 0.00010897299999999832...</msg>
<status status="PASS" starttime="20201030 15:54:39.106" endtime="20201030 15:54:39.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.115" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 15:54:39.114" endtime="20201030 15:54:39.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.118" level="INFO">VALUE: [0.00010857000000000228, 0.00010838799999999746, 0.00010862500000000108, 0.00010904200000000017, 0.00010867999999999989, 0.00010897199999999885, 0.00010850000000000096, 0.00010897299999999832, 0.00010879199999999992, 0.00010866600000000032, 0.00010867999999999989, 0.00010915200000000125, 0.00010930500000000051, 0.0001087219999999986, 0.00010861100000000151, 0.00010869399999999946, 0.00010926399999999781, 0.00010911100000000201, 0.00010848599999999792, 0.00010875000000000121, 0.00010937499999999836, 0.00010867999999999989, 0.00010834699999999822, 0.0001092219999999991, 0.00010926399999999781, 0.00010931999999999956, 0.00010931999999999956, 0.00010913900000000115, 0.00010915300000000072, 0.00010922299999999857, 0.00010877700000000087, 0.00010933300000000312, 0.00010863899999999718, 0.00010897199999999885, 0.00010918000000000039, 0.00010927800000000085, 0.00010926399999999781, 0.00010912499999999811, 0.00010901399999999756, 0.00010898599999999842, 0.00010876400000000078, 0.00010881899999999958, 0.00010836100000000126, 0.00010876400000000078, 0.00010886100000000176, 0.00010909699999999897, 0.00010901400000000103, 0.00010880599999999949, 0.00010855599999999924, 0.00010854199999999967]</msg>
<status status="PASS" starttime="20201030 15:54:39.116" endtime="20201030 15:54:39.118"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.111" endtime="20201030 15:54:39.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.123" endtime="20201030 15:54:39.142"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.121" endtime="20201030 15:54:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.120" endtime="20201030 15:54:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.757" endtime="20201030 15:54:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:38.756" endtime="20201030 15:54:39.144"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.153" endtime="20201030 15:54:39.173"></status>
</kw>
<msg timestamp="20201030 15:54:39.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.151" endtime="20201030 15:54:39.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.174" endtime="20201030 15:54:39.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.177" endtime="20201030 15:54:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.149" endtime="20201030 15:54:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.146" endtime="20201030 15:54:39.180"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.186" endtime="20201030 15:54:39.478"></status>
</kw>
<msg timestamp="20201030 15:54:39.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.185" endtime="20201030 15:54:39.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020287542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020396889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.483" endtime="20201030 15:54:39.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.491" endtime="20201030 15:54:39.492"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.182" endtime="20201030 15:54:39.493"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.180" endtime="20201030 15:54:39.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.498" level="INFO">${RESULT} = [{'diff': 0.00010934700000000269}, {'diff': 0.00010954200000000067}, {'diff': 0.0001100700000000003}, {'diff': 0.00010998699999999889}, {'diff': 0.00011011100000000301}, {'diff': 0.0001095549999999973...</msg>
<status status="PASS" starttime="20201030 15:54:39.494" endtime="20201030 15:54:39.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:39.502" level="INFO">${ACCURACY} = {'diff': [0.00010934700000000269, 0.00010954200000000067, 0.0001100700000000003, 0.00010998699999999889, 0.00011011100000000301, 0.0001095549999999973, 0.00010948600000000239, 0.00010977799999999788, ...</msg>
<status status="PASS" starttime="20201030 15:54:39.499" endtime="20201030 15:54:39.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.506" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 15:54:39.505" endtime="20201030 15:54:39.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.509" level="INFO">VALUE: [0.00010934700000000269, 0.00010954200000000067, 0.0001100700000000003, 0.00010998699999999889, 0.00011011100000000301, 0.0001095549999999973, 0.00010948600000000239, 0.00010977799999999788, 0.00010995899999999975, 0.00010984699999999972, 0.00011026399999999881, 0.00010976399999999831, 0.00010950000000000196, 0.00010993000000000114, 0.00011001299999999908, 0.00011024999999999924, 0.00010955500000000076, 0.00010973599999999917, 0.00010986099999999929, 0.00010980600000000049, 0.00011008399999999988, 0.00010973599999999917, 0.00010973700000000211, 0.00010936100000000226, 0.00010983300000000015, 0.00011027800000000185, 0.00011018100000000086, 0.00010947200000000282, 0.00011005600000000074, 0.00010980600000000049, 0.00010968100000000036, 0.00010987499999999886, 0.00010945799999999978, 0.00011012499999999911, 0.00010984699999999972, 0.00010949999999999849, 0.00011020800000000053, 0.00010948599999999892, 0.00011005600000000074, 0.00010986099999999929, 0.00010962499999999861, 0.00010950000000000196, 0.00010945799999999978, 0.00010999999999999899, 0.00011036099999999979, 0.00010941600000000107, 0.00011019400000000096, 0.00010966700000000079, 0.00010993100000000061, 0.00010961099999999904]</msg>
<status status="PASS" starttime="20201030 15:54:39.508" endtime="20201030 15:54:39.510"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.503" endtime="20201030 15:54:39.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.514" endtime="20201030 15:54:39.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.513" endtime="20201030 15:54:39.534"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.511" endtime="20201030 15:54:39.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.145" endtime="20201030 15:54:39.535"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.144" endtime="20201030 15:54:39.535"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.544" endtime="20201030 15:54:39.565"></status>
</kw>
<msg timestamp="20201030 15:54:39.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.542" endtime="20201030 15:54:39.566"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.567" endtime="20201030 15:54:39.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.569" endtime="20201030 15:54:39.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.540" endtime="20201030 15:54:39.571"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.538" endtime="20201030 15:54:39.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.579" endtime="20201030 15:54:39.865"></status>
</kw>
<msg timestamp="20201030 15:54:39.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.577" endtime="20201030 15:54:39.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021823403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021934708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.869" endtime="20201030 15:54:39.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.878" endtime="20201030 15:54:39.879"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.574" endtime="20201030 15:54:39.880"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.573" endtime="20201030 15:54:39.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:39.884" level="INFO">${RESULT} = [{'diff': 0.00011130499999999904}, {'diff': 0.00011115299999999925}, {'diff': 0.00011116699999999882}, {'diff': 0.00011061100000000004}, {'diff': 0.000110902999999999}, {'diff': 0.000110902999999999},...</msg>
<status status="PASS" starttime="20201030 15:54:39.881" endtime="20201030 15:54:39.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:39.889" level="INFO">${ACCURACY} = {'diff': [0.00011130499999999904, 0.00011115299999999925, 0.00011116699999999882, 0.00011061100000000004, 0.000110902999999999, 0.000110902999999999, 0.00011041699999999807, 0.00011126399999999981, 0....</msg>
<status status="PASS" starttime="20201030 15:54:39.885" endtime="20201030 15:54:39.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.893" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 15:54:39.892" endtime="20201030 15:54:39.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.896" level="INFO">VALUE: [0.00011130499999999904, 0.00011115299999999925, 0.00011116699999999882, 0.00011061100000000004, 0.000110902999999999, 0.000110902999999999, 0.00011041699999999807, 0.00011126399999999981, 0.000111209000000001, 0.00011062499999999961, 0.0001112769999999999, 0.00011051399999999906, 0.00011095800000000128, 0.0001107220000000006, 0.00011073600000000017, 0.00011084700000000072, 0.0001105700000000008, 0.00011072300000000007, 0.00011074999999999974, 0.00011056900000000133, 0.00011132000000000156, 0.00011037500000000283, 0.00011043099999999764, 0.00011102799999999913, 0.00011086100000000029, 0.00011097200000000085, 0.00011059799999999995, 0.00011062499999999961, 0.00011088799999999996, 0.00011109700000000097, 0.0001110419999999987, 0.00011133299999999818, 0.000110902999999999, 0.00011104200000000217, 0.00011043099999999764, 0.00011044500000000068, 0.00011113899999999968, 0.0001110549999999988, 0.00011037499999999936, 0.00011087499999999986, 0.00011066699999999832, 0.00011120799999999806, 0.00011063899999999918, 0.00011108400000000088, 0.00011061100000000004, 0.00011116599999999935, 0.00011069400000000146, 0.00011094400000000171, 0.00011102699999999965, 0.000110902999999999]</msg>
<status status="PASS" starttime="20201030 15:54:39.894" endtime="20201030 15:54:39.897"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.890" endtime="20201030 15:54:39.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:39.902" endtime="20201030 15:54:39.921"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.900" endtime="20201030 15:54:39.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.899" endtime="20201030 15:54:39.922"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.536" endtime="20201030 15:54:39.923"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.535" endtime="20201030 15:54:39.923"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.932" endtime="20201030 15:54:39.952"></status>
</kw>
<msg timestamp="20201030 15:54:39.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.930" endtime="20201030 15:54:39.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:39.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:39.953" endtime="20201030 15:54:39.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.956" endtime="20201030 15:54:39.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.928" endtime="20201030 15:54:39.958"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.925" endtime="20201030 15:54:39.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:39.965" endtime="20201030 15:54:40.252"></status>
</kw>
<msg timestamp="20201030 15:54:40.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:39.964" endtime="20201030 15:54:40.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020269125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020381444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.256" endtime="20201030 15:54:40.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.264" endtime="20201030 15:54:40.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.961" endtime="20201030 15:54:40.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.959" endtime="20201030 15:54:40.267"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.271" level="INFO">${RESULT} = [{'diff': 0.00011231899999999961}, {'diff': 0.00011163900000000018}, {'diff': 0.00011177799999999988}, {'diff': 0.00011193099999999914}, {'diff': 0.00011144500000000168}, {'diff': 0.000112278000000000...</msg>
<status status="PASS" starttime="20201030 15:54:40.268" endtime="20201030 15:54:40.271"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:40.276" level="INFO">${ACCURACY} = {'diff': [0.00011231899999999961, 0.00011163900000000018, 0.00011177799999999988, 0.00011193099999999914, 0.00011144500000000168, 0.00011227800000000038, 0.0001123749999999979, 0.00011145899999999778,...</msg>
<status status="PASS" starttime="20201030 15:54:40.272" endtime="20201030 15:54:40.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.281" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 15:54:40.280" endtime="20201030 15:54:40.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.283" level="INFO">VALUE: [0.00011231899999999961, 0.00011163900000000018, 0.00011177799999999988, 0.00011193099999999914, 0.00011144500000000168, 0.00011227800000000038, 0.0001123749999999979, 0.00011145899999999778, 0.00011147299999999735, 0.00011226299999999786, 0.00011152700000000015, 0.0001117220000000016, 0.00011179099999999997, 0.00011137500000000036, 0.00011208399999999841, 0.0001115419999999992, 0.0001120830000000024, 0.00011145900000000125, 0.00011231999999999909, 0.00011184700000000172, 0.00011197200000000185, 0.00011187500000000086, 0.00011236099999999832, 0.00011215300000000025, 0.00011166699999999932, 0.00011162500000000061, 0.00011191700000000304, 0.00011140300000000297, 0.00011158299999999843, 0.00011181899999999911, 0.00011179199999999945, 0.0001117220000000016, 0.00011193099999999914, 0.00011202800000000013, 0.00011193099999999914, 0.00011173700000000064, 0.00011188900000000043, 0.000111596999999998, 0.00011165199999999681, 0.0001122770000000009, 0.0001119160000000001, 0.00011211100000000154, 0.00011206900000000283, 0.00011219499999999896, 0.00011193099999999914, 0.00011170899999999803, 0.00011229199999999995, 0.0001114159999999996, 0.00011156899999999886, 0.00011198599999999795]</msg>
<status status="PASS" starttime="20201030 15:54:40.282" endtime="20201030 15:54:40.284"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.277" endtime="20201030 15:54:40.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.289" endtime="20201030 15:54:40.308"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.287" endtime="20201030 15:54:40.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.286" endtime="20201030 15:54:40.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.924" endtime="20201030 15:54:40.309"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:39.923" endtime="20201030 15:54:40.309"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.319" endtime="20201030 15:54:40.339"></status>
</kw>
<msg timestamp="20201030 15:54:40.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.317" endtime="20201030 15:54:40.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.341" endtime="20201030 15:54:40.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.343" endtime="20201030 15:54:40.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.314" endtime="20201030 15:54:40.345"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.312" endtime="20201030 15:54:40.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.353" endtime="20201030 15:54:40.640"></status>
</kw>
<msg timestamp="20201030 15:54:40.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.351" endtime="20201030 15:54:40.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.645" endtime="20201030 15:54:40.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.653" endtime="20201030 15:54:40.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.348" endtime="20201030 15:54:40.655"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.347" endtime="20201030 15:54:40.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:40.660" level="INFO">${RESULT} = [{'diff': 0.0001132770000000019}, {'diff': 0.0001134030000000015}, {'diff': 0.0001130550000000008}, {'diff': 0.0001127359999999987}, {'diff': 0.00011297199999999938}, {'diff': 0.00011294400000000024},...</msg>
<status status="PASS" starttime="20201030 15:54:40.656" endtime="20201030 15:54:40.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:40.664" level="INFO">${ACCURACY} = {'diff': [0.0001132770000000019, 0.0001134030000000015, 0.0001130550000000008, 0.0001127359999999987, 0.00011297199999999938, 0.00011294400000000024, 0.00011244499999999921, 0.00011324999999999877, 0....</msg>
<status status="PASS" starttime="20201030 15:54:40.661" endtime="20201030 15:54:40.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.669" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 15:54:40.668" endtime="20201030 15:54:40.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.671" level="INFO">VALUE: [0.0001132770000000019, 0.0001134030000000015, 0.0001130550000000008, 0.0001127359999999987, 0.00011297199999999938, 0.00011294400000000024, 0.00011244499999999921, 0.00011324999999999877, 0.00011258399999999891, 0.00011309799999999898, 0.00011286099999999882, 0.00011309799999999898, 0.00011324999999999877, 0.00011273600000000217, 0.00011261099999999857, 0.00011327800000000138, 0.0001123749999999979, 0.00011261099999999857, 0.00011269500000000293, 0.00011324999999999877, 0.0001124160000000006, 0.00011308299999999993, 0.00011262499999999814, 0.00011330500000000104, 0.00011288900000000143, 0.00011284699999999925, 0.00011283299999999968, 0.00011313900000000168, 0.00011336200000000227, 0.00011324999999999877, 0.00011308299999999993, 0.0001130969999999995, 0.00011243000000000017, 0.00011331900000000061, 0.00011243099999999964, 0.00011261100000000204, 0.00011297300000000232, 0.00011318100000000039, 0.00011243099999999964, 0.00011300000000000199, 0.00011327800000000138, 0.00011284699999999925, 0.00011286099999999882, 0.00011269399999999999, 0.00011244399999999974, 0.00011327800000000138, 0.0001125420000000002, 0.00011327800000000138, 0.00011319499999999996, 0.00011266599999999738]</msg>
<status status="PASS" starttime="20201030 15:54:40.670" endtime="20201030 15:54:40.672"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.665" endtime="20201030 15:54:40.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:40.676" endtime="20201030 15:54:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.675" endtime="20201030 15:54:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.674" endtime="20201030 15:54:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.310" endtime="20201030 15:54:40.697"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.310" endtime="20201030 15:54:40.698"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.708" endtime="20201030 15:54:40.729"></status>
</kw>
<msg timestamp="20201030 15:54:40.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.706" endtime="20201030 15:54:40.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:40.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:40.731" endtime="20201030 15:54:40.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.733" endtime="20201030 15:54:40.735"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.703" endtime="20201030 15:54:40.736"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.700" endtime="20201030 15:54:40.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:40.743" endtime="20201030 15:54:41.029"></status>
</kw>
<msg timestamp="20201030 15:54:41.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:40.741" endtime="20201030 15:54:41.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022609083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022723181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.033" endtime="20201030 15:54:41.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.042" endtime="20201030 15:54:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.739" endtime="20201030 15:54:41.044"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.737" endtime="20201030 15:54:41.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.049" level="INFO">${RESULT} = [{'diff': 0.00011409799999999998}, {'diff': 0.00011366600000000185}, {'diff': 0.00011336100000000279}, {'diff': 0.0001133749999999989}, {'diff': 0.00011420800000000106}, {'diff': 0.0001135000000000024...</msg>
<status status="PASS" starttime="20201030 15:54:41.045" endtime="20201030 15:54:41.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:41.053" level="INFO">${ACCURACY} = {'diff': [0.00011409799999999998, 0.00011366600000000185, 0.00011336100000000279, 0.0001133749999999989, 0.00011420800000000106, 0.00011350000000000249, 0.00011361099999999957, 0.00011337500000000236,...</msg>
<status status="PASS" starttime="20201030 15:54:41.050" endtime="20201030 15:54:41.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.058" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 15:54:41.057" endtime="20201030 15:54:41.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.060" level="INFO">VALUE: [0.00011409799999999998, 0.00011366600000000185, 0.00011336100000000279, 0.0001133749999999989, 0.00011420800000000106, 0.00011350000000000249, 0.00011361099999999957, 0.00011337500000000236, 0.00011418099999999792, 0.00011420900000000053, 0.0001137359999999997, 0.00011366599999999838, 0.00011431900000000161, 0.00011379200000000145, 0.00011379199999999798, 0.00011372200000000013, 0.00011436100000000032, 0.00011365299999999828, 0.00011376399999999884, 0.00011356900000000086, 0.00011402700000000265, 0.0001142360000000002, 0.00011337500000000236, 0.0001140420000000017, 0.00011397200000000038, 0.00011418100000000139, 0.00011381999999999712, 0.00011365300000000175, 0.00011417999999999845, 0.00011395800000000081, 0.000114290999999999, 0.00011416699999999835, 0.0001137359999999997, 0.00011362499999999914, 0.00011427800000000238, 0.00011432000000000109, 0.0001137359999999997, 0.0001142360000000002, 0.00011395800000000081, 0.00011343000000000117, 0.00011398599999999995, 0.00011433300000000118, 0.00011429199999999848, 0.00011419500000000096, 0.0001140420000000017, 0.0001140420000000017, 0.00011417999999999845, 0.0001137359999999997, 0.00011388899999999896, 0.00011429199999999848]</msg>
<status status="PASS" starttime="20201030 15:54:41.059" endtime="20201030 15:54:41.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.054" endtime="20201030 15:54:41.062"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.066" endtime="20201030 15:54:41.086"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.065" endtime="20201030 15:54:41.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.063" endtime="20201030 15:54:41.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.699" endtime="20201030 15:54:41.087"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:40.698" endtime="20201030 15:54:41.087"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.096" endtime="20201030 15:54:41.117"></status>
</kw>
<msg timestamp="20201030 15:54:41.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.095" endtime="20201030 15:54:41.118"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:41.119" endtime="20201030 15:54:41.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.122" endtime="20201030 15:54:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.092" endtime="20201030 15:54:41.124"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.090" endtime="20201030 15:54:41.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.131" endtime="20201030 15:54:41.417"></status>
</kw>
<msg timestamp="20201030 15:54:41.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.130" endtime="20201030 15:54:41.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021291472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021406306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:41.421" endtime="20201030 15:54:41.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:41.430" endtime="20201030 15:54:41.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.127" endtime="20201030 15:54:41.432"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.125" endtime="20201030 15:54:41.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:41.436" level="INFO">${RESULT} = [{'diff': 0.00011483400000000116}, {'diff': 0.00011506999999999837}, {'diff': 0.00011465299999999928}, {'diff': 0.00011434700000000075}, {'diff': 0.00011466599999999938}, {'diff': 0.000115319000000002...</msg>
<status status="PASS" starttime="20201030 15:54:41.433" endtime="20201030 15:54:41.437"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 15:54:41.442" level="INFO">${ACCURACY} = {'diff': [0.00011483400000000116, 0.00011506999999999837, 0.00011465299999999928, 0.00011434700000000075, 0.00011466599999999938, 0.00011531900000000261, 0.00011475000000000027, 0.00011462500000000014...</msg>
<status status="PASS" starttime="20201030 15:54:41.437" endtime="20201030 15:54:41.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.446" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 15:54:41.445" endtime="20201030 15:54:41.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.449" level="INFO">VALUE: [0.00011483400000000116, 0.00011506999999999837, 0.00011465299999999928, 0.00011434700000000075, 0.00011466599999999938, 0.00011531900000000261, 0.00011475000000000027, 0.00011462500000000014, 0.00011469500000000146, 0.00011477799999999941, 0.00011473700000000017, 0.00011450000000000002, 0.00011481899999999864, 0.00011443099999999817, 0.00011463899999999971, 0.00011505499999999932, 0.0001150970000000015, 0.00011470800000000156, 0.00011501400000000009, 0.00011457000000000134, 0.00011454199999999873, 0.00011527699999999697, 0.00011477699999999993, 0.00011488899999999996, 0.00011461100000000057, 0.00011525000000000077, 0.00011483300000000168, 0.00011433399999999719, 0.00011452799999999916, 0.00011513900000000021, 0.00011517999999999945, 0.00011463899999999971, 0.0001144030000000025, 0.00011475000000000027, 0.00011444400000000174, 0.00011488800000000049, 0.00011452699999999968, 0.00011450000000000002, 0.0001147360000000007, 0.00011534699999999828, 0.00011501300000000061, 0.00011484700000000125, 0.0001147909999999995, 0.0001144299999999987, 0.00011470799999999809, 0.00011468099999999842, 0.00011468000000000242, 0.00011501400000000009, 0.00011443100000000164, 0.00011481900000000211]</msg>
<status status="PASS" starttime="20201030 15:54:41.447" endtime="20201030 15:54:41.450"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.442" endtime="20201030 15:54:41.450"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:41.454" endtime="20201030 15:54:41.473"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.452" endtime="20201030 15:54:41.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.451" endtime="20201030 15:54:41.474"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.088" endtime="20201030 15:54:41.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.088" endtime="20201030 15:54:41.475"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:02.711" endtime="20201030 15:54:41.475"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:53:59.619" endtime="20201030 15:54:41.476" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:53:10.437" endtime="20201030 15:54:41.479"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 15:54:41.533" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 15:54:41.542" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 15:54:42.654" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 15:54:41.532" endtime="20201030 15:54:42.655"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 15:54:45.658" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 15:54:42.656" endtime="20201030 15:54:45.659"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.531" endtime="20201030 15:54:45.661"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:45.665" endtime="20201030 15:54:45.898"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.662" endtime="20201030 15:54:45.898"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:45.911" endtime="20201030 15:54:48.936"></status>
</kw>
<msg timestamp="20201030 15:54:48.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:45.909" endtime="20201030 15:54:48.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.943" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:48.940" endtime="20201030 15:54:48.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:48.950" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:48.945" endtime="20201030 15:54:48.950"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:45.907" endtime="20201030 15:54:48.952"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:45.905" endtime="20201030 15:54:48.953"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.903" endtime="20201030 15:54:48.954"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:48.962" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:48.961" endtime="20201030 15:54:48.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.956" endtime="20201030 15:54:48.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.903" endtime="20201030 15:54:48.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.902" endtime="20201030 15:54:48.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.966" endtime="20201030 15:54:48.969"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.901" endtime="20201030 15:54:48.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:48.972" endtime="20201030 15:54:48.976"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:45.899" endtime="20201030 15:54:48.977"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:41.529" endtime="20201030 15:54:48.977"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:48.990" endtime="20201030 15:54:49.013"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.987" endtime="20201030 15:54:49.014"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:49.043" endtime="20201030 15:54:52.066"></status>
</kw>
<msg timestamp="20201030 15:54:52.067" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:49.040" endtime="20201030 15:54:52.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.073" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.070" endtime="20201030 15:54:52.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:54:52.079" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:54:52.075" endtime="20201030 15:54:52.082"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.034" endtime="20201030 15:54:52.083"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:49.029" endtime="20201030 15:54:52.085"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.026" endtime="20201030 15:54:52.085"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:54:52.094" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:54:52.092" endtime="20201030 15:54:52.094"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.087" endtime="20201030 15:54:52.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.024" endtime="20201030 15:54:52.095"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.022" endtime="20201030 15:54:52.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.097" endtime="20201030 15:54:52.101"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.020" endtime="20201030 15:54:52.102"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:49.016" endtime="20201030 15:54:52.103"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:48.984" endtime="20201030 15:54:52.104"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:52.122" endtime="20201030 15:54:58.252"></status>
</kw>
<msg timestamp="20201030 15:54:58.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:52.118" endtime="20201030 15:54:58.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.256" endtime="20201030 15:54:58.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.262" endtime="20201030 15:54:58.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.113" endtime="20201030 15:54:58.267"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.108" endtime="20201030 15:54:58.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.273" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 15:54:58.270" endtime="20201030 15:54:58.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.289" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:58.287" endtime="20201030 15:54:58.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.294" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:54:58.291" endtime="20201030 15:54:58.294"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.275" endtime="20201030 15:54:58.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.304" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:54:58.302" endtime="20201030 15:54:58.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.309" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:54:58.307" endtime="20201030 15:54:58.310"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.297" endtime="20201030 15:54:58.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.319" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:54:58.317" endtime="20201030 15:54:58.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.324" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 15:54:58.322" endtime="20201030 15:54:58.325"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.312" endtime="20201030 15:54:58.326"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.340" endtime="20201030 15:54:58.656"></status>
</kw>
<msg timestamp="20201030 15:54:58.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121845292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221872986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.337" endtime="20201030 15:54:58.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.121845292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.221872986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:54:58.661" endtime="20201030 15:54:58.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.669" endtime="20201030 15:54:58.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.331" endtime="20201030 15:54:58.671"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.327" endtime="20201030 15:54:58.672"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:54:58.676" level="INFO">${FILTERED} = [{'diff': 0.100027694}, {'diff': 0.1000080699999999}, {'diff': 0.1000119439999998}, {'diff': 0.10001083300000024}, {'diff': 0.1000109440000001}, {'diff': 0.10001084699999963}, {'diff': 0.1000108610000...</msg>
<status status="PASS" starttime="20201030 15:54:58.672" endtime="20201030 15:54:58.676"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:54:58.680" level="INFO">${RESULT} = {'diff': [0.100027694, 0.1000080699999999, 0.1000119439999998, 0.10001083300000024, 0.1000109440000001, 0.10001084699999963, 0.10001086100000034, 0.10001084800000015, 0.1000109440000001, 0.10001086100...</msg>
<status status="PASS" starttime="20201030 15:54:58.677" endtime="20201030 15:54:58.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.684" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:54:58.683" endtime="20201030 15:54:58.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:54:58.687" level="INFO">VALUE: [0.100027694, 0.1000080699999999, 0.1000119439999998, 0.10001083300000024, 0.1000109440000001, 0.10001084699999963, 0.10001086100000034, 0.10001084800000015, 0.1000109440000001, 0.10001086100000034, 0.10001083300000069, 0.10001093099999991, 0.10001097199999975, 0.10001083300000069, 0.10001084700000007, 0.10001087499999972, 0.10001086100000034, 0.10001088899999999, 0.10001080500000015, 0.10001092999999983, 0.10001093099999991, 0.10001094500000018, 0.10001084800000015, 0.10001086100000034, 0.10001086100000034, 0.10001087500000061, 0.10001084800000015, 0.10001086099999945, 0.10001087499999972, 0.10001084700000007, 0.10001086100000034, 0.10001086200000042, 0.10001092999999983, 0.10001092999999983, 0.10001093099999991, 0.10001094500000018, 0.10001086099999945, 0.10001093000000072, 0.10001093099999991, 0.10001093099999991, 0.1000109440000001, 0.10001086100000034, 0.10001093099999991, 0.10001097199999975, 0.1000108329999998, 0.10001092999999983, 0.10001094500000018, 0.10001088899999999, 0.10001084700000007, 0.10001086099999945, 0.10001095900000045]</msg>
<status status="PASS" starttime="20201030 15:54:58.685" endtime="20201030 15:54:58.687"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.681" endtime="20201030 15:54:58.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.692" endtime="20201030 15:54:58.711"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.690" endtime="20201030 15:54:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.689" endtime="20201030 15:54:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:52.105" endtime="20201030 15:54:58.713"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:48.978" endtime="20201030 15:54:58.713" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:54:58.720" endtime="20201030 15:54:58.740"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.719" endtime="20201030 15:54:58.740"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:54:58.755" endtime="20201030 15:55:01.774"></status>
</kw>
<msg timestamp="20201030 15:55:01.774" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:54:58.753" endtime="20201030 15:55:01.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.777" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.776" endtime="20201030 15:55:01.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:01.780" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:01.778" endtime="20201030 15:55:01.781"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:58.750" endtime="20201030 15:55:01.781"></status>
</kw>
<status status="FAIL" starttime="20201030 15:54:58.748" endtime="20201030 15:55:01.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.747" endtime="20201030 15:55:01.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:01.786" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:01.785" endtime="20201030 15:55:01.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.783" endtime="20201030 15:55:01.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.746" endtime="20201030 15:55:01.787"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.745" endtime="20201030 15:55:01.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.788" endtime="20201030 15:55:01.789"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.743" endtime="20201030 15:55:01.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.741" endtime="20201030 15:55:01.790"></status>
</kw>
<status status="PASS" starttime="20201030 15:54:58.717" endtime="20201030 15:55:01.791"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:01.799" endtime="20201030 15:55:07.919"></status>
</kw>
<msg timestamp="20201030 15:55:07.919" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:01.798" endtime="20201030 15:55:07.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.922" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:07.920" endtime="20201030 15:55:07.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.923" endtime="20201030 15:55:07.925"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.795" endtime="20201030 15:55:07.926"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.793" endtime="20201030 15:55:07.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:07.929" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 15:55:07.927" endtime="20201030 15:55:07.929"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.933" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:07.932" endtime="20201030 15:55:07.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.935" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:55:07.934" endtime="20201030 15:55:07.936"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.930" endtime="20201030 15:55:07.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.941" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:07.939" endtime="20201030 15:55:07.942"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.944" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:55:07.943" endtime="20201030 15:55:07.944"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.937" endtime="20201030 15:55:07.945"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.949" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:55:07.948" endtime="20201030 15:55:07.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:07.951" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 15:55:07.950" endtime="20201030 15:55:07.951"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.945" endtime="20201030 15:55:07.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:07.958" endtime="20201030 15:55:08.279"></status>
</kw>
<msg timestamp="20201030 15:55:08.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068697875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:07.957" endtime="20201030 15:55:08.282"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068697875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168777653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:08.283" endtime="20201030 15:55:08.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.291" endtime="20201030 15:55:08.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.954" endtime="20201030 15:55:08.293"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:07.952" endtime="20201030 15:55:08.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:55:08.298" level="INFO">${FILTERED} = [{'diff': 0.10007977800000001}, {'diff': 0.09995983399999986}, {'diff': 4.7199999997360464e-07}, {'diff': 5.419999999922709e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'...</msg>
<status status="PASS" starttime="20201030 15:55:08.295" endtime="20201030 15:55:08.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:08.302" level="INFO">${RESULT} = {'diff': [0.10007977800000001, 0.09995983399999986, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.4099...</msg>
<status status="PASS" starttime="20201030 15:55:08.299" endtime="20201030 15:55:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.307" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:55:08.306" endtime="20201030 15:55:08.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:08.310" level="INFO">VALUE: [0.10007977800000001, 0.09995983399999986, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 5.409999999095305e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001133300000031, 0.1000108329999998, 0.1000108329999998, 0.10001091699999964, 0.10001091700000053, 0.10001090200000018, 5.409999994654413e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001132000000013, 0.10001092999999983, 0.10001087499999972, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201030 15:55:08.308" endtime="20201030 15:55:08.311"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.303" endtime="20201030 15:55:08.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.315" endtime="20201030 15:55:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.314" endtime="20201030 15:55:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.312" endtime="20201030 15:55:08.336"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:01.791" endtime="20201030 15:55:08.336"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:54:58.715" endtime="20201030 15:55:08.336" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:08.343" endtime="20201030 15:55:08.363"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.342" endtime="20201030 15:55:08.363"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:08.377" endtime="20201030 15:55:11.399"></status>
</kw>
<msg timestamp="20201030 15:55:11.400" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:08.375" endtime="20201030 15:55:11.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.406" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.402" endtime="20201030 15:55:11.406"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:11.412" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:11.408" endtime="20201030 15:55:11.413"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:08.372" endtime="20201030 15:55:11.414"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:08.370" endtime="20201030 15:55:11.415"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.369" endtime="20201030 15:55:11.416"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:11.424" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:11.423" endtime="20201030 15:55:11.425"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.418" endtime="20201030 15:55:11.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.368" endtime="20201030 15:55:11.426"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.367" endtime="20201030 15:55:11.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.428" endtime="20201030 15:55:11.431"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.366" endtime="20201030 15:55:11.433"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.364" endtime="20201030 15:55:11.434"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:08.340" endtime="20201030 15:55:11.434"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:11.455" endtime="20201030 15:55:17.581"></status>
</kw>
<msg timestamp="20201030 15:55:17.582" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:11.451" endtime="20201030 15:55:17.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.588" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:17.584" endtime="20201030 15:55:17.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.591" endtime="20201030 15:55:17.594"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.443" endtime="20201030 15:55:17.596"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.439" endtime="20201030 15:55:17.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.602" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 15:55:17.598" endtime="20201030 15:55:17.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.611" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:17.609" endtime="20201030 15:55:17.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.615" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:55:17.613" endtime="20201030 15:55:17.616"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.604" endtime="20201030 15:55:17.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.626" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:17.624" endtime="20201030 15:55:17.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.631" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:55:17.629" endtime="20201030 15:55:17.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.619" endtime="20201030 15:55:17.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.640" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:55:17.639" endtime="20201030 15:55:17.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.642" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 15:55:17.641" endtime="20201030 15:55:17.643"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.634" endtime="20201030 15:55:17.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.650" endtime="20201030 15:55:17.949"></status>
</kw>
<msg timestamp="20201030 15:55:17.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103134931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203265917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.648" endtime="20201030 15:55:17.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103134931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203265917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:17.954" endtime="20201030 15:55:17.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:17.962" endtime="20201030 15:55:17.963"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.646" endtime="20201030 15:55:17.964"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.644" endtime="20201030 15:55:17.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:55:17.968" level="INFO">${FILTERED} = [{'diff': 0.10013098599999992}, {'diff': 0.10003940300000025}, {'diff': 0.09988276399999974}, {'diff': 0.10001192999999997}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff'...</msg>
<status status="PASS" starttime="20201030 15:55:17.965" endtime="20201030 15:55:17.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:17.974" level="INFO">${RESULT} = {'diff': [0.10013098599999992, 0.10003940300000025, 0.09988276399999974, 0.10001192999999997, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997...</msg>
<status status="PASS" starttime="20201030 15:55:17.969" endtime="20201030 15:55:17.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.978" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:55:17.977" endtime="20201030 15:55:17.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:17.981" level="INFO">VALUE: [0.10013098599999992, 0.10003940300000025, 0.09988276399999974, 0.10001192999999997, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999999922709e-07, 5.419999999922709e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 0.10001136099999997, 0.10001086099999945, 0.10001095900000045]</msg>
<status status="PASS" starttime="20201030 15:55:17.979" endtime="20201030 15:55:17.982"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.975" endtime="20201030 15:55:17.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:17.986" endtime="20201030 15:55:18.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.984" endtime="20201030 15:55:18.006"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:17.983" endtime="20201030 15:55:18.007"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:11.435" endtime="20201030 15:55:18.007"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:08.338" endtime="20201030 15:55:18.007" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:18.014" endtime="20201030 15:55:18.034"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.013" endtime="20201030 15:55:18.034"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:18.048" endtime="20201030 15:55:21.071"></status>
</kw>
<msg timestamp="20201030 15:55:21.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:18.046" endtime="20201030 15:55:21.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.078" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.075" endtime="20201030 15:55:21.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:21.085" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:21.081" endtime="20201030 15:55:21.085"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.044" endtime="20201030 15:55:21.087"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:18.041" endtime="20201030 15:55:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.040" endtime="20201030 15:55:21.089"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:21.098" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:21.097" endtime="20201030 15:55:21.099"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.092" endtime="20201030 15:55:21.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.039" endtime="20201030 15:55:21.100"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.038" endtime="20201030 15:55:21.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.102" endtime="20201030 15:55:21.105"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.037" endtime="20201030 15:55:21.106"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.035" endtime="20201030 15:55:21.107"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:18.011" endtime="20201030 15:55:21.108"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:21.126" endtime="20201030 15:55:27.253"></status>
</kw>
<msg timestamp="20201030 15:55:27.254" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:21.123" endtime="20201030 15:55:27.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.259" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.256" endtime="20201030 15:55:27.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.262" endtime="20201030 15:55:27.265"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.117" endtime="20201030 15:55:27.266"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.112" endtime="20201030 15:55:27.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.272" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 15:55:27.269" endtime="20201030 15:55:27.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.281" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:27.279" endtime="20201030 15:55:27.281"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.285" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:55:27.283" endtime="20201030 15:55:27.286"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.274" endtime="20201030 15:55:27.287"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.295" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:27.292" endtime="20201030 15:55:27.295"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.299" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:55:27.297" endtime="20201030 15:55:27.300"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.288" endtime="20201030 15:55:27.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.309" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:55:27.306" endtime="20201030 15:55:27.309"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.313" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 15:55:27.311" endtime="20201030 15:55:27.313"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.302" endtime="20201030 15:55:27.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.328" endtime="20201030 15:55:27.634"></status>
</kw>
<msg timestamp="20201030 15:55:27.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104502514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204727639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.325" endtime="20201030 15:55:27.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104502514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204727639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:27.639" endtime="20201030 15:55:27.646"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.647" endtime="20201030 15:55:27.648"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.319" endtime="20201030 15:55:27.649"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.316" endtime="20201030 15:55:27.649"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:55:27.653" level="INFO">${FILTERED} = [{'diff': 0.10022512500000014}, {'diff': 0.10004509699999975}, {'diff': 0.09978651400000027}, {'diff': 0.10001184699999977}, {'diff': 0.10001083400000033}, {'diff': 0.10001082000000006}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:55:27.650" endtime="20201030 15:55:27.653"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:27.657" level="INFO">${RESULT} = {'diff': [0.10022512500000014, 0.10004509699999975, 0.09978651400000027, 0.10001184699999977, 0.10001083400000033, 0.10001082000000006, 0.10001091700000009, 0.10001083399999988, 0.10001090299999982, 0...</msg>
<status status="PASS" starttime="20201030 15:55:27.654" endtime="20201030 15:55:27.657"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.661" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:55:27.660" endtime="20201030 15:55:27.661"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:27.663" level="INFO">VALUE: [0.10022512500000014, 0.10004509699999975, 0.09978651400000027, 0.10001184699999977, 0.10001083400000033, 0.10001082000000006, 0.10001091700000009, 0.10001083399999988, 0.10001090299999982, 0.10001093099999991, 0.10001084700000007, 0.10001080600000023, 0.10001092999999983, 0.1000108329999998, 0.1000108329999998, 0.10001083300000069, 0.10001092999999983, 0.10001081900000042, 0.10001091599999956, 0.1000108329999998, 0.10001094500000018, 0.10001083300000069, 0.10001081900000042, 0.10001093099999991, 0.10001084800000015, 0.10001084800000015, 0.1000108200000005, 0.10001091699999964, 0.10001092999999983, 0.10001084700000007, 0.1000108329999998, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.10001086199999953, 0.10001083399999988, 0.10001084700000007, 0.10001086100000034, 0.1000108329999998, 0.10001086100000034, 0.1000108329999998, 0.10001084700000007, 0.10001087499999972, 0.10001083399999988, 0.10001083399999988, 0.10001091599999956, 0.10001093000000072, 0.10001084700000007, 0.10001084700000007, 0.10001093099999991]</msg>
<status status="PASS" starttime="20201030 15:55:27.662" endtime="20201030 15:55:27.664"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.658" endtime="20201030 15:55:27.665"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.668" endtime="20201030 15:55:27.688"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.667" endtime="20201030 15:55:27.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.666" endtime="20201030 15:55:27.689"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:21.109" endtime="20201030 15:55:27.689"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:18.009" endtime="20201030 15:55:27.690" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:27.696" endtime="20201030 15:55:27.716"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.695" endtime="20201030 15:55:27.716"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:27.730" endtime="20201030 15:55:30.751"></status>
</kw>
<msg timestamp="20201030 15:55:30.752" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:27.728" endtime="20201030 15:55:30.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.758" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.755" endtime="20201030 15:55:30.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:30.764" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:30.760" endtime="20201030 15:55:30.764"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:27.726" endtime="20201030 15:55:30.766"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:27.723" endtime="20201030 15:55:30.767"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.722" endtime="20201030 15:55:30.768"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:30.775" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:30.774" endtime="20201030 15:55:30.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.769" endtime="20201030 15:55:30.776"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.721" endtime="20201030 15:55:30.777"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.721" endtime="20201030 15:55:30.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.779" endtime="20201030 15:55:30.782"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.719" endtime="20201030 15:55:30.783"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.717" endtime="20201030 15:55:30.784"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:27.693" endtime="20201030 15:55:30.784"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:30.801" endtime="20201030 15:55:36.926"></status>
</kw>
<msg timestamp="20201030 15:55:36.927" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:30.798" endtime="20201030 15:55:36.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.932" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:36.929" endtime="20201030 15:55:36.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.935" endtime="20201030 15:55:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.792" endtime="20201030 15:55:36.940"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.789" endtime="20201030 15:55:36.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:36.945" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 15:55:36.942" endtime="20201030 15:55:36.946"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.956" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:36.952" endtime="20201030 15:55:36.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.960" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:55:36.958" endtime="20201030 15:55:36.961"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.947" endtime="20201030 15:55:36.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.970" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:36.968" endtime="20201030 15:55:36.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.974" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:55:36.972" endtime="20201030 15:55:36.975"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.963" endtime="20201030 15:55:36.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.981" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:55:36.980" endtime="20201030 15:55:36.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:36.983" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 15:55:36.982" endtime="20201030 15:55:36.984"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.977" endtime="20201030 15:55:36.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:36.990" endtime="20201030 15:55:37.288"></status>
</kw>
<msg timestamp="20201030 15:55:37.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196591042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:36.989" endtime="20201030 15:55:37.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096252708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196591042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:37.292" endtime="20201030 15:55:37.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.301" endtime="20201030 15:55:37.302"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.986" endtime="20201030 15:55:37.303"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:36.985" endtime="20201030 15:55:37.303"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:55:37.307" level="INFO">${FILTERED} = [{'diff': 0.10033833399999992}, {'diff': 0.10004944499999979}, {'diff': 0.10005193100000032}, {'diff': 0.09963219399999979}, {'diff': 0.10001084700000007}, {'diff': 0.10001084700000007}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 15:55:37.304" endtime="20201030 15:55:37.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:37.312" level="INFO">${RESULT} = {'diff': [0.10033833399999992, 0.10004944499999979, 0.10005193100000032, 0.09963219399999979, 0.10001084700000007, 0.10001084700000007, 0.10001094500000018, 0.10001084800000015, 0.10001084700000007, 0...</msg>
<status status="PASS" starttime="20201030 15:55:37.308" endtime="20201030 15:55:37.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.316" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:55:37.315" endtime="20201030 15:55:37.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:37.318" level="INFO">VALUE: [0.10033833399999992, 0.10004944499999979, 0.10005193100000032, 0.09963219399999979, 0.10001084700000007, 0.10001084700000007, 0.10001094500000018, 0.10001084800000015, 0.10001084700000007, 0.10001093000000028, 0.10001086100000034, 0.10001086099999945, 0.10001087499999972, 0.1000108329999998, 0.10001092999999983, 0.10001087500000061, 0.10001086100000034, 0.10001083399999988, 0.10001095799999948, 0.1000108329999998, 0.10001093099999991, 0.10001093099999991, 0.1000109440000001, 0.10001093099999991, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 4.73000000056345e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.420000004363601e-07, 0.10001136099999997, 0.10001091699999964, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999986600033e-07]</msg>
<status status="PASS" starttime="20201030 15:55:37.317" endtime="20201030 15:55:37.319"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.313" endtime="20201030 15:55:37.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.323" endtime="20201030 15:55:37.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.322" endtime="20201030 15:55:37.343"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.321" endtime="20201030 15:55:37.344"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:30.785" endtime="20201030 15:55:37.344"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:27.691" endtime="20201030 15:55:37.347" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:37.354" endtime="20201030 15:55:37.374"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.352" endtime="20201030 15:55:37.374"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:37.387" endtime="20201030 15:55:40.410"></status>
</kw>
<msg timestamp="20201030 15:55:40.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:37.386" endtime="20201030 15:55:40.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.417" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.413" endtime="20201030 15:55:40.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 15:55:40.440" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 15:55:40.419" endtime="20201030 15:55:40.441"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:37.383" endtime="20201030 15:55:40.443"></status>
</kw>
<status status="FAIL" starttime="20201030 15:55:37.381" endtime="20201030 15:55:40.445"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.380" endtime="20201030 15:55:40.447"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 15:55:40.457" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 15:55:40.455" endtime="20201030 15:55:40.458"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.449" endtime="20201030 15:55:40.459"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.379" endtime="20201030 15:55:40.460"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.378" endtime="20201030 15:55:40.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.462" endtime="20201030 15:55:40.467"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.377" endtime="20201030 15:55:40.468"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.375" endtime="20201030 15:55:40.470"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:37.351" endtime="20201030 15:55:40.471"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:40.492" endtime="20201030 15:55:46.617"></status>
</kw>
<msg timestamp="20201030 15:55:46.618" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:40.489" endtime="20201030 15:55:46.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.624" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 15:55:46.621" endtime="20201030 15:55:46.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.627" endtime="20201030 15:55:46.630"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.486" endtime="20201030 15:55:46.631"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.477" endtime="20201030 15:55:46.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:46.637" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 15:55:46.634" endtime="20201030 15:55:46.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.646" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:46.644" endtime="20201030 15:55:46.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.651" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 15:55:46.648" endtime="20201030 15:55:46.651"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.639" endtime="20201030 15:55:46.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.661" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 15:55:46.659" endtime="20201030 15:55:46.662"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.666" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 15:55:46.664" endtime="20201030 15:55:46.667"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.654" endtime="20201030 15:55:46.668"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.676" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 15:55:46.674" endtime="20201030 15:55:46.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:46.682" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 15:55:46.679" endtime="20201030 15:55:46.682"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.669" endtime="20201030 15:55:46.684"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:46.699" endtime="20201030 15:55:47.004"></status>
</kw>
<msg timestamp="20201030 15:55:47.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.128282944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.228766458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:46.695" endtime="20201030 15:55:47.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.128282944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.228766458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 15:55:47.008" endtime="20201030 15:55:47.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 15:55:47.016" endtime="20201030 15:55:47.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.689" endtime="20201030 15:55:47.018"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:46.685" endtime="20201030 15:55:47.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 15:55:47.023" level="INFO">${FILTERED} = [{'diff': 0.100483514}, {'diff': 0.10005204100000009}, {'diff': 0.10005104200000003}, {'diff': 0.09948902799999981}, {'diff': 0.10001086100000034}, {'diff': 0.10001087499999972}, {'diff': 0.1000108330...</msg>
<status status="PASS" starttime="20201030 15:55:47.019" endtime="20201030 15:55:47.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 15:55:47.030" level="INFO">${RESULT} = {'diff': [0.100483514, 0.10005204100000009, 0.10005104200000003, 0.09948902799999981, 0.10001086100000034, 0.10001087499999972, 0.10001083300000024, 0.10001084700000007, 0.10001093099999991, 0.1000108...</msg>
<status status="PASS" starttime="20201030 15:55:47.024" endtime="20201030 15:55:47.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.035" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 15:55:47.034" endtime="20201030 15:55:47.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 15:55:47.037" level="INFO">VALUE: [0.100483514, 0.10005204100000009, 0.10005104200000003, 0.09948902799999981, 0.10001086100000034, 0.10001087499999972, 0.10001083300000024, 0.10001084700000007, 0.10001093099999991, 0.10001084799999926, 0.10001093000000072, 0.10001084700000007, 0.10001097299999984, 0.10001088899999999, 5.420000004363601e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.409999994654413e-07, 4.73000000056345e-07, 5.420000004363601e-07, 0.1000113890000005, 0.10001083300000069, 0.10001084700000007, 0.10001086099999945, 0.1000109449999993, 0.10001086100000123]</msg>
<status status="PASS" starttime="20201030 15:55:47.036" endtime="20201030 15:55:47.038"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.031" endtime="20201030 15:55:47.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 15:55:47.042" endtime="20201030 15:55:47.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.041" endtime="20201030 15:55:47.062"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:47.040" endtime="20201030 15:55:47.063"></status>
</kw>
<status status="PASS" starttime="20201030 15:55:40.473" endtime="20201030 15:55:47.063"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 15:55:37.349" endtime="20201030 15:55:47.064" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 15:54:41.488" endtime="20201030 15:55:47.070"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 15:51:35.703" endtime="20201030 15:55:47.105"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
