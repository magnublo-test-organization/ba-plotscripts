<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 18:27:23.007" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:26.628" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:26.637" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:27.777" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:26.627" endtime="20201030 18:27:27.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:30.780" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:27:27.779" endtime="20201030 18:27:30.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.626" endtime="20201030 18:27:30.783"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:30.787" endtime="20201030 18:27:31.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:30.784" endtime="20201030 18:27:31.015"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:31.028" endtime="20201030 18:27:34.050"></status>
</kw>
<msg timestamp="20201030 18:27:34.051" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:31.026" endtime="20201030 18:27:34.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.053" endtime="20201030 18:27:34.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:34.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:34.058" endtime="20201030 18:27:34.063"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.024" endtime="20201030 18:27:34.065"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:31.021" endtime="20201030 18:27:34.066"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.020" endtime="20201030 18:27:34.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:34.075" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:34.074" endtime="20201030 18:27:34.076"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.068" endtime="20201030 18:27:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.019" endtime="20201030 18:27:34.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.019" endtime="20201030 18:27:34.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.079" endtime="20201030 18:27:34.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.017" endtime="20201030 18:27:34.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.085" endtime="20201030 18:27:34.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:31.016" endtime="20201030 18:27:34.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:26.624" endtime="20201030 18:27:34.090"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:34.102" endtime="20201030 18:27:34.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.099" endtime="20201030 18:27:34.124"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:34.140" endtime="20201030 18:27:37.163"></status>
</kw>
<msg timestamp="20201030 18:27:37.163" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:34.139" endtime="20201030 18:27:37.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.169" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.166" endtime="20201030 18:27:37.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.175" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:37.171" endtime="20201030 18:27:37.175"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.136" endtime="20201030 18:27:37.177"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:34.134" endtime="20201030 18:27:37.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.132" endtime="20201030 18:27:37.179"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:37.186" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:37.185" endtime="20201030 18:27:37.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.180" endtime="20201030 18:27:37.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.131" endtime="20201030 18:27:37.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.131" endtime="20201030 18:27:37.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.190" endtime="20201030 18:27:37.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.129" endtime="20201030 18:27:37.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.126" endtime="20201030 18:27:37.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:34.096" endtime="20201030 18:27:37.195"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.211" endtime="20201030 18:27:37.225"></status>
</kw>
<msg timestamp="20201030 18:27:37.227" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.206" endtime="20201030 18:27:37.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.231" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:37.229" endtime="20201030 18:27:37.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:37.234" endtime="20201030 18:27:37.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.200" endtime="20201030 18:27:37.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.197" endtime="20201030 18:27:37.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.247" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 18:27:37.245" endtime="20201030 18:27:37.248"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.251" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 18:27:37.249" endtime="20201030 18:27:37.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.240" endtime="20201030 18:27:37.253"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:34.091" endtime="20201030 18:27:37.254" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:23.117" endtime="20201030 18:27:37.260"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:27:37.327" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:27:37.336" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:27:38.450" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:27:37.326" endtime="20201030 18:27:38.450"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:27:41.453" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:27:38.451" endtime="20201030 18:27:41.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.325" endtime="20201030 18:27:41.456"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:41.460" endtime="20201030 18:27:41.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.457" endtime="20201030 18:27:41.759"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:41.772" endtime="20201030 18:27:44.793"></status>
</kw>
<msg timestamp="20201030 18:27:44.794" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:41.770" endtime="20201030 18:27:44.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.800" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.797" endtime="20201030 18:27:44.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:44.806" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:44.802" endtime="20201030 18:27:44.807"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:41.768" endtime="20201030 18:27:44.808"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:41.765" endtime="20201030 18:27:44.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.764" endtime="20201030 18:27:44.810"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:44.817" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:44.816" endtime="20201030 18:27:44.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.811" endtime="20201030 18:27:44.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.763" endtime="20201030 18:27:44.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.763" endtime="20201030 18:27:44.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.821" endtime="20201030 18:27:44.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.762" endtime="20201030 18:27:44.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.826" endtime="20201030 18:27:44.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:41.760" endtime="20201030 18:27:44.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:37.324" endtime="20201030 18:27:44.831"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:44.844" endtime="20201030 18:27:44.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.840" endtime="20201030 18:27:44.865"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:44.878" endtime="20201030 18:27:47.898"></status>
</kw>
<msg timestamp="20201030 18:27:47.899" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:44.876" endtime="20201030 18:27:47.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.905" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.902" endtime="20201030 18:27:47.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.911" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:47.907" endtime="20201030 18:27:47.912"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.874" endtime="20201030 18:27:47.913"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:44.871" endtime="20201030 18:27:47.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.870" endtime="20201030 18:27:47.915"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:47.923" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:47.921" endtime="20201030 18:27:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.917" endtime="20201030 18:27:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.869" endtime="20201030 18:27:47.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.869" endtime="20201030 18:27:47.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.926" endtime="20201030 18:27:47.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.867" endtime="20201030 18:27:47.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.866" endtime="20201030 18:27:47.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:44.837" endtime="20201030 18:27:47.932"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.950" endtime="20201030 18:27:47.965"></status>
</kw>
<msg timestamp="20201030 18:27:47.966" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.946" endtime="20201030 18:27:47.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:47.971" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:47.968" endtime="20201030 18:27:47.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.973" endtime="20201030 18:27:47.977"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.941" endtime="20201030 18:27:47.978"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.938" endtime="20201030 18:27:47.979"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:47.990" endtime="20201030 18:27:48.269"></status>
</kw>
<msg timestamp="20201030 18:27:48.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096965056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096971, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:47.989" endtime="20201030 18:27:48.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096965056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.096971, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:27:48.272" endtime="20201030 18:27:48.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.287" endtime="20201030 18:27:48.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.984" endtime="20201030 18:27:48.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.980" endtime="20201030 18:27:48.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:48.305" level="INFO">${debug} = {'diff': [0, 5.943999999757921e-06, 6.471999999924094e-06, 6.54199999994276e-06, 6.055000000060318e-06, 5.709000000297948e-06, 6.485999999750192e-06, 5.7500000001375895e-06, 4.999999999810711e-06, 6.6...</msg>
<status status="PASS" starttime="20201030 18:27:48.291" endtime="20201030 18:27:48.305"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.306" endtime="20201030 18:27:48.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.311" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:48.310" endtime="20201030 18:27:48.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.315" level="INFO">VALUE: {'diff': [0, 5.943999999757921e-06, 6.471999999924094e-06, 6.54199999994276e-06, 6.055000000060318e-06, 5.709000000297948e-06, 6.485999999750192e-06, 5.7500000001375895e-06, 4.999999999810711e-06, 6.694000000084799e-06, 5.291999999990082e-06, 5.583000000086713e-06, 6.416999999814266e-06, 5.708000000215208e-06, 6.374999999891884e-06, 6.514000000290565e-06, 6.180999999827463e-06, 5.1659999997788475e-06, 5.875000000266084e-06, 6.4310000000844525e-06, 6.666999999627166e-06, 5.333000000273813e-06, 4.999999999810711e-06, 5.583000000086713e-06, 5.291999999990082e-06, 5.347000000099911e-06, 4.972000000158516e-06, 6.5279999996725735e-06, 6.7500000002773675e-06, 6.749999999833278e-06, 5.792000000059971e-06, 5.374999999752106e-06, 6.361000000065786e-06, 5.097000000287011e-06, 6.305999999955958e-06, 5.874999999821995e-06, 6.54099999986002e-06, 6.112000000335627e-06, 6.249999999763389e-06, 5.583000000086713e-06, 5.874999999821995e-06, 6.417000000258355e-06, 5.999999999950489e-06, 5.471999999784316e-06, 6.5970000000525886e-06, 6.235999999937292e-06, 5.278000000163985e-06, 6.361000000065786e-06, 6.54199999994276e-06, 6.776999999846822e-06], 'source_diff': [0, 5.943999999757921e-06, 6.471999999924094e-06, 6.54199999994276e-06, 6.055000000060318e-06, 5.709000000297948e-06, 6.485999999750192e-06, 5.7500000001375895e-06, 4.999999999810711e-06, 6.694000000084799e-06, 5.291999999990082e-06, 5.583000000086713e-06, 6.416999999814266e-06, 5.708000000215208e-06, 6.374999999891884e-06, 6.514000000290565e-06, 6.180999999827463e-06, 5.1659999997788475e-06, 5.875000000266084e-06, 6.4310000000844525e-06, 6.666999999627166e-06, 5.333000000273813e-06, 4.999999999810711e-06, 5.583000000086713e-06, 5.291999999990082e-06, 5.347000000099911e-06, 4.972000000158516e-06, 6.5279999996725735e-06, 6.7500000002773675e-06, 6.749999999833278e-06, 5.792000000059971e-06, 5.374999999752106e-06, 6.361000000065786e-06, 5.097000000287011e-06, 6.305999999955958e-06, 5.874999999821995e-06, 6.54099999986002e-06, 6.112000000335627e-06, 6.249999999763389e-06, 5.583000000086713e-06, 5.874999999821995e-06, 6.417000000258355e-06, 5.999999999950489e-06, 5.471999999784316e-06, 6.5970000000525886e-06, 6.235999999937292e-06, 5.278000000163985e-06, 6.361000000065786e-06, 6.54199999994276e-06, 6.776999999846822e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [3.096965056, 3.096971, 3.096977472, 3.096984014, 3.096990069, 3.096995778, 3.097002264, 3.097008014, 3.097013014, 3.097019708, 3.097025, 3.097030583, 3.097037, 3.097042708, 3.097049083, 3.097055597, 3.097061778, 3.097066944, 3.097072819, 3.09707925, 3.097085917, 3.09709125, 3.09709625, 3.097101833, 3.097107125, 3.097112472, 3.097117444, 3.097123972, 3.097130722, 3.097137472, 3.097143264, 3.097148639, 3.097155, 3.097160097, 3.097166403, 3.097172278, 3.097178819, 3.097184931, 3.097191181, 3.097196764, 3.097202639, 3.097209056, 3.097215056, 3.097220528, 3.097227125, 3.097233361, 3.097238639, 3.097245, 3.097251542, 3.097258319], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:48.312" endtime="20201030 18:27:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.308" endtime="20201030 18:27:48.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.319" level="INFO">${RESULT} = [{'diff': 5.943999999757921e-06}, {'diff': 6.54199999994276e-06}, {'diff': 5.709000000297948e-06}, {'diff': 5.7500000001375895e-06}, {'diff': 6.694000000084799e-06}, {'diff': 5.583000000086713e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:48.316" endtime="20201030 18:27:48.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.322" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.943999999757921e-06, 6.54199999994276e-06, 5.709000000297948e-06, 5.7500000001375895e-06, 6.694000000084799e-06, 5.583000000086713e-06, 5.708000000215208e-06, 6.514000000290565e-06, 5.1659...</msg>
<status status="PASS" starttime="20201030 18:27:48.320" endtime="20201030 18:27:48.323"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:48.325" endtime="20201030 18:27:48.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.329" level="INFO">VALUE: [5.943999999757921e-06, 6.54199999994276e-06, 5.709000000297948e-06, 5.7500000001375895e-06, 6.694000000084799e-06, 5.583000000086713e-06, 5.708000000215208e-06, 6.514000000290565e-06, 5.1659999997788475e-06, 6.4310000000844525e-06, 5.333000000273813e-06, 5.583000000086713e-06, 5.347000000099911e-06, 6.5279999996725735e-06, 6.749999999833278e-06, 5.374999999752106e-06, 5.097000000287011e-06, 5.874999999821995e-06, 6.112000000335627e-06, 5.583000000086713e-06, 6.417000000258355e-06, 5.471999999784316e-06, 6.235999999937292e-06, 6.361000000065786e-06, 6.776999999846822e-06]</msg>
<status status="PASS" starttime="20201030 18:27:48.328" endtime="20201030 18:27:48.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.323" endtime="20201030 18:27:48.330"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.334" endtime="20201030 18:27:48.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.332" endtime="20201030 18:27:48.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.331" endtime="20201030 18:27:48.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.935" endtime="20201030 18:27:48.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.934" endtime="20201030 18:27:48.355"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.363" endtime="20201030 18:27:48.374"></status>
</kw>
<msg timestamp="20201030 18:27:48.374" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.362" endtime="20201030 18:27:48.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.377" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.375" endtime="20201030 18:27:48.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.378" endtime="20201030 18:27:48.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.359" endtime="20201030 18:27:48.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.357" endtime="20201030 18:27:48.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.387" endtime="20201030 18:27:48.655"></status>
</kw>
<msg timestamp="20201030 18:27:48.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.385" endtime="20201030 18:27:48.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017919778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.658" endtime="20201030 18:27:48.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.664" endtime="20201030 18:27:48.665"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.383" endtime="20201030 18:27:48.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.381" endtime="20201030 18:27:48.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:48.681" level="INFO">${debug} = {'diff': [0, 5.749999999998812e-06, 6.291000000002017e-06, 5.055999999999811e-06, 5.999999999999062e-06, 5.694000000000532e-06, 5.0139999999976315e-06, 6.528000000002171e-06, 5.207999999999602e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:48.667" endtime="20201030 18:27:48.681"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.682" endtime="20201030 18:27:48.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.687" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:48.686" endtime="20201030 18:27:48.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.690" level="INFO">VALUE: {'diff': [0, 5.749999999998812e-06, 6.291000000002017e-06, 5.055999999999811e-06, 5.999999999999062e-06, 5.694000000000532e-06, 5.0139999999976315e-06, 6.528000000002171e-06, 5.207999999999602e-06, 6.181000000000936e-06, 6.6529999999988265e-06, 5.596999999999547e-06, 5.167000000000366e-06, 5.833000000000227e-06, 6.333000000000727e-06, 6.0139999999986316e-06, 5.639000000001726e-06, 5.7779999999979514e-06, 6.222000000000172e-06, 5.778000000001421e-06, 5.152999999997326e-06, 5.944000000000782e-06, 5.222000000002641e-06, 6.235999999999742e-06, 5.0699999999993806e-06, 6.749999999999812e-06, 5.846999999999797e-06, 5.042000000000241e-06, 5.291000000001017e-06, 6.708999999997106e-06, 5.153000000000796e-06, 6.083000000000477e-06, 6.167000000001366e-06, 5.137999999998283e-06, 4.889000000000976e-06, 6.0139999999986316e-06, 5.403000000001046e-06, 5.6389999999982565e-06, 6.708000000001102e-06, 6.542000000001741e-06, 5.457999999999852e-06, 6.416999999998146e-06, 5.236000000002211e-06, 5.6389999999982565e-06, 5.346999999999297e-06, 5.820000000000131e-06, 5.291000000001017e-06, 6.5279999999987015e-06, 5.361000000002336e-06, 6.471999999996952e-06], 'source_diff': [0, 5.749999999998812e-06, 6.291000000002017e-06, 5.055999999999811e-06, 5.999999999999062e-06, 5.694000000000532e-06, 5.0139999999976315e-06, 6.528000000002171e-06, 5.207999999999602e-06, 6.181000000000936e-06, 6.6529999999988265e-06, 5.596999999999547e-06, 5.167000000000366e-06, 5.833000000000227e-06, 6.333000000000727e-06, 6.0139999999986316e-06, 5.639000000001726e-06, 5.7779999999979514e-06, 6.222000000000172e-06, 5.778000000001421e-06, 5.152999999997326e-06, 5.944000000000782e-06, 5.222000000002641e-06, 6.235999999999742e-06, 5.0699999999993806e-06, 6.749999999999812e-06, 5.846999999999797e-06, 5.042000000000241e-06, 5.291000000001017e-06, 6.708999999997106e-06, 5.153000000000796e-06, 6.083000000000477e-06, 6.167000000001366e-06, 5.137999999998283e-06, 4.889000000000976e-06, 6.0139999999986316e-06, 5.403000000001046e-06, 5.6389999999982565e-06, 6.708000000001102e-06, 6.542000000001741e-06, 5.457999999999852e-06, 6.416999999998146e-06, 5.236000000002211e-06, 5.6389999999982565e-06, 5.346999999999297e-06, 5.820000000000131e-06, 5.291000000001017e-06, 6.5279999999987015e-06, 5.361000000002336e-06, 6.471999999996952e-06], 'eventtime': [0.017919778, 0.017925528, 0.017931819, 0.017936875, 0.017942875, 0.017948569, 0.017953583, 0.017960111, 0.017965319, 0.0179715, 0.017978153, 0.01798375, 0.017988917, 0.01799475, 0.018001083, 0.018007097, 0.018012736, 0.018018514, 0.018024736, 0.018030514, 0.018035667, 0.018041611, 0.018046833, 0.018053069, 0.018058139, 0.018064889, 0.018070736, 0.018075778, 0.018081069, 0.018087778, 0.018092931, 0.018099014, 0.018105181, 0.018110319, 0.018115208, 0.018121222, 0.018126625, 0.018132264, 0.018138972, 0.018145514, 0.018150972, 0.018157389, 0.018162625, 0.018168264, 0.018173611, 0.018179431, 0.018184722, 0.01819125, 0.018196611, 0.018203083], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:48.688" endtime="20201030 18:27:48.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.684" endtime="20201030 18:27:48.692"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:48.695" level="INFO">${RESULT} = [{'diff': 5.749999999998812e-06}, {'diff': 5.055999999999811e-06}, {'diff': 5.694000000000532e-06}, {'diff': 6.528000000002171e-06}, {'diff': 6.181000000000936e-06}, {'diff': 5.596999999999547e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:48.692" endtime="20201030 18:27:48.695"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:48.701" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.749999999998812e-06, 5.055999999999811e-06, 5.694000000000532e-06, 6.528000000002171e-06, 6.181000000000936e-06, 5.596999999999547e-06, 5.833000000000227e-06, 6.0139999999986316e-06, 5.777...</msg>
<status status="PASS" starttime="20201030 18:27:48.696" endtime="20201030 18:27:48.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.710" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:48.708" endtime="20201030 18:27:48.711"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.715" level="INFO">VALUE: [5.749999999998812e-06, 5.055999999999811e-06, 5.694000000000532e-06, 6.528000000002171e-06, 6.181000000000936e-06, 5.596999999999547e-06, 5.833000000000227e-06, 6.0139999999986316e-06, 5.7779999999979514e-06, 5.778000000001421e-06, 5.944000000000782e-06, 6.235999999999742e-06, 6.749999999999812e-06, 5.042000000000241e-06, 6.708999999997106e-06, 6.083000000000477e-06, 5.137999999998283e-06, 6.0139999999986316e-06, 5.6389999999982565e-06, 6.542000000001741e-06, 6.416999999998146e-06, 5.6389999999982565e-06, 5.820000000000131e-06, 6.5279999999987015e-06, 6.471999999996952e-06]</msg>
<status status="PASS" starttime="20201030 18:27:48.712" endtime="20201030 18:27:48.716"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.703" endtime="20201030 18:27:48.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:48.724" endtime="20201030 18:27:48.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.721" endtime="20201030 18:27:48.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.719" endtime="20201030 18:27:48.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.356" endtime="20201030 18:27:48.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.356" endtime="20201030 18:27:48.749"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.766" endtime="20201030 18:27:48.780"></status>
</kw>
<msg timestamp="20201030 18:27:48.781" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.762" endtime="20201030 18:27:48.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:48.786" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:48.783" endtime="20201030 18:27:48.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.789" endtime="20201030 18:27:48.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.757" endtime="20201030 18:27:48.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.753" endtime="20201030 18:27:48.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:48.803" endtime="20201030 18:27:49.069"></status>
</kw>
<msg timestamp="20201030 18:27:49.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030838014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030843597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:48.801" endtime="20201030 18:27:49.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.030838014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.030843597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.072" endtime="20201030 18:27:49.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.077" endtime="20201030 18:27:49.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.799" endtime="20201030 18:27:49.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.795" endtime="20201030 18:27:49.080"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.095" level="INFO">${debug} = {'diff': [0, 5.582999999999977e-06, 6.556000000001311e-06, 6.749999999999812e-06, 5.290999999997548e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.945000000000256e-06, 4.971999999998922e-06, 6.6...</msg>
<status status="PASS" starttime="20201030 18:27:49.081" endtime="20201030 18:27:49.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.096" endtime="20201030 18:27:49.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.101" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.100" endtime="20201030 18:27:49.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.105" level="INFO">VALUE: {'diff': [0, 5.582999999999977e-06, 6.556000000001311e-06, 6.749999999999812e-06, 5.290999999997548e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.945000000000256e-06, 4.971999999998922e-06, 6.667000000001866e-06, 5.6389999999982565e-06, 6.554999999998368e-06, 6.278000000001921e-06, 6.6669999999983964e-06, 5.846999999999797e-06, 5.861000000002836e-06, 5.6939999999970625e-06, 5.59800000000249e-06, 5.332999999999727e-06, 5.6389999999982565e-06, 5.833000000000227e-06, 5.403000000001046e-06, 4.985999999998492e-06, 5.695000000000006e-06, 6.180000000001462e-06, 6.556000000001311e-06, 5.055000000000337e-06, 6.458999999996856e-06, 6.305000000001587e-06, 5.292000000000491e-06, 6.235999999999742e-06, 6.4029999999985765e-06, 5.180000000000462e-06, 5.096999999999047e-06, 5.000000000001531e-06, 6.0139999999986316e-06, 5.209000000002545e-06, 6.749999999999812e-06, 5.846999999999797e-06, 6.583000000000977e-06, 5.2499999999983116e-06, 5.3339999999992005e-06, 6.666000000002392e-06, 6.333999999996731e-06, 6.777000000002947e-06, 5.7089999999995755e-06, 5.999999999999062e-06, 5.221999999999172e-06, 6.667000000001866e-06, 6.540999999998798e-06], 'source_diff': [0, 5.582999999999977e-06, 6.556000000001311e-06, 6.749999999999812e-06, 5.290999999997548e-06, 6.000000000002531e-06, 5.999999999999062e-06, 5.945000000000256e-06, 4.971999999998922e-06, 6.667000000001866e-06, 5.6389999999982565e-06, 6.554999999998368e-06, 6.278000000001921e-06, 6.6669999999983964e-06, 5.846999999999797e-06, 5.861000000002836e-06, 5.6939999999970625e-06, 5.59800000000249e-06, 5.332999999999727e-06, 5.6389999999982565e-06, 5.833000000000227e-06, 5.403000000001046e-06, 4.985999999998492e-06, 5.695000000000006e-06, 6.180000000001462e-06, 6.556000000001311e-06, 5.055000000000337e-06, 6.458999999996856e-06, 6.305000000001587e-06, 5.292000000000491e-06, 6.235999999999742e-06, 6.4029999999985765e-06, 5.180000000000462e-06, 5.096999999999047e-06, 5.000000000001531e-06, 6.0139999999986316e-06, 5.209000000002545e-06, 6.749999999999812e-06, 5.846999999999797e-06, 6.583000000000977e-06, 5.2499999999983116e-06, 5.3339999999992005e-06, 6.666000000002392e-06, 6.333999999996731e-06, 6.777000000002947e-06, 5.7089999999995755e-06, 5.999999999999062e-06, 5.221999999999172e-06, 6.667000000001866e-06, 6.540999999998798e-06], 'eventtime': [0.030838014, 0.030843597, 0.030850153, 0.030856903, 0.030862194, 0.030868194, 0.030874194, 0.030880139, 0.030885111, 0.030891778, 0.030897417, 0.030903972, 0.03091025, 0.030916917, 0.030922764, 0.030928625, 0.030934319, 0.030939917, 0.03094525, 0.030950889, 0.030956722, 0.030962125, 0.030967111, 0.030972806, 0.030978986, 0.030985542, 0.030990597, 0.030997056, 0.031003361, 0.031008653, 0.031014889, 0.031021292, 0.031026472, 0.031031569, 0.031036569, 0.031042583, 0.031047792, 0.031054542, 0.031060389, 0.031066972, 0.031072222, 0.031077556, 0.031084222, 0.031090556, 0.031097333, 0.031103042, 0.031109042, 0.031114264, 0.031120931, 0.031127472], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:49.103" endtime="20201030 18:27:49.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.099" endtime="20201030 18:27:49.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.109" level="INFO">${RESULT} = [{'diff': 5.582999999999977e-06}, {'diff': 6.749999999999812e-06}, {'diff': 6.000000000002531e-06}, {'diff': 5.945000000000256e-06}, {'diff': 6.667000000001866e-06}, {'diff': 6.554999999998368e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:49.106" endtime="20201030 18:27:49.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.112" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.582999999999977e-06, 6.749999999999812e-06, 6.000000000002531e-06, 5.945000000000256e-06, 6.667000000001866e-06, 6.554999999998368e-06, 6.6669999999983964e-06, 5.861000000002836e-06, 5.598...</msg>
<status status="PASS" starttime="20201030 18:27:49.110" endtime="20201030 18:27:49.112"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.116" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.115" endtime="20201030 18:27:49.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.119" level="INFO">VALUE: [5.582999999999977e-06, 6.749999999999812e-06, 6.000000000002531e-06, 5.945000000000256e-06, 6.667000000001866e-06, 6.554999999998368e-06, 6.6669999999983964e-06, 5.861000000002836e-06, 5.59800000000249e-06, 5.6389999999982565e-06, 5.403000000001046e-06, 5.695000000000006e-06, 6.556000000001311e-06, 6.458999999996856e-06, 5.292000000000491e-06, 6.4029999999985765e-06, 5.096999999999047e-06, 6.0139999999986316e-06, 6.749999999999812e-06, 6.583000000000977e-06, 5.3339999999992005e-06, 6.333999999996731e-06, 5.7089999999995755e-06, 5.221999999999172e-06, 6.540999999998798e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.118" endtime="20201030 18:27:49.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.113" endtime="20201030 18:27:49.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.124" endtime="20201030 18:27:49.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.122" endtime="20201030 18:27:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.121" endtime="20201030 18:27:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.751" endtime="20201030 18:27:49.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:48.750" endtime="20201030 18:27:49.144"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.152" endtime="20201030 18:27:49.163"></status>
</kw>
<msg timestamp="20201030 18:27:49.163" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.151" endtime="20201030 18:27:49.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.166" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.164" endtime="20201030 18:27:49.166"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.167" endtime="20201030 18:27:49.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.148" endtime="20201030 18:27:49.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.147" endtime="20201030 18:27:49.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.177" endtime="20201030 18:27:49.444"></status>
</kw>
<msg timestamp="20201030 18:27:49.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01752475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:49.174" endtime="20201030 18:27:49.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01752475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017529681, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:49.447" endtime="20201030 18:27:49.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.452" endtime="20201030 18:27:49.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.172" endtime="20201030 18:27:49.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.170" endtime="20201030 18:27:49.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.469" level="INFO">${debug} = {'diff': [0, 4.930999999999686e-06, 5.763000000002377e-06, 6.6529999999988265e-06, 6.014000000002101e-06, 6.055999999997341e-06, 6.472000000000422e-06, 6.7779999999989515e-06, 6.708000000001102e-06, 5...</msg>
<status status="PASS" starttime="20201030 18:27:49.456" endtime="20201030 18:27:49.469"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.470" endtime="20201030 18:27:49.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.475" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.474" endtime="20201030 18:27:49.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.478" level="INFO">VALUE: {'diff': [0, 4.930999999999686e-06, 5.763000000002377e-06, 6.6529999999988265e-06, 6.014000000002101e-06, 6.055999999997341e-06, 6.472000000000422e-06, 6.7779999999989515e-06, 6.708000000001102e-06, 5.778000000001421e-06, 4.985999999998492e-06, 5.332999999999727e-06, 6.778000000002421e-06, 5.291999999997021e-06, 5.402000000001572e-06, 5.624999999998687e-06, 5.431000000000186e-06, 5.875000000002406e-06, 6.7079999999976325e-06, 5.486000000002461e-06, 5.5139999999981315e-06, 6.485999999999992e-06, 5.514000000001601e-06, 6.416999999998146e-06, 5.874999999998937e-06, 6.653000000002296e-06, 5.319000000000157e-06, 5.028000000000671e-06, 6.471999999996952e-06, 6.181000000000936e-06, 6.055000000001337e-06, 6.5980000000000205e-06, 5.471999999999422e-06, 4.985999999998492e-06, 5.582999999999977e-06, 5.653000000001296e-06, 6.167000000001366e-06, 6.415999999998673e-06, 6.7919999999985214e-06, 5.389000000001476e-06, 5.639000000001726e-06, 5.235999999998742e-06, 6.069000000000907e-06, 5.527999999997701e-06, 6.639000000002726e-06, 6.055999999997341e-06, 5.471999999999422e-06, 6.014000000002101e-06, 5.166000000000892e-06, 5.09799999999852e-06], 'source_diff': [0, 4.930999999999686e-06, 5.763000000002377e-06, 6.6529999999988265e-06, 6.014000000002101e-06, 6.055999999997341e-06, 6.472000000000422e-06, 6.7779999999989515e-06, 6.708000000001102e-06, 5.778000000001421e-06, 4.985999999998492e-06, 5.332999999999727e-06, 6.778000000002421e-06, 5.291999999997021e-06, 5.402000000001572e-06, 5.624999999998687e-06, 5.431000000000186e-06, 5.875000000002406e-06, 6.7079999999976325e-06, 5.486000000002461e-06, 5.5139999999981315e-06, 6.485999999999992e-06, 5.514000000001601e-06, 6.416999999998146e-06, 5.874999999998937e-06, 6.653000000002296e-06, 5.319000000000157e-06, 5.028000000000671e-06, 6.471999999996952e-06, 6.181000000000936e-06, 6.055000000001337e-06, 6.5980000000000205e-06, 5.471999999999422e-06, 4.985999999998492e-06, 5.582999999999977e-06, 5.653000000001296e-06, 6.167000000001366e-06, 6.415999999998673e-06, 6.7919999999985214e-06, 5.389000000001476e-06, 5.639000000001726e-06, 5.235999999998742e-06, 6.069000000000907e-06, 5.527999999997701e-06, 6.639000000002726e-06, 6.055999999997341e-06, 5.471999999999422e-06, 6.014000000002101e-06, 5.166000000000892e-06, 5.09799999999852e-06], 'eventtime': [0.01752475, 0.017529681, 0.017535444, 0.017542097, 0.017548111, 0.017554167, 0.017560639, 0.017567417, 0.017574125, 0.017579903, 0.017584889, 0.017590222, 0.017597, 0.017602292, 0.017607694, 0.017613319, 0.01761875, 0.017624625, 0.017631333, 0.017636819, 0.017642333, 0.017648819, 0.017654333, 0.01766075, 0.017666625, 0.017673278, 0.017678597, 0.017683625, 0.017690097, 0.017696278, 0.017702333, 0.017708931, 0.017714403, 0.017719389, 0.017724972, 0.017730625, 0.017736792, 0.017743208, 0.01775, 0.017755389, 0.017761028, 0.017766264, 0.017772333, 0.017777861, 0.0177845, 0.017790556, 0.017796028, 0.017802042, 0.017807208, 0.017812306], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:49.476" endtime="20201030 18:27:49.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.472" endtime="20201030 18:27:49.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.483" level="INFO">${RESULT} = [{'diff': 4.930999999999686e-06}, {'diff': 6.6529999999988265e-06}, {'diff': 6.055999999997341e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 5.778000000001421e-06}, {'diff': 5.332999999999727e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:49.480" endtime="20201030 18:27:49.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.486" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.930999999999686e-06, 6.6529999999988265e-06, 6.055999999997341e-06, 6.7779999999989515e-06, 5.778000000001421e-06, 5.332999999999727e-06, 5.291999999997021e-06, 5.624999999998687e-06, 5.87...</msg>
<status status="PASS" starttime="20201030 18:27:49.484" endtime="20201030 18:27:49.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.490" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.489" endtime="20201030 18:27:49.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.493" level="INFO">VALUE: [4.930999999999686e-06, 6.6529999999988265e-06, 6.055999999997341e-06, 6.7779999999989515e-06, 5.778000000001421e-06, 5.332999999999727e-06, 5.291999999997021e-06, 5.624999999998687e-06, 5.875000000002406e-06, 5.486000000002461e-06, 6.485999999999992e-06, 6.416999999998146e-06, 6.653000000002296e-06, 5.028000000000671e-06, 6.181000000000936e-06, 6.5980000000000205e-06, 4.985999999998492e-06, 5.653000000001296e-06, 6.415999999998673e-06, 5.389000000001476e-06, 5.235999999998742e-06, 5.527999999997701e-06, 6.055999999997341e-06, 6.014000000002101e-06, 5.09799999999852e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.492" endtime="20201030 18:27:49.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.487" endtime="20201030 18:27:49.494"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.497" endtime="20201030 18:27:49.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.496" endtime="20201030 18:27:49.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.495" endtime="20201030 18:27:49.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.145" endtime="20201030 18:27:49.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.145" endtime="20201030 18:27:49.518"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.527" endtime="20201030 18:27:49.539"></status>
</kw>
<msg timestamp="20201030 18:27:49.539" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.525" endtime="20201030 18:27:49.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.540" endtime="20201030 18:27:49.542"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.543" endtime="20201030 18:27:49.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.522" endtime="20201030 18:27:49.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.520" endtime="20201030 18:27:49.545"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.552" endtime="20201030 18:27:49.819"></status>
</kw>
<msg timestamp="20201030 18:27:49.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.550" endtime="20201030 18:27:49.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018468333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.822" endtime="20201030 18:27:49.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.827" endtime="20201030 18:27:49.829"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.548" endtime="20201030 18:27:49.830"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.546" endtime="20201030 18:27:49.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:49.845" level="INFO">${debug} = {'diff': [0, 5.8889999999985065e-06, 6.556000000001311e-06, 5.499999999998562e-06, 6.597000000000547e-06, 6.485999999999992e-06, 5.403000000001046e-06, 5.582999999999977e-06, 4.985999999998492e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:49.831" endtime="20201030 18:27:49.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.846" endtime="20201030 18:27:49.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.851" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:49.850" endtime="20201030 18:27:49.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.854" level="INFO">VALUE: {'diff': [0, 5.8889999999985065e-06, 6.556000000001311e-06, 5.499999999998562e-06, 6.597000000000547e-06, 6.485999999999992e-06, 5.403000000001046e-06, 5.582999999999977e-06, 4.985999999998492e-06, 6.000000000002531e-06, 5.292000000000491e-06, 5.971999999999922e-06, 5.569999999999881e-06, 5.860999999999367e-06, 6.304999999998118e-06, 6.235999999999742e-06, 6.070000000000381e-06, 5.278000000000921e-06, 5.041000000000767e-06, 6.195000000000506e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.764000000001851e-06, 6.318999999997688e-06, 5.875000000002406e-06, 5.222999999998645e-06, 5.999999999999062e-06, 6.776999999999478e-06, 6.653000000002296e-06, 5.999999999999062e-06, 5.7639999999983815e-06, 6.235999999999742e-06, 5.000000000001531e-06, 5.8889999999985065e-06, 5.3200000000031e-06, 6.249999999999312e-06, 6.7079999999976325e-06, 6.069000000000907e-06, 5.3339999999992005e-06, 5.291000000001017e-06, 5.4589999999993255e-06, 5.652000000001822e-06, 6.5279999999987015e-06, 6.264000000002351e-06, 6.1529999999983265e-06, 6.305000000001587e-06, 5.4589999999993255e-06, 5.2499999999983116e-06, 4.972000000002391e-06, 5.235999999998742e-06], 'source_diff': [0, 5.8889999999985065e-06, 6.556000000001311e-06, 5.499999999998562e-06, 6.597000000000547e-06, 6.485999999999992e-06, 5.403000000001046e-06, 5.582999999999977e-06, 4.985999999998492e-06, 6.000000000002531e-06, 5.292000000000491e-06, 5.971999999999922e-06, 5.569999999999881e-06, 5.860999999999367e-06, 6.304999999998118e-06, 6.235999999999742e-06, 6.070000000000381e-06, 5.278000000000921e-06, 5.041000000000767e-06, 6.195000000000506e-06, 5.582999999999977e-06, 5.624999999998687e-06, 5.764000000001851e-06, 6.318999999997688e-06, 5.875000000002406e-06, 5.222999999998645e-06, 5.999999999999062e-06, 6.776999999999478e-06, 6.653000000002296e-06, 5.999999999999062e-06, 5.7639999999983815e-06, 6.235999999999742e-06, 5.000000000001531e-06, 5.8889999999985065e-06, 5.3200000000031e-06, 6.249999999999312e-06, 6.7079999999976325e-06, 6.069000000000907e-06, 5.3339999999992005e-06, 5.291000000001017e-06, 5.4589999999993255e-06, 5.652000000001822e-06, 6.5279999999987015e-06, 6.264000000002351e-06, 6.1529999999983265e-06, 6.305000000001587e-06, 5.4589999999993255e-06, 5.2499999999983116e-06, 4.972000000002391e-06, 5.235999999998742e-06], 'eventtime': [0.018468333, 0.018474222, 0.018480778, 0.018486278, 0.018492875, 0.018499361, 0.018504764, 0.018510347, 0.018515333, 0.018521333, 0.018526625, 0.018532597, 0.018538167, 0.018544028, 0.018550333, 0.018556569, 0.018562639, 0.018567917, 0.018572958, 0.018579153, 0.018584736, 0.018590361, 0.018596125, 0.018602444, 0.018608319, 0.018613542, 0.018619542, 0.018626319, 0.018632972, 0.018638972, 0.018644736, 0.018650972, 0.018655972, 0.018661861, 0.018667181, 0.018673431, 0.018680139, 0.018686208, 0.018691542, 0.018696833, 0.018702292, 0.018707944, 0.018714472, 0.018720736, 0.018726889, 0.018733194, 0.018738653, 0.018743903, 0.018748875, 0.018754111], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:49.852" endtime="20201030 18:27:49.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.848" endtime="20201030 18:27:49.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:49.858" level="INFO">${RESULT} = [{'diff': 5.8889999999985065e-06}, {'diff': 5.499999999998562e-06}, {'diff': 6.485999999999992e-06}, {'diff': 5.582999999999977e-06}, {'diff': 6.000000000002531e-06}, {'diff': 5.971999999999922e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:49.856" endtime="20201030 18:27:49.858"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:49.862" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.8889999999985065e-06, 5.499999999998562e-06, 6.485999999999992e-06, 5.582999999999977e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.860999999999367e-06, 6.235999999999742e-06, 5.278...</msg>
<status status="PASS" starttime="20201030 18:27:49.859" endtime="20201030 18:27:49.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.866" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:49.865" endtime="20201030 18:27:49.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.868" level="INFO">VALUE: [5.8889999999985065e-06, 5.499999999998562e-06, 6.485999999999992e-06, 5.582999999999977e-06, 6.000000000002531e-06, 5.971999999999922e-06, 5.860999999999367e-06, 6.235999999999742e-06, 5.278000000000921e-06, 6.195000000000506e-06, 5.624999999998687e-06, 6.318999999997688e-06, 5.222999999998645e-06, 6.776999999999478e-06, 5.999999999999062e-06, 6.235999999999742e-06, 5.8889999999985065e-06, 6.249999999999312e-06, 6.069000000000907e-06, 5.291000000001017e-06, 5.652000000001822e-06, 6.264000000002351e-06, 6.305000000001587e-06, 5.2499999999983116e-06, 5.235999999998742e-06]</msg>
<status status="PASS" starttime="20201030 18:27:49.867" endtime="20201030 18:27:49.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.862" endtime="20201030 18:27:49.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:49.874" endtime="20201030 18:27:49.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.871" endtime="20201030 18:27:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.870" endtime="20201030 18:27:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.519" endtime="20201030 18:27:49.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.518" endtime="20201030 18:27:49.894"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.902" endtime="20201030 18:27:49.913"></status>
</kw>
<msg timestamp="20201030 18:27:49.913" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.901" endtime="20201030 18:27:49.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:49.916" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:49.914" endtime="20201030 18:27:49.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.917" endtime="20201030 18:27:49.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.898" endtime="20201030 18:27:49.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.897" endtime="20201030 18:27:49.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:49.926" endtime="20201030 18:27:50.192"></status>
</kw>
<msg timestamp="20201030 18:27:50.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:49.924" endtime="20201030 18:27:50.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017537694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017543028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.195" endtime="20201030 18:27:50.200"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.201" endtime="20201030 18:27:50.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.922" endtime="20201030 18:27:50.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.920" endtime="20201030 18:27:50.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.217" level="INFO">${debug} = {'diff': [0, 5.3339999999992005e-06, 6.000000000002531e-06, 5.235999999998742e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.485999999998992e-06, 5.110999999998617e-06, 5.473000000002365e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:50.204" endtime="20201030 18:27:50.218"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.219" endtime="20201030 18:27:50.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.224" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.223" endtime="20201030 18:27:50.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.227" level="INFO">VALUE: {'diff': [0, 5.3339999999992005e-06, 6.000000000002531e-06, 5.235999999998742e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.485999999998992e-06, 5.110999999998617e-06, 5.473000000002365e-06, 6.762999999999908e-06, 5.472999999998895e-06, 5.166000000000892e-06, 6.6669999999983964e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.291000000001017e-06, 6.4029999999985765e-06, 5.945000000000256e-06, 6.360999999999867e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 6.208000000000602e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.722000000000672e-06, 6.541999999998271e-06, 5.389000000001476e-06, 6.736000000000242e-06, 5.860999999999367e-06, 5.055999999999811e-06, 5.819000000000657e-06, 6.5969999999970774e-06, 5.820000000000131e-06, 6.597000000000547e-06, 5.931000000000686e-06, 5.708000000000102e-06, 6.417000000001616e-06, 6.485999999999992e-06, 5.110999999998617e-06, 5.985999999999492e-06, 6.374999999999437e-06, 5.055999999999811e-06, 6.110999999999617e-06, 6.777000000002947e-06, 5.11199999999809e-06, 5.332999999999727e-06, 5.055000000000337e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.833000000000227e-06], 'source_diff': [0, 5.3339999999992005e-06, 6.000000000002531e-06, 5.235999999998742e-06, 5.346999999999297e-06, 5.375000000001906e-06, 5.485999999998992e-06, 5.110999999998617e-06, 5.473000000002365e-06, 6.762999999999908e-06, 5.472999999998895e-06, 5.166000000000892e-06, 6.6669999999983964e-06, 5.639000000001726e-06, 5.6389999999982565e-06, 5.291000000001017e-06, 6.4029999999985765e-06, 5.945000000000256e-06, 6.360999999999867e-06, 6.014000000002101e-06, 6.0139999999986316e-06, 6.208000000000602e-06, 6.485999999999992e-06, 6.472000000000422e-06, 6.722000000000672e-06, 6.541999999998271e-06, 5.389000000001476e-06, 6.736000000000242e-06, 5.860999999999367e-06, 5.055999999999811e-06, 5.819000000000657e-06, 6.5969999999970774e-06, 5.820000000000131e-06, 6.597000000000547e-06, 5.931000000000686e-06, 5.708000000000102e-06, 6.417000000001616e-06, 6.485999999999992e-06, 5.110999999998617e-06, 5.985999999999492e-06, 6.374999999999437e-06, 5.055999999999811e-06, 6.110999999999617e-06, 6.777000000002947e-06, 5.11199999999809e-06, 5.332999999999727e-06, 5.055000000000337e-06, 5.278000000000921e-06, 5.278000000000921e-06, 5.833000000000227e-06], 'eventtime': [0.017537694, 0.017543028, 0.017549028, 0.017554264, 0.017559611, 0.017564986, 0.017570472, 0.017575583, 0.017581056, 0.017587819, 0.017593292, 0.017598458, 0.017605125, 0.017610764, 0.017616403, 0.017621694, 0.017628097, 0.017634042, 0.017640403, 0.017646417, 0.017652431, 0.017658639, 0.017665125, 0.017671597, 0.017678319, 0.017684861, 0.01769025, 0.017696986, 0.017702847, 0.017707903, 0.017713722, 0.017720319, 0.017726139, 0.017732736, 0.017738667, 0.017744375, 0.017750792, 0.017757278, 0.017762389, 0.017768375, 0.01777475, 0.017779806, 0.017785917, 0.017792694, 0.017797806, 0.017803139, 0.017808194, 0.017813472, 0.01781875, 0.017824583], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:50.225" endtime="20201030 18:27:50.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.221" endtime="20201030 18:27:50.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.232" level="INFO">${RESULT} = [{'diff': 5.3339999999992005e-06}, {'diff': 5.235999999998742e-06}, {'diff': 5.375000000001906e-06}, {'diff': 5.110999999998617e-06}, {'diff': 6.762999999999908e-06}, {'diff': 5.166000000000892e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:50.229" endtime="20201030 18:27:50.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.236" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.3339999999992005e-06, 5.235999999998742e-06, 5.375000000001906e-06, 5.110999999998617e-06, 6.762999999999908e-06, 5.166000000000892e-06, 5.639000000001726e-06, 5.291000000001017e-06, 5.945...</msg>
<status status="PASS" starttime="20201030 18:27:50.233" endtime="20201030 18:27:50.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.241" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.240" endtime="20201030 18:27:50.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.243" level="INFO">VALUE: [5.3339999999992005e-06, 5.235999999998742e-06, 5.375000000001906e-06, 5.110999999998617e-06, 6.762999999999908e-06, 5.166000000000892e-06, 5.639000000001726e-06, 5.291000000001017e-06, 5.945000000000256e-06, 6.014000000002101e-06, 6.208000000000602e-06, 6.472000000000422e-06, 6.541999999998271e-06, 6.736000000000242e-06, 5.055999999999811e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 5.708000000000102e-06, 6.485999999999992e-06, 5.985999999999492e-06, 5.055999999999811e-06, 6.777000000002947e-06, 5.332999999999727e-06, 5.278000000000921e-06, 5.833000000000227e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.242" endtime="20201030 18:27:50.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.237" endtime="20201030 18:27:50.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.247" endtime="20201030 18:27:50.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.246" endtime="20201030 18:27:50.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.245" endtime="20201030 18:27:50.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.895" endtime="20201030 18:27:50.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:49.895" endtime="20201030 18:27:50.268"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.276" endtime="20201030 18:27:50.286"></status>
</kw>
<msg timestamp="20201030 18:27:50.287" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.275" endtime="20201030 18:27:50.287"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.289" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.288" endtime="20201030 18:27:50.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.290" endtime="20201030 18:27:50.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.272" endtime="20201030 18:27:50.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.270" endtime="20201030 18:27:50.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.299" endtime="20201030 18:27:50.568"></status>
</kw>
<msg timestamp="20201030 18:27:50.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.298" endtime="20201030 18:27:50.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017599903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017606681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.571" endtime="20201030 18:27:50.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.577" endtime="20201030 18:27:50.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.295" endtime="20201030 18:27:50.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.294" endtime="20201030 18:27:50.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.594" level="INFO">${debug} = {'diff': [0, 6.7779999999989515e-06, 6.527000000002697e-06, 6.069999999996911e-06, 5.694000000000532e-06, 5.055999999999811e-06, 5.778000000001421e-06, 5.096999999999047e-06, 5.653000000001296e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:50.580" endtime="20201030 18:27:50.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.595" endtime="20201030 18:27:50.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.601" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.600" endtime="20201030 18:27:50.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.604" level="INFO">VALUE: {'diff': [0, 6.7779999999989515e-06, 6.527000000002697e-06, 6.069999999996911e-06, 5.694000000000532e-06, 5.055999999999811e-06, 5.778000000001421e-06, 5.096999999999047e-06, 5.653000000001296e-06, 5.207999999999602e-06, 6.0279999999982015e-06, 5.027000000001197e-06, 5.749999999998812e-06, 6.250000000002781e-06, 6.7779999999989515e-06, 5.153000000000796e-06, 5.306000000000061e-06, 5.804999999997618e-06, 5.889000000001976e-06, 5.819000000000657e-06, 6.708999999997106e-06, 6.416000000002142e-06, 5.292000000000491e-06, 6.180999999997466e-06, 5.166000000000892e-06, 5.4589999999993255e-06, 6.514000000002601e-06, 6.7079999999976325e-06, 5.082999999999477e-06, 5.472000000002891e-06, 6.708999999997106e-06, 5.028000000000671e-06, 5.846999999999797e-06, 5.041000000000767e-06, 4.930999999999686e-06, 5.111000000002086e-06, 6.319999999997161e-06, 6.388000000003002e-06, 6.486999999999465e-06, 5.694000000000532e-06, 6.7779999999989515e-06, 5.6529999999978264e-06, 6.762999999999908e-06, 4.931000000003155e-06, 5.166999999996896e-06, 5.055000000000337e-06, 4.945000000002725e-06, 6.568999999997938e-06, 5.055999999999811e-06, 5.944000000000782e-06], 'source_diff': [0, 6.7779999999989515e-06, 6.527000000002697e-06, 6.069999999996911e-06, 5.694000000000532e-06, 5.055999999999811e-06, 5.778000000001421e-06, 5.096999999999047e-06, 5.653000000001296e-06, 5.207999999999602e-06, 6.0279999999982015e-06, 5.027000000001197e-06, 5.749999999998812e-06, 6.250000000002781e-06, 6.7779999999989515e-06, 5.153000000000796e-06, 5.306000000000061e-06, 5.804999999997618e-06, 5.889000000001976e-06, 5.819000000000657e-06, 6.708999999997106e-06, 6.416000000002142e-06, 5.292000000000491e-06, 6.180999999997466e-06, 5.166000000000892e-06, 5.4589999999993255e-06, 6.514000000002601e-06, 6.7079999999976325e-06, 5.082999999999477e-06, 5.472000000002891e-06, 6.708999999997106e-06, 5.028000000000671e-06, 5.846999999999797e-06, 5.041000000000767e-06, 4.930999999999686e-06, 5.111000000002086e-06, 6.319999999997161e-06, 6.388000000003002e-06, 6.486999999999465e-06, 5.694000000000532e-06, 6.7779999999989515e-06, 5.6529999999978264e-06, 6.762999999999908e-06, 4.931000000003155e-06, 5.166999999996896e-06, 5.055000000000337e-06, 4.945000000002725e-06, 6.568999999997938e-06, 5.055999999999811e-06, 5.944000000000782e-06], 'eventtime': [0.017599903, 0.017606681, 0.017613208, 0.017619278, 0.017624972, 0.017630028, 0.017635806, 0.017640903, 0.017646556, 0.017651764, 0.017657792, 0.017662819, 0.017668569, 0.017674819, 0.017681597, 0.01768675, 0.017692056, 0.017697861, 0.01770375, 0.017709569, 0.017716278, 0.017722694, 0.017727986, 0.017734167, 0.017739333, 0.017744792, 0.017751306, 0.017758014, 0.017763097, 0.017768569, 0.017775278, 0.017780306, 0.017786153, 0.017791194, 0.017796125, 0.017801236, 0.017807556, 0.017813944, 0.017820431, 0.017826125, 0.017832903, 0.017838556, 0.017845319, 0.01785025, 0.017855417, 0.017860472, 0.017865417, 0.017871986, 0.017877042, 0.017882986], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:50.602" endtime="20201030 18:27:50.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.597" endtime="20201030 18:27:50.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.608" level="INFO">${RESULT} = [{'diff': 6.7779999999989515e-06}, {'diff': 6.069999999996911e-06}, {'diff': 5.055999999999811e-06}, {'diff': 5.096999999999047e-06}, {'diff': 5.207999999999602e-06}, {'diff': 5.027000000001197e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:50.606" endtime="20201030 18:27:50.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.612" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.7779999999989515e-06, 6.069999999996911e-06, 5.055999999999811e-06, 5.096999999999047e-06, 5.207999999999602e-06, 5.027000000001197e-06, 6.250000000002781e-06, 5.153000000000796e-06, 5.804...</msg>
<status status="PASS" starttime="20201030 18:27:50.609" endtime="20201030 18:27:50.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.616" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.615" endtime="20201030 18:27:50.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.618" level="INFO">VALUE: [6.7779999999989515e-06, 6.069999999996911e-06, 5.055999999999811e-06, 5.096999999999047e-06, 5.207999999999602e-06, 5.027000000001197e-06, 6.250000000002781e-06, 5.153000000000796e-06, 5.804999999997618e-06, 5.819000000000657e-06, 6.416000000002142e-06, 6.180999999997466e-06, 5.4589999999993255e-06, 6.7079999999976325e-06, 5.472000000002891e-06, 5.028000000000671e-06, 5.041000000000767e-06, 5.111000000002086e-06, 6.388000000003002e-06, 5.694000000000532e-06, 5.6529999999978264e-06, 4.931000000003155e-06, 5.055000000000337e-06, 6.568999999997938e-06, 5.944000000000782e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.617" endtime="20201030 18:27:50.619"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.613" endtime="20201030 18:27:50.619"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.623" endtime="20201030 18:27:50.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.622" endtime="20201030 18:27:50.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.620" endtime="20201030 18:27:50.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.269" endtime="20201030 18:27:50.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.269" endtime="20201030 18:27:50.644"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.652" endtime="20201030 18:27:50.663"></status>
</kw>
<msg timestamp="20201030 18:27:50.663" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.650" endtime="20201030 18:27:50.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.666" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:50.664" endtime="20201030 18:27:50.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.667" endtime="20201030 18:27:50.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.648" endtime="20201030 18:27:50.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.646" endtime="20201030 18:27:50.669"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.676" endtime="20201030 18:27:50.944"></status>
</kw>
<msg timestamp="20201030 18:27:50.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017570306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.675" endtime="20201030 18:27:50.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017563917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017570306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:50.947" endtime="20201030 18:27:50.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.953" endtime="20201030 18:27:50.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.672" endtime="20201030 18:27:50.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.670" endtime="20201030 18:27:50.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:50.969" level="INFO">${debug} = {'diff': [0, 6.389000000002476e-06, 6.679999999998493e-06, 6.806000000001561e-06, 6.2639999999988816e-06, 6.387999999999533e-06, 5.09800000000199e-06, 5.332999999999727e-06, 6.6529999999988265e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:50.956" endtime="20201030 18:27:50.969"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:50.970" endtime="20201030 18:27:50.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.975" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:50.974" endtime="20201030 18:27:50.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.979" level="INFO">VALUE: {'diff': [0, 6.389000000002476e-06, 6.679999999998493e-06, 6.806000000001561e-06, 6.2639999999988816e-06, 6.387999999999533e-06, 5.09800000000199e-06, 5.332999999999727e-06, 6.6529999999988265e-06, 5.639000000001726e-06, 6.735999999996772e-06, 5.764000000001851e-06, 6.165999999998423e-06, 6.653000000002296e-06, 5.6389999999982565e-06, 5.292000000000491e-06, 5.416000000001142e-06, 5.610999999999117e-06, 5.806000000000561e-06, 6.042000000001241e-06, 6.526999999999228e-06, 6.486999999999465e-06, 5.110999999998617e-06, 6.472000000000422e-06, 6.347000000000297e-06, 5.653000000001296e-06, 5.874999999998937e-06, 6.1389999999987566e-06, 5.153000000000796e-06, 6.526999999999228e-06, 6.485999999999992e-06, 5.223000000002115e-06, 5.944000000000782e-06, 5.527999999997701e-06, 5.457999999999852e-06, 5.221999999999172e-06, 6.36200000000281e-06, 5.401999999998103e-06, 5.9589999999998255e-06, 6.472000000000422e-06, 6.110999999999617e-06, 5.221999999999172e-06, 5.709000000003045e-06, 5.804999999997618e-06, 4.889000000000976e-06, 6.611000000000117e-06, 6.445000000000756e-06, 5.415999999997673e-06, 5.167000000000366e-06, 6.542000000001741e-06], 'source_diff': [0, 6.389000000002476e-06, 6.679999999998493e-06, 6.806000000001561e-06, 6.2639999999988816e-06, 6.387999999999533e-06, 5.09800000000199e-06, 5.332999999999727e-06, 6.6529999999988265e-06, 5.639000000001726e-06, 6.735999999996772e-06, 5.764000000001851e-06, 6.165999999998423e-06, 6.653000000002296e-06, 5.6389999999982565e-06, 5.292000000000491e-06, 5.416000000001142e-06, 5.610999999999117e-06, 5.806000000000561e-06, 6.042000000001241e-06, 6.526999999999228e-06, 6.486999999999465e-06, 5.110999999998617e-06, 6.472000000000422e-06, 6.347000000000297e-06, 5.653000000001296e-06, 5.874999999998937e-06, 6.1389999999987566e-06, 5.153000000000796e-06, 6.526999999999228e-06, 6.485999999999992e-06, 5.223000000002115e-06, 5.944000000000782e-06, 5.527999999997701e-06, 5.457999999999852e-06, 5.221999999999172e-06, 6.36200000000281e-06, 5.401999999998103e-06, 5.9589999999998255e-06, 6.472000000000422e-06, 6.110999999999617e-06, 5.221999999999172e-06, 5.709000000003045e-06, 5.804999999997618e-06, 4.889000000000976e-06, 6.611000000000117e-06, 6.445000000000756e-06, 5.415999999997673e-06, 5.167000000000366e-06, 6.542000000001741e-06], 'eventtime': [0.017563917, 0.017570306, 0.017576986, 0.017583792, 0.017590056, 0.017596444, 0.017601542, 0.017606875, 0.017613528, 0.017619167, 0.017625903, 0.017631667, 0.017637833, 0.017644486, 0.017650125, 0.017655417, 0.017660833, 0.017666444, 0.01767225, 0.017678292, 0.017684819, 0.017691306, 0.017696417, 0.017702889, 0.017709236, 0.017714889, 0.017720764, 0.017726903, 0.017732056, 0.017738583, 0.017745069, 0.017750292, 0.017756236, 0.017761764, 0.017767222, 0.017772444, 0.017778806, 0.017784208, 0.017790167, 0.017796639, 0.01780275, 0.017807972, 0.017813681, 0.017819486, 0.017824375, 0.017830986, 0.017837431, 0.017842847, 0.017848014, 0.017854556], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:50.976" endtime="20201030 18:27:50.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.972" endtime="20201030 18:27:50.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:50.983" level="INFO">${RESULT} = [{'diff': 6.389000000002476e-06}, {'diff': 6.806000000001561e-06}, {'diff': 6.387999999999533e-06}, {'diff': 5.332999999999727e-06}, {'diff': 5.639000000001726e-06}, {'diff': 5.764000000001851e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:50.981" endtime="20201030 18:27:50.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:50.987" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.389000000002476e-06, 6.806000000001561e-06, 6.387999999999533e-06, 5.332999999999727e-06, 5.639000000001726e-06, 5.764000000001851e-06, 6.653000000002296e-06, 5.292000000000491e-06, 5.6109...</msg>
<status status="PASS" starttime="20201030 18:27:50.984" endtime="20201030 18:27:50.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.991" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:50.990" endtime="20201030 18:27:50.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:50.993" level="INFO">VALUE: [6.389000000002476e-06, 6.806000000001561e-06, 6.387999999999533e-06, 5.332999999999727e-06, 5.639000000001726e-06, 5.764000000001851e-06, 6.653000000002296e-06, 5.292000000000491e-06, 5.610999999999117e-06, 6.042000000001241e-06, 6.486999999999465e-06, 6.472000000000422e-06, 5.653000000001296e-06, 6.1389999999987566e-06, 6.526999999999228e-06, 5.223000000002115e-06, 5.527999999997701e-06, 5.221999999999172e-06, 5.401999999998103e-06, 6.472000000000422e-06, 5.221999999999172e-06, 5.804999999997618e-06, 6.611000000000117e-06, 5.415999999997673e-06, 6.542000000001741e-06]</msg>
<status status="PASS" starttime="20201030 18:27:50.992" endtime="20201030 18:27:50.993"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.987" endtime="20201030 18:27:50.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:50.998" endtime="20201030 18:27:51.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.996" endtime="20201030 18:27:51.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.995" endtime="20201030 18:27:51.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.645" endtime="20201030 18:27:51.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:50.644" endtime="20201030 18:27:51.018"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.027" endtime="20201030 18:27:51.039"></status>
</kw>
<msg timestamp="20201030 18:27:51.039" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.025" endtime="20201030 18:27:51.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.040" endtime="20201030 18:27:51.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.043" endtime="20201030 18:27:51.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.022" endtime="20201030 18:27:51.045"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.021" endtime="20201030 18:27:51.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.052" endtime="20201030 18:27:51.320"></status>
</kw>
<msg timestamp="20201030 18:27:51.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018759306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.050" endtime="20201030 18:27:51.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018754375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018759306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.323" endtime="20201030 18:27:51.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.329" endtime="20201030 18:27:51.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.048" endtime="20201030 18:27:51.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.046" endtime="20201030 18:27:51.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:51.347" level="INFO">${debug} = {'diff': [0, 4.930999999999686e-06, 6.776999999999478e-06, 5.889000000001976e-06, 5.7639999999983815e-06, 5.096999999999047e-06, 6.570000000000881e-06, 6.194000000001032e-06, 6.541999999998271e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:51.333" endtime="20201030 18:27:51.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.348" endtime="20201030 18:27:51.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.353" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:51.352" endtime="20201030 18:27:51.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.356" level="INFO">VALUE: {'diff': [0, 4.930999999999686e-06, 6.776999999999478e-06, 5.889000000001976e-06, 5.7639999999983815e-06, 5.096999999999047e-06, 6.570000000000881e-06, 6.194000000001032e-06, 6.541999999998271e-06, 6.249999999999312e-06, 5.403000000001046e-06, 5.639000000001726e-06, 4.930000000000212e-06, 5.527999999997701e-06, 5.819000000000657e-06, 6.124999999999187e-06, 5.820000000000131e-06, 5.875000000002406e-06, 4.985999999998492e-06, 5.471999999999422e-06, 5.639000000001726e-06, 5.5139999999981315e-06, 5.361000000002336e-06, 5.485999999998992e-06, 6.2779999999984515e-06, 6.430000000001712e-06, 5.86199999999884e-06, 4.943999999999782e-06, 6.056000000000811e-06, 5.277000000001447e-06, 6.4729999999998955e-06, 6.124999999999187e-06, 6.776999999999478e-06, 6.181000000000936e-06, 6.597000000000547e-06, 5.402999999997576e-06, 5.278000000000921e-06, 5.235999999998742e-06, 5.278000000000921e-06, 5.235999999998742e-06, 5.708000000000102e-06, 6.764000000002851e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 5.402000000001572e-06, 6.709000000000576e-06, 6.054999999997868e-06, 5.471999999999422e-06, 4.987000000001435e-06, 6.069000000000907e-06], 'source_diff': [0, 4.930999999999686e-06, 6.776999999999478e-06, 5.889000000001976e-06, 5.7639999999983815e-06, 5.096999999999047e-06, 6.570000000000881e-06, 6.194000000001032e-06, 6.541999999998271e-06, 6.249999999999312e-06, 5.403000000001046e-06, 5.639000000001726e-06, 4.930000000000212e-06, 5.527999999997701e-06, 5.819000000000657e-06, 6.124999999999187e-06, 5.820000000000131e-06, 5.875000000002406e-06, 4.985999999998492e-06, 5.471999999999422e-06, 5.639000000001726e-06, 5.5139999999981315e-06, 5.361000000002336e-06, 5.485999999998992e-06, 6.2779999999984515e-06, 6.430000000001712e-06, 5.86199999999884e-06, 4.943999999999782e-06, 6.056000000000811e-06, 5.277000000001447e-06, 6.4729999999998955e-06, 6.124999999999187e-06, 6.776999999999478e-06, 6.181000000000936e-06, 6.597000000000547e-06, 5.402999999997576e-06, 5.278000000000921e-06, 5.235999999998742e-06, 5.278000000000921e-06, 5.235999999998742e-06, 5.708000000000102e-06, 6.764000000002851e-06, 6.318999999997688e-06, 6.3479999999997705e-06, 5.402000000001572e-06, 6.709000000000576e-06, 6.054999999997868e-06, 5.471999999999422e-06, 4.987000000001435e-06, 6.069000000000907e-06], 'eventtime': [0.018754375, 0.018759306, 0.018766083, 0.018771972, 0.018777736, 0.018782833, 0.018789403, 0.018795597, 0.018802139, 0.018808389, 0.018813792, 0.018819431, 0.018824361, 0.018829889, 0.018835708, 0.018841833, 0.018847653, 0.018853528, 0.018858514, 0.018863986, 0.018869625, 0.018875139, 0.0188805, 0.018885986, 0.018892264, 0.018898694, 0.018904556, 0.0189095, 0.018915556, 0.018920833, 0.018927306, 0.018933431, 0.018940208, 0.018946389, 0.018952986, 0.018958389, 0.018963667, 0.018968903, 0.018974181, 0.018979417, 0.018985125, 0.018991889, 0.018998208, 0.019004556, 0.019009958, 0.019016667, 0.019022722, 0.019028194, 0.019033181, 0.01903925], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:51.354" endtime="20201030 18:27:51.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.350" endtime="20201030 18:27:51.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.361" level="INFO">${RESULT} = [{'diff': 4.930999999999686e-06}, {'diff': 5.889000000001976e-06}, {'diff': 5.096999999999047e-06}, {'diff': 6.194000000001032e-06}, {'diff': 6.249999999999312e-06}, {'diff': 5.639000000001726e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:51.358" endtime="20201030 18:27:51.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:51.364" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.930999999999686e-06, 5.889000000001976e-06, 5.096999999999047e-06, 6.194000000001032e-06, 6.249999999999312e-06, 5.639000000001726e-06, 5.527999999997701e-06, 6.124999999999187e-06, 5.8750...</msg>
<status status="PASS" starttime="20201030 18:27:51.362" endtime="20201030 18:27:51.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.368" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:51.367" endtime="20201030 18:27:51.368"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.370" level="INFO">VALUE: [4.930999999999686e-06, 5.889000000001976e-06, 5.096999999999047e-06, 6.194000000001032e-06, 6.249999999999312e-06, 5.639000000001726e-06, 5.527999999997701e-06, 6.124999999999187e-06, 5.875000000002406e-06, 5.471999999999422e-06, 5.5139999999981315e-06, 5.485999999998992e-06, 6.430000000001712e-06, 4.943999999999782e-06, 5.277000000001447e-06, 6.124999999999187e-06, 6.181000000000936e-06, 5.402999999997576e-06, 5.235999999998742e-06, 5.235999999998742e-06, 6.764000000002851e-06, 6.3479999999997705e-06, 6.709000000000576e-06, 5.471999999999422e-06, 6.069000000000907e-06]</msg>
<status status="PASS" starttime="20201030 18:27:51.369" endtime="20201030 18:27:51.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.365" endtime="20201030 18:27:51.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.376" endtime="20201030 18:27:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.374" endtime="20201030 18:27:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.373" endtime="20201030 18:27:51.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.019" endtime="20201030 18:27:51.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.019" endtime="20201030 18:27:51.397"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.405" endtime="20201030 18:27:51.416"></status>
</kw>
<msg timestamp="20201030 18:27:51.416" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.403" endtime="20201030 18:27:51.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.419" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.417" endtime="20201030 18:27:51.419"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.420" endtime="20201030 18:27:51.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.401" endtime="20201030 18:27:51.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.399" endtime="20201030 18:27:51.423"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.429" endtime="20201030 18:27:51.696"></status>
</kw>
<msg timestamp="20201030 18:27:51.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017498431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017503903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.428" endtime="20201030 18:27:51.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017498431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017503903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.699" endtime="20201030 18:27:51.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.704" endtime="20201030 18:27:51.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.425" endtime="20201030 18:27:51.706"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.423" endtime="20201030 18:27:51.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:51.722" level="INFO">${debug} = {'diff': [0, 5.472000000002891e-06, 6.485999999999992e-06, 6.222000000000172e-06, 6.5969999999970774e-06, 5.34800000000224e-06, 5.651999999998353e-06, 6.070000000000381e-06, 4.971999999998922e-06, 5.1...</msg>
<status status="PASS" starttime="20201030 18:27:51.707" endtime="20201030 18:27:51.722"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.723" endtime="20201030 18:27:51.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.728" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:51.727" endtime="20201030 18:27:51.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.731" level="INFO">VALUE: {'diff': [0, 5.472000000002891e-06, 6.485999999999992e-06, 6.222000000000172e-06, 6.5969999999970774e-06, 5.34800000000224e-06, 5.651999999998353e-06, 6.070000000000381e-06, 4.971999999998922e-06, 5.125000000001656e-06, 6.763999999999382e-06, 5.278000000000921e-06, 5.166000000000892e-06, 5.34799999999877e-06, 4.985999999998492e-06, 4.930000000000212e-06, 6.056000000000811e-06, 5.805000000001087e-06, 6.374999999999437e-06, 6.7919999999985214e-06, 5.806000000000561e-06, 6.360999999999867e-06, 5.166000000000892e-06, 6.124999999999187e-06, 5.34800000000224e-06, 5.999999999999062e-06, 5.457999999999852e-06, 5.819000000000657e-06, 5.6529999999978264e-06, 5.125000000001656e-06, 6.472000000000422e-06, 6.541999999998271e-06, 5.931000000000686e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.929999999997743e-06, 6.056000000000811e-06, 6.180000000001462e-06, 6.069999999996911e-06, 6.653000000002296e-06, 6.110999999999617e-06, 5.528000000001171e-06, 4.9299999999967425e-06, 4.931000000003155e-06, 5.582999999999977e-06, 6.291999999998021e-06, 6.180000000001462e-06, 5.431000000000186e-06, 5.694000000000532e-06, 5.096999999999047e-06], 'source_diff': [0, 5.472000000002891e-06, 6.485999999999992e-06, 6.222000000000172e-06, 6.5969999999970774e-06, 5.34800000000224e-06, 5.651999999998353e-06, 6.070000000000381e-06, 4.971999999998922e-06, 5.125000000001656e-06, 6.763999999999382e-06, 5.278000000000921e-06, 5.166000000000892e-06, 5.34799999999877e-06, 4.985999999998492e-06, 4.930000000000212e-06, 6.056000000000811e-06, 5.805000000001087e-06, 6.374999999999437e-06, 6.7919999999985214e-06, 5.806000000000561e-06, 6.360999999999867e-06, 5.166000000000892e-06, 6.124999999999187e-06, 5.34800000000224e-06, 5.999999999999062e-06, 5.457999999999852e-06, 5.819000000000657e-06, 5.6529999999978264e-06, 5.125000000001656e-06, 6.472000000000422e-06, 6.541999999998271e-06, 5.931000000000686e-06, 5.694000000000532e-06, 5.653000000001296e-06, 5.929999999997743e-06, 6.056000000000811e-06, 6.180000000001462e-06, 6.069999999996911e-06, 6.653000000002296e-06, 6.110999999999617e-06, 5.528000000001171e-06, 4.9299999999967425e-06, 4.931000000003155e-06, 5.582999999999977e-06, 6.291999999998021e-06, 6.180000000001462e-06, 5.431000000000186e-06, 5.694000000000532e-06, 5.096999999999047e-06], 'eventtime': [0.017498431, 0.017503903, 0.017510389, 0.017516611, 0.017523208, 0.017528556, 0.017534208, 0.017540278, 0.01754525, 0.017550375, 0.017557139, 0.017562417, 0.017567583, 0.017572931, 0.017577917, 0.017582847, 0.017588903, 0.017594708, 0.017601083, 0.017607875, 0.017613681, 0.017620042, 0.017625208, 0.017631333, 0.017636681, 0.017642681, 0.017648139, 0.017653958, 0.017659611, 0.017664736, 0.017671208, 0.01767775, 0.017683681, 0.017689375, 0.017695028, 0.017700958, 0.017707014, 0.017713194, 0.017719264, 0.017725917, 0.017732028, 0.017737556, 0.017742486, 0.017747417, 0.017753, 0.017759292, 0.017765472, 0.017770903, 0.017776597, 0.017781694], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:51.729" endtime="20201030 18:27:51.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.725" endtime="20201030 18:27:51.732"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:51.736" level="INFO">${RESULT} = [{'diff': 5.472000000002891e-06}, {'diff': 6.222000000000172e-06}, {'diff': 5.34800000000224e-06}, {'diff': 6.070000000000381e-06}, {'diff': 5.125000000001656e-06}, {'diff': 5.278000000000921e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:27:51.733" endtime="20201030 18:27:51.736"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:51.740" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.472000000002891e-06, 6.222000000000172e-06, 5.34800000000224e-06, 6.070000000000381e-06, 5.125000000001656e-06, 5.278000000000921e-06, 5.34799999999877e-06, 4.930000000000212e-06, 5.805000...</msg>
<status status="PASS" starttime="20201030 18:27:51.737" endtime="20201030 18:27:51.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:51.743" endtime="20201030 18:27:51.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.746" level="INFO">VALUE: [5.472000000002891e-06, 6.222000000000172e-06, 5.34800000000224e-06, 6.070000000000381e-06, 5.125000000001656e-06, 5.278000000000921e-06, 5.34799999999877e-06, 4.930000000000212e-06, 5.805000000001087e-06, 6.7919999999985214e-06, 6.360999999999867e-06, 6.124999999999187e-06, 5.999999999999062e-06, 5.819000000000657e-06, 5.125000000001656e-06, 6.541999999998271e-06, 5.694000000000532e-06, 5.929999999997743e-06, 6.180000000001462e-06, 6.653000000002296e-06, 5.528000000001171e-06, 4.931000000003155e-06, 6.291999999998021e-06, 5.431000000000186e-06, 5.096999999999047e-06]</msg>
<status status="PASS" starttime="20201030 18:27:51.745" endtime="20201030 18:27:51.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.741" endtime="20201030 18:27:51.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:51.751" endtime="20201030 18:27:51.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.749" endtime="20201030 18:27:51.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.748" endtime="20201030 18:27:51.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.398" endtime="20201030 18:27:51.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.397" endtime="20201030 18:27:51.771"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.779" endtime="20201030 18:27:51.790"></status>
</kw>
<msg timestamp="20201030 18:27:51.790" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.778" endtime="20201030 18:27:51.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:51.793" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:51.791" endtime="20201030 18:27:51.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.794" endtime="20201030 18:27:51.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.775" endtime="20201030 18:27:51.796"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.773" endtime="20201030 18:27:51.796"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:51.803" endtime="20201030 18:27:52.070"></status>
</kw>
<msg timestamp="20201030 18:27:52.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017422014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017428236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:51.801" endtime="20201030 18:27:52.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017422014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017428236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.073" endtime="20201030 18:27:52.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.078" endtime="20201030 18:27:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.799" endtime="20201030 18:27:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.797" endtime="20201030 18:27:52.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.096" level="INFO">${debug} = {'diff': [0, 6.222000000000172e-06, 5.431000000000186e-06, 5.624999999998687e-06, 5.527000000001697e-06, 6.291999999998021e-06, 6.181000000000936e-06, 6.291000000002017e-06, 6.360999999999867e-06, 5.4...</msg>
<status status="PASS" starttime="20201030 18:27:52.082" endtime="20201030 18:27:52.096"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.097" endtime="20201030 18:27:52.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.102" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.101" endtime="20201030 18:27:52.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.105" level="INFO">VALUE: {'diff': [0, 6.222000000000172e-06, 5.431000000000186e-06, 5.624999999998687e-06, 5.527000000001697e-06, 6.291999999998021e-06, 6.181000000000936e-06, 6.291000000002017e-06, 6.360999999999867e-06, 5.402999999997576e-06, 6.125000000002656e-06, 5.110999999998617e-06, 6.5980000000000205e-06, 6.110999999999617e-06, 5.166000000000892e-06, 5.34799999999877e-06, 6.069000000000907e-06, 5.819000000000657e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 5.652000000001822e-06, 6.056000000000811e-06, 5.582999999999977e-06, 6.180999999997466e-06, 5.291000000001017e-06, 6.3479999999997705e-06, 6.319000000001157e-06, 5.3889999999980065e-06, 6.708000000001102e-06, 6.306000000001061e-06, 6.291999999998021e-06, 6.360999999999867e-06, 6.000000000002531e-06, 4.985999999998492e-06, 6.124999999999187e-06, 6.360999999999867e-06, 4.943999999999782e-06, 6.000000000002531e-06, 5.6389999999982565e-06, 5.389000000001476e-06, 5.930999999997216e-06, 6.097000000000047e-06, 5.389000000001476e-06, 5.096999999999047e-06, 5.417000000000616e-06, 5.514000000001601e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 6.319000000001157e-06, 6.638999999999257e-06], 'source_diff': [0, 6.222000000000172e-06, 5.431000000000186e-06, 5.624999999998687e-06, 5.527000000001697e-06, 6.291999999998021e-06, 6.181000000000936e-06, 6.291000000002017e-06, 6.360999999999867e-06, 5.402999999997576e-06, 6.125000000002656e-06, 5.110999999998617e-06, 6.5980000000000205e-06, 6.110999999999617e-06, 5.166000000000892e-06, 5.34799999999877e-06, 6.069000000000907e-06, 5.819000000000657e-06, 6.0839999999999506e-06, 6.0279999999982015e-06, 5.652000000001822e-06, 6.056000000000811e-06, 5.582999999999977e-06, 6.180999999997466e-06, 5.291000000001017e-06, 6.3479999999997705e-06, 6.319000000001157e-06, 5.3889999999980065e-06, 6.708000000001102e-06, 6.306000000001061e-06, 6.291999999998021e-06, 6.360999999999867e-06, 6.000000000002531e-06, 4.985999999998492e-06, 6.124999999999187e-06, 6.360999999999867e-06, 4.943999999999782e-06, 6.000000000002531e-06, 5.6389999999982565e-06, 5.389000000001476e-06, 5.930999999997216e-06, 6.097000000000047e-06, 5.389000000001476e-06, 5.096999999999047e-06, 5.417000000000616e-06, 5.514000000001601e-06, 6.611000000000117e-06, 6.5969999999970774e-06, 6.319000000001157e-06, 6.638999999999257e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.017422014, 0.017428236, 0.017433667, 0.017439292, 0.017444819, 0.017451111, 0.017457292, 0.017463583, 0.017469944, 0.017475347, 0.017481472, 0.017486583, 0.017493181, 0.017499292, 0.017504458, 0.017509806, 0.017515875, 0.017521694, 0.017527778, 0.017533806, 0.017539458, 0.017545514, 0.017551097, 0.017557278, 0.017562569, 0.017568917, 0.017575236, 0.017580625, 0.017587333, 0.017593639, 0.017599931, 0.017606292, 0.017612292, 0.017617278, 0.017623403, 0.017629764, 0.017634708, 0.017640708, 0.017646347, 0.017651736, 0.017657667, 0.017663764, 0.017669153, 0.01767425, 0.017679667, 0.017685181, 0.017691792, 0.017698389, 0.017704708, 0.017711347], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:52.103" endtime="20201030 18:27:52.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.099" endtime="20201030 18:27:52.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.109" level="INFO">${RESULT} = [{'diff': 6.222000000000172e-06}, {'diff': 5.624999999998687e-06}, {'diff': 6.291999999998021e-06}, {'diff': 6.291000000002017e-06}, {'diff': 5.402999999997576e-06}, {'diff': 5.110999999998617e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.107" endtime="20201030 18:27:52.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.113" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.222000000000172e-06, 5.624999999998687e-06, 6.291999999998021e-06, 6.291000000002017e-06, 5.402999999997576e-06, 5.110999999998617e-06, 6.110999999999617e-06, 5.34799999999877e-06, 5.81900...</msg>
<status status="PASS" starttime="20201030 18:27:52.110" endtime="20201030 18:27:52.113"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.117" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.116" endtime="20201030 18:27:52.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.119" level="INFO">VALUE: [6.222000000000172e-06, 5.624999999998687e-06, 6.291999999998021e-06, 6.291000000002017e-06, 5.402999999997576e-06, 5.110999999998617e-06, 6.110999999999617e-06, 5.34799999999877e-06, 5.819000000000657e-06, 6.0279999999982015e-06, 6.056000000000811e-06, 6.180999999997466e-06, 6.3479999999997705e-06, 5.3889999999980065e-06, 6.306000000001061e-06, 6.360999999999867e-06, 4.985999999998492e-06, 6.360999999999867e-06, 6.000000000002531e-06, 5.389000000001476e-06, 6.097000000000047e-06, 5.096999999999047e-06, 5.514000000001601e-06, 6.5969999999970774e-06, 6.638999999999257e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.118" endtime="20201030 18:27:52.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.113" endtime="20201030 18:27:52.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.124" endtime="20201030 18:27:52.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.122" endtime="20201030 18:27:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.121" endtime="20201030 18:27:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.772" endtime="20201030 18:27:52.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:51.772" endtime="20201030 18:27:52.145"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.153" endtime="20201030 18:27:52.165"></status>
</kw>
<msg timestamp="20201030 18:27:52.165" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.151" endtime="20201030 18:27:52.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.168" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.166" endtime="20201030 18:27:52.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.169" endtime="20201030 18:27:52.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.148" endtime="20201030 18:27:52.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.147" endtime="20201030 18:27:52.172"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.179" endtime="20201030 18:27:52.447"></status>
</kw>
<msg timestamp="20201030 18:27:52.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017589194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01759475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.177" endtime="20201030 18:27:52.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017589194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01759475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.450" endtime="20201030 18:27:52.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.455" endtime="20201030 18:27:52.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.174" endtime="20201030 18:27:52.457"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.172" endtime="20201030 18:27:52.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.472" level="INFO">${debug} = {'diff': [0, 5.556000000000311e-06, 5.542000000000741e-06, 5.833000000000227e-06, 5.708000000000102e-06, 6.0979999999995205e-06, 6.722000000000672e-06, 6.736000000000242e-06, 5.985999999999492e-06, 5....</msg>
<status status="PASS" starttime="20201030 18:27:52.459" endtime="20201030 18:27:52.472"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.473" endtime="20201030 18:27:52.474"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.478" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.477" endtime="20201030 18:27:52.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.481" level="INFO">VALUE: {'diff': [0, 5.556000000000311e-06, 5.542000000000741e-06, 5.833000000000227e-06, 5.708000000000102e-06, 6.0979999999995205e-06, 6.722000000000672e-06, 6.736000000000242e-06, 5.985999999999492e-06, 5.931000000000686e-06, 6.722000000000672e-06, 5.1389999999977565e-06, 5.971999999999922e-06, 6.597000000000547e-06, 6.542000000001741e-06, 6.1389999999987566e-06, 6.040999999998298e-06, 6.584000000000451e-06, 5.291000000001017e-06, 5.34799999999877e-06, 6.416000000002142e-06, 6.5279999999987015e-06, 5.528000000001171e-06, 5.471999999999422e-06, 6.069000000000907e-06, 5.930999999997216e-06, 5.236000000002211e-06, 5.444999999999756e-06, 5.776999999998478e-06, 6.667000000001866e-06, 6.693999999998063e-06, 6.403000000002046e-06, 5.9029999999980765e-06, 5.403000000001046e-06, 5.999999999999062e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.055999999999811e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.709000000000576e-06, 6.360999999999867e-06, 6.790999999999048e-06, 5.987000000002435e-06, 6.651999999999353e-06, 6.6529999999988265e-06, 6.181000000000936e-06, 5.582999999999977e-06, 5.000000000001531e-06, 5.457999999999852e-06], 'source_diff': [0, 5.556000000000311e-06, 5.542000000000741e-06, 5.833000000000227e-06, 5.708000000000102e-06, 6.0979999999995205e-06, 6.722000000000672e-06, 6.736000000000242e-06, 5.985999999999492e-06, 5.931000000000686e-06, 6.722000000000672e-06, 5.1389999999977565e-06, 5.971999999999922e-06, 6.597000000000547e-06, 6.542000000001741e-06, 6.1389999999987566e-06, 6.040999999998298e-06, 6.584000000000451e-06, 5.291000000001017e-06, 5.34799999999877e-06, 6.416000000002142e-06, 6.5279999999987015e-06, 5.528000000001171e-06, 5.471999999999422e-06, 6.069000000000907e-06, 5.930999999997216e-06, 5.236000000002211e-06, 5.444999999999756e-06, 5.776999999998478e-06, 6.667000000001866e-06, 6.693999999998063e-06, 6.403000000002046e-06, 5.9029999999980765e-06, 5.403000000001046e-06, 5.999999999999062e-06, 5.639000000001726e-06, 5.582999999999977e-06, 5.055999999999811e-06, 6.319000000001157e-06, 6.3329999999972575e-06, 6.709000000000576e-06, 6.360999999999867e-06, 6.790999999999048e-06, 5.987000000002435e-06, 6.651999999999353e-06, 6.6529999999988265e-06, 6.181000000000936e-06, 5.582999999999977e-06, 5.000000000001531e-06, 5.457999999999852e-06], 'eventtime': [0.017589194, 0.01759475, 0.017600292, 0.017606125, 0.017611833, 0.017617931, 0.017624653, 0.017631389, 0.017637375, 0.017643306, 0.017650028, 0.017655167, 0.017661139, 0.017667736, 0.017674278, 0.017680417, 0.017686458, 0.017693042, 0.017698333, 0.017703681, 0.017710097, 0.017716625, 0.017722153, 0.017727625, 0.017733694, 0.017739625, 0.017744861, 0.017750306, 0.017756083, 0.01776275, 0.017769444, 0.017775847, 0.01778175, 0.017787153, 0.017793153, 0.017798792, 0.017804375, 0.017809431, 0.01781575, 0.017822083, 0.017828792, 0.017835153, 0.017841944, 0.017847931, 0.017854583, 0.017861236, 0.017867417, 0.017873, 0.017878, 0.017883458], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:52.479" endtime="20201030 18:27:52.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.475" endtime="20201030 18:27:52.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.486" level="INFO">${RESULT} = [{'diff': 5.556000000000311e-06}, {'diff': 5.833000000000227e-06}, {'diff': 6.0979999999995205e-06}, {'diff': 6.736000000000242e-06}, {'diff': 5.931000000000686e-06}, {'diff': 5.1389999999977565e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:52.483" endtime="20201030 18:27:52.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.489" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.556000000000311e-06, 5.833000000000227e-06, 6.0979999999995205e-06, 6.736000000000242e-06, 5.931000000000686e-06, 5.1389999999977565e-06, 6.597000000000547e-06, 6.1389999999987566e-06, 6.5...</msg>
<status status="PASS" starttime="20201030 18:27:52.487" endtime="20201030 18:27:52.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.493" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.492" endtime="20201030 18:27:52.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.496" level="INFO">VALUE: [5.556000000000311e-06, 5.833000000000227e-06, 6.0979999999995205e-06, 6.736000000000242e-06, 5.931000000000686e-06, 5.1389999999977565e-06, 6.597000000000547e-06, 6.1389999999987566e-06, 6.584000000000451e-06, 5.34799999999877e-06, 6.5279999999987015e-06, 5.471999999999422e-06, 5.930999999997216e-06, 5.444999999999756e-06, 6.667000000001866e-06, 6.403000000002046e-06, 5.403000000001046e-06, 5.639000000001726e-06, 5.055999999999811e-06, 6.3329999999972575e-06, 6.360999999999867e-06, 5.987000000002435e-06, 6.6529999999988265e-06, 5.582999999999977e-06, 5.457999999999852e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.494" endtime="20201030 18:27:52.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.490" endtime="20201030 18:27:52.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.500" endtime="20201030 18:27:52.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.499" endtime="20201030 18:27:52.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.498" endtime="20201030 18:27:52.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.145" endtime="20201030 18:27:52.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.145" endtime="20201030 18:27:52.521"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.530" endtime="20201030 18:27:52.542"></status>
</kw>
<msg timestamp="20201030 18:27:52.543" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.528" endtime="20201030 18:27:52.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.545" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.544" endtime="20201030 18:27:52.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.546" endtime="20201030 18:27:52.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.525" endtime="20201030 18:27:52.548"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.523" endtime="20201030 18:27:52.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.555" endtime="20201030 18:27:52.822"></status>
</kw>
<msg timestamp="20201030 18:27:52.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018454417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01845975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.553" endtime="20201030 18:27:52.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018454417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01845975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:27:52.825" endtime="20201030 18:27:52.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.830" endtime="20201030 18:27:52.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.551" endtime="20201030 18:27:52.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.549" endtime="20201030 18:27:52.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:52.847" level="INFO">${debug} = {'diff': [0, 5.332999999999727e-06, 4.9999999999980616e-06, 5.457999999999852e-06, 5.000000000001531e-06, 6.584000000000451e-06, 6.179999999997993e-06, 5.292000000000491e-06, 5.457999999999852e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:52.834" endtime="20201030 18:27:52.847"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.848" endtime="20201030 18:27:52.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.853" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:52.852" endtime="20201030 18:27:52.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.856" level="INFO">VALUE: {'diff': [0, 5.332999999999727e-06, 4.9999999999980616e-06, 5.457999999999852e-06, 5.000000000001531e-06, 6.584000000000451e-06, 6.179999999997993e-06, 5.292000000000491e-06, 5.457999999999852e-06, 6.417000000001616e-06, 5.167000000000366e-06, 6.736000000000242e-06, 5.041000000000767e-06, 5.277999999997451e-06, 5.542000000000741e-06, 5.860999999999367e-06, 6.708000000001102e-06, 6.485999999999992e-06, 5.6389999999982565e-06, 5.292000000000491e-06, 6.000000000002531e-06, 6.7779999999989515e-06, 6.179999999997993e-06, 5.167000000000366e-06, 6.667000000001866e-06, 5.026999999997728e-06, 5.167000000000366e-06, 5.528000000001171e-06, 5.582999999999977e-06, 6.611000000000117e-06, 5.569999999999881e-06, 5.457999999999852e-06, 6.597000000000547e-06, 5.846999999999797e-06, 6.541999999998271e-06, 5.971999999999922e-06, 6.667000000001866e-06, 6.4029999999985765e-06, 5.125000000001656e-06, 5.805000000001087e-06, 6.499999999999562e-06, 6.360999999999867e-06, 6.374999999999437e-06, 5.431000000000186e-06, 5.6529999999978264e-06, 5.930000000001212e-06, 5.403000000001046e-06, 5.708000000000102e-06, 6.416999999998146e-06, 6.374999999999437e-06], 'source_diff': [0, 5.332999999999727e-06, 4.9999999999980616e-06, 5.457999999999852e-06, 5.000000000001531e-06, 6.584000000000451e-06, 6.179999999997993e-06, 5.292000000000491e-06, 5.457999999999852e-06, 6.417000000001616e-06, 5.167000000000366e-06, 6.736000000000242e-06, 5.041000000000767e-06, 5.277999999997451e-06, 5.542000000000741e-06, 5.860999999999367e-06, 6.708000000001102e-06, 6.485999999999992e-06, 5.6389999999982565e-06, 5.292000000000491e-06, 6.000000000002531e-06, 6.7779999999989515e-06, 6.179999999997993e-06, 5.167000000000366e-06, 6.667000000001866e-06, 5.026999999997728e-06, 5.167000000000366e-06, 5.528000000001171e-06, 5.582999999999977e-06, 6.611000000000117e-06, 5.569999999999881e-06, 5.457999999999852e-06, 6.597000000000547e-06, 5.846999999999797e-06, 6.541999999998271e-06, 5.971999999999922e-06, 6.667000000001866e-06, 6.4029999999985765e-06, 5.125000000001656e-06, 5.805000000001087e-06, 6.499999999999562e-06, 6.360999999999867e-06, 6.374999999999437e-06, 5.431000000000186e-06, 5.6529999999978264e-06, 5.930000000001212e-06, 5.403000000001046e-06, 5.708000000000102e-06, 6.416999999998146e-06, 6.374999999999437e-06], 'eventtime': [0.018454417, 0.01845975, 0.01846475, 0.018470208, 0.018475208, 0.018481792, 0.018487972, 0.018493264, 0.018498722, 0.018505139, 0.018510306, 0.018517042, 0.018522083, 0.018527361, 0.018532903, 0.018538764, 0.018545472, 0.018551958, 0.018557597, 0.018562889, 0.018568889, 0.018575667, 0.018581847, 0.018587014, 0.018593681, 0.018598708, 0.018603875, 0.018609403, 0.018614986, 0.018621597, 0.018627167, 0.018632625, 0.018639222, 0.018645069, 0.018651611, 0.018657583, 0.01866425, 0.018670653, 0.018675778, 0.018681583, 0.018688083, 0.018694444, 0.018700819, 0.01870625, 0.018711903, 0.018717833, 0.018723236, 0.018728944, 0.018735361, 0.018741736], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:52.854" endtime="20201030 18:27:52.857"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.850" endtime="20201030 18:27:52.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:52.861" level="INFO">${RESULT} = [{'diff': 5.332999999999727e-06}, {'diff': 5.457999999999852e-06}, {'diff': 6.584000000000451e-06}, {'diff': 5.292000000000491e-06}, {'diff': 6.417000000001616e-06}, {'diff': 6.736000000000242e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:52.858" endtime="20201030 18:27:52.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:52.864" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.332999999999727e-06, 5.457999999999852e-06, 6.584000000000451e-06, 5.292000000000491e-06, 6.417000000001616e-06, 6.736000000000242e-06, 5.277999999997451e-06, 5.860999999999367e-06, 6.4859...</msg>
<status status="PASS" starttime="20201030 18:27:52.862" endtime="20201030 18:27:52.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.868" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:52.867" endtime="20201030 18:27:52.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.870" level="INFO">VALUE: [5.332999999999727e-06, 5.457999999999852e-06, 6.584000000000451e-06, 5.292000000000491e-06, 6.417000000001616e-06, 6.736000000000242e-06, 5.277999999997451e-06, 5.860999999999367e-06, 6.485999999999992e-06, 5.292000000000491e-06, 6.7779999999989515e-06, 5.167000000000366e-06, 5.026999999997728e-06, 5.528000000001171e-06, 6.611000000000117e-06, 5.457999999999852e-06, 5.846999999999797e-06, 5.971999999999922e-06, 6.4029999999985765e-06, 5.805000000001087e-06, 6.360999999999867e-06, 5.431000000000186e-06, 5.930000000001212e-06, 5.708000000000102e-06, 6.374999999999437e-06]</msg>
<status status="PASS" starttime="20201030 18:27:52.869" endtime="20201030 18:27:52.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.865" endtime="20201030 18:27:52.871"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:52.876" endtime="20201030 18:27:52.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.874" endtime="20201030 18:27:52.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.872" endtime="20201030 18:27:52.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.522" endtime="20201030 18:27:52.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.521" endtime="20201030 18:27:52.897"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.905" endtime="20201030 18:27:52.915"></status>
</kw>
<msg timestamp="20201030 18:27:52.915" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.903" endtime="20201030 18:27:52.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:52.918" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:52.916" endtime="20201030 18:27:52.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.919" endtime="20201030 18:27:52.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.900" endtime="20201030 18:27:52.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.899" endtime="20201030 18:27:52.921"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:52.928" endtime="20201030 18:27:53.193"></status>
</kw>
<msg timestamp="20201030 18:27:53.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:52.926" endtime="20201030 18:27:53.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017412167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017418014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.196" endtime="20201030 18:27:53.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.202" endtime="20201030 18:27:53.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.924" endtime="20201030 18:27:53.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.922" endtime="20201030 18:27:53.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:53.219" level="INFO">${debug} = {'diff': [0, 5.846999999999797e-06, 6.430000000001712e-06, 5.236999999998215e-06, 5.860999999999367e-06, 6.652000000002822e-06, 5.541999999997271e-06, 5.750000000002281e-06, 5.556000000000311e-06, 5.9...</msg>
<status status="PASS" starttime="20201030 18:27:53.205" endtime="20201030 18:27:53.219"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.220" endtime="20201030 18:27:53.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.225" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:53.224" endtime="20201030 18:27:53.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.228" level="INFO">VALUE: {'diff': [0, 5.846999999999797e-06, 6.430000000001712e-06, 5.236999999998215e-06, 5.860999999999367e-06, 6.652000000002822e-06, 5.541999999997271e-06, 5.750000000002281e-06, 5.556000000000311e-06, 5.929999999997743e-06, 5.917000000001116e-06, 5.958000000000352e-06, 5.055999999999811e-06, 6.5279999999987015e-06, 5.777000000001947e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 5.639000000001726e-06, 6.583000000000977e-06, 6.708999999997106e-06, 6.305000000001587e-06, 6.291999999998021e-06, 5.541000000001267e-06, 5.931000000000686e-06, 4.943999999999782e-06, 6.36199999999934e-06, 4.971999999998922e-06, 5.403000000001046e-06, 5.236000000002211e-06, 5.526999999998228e-06, 6.4029999999985765e-06, 4.931000000003155e-06, 6.054999999997868e-06, 5.319999999999631e-06, 6.333000000000727e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.277999999997451e-06, 5.986000000002961e-06, 6.485999999999992e-06, 5.402999999997576e-06, 6.139000000002226e-06, 6.693999999998063e-06, 6.417000000001616e-06, 6.360999999999867e-06, 6.7079999999976325e-06, 6.0839999999999506e-06, 5.861000000002836e-06, 6.651999999999353e-06, 6.306000000001061e-06], 'source_diff': [0, 5.846999999999797e-06, 6.430000000001712e-06, 5.236999999998215e-06, 5.860999999999367e-06, 6.652000000002822e-06, 5.541999999997271e-06, 5.750000000002281e-06, 5.556000000000311e-06, 5.929999999997743e-06, 5.917000000001116e-06, 5.958000000000352e-06, 5.055999999999811e-06, 6.5279999999987015e-06, 5.777000000001947e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 5.639000000001726e-06, 6.583000000000977e-06, 6.708999999997106e-06, 6.305000000001587e-06, 6.291999999998021e-06, 5.541000000001267e-06, 5.931000000000686e-06, 4.943999999999782e-06, 6.36199999999934e-06, 4.971999999998922e-06, 5.403000000001046e-06, 5.236000000002211e-06, 5.526999999998228e-06, 6.4029999999985765e-06, 4.931000000003155e-06, 6.054999999997868e-06, 5.319999999999631e-06, 6.333000000000727e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.277999999997451e-06, 5.986000000002961e-06, 6.485999999999992e-06, 5.402999999997576e-06, 6.139000000002226e-06, 6.693999999998063e-06, 6.417000000001616e-06, 6.360999999999867e-06, 6.7079999999976325e-06, 6.0839999999999506e-06, 5.861000000002836e-06, 6.651999999999353e-06, 6.306000000001061e-06], 'eventtime': [0.017412167, 0.017418014, 0.017424444, 0.017429681, 0.017435542, 0.017442194, 0.017447736, 0.017453486, 0.017459042, 0.017464972, 0.017470889, 0.017476847, 0.017481903, 0.017488431, 0.017494208, 0.017500958, 0.01750775, 0.017513389, 0.017519972, 0.017526681, 0.017532986, 0.017539278, 0.017544819, 0.01755075, 0.017555694, 0.017562056, 0.017567028, 0.017572431, 0.017577667, 0.017583194, 0.017589597, 0.017594528, 0.017600583, 0.017605903, 0.017612236, 0.017618486, 0.01762425, 0.017629528, 0.017635514, 0.017642, 0.017647403, 0.017653542, 0.017660236, 0.017666653, 0.017673014, 0.017679722, 0.017685806, 0.017691667, 0.017698319, 0.017704625], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:53.226" endtime="20201030 18:27:53.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.222" endtime="20201030 18:27:53.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.233" level="INFO">${RESULT} = [{'diff': 5.846999999999797e-06}, {'diff': 5.236999999998215e-06}, {'diff': 6.652000000002822e-06}, {'diff': 5.750000000002281e-06}, {'diff': 5.929999999997743e-06}, {'diff': 5.958000000000352e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:53.230" endtime="20201030 18:27:53.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:53.237" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.846999999999797e-06, 5.236999999998215e-06, 6.652000000002822e-06, 5.750000000002281e-06, 5.929999999997743e-06, 5.958000000000352e-06, 6.5279999999987015e-06, 6.749999999999812e-06, 5.639...</msg>
<status status="PASS" starttime="20201030 18:27:53.234" endtime="20201030 18:27:53.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.241" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:53.240" endtime="20201030 18:27:53.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.243" level="INFO">VALUE: [5.846999999999797e-06, 5.236999999998215e-06, 6.652000000002822e-06, 5.750000000002281e-06, 5.929999999997743e-06, 5.958000000000352e-06, 6.5279999999987015e-06, 6.749999999999812e-06, 5.639000000001726e-06, 6.708999999997106e-06, 6.291999999998021e-06, 5.931000000000686e-06, 6.36199999999934e-06, 5.403000000001046e-06, 5.526999999998228e-06, 4.931000000003155e-06, 5.319999999999631e-06, 6.249999999999312e-06, 5.277999999997451e-06, 6.485999999999992e-06, 6.139000000002226e-06, 6.417000000001616e-06, 6.7079999999976325e-06, 5.861000000002836e-06, 6.306000000001061e-06]</msg>
<status status="PASS" starttime="20201030 18:27:53.242" endtime="20201030 18:27:53.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.238" endtime="20201030 18:27:53.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.248" endtime="20201030 18:27:53.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.246" endtime="20201030 18:27:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.245" endtime="20201030 18:27:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.898" endtime="20201030 18:27:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:52.897" endtime="20201030 18:27:53.268"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.276" endtime="20201030 18:27:53.287"></status>
</kw>
<msg timestamp="20201030 18:27:53.288" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.275" endtime="20201030 18:27:53.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.290" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.289" endtime="20201030 18:27:53.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.291" endtime="20201030 18:27:53.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.272" endtime="20201030 18:27:53.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.270" endtime="20201030 18:27:53.294"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.300" endtime="20201030 18:27:53.566"></status>
</kw>
<msg timestamp="20201030 18:27:53.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017415611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017421556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.299" endtime="20201030 18:27:53.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017415611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017421556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.568" endtime="20201030 18:27:53.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.574" endtime="20201030 18:27:53.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.296" endtime="20201030 18:27:53.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.294" endtime="20201030 18:27:53.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:53.592" level="INFO">${debug} = {'diff': [0, 5.945000000000256e-06, 5.360999999998867e-06, 6.415999999998673e-06, 5.34800000000224e-06, 5.512999999998658e-06, 6.236999999999215e-06, 4.986000000001961e-06, 6.722000000000672e-06, 5.63...</msg>
<status status="PASS" starttime="20201030 18:27:53.578" endtime="20201030 18:27:53.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.593" endtime="20201030 18:27:53.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.598" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:53.597" endtime="20201030 18:27:53.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.601" level="INFO">VALUE: {'diff': [0, 5.945000000000256e-06, 5.360999999998867e-06, 6.415999999998673e-06, 5.34800000000224e-06, 5.512999999998658e-06, 6.236999999999215e-06, 4.986000000001961e-06, 6.722000000000672e-06, 5.6389999999982565e-06, 6.6529999999988265e-06, 5.291000000001017e-06, 5.221999999999172e-06, 5.055999999999811e-06, 5.278000000000921e-06, 6.597000000000547e-06, 4.930999999999686e-06, 6.305000000001587e-06, 5.695000000000006e-06, 5.290999999997548e-06, 6.472000000000422e-06, 6.486999999999465e-06, 5.291000000001017e-06, 6.763999999999382e-06, 5.306000000000061e-06, 6.347000000000297e-06, 6.708000000001102e-06, 5.292000000000491e-06, 5.332999999999727e-06, 6.124999999999187e-06, 6.195000000000506e-06, 5.569000000000407e-06, 6.360999999999867e-06, 6.584000000000451e-06, 6.374999999999437e-06, 4.985999999998492e-06, 6.166000000001892e-06, 5.34799999999877e-06, 6.305000000001587e-06, 5.166999999996896e-06, 6.055000000001337e-06, 6.445000000000756e-06, 6.583000000000977e-06, 5.820000000000131e-06, 5.762999999998908e-06, 5.278000000000921e-06, 5.444999999999756e-06, 4.9999999999980616e-06, 4.930000000000212e-06, 5.889000000001976e-06], 'source_diff': [0, 5.945000000000256e-06, 5.360999999998867e-06, 6.415999999998673e-06, 5.34800000000224e-06, 5.512999999998658e-06, 6.236999999999215e-06, 4.986000000001961e-06, 6.722000000000672e-06, 5.6389999999982565e-06, 6.6529999999988265e-06, 5.291000000001017e-06, 5.221999999999172e-06, 5.055999999999811e-06, 5.278000000000921e-06, 6.597000000000547e-06, 4.930999999999686e-06, 6.305000000001587e-06, 5.695000000000006e-06, 5.290999999997548e-06, 6.472000000000422e-06, 6.486999999999465e-06, 5.291000000001017e-06, 6.763999999999382e-06, 5.306000000000061e-06, 6.347000000000297e-06, 6.708000000001102e-06, 5.292000000000491e-06, 5.332999999999727e-06, 6.124999999999187e-06, 6.195000000000506e-06, 5.569000000000407e-06, 6.360999999999867e-06, 6.584000000000451e-06, 6.374999999999437e-06, 4.985999999998492e-06, 6.166000000001892e-06, 5.34799999999877e-06, 6.305000000001587e-06, 5.166999999996896e-06, 6.055000000001337e-06, 6.445000000000756e-06, 6.583000000000977e-06, 5.820000000000131e-06, 5.762999999998908e-06, 5.278000000000921e-06, 5.444999999999756e-06, 4.9999999999980616e-06, 4.930000000000212e-06, 5.889000000001976e-06], 'eventtime': [0.017415611, 0.017421556, 0.017426917, 0.017433333, 0.017438681, 0.017444194, 0.017450431, 0.017455417, 0.017462139, 0.017467778, 0.017474431, 0.017479722, 0.017484944, 0.01749, 0.017495278, 0.017501875, 0.017506806, 0.017513111, 0.017518806, 0.017524097, 0.017530569, 0.017537056, 0.017542347, 0.017549111, 0.017554417, 0.017560764, 0.017567472, 0.017572764, 0.017578097, 0.017584222, 0.017590417, 0.017595986, 0.017602347, 0.017608931, 0.017615306, 0.017620292, 0.017626458, 0.017631806, 0.017638111, 0.017643278, 0.017649333, 0.017655778, 0.017662361, 0.017668181, 0.017673944, 0.017679222, 0.017684667, 0.017689667, 0.017694597, 0.017700486], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:53.599" endtime="20201030 18:27:53.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.595" endtime="20201030 18:27:53.602"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:53.605" level="INFO">${RESULT} = [{'diff': 5.945000000000256e-06}, {'diff': 6.415999999998673e-06}, {'diff': 5.512999999998658e-06}, {'diff': 4.986000000001961e-06}, {'diff': 5.6389999999982565e-06}, {'diff': 5.291000000001017e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:53.603" endtime="20201030 18:27:53.605"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:53.608" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.945000000000256e-06, 6.415999999998673e-06, 5.512999999998658e-06, 4.986000000001961e-06, 5.6389999999982565e-06, 5.291000000001017e-06, 5.055999999999811e-06, 6.597000000000547e-06, 6.305...</msg>
<status status="PASS" starttime="20201030 18:27:53.606" endtime="20201030 18:27:53.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.612" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:53.611" endtime="20201030 18:27:53.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.615" level="INFO">VALUE: [5.945000000000256e-06, 6.415999999998673e-06, 5.512999999998658e-06, 4.986000000001961e-06, 5.6389999999982565e-06, 5.291000000001017e-06, 5.055999999999811e-06, 6.597000000000547e-06, 6.305000000001587e-06, 5.290999999997548e-06, 6.486999999999465e-06, 6.763999999999382e-06, 6.347000000000297e-06, 5.292000000000491e-06, 6.124999999999187e-06, 5.569000000000407e-06, 6.584000000000451e-06, 4.985999999998492e-06, 5.34799999999877e-06, 5.166999999996896e-06, 6.445000000000756e-06, 5.820000000000131e-06, 5.278000000000921e-06, 4.9999999999980616e-06, 5.889000000001976e-06]</msg>
<status status="PASS" starttime="20201030 18:27:53.614" endtime="20201030 18:27:53.615"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.609" endtime="20201030 18:27:53.616"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:53.620" endtime="20201030 18:27:53.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.618" endtime="20201030 18:27:53.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.617" endtime="20201030 18:27:53.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.269" endtime="20201030 18:27:53.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.269" endtime="20201030 18:27:53.640"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.648" endtime="20201030 18:27:53.661"></status>
</kw>
<msg timestamp="20201030 18:27:53.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.647" endtime="20201030 18:27:53.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.665" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:53.663" endtime="20201030 18:27:53.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.667" endtime="20201030 18:27:53.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.644" endtime="20201030 18:27:53.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.642" endtime="20201030 18:27:53.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.682" endtime="20201030 18:27:53.969"></status>
</kw>
<msg timestamp="20201030 18:27:53.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.679" endtime="20201030 18:27:53.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:53.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018401722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018406847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:53.972" endtime="20201030 18:27:53.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.978" endtime="20201030 18:27:53.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.674" endtime="20201030 18:27:53.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.671" endtime="20201030 18:27:53.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:53.995" level="INFO">${debug} = {'diff': [0, 5.125000000001656e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 5.917000000001116e-06, 6.513999999999132e-06, 5.526999999998228e-06, 5.000000000001531e-06, 5.403000000001046e-06, 6....</msg>
<status status="PASS" starttime="20201030 18:27:53.982" endtime="20201030 18:27:53.995"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:53.996" endtime="20201030 18:27:53.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.001" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:54.000" endtime="20201030 18:27:54.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.004" level="INFO">VALUE: {'diff': [0, 5.125000000001656e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 5.917000000001116e-06, 6.513999999999132e-06, 5.526999999998228e-06, 5.000000000001531e-06, 5.403000000001046e-06, 6.5829999999975075e-06, 5.931000000000686e-06, 5.014000000001101e-06, 5.402999999997576e-06, 5.930000000001212e-06, 6.667000000001866e-06, 5.457999999999852e-06, 4.985999999998492e-06, 5.889000000001976e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.334000000000201e-06, 6.597000000000547e-06, 5.944000000000782e-06, 6.7219999999972024e-06, 4.917000000000116e-06, 5.139000000001226e-06, 6.458000000000852e-06, 5.402999999997576e-06, 5.931000000000686e-06, 6.555000000001837e-06, 6.055999999997341e-06, 5.278000000000921e-06, 6.472000000000422e-06, 6.028000000001671e-06, 5.374999999998437e-06, 5.110999999998617e-06, 6.777000000002947e-06, 6.4729999999998955e-06, 5.708000000000102e-06, 5.582999999999977e-06, 6.291999999998021e-06, 6.249999999999312e-06, 6.542000000001741e-06, 5.6389999999982565e-06, 6.527000000002697e-06, 5.527999999997701e-06, 6.292000000001491e-06, 6.540999999998798e-06, 6.153000000001796e-06, 5.610999999999117e-06], 'source_diff': [0, 5.125000000001656e-06, 5.014000000001101e-06, 6.1389999999987566e-06, 5.917000000001116e-06, 6.513999999999132e-06, 5.526999999998228e-06, 5.000000000001531e-06, 5.403000000001046e-06, 6.5829999999975075e-06, 5.931000000000686e-06, 5.014000000001101e-06, 5.402999999997576e-06, 5.930000000001212e-06, 6.667000000001866e-06, 5.457999999999852e-06, 4.985999999998492e-06, 5.889000000001976e-06, 6.1389999999987566e-06, 6.235999999999742e-06, 6.334000000000201e-06, 6.597000000000547e-06, 5.944000000000782e-06, 6.7219999999972024e-06, 4.917000000000116e-06, 5.139000000001226e-06, 6.458000000000852e-06, 5.402999999997576e-06, 5.931000000000686e-06, 6.555000000001837e-06, 6.055999999997341e-06, 5.278000000000921e-06, 6.472000000000422e-06, 6.028000000001671e-06, 5.374999999998437e-06, 5.110999999998617e-06, 6.777000000002947e-06, 6.4729999999998955e-06, 5.708000000000102e-06, 5.582999999999977e-06, 6.291999999998021e-06, 6.249999999999312e-06, 6.542000000001741e-06, 5.6389999999982565e-06, 6.527000000002697e-06, 5.527999999997701e-06, 6.292000000001491e-06, 6.540999999998798e-06, 6.153000000001796e-06, 5.610999999999117e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.018401722, 0.018406847, 0.018411861, 0.018418, 0.018423917, 0.018430431, 0.018435958, 0.018440958, 0.018446361, 0.018452944, 0.018458875, 0.018463889, 0.018469292, 0.018475222, 0.018481889, 0.018487347, 0.018492333, 0.018498222, 0.018504361, 0.018510597, 0.018516931, 0.018523528, 0.018529472, 0.018536194, 0.018541111, 0.01854625, 0.018552708, 0.018558111, 0.018564042, 0.018570597, 0.018576653, 0.018581931, 0.018588403, 0.018594431, 0.018599806, 0.018604917, 0.018611694, 0.018618167, 0.018623875, 0.018629458, 0.01863575, 0.018642, 0.018648542, 0.018654181, 0.018660708, 0.018666236, 0.018672528, 0.018679069, 0.018685222, 0.018690833], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:54.002" endtime="20201030 18:27:54.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.998" endtime="20201030 18:27:54.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.009" level="INFO">${RESULT} = [{'diff': 5.125000000001656e-06}, {'diff': 6.1389999999987566e-06}, {'diff': 6.513999999999132e-06}, {'diff': 5.000000000001531e-06}, {'diff': 6.5829999999975075e-06}, {'diff': 5.014000000001101e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:54.006" endtime="20201030 18:27:54.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.012" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.125000000001656e-06, 6.1389999999987566e-06, 6.513999999999132e-06, 5.000000000001531e-06, 6.5829999999975075e-06, 5.014000000001101e-06, 5.930000000001212e-06, 5.457999999999852e-06, 5.88...</msg>
<status status="PASS" starttime="20201030 18:27:54.010" endtime="20201030 18:27:54.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.016" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:54.015" endtime="20201030 18:27:54.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.018" level="INFO">VALUE: [5.125000000001656e-06, 6.1389999999987566e-06, 6.513999999999132e-06, 5.000000000001531e-06, 6.5829999999975075e-06, 5.014000000001101e-06, 5.930000000001212e-06, 5.457999999999852e-06, 5.889000000001976e-06, 6.235999999999742e-06, 6.597000000000547e-06, 6.7219999999972024e-06, 5.139000000001226e-06, 5.402999999997576e-06, 6.555000000001837e-06, 5.278000000000921e-06, 6.028000000001671e-06, 5.110999999998617e-06, 6.4729999999998955e-06, 5.582999999999977e-06, 6.249999999999312e-06, 5.6389999999982565e-06, 5.527999999997701e-06, 6.540999999998798e-06, 5.610999999999117e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.017" endtime="20201030 18:27:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.013" endtime="20201030 18:27:54.019"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.023" endtime="20201030 18:27:54.042"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.021" endtime="20201030 18:27:54.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.020" endtime="20201030 18:27:54.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.641" endtime="20201030 18:27:54.043"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:53.641" endtime="20201030 18:27:54.044"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.052" endtime="20201030 18:27:54.063"></status>
</kw>
<msg timestamp="20201030 18:27:54.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.051" endtime="20201030 18:27:54.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.066" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.065" endtime="20201030 18:27:54.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.067" endtime="20201030 18:27:54.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.047" endtime="20201030 18:27:54.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.046" endtime="20201030 18:27:54.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.076" endtime="20201030 18:27:54.342"></status>
</kw>
<msg timestamp="20201030 18:27:54.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.075" endtime="20201030 18:27:54.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018344778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018351375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.345" endtime="20201030 18:27:54.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.350" endtime="20201030 18:27:54.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.072" endtime="20201030 18:27:54.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.070" endtime="20201030 18:27:54.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:54.367" level="INFO">${debug} = {'diff': [0, 6.597000000000547e-06, 6.667000000001866e-06, 6.776999999999478e-06, 6.638999999999257e-06, 5.945000000000256e-06, 5.528000000001171e-06, 5.582999999999977e-06, 6.235999999999742e-06, 5.2...</msg>
<status status="PASS" starttime="20201030 18:27:54.354" endtime="20201030 18:27:54.368"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.369" endtime="20201030 18:27:54.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.374" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:54.373" endtime="20201030 18:27:54.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.378" level="INFO">VALUE: {'diff': [0, 6.597000000000547e-06, 6.667000000001866e-06, 6.776999999999478e-06, 6.638999999999257e-06, 5.945000000000256e-06, 5.528000000001171e-06, 5.582999999999977e-06, 6.235999999999742e-06, 5.291999999997021e-06, 6.472000000000422e-06, 6.180000000001462e-06, 5.403000000001046e-06, 6.485999999999992e-06, 6.360999999999867e-06, 6.416999999998146e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.665999999998923e-06, 5.111000000002086e-06, 5.5139999999981315e-06, 6.292000000001491e-06, 5.471999999999422e-06, 6.195000000000506e-06, 6.401999999999103e-06, 5.945000000000256e-06, 5.055000000000337e-06, 5.472999999998895e-06, 5.444000000000282e-06, 6.7779999999989515e-06, 5.278000000000921e-06, 6.124999999999187e-06, 5.791000000001517e-06, 6.0279999999982015e-06, 5.111000000002086e-06, 5.528000000001171e-06, 5.7639999999983815e-06, 5.514000000001601e-06, 5.1799999999969926e-06, 6.417000000001616e-06, 5.6389999999982565e-06, 5.042000000000241e-06, 5.958000000000352e-06, 5.207999999999602e-06, 5.931000000000686e-06, 6.110999999999617e-06, 5.430000000000712e-06, 6.5980000000000205e-06, 5.708000000000102e-06, 5.514000000001601e-06], 'source_diff': [0, 6.597000000000547e-06, 6.667000000001866e-06, 6.776999999999478e-06, 6.638999999999257e-06, 5.945000000000256e-06, 5.528000000001171e-06, 5.582999999999977e-06, 6.235999999999742e-06, 5.291999999997021e-06, 6.472000000000422e-06, 6.180000000001462e-06, 5.403000000001046e-06, 6.485999999999992e-06, 6.360999999999867e-06, 6.416999999998146e-06, 6.513999999999132e-06, 6.542000000001741e-06, 6.665999999998923e-06, 5.111000000002086e-06, 5.5139999999981315e-06, 6.292000000001491e-06, 5.471999999999422e-06, 6.195000000000506e-06, 6.401999999999103e-06, 5.945000000000256e-06, 5.055000000000337e-06, 5.472999999998895e-06, 5.444000000000282e-06, 6.7779999999989515e-06, 5.278000000000921e-06, 6.124999999999187e-06, 5.791000000001517e-06, 6.0279999999982015e-06, 5.111000000002086e-06, 5.528000000001171e-06, 5.7639999999983815e-06, 5.514000000001601e-06, 5.1799999999969926e-06, 6.417000000001616e-06, 5.6389999999982565e-06, 5.042000000000241e-06, 5.958000000000352e-06, 5.207999999999602e-06, 5.931000000000686e-06, 6.110999999999617e-06, 5.430000000000712e-06, 6.5980000000000205e-06, 5.708000000000102e-06, 5.514000000001601e-06], 'eventtime': [0.018344778, 0.018351375, 0.018358042, 0.018364819, 0.018371458, 0.018377403, 0.018382931, 0.018388514, 0.01839475, 0.018400042, 0.018406514, 0.018412694, 0.018418097, 0.018424583, 0.018430944, 0.018437361, 0.018443875, 0.018450417, 0.018457083, 0.018462194, 0.018467708, 0.018474, 0.018479472, 0.018485667, 0.018492069, 0.018498014, 0.018503069, 0.018508542, 0.018513986, 0.018520764, 0.018526042, 0.018532167, 0.018537958, 0.018543986, 0.018549097, 0.018554625, 0.018560389, 0.018565903, 0.018571083, 0.0185775, 0.018583139, 0.018588181, 0.018594139, 0.018599347, 0.018605278, 0.018611389, 0.018616819, 0.018623417, 0.018629125, 0.018634639], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:54.376" endtime="20201030 18:27:54.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.371" endtime="20201030 18:27:54.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.382" level="INFO">${RESULT} = [{'diff': 6.597000000000547e-06}, {'diff': 6.776999999999478e-06}, {'diff': 5.945000000000256e-06}, {'diff': 5.582999999999977e-06}, {'diff': 5.291999999997021e-06}, {'diff': 6.180000000001462e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:27:54.380" endtime="20201030 18:27:54.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.386" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.597000000000547e-06, 6.776999999999478e-06, 5.945000000000256e-06, 5.582999999999977e-06, 5.291999999997021e-06, 6.180000000001462e-06, 6.485999999999992e-06, 6.416999999998146e-06, 6.5420...</msg>
<status status="PASS" starttime="20201030 18:27:54.383" endtime="20201030 18:27:54.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.390" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:54.389" endtime="20201030 18:27:54.390"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.392" level="INFO">VALUE: [6.597000000000547e-06, 6.776999999999478e-06, 5.945000000000256e-06, 5.582999999999977e-06, 5.291999999997021e-06, 6.180000000001462e-06, 6.485999999999992e-06, 6.416999999998146e-06, 6.542000000001741e-06, 5.111000000002086e-06, 6.292000000001491e-06, 6.195000000000506e-06, 5.945000000000256e-06, 5.472999999998895e-06, 6.7779999999989515e-06, 6.124999999999187e-06, 6.0279999999982015e-06, 5.528000000001171e-06, 5.514000000001601e-06, 6.417000000001616e-06, 5.042000000000241e-06, 5.207999999999602e-06, 6.110999999999617e-06, 6.5980000000000205e-06, 5.514000000001601e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.391" endtime="20201030 18:27:54.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.387" endtime="20201030 18:27:54.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.399" endtime="20201030 18:27:54.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.397" endtime="20201030 18:27:54.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.394" endtime="20201030 18:27:54.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.044" endtime="20201030 18:27:54.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.044" endtime="20201030 18:27:54.419"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.428" endtime="20201030 18:27:54.439"></status>
</kw>
<msg timestamp="20201030 18:27:54.440" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.426" endtime="20201030 18:27:54.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.442" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.441" endtime="20201030 18:27:54.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.443" endtime="20201030 18:27:54.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.423" endtime="20201030 18:27:54.445"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.422" endtime="20201030 18:27:54.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.452" endtime="20201030 18:27:54.724"></status>
</kw>
<msg timestamp="20201030 18:27:54.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017720222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017726514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.451" endtime="20201030 18:27:54.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017720222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017726514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.727" endtime="20201030 18:27:54.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.732" endtime="20201030 18:27:54.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.448" endtime="20201030 18:27:54.734"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.446" endtime="20201030 18:27:54.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:54.748" level="INFO">${debug} = {'diff': [0, 6.291999999998021e-06, 5.055000000000337e-06, 6.167000000001366e-06, 6.597000000000547e-06, 6.4729999999998955e-06, 6.776999999999478e-06, 4.9449999999992555e-06, 5.569000000000407e-06, 6...</msg>
<status status="PASS" starttime="20201030 18:27:54.735" endtime="20201030 18:27:54.749"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.750" endtime="20201030 18:27:54.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.754" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:54.754" endtime="20201030 18:27:54.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.758" level="INFO">VALUE: {'diff': [0, 6.291999999998021e-06, 5.055000000000337e-06, 6.167000000001366e-06, 6.597000000000547e-06, 6.4729999999998955e-06, 6.776999999999478e-06, 4.9449999999992555e-06, 5.569000000000407e-06, 6.584000000000451e-06, 5.430000000000712e-06, 5.7639999999983815e-06, 6.749999999999812e-06, 5.014000000001101e-06, 5.805000000001087e-06, 5.277999999997451e-06, 5.167000000000366e-06, 6.763999999999382e-06, 6.083000000000477e-06, 5.931000000000686e-06, 5.680000000000962e-06, 6.736000000000242e-06, 6.249999999999312e-06, 6.709000000000576e-06, 5.874999999998937e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.694000000000532e-06, 6.374999999999437e-06, 5.569000000000407e-06, 4.986999999997965e-06, 5.777000000001947e-06, 4.9449999999992555e-06, 6.097000000000047e-06, 5.7639999999983815e-06, 6.763999999999382e-06, 5.111000000002086e-06, 6.472000000000422e-06, 6.805999999998091e-06, 5.860999999999367e-06, 5.097000000002516e-06, 4.943999999999782e-06, 6.4729999999998955e-06, 5.708000000000102e-06, 5.1389999999977565e-06, 4.958000000002821e-06, 5.096999999999047e-06, 6.124999999999187e-06, 5.4589999999993255e-06, 5.944000000000782e-06], 'source_diff': [0, 6.291999999998021e-06, 5.055000000000337e-06, 6.167000000001366e-06, 6.597000000000547e-06, 6.4729999999998955e-06, 6.776999999999478e-06, 4.9449999999992555e-06, 5.569000000000407e-06, 6.584000000000451e-06, 5.430000000000712e-06, 5.7639999999983815e-06, 6.749999999999812e-06, 5.014000000001101e-06, 5.805000000001087e-06, 5.277999999997451e-06, 5.167000000000366e-06, 6.763999999999382e-06, 6.083000000000477e-06, 5.931000000000686e-06, 5.680000000000962e-06, 6.736000000000242e-06, 6.249999999999312e-06, 6.709000000000576e-06, 5.874999999998937e-06, 6.249999999999312e-06, 5.764000000001851e-06, 5.694000000000532e-06, 6.374999999999437e-06, 5.569000000000407e-06, 4.986999999997965e-06, 5.777000000001947e-06, 4.9449999999992555e-06, 6.097000000000047e-06, 5.7639999999983815e-06, 6.763999999999382e-06, 5.111000000002086e-06, 6.472000000000422e-06, 6.805999999998091e-06, 5.860999999999367e-06, 5.097000000002516e-06, 4.943999999999782e-06, 6.4729999999998955e-06, 5.708000000000102e-06, 5.1389999999977565e-06, 4.958000000002821e-06, 5.096999999999047e-06, 6.124999999999187e-06, 5.4589999999993255e-06, 5.944000000000782e-06], 'eventtime': [0.017720222, 0.017726514, 0.017731569, 0.017737736, 0.017744333, 0.017750806, 0.017757583, 0.017762528, 0.017768097, 0.017774681, 0.017780111, 0.017785875, 0.017792625, 0.017797639, 0.017803444, 0.017808722, 0.017813889, 0.017820653, 0.017826736, 0.017832667, 0.017838347, 0.017845083, 0.017851333, 0.017858042, 0.017863917, 0.017870167, 0.017875931, 0.017881625, 0.017888, 0.017893569, 0.017898556, 0.017904333, 0.017909278, 0.017915375, 0.017921139, 0.017927903, 0.017933014, 0.017939486, 0.017946292, 0.017952153, 0.01795725, 0.017962194, 0.017968667, 0.017974375, 0.017979514, 0.017984472, 0.017989569, 0.017995694, 0.018001153, 0.018007097], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:54.756" endtime="20201030 18:27:54.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.752" endtime="20201030 18:27:54.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:54.762" level="INFO">${RESULT} = [{'diff': 6.291999999998021e-06}, {'diff': 6.167000000001366e-06}, {'diff': 6.4729999999998955e-06}, {'diff': 4.9449999999992555e-06}, {'diff': 6.584000000000451e-06}, {'diff': 5.7639999999983815e-06}...</msg>
<status status="PASS" starttime="20201030 18:27:54.760" endtime="20201030 18:27:54.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:54.766" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.291999999998021e-06, 6.167000000001366e-06, 6.4729999999998955e-06, 4.9449999999992555e-06, 6.584000000000451e-06, 5.7639999999983815e-06, 5.014000000001101e-06, 5.277999999997451e-06, 6.7...</msg>
<status status="PASS" starttime="20201030 18:27:54.763" endtime="20201030 18:27:54.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.771" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:54.770" endtime="20201030 18:27:54.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.773" level="INFO">VALUE: [6.291999999998021e-06, 6.167000000001366e-06, 6.4729999999998955e-06, 4.9449999999992555e-06, 6.584000000000451e-06, 5.7639999999983815e-06, 5.014000000001101e-06, 5.277999999997451e-06, 6.763999999999382e-06, 5.931000000000686e-06, 6.736000000000242e-06, 6.709000000000576e-06, 6.249999999999312e-06, 5.694000000000532e-06, 5.569000000000407e-06, 5.777000000001947e-06, 6.097000000000047e-06, 6.763999999999382e-06, 6.472000000000422e-06, 5.860999999999367e-06, 4.943999999999782e-06, 5.708000000000102e-06, 4.958000000002821e-06, 6.124999999999187e-06, 5.944000000000782e-06]</msg>
<status status="PASS" starttime="20201030 18:27:54.772" endtime="20201030 18:27:54.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.767" endtime="20201030 18:27:54.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:54.777" endtime="20201030 18:27:54.797"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.776" endtime="20201030 18:27:54.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.775" endtime="20201030 18:27:54.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.420" endtime="20201030 18:27:54.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.420" endtime="20201030 18:27:54.798"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.806" endtime="20201030 18:27:54.817"></status>
</kw>
<msg timestamp="20201030 18:27:54.817" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.804" endtime="20201030 18:27:54.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:54.820" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:54.818" endtime="20201030 18:27:54.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.821" endtime="20201030 18:27:54.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.802" endtime="20201030 18:27:54.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.800" endtime="20201030 18:27:54.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:54.830" endtime="20201030 18:27:55.094"></status>
</kw>
<msg timestamp="20201030 18:27:55.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017401375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:54.828" endtime="20201030 18:27:55.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017401375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017408014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:55.097" endtime="20201030 18:27:55.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.102" endtime="20201030 18:27:55.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.826" endtime="20201030 18:27:55.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.824" endtime="20201030 18:27:55.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:55.120" level="INFO">${debug} = {'diff': [0, 6.638999999999257e-06, 5.667000000000866e-06, 6.762999999999908e-06, 5.042000000000241e-06, 6.736000000000242e-06, 6.695000000001006e-06, 5.110999999998617e-06, 5.819000000000657e-06, 5.0...</msg>
<status status="PASS" starttime="20201030 18:27:55.106" endtime="20201030 18:27:55.120"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.121" endtime="20201030 18:27:55.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.126" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:55.125" endtime="20201030 18:27:55.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.129" level="INFO">VALUE: {'diff': [0, 6.638999999999257e-06, 5.667000000000866e-06, 6.762999999999908e-06, 5.042000000000241e-06, 6.736000000000242e-06, 6.695000000001006e-06, 5.110999999998617e-06, 5.819000000000657e-06, 5.0699999999993806e-06, 6.693999999998063e-06, 4.972000000002391e-06, 5.542000000000741e-06, 5.457999999999852e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.485999999998992e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.693999999998063e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.139000000002226e-06, 6.555999999997841e-06, 6.624999999999687e-06, 6.208000000000602e-06, 5.985999999999492e-06, 5.596999999999547e-06, 6.250000000002781e-06, 4.986999999997965e-06, 6.235999999999742e-06, 6.139000000002226e-06, 5.499999999998562e-06, 6.776999999999478e-06, 5.000000000001531e-06, 4.917000000000116e-06, 5.055999999999811e-06, 5.180000000000462e-06, 5.582999999999977e-06, 6.4729999999998955e-06, 6.222000000000172e-06, 5.0139999999976315e-06, 6.222000000000172e-06, 5.167000000000366e-06, 4.986000000001961e-06, 4.930000000000212e-06, 6.416999999998146e-06, 6.194000000001032e-06, 6.763999999999382e-06, 6.3479999999997705e-06], 'source_diff': [0, 6.638999999999257e-06, 5.667000000000866e-06, 6.762999999999908e-06, 5.042000000000241e-06, 6.736000000000242e-06, 6.695000000001006e-06, 5.110999999998617e-06, 5.819000000000657e-06, 5.0699999999993806e-06, 6.693999999998063e-06, 4.972000000002391e-06, 5.542000000000741e-06, 5.457999999999852e-06, 6.124999999999187e-06, 5.292000000000491e-06, 5.485999999998992e-06, 6.388999999999007e-06, 6.389000000002476e-06, 6.693999999998063e-06, 6.763999999999382e-06, 6.736000000000242e-06, 6.139000000002226e-06, 6.555999999997841e-06, 6.624999999999687e-06, 6.208000000000602e-06, 5.985999999999492e-06, 5.596999999999547e-06, 6.250000000002781e-06, 4.986999999997965e-06, 6.235999999999742e-06, 6.139000000002226e-06, 5.499999999998562e-06, 6.776999999999478e-06, 5.000000000001531e-06, 4.917000000000116e-06, 5.055999999999811e-06, 5.180000000000462e-06, 5.582999999999977e-06, 6.4729999999998955e-06, 6.222000000000172e-06, 5.0139999999976315e-06, 6.222000000000172e-06, 5.167000000000366e-06, 4.986000000001961e-06, 4.930000000000212e-06, 6.416999999998146e-06, 6.194000000001032e-06, 6.763999999999382e-06, 6.3479999999997705e-06], 'eventtime': [0.017401375, 0.017408014, 0.017413681, 0.017420444, 0.017425486, 0.017432222, 0.017438917, 0.017444028, 0.017449847, 0.017454917, 0.017461611, 0.017466583, 0.017472125, 0.017477583, 0.017483708, 0.017489, 0.017494486, 0.017500875, 0.017507264, 0.017513958, 0.017520722, 0.017527458, 0.017533597, 0.017540153, 0.017546778, 0.017552986, 0.017558972, 0.017564569, 0.017570819, 0.017575806, 0.017582042, 0.017588181, 0.017593681, 0.017600458, 0.017605458, 0.017610375, 0.017615431, 0.017620611, 0.017626194, 0.017632667, 0.017638889, 0.017643903, 0.017650125, 0.017655292, 0.017660278, 0.017665208, 0.017671625, 0.017677819, 0.017684583, 0.017690931], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:55.127" endtime="20201030 18:27:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.123" endtime="20201030 18:27:55.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.134" level="INFO">${RESULT} = [{'diff': 6.638999999999257e-06}, {'diff': 6.762999999999908e-06}, {'diff': 6.736000000000242e-06}, {'diff': 5.110999999998617e-06}, {'diff': 5.0699999999993806e-06}, {'diff': 4.972000000002391e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:55.131" endtime="20201030 18:27:55.134"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:55.137" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.638999999999257e-06, 6.762999999999908e-06, 6.736000000000242e-06, 5.110999999998617e-06, 5.0699999999993806e-06, 4.972000000002391e-06, 5.457999999999852e-06, 5.292000000000491e-06, 6.388...</msg>
<status status="PASS" starttime="20201030 18:27:55.135" endtime="20201030 18:27:55.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.141" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:55.140" endtime="20201030 18:27:55.142"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.144" level="INFO">VALUE: [6.638999999999257e-06, 6.762999999999908e-06, 6.736000000000242e-06, 5.110999999998617e-06, 5.0699999999993806e-06, 4.972000000002391e-06, 5.457999999999852e-06, 5.292000000000491e-06, 6.388999999999007e-06, 6.693999999998063e-06, 6.736000000000242e-06, 6.555999999997841e-06, 6.208000000000602e-06, 5.596999999999547e-06, 4.986999999997965e-06, 6.139000000002226e-06, 6.776999999999478e-06, 4.917000000000116e-06, 5.180000000000462e-06, 6.4729999999998955e-06, 5.0139999999976315e-06, 5.167000000000366e-06, 4.930000000000212e-06, 6.194000000001032e-06, 6.3479999999997705e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.142" endtime="20201030 18:27:55.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.138" endtime="20201030 18:27:55.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.148" endtime="20201030 18:27:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.147" endtime="20201030 18:27:55.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.146" endtime="20201030 18:27:55.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.799" endtime="20201030 18:27:55.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:54.799" endtime="20201030 18:27:55.169"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.177" endtime="20201030 18:27:55.188"></status>
</kw>
<msg timestamp="20201030 18:27:55.188" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.175" endtime="20201030 18:27:55.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.191" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.189" endtime="20201030 18:27:55.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.192" endtime="20201030 18:27:55.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.173" endtime="20201030 18:27:55.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.171" endtime="20201030 18:27:55.194"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.202" endtime="20201030 18:27:55.476"></status>
</kw>
<msg timestamp="20201030 18:27:55.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017512903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:55.199" endtime="20201030 18:27:55.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0175075, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017512903, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:27:55.479" endtime="20201030 18:27:55.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.486" endtime="20201030 18:27:55.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.196" endtime="20201030 18:27:55.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.195" endtime="20201030 18:27:55.489"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${debug}</var>
</assign>
<msg timestamp="20201030 18:27:55.503" level="INFO">${debug} = {'diff': [0, 5.403000000001046e-06, 6.360999999999867e-06, 5.680000000000962e-06, 6.7369999999997154e-06, 5.887999999999033e-06, 6.4729999999998955e-06, 6.651999999999353e-06, 5.709000000003045e-06, 5...</msg>
<status status="PASS" starttime="20201030 18:27:55.489" endtime="20201030 18:27:55.503"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${debug["event"][0] != "RISING"}</arg>
<arg>emergency</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.504" endtime="20201030 18:27:55.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-gpio-debug</arg>
<arg>${debug}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.509" level="INFO">NAME: overhead-gpio-debug</msg>
<status status="PASS" starttime="20201030 18:27:55.508" endtime="20201030 18:27:55.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.512" level="INFO">VALUE: {'diff': [0, 5.403000000001046e-06, 6.360999999999867e-06, 5.680000000000962e-06, 6.7369999999997154e-06, 5.887999999999033e-06, 6.4729999999998955e-06, 6.651999999999353e-06, 5.709000000003045e-06, 5.0549999999968676e-06, 5.569999999999881e-06, 6.514000000002601e-06, 5.971999999999922e-06, 6.054999999997868e-06, 6.542000000001741e-06, 5.820000000000131e-06, 5.582999999999977e-06, 4.985999999998492e-06, 6.417000000001616e-06, 6.722000000000672e-06, 6.110999999999617e-06, 6.722000000000672e-06, 4.930999999999686e-06, 5.402999999997576e-06, 4.986000000001961e-06, 6.360999999999867e-06, 5.221999999999172e-06, 5.819000000000657e-06, 5.7089999999995755e-06, 5.110999999998617e-06, 6.472000000000422e-06, 5.221999999999172e-06, 6.750000000003281e-06, 5.499999999998562e-06, 5.167000000000366e-06, 5.221999999999172e-06, 6.124999999999187e-06, 5.180999999999936e-06, 5.347000000002766e-06, 6.3329999999972575e-06, 5.9589999999998255e-06, 5.041000000000767e-06, 6.6529999999988265e-06, 6.195000000000506e-06, 6.277000000002447e-06, 6.638999999999257e-06, 6.374999999999437e-06, 5.8889999999985065e-06, 6.347000000000297e-06, 5.945000000000256e-06], 'source_diff': [0, 5.403000000001046e-06, 6.360999999999867e-06, 5.680000000000962e-06, 6.7369999999997154e-06, 5.887999999999033e-06, 6.4729999999998955e-06, 6.651999999999353e-06, 5.709000000003045e-06, 5.0549999999968676e-06, 5.569999999999881e-06, 6.514000000002601e-06, 5.971999999999922e-06, 6.054999999997868e-06, 6.542000000001741e-06, 5.820000000000131e-06, 5.582999999999977e-06, 4.985999999998492e-06, 6.417000000001616e-06, 6.722000000000672e-06, 6.110999999999617e-06, 6.722000000000672e-06, 4.930999999999686e-06, 5.402999999997576e-06, 4.986000000001961e-06, 6.360999999999867e-06, 5.221999999999172e-06, 5.819000000000657e-06, 5.7089999999995755e-06, 5.110999999998617e-06, 6.472000000000422e-06, 5.221999999999172e-06, 6.750000000003281e-06, 5.499999999998562e-06, 5.167000000000366e-06, 5.221999999999172e-06, 6.124999999999187e-06, 5.180999999999936e-06, 5.347000000002766e-06, 6.3329999999972575e-06, 5.9589999999998255e-06, 5.041000000000767e-06, 6.6529999999988265e-06, 6.195000000000506e-06, 6.277000000002447e-06, 6.638999999999257e-06, 6.374999999999437e-06, 5.8889999999985065e-06, 6.347000000000297e-06, 5.945000000000256e-06], 'event': ['RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING', 'RISING', 'FALLING'], 'time': [0.0175075, 0.017512903, 0.017519264, 0.017524944, 0.017531681, 0.017537569, 0.017544042, 0.017550694, 0.017556403, 0.017561458, 0.017567028, 0.017573542, 0.017579514, 0.017585569, 0.017592111, 0.017597931, 0.017603514, 0.0176085, 0.017614917, 0.017621639, 0.01762775, 0.017634472, 0.017639403, 0.017644806, 0.017649792, 0.017656153, 0.017661375, 0.017667194, 0.017672903, 0.017678014, 0.017684486, 0.017689708, 0.017696458, 0.017701958, 0.017707125, 0.017712347, 0.017718472, 0.017723653, 0.017729, 0.017735333, 0.017741292, 0.017746333, 0.017752986, 0.017759181, 0.017765458, 0.017772097, 0.017778472, 0.017784361, 0.017790708, 0.017796653], 'source}</msg>
<status status="PASS" starttime="20201030 18:27:55.510" endtime="20201030 18:27:55.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.506" endtime="20201030 18:27:55.514"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:55.517" level="INFO">${RESULT} = [{'diff': 5.403000000001046e-06}, {'diff': 5.680000000000962e-06}, {'diff': 5.887999999999033e-06}, {'diff': 6.651999999999353e-06}, {'diff': 5.0549999999968676e-06}, {'diff': 6.514000000002601e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:55.515" endtime="20201030 18:27:55.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:55.521" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.403000000001046e-06, 5.680000000000962e-06, 5.887999999999033e-06, 6.651999999999353e-06, 5.0549999999968676e-06, 6.514000000002601e-06, 6.054999999997868e-06, 5.820000000000131e-06, 4.985...</msg>
<status status="PASS" starttime="20201030 18:27:55.518" endtime="20201030 18:27:55.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.525" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 18:27:55.524" endtime="20201030 18:27:55.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:55.528" level="INFO">VALUE: [5.403000000001046e-06, 5.680000000000962e-06, 5.887999999999033e-06, 6.651999999999353e-06, 5.0549999999968676e-06, 6.514000000002601e-06, 6.054999999997868e-06, 5.820000000000131e-06, 4.985999999998492e-06, 6.722000000000672e-06, 6.722000000000672e-06, 5.402999999997576e-06, 6.360999999999867e-06, 5.819000000000657e-06, 5.110999999998617e-06, 5.221999999999172e-06, 5.499999999998562e-06, 5.221999999999172e-06, 5.180999999999936e-06, 6.3329999999972575e-06, 5.041000000000767e-06, 6.195000000000506e-06, 6.638999999999257e-06, 5.8889999999985065e-06, 5.945000000000256e-06]</msg>
<status status="PASS" starttime="20201030 18:27:55.526" endtime="20201030 18:27:55.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.522" endtime="20201030 18:27:55.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.532" endtime="20201030 18:27:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.531" endtime="20201030 18:27:55.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.530" endtime="20201030 18:27:55.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.170" endtime="20201030 18:27:55.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.169" endtime="20201030 18:27:55.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:47.933" endtime="20201030 18:27:55.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.557" endtime="20201030 18:27:55.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.556" endtime="20201030 18:27:55.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.555" endtime="20201030 18:27:55.578"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:44.832" endtime="20201030 18:27:55.578" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:55.585" endtime="20201030 18:27:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.584" endtime="20201030 18:27:55.606"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:55.620" endtime="20201030 18:27:58.642"></status>
</kw>
<msg timestamp="20201030 18:27:58.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:55.618" endtime="20201030 18:27:58.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.649" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.646" endtime="20201030 18:27:58.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.655" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:27:58.651" endtime="20201030 18:27:58.656"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.615" endtime="20201030 18:27:58.657"></status>
</kw>
<status status="FAIL" starttime="20201030 18:27:55.613" endtime="20201030 18:27:58.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.612" endtime="20201030 18:27:58.660"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:27:58.668" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:27:58.667" endtime="20201030 18:27:58.669"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.662" endtime="20201030 18:27:58.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.611" endtime="20201030 18:27:58.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.610" endtime="20201030 18:27:58.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.673" endtime="20201030 18:27:58.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.609" endtime="20201030 18:27:58.678"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.607" endtime="20201030 18:27:58.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:55.582" endtime="20201030 18:27:58.679"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.700" endtime="20201030 18:27:58.718"></status>
</kw>
<msg timestamp="20201030 18:27:58.719" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.696" endtime="20201030 18:27:58.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:58.725" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:58.722" endtime="20201030 18:27:58.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.727" endtime="20201030 18:27:58.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.690" endtime="20201030 18:27:58.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.686" endtime="20201030 18:27:58.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:58.740" endtime="20201030 18:27:59.033"></status>
</kw>
<msg timestamp="20201030 18:27:59.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106478736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106480278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:58.739" endtime="20201030 18:27:59.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106478736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106480278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.037" endtime="20201030 18:27:59.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.046" endtime="20201030 18:27:59.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.736" endtime="20201030 18:27:59.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.734" endtime="20201030 18:27:59.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.053" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5269999997791217e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5269999997791217e-...</msg>
<status status="PASS" starttime="20201030 18:27:59.049" endtime="20201030 18:27:59.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.057" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.4999999997655777e-06, 1.5269999997791217e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5269999997791217e-06, 1.554999999875406e-06, 1.4859999999394802e-06,...</msg>
<status status="PASS" starttime="20201030 18:27:59.054" endtime="20201030 18:27:59.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.062" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.061" endtime="20201030 18:27:59.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.064" level="INFO">VALUE: [1.5419999996879596e-06, 1.4999999997655777e-06, 1.5269999997791217e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5269999997791217e-06, 1.554999999875406e-06, 1.4859999999394802e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5269999997791217e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.527000000223211e-06, 1.527999999861862e-06, 1.500000000209667e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5140000000357645e-06, 1.5410000000493085e-06, 1.527999999861862e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.5140000000357645e-06, 1.5829999999716904e-06, 1.527999999861862e-06, 1.5550000003194953e-06, 1.5140000000357645e-06, 1.527999999861862e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5140000000357645e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.063" endtime="20201030 18:27:59.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.058" endtime="20201030 18:27:59.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.071" endtime="20201030 18:27:59.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.070" endtime="20201030 18:27:59.091"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.068" endtime="20201030 18:27:59.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.683" endtime="20201030 18:27:59.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.681" endtime="20201030 18:27:59.092"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.100" endtime="20201030 18:27:59.113"></status>
</kw>
<msg timestamp="20201030 18:27:59.113" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.099" endtime="20201030 18:27:59.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.116" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.114" endtime="20201030 18:27:59.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.117" endtime="20201030 18:27:59.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.096" endtime="20201030 18:27:59.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.094" endtime="20201030 18:27:59.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.126" endtime="20201030 18:27:59.409"></status>
</kw>
<msg timestamp="20201030 18:27:59.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.125" endtime="20201030 18:27:59.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019030347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019031861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.413" endtime="20201030 18:27:59.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.422" endtime="20201030 18:27:59.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.122" endtime="20201030 18:27:59.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.120" endtime="20201030 18:27:59.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.428" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.5410000000007362e-06}, {'diff': 1.457999999999321e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.5420000000002099e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:27:59.425" endtime="20201030 18:27:59.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.433" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.5410000000007362e-06, 1.457999999999321e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.570...</msg>
<status status="PASS" starttime="20201030 18:27:59.429" endtime="20201030 18:27:59.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.438" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.437" endtime="20201030 18:27:59.438"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.440" level="INFO">VALUE: [1.51400000000107e-06, 1.5410000000007362e-06, 1.457999999999321e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5700000000028191e-06, 1.4999999999980307e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.5420000000002099e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.4860000000019302e-06, 1.4720000000023603e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5130000000015964e-06, 1.5270000000011663e-06, 1.5279999999971705e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.5130000000015964e-06, 1.5130000000015964e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5139999999976006e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.439" endtime="20201030 18:27:59.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.434" endtime="20201030 18:27:59.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.445" endtime="20201030 18:27:59.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.443" endtime="20201030 18:27:59.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.442" endtime="20201030 18:27:59.467"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.093" endtime="20201030 18:27:59.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.092" endtime="20201030 18:27:59.468"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.485" endtime="20201030 18:27:59.504"></status>
</kw>
<msg timestamp="20201030 18:27:59.505" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.481" endtime="20201030 18:27:59.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.511" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.508" endtime="20201030 18:27:59.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.513" endtime="20201030 18:27:59.517"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.476" endtime="20201030 18:27:59.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.473" endtime="20201030 18:27:59.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.533" endtime="20201030 18:27:59.816"></status>
</kw>
<msg timestamp="20201030 18:27:59.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031018431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031019958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.530" endtime="20201030 18:27:59.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031018431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031019958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.820" endtime="20201030 18:27:59.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.829" endtime="20201030 18:27:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.524" endtime="20201030 18:27:59.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.520" endtime="20201030 18:27:59.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:27:59.836" level="INFO">${RESULT} = [{'diff': 1.5270000000011663e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5139999999976006e-06},...</msg>
<status status="PASS" starttime="20201030 18:27:59.833" endtime="20201030 18:27:59.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:27:59.841" level="INFO">${OVERHEAD} = {'diff': [1.5270000000011663e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5280...</msg>
<status status="PASS" starttime="20201030 18:27:59.837" endtime="20201030 18:27:59.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.845" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:27:59.844" endtime="20201030 18:27:59.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.847" level="INFO">VALUE: [1.5270000000011663e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.4999999999980307e-06, 1.4729999999983645e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4310000000031242e-06, 1.51400000000107e-06, 1.5129999999946575e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.4859999999949913e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201030 18:27:59.846" endtime="20201030 18:27:59.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.842" endtime="20201030 18:27:59.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:27:59.852" endtime="20201030 18:27:59.871"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.850" endtime="20201030 18:27:59.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.849" endtime="20201030 18:27:59.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.470" endtime="20201030 18:27:59.872"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.469" endtime="20201030 18:27:59.873"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.880" endtime="20201030 18:27:59.892"></status>
</kw>
<msg timestamp="20201030 18:27:59.892" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.879" endtime="20201030 18:27:59.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:27:59.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:27:59.893" endtime="20201030 18:27:59.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.896" endtime="20201030 18:27:59.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.876" endtime="20201030 18:27:59.899"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.875" endtime="20201030 18:27:59.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:27:59.906" endtime="20201030 18:28:00.196"></status>
</kw>
<msg timestamp="20201030 18:28:00.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017807778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:27:59.904" endtime="20201030 18:28:00.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017806264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017807778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.201" endtime="20201030 18:28:00.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.209" endtime="20201030 18:28:00.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.902" endtime="20201030 18:28:00.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.900" endtime="20201030 18:28:00.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.216" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.582999999999446e-06}, {'diff': 1.5139999999976006e-06}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:00.212" endtime="20201030 18:28:00.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:00.220" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.582999999999446e-06, 1.5139999999976006e-06, 1.5130000000015964e-06, 1.5139999999976006e-06, 1.569...</msg>
<status status="PASS" starttime="20201030 18:28:00.217" endtime="20201030 18:28:00.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.224" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:00.223" endtime="20201030 18:28:00.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.227" level="INFO">VALUE: [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.582999999999446e-06, 1.5139999999976006e-06, 1.5130000000015964e-06, 1.5139999999976006e-06, 1.5699999999993497e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5419999999967404e-06, 1.5559999999997798e-06, 1.4859999999984608e-06, 1.5269999999976969e-06, 1.5830000000029154e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5419999999967404e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.5420000000002099e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.225" endtime="20201030 18:28:00.228"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.221" endtime="20201030 18:28:00.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.232" endtime="20201030 18:28:00.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.230" endtime="20201030 18:28:00.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.229" endtime="20201030 18:28:00.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.873" endtime="20201030 18:28:00.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:59.873" endtime="20201030 18:28:00.253"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.261" endtime="20201030 18:28:00.272"></status>
</kw>
<msg timestamp="20201030 18:28:00.272" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.259" endtime="20201030 18:28:00.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.273" endtime="20201030 18:28:00.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.276" endtime="20201030 18:28:00.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.256" endtime="20201030 18:28:00.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.255" endtime="20201030 18:28:00.278"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.285" endtime="20201030 18:28:00.575"></status>
</kw>
<msg timestamp="20201030 18:28:00.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017833722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.283" endtime="20201030 18:28:00.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017833722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017835222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.579" endtime="20201030 18:28:00.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.587" endtime="20201030 18:28:00.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.281" endtime="20201030 18:28:00.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.279" endtime="20201030 18:28:00.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.594" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.5269999999976969e-06}, {'diff': 1.5409999999972668e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5139999999976006e-...</msg>
<status status="PASS" starttime="20201030 18:28:00.591" endtime="20201030 18:28:00.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:00.599" level="INFO">${OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.5269999999976969e-06, 1.5409999999972668e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5550000000003061e-06...</msg>
<status status="PASS" starttime="20201030 18:28:00.595" endtime="20201030 18:28:00.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.603" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:00.602" endtime="20201030 18:28:00.603"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.606" level="INFO">VALUE: [1.5000000000015001e-06, 1.5269999999976969e-06, 1.5409999999972668e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.4859999999984608e-06, 1.5269999999976969e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.443999999999751e-06, 1.5410000000007362e-06, 1.5139999999976006e-06, 1.5270000000011663e-06, 1.4859999999984608e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.4860000000019302e-06]</msg>
<status status="PASS" starttime="20201030 18:28:00.604" endtime="20201030 18:28:00.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.600" endtime="20201030 18:28:00.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:00.610" endtime="20201030 18:28:00.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.609" endtime="20201030 18:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.607" endtime="20201030 18:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.254" endtime="20201030 18:28:00.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.253" endtime="20201030 18:28:00.631"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.639" endtime="20201030 18:28:00.651"></status>
</kw>
<msg timestamp="20201030 18:28:00.652" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.637" endtime="20201030 18:28:00.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:00.653" endtime="20201030 18:28:00.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.655" endtime="20201030 18:28:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.634" endtime="20201030 18:28:00.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.633" endtime="20201030 18:28:00.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.664" endtime="20201030 18:28:00.950"></status>
</kw>
<msg timestamp="20201030 18:28:00.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018019819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018021347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.663" endtime="20201030 18:28:00.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:00.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018019819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018021347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:00.955" endtime="20201030 18:28:00.977"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:00.978" endtime="20201030 18:28:00.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.660" endtime="20201030 18:28:00.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.658" endtime="20201030 18:28:00.986"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:00.995" level="INFO">${RESULT} = [{'diff': 1.52800000000064e-06}, {'diff': 1.4999999999980307e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5139999999976006e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:00.988" endtime="20201030 18:28:00.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.005" level="INFO">${OVERHEAD} = {'diff': [1.52800000000064e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.4730...</msg>
<status status="PASS" starttime="20201030 18:28:00.997" endtime="20201030 18:28:01.005"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.014" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.012" endtime="20201030 18:28:01.015"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.020" level="INFO">VALUE: [1.52800000000064e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.473000000001834e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.4589999999987946e-06, 1.4859999999984608e-06, 1.5000000000015001e-06, 1.5409999999972668e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.4999999999980307e-06, 1.5699999999993497e-06, 1.5969999999990159e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.017" endtime="20201030 18:28:01.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.007" endtime="20201030 18:28:01.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.030" endtime="20201030 18:28:01.053"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.027" endtime="20201030 18:28:01.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.024" endtime="20201030 18:28:01.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.632" endtime="20201030 18:28:01.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:00.631" endtime="20201030 18:28:01.056"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.065" endtime="20201030 18:28:01.077"></status>
</kw>
<msg timestamp="20201030 18:28:01.078" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.064" endtime="20201030 18:28:01.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.079" endtime="20201030 18:28:01.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.081" endtime="20201030 18:28:01.085"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.061" endtime="20201030 18:28:01.086"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.059" endtime="20201030 18:28:01.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.093" endtime="20201030 18:28:01.379"></status>
</kw>
<msg timestamp="20201030 18:28:01.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023830403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.091" endtime="20201030 18:28:01.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023828903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023830403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.383" endtime="20201030 18:28:01.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.392" endtime="20201030 18:28:01.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.089" endtime="20201030 18:28:01.394"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.087" endtime="20201030 18:28:01.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.399" level="INFO">${RESULT} = [{'diff': 1.5000000000015001e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5139999999976006e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:01.395" endtime="20201030 18:28:01.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.403" level="INFO">${OVERHEAD} = {'diff': [1.5000000000015001e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.4729999999983645e-06, 1.5270000000011663e-06, 1.52...</msg>
<status status="PASS" starttime="20201030 18:28:01.400" endtime="20201030 18:28:01.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.407" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.406" endtime="20201030 18:28:01.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.410" level="INFO">VALUE: [1.5000000000015001e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.4729999999983645e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.4719999999988909e-06, 1.5270000000011663e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5409999999972668e-06, 1.5130000000015964e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.512999999998127e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5269999999976969e-06, 1.512999999998127e-06, 1.443999999999751e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5130000000015964e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.409" endtime="20201030 18:28:01.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.404" endtime="20201030 18:28:01.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.415" endtime="20201030 18:28:01.435"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.414" endtime="20201030 18:28:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.413" endtime="20201030 18:28:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.058" endtime="20201030 18:28:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.056" endtime="20201030 18:28:01.436"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.445" endtime="20201030 18:28:01.457"></status>
</kw>
<msg timestamp="20201030 18:28:01.457" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.443" endtime="20201030 18:28:01.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.458" endtime="20201030 18:28:01.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.461" endtime="20201030 18:28:01.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.440" endtime="20201030 18:28:01.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.439" endtime="20201030 18:28:01.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.471" endtime="20201030 18:28:01.757"></status>
</kw>
<msg timestamp="20201030 18:28:01.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.469" endtime="20201030 18:28:01.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018455042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.761" endtime="20201030 18:28:01.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.770" endtime="20201030 18:28:01.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.466" endtime="20201030 18:28:01.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.464" endtime="20201030 18:28:01.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:01.777" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.5970000000024853e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.4859999999984608e-06}, {'diff': 1.5130000000015964e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:01.773" endtime="20201030 18:28:01.777"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:01.782" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.5970000000024853e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.5130000000015964e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1....</msg>
<status status="PASS" starttime="20201030 18:28:01.778" endtime="20201030 18:28:01.782"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.786" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:01.785" endtime="20201030 18:28:01.786"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.789" level="INFO">VALUE: [1.51400000000107e-06, 1.5970000000024853e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.5130000000015964e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5130000000015964e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.4729999999983645e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.5269999999976969e-06, 1.5550000000003061e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.568999999999876e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.4869999999979344e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4449999999992247e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.5560000000032492e-06, 1.51400000000107e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:28:01.787" endtime="20201030 18:28:01.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.783" endtime="20201030 18:28:01.790"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:01.793" endtime="20201030 18:28:01.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.792" endtime="20201030 18:28:01.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.791" endtime="20201030 18:28:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.437" endtime="20201030 18:28:01.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.437" endtime="20201030 18:28:01.814"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.822" endtime="20201030 18:28:01.836"></status>
</kw>
<msg timestamp="20201030 18:28:01.836" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.821" endtime="20201030 18:28:01.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:01.839" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:01.837" endtime="20201030 18:28:01.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.840" endtime="20201030 18:28:01.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.818" endtime="20201030 18:28:01.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.816" endtime="20201030 18:28:01.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:01.850" endtime="20201030 18:28:02.138"></status>
</kw>
<msg timestamp="20201030 18:28:02.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018419833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018421347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:01.848" endtime="20201030 18:28:02.141"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018419833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018421347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.142" endtime="20201030 18:28:02.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.150" endtime="20201030 18:28:02.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.845" endtime="20201030 18:28:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.844" endtime="20201030 18:28:02.153"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.157" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.512999999998127e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.5279999999971705e-06}...</msg>
<status status="PASS" starttime="20201030 18:28:02.154" endtime="20201030 18:28:02.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:02.162" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.5139999999976006e-06, 1.512999999998127e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5...</msg>
<status status="PASS" starttime="20201030 18:28:02.158" endtime="20201030 18:28:02.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.166" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:02.165" endtime="20201030 18:28:02.166"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.169" level="INFO">VALUE: [1.51400000000107e-06, 1.5139999999976006e-06, 1.512999999998127e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5549999999968367e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5549999999968367e-06, 1.4859999999984608e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.4859999999984608e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5130000000015964e-06, 1.4720000000023603e-06, 1.5000000000015001e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.5410000000007362e-06, 1.5550000000003061e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.167" endtime="20201030 18:28:02.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.162" endtime="20201030 18:28:02.169"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.173" endtime="20201030 18:28:02.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.172" endtime="20201030 18:28:02.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.170" endtime="20201030 18:28:02.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.815" endtime="20201030 18:28:02.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:01.815" endtime="20201030 18:28:02.194"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.202" endtime="20201030 18:28:02.214"></status>
</kw>
<msg timestamp="20201030 18:28:02.215" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.201" endtime="20201030 18:28:02.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.217" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.216" endtime="20201030 18:28:02.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.219" endtime="20201030 18:28:02.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.198" endtime="20201030 18:28:02.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.196" endtime="20201030 18:28:02.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.229" endtime="20201030 18:28:02.527"></status>
</kw>
<msg timestamp="20201030 18:28:02.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.227" endtime="20201030 18:28:02.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018473403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.536" endtime="20201030 18:28:02.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.554" endtime="20201030 18:28:02.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.225" endtime="20201030 18:28:02.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.223" endtime="20201030 18:28:02.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.569" level="INFO">${RESULT} = [{'diff': 1.443999999999751e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.5279999999971705e-0...</msg>
<status status="PASS" starttime="20201030 18:28:02.562" endtime="20201030 18:28:02.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:02.578" level="INFO">${OVERHEAD} = {'diff': [1.443999999999751e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.5270000000011663e-06, 1.5000000000015001e-06, 1.5279999999971705e-06, 1.4309999999996548e-06, 1.52800000000064e-06, 1...</msg>
<status status="PASS" starttime="20201030 18:28:02.571" endtime="20201030 18:28:02.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.583" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:02.582" endtime="20201030 18:28:02.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.585" level="INFO">VALUE: [1.443999999999751e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.5270000000011663e-06, 1.5000000000015001e-06, 1.5279999999971705e-06, 1.4309999999996548e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.4870000000014039e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4859999999984608e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5410000000007362e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.4860000000019302e-06, 1.5130000000015964e-06, 1.5559999999997798e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.512999999998127e-06, 1.5420000000002099e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5000000000015001e-06, 1.51400000000107e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.584" endtime="20201030 18:28:02.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.579" endtime="20201030 18:28:02.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.593" endtime="20201030 18:28:02.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.592" endtime="20201030 18:28:02.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.590" endtime="20201030 18:28:02.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.195" endtime="20201030 18:28:02.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.194" endtime="20201030 18:28:02.614"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.622" endtime="20201030 18:28:02.635"></status>
</kw>
<msg timestamp="20201030 18:28:02.635" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.620" endtime="20201030 18:28:02.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.638" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.637" endtime="20201030 18:28:02.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.639" endtime="20201030 18:28:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.618" endtime="20201030 18:28:02.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.616" endtime="20201030 18:28:02.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.648" endtime="20201030 18:28:02.935"></status>
</kw>
<msg timestamp="20201030 18:28:02.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017931667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017933194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.647" endtime="20201030 18:28:02.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017931667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017933194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:02.939" endtime="20201030 18:28:02.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.947" endtime="20201030 18:28:02.949"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.644" endtime="20201030 18:28:02.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.642" endtime="20201030 18:28:02.950"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:02.954" level="INFO">${RESULT} = [{'diff': 1.5270000000011663e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5130000000015964e-06}, {'diff': 1.5279999999971705e-06}, {'diff': 1.5279999999971705e-06}, {'diff': 1.5000000000015001e-06...</msg>
<status status="PASS" starttime="20201030 18:28:02.951" endtime="20201030 18:28:02.954"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:02.959" level="INFO">${OVERHEAD} = {'diff': [1.5270000000011663e-06, 1.52800000000064e-06, 1.5130000000015964e-06, 1.5279999999971705e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, ...</msg>
<status status="PASS" starttime="20201030 18:28:02.955" endtime="20201030 18:28:02.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.963" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:02.962" endtime="20201030 18:28:02.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:02.965" level="INFO">VALUE: [1.5270000000011663e-06, 1.52800000000064e-06, 1.5130000000015964e-06, 1.5279999999971705e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.443999999999751e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.5279999999971705e-06]</msg>
<status status="PASS" starttime="20201030 18:28:02.964" endtime="20201030 18:28:02.966"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.960" endtime="20201030 18:28:02.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:02.970" endtime="20201030 18:28:02.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.968" endtime="20201030 18:28:02.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.967" endtime="20201030 18:28:02.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.615" endtime="20201030 18:28:02.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.614" endtime="20201030 18:28:02.991"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:02.999" endtime="20201030 18:28:03.012"></status>
</kw>
<msg timestamp="20201030 18:28:03.012" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:02.997" endtime="20201030 18:28:03.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.015" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.013" endtime="20201030 18:28:03.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.016" endtime="20201030 18:28:03.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.994" endtime="20201030 18:28:03.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.993" endtime="20201030 18:28:03.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.025" endtime="20201030 18:28:03.312"></status>
</kw>
<msg timestamp="20201030 18:28:03.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018481403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.023" endtime="20201030 18:28:03.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018481403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018482917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.316" endtime="20201030 18:28:03.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.324" endtime="20201030 18:28:03.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.021" endtime="20201030 18:28:03.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.019" endtime="20201030 18:28:03.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.331" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.512999999998127e-06}, {'diff': 1.51400000000107e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:03.328" endtime="20201030 18:28:03.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:03.336" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.512999999998127e-06, 1.51400000000107e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.51400...</msg>
<status status="PASS" starttime="20201030 18:28:03.332" endtime="20201030 18:28:03.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:03.339" endtime="20201030 18:28:03.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.342" level="INFO">VALUE: [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.512999999998127e-06, 1.51400000000107e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.457999999999321e-06, 1.5410000000007362e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.582999999999446e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5130000000015964e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.5139999999976006e-06, 1.5000000000015001e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.5279999999971705e-06, 1.4719999999988909e-06]</msg>
<status status="PASS" starttime="20201030 18:28:03.341" endtime="20201030 18:28:03.343"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.337" endtime="20201030 18:28:03.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.347" endtime="20201030 18:28:03.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.345" endtime="20201030 18:28:03.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.344" endtime="20201030 18:28:03.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.991" endtime="20201030 18:28:03.368"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:02.991" endtime="20201030 18:28:03.368"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.382" endtime="20201030 18:28:03.397"></status>
</kw>
<msg timestamp="20201030 18:28:03.398" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.380" endtime="20201030 18:28:03.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.401" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.399" endtime="20201030 18:28:03.404"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.405" endtime="20201030 18:28:03.407"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.377" endtime="20201030 18:28:03.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.372" endtime="20201030 18:28:03.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.415" endtime="20201030 18:28:03.696"></status>
</kw>
<msg timestamp="20201030 18:28:03.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027354444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.413" endtime="20201030 18:28:03.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.027352931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.027354444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:03.700" endtime="20201030 18:28:03.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.709" endtime="20201030 18:28:03.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.411" endtime="20201030 18:28:03.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.409" endtime="20201030 18:28:03.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:03.715" level="INFO">${RESULT} = [{'diff': 1.512999999998127e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5269999999976969e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.4999999999980307e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:03.712" endtime="20201030 18:28:03.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:03.719" level="INFO">${OVERHEAD} = {'diff': [1.512999999998127e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.5270000000011663e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.513...</msg>
<status status="PASS" starttime="20201030 18:28:03.716" endtime="20201030 18:28:03.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.723" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:03.722" endtime="20201030 18:28:03.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.726" level="INFO">VALUE: [1.512999999998127e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.5270000000011663e-06, 1.4999999999980307e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.4859999999984608e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.568999999999876e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.457999999999321e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.473000000001834e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.5279999999971705e-06]</msg>
<status status="PASS" starttime="20201030 18:28:03.724" endtime="20201030 18:28:03.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.720" endtime="20201030 18:28:03.727"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:03.731" endtime="20201030 18:28:03.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.729" endtime="20201030 18:28:03.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.728" endtime="20201030 18:28:03.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.370" endtime="20201030 18:28:03.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.369" endtime="20201030 18:28:03.752"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.760" endtime="20201030 18:28:03.771"></status>
</kw>
<msg timestamp="20201030 18:28:03.771" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.758" endtime="20201030 18:28:03.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:03.774" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:03.772" endtime="20201030 18:28:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.775" endtime="20201030 18:28:03.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.756" endtime="20201030 18:28:03.777"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.754" endtime="20201030 18:28:03.778"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:03.784" endtime="20201030 18:28:04.085"></status>
</kw>
<msg timestamp="20201030 18:28:04.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018267, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:03.782" endtime="20201030 18:28:04.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018265486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018267, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:28:04.094" endtime="20201030 18:28:04.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.103" endtime="20201030 18:28:04.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.780" endtime="20201030 18:28:04.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.778" endtime="20201030 18:28:04.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.109" level="INFO">${RESULT} = [{'diff': 1.5139999999976006e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.457999999999321e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5410000000007362e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:04.106" endtime="20201030 18:28:04.109"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:04.114" level="INFO">${OVERHEAD} = {'diff': [1.5139999999976006e-06, 1.51400000000107e-06, 1.457999999999321e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5410000000007362e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.5...</msg>
<status status="PASS" starttime="20201030 18:28:04.110" endtime="20201030 18:28:04.114"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.118" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:04.117" endtime="20201030 18:28:04.119"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.121" level="INFO">VALUE: [1.5139999999976006e-06, 1.51400000000107e-06, 1.457999999999321e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5410000000007362e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5559999999997798e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5550000000003061e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.5830000000029154e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4719999999988909e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.568999999999876e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.4999999999980307e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.5550000000003061e-06, 1.4580000000027904e-06, 1.5409999999972668e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.119" endtime="20201030 18:28:04.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.115" endtime="20201030 18:28:04.122"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.126" endtime="20201030 18:28:04.145"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.124" endtime="20201030 18:28:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.123" endtime="20201030 18:28:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.753" endtime="20201030 18:28:04.146"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:03.752" endtime="20201030 18:28:04.146"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.154" endtime="20201030 18:28:04.167"></status>
</kw>
<msg timestamp="20201030 18:28:04.168" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.153" endtime="20201030 18:28:04.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.170" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.169" endtime="20201030 18:28:04.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.171" endtime="20201030 18:28:04.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.150" endtime="20201030 18:28:04.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.148" endtime="20201030 18:28:04.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.180" endtime="20201030 18:28:04.470"></status>
</kw>
<msg timestamp="20201030 18:28:04.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01858725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.178" endtime="20201030 18:28:04.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018585694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01858725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:04.474" endtime="20201030 18:28:04.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.482" endtime="20201030 18:28:04.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.176" endtime="20201030 18:28:04.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.174" endtime="20201030 18:28:04.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.489" level="INFO">${RESULT} = [{'diff': 1.5559999999997798e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.4860000000019302e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5410000000007362e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.486" endtime="20201030 18:28:04.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:04.494" level="INFO">${OVERHEAD} = {'diff': [1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.526999...</msg>
<status status="PASS" starttime="20201030 18:28:04.490" endtime="20201030 18:28:04.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.498" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:04.497" endtime="20201030 18:28:04.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.500" level="INFO">VALUE: [1.5559999999997798e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.52800000000064e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5559999999997798e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5000000000015001e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4580000000027904e-06, 1.5279999999971705e-06, 1.5270000000011663e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.499" endtime="20201030 18:28:04.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.494" endtime="20201030 18:28:04.502"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.505" endtime="20201030 18:28:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.504" endtime="20201030 18:28:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.502" endtime="20201030 18:28:04.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.147" endtime="20201030 18:28:04.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.147" endtime="20201030 18:28:04.526"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.534" endtime="20201030 18:28:04.545"></status>
</kw>
<msg timestamp="20201030 18:28:04.545" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.532" endtime="20201030 18:28:04.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.548" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.546" endtime="20201030 18:28:04.548"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.549" endtime="20201030 18:28:04.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.530" endtime="20201030 18:28:04.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.528" endtime="20201030 18:28:04.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.559" endtime="20201030 18:28:04.846"></status>
</kw>
<msg timestamp="20201030 18:28:04.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017904361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.557" endtime="20201030 18:28:04.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017904361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.850" endtime="20201030 18:28:04.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.858" endtime="20201030 18:28:04.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.555" endtime="20201030 18:28:04.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.553" endtime="20201030 18:28:04.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:04.865" level="INFO">${RESULT} = [{'diff': 1.5699999999993497e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5269999999976969e-06}, {'diff': 1.5409999999972668e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.51400000000107e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:04.861" endtime="20201030 18:28:04.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:04.869" level="INFO">${OVERHEAD} = {'diff': [1.5699999999993497e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5550...</msg>
<status status="PASS" starttime="20201030 18:28:04.866" endtime="20201030 18:28:04.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.873" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:04.872" endtime="20201030 18:28:04.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.875" level="INFO">VALUE: [1.5699999999993497e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.5409999999972668e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5550000000003061e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.4859999999984608e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.4860000000019302e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.568999999999876e-06, 1.51400000000107e-06, 1.5000000000015001e-06, 1.5550000000003061e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.4719999999988909e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5000000000015001e-06, 1.5000000000015001e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4719999999988909e-06, 1.5270000000011663e-06]</msg>
<status status="PASS" starttime="20201030 18:28:04.874" endtime="20201030 18:28:04.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.870" endtime="20201030 18:28:04.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:04.881" endtime="20201030 18:28:04.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.880" endtime="20201030 18:28:04.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.878" endtime="20201030 18:28:04.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.527" endtime="20201030 18:28:04.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.526" endtime="20201030 18:28:04.902"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.910" endtime="20201030 18:28:04.921"></status>
</kw>
<msg timestamp="20201030 18:28:04.922" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.908" endtime="20201030 18:28:04.922"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:04.924" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:04.923" endtime="20201030 18:28:04.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.925" endtime="20201030 18:28:04.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.905" endtime="20201030 18:28:04.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.904" endtime="20201030 18:28:04.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:04.934" endtime="20201030 18:28:05.224"></status>
</kw>
<msg timestamp="20201030 18:28:05.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:04.932" endtime="20201030 18:28:05.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017903736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017905264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.228" endtime="20201030 18:28:05.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.236" endtime="20201030 18:28:05.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.930" endtime="20201030 18:28:05.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.928" endtime="20201030 18:28:05.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.243" level="INFO">${RESULT} = [{'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.5269999999976969e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:05.240" endtime="20201030 18:28:05.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:05.248" level="INFO">${OVERHEAD} = {'diff': [1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.513999...</msg>
<status status="PASS" starttime="20201030 18:28:05.244" endtime="20201030 18:28:05.248"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.252" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:05.251" endtime="20201030 18:28:05.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.255" level="INFO">VALUE: [1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.5279999999971705e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.512999999998127e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.4859999999984608e-06, 1.4719999999988909e-06, 1.52800000000064e-06, 1.5559999999997798e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.4999999999980307e-06, 1.5000000000015001e-06, 1.4859999999984608e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.443999999999751e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.457999999999321e-06, 1.4720000000023603e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.253" endtime="20201030 18:28:05.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.249" endtime="20201030 18:28:05.256"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.260" endtime="20201030 18:28:05.279"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.258" endtime="20201030 18:28:05.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.257" endtime="20201030 18:28:05.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.903" endtime="20201030 18:28:05.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:04.902" endtime="20201030 18:28:05.281"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.289" endtime="20201030 18:28:05.301"></status>
</kw>
<msg timestamp="20201030 18:28:05.301" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.287" endtime="20201030 18:28:05.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.304" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.302" endtime="20201030 18:28:05.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.305" endtime="20201030 18:28:05.306"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.284" endtime="20201030 18:28:05.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.283" endtime="20201030 18:28:05.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.314" endtime="20201030 18:28:05.618"></status>
</kw>
<msg timestamp="20201030 18:28:05.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.312" endtime="20201030 18:28:05.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017996556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017998083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.623" endtime="20201030 18:28:05.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.631" endtime="20201030 18:28:05.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.310" endtime="20201030 18:28:05.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.308" endtime="20201030 18:28:05.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:05.639" level="INFO">${RESULT} = [{'diff': 1.5270000000011663e-06}, {'diff': 1.5139999999976006e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.5420000000002099e-06}, {'diff': 1.5000000000015001e-06}, {'diff': 1.52800000000064e-06},...</msg>
<status status="PASS" starttime="20201030 18:28:05.636" endtime="20201030 18:28:05.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:05.643" level="INFO">${OVERHEAD} = {'diff': [1.5270000000011663e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.51...</msg>
<status status="PASS" starttime="20201030 18:28:05.640" endtime="20201030 18:28:05.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.647" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:05.646" endtime="20201030 18:28:05.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.650" level="INFO">VALUE: [1.5270000000011663e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5420000000002099e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5270000000011663e-06, 1.5269999999976969e-06, 1.5269999999976969e-06, 1.5420000000002099e-06, 1.4449999999992247e-06, 1.5130000000015964e-06, 1.5139999999976006e-06, 1.5269999999976969e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5699999999993497e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5550000000003061e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5420000000002099e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5269999999976969e-06, 1.52800000000064e-06, 1.5269999999976969e-06]</msg>
<status status="PASS" starttime="20201030 18:28:05.649" endtime="20201030 18:28:05.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.644" endtime="20201030 18:28:05.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:05.655" endtime="20201030 18:28:05.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.653" endtime="20201030 18:28:05.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.652" endtime="20201030 18:28:05.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.281" endtime="20201030 18:28:05.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.281" endtime="20201030 18:28:05.676"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.684" endtime="20201030 18:28:05.695"></status>
</kw>
<msg timestamp="20201030 18:28:05.695" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.682" endtime="20201030 18:28:05.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:05.698" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:05.696" endtime="20201030 18:28:05.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.699" endtime="20201030 18:28:05.701"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.680" endtime="20201030 18:28:05.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.678" endtime="20201030 18:28:05.702"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:05.709" endtime="20201030 18:28:05.992"></status>
</kw>
<msg timestamp="20201030 18:28:05.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018073403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.707" endtime="20201030 18:28:05.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018073403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018074917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:05.996" endtime="20201030 18:28:06.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.005" endtime="20201030 18:28:06.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.705" endtime="20201030 18:28:06.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.703" endtime="20201030 18:28:06.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.011" level="INFO">${RESULT} = [{'diff': 1.51400000000107e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06}, {'diff'...</msg>
<status status="PASS" starttime="20201030 18:28:06.008" endtime="20201030 18:28:06.011"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:06.015" level="INFO">${OVERHEAD} = {'diff': [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.5280000000...</msg>
<status status="PASS" starttime="20201030 18:28:06.012" endtime="20201030 18:28:06.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.020" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:06.019" endtime="20201030 18:28:06.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.022" level="INFO">VALUE: [1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5410000000007362e-06, 1.52800000000064e-06, 1.582999999999446e-06, 1.51400000000107e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.443999999999751e-06, 1.51400000000107e-06, 1.5130000000015964e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.5970000000024853e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.4580000000027904e-06, 1.4589999999987946e-06, 1.443999999999751e-06, 1.457999999999321e-06, 1.5270000000011663e-06, 1.5550000000003061e-06, 1.5420000000002099e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5000000000015001e-06]</msg>
<status status="PASS" starttime="20201030 18:28:06.021" endtime="20201030 18:28:06.026"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.016" endtime="20201030 18:28:06.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.030" endtime="20201030 18:28:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.029" endtime="20201030 18:28:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.027" endtime="20201030 18:28:06.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.677" endtime="20201030 18:28:06.051"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:05.676" endtime="20201030 18:28:06.051"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.059" endtime="20201030 18:28:06.071"></status>
</kw>
<msg timestamp="20201030 18:28:06.072" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.057" endtime="20201030 18:28:06.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.074" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.073" endtime="20201030 18:28:06.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.075" endtime="20201030 18:28:06.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.055" endtime="20201030 18:28:06.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.053" endtime="20201030 18:28:06.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.084" endtime="20201030 18:28:06.367"></status>
</kw>
<msg timestamp="20201030 18:28:06.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.083" endtime="20201030 18:28:06.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018296903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018298444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:06.371" endtime="20201030 18:28:06.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.379" endtime="20201030 18:28:06.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.080" endtime="20201030 18:28:06.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.078" endtime="20201030 18:28:06.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:06.386" level="INFO">${RESULT} = [{'diff': 1.5410000000007362e-06}, {'diff': 1.568999999999876e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.51400000000107e-06}, {'diff': 1.5279999999971705e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:28:06.383" endtime="20201030 18:28:06.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:06.391" level="INFO">${OVERHEAD} = {'diff': [1.5410000000007362e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.513...</msg>
<status status="PASS" starttime="20201030 18:28:06.387" endtime="20201030 18:28:06.391"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.395" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 18:28:06.394" endtime="20201030 18:28:06.396"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:06.398" level="INFO">VALUE: [1.5410000000007362e-06, 1.568999999999876e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.4860000000019302e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.52800000000064e-06, 1.4999999999980307e-06, 1.5270000000011663e-06, 1.5270000000011663e-06, 1.51400000000107e-06, 1.5269999999976969e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.5279999999971705e-06, 1.4300000000001811e-06, 1.52800000000064e-06, 1.5000000000015001e-06, 1.5420000000002099e-06, 1.5410000000007362e-06, 1.5279999999971705e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.51400000000107e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.5130000000015964e-06, 1.5550000000003061e-06, 1.5000000000015001e-06, 1.5130000000015964e-06, 1.5270000000011663e-06, 1.52800000000064e-06, 1.51400000000107e-06, 1.5139999999976006e-06, 1.5279999999971705e-06, 1.5279999999971705e-06, 1.5279999999971705e-06, 1.5269999999976969e-06, 1.5550000000003061e-06, 1.5270000000011663e-06, 1.52800000000064e-06]</msg>
<status status="PASS" starttime="20201030 18:28:06.396" endtime="20201030 18:28:06.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.392" endtime="20201030 18:28:06.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.403" endtime="20201030 18:28:06.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.401" endtime="20201030 18:28:06.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.400" endtime="20201030 18:28:06.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.052" endtime="20201030 18:28:06.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.051" endtime="20201030 18:28:06.424"></status>
</kw>
<status status="PASS" starttime="20201030 18:27:58.680" endtime="20201030 18:28:06.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.428" endtime="20201030 18:28:06.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.426" endtime="20201030 18:28:06.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.425" endtime="20201030 18:28:06.448"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:27:55.580" endtime="20201030 18:28:06.448" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:06.455" endtime="20201030 18:28:06.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.454" endtime="20201030 18:28:06.475"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:06.488" endtime="20201030 18:28:09.510"></status>
</kw>
<msg timestamp="20201030 18:28:09.511" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:06.487" endtime="20201030 18:28:09.512"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.517" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.514" endtime="20201030 18:28:09.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.523" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:09.519" endtime="20201030 18:28:09.524"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.484" endtime="20201030 18:28:09.525"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:06.482" endtime="20201030 18:28:09.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.481" endtime="20201030 18:28:09.527"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:09.534" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:09.533" endtime="20201030 18:28:09.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.529" endtime="20201030 18:28:09.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.480" endtime="20201030 18:28:09.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.479" endtime="20201030 18:28:09.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.538" endtime="20201030 18:28:09.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.478" endtime="20201030 18:28:09.542"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.476" endtime="20201030 18:28:09.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:06.452" endtime="20201030 18:28:09.544"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.562" endtime="20201030 18:28:09.585"></status>
</kw>
<msg timestamp="20201030 18:28:09.587" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.558" endtime="20201030 18:28:09.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.592" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:09.589" endtime="20201030 18:28:09.593"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.595" endtime="20201030 18:28:09.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.553" endtime="20201030 18:28:09.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.548" endtime="20201030 18:28:09.600"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.605" endtime="20201030 18:28:09.606"></status>
</kw>
<msg timestamp="20201030 18:28:09.607" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:09.602" endtime="20201030 18:28:09.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.611" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:09.610" endtime="20201030 18:28:09.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.613" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:09.612" endtime="20201030 18:28:09.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.608" endtime="20201030 18:28:09.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.618" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:09.617" endtime="20201030 18:28:09.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.620" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:09.619" endtime="20201030 18:28:09.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.614" endtime="20201030 18:28:09.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.627" endtime="20201030 18:28:09.923"></status>
</kw>
<msg timestamp="20201030 18:28:09.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098071514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.625" endtime="20201030 18:28:09.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098071514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.098076486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:09.927" endtime="20201030 18:28:09.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:09.936" endtime="20201030 18:28:09.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.623" endtime="20201030 18:28:09.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.621" endtime="20201030 18:28:09.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:09.942" level="INFO">${RESULT} = [{'diff': 4.972000000158516e-06}, {'diff': 5.069999999829378e-06}, {'diff': 5.055000000364629e-06}, {'diff': 5.069999999829378e-06}, {'diff': 5.069999999829378e-06}, {'diff': 5.041000000094442e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:09.939" endtime="20201030 18:28:09.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:09.947" level="INFO">${OVERHEAD} = {'diff': [4.972000000158516e-06, 5.069999999829378e-06, 5.055000000364629e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.041000000094442e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.139...</msg>
<status status="PASS" starttime="20201030 18:28:09.944" endtime="20201030 18:28:09.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.953" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 18:28:09.952" endtime="20201030 18:28:09.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:09.956" level="INFO">VALUE: [4.972000000158516e-06, 5.069999999829378e-06, 5.055000000364629e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.041000000094442e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.139000000209393e-06, 5.0840000000995644e-06, 5.110999999669019e-06, 5.0840000000995644e-06, 5.0690000001907265e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.124999999939206e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.05499999992054e-06, 5.05499999992054e-06, 5.083000000016824e-06, 5.05600000000328e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.0690000001907265e-06, 5.055000000364629e-06, 5.014000000080898e-06, 5.083000000016824e-06, 5.069999999829378e-06, 5.111000000113108e-06, 5.111000000113108e-06, 5.05600000000328e-06, 5.083000000016824e-06, 5.068999999746637e-06, 5.097999999925662e-06, 5.05499999992054e-06, 5.124999999939206e-06, 5.069999999829378e-06, 5.096999999842922e-06, 5.027999999906996e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.124999999939206e-06, 5.0840000000995644e-06, 5.111000000113108e-06]</msg>
<status status="PASS" starttime="20201030 18:28:09.954" endtime="20201030 18:28:09.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.948" endtime="20201030 18:28:09.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.961" endtime="20201030 18:28:09.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.959" endtime="20201030 18:28:09.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.958" endtime="20201030 18:28:09.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.545" endtime="20201030 18:28:09.981"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:06.450" endtime="20201030 18:28:09.982" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:09.989" endtime="20201030 18:28:10.009"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.988" endtime="20201030 18:28:10.009"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:10.024" endtime="20201030 18:28:13.046"></status>
</kw>
<msg timestamp="20201030 18:28:13.047" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:10.022" endtime="20201030 18:28:13.047"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.049" endtime="20201030 18:28:13.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.059" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:13.055" endtime="20201030 18:28:13.060"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:10.020" endtime="20201030 18:28:13.061"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:10.017" endtime="20201030 18:28:13.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.016" endtime="20201030 18:28:13.063"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:13.071" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:13.070" endtime="20201030 18:28:13.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.065" endtime="20201030 18:28:13.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.015" endtime="20201030 18:28:13.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.014" endtime="20201030 18:28:13.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.075" endtime="20201030 18:28:13.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.012" endtime="20201030 18:28:13.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:10.010" endtime="20201030 18:28:13.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:09.986" endtime="20201030 18:28:13.081"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.101" endtime="20201030 18:28:13.167"></status>
</kw>
<msg timestamp="20201030 18:28:13.168" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.096" endtime="20201030 18:28:13.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.170" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.169" endtime="20201030 18:28:13.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.171" endtime="20201030 18:28:13.173"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.091" endtime="20201030 18:28:13.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.086" endtime="20201030 18:28:13.174"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.176" endtime="20201030 18:28:13.178"></status>
</kw>
<msg timestamp="20201030 18:28:13.179" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:13.175" endtime="20201030 18:28:13.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.184" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:13.182" endtime="20201030 18:28:13.184"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.187" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:13.185" endtime="20201030 18:28:13.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.179" endtime="20201030 18:28:13.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.194" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:13.192" endtime="20201030 18:28:13.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.197" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:13.196" endtime="20201030 18:28:13.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.189" endtime="20201030 18:28:13.199"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.208" endtime="20201030 18:28:13.509"></status>
</kw>
<msg timestamp="20201030 18:28:13.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104337333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104370958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.206" endtime="20201030 18:28:13.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104337333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104370958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:13.514" endtime="20201030 18:28:13.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.522" endtime="20201030 18:28:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.202" endtime="20201030 18:28:13.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.200" endtime="20201030 18:28:13.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:13.529" level="INFO">${RESULT} = [{'diff': 3.3624999999926075e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.363900000019626e-05}, {'diff': 3.373600000022847e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.365300000002236e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:13.525" endtime="20201030 18:28:13.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:13.533" level="INFO">${OVERHEAD} = {'diff': [3.3624999999926075e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.373600000022847e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.366699999984846e-05, 3.370...</msg>
<status status="PASS" starttime="20201030 18:28:13.530" endtime="20201030 18:28:13.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.543" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 18:28:13.542" endtime="20201030 18:28:13.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:13.546" level="INFO">VALUE: [3.3624999999926075e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.373600000022847e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.366699999984846e-05, 3.370800000013219e-05, 3.3667000000292546e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.363900000019626e-05, 3.363900000019626e-05, 3.3667000000292546e-05, 3.365300000002236e-05, 3.363899999975217e-05, 3.361099999965589e-05, 3.3624999999926075e-05, 3.365300000002236e-05, 3.3624999999926075e-05, 3.3680000000035903e-05, 3.366699999984846e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.363899999975217e-05, 3.3666000000209806e-05, 3.365300000002236e-05, 3.365200000038371e-05, 3.3624999999926075e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.3679999999591814e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3667000000292546e-05, 3.366599999976572e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3721999999958285e-05, 3.3721999999958285e-05, 3.3666000000209806e-05]</msg>
<status status="PASS" starttime="20201030 18:28:13.544" endtime="20201030 18:28:13.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.534" endtime="20201030 18:28:13.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.551" endtime="20201030 18:28:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.550" endtime="20201030 18:28:13.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.548" endtime="20201030 18:28:13.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.082" endtime="20201030 18:28:13.572"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:09.984" endtime="20201030 18:28:13.573" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:13.580" endtime="20201030 18:28:13.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.578" endtime="20201030 18:28:13.600"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:13.614" endtime="20201030 18:28:16.636"></status>
</kw>
<msg timestamp="20201030 18:28:16.637" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:13.612" endtime="20201030 18:28:16.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.643" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.639" endtime="20201030 18:28:16.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.649" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:16.645" endtime="20201030 18:28:16.650"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:13.609" endtime="20201030 18:28:16.651"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:13.607" endtime="20201030 18:28:16.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.605" endtime="20201030 18:28:16.653"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:16.661" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:16.660" endtime="20201030 18:28:16.662"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.655" endtime="20201030 18:28:16.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.604" endtime="20201030 18:28:16.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.604" endtime="20201030 18:28:16.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.665" endtime="20201030 18:28:16.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.602" endtime="20201030 18:28:16.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.601" endtime="20201030 18:28:16.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:13.577" endtime="20201030 18:28:16.671"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.694" endtime="20201030 18:28:16.889"></status>
</kw>
<msg timestamp="20201030 18:28:16.890" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.691" endtime="20201030 18:28:16.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.893" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:16.891" endtime="20201030 18:28:16.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.894" endtime="20201030 18:28:16.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.681" endtime="20201030 18:28:16.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.676" endtime="20201030 18:28:16.897"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.900" endtime="20201030 18:28:16.902"></status>
</kw>
<msg timestamp="20201030 18:28:16.902" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:16.898" endtime="20201030 18:28:16.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.906" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:16.905" endtime="20201030 18:28:16.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.909" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:16.908" endtime="20201030 18:28:16.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.903" endtime="20201030 18:28:16.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.914" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:16.912" endtime="20201030 18:28:16.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:16.916" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:16.915" endtime="20201030 18:28:16.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.910" endtime="20201030 18:28:16.917"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:16.923" endtime="20201030 18:28:17.225"></status>
</kw>
<msg timestamp="20201030 18:28:17.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109900931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109964833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:16.922" endtime="20201030 18:28:17.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109900931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109964833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:17.229" endtime="20201030 18:28:17.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.237" endtime="20201030 18:28:17.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.919" endtime="20201030 18:28:17.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.917" endtime="20201030 18:28:17.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:17.244" level="INFO">${RESULT} = [{'diff': 6.390199999994906e-05}, {'diff': 6.359700000002633e-05}, {'diff': 6.358400000028297e-05}, {'diff': 6.356899999993004e-05}, {'diff': 6.358399999983888e-05}, {'diff': 6.358399999983888e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:17.240" endtime="20201030 18:28:17.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:17.249" level="INFO">${OVERHEAD} = {'diff': [6.390199999994906e-05, 6.359700000002633e-05, 6.358400000028297e-05, 6.356899999993004e-05, 6.358399999983888e-05, 6.358399999983888e-05, 6.359700000002633e-05, 6.359800000010907e-05, 6.3584...</msg>
<status status="PASS" starttime="20201030 18:28:17.245" endtime="20201030 18:28:17.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.254" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 18:28:17.253" endtime="20201030 18:28:17.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:17.256" level="INFO">VALUE: [6.390199999994906e-05, 6.359700000002633e-05, 6.358400000028297e-05, 6.356899999993004e-05, 6.358399999983888e-05, 6.358399999983888e-05, 6.359700000002633e-05, 6.359800000010907e-05, 6.358400000028297e-05, 6.362500000012261e-05, 6.363899999994871e-05, 6.355500000010395e-05, 6.358299999975614e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.359800000010907e-05, 6.358300000020023e-05, 6.362500000012261e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.358299999975614e-05, 6.355500000010395e-05, 6.361099999985242e-05, 6.361099999985242e-05, 6.359700000002633e-05, 6.355500000010395e-05, 6.359799999966498e-05, 6.356900000037413e-05, 6.361099999985242e-05, 6.358400000028297e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.361100000029651e-05, 6.359700000002633e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.356900000037413e-05, 6.354099999983376e-05, 6.362500000012261e-05, 6.359800000010907e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.35140000002643e-05, 6.359800000010907e-05, 6.358299999975614e-05, 6.358300000020023e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.358299999975614e-05]</msg>
<status status="PASS" starttime="20201030 18:28:17.255" endtime="20201030 18:28:17.256"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.250" endtime="20201030 18:28:17.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.261" endtime="20201030 18:28:17.280"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.259" endtime="20201030 18:28:17.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.258" endtime="20201030 18:28:17.281"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:16.672" endtime="20201030 18:28:17.281"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:13.574" endtime="20201030 18:28:17.282" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:17.289" endtime="20201030 18:28:17.308"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.287" endtime="20201030 18:28:17.309"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:17.322" endtime="20201030 18:28:20.345"></status>
</kw>
<msg timestamp="20201030 18:28:20.346" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:17.320" endtime="20201030 18:28:20.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.349" endtime="20201030 18:28:20.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.359" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:20.354" endtime="20201030 18:28:20.359"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:17.318" endtime="20201030 18:28:20.361"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:17.315" endtime="20201030 18:28:20.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.314" endtime="20201030 18:28:20.363"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:20.371" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:20.369" endtime="20201030 18:28:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.365" endtime="20201030 18:28:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.313" endtime="20201030 18:28:20.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.312" endtime="20201030 18:28:20.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.375" endtime="20201030 18:28:20.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.311" endtime="20201030 18:28:20.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.309" endtime="20201030 18:28:20.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:17.286" endtime="20201030 18:28:20.379"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.388" endtime="20201030 18:28:20.408"></status>
</kw>
<msg timestamp="20201030 18:28:20.409" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.386" endtime="20201030 18:28:20.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.411" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.410" endtime="20201030 18:28:20.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.413" endtime="20201030 18:28:20.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.384" endtime="20201030 18:28:20.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.381" endtime="20201030 18:28:20.415"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.417" endtime="20201030 18:28:20.419"></status>
</kw>
<msg timestamp="20201030 18:28:20.420" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:20.416" endtime="20201030 18:28:20.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.424" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:20.423" endtime="20201030 18:28:20.424"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.426" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:20.425" endtime="20201030 18:28:20.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.420" endtime="20201030 18:28:20.427"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.431" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:20.430" endtime="20201030 18:28:20.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.433" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:20.432" endtime="20201030 18:28:20.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.428" endtime="20201030 18:28:20.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.441" endtime="20201030 18:28:20.734"></status>
</kw>
<msg timestamp="20201030 18:28:20.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.089947778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.089949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.439" endtime="20201030 18:28:20.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.089947778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.089949042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:20.738" endtime="20201030 18:28:20.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.746" endtime="20201030 18:28:20.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.436" endtime="20201030 18:28:20.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.435" endtime="20201030 18:28:20.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:20.753" level="INFO">${RESULT} = [{'diff': 1.2640000002228646e-06}, {'diff': 1.277999999604873e-06}, {'diff': 1.292000000319149e-06}, {'diff': 1.2919999998750598e-06}, {'diff': 1.2780000000489622e-06}, {'diff': 1.2780000000489622e-06...</msg>
<status status="PASS" starttime="20201030 18:28:20.750" endtime="20201030 18:28:20.753"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:20.758" level="INFO">${OVERHEAD} = {'diff': [1.2640000002228646e-06, 1.277999999604873e-06, 1.292000000319149e-06, 1.2919999998750598e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2219999998563935e-06, 1.2909999997923194e-06, ...</msg>
<status status="PASS" starttime="20201030 18:28:20.754" endtime="20201030 18:28:20.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.762" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 18:28:20.761" endtime="20201030 18:28:20.762"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:20.765" level="INFO">VALUE: [1.2640000002228646e-06, 1.277999999604873e-06, 1.292000000319149e-06, 1.2919999998750598e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.2219999998563935e-06, 1.2909999997923194e-06, 1.2780000000489622e-06, 1.2640000002228646e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.3050000000625062e-06, 1.2910000002364086e-06, 1.2910000002364086e-06, 1.277000000410311e-06, 1.2360000001265803e-06, 1.3060000001452465e-06, 1.3050000000625062e-06, 1.2780000000489622e-06, 1.2769999999662218e-06, 1.2780000000489622e-06, 1.2640000002228646e-06, 1.2639999997787754e-06, 1.2909999997923194e-06, 1.2909999997923194e-06, 1.292000000319149e-06, 1.2769999999662218e-06, 1.2639999997787754e-06, 1.3189999998886037e-06, 1.292000000319149e-06, 1.2919999998750598e-06, 1.3059999997011573e-06, 1.3200000004154333e-06, 1.292000000319149e-06, 1.277999999604873e-06, 1.277000000410311e-06, 1.2919999998750598e-06, 1.3060000001452465e-06, 1.2909999997923194e-06, 1.3059999997011573e-06, 1.2219999998563935e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.2910000002364086e-06, 1.2780000000489622e-06, 1.2909999997923194e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.346999999984888e-06]</msg>
<status status="PASS" starttime="20201030 18:28:20.763" endtime="20201030 18:28:20.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.758" endtime="20201030 18:28:20.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.769" endtime="20201030 18:28:20.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.768" endtime="20201030 18:28:20.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.766" endtime="20201030 18:28:20.789"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.380" endtime="20201030 18:28:20.790"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:17.283" endtime="20201030 18:28:20.790" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:20.797" endtime="20201030 18:28:20.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.795" endtime="20201030 18:28:20.817"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:20.831" endtime="20201030 18:28:23.853"></status>
</kw>
<msg timestamp="20201030 18:28:23.854" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:20.829" endtime="20201030 18:28:23.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.859" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.856" endtime="20201030 18:28:23.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.865" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:23.861" endtime="20201030 18:28:23.866"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:20.827" endtime="20201030 18:28:23.867"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:20.824" endtime="20201030 18:28:23.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.823" endtime="20201030 18:28:23.869"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:23.877" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:23.875" endtime="20201030 18:28:23.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.871" endtime="20201030 18:28:23.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.822" endtime="20201030 18:28:23.878"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.822" endtime="20201030 18:28:23.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.881" endtime="20201030 18:28:23.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.819" endtime="20201030 18:28:23.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.818" endtime="20201030 18:28:23.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:20.794" endtime="20201030 18:28:23.887"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.912" endtime="20201030 18:28:23.981"></status>
</kw>
<msg timestamp="20201030 18:28:23.982" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.907" endtime="20201030 18:28:23.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:23.985" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:23.983" endtime="20201030 18:28:23.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.986" endtime="20201030 18:28:23.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.900" endtime="20201030 18:28:23.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.891" endtime="20201030 18:28:23.988"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:23.990" endtime="20201030 18:28:23.992"></status>
</kw>
<msg timestamp="20201030 18:28:23.992" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:23.989" endtime="20201030 18:28:23.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.000" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:23.995" endtime="20201030 18:28:24.001"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.002" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:24.002" endtime="20201030 18:28:24.003"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.993" endtime="20201030 18:28:24.003"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.007" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:24.006" endtime="20201030 18:28:24.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.009" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:24.008" endtime="20201030 18:28:24.010"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.004" endtime="20201030 18:28:24.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.016" endtime="20201030 18:28:24.317"></status>
</kw>
<msg timestamp="20201030 18:28:24.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109359458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.015" endtime="20201030 18:28:24.320"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109351153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109359458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:24.321" endtime="20201030 18:28:24.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.329" endtime="20201030 18:28:24.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.012" endtime="20201030 18:28:24.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.011" endtime="20201030 18:28:24.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:24.336" level="INFO">${RESULT} = [{'diff': 8.305000000152774e-06}, {'diff': 8.27800000013923e-06}, {'diff': 8.263999999869043e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.291999999965327e-06}, {'diff': 8.27800000013923e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:24.332" endtime="20201030 18:28:24.336"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:24.340" level="INFO">${OVERHEAD} = {'diff': [8.305000000152774e-06, 8.27800000013923e-06, 8.263999999869043e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.290999999882587e-06, 8.291999999965327e-06, 8.291999...</msg>
<status status="PASS" starttime="20201030 18:28:24.337" endtime="20201030 18:28:24.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.345" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 18:28:24.344" endtime="20201030 18:28:24.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:24.348" level="INFO">VALUE: [8.305000000152774e-06, 8.27800000013923e-06, 8.263999999869043e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.290999999882587e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.27799999969514e-06, 8.208000000120563e-06, 8.250000000042945e-06, 8.27800000013923e-06, 8.236000000216848e-06, 8.208000000120563e-06, 8.27800000013923e-06, 8.347999999713807e-06, 8.264000000313132e-06, 8.264000000313132e-06, 8.250000000042945e-06, 8.264000000313132e-06, 8.27800000013923e-06, 8.236000000216848e-06, 8.305999999791425e-06, 8.305999999791425e-06, 8.27800000013923e-06, 8.263999999869043e-06, 8.221999999946661e-06, 8.263999999869043e-06, 8.27799999969514e-06, 8.332999999804969e-06, 8.291999999965327e-06, 8.290999999882587e-06, 8.237000000299588e-06, 8.291999999965327e-06, 8.305999999791425e-06, 8.304999999708684e-06, 8.291999999965327e-06, 8.27799999969514e-06, 8.291999999965327e-06, 8.27700000005649e-06, 8.292000000409416e-06, 8.27799999969514e-06, 8.27799999969514e-06, 8.305999999791425e-06, 8.291999999965327e-06, 8.332999999804969e-06, 8.27800000013923e-06, 8.305999999791425e-06]</msg>
<status status="PASS" starttime="20201030 18:28:24.346" endtime="20201030 18:28:24.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.341" endtime="20201030 18:28:24.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.352" endtime="20201030 18:28:24.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.351" endtime="20201030 18:28:24.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.350" endtime="20201030 18:28:24.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:23.888" endtime="20201030 18:28:24.373"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:20.792" endtime="20201030 18:28:24.373" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:24.380" endtime="20201030 18:28:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.379" endtime="20201030 18:28:24.400"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:24.413" endtime="20201030 18:28:27.434"></status>
</kw>
<msg timestamp="20201030 18:28:27.435" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:24.411" endtime="20201030 18:28:27.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.440" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.437" endtime="20201030 18:28:27.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.447" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:27.443" endtime="20201030 18:28:27.448"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:24.409" endtime="20201030 18:28:27.451"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:24.407" endtime="20201030 18:28:27.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.405" endtime="20201030 18:28:27.455"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:27.467" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:27.464" endtime="20201030 18:28:27.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.458" endtime="20201030 18:28:27.469"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.404" endtime="20201030 18:28:27.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.404" endtime="20201030 18:28:27.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.473" endtime="20201030 18:28:27.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.403" endtime="20201030 18:28:27.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.401" endtime="20201030 18:28:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:24.378" endtime="20201030 18:28:27.481"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.506" endtime="20201030 18:28:27.705"></status>
</kw>
<msg timestamp="20201030 18:28:27.706" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.502" endtime="20201030 18:28:27.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.711" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:27.708" endtime="20201030 18:28:27.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.714" endtime="20201030 18:28:27.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.494" endtime="20201030 18:28:27.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.488" endtime="20201030 18:28:27.720"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.724" endtime="20201030 18:28:27.728"></status>
</kw>
<msg timestamp="20201030 18:28:27.729" level="INFO">${RESULT} = {'sample count': 50, 'timer count': 100}</msg>
<status status="PASS" starttime="20201030 18:28:27.721" endtime="20201030 18:28:27.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.737" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 18:28:27.735" endtime="20201030 18:28:27.738"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.742" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 18:28:27.740" endtime="20201030 18:28:27.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.730" endtime="20201030 18:28:27.744"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.752" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 18:28:27.750" endtime="20201030 18:28:27.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:27.757" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 18:28:27.755" endtime="20201030 18:28:27.758"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.745" endtime="20201030 18:28:27.759"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:27.773" endtime="20201030 18:28:28.080"></status>
</kw>
<msg timestamp="20201030 18:28:28.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.120887194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.120902611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:27.770" endtime="20201030 18:28:28.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.120887194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.120902611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:28.084" endtime="20201030 18:28:28.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.092" endtime="20201030 18:28:28.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.764" endtime="20201030 18:28:28.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.760" endtime="20201030 18:28:28.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:28.100" level="INFO">${RESULT} = [{'diff': 1.541700000018409e-05}, {'diff': 1.541600000010135e-05}, {'diff': 1.541699999974e-05}, {'diff': 1.5499999999946112e-05}, {'diff': 1.5374999999817618e-05}, {'diff': 1.5429999999927446e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:28.096" endtime="20201030 18:28:28.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 18:28:28.105" level="INFO">${OVERHEAD} = {'diff': [1.541700000018409e-05, 1.541600000010135e-05, 1.541699999974e-05, 1.5499999999946112e-05, 1.5374999999817618e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5431000000010187e-05, 1.54...</msg>
<status status="PASS" starttime="20201030 18:28:28.101" endtime="20201030 18:28:28.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.110" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 18:28:28.108" endtime="20201030 18:28:28.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:28.112" level="INFO">VALUE: [1.541700000018409e-05, 1.541600000010135e-05, 1.541699999974e-05, 1.5499999999946112e-05, 1.5374999999817618e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5429999999927446e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.536099999999152e-05, 1.5431000000010187e-05, 1.5443999999753544e-05, 1.545900000010647e-05, 1.545900000010647e-05, 1.5431000000010187e-05, 1.5458999999662382e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.541699999974e-05, 1.5444000000197633e-05, 1.541700000018409e-05, 1.5429999999927446e-05, 1.5487000000202755e-05, 1.5443999999753544e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5471999999849828e-05, 1.541599999965726e-05, 1.5429999999927446e-05, 1.5485999999675926e-05, 1.545900000010647e-05, 1.5429999999927446e-05, 1.5431000000010187e-05, 1.5444999999836284e-05, 1.5431000000010187e-05, 1.5444000000197633e-05, 1.5444999999836284e-05, 1.545800000002373e-05, 1.5431000000010187e-05, 1.5429999999927446e-05, 1.5430000000371535e-05, 1.5429999999927446e-05, 1.5444999999836284e-05, 1.545800000002373e-05]</msg>
<status status="PASS" starttime="20201030 18:28:28.111" endtime="20201030 18:28:28.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.106" endtime="20201030 18:28:28.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.117" endtime="20201030 18:28:28.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.115" endtime="20201030 18:28:28.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.114" endtime="20201030 18:28:28.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:27.483" endtime="20201030 18:28:28.138"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:24.375" endtime="20201030 18:28:28.138" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:28.145" endtime="20201030 18:28:28.165"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.144" endtime="20201030 18:28:28.165"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:28.179" endtime="20201030 18:28:31.203"></status>
</kw>
<msg timestamp="20201030 18:28:31.204" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:28.177" endtime="20201030 18:28:31.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.209" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:31.206" endtime="20201030 18:28:31.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.216" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:28:31.212" endtime="20201030 18:28:31.217"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:28.174" endtime="20201030 18:28:31.218"></status>
</kw>
<status status="FAIL" starttime="20201030 18:28:28.172" endtime="20201030 18:28:31.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.171" endtime="20201030 18:28:31.220"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:28:31.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:28:31.232" endtime="20201030 18:28:31.234"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.227" endtime="20201030 18:28:31.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.170" endtime="20201030 18:28:31.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.169" endtime="20201030 18:28:31.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:31.237" endtime="20201030 18:28:31.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.168" endtime="20201030 18:28:31.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.166" endtime="20201030 18:28:31.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:28.142" endtime="20201030 18:28:31.244"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:31.252" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:31.264" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:32.426" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:31.249" endtime="20201030 18:28:32.427"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.430" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:28:32.428" endtime="20201030 18:28:35.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:31.246" endtime="20201030 18:28:35.433"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.452" endtime="20201030 18:28:35.465"></status>
</kw>
<msg timestamp="20201030 18:28:35.466" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.449" endtime="20201030 18:28:35.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.471" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.468" endtime="20201030 18:28:35.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.473" endtime="20201030 18:28:35.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.443" endtime="20201030 18:28:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.439" endtime="20201030 18:28:35.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.492" endtime="20201030 18:28:35.788"></status>
</kw>
<msg timestamp="20201030 18:28:35.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.904421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.231637181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.489" endtime="20201030 18:28:35.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.904421764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.231637181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.792" endtime="20201030 18:28:35.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.800" endtime="20201030 18:28:35.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.483" endtime="20201030 18:28:35.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.480" endtime="20201030 18:28:35.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:35.807" level="INFO">${PHILIP_RES} = [{'diff': 0.3272154170000001}, {'diff': 5.014000000080898e-06}, {'diff': 4.875000000126306e-06}, {'diff': 4.973000000241257e-06}, {'diff': 4.930999999430696e-06}, {'diff': 4.887999999425574e-06}, {'di...</msg>
<status status="PASS" starttime="20201030 18:28:35.804" endtime="20201030 18:28:35.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:35.813" level="INFO">${RESULT} = {'diff': [0.3272154170000001, 5.014000000080898e-06, 4.875000000126306e-06, 4.973000000241257e-06, 4.930999999430696e-06, 4.887999999425574e-06, 4.917000000048688e-06, 4.916000000854126e-06, 4.9300000...</msg>
<status status="PASS" starttime="20201030 18:28:35.808" endtime="20201030 18:28:35.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.817" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:35.816" endtime="20201030 18:28:35.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.820" level="INFO">VALUE: [0.3272154170000001, 5.014000000080898e-06, 4.875000000126306e-06, 4.973000000241257e-06, 4.930999999430696e-06, 4.887999999425574e-06, 4.917000000048688e-06, 4.916000000854126e-06, 4.930000000236134e-06, 4.944000000506321e-06, 4.917000000048688e-06, 4.944999999700883e-06, 4.902999999778501e-06, 4.917000000048688e-06, 4.929999999347956e-06, 4.930000000236134e-06, 4.917000000048688e-06, 4.931000000318875e-06, 4.930999999430696e-06, 4.902999999778501e-06, 4.930000000236134e-06, 4.915999999965948e-06, 4.915999999965948e-06, 4.917000000048688e-06, 4.931000000318875e-06, 4.90300000066668e-06, 4.931000000318875e-06, 4.986000000428703e-06, 4.915999999965948e-06, 4.929999999347956e-06, 4.902999999778501e-06, 4.931000000318875e-06, 4.930999999430696e-06, 4.943999999618143e-06, 4.915999999965948e-06, 4.930000000236134e-06, 4.930000000236134e-06, 4.931000000318875e-06, 4.931000000318875e-06, 4.931000000318875e-06, 4.901999999695761e-06, 4.930000000236134e-06, 4.930000000236134e-06, 4.930999999430696e-06, 4.930999999430696e-06, 4.931000000318875e-06, 4.931000000318875e-06, 4.930000000236134e-06, 4.929999999347956e-06, 4.930000000236134e-06, 4.889000000396493e-06]</msg>
<status status="PASS" starttime="20201030 18:28:35.819" endtime="20201030 18:28:35.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.814" endtime="20201030 18:28:35.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:35.824" endtime="20201030 18:28:35.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.823" endtime="20201030 18:28:35.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.822" endtime="20201030 18:28:35.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.436" endtime="20201030 18:28:35.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.435" endtime="20201030 18:28:35.845"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.853" endtime="20201030 18:28:35.862"></status>
</kw>
<msg timestamp="20201030 18:28:35.863" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.852" endtime="20201030 18:28:35.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:35.865" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:35.864" endtime="20201030 18:28:35.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.866" endtime="20201030 18:28:35.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.849" endtime="20201030 18:28:35.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.848" endtime="20201030 18:28:35.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:35.876" endtime="20201030 18:28:36.164"></status>
</kw>
<msg timestamp="20201030 18:28:36.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017575556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:35.873" endtime="20201030 18:28:36.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017575556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.168" endtime="20201030 18:28:36.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.177" endtime="20201030 18:28:36.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.871" endtime="20201030 18:28:36.179"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.869" endtime="20201030 18:28:36.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:36.183" level="INFO">${PHILIP_RES} = [{'diff': 9.291999999997552e-06}, {'diff': 9.208000000000133e-06}, {'diff': 9.249999999998842e-06}, {'diff': 9.180000000000993e-06}, {'diff': 9.208000000000133e-06}, {'diff': 9.195000000000036e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:28:36.180" endtime="20201030 18:28:36.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.188" level="INFO">${RESULT} = {'diff': [9.291999999997552e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.194000000000563e-06, 9.195000000000036e-06, 9.2219...</msg>
<status status="PASS" starttime="20201030 18:28:36.184" endtime="20201030 18:28:36.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.192" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:36.191" endtime="20201030 18:28:36.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.194" level="INFO">VALUE: [9.291999999997552e-06, 9.208000000000133e-06, 9.249999999998842e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.194000000000563e-06, 9.195000000000036e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.181000000000467e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.221999999999703e-06, 9.249999999998842e-06, 9.208999999999606e-06, 9.180000000000993e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.208000000000133e-06, 9.181000000000467e-06, 9.208999999999606e-06, 9.194000000000563e-06, 9.222999999999176e-06, 9.208000000000133e-06, 9.208000000000133e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.194000000000563e-06, 9.208000000000133e-06, 9.208999999999606e-06, 9.166000000001423e-06, 9.195000000000036e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.222999999999176e-06, 9.263999999998412e-06, 9.208000000000133e-06, 9.194000000000563e-06, 9.139000000001757e-06, 9.181000000000467e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.221999999999703e-06, 9.194000000000563e-06, 9.208999999999606e-06, 9.208000000000133e-06]</msg>
<status status="PASS" starttime="20201030 18:28:36.193" endtime="20201030 18:28:36.195"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.189" endtime="20201030 18:28:36.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.199" endtime="20201030 18:28:36.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.197" endtime="20201030 18:28:36.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.196" endtime="20201030 18:28:36.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.846" endtime="20201030 18:28:36.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.845" endtime="20201030 18:28:36.220"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.229" endtime="20201030 18:28:36.238"></status>
</kw>
<msg timestamp="20201030 18:28:36.239" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.227" endtime="20201030 18:28:36.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.241" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.240" endtime="20201030 18:28:36.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.242" endtime="20201030 18:28:36.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.224" endtime="20201030 18:28:36.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.222" endtime="20201030 18:28:36.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.251" endtime="20201030 18:28:36.540"></status>
</kw>
<msg timestamp="20201030 18:28:36.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.250" endtime="20201030 18:28:36.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018490764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:36.544" endtime="20201030 18:28:36.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.553" endtime="20201030 18:28:36.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.247" endtime="20201030 18:28:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.245" endtime="20201030 18:28:36.555"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:36.570" level="INFO">${PHILIP_RES} = [{'diff': 1.4208000000001664e-05}, {'diff': 1.4084000000001012e-05}, {'diff': 1.40689999999985e-05}, {'diff': 1.4112000000000152e-05}, {'diff': 1.40689999999985e-05}, {'diff': 1.4069999999997973e-05},...</msg>
<status status="PASS" starttime="20201030 18:28:36.556" endtime="20201030 18:28:36.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.574" level="INFO">${RESULT} = {'diff': [1.4208000000001664e-05, 1.4084000000001012e-05, 1.40689999999985e-05, 1.4112000000000152e-05, 1.40689999999985e-05, 1.4069999999997973e-05, 1.4041000000002829e-05, 1.4084000000001012e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:28:36.571" endtime="20201030 18:28:36.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.580" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:36.579" endtime="20201030 18:28:36.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.582" level="INFO">VALUE: [1.4208000000001664e-05, 1.4084000000001012e-05, 1.40689999999985e-05, 1.4112000000000152e-05, 1.40689999999985e-05, 1.4069999999997973e-05, 1.4041000000002829e-05, 1.4084000000001012e-05, 1.40689999999985e-05, 1.4111000000000679e-05, 1.40689999999985e-05, 1.4097000000001109e-05, 1.4083000000001539e-05, 1.4069999999997973e-05, 1.4083000000001539e-05, 1.4138000000000345e-05, 1.40689999999985e-05, 1.4097000000001109e-05, 1.4083000000001539e-05, 1.4084000000001012e-05, 1.4083000000001539e-05, 1.4110999999997209e-05, 1.408299999999807e-05, 1.4125000000000248e-05, 1.4152999999999388e-05, 1.408299999999807e-05, 1.4083000000001539e-05, 1.40689999999985e-05, 1.4083000000001539e-05, 1.4097000000001109e-05, 1.409699999999764e-05, 1.4069000000001969e-05, 1.4097000000001109e-05, 1.4097000000001109e-05, 1.4084000000001012e-05, 1.40689999999985e-05, 1.404099999999936e-05, 1.4083000000001539e-05, 1.4069999999997973e-05, 1.408299999999807e-05, 1.4084000000001012e-05, 1.408299999999807e-05, 1.4069000000001969e-05, 1.4097000000001109e-05, 1.4083999999997543e-05, 1.4097000000001109e-05, 1.4084000000001012e-05, 1.4083000000001539e-05, 1.4084000000001012e-05, 1.40689999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.581" endtime="20201030 18:28:36.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.575" endtime="20201030 18:28:36.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.587" endtime="20201030 18:28:36.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.585" endtime="20201030 18:28:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.584" endtime="20201030 18:28:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.221" endtime="20201030 18:28:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.220" endtime="20201030 18:28:36.607"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.616" endtime="20201030 18:28:36.624"></status>
</kw>
<msg timestamp="20201030 18:28:36.625" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.614" endtime="20201030 18:28:36.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.627" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.626" endtime="20201030 18:28:36.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.628" endtime="20201030 18:28:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.611" endtime="20201030 18:28:36.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.610" endtime="20201030 18:28:36.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.637" endtime="20201030 18:28:36.923"></status>
</kw>
<msg timestamp="20201030 18:28:36.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017620931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.636" endtime="20201030 18:28:36.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01760125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017620931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:36.927" endtime="20201030 18:28:36.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.935" endtime="20201030 18:28:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.633" endtime="20201030 18:28:36.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.631" endtime="20201030 18:28:36.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:36.942" level="INFO">${PHILIP_RES} = [{'diff': 1.968100000000056e-05}, {'diff': 1.956899999999706e-05}, {'diff': 1.962499999999881e-05}, {'diff': 1.95830000000001e-05}, {'diff': 1.9570000000000004e-05}, {'diff': 1.95830000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:36.939" endtime="20201030 18:28:36.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:36.948" level="INFO">${RESULT} = {'diff': [1.968100000000056e-05, 1.956899999999706e-05, 1.962499999999881e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.96110...</msg>
<status status="PASS" starttime="20201030 18:28:36.943" endtime="20201030 18:28:36.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.952" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:36.951" endtime="20201030 18:28:36.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:36.954" level="INFO">VALUE: [1.968100000000056e-05, 1.956899999999706e-05, 1.962499999999881e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.961100000000271e-05, 1.9570000000000004e-05, 1.956900000000053e-05, 1.9583999999999574e-05, 1.961099999999924e-05, 1.9570000000000004e-05, 1.955500000000096e-05, 1.9583999999999574e-05, 1.961099999999924e-05, 1.959699999999967e-05, 1.95830000000001e-05, 1.95830000000001e-05, 1.9570000000000004e-05, 1.956900000000053e-05, 1.9556000000000434e-05, 1.956900000000053e-05, 1.9597999999999144e-05, 1.955500000000096e-05, 1.9597999999999144e-05, 1.956900000000053e-05, 1.95830000000001e-05, 1.9556000000000434e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.959699999999967e-05, 1.9583999999999574e-05, 1.956900000000053e-05, 1.9570000000000004e-05, 1.95830000000001e-05, 1.959699999999967e-05, 1.954100000000139e-05, 1.9542000000000864e-05, 1.9541999999997395e-05, 1.956900000000053e-05, 1.9583999999999574e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.956899999999706e-05, 1.9570000000000004e-05, 1.954099999999792e-05, 1.9542000000000864e-05, 1.9570000000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:28:36.953" endtime="20201030 18:28:36.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.948" endtime="20201030 18:28:36.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:36.961" endtime="20201030 18:28:36.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.959" endtime="20201030 18:28:36.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.957" endtime="20201030 18:28:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.608" endtime="20201030 18:28:36.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.608" endtime="20201030 18:28:36.982"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:36.991" endtime="20201030 18:28:37.001"></status>
</kw>
<msg timestamp="20201030 18:28:37.001" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:36.989" endtime="20201030 18:28:37.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.004" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.002" endtime="20201030 18:28:37.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.005" endtime="20201030 18:28:37.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.986" endtime="20201030 18:28:37.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.984" endtime="20201030 18:28:37.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.014" endtime="20201030 18:28:37.300"></status>
</kw>
<msg timestamp="20201030 18:28:37.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017757681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.012" endtime="20201030 18:28:37.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017731889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017757681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.304" endtime="20201030 18:28:37.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.313" endtime="20201030 18:28:37.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.010" endtime="20201030 18:28:37.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.008" endtime="20201030 18:28:37.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:37.319" level="INFO">${PHILIP_RES} = [{'diff': 2.5792000000000176e-05}, {'diff': 2.5666000000000577e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.5707999999999287e-05}, {'diff': 2.565300000000048e-05}, {'diff': 2.5665999999997108e-05...</msg>
<status status="PASS" starttime="20201030 18:28:37.316" endtime="20201030 18:28:37.320"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.324" level="INFO">${RESULT} = {'diff': [2.5792000000000176e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.565300000000048e-05, 2.5665999999997108e-05, 2.565299999999701e-05, 2.568099999999962e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:28:37.320" endtime="20201030 18:28:37.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.328" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:37.327" endtime="20201030 18:28:37.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.330" level="INFO">VALUE: [2.5792000000000176e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.5707999999999287e-05, 2.565300000000048e-05, 2.5665999999997108e-05, 2.565299999999701e-05, 2.568099999999962e-05, 2.5680000000000147e-05, 2.5666000000000577e-05, 2.566700000000005e-05, 2.566700000000005e-05, 2.5749999999997997e-05, 2.57230000000018e-05, 2.566700000000005e-05, 2.5680000000000147e-05, 2.5666000000000577e-05, 2.5736000000001896e-05, 2.566700000000005e-05, 2.5624999999997872e-05, 2.570899999999876e-05, 2.569499999999919e-05, 2.566700000000005e-05, 2.5666000000000577e-05, 2.5680000000000147e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.5665999999997108e-05, 2.5749999999997997e-05, 2.5721999999998857e-05, 2.566700000000005e-05, 2.5652000000001007e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.5637999999997968e-05, 2.5707999999999287e-05, 2.568099999999962e-05, 2.569499999999919e-05, 2.5666000000000577e-05, 2.5680000000000147e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.5666000000000577e-05, 2.565300000000048e-05, 2.568099999999962e-05, 2.566700000000005e-05, 2.5666000000000577e-05, 2.5582999999999162e-05, 2.568100000000309e-05, 2.5680000000000147e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.329" endtime="20201030 18:28:37.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.324" endtime="20201030 18:28:37.331"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.335" endtime="20201030 18:28:37.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.333" endtime="20201030 18:28:37.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.332" endtime="20201030 18:28:37.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.983" endtime="20201030 18:28:37.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:36.982" endtime="20201030 18:28:37.356"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.364" endtime="20201030 18:28:37.374"></status>
</kw>
<msg timestamp="20201030 18:28:37.375" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.363" endtime="20201030 18:28:37.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.377" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.376" endtime="20201030 18:28:37.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.378" endtime="20201030 18:28:37.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.360" endtime="20201030 18:28:37.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.358" endtime="20201030 18:28:37.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.387" endtime="20201030 18:28:37.673"></status>
</kw>
<msg timestamp="20201030 18:28:37.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018751083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.385" endtime="20201030 18:28:37.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018751083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018783569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.678" endtime="20201030 18:28:37.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.686" endtime="20201030 18:28:37.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.383" endtime="20201030 18:28:37.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.381" endtime="20201030 18:28:37.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:37.693" level="INFO">${PHILIP_RES} = [{'diff': 3.248599999999824e-05}, {'diff': 3.237500000000115e-05}, {'diff': 3.236199999999759e-05}, {'diff': 3.233400000000192e-05}, {'diff': 3.2374999999997683e-05}, {'diff': 3.238900000000072e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:28:37.690" endtime="20201030 18:28:37.693"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:37.697" level="INFO">${RESULT} = {'diff': [3.248599999999824e-05, 3.237500000000115e-05, 3.236199999999759e-05, 3.233400000000192e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.236...</msg>
<status status="PASS" starttime="20201030 18:28:37.694" endtime="20201030 18:28:37.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.701" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:37.700" endtime="20201030 18:28:37.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.704" level="INFO">VALUE: [3.248599999999824e-05, 3.237500000000115e-05, 3.236199999999759e-05, 3.233400000000192e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.240300000000029e-05, 3.237500000000115e-05, 3.236100000000158e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.2346999999998544e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.2304999999999834e-05, 3.2362000000001057e-05, 3.236199999999759e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.238900000000072e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.229199999999974e-05, 3.2360999999998113e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.236100000000158e-05, 3.238900000000072e-05, 3.237500000000115e-05, 3.237500000000115e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.238899999999725e-05, 3.230599999999931e-05, 3.2374999999997683e-05, 3.236100000000158e-05, 3.237500000000115e-05, 3.2332999999998974e-05, 3.234700000000201e-05, 3.2374999999997683e-05, 3.237500000000115e-05, 3.2360999999998113e-05, 3.238900000000072e-05, 3.2360999999998113e-05]</msg>
<status status="PASS" starttime="20201030 18:28:37.702" endtime="20201030 18:28:37.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.698" endtime="20201030 18:28:37.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:37.711" endtime="20201030 18:28:37.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.710" endtime="20201030 18:28:37.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.709" endtime="20201030 18:28:37.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.357" endtime="20201030 18:28:37.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.356" endtime="20201030 18:28:37.732"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.740" endtime="20201030 18:28:37.751"></status>
</kw>
<msg timestamp="20201030 18:28:37.751" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.739" endtime="20201030 18:28:37.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:37.754" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:37.752" endtime="20201030 18:28:37.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.755" endtime="20201030 18:28:37.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.736" endtime="20201030 18:28:37.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.734" endtime="20201030 18:28:37.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:37.764" endtime="20201030 18:28:38.050"></status>
</kw>
<msg timestamp="20201030 18:28:38.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017628569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:37.763" endtime="20201030 18:28:38.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017588764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017628569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.054" endtime="20201030 18:28:38.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.063" endtime="20201030 18:28:38.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.760" endtime="20201030 18:28:38.065"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.758" endtime="20201030 18:28:38.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:38.069" level="INFO">${PHILIP_RES} = [{'diff': 3.9805000000000396e-05}, {'diff': 3.9694999999999314e-05}, {'diff': 3.9680999999999744e-05}, {'diff': 3.969399999999984e-05}, {'diff': 3.9639000000001035e-05}, {'diff': 3.969399999999984e-05...</msg>
<status status="PASS" starttime="20201030 18:28:38.066" endtime="20201030 18:28:38.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.074" level="INFO">${RESULT} = {'diff': [3.9805000000000396e-05, 3.9694999999999314e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9639000000001035e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, ...</msg>
<status status="PASS" starttime="20201030 18:28:38.070" endtime="20201030 18:28:38.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.078" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:38.077" endtime="20201030 18:28:38.079"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.081" level="INFO">VALUE: [3.9805000000000396e-05, 3.9694999999999314e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9639000000001035e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.9694999999999314e-05, 3.968000000000027e-05, 3.9681000000003214e-05, 3.968000000000027e-05, 3.9694999999999314e-05, 3.96660000000007e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9695000000002784e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.969399999999984e-05, 3.969399999999984e-05, 3.9638999999997565e-05, 3.9694999999999314e-05, 3.96660000000007e-05, 3.9610999999998425e-05, 3.96660000000007e-05, 3.9694999999999314e-05, 3.96660000000007e-05, 3.9694999999999314e-05, 3.96660000000007e-05, 3.975000000000159e-05, 3.970799999999941e-05, 3.9680999999999744e-05, 3.968000000000027e-05, 3.9680999999999744e-05, 3.969400000000331e-05, 3.9694999999999314e-05, 3.9680999999999744e-05, 3.96799999999968e-05, 3.970799999999941e-05, 3.9667000000000174e-05, 3.9653000000000604e-05, 3.969399999999984e-05, 3.9694999999999314e-05, 3.96799999999968e-05, 3.9680999999999744e-05, 3.969399999999984e-05, 3.9680999999999744e-05, 3.96660000000007e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.079" endtime="20201030 18:28:38.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.075" endtime="20201030 18:28:38.082"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.085" endtime="20201030 18:28:38.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.084" endtime="20201030 18:28:38.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.083" endtime="20201030 18:28:38.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.733" endtime="20201030 18:28:38.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:37.732" endtime="20201030 18:28:38.106"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.114" endtime="20201030 18:28:38.124"></status>
</kw>
<msg timestamp="20201030 18:28:38.124" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.113" endtime="20201030 18:28:38.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.127" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.125" endtime="20201030 18:28:38.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.128" endtime="20201030 18:28:38.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.110" endtime="20201030 18:28:38.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.108" endtime="20201030 18:28:38.131"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.137" endtime="20201030 18:28:38.423"></status>
</kw>
<msg timestamp="20201030 18:28:38.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017556694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017604347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.136" endtime="20201030 18:28:38.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017556694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017604347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.427" endtime="20201030 18:28:38.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.435" endtime="20201030 18:28:38.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.133" endtime="20201030 18:28:38.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.132" endtime="20201030 18:28:38.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:38.443" level="INFO">${PHILIP_RES} = [{'diff': 4.76529999999982e-05}, {'diff': 4.7597000000003387e-05}, {'diff': 4.758399999999982e-05}, {'diff': 4.761200000000243e-05}, {'diff': 4.765199999999872e-05}, {'diff': 4.761099999999949e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.440" endtime="20201030 18:28:38.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.447" level="INFO">${RESULT} = {'diff': [4.76529999999982e-05, 4.7597000000003387e-05, 4.758399999999982e-05, 4.761200000000243e-05, 4.765199999999872e-05, 4.761099999999949e-05, 4.758300000000035e-05, 4.759699999999992e-05, 4.7610...</msg>
<status status="PASS" starttime="20201030 18:28:38.444" endtime="20201030 18:28:38.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.451" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:38.450" endtime="20201030 18:28:38.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.454" level="INFO">VALUE: [4.76529999999982e-05, 4.7597000000003387e-05, 4.758399999999982e-05, 4.761200000000243e-05, 4.765199999999872e-05, 4.761099999999949e-05, 4.758300000000035e-05, 4.759699999999992e-05, 4.761099999999949e-05, 4.755600000000068e-05, 4.7639000000002096e-05, 4.759699999999992e-05, 4.766600000000176e-05, 4.758300000000035e-05, 4.761099999999949e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.759800000000286e-05, 4.759699999999992e-05, 4.763899999999863e-05, 4.759699999999992e-05, 4.761099999999949e-05, 4.758300000000035e-05, 4.751299999999903e-05, 4.761200000000243e-05, 4.761099999999949e-05, 4.7597000000003387e-05, 4.757000000000025e-05, 4.761099999999949e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.758399999999982e-05, 4.762499999999906e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.763899999999863e-05, 4.758300000000035e-05, 4.761099999999949e-05, 4.759799999999939e-05, 4.758399999999982e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.759699999999992e-05, 4.759799999999939e-05, 4.759799999999939e-05, 4.758399999999982e-05, 4.761099999999949e-05, 4.759699999999992e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.452" endtime="20201030 18:28:38.454"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.448" endtime="20201030 18:28:38.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.458" endtime="20201030 18:28:38.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.457" endtime="20201030 18:28:38.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.456" endtime="20201030 18:28:38.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.107" endtime="20201030 18:28:38.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.106" endtime="20201030 18:28:38.479"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.487" endtime="20201030 18:28:38.501"></status>
</kw>
<msg timestamp="20201030 18:28:38.501" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.486" endtime="20201030 18:28:38.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.503" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.502" endtime="20201030 18:28:38.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.505" endtime="20201030 18:28:38.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.483" endtime="20201030 18:28:38.507"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.481" endtime="20201030 18:28:38.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.514" endtime="20201030 18:28:38.800"></status>
</kw>
<msg timestamp="20201030 18:28:38.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.512" endtime="20201030 18:28:38.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018389583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018445819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.804" endtime="20201030 18:28:38.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.813" endtime="20201030 18:28:38.814"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.510" endtime="20201030 18:28:38.815"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.508" endtime="20201030 18:28:38.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:38.819" level="INFO">${PHILIP_RES} = [{'diff': 5.6235999999997704e-05}, {'diff': 5.613900000000019e-05}, {'diff': 5.61670000000028e-05}, {'diff': 5.615299999999976e-05}, {'diff': 5.615299999999976e-05}, {'diff': 5.615299999999976e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:38.816" endtime="20201030 18:28:38.819"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:38.823" level="INFO">${RESULT} = {'diff': [5.6235999999997704e-05, 5.613900000000019e-05, 5.61670000000028e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.6125...</msg>
<status status="PASS" starttime="20201030 18:28:38.820" endtime="20201030 18:28:38.824"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.828" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:38.827" endtime="20201030 18:28:38.828"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.830" level="INFO">VALUE: [5.6235999999997704e-05, 5.613900000000019e-05, 5.61670000000028e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.612499999999715e-05, 5.612499999999715e-05, 5.615299999999976e-05, 5.613899999999672e-05, 5.611100000000105e-05, 5.6194000000002464e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.611200000000052e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.612499999999715e-05, 5.612499999999715e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.6179999999999425e-05, 5.609800000000095e-05, 5.612500000000062e-05, 5.609700000000148e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.612499999999715e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.613900000000019e-05, 5.615299999999976e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.611099999999758e-05, 5.613900000000019e-05, 5.612500000000062e-05, 5.613900000000019e-05, 5.613900000000019e-05, 5.613900000000019e-05, 5.6138000000000715e-05, 5.612500000000062e-05, 5.612500000000062e-05, 5.611100000000105e-05, 5.608300000000191e-05]</msg>
<status status="PASS" starttime="20201030 18:28:38.829" endtime="20201030 18:28:38.831"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.824" endtime="20201030 18:28:38.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:38.835" endtime="20201030 18:28:38.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.834" endtime="20201030 18:28:38.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.833" endtime="20201030 18:28:38.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.480" endtime="20201030 18:28:38.856"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.479" endtime="20201030 18:28:38.856"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.864" endtime="20201030 18:28:38.878"></status>
</kw>
<msg timestamp="20201030 18:28:38.878" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.863" endtime="20201030 18:28:38.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:38.881" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:38.879" endtime="20201030 18:28:38.881"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.882" endtime="20201030 18:28:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.860" endtime="20201030 18:28:38.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.859" endtime="20201030 18:28:38.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:38.891" endtime="20201030 18:28:39.176"></status>
</kw>
<msg timestamp="20201030 18:28:39.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017628681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:38.889" endtime="20201030 18:28:39.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.188" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017628681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017694056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.181" endtime="20201030 18:28:39.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.189" endtime="20201030 18:28:39.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.887" endtime="20201030 18:28:39.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.885" endtime="20201030 18:28:39.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:39.195" level="INFO">${PHILIP_RES} = [{'diff': 6.537499999999946e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.523599999999977e-05}, {'diff': 6.524999999999934e-05}, {'diff': 6.52090000000001e-05}, {'diff': 6.524999999999934e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:39.192" endtime="20201030 18:28:39.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.200" level="INFO">${RESULT} = {'diff': [6.537499999999946e-05, 6.52639999999989e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.52090000000001e-05, 6.524999999999934e-05, 6.520800000000063e-05, 6.52639999999989e-05, 6.5249999...</msg>
<status status="PASS" starttime="20201030 18:28:39.196" endtime="20201030 18:28:39.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.205" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:39.204" endtime="20201030 18:28:39.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.207" level="INFO">VALUE: [6.537499999999946e-05, 6.52639999999989e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.52090000000001e-05, 6.524999999999934e-05, 6.520800000000063e-05, 6.52639999999989e-05, 6.524999999999934e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.527800000000195e-05, 6.526400000000238e-05, 6.527800000000195e-05, 6.524999999999934e-05, 6.526400000000238e-05, 6.526400000000238e-05, 6.523599999999977e-05, 6.524999999999934e-05, 6.523699999999924e-05, 6.52639999999989e-05, 6.52220000000002e-05, 6.52639999999989e-05, 6.52090000000001e-05, 6.5276999999999e-05, 6.519400000000106e-05, 6.52639999999989e-05, 6.527799999999848e-05, 6.523599999999977e-05, 6.523599999999977e-05, 6.523599999999977e-05, 6.523599999999977e-05, 6.523599999999977e-05, 6.523700000000271e-05, 6.526400000000238e-05, 6.526400000000238e-05, 6.52500000000028e-05, 6.526400000000238e-05, 6.524999999999934e-05, 6.526400000000238e-05, 6.531999999999719e-05, 6.524999999999934e-05, 6.524999999999934e-05, 6.524999999999934e-05, 6.524999999999934e-05, 6.524999999999934e-05, 6.52639999999989e-05, 6.52639999999989e-05, 6.52639999999989e-05, 6.527799999999848e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.206" endtime="20201030 18:28:39.208"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.201" endtime="20201030 18:28:39.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.212" endtime="20201030 18:28:39.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.210" endtime="20201030 18:28:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.209" endtime="20201030 18:28:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.857" endtime="20201030 18:28:39.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:38.857" endtime="20201030 18:28:39.232"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.241" endtime="20201030 18:28:39.255"></status>
</kw>
<msg timestamp="20201030 18:28:39.255" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.239" endtime="20201030 18:28:39.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.258" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.256" endtime="20201030 18:28:39.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.259" endtime="20201030 18:28:39.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.237" endtime="20201030 18:28:39.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.235" endtime="20201030 18:28:39.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.268" endtime="20201030 18:28:39.553"></status>
</kw>
<msg timestamp="20201030 18:28:39.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018303083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.266" endtime="20201030 18:28:39.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018227944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018303083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.557" endtime="20201030 18:28:39.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.566" endtime="20201030 18:28:39.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.263" endtime="20201030 18:28:39.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.262" endtime="20201030 18:28:39.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:39.573" level="INFO">${PHILIP_RES} = [{'diff': 7.513900000000184e-05}, {'diff': 7.501399999999825e-05}, {'diff': 7.499999999999868e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.498599999999911e-05}, {'diff': 7.498599999999911e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:28:39.570" endtime="20201030 18:28:39.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.577" level="INFO">${RESULT} = {'diff': [7.513900000000184e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.49440000000004e-05, 7.49999...</msg>
<status status="PASS" starttime="20201030 18:28:39.574" endtime="20201030 18:28:39.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.582" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:39.581" endtime="20201030 18:28:39.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.584" level="INFO">VALUE: [7.513900000000184e-05, 7.501399999999825e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.49440000000004e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.501299999999878e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.500000000000215e-05, 7.498600000000258e-05, 7.501400000000172e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.501400000000172e-05, 7.498599999999911e-05, 7.504200000000086e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.502799999999782e-05, 7.502799999999782e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.49440000000004e-05, 7.498600000000258e-05, 7.498600000000258e-05, 7.499999999999868e-05, 7.499999999999868e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.501399999999825e-05, 7.500000000000215e-05, 7.497300000000248e-05, 7.497300000000248e-05, 7.501399999999825e-05, 7.498599999999911e-05, 7.497199999999954e-05, 7.498599999999911e-05, 7.499999999999868e-05, 7.500000000000215e-05, 7.500000000000215e-05, 7.499999999999868e-05, 7.502800000000129e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.583" endtime="20201030 18:28:39.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.578" endtime="20201030 18:28:39.585"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.589" endtime="20201030 18:28:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.587" endtime="20201030 18:28:39.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.586" endtime="20201030 18:28:39.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.233" endtime="20201030 18:28:39.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.233" endtime="20201030 18:28:39.609"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.618" endtime="20201030 18:28:39.632"></status>
</kw>
<msg timestamp="20201030 18:28:39.632" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.617" endtime="20201030 18:28:39.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.634" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.633" endtime="20201030 18:28:39.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.635" endtime="20201030 18:28:39.637"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.614" endtime="20201030 18:28:39.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.612" endtime="20201030 18:28:39.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.645" endtime="20201030 18:28:39.930"></status>
</kw>
<msg timestamp="20201030 18:28:39.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019184181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.643" endtime="20201030 18:28:39.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019098694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019184181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:39.934" endtime="20201030 18:28:39.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.942" endtime="20201030 18:28:39.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.640" endtime="20201030 18:28:39.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.639" endtime="20201030 18:28:39.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:39.949" level="INFO">${PHILIP_RES} = [{'diff': 8.548700000000214e-05}, {'diff': 8.534799999999898e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.534800000000245e-05}, {'diff': 8.53469999999995e-05}, {'diff': 8.536099999999908e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:39.945" endtime="20201030 18:28:39.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:39.953" level="INFO">${RESULT} = {'diff': [8.548700000000214e-05, 8.534799999999898e-05, 8.53469999999995e-05, 8.534800000000245e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.53469999999995e-05, 8.5361000...</msg>
<status status="PASS" starttime="20201030 18:28:39.950" endtime="20201030 18:28:39.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.957" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:39.956" endtime="20201030 18:28:39.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:39.960" level="INFO">VALUE: [8.548700000000214e-05, 8.534799999999898e-05, 8.53469999999995e-05, 8.534800000000245e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.53469999999995e-05, 8.536100000000255e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.533299999999994e-05, 8.533299999999994e-05, 8.533399999999941e-05, 8.536099999999908e-05, 8.533399999999941e-05, 8.533299999999994e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.534700000000298e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.533299999999994e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.53469999999995e-05, 8.537499999999865e-05, 8.534700000000298e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.533299999999994e-05, 8.53469999999995e-05, 8.537499999999865e-05, 8.52920000000007e-05, 8.531900000000037e-05, 8.533299999999994e-05, 8.533299999999994e-05, 8.536099999999908e-05, 8.536099999999908e-05, 8.537499999999865e-05, 8.53469999999995e-05, 8.536099999999908e-05, 8.533299999999994e-05, 8.531900000000037e-05, 8.536100000000255e-05, 8.533299999999994e-05, 8.53469999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:28:39.958" endtime="20201030 18:28:39.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.954" endtime="20201030 18:28:39.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:39.966" endtime="20201030 18:28:39.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.964" endtime="20201030 18:28:39.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.962" endtime="20201030 18:28:39.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.610" endtime="20201030 18:28:39.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.610" endtime="20201030 18:28:39.988"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:39.996" endtime="20201030 18:28:40.012"></status>
</kw>
<msg timestamp="20201030 18:28:40.012" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:39.995" endtime="20201030 18:28:40.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.015" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.013" endtime="20201030 18:28:40.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.016" endtime="20201030 18:28:40.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.992" endtime="20201030 18:28:40.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.990" endtime="20201030 18:28:40.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.025" endtime="20201030 18:28:40.310"></status>
</kw>
<msg timestamp="20201030 18:28:40.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018321764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.023" endtime="20201030 18:28:40.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018225347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018321764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.314" endtime="20201030 18:28:40.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.322" endtime="20201030 18:28:40.323"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.021" endtime="20201030 18:28:40.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.019" endtime="20201030 18:28:40.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:40.328" level="INFO">${PHILIP_RES} = [{'diff': 9.641700000000142e-05}, {'diff': 9.629099999999835e-05}, {'diff': 9.627800000000172e-05}, {'diff': 9.63059999999974e-05}, {'diff': 9.627699999999878e-05}, {'diff': 9.630600000000086e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:40.325" endtime="20201030 18:28:40.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.333" level="INFO">${RESULT} = {'diff': [9.641700000000142e-05, 9.629099999999835e-05, 9.627800000000172e-05, 9.63059999999974e-05, 9.627699999999878e-05, 9.630600000000086e-05, 9.629199999999782e-05, 9.627700000000225e-05, 9.63059...</msg>
<status status="PASS" starttime="20201030 18:28:40.329" endtime="20201030 18:28:40.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.338" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:40.337" endtime="20201030 18:28:40.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.340" level="INFO">VALUE: [9.641700000000142e-05, 9.629099999999835e-05, 9.627800000000172e-05, 9.63059999999974e-05, 9.627699999999878e-05, 9.630600000000086e-05, 9.629199999999782e-05, 9.627700000000225e-05, 9.63059999999974e-05, 9.627800000000172e-05, 9.629099999999835e-05, 9.62920000000013e-05, 9.62920000000013e-05, 9.624999999999911e-05, 9.630600000000086e-05, 9.629199999999782e-05, 9.627799999999825e-05, 9.626400000000215e-05, 9.624999999999911e-05, 9.629100000000182e-05, 9.630499999999792e-05, 9.62920000000013e-05, 9.629099999999835e-05, 9.62920000000013e-05, 9.62920000000013e-05, 9.6334e-05, 9.623700000000249e-05, 9.63059999999974e-05, 9.62920000000013e-05, 9.629199999999782e-05, 9.630600000000086e-05, 9.630600000000086e-05, 9.631899999999749e-05, 9.62920000000013e-05, 9.63470000000001e-05, 9.631900000000096e-05, 9.627800000000172e-05, 9.631900000000096e-05, 9.63470000000001e-05, 9.63059999999974e-05, 9.626400000000215e-05, 9.629099999999835e-05, 9.627799999999825e-05, 9.630600000000086e-05, 9.629099999999835e-05, 9.63470000000001e-05, 9.622199999999997e-05, 9.629100000000182e-05, 9.632000000000043e-05, 9.632000000000043e-05]</msg>
<status status="PASS" starttime="20201030 18:28:40.339" endtime="20201030 18:28:40.340"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.334" endtime="20201030 18:28:40.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.345" endtime="20201030 18:28:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.344" endtime="20201030 18:28:40.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.342" endtime="20201030 18:28:40.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.989" endtime="20201030 18:28:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:39.988" endtime="20201030 18:28:40.366"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.374" endtime="20201030 18:28:40.389"></status>
</kw>
<msg timestamp="20201030 18:28:40.390" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.373" endtime="20201030 18:28:40.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.392" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.391" endtime="20201030 18:28:40.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.393" endtime="20201030 18:28:40.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.370" endtime="20201030 18:28:40.395"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.368" endtime="20201030 18:28:40.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.402" endtime="20201030 18:28:40.687"></status>
</kw>
<msg timestamp="20201030 18:28:40.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017733361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.400" endtime="20201030 18:28:40.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017733361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017841333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.691" endtime="20201030 18:28:40.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.699" endtime="20201030 18:28:40.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.398" endtime="20201030 18:28:40.702"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.396" endtime="20201030 18:28:40.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:40.707" level="INFO">${PHILIP_RES} = [{'diff': 0.00010797200000000132}, {'diff': 0.00010783299999999815}, {'diff': 0.00010786100000000076}, {'diff': 0.00010784800000000067}, {'diff': 0.00010786100000000076}, {'diff': 0.000107875000000000...</msg>
<status status="PASS" starttime="20201030 18:28:40.704" endtime="20201030 18:28:40.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:40.711" level="INFO">${RESULT} = {'diff': [0.00010797200000000132, 0.00010783299999999815, 0.00010786100000000076, 0.00010784800000000067, 0.00010786100000000076, 0.00010787500000000033, 0.0001078889999999999, 0.0001078340000000011, ...</msg>
<status status="PASS" starttime="20201030 18:28:40.708" endtime="20201030 18:28:40.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.715" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:40.714" endtime="20201030 18:28:40.715"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.717" level="INFO">VALUE: [0.00010797200000000132, 0.00010783299999999815, 0.00010786100000000076, 0.00010784800000000067, 0.00010786100000000076, 0.00010787500000000033, 0.0001078889999999999, 0.0001078340000000011, 0.00010786200000000024, 0.00010784700000000119, 0.00010784699999999772, 0.00010787500000000033, 0.00010787499999999686, 0.00010791699999999904, 0.00010786100000000076, 0.00010786100000000076, 0.00010783299999999815, 0.00010784700000000119, 0.00010787500000000033, 0.00010786099999999729, 0.00010786100000000076, 0.00010787500000000033, 0.00010780599999999849, 0.00010784699999999772, 0.00010784700000000119, 0.00010783299999999815, 0.00010792999999999914, 0.00010784800000000067, 0.00010786100000000076, 0.00010780499999999901, 0.00010787500000000033, 0.00010780599999999849, 0.00010787500000000033, 0.00010784700000000119, 0.00010781899999999858, 0.00010787500000000033, 0.0001078479999999972, 0.00010786200000000024, 0.00010786100000000076, 0.00010787500000000033, 0.00010779199999999892, 0.000107902, 0.00010786100000000076, 0.00010784699999999772, 0.00010786100000000076, 0.00010784699999999772, 0.00010786100000000076, 0.00010779099999999944, 0.00010783300000000162, 0.00010784699999999772]</msg>
<status status="PASS" starttime="20201030 18:28:40.716" endtime="20201030 18:28:40.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.712" endtime="20201030 18:28:40.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:40.722" endtime="20201030 18:28:40.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.721" endtime="20201030 18:28:40.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.720" endtime="20201030 18:28:40.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.367" endtime="20201030 18:28:40.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.366" endtime="20201030 18:28:40.743"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.751" endtime="20201030 18:28:40.766"></status>
</kw>
<msg timestamp="20201030 18:28:40.766" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.750" endtime="20201030 18:28:40.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:40.769" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:40.767" endtime="20201030 18:28:40.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.770" endtime="20201030 18:28:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.747" endtime="20201030 18:28:40.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.745" endtime="20201030 18:28:40.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:40.779" endtime="20201030 18:28:41.065"></status>
</kw>
<msg timestamp="20201030 18:28:41.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:40.777" endtime="20201030 18:28:41.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018550264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018670417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.069" endtime="20201030 18:28:41.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.077" endtime="20201030 18:28:41.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.775" endtime="20201030 18:28:41.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.773" endtime="20201030 18:28:41.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:41.084" level="INFO">${PHILIP_RES} = [{'diff': 0.00012015300000000131}, {'diff': 0.00012002799999999772}, {'diff': 0.00011997299999999891}, {'diff': 0.00012002800000000119}, {'diff': 0.00012001399999999815}, {'diff': 0.000120000000000002...</msg>
<status status="PASS" starttime="20201030 18:28:41.081" endtime="20201030 18:28:41.084"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.088" level="INFO">${RESULT} = {'diff': [0.00012015300000000131, 0.00012002799999999772, 0.00011997299999999891, 0.00012002800000000119, 0.00012001399999999815, 0.00012000000000000205, 0.00012008399999999947, 0.00012004100000000129...</msg>
<status status="PASS" starttime="20201030 18:28:41.085" endtime="20201030 18:28:41.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.092" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:41.091" endtime="20201030 18:28:41.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.094" level="INFO">VALUE: [0.00012015300000000131, 0.00012002799999999772, 0.00011997299999999891, 0.00012002800000000119, 0.00012001399999999815, 0.00012000000000000205, 0.00012008399999999947, 0.00012004100000000129, 0.00012002800000000119, 0.00011999999999999858, 0.00012002800000000119, 0.00012001400000000162, 0.00012006900000000043, 0.00012002800000000119, 0.00012002800000000119, 0.00012001400000000162, 0.00012004200000000076, 0.00012001300000000215, 0.00012002800000000119, 0.00012000000000000205, 0.00012004200000000076, 0.00012002800000000119, 0.00012002700000000172, 0.00012002800000000119, 0.00012002800000000119, 0.00012002800000000119, 0.00011998599999999901, 0.00012005500000000086, 0.00012002800000000119, 0.00012004200000000076, 0.00012001400000000162, 0.00012001400000000162, 0.00012001299999999868, 0.00011999999999999858, 0.00012004200000000076, 0.000120083, 0.00012001400000000162, 0.00012002700000000172, 0.00012002799999999772, 0.00012002800000000119, 0.00012002800000000119, 0.00012002799999999772, 0.00012006900000000043, 0.00012001399999999815, 0.00012002800000000119, 0.00011997299999999891, 0.00012002799999999772, 0.00012009699999999957, 0.00012001399999999815, 0.00012004199999999729]</msg>
<status status="PASS" starttime="20201030 18:28:41.093" endtime="20201030 18:28:41.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.088" endtime="20201030 18:28:41.099"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.102" endtime="20201030 18:28:41.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.101" endtime="20201030 18:28:41.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.100" endtime="20201030 18:28:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.744" endtime="20201030 18:28:41.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:40.743" endtime="20201030 18:28:41.123"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.131" endtime="20201030 18:28:41.147"></status>
</kw>
<msg timestamp="20201030 18:28:41.147" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.130" endtime="20201030 18:28:41.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.149" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.148" endtime="20201030 18:28:41.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.151" endtime="20201030 18:28:41.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.127" endtime="20201030 18:28:41.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.125" endtime="20201030 18:28:41.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.160" endtime="20201030 18:28:41.445"></status>
</kw>
<msg timestamp="20201030 18:28:41.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.158" endtime="20201030 18:28:41.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018019375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.449" endtime="20201030 18:28:41.457"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.458" endtime="20201030 18:28:41.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.155" endtime="20201030 18:28:41.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.154" endtime="20201030 18:28:41.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:41.464" level="INFO">${PHILIP_RES} = [{'diff': 0.00013294399999999942}, {'diff': 0.00013279100000000016}, {'diff': 0.00013280499999999973}, {'diff': 0.00013280600000000267}, {'diff': 0.00013279199999999963}, {'diff': 0.000132805999999999...</msg>
<status status="PASS" starttime="20201030 18:28:41.461" endtime="20201030 18:28:41.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.470" level="INFO">${RESULT} = {'diff': [0.00013294399999999942, 0.00013279100000000016, 0.00013280499999999973, 0.00013280600000000267, 0.00013279199999999963, 0.0001328059999999992, 0.00013274999999999745, 0.0001327920000000031, ...</msg>
<status status="PASS" starttime="20201030 18:28:41.466" endtime="20201030 18:28:41.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.474" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:41.473" endtime="20201030 18:28:41.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.477" level="INFO">VALUE: [0.00013294399999999942, 0.00013279100000000016, 0.00013280499999999973, 0.00013280600000000267, 0.00013279199999999963, 0.0001328059999999992, 0.00013274999999999745, 0.0001327920000000031, 0.00013277800000000006, 0.00013279100000000016, 0.00013279199999999963, 0.00013282000000000224, 0.00013281999999999877, 0.00013277800000000006, 0.00013279100000000016, 0.00013279100000000016, 0.00013277800000000006, 0.0001328059999999992, 0.0001328340000000018, 0.0001327920000000031, 0.00013279199999999963, 0.00013280499999999973, 0.00013279100000000016, 0.00013280600000000267, 0.00013283299999999887, 0.00013277800000000006, 0.00013282000000000224, 0.00013280499999999973, 0.00013275000000000092, 0.00013279100000000016, 0.0001327920000000031, 0.00013279199999999963, 0.0001328059999999992, 0.00013281999999999877, 0.00013270799999999874, 0.00013280499999999973, 0.00013280499999999973, 0.00013279199999999963, 0.0001327920000000031, 0.0001328059999999992, 0.00013277800000000006, 0.00013280499999999973, 0.00013283300000000234, 0.00013279199999999963, 0.00013279199999999963, 0.0001328059999999992, 0.00013282000000000224, 0.00013287499999999758, 0.00013283299999999887, 0.0001327770000000006]</msg>
<status status="PASS" starttime="20201030 18:28:41.475" endtime="20201030 18:28:41.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.471" endtime="20201030 18:28:41.478"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.481" endtime="20201030 18:28:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.480" endtime="20201030 18:28:41.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.479" endtime="20201030 18:28:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.124" endtime="20201030 18:28:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.123" endtime="20201030 18:28:41.502"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.511" endtime="20201030 18:28:41.527"></status>
</kw>
<msg timestamp="20201030 18:28:41.528" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.509" endtime="20201030 18:28:41.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.530" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.529" endtime="20201030 18:28:41.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.531" endtime="20201030 18:28:41.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.506" endtime="20201030 18:28:41.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.505" endtime="20201030 18:28:41.534"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.540" endtime="20201030 18:28:41.826"></status>
</kw>
<msg timestamp="20201030 18:28:41.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017753986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017900306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.539" endtime="20201030 18:28:41.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017753986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017900306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.830" endtime="20201030 18:28:41.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.838" endtime="20201030 18:28:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.536" endtime="20201030 18:28:41.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.534" endtime="20201030 18:28:41.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:41.845" level="INFO">${PHILIP_RES} = [{'diff': 0.00014632000000000187}, {'diff': 0.00014625000000000055}, {'diff': 0.0001462359999999975}, {'diff': 0.0001461809999999987}, {'diff': 0.0001461809999999987}, {'diff': 0.0001461809999999987},...</msg>
<status status="PASS" starttime="20201030 18:28:41.842" endtime="20201030 18:28:41.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:41.849" level="INFO">${RESULT} = {'diff': [0.00014632000000000187, 0.00014625000000000055, 0.0001462359999999975, 0.0001461809999999987, 0.0001461809999999987, 0.0001461809999999987, 0.00014618100000000217, 0.00014616699999999913, 0....</msg>
<status status="PASS" starttime="20201030 18:28:41.846" endtime="20201030 18:28:41.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.854" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:41.853" endtime="20201030 18:28:41.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.856" level="INFO">VALUE: [0.00014632000000000187, 0.00014625000000000055, 0.0001462359999999975, 0.0001461809999999987, 0.0001461809999999987, 0.0001461809999999987, 0.00014618100000000217, 0.00014616699999999913, 0.00014620899999999784, 0.00014620799999999837, 0.00014617999999999923, 0.00014615299999999956, 0.00014619400000000227, 0.00014615299999999956, 0.00014615299999999956, 0.0001461520000000001, 0.00014617999999999923, 0.0001461800000000027, 0.0001462359999999975, 0.0001462359999999975, 0.00014616599999999966, 0.0001461939999999988, 0.00014618100000000217, 0.00014620800000000184, 0.00014618100000000217, 0.0001461809999999987, 0.00014620899999999784, 0.00014619500000000174, 0.00014618100000000217, 0.00014618100000000217, 0.00014624999999999708, 0.00014616699999999913, 0.00014619499999999827, 0.00014619500000000174, 0.00014619500000000174, 0.0001461939999999988, 0.00014617999999999923, 0.00014616699999999913, 0.00014617999999999923, 0.0001461800000000027, 0.00014619400000000227, 0.0001461939999999988, 0.00014617999999999923, 0.00014616599999999966, 0.0001461800000000027, 0.000146139, 0.0001461809999999987, 0.0001461809999999987, 0.0001461809999999987, 0.00014625000000000055]</msg>
<status status="PASS" starttime="20201030 18:28:41.855" endtime="20201030 18:28:41.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.850" endtime="20201030 18:28:41.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:41.865" endtime="20201030 18:28:41.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.863" endtime="20201030 18:28:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.862" endtime="20201030 18:28:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.503" endtime="20201030 18:28:41.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.503" endtime="20201030 18:28:41.886"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.894" endtime="20201030 18:28:41.913"></status>
</kw>
<msg timestamp="20201030 18:28:41.913" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.892" endtime="20201030 18:28:41.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:41.916" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:41.915" endtime="20201030 18:28:41.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.917" endtime="20201030 18:28:41.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.890" endtime="20201030 18:28:41.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.888" endtime="20201030 18:28:41.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:41.926" endtime="20201030 18:28:42.211"></status>
</kw>
<msg timestamp="20201030 18:28:42.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018475125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:41.924" endtime="20201030 18:28:42.214"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018475125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018635361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.215" endtime="20201030 18:28:42.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.223" endtime="20201030 18:28:42.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.922" endtime="20201030 18:28:42.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.920" endtime="20201030 18:28:42.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:42.230" level="INFO">${PHILIP_RES} = [{'diff': 0.0001602360000000011}, {'diff': 0.00016017999999999935}, {'diff': 0.00016017999999999935}, {'diff': 0.00016016599999999978}, {'diff': 0.00016017999999999935}, {'diff': 0.0001601659999999997...</msg>
<status status="PASS" starttime="20201030 18:28:42.227" endtime="20201030 18:28:42.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.234" level="INFO">${RESULT} = {'diff': [0.0001602360000000011, 0.00016017999999999935, 0.00016017999999999935, 0.00016016599999999978, 0.00016017999999999935, 0.00016016599999999978, 0.00016017999999999935, 0.00016019399999999892,...</msg>
<status status="PASS" starttime="20201030 18:28:42.231" endtime="20201030 18:28:42.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.238" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:42.237" endtime="20201030 18:28:42.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.241" level="INFO">VALUE: [0.0001602360000000011, 0.00016017999999999935, 0.00016017999999999935, 0.00016016599999999978, 0.00016017999999999935, 0.00016016599999999978, 0.00016017999999999935, 0.00016019399999999892, 0.00016012500000000054, 0.00016019500000000186, 0.00016018099999999882, 0.00016015299999999968, 0.00016022199999999806, 0.00016018099999999882, 0.00016018099999999882, 0.00016016699999999925, 0.00016015299999999968, 0.0001601520000000002, 0.00016016599999999978, 0.00016013900000000011, 0.00016016699999999925, 0.00016016699999999925, 0.0001601810000000023, 0.00016016700000000272, 0.00016018099999999882, 0.00016018099999999882, 0.00016011100000000097, 0.0001601810000000023, 0.00016015299999999968, 0.00016013900000000011, 0.00016022199999999806, 0.00016012500000000054, 0.0001601940000000024, 0.00016022200000000153, 0.0001602360000000011, 0.00016019399999999892, 0.0001601810000000023, 0.00016016699999999925, 0.00016016699999999925, 0.00016016699999999925, 0.00016015299999999968, 0.00016015300000000315, 0.0001601940000000024, 0.00016022200000000153, 0.00016016599999999978, 0.00016019399999999892, 0.00016022200000000153, 0.00016017999999999935, 0.00016018099999999882, 0.00016018099999999882]</msg>
<status status="PASS" starttime="20201030 18:28:42.239" endtime="20201030 18:28:42.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.235" endtime="20201030 18:28:42.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.246" endtime="20201030 18:28:42.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.245" endtime="20201030 18:28:42.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.244" endtime="20201030 18:28:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.887" endtime="20201030 18:28:42.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:41.886" endtime="20201030 18:28:42.267"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.275" endtime="20201030 18:28:42.293"></status>
</kw>
<msg timestamp="20201030 18:28:42.294" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.274" endtime="20201030 18:28:42.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.296" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.295" endtime="20201030 18:28:42.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.298" endtime="20201030 18:28:42.299"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.271" endtime="20201030 18:28:42.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.269" endtime="20201030 18:28:42.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.306" endtime="20201030 18:28:42.597"></status>
</kw>
<msg timestamp="20201030 18:28:42.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.305" endtime="20201030 18:28:42.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017677583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017852528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.606" endtime="20201030 18:28:42.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.624" endtime="20201030 18:28:42.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.302" endtime="20201030 18:28:42.628"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.301" endtime="20201030 18:28:42.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:42.637" level="INFO">${PHILIP_RES} = [{'diff': 0.00017494499999999927}, {'diff': 0.0001747370000000012}, {'diff': 0.00017476400000000086}, {'diff': 0.00017476400000000086}, {'diff': 0.0001747500000000013}, {'diff': 0.00017476400000000086...</msg>
<status status="PASS" starttime="20201030 18:28:42.631" endtime="20201030 18:28:42.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:42.648" level="INFO">${RESULT} = {'diff': [0.00017494499999999927, 0.0001747370000000012, 0.00017476400000000086, 0.00017476400000000086, 0.0001747500000000013, 0.00017476400000000086, 0.00017474999999999782, 0.000174792, 0.000174764...</msg>
<status status="PASS" starttime="20201030 18:28:42.639" endtime="20201030 18:28:42.648"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.656" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:42.654" endtime="20201030 18:28:42.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.661" level="INFO">VALUE: [0.00017494499999999927, 0.0001747370000000012, 0.00017476400000000086, 0.00017476400000000086, 0.0001747500000000013, 0.00017476400000000086, 0.00017474999999999782, 0.000174792, 0.00017476400000000086, 0.0001747639999999974, 0.00017477800000000043, 0.00017477800000000043, 0.00017476400000000086, 0.00017476400000000086, 0.00017477800000000043, 0.00017477800000000043, 0.00017480599999999957, 0.00017479100000000053, 0.00017476400000000086, 0.00017477800000000043, 0.00017474999999999782, 0.00017474999999999782, 0.00017474999999999782, 0.00017477800000000043, 0.00017476400000000086, 0.0001747630000000014, 0.00017476400000000086, 0.000174792, 0.00017477800000000043, 0.0001747500000000013, 0.00017476400000000086, 0.00017486100000000185, 0.00017477800000000043, 0.0001747639999999974, 0.00017477800000000043, 0.00017477799999999696, 0.000174792, 0.00017476400000000086, 0.00017476400000000086, 0.00017477800000000043, 0.00017477800000000043, 0.0001747630000000014, 0.00017474999999999782, 0.000174792, 0.00017477800000000043, 0.00017469399999999954, 0.00017477800000000043, 0.0001747639999999974, 0.00017477800000000043, 0.00017472300000000163]</msg>
<status status="PASS" starttime="20201030 18:28:42.659" endtime="20201030 18:28:42.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.649" endtime="20201030 18:28:42.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:42.671" endtime="20201030 18:28:42.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.669" endtime="20201030 18:28:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.666" endtime="20201030 18:28:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.268" endtime="20201030 18:28:42.691"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.267" endtime="20201030 18:28:42.691"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.700" endtime="20201030 18:28:42.719"></status>
</kw>
<msg timestamp="20201030 18:28:42.720" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.698" endtime="20201030 18:28:42.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:42.722" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:42.721" endtime="20201030 18:28:42.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.723" endtime="20201030 18:28:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.696" endtime="20201030 18:28:42.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.694" endtime="20201030 18:28:42.726"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:42.732" endtime="20201030 18:28:43.018"></status>
</kw>
<msg timestamp="20201030 18:28:43.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017654944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:42.731" endtime="20201030 18:28:43.021"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017654944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017844986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.022" endtime="20201030 18:28:43.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.030" endtime="20201030 18:28:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.728" endtime="20201030 18:28:43.033"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.726" endtime="20201030 18:28:43.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:43.038" level="INFO">${PHILIP_RES} = [{'diff': 0.00019004200000000138}, {'diff': 0.00018997299999999953}, {'diff': 0.00018997200000000006}, {'diff': 0.00018995899999999996}, {'diff': 0.00018997200000000006}, {'diff': 0.000189972000000000...</msg>
<status status="PASS" starttime="20201030 18:28:43.034" endtime="20201030 18:28:43.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.042" level="INFO">${RESULT} = {'diff': [0.00019004200000000138, 0.00018997299999999953, 0.00018997200000000006, 0.00018995899999999996, 0.00018997200000000006, 0.00018997200000000006, 0.00018992999999999788, 0.00018998599999999963...</msg>
<status status="PASS" starttime="20201030 18:28:43.039" endtime="20201030 18:28:43.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.046" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:43.045" endtime="20201030 18:28:43.046"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.048" level="INFO">VALUE: [0.00019004200000000138, 0.00018997299999999953, 0.00018997200000000006, 0.00018995899999999996, 0.00018997200000000006, 0.00018997200000000006, 0.00018992999999999788, 0.00018998599999999963, 0.00018994499999999692, 0.00018997200000000006, 0.00018997200000000006, 0.00018998599999999963, 0.00018997200000000006, 0.00018998599999999963, 0.00018997200000000006, 0.00018995899999999996, 0.00018997200000000006, 0.00018997200000000006, 0.0001899580000000005, 0.00018998599999999963, 0.0001899580000000005, 0.00018998599999999963, 0.00018993099999999735, 0.00018998599999999963, 0.00018997200000000006, 0.00018997200000000006, 0.00018997200000000006, 0.00018998599999999963, 0.00019004099999999843, 0.00019001400000000224, 0.0001899999999999992, 0.0001899999999999992, 0.0001899999999999992, 0.00018997200000000006, 0.00018997200000000006, 0.00018997200000000006, 0.00018997299999999953, 0.0001899580000000005, 0.00018997299999999953, 0.00018998599999999963, 0.0001899999999999992, 0.00018997200000000006, 0.00018998599999999963, 0.00019001400000000224, 0.00018998599999999963, 0.00018998700000000257, 0.00018997200000000006, 0.00018997200000000006, 0.00018998599999999963, 0.00018997200000000006]</msg>
<status status="PASS" starttime="20201030 18:28:43.047" endtime="20201030 18:28:43.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.042" endtime="20201030 18:28:43.050"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.053" endtime="20201030 18:28:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.052" endtime="20201030 18:28:43.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.051" endtime="20201030 18:28:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.692" endtime="20201030 18:28:43.074"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:42.692" endtime="20201030 18:28:43.074"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.082" endtime="20201030 18:28:43.104"></status>
</kw>
<msg timestamp="20201030 18:28:43.105" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.081" endtime="20201030 18:28:43.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.107" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.106" endtime="20201030 18:28:43.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.108" endtime="20201030 18:28:43.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.078" endtime="20201030 18:28:43.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.076" endtime="20201030 18:28:43.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.117" endtime="20201030 18:28:43.410"></status>
</kw>
<msg timestamp="20201030 18:28:43.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.116" endtime="20201030 18:28:43.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018511597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018717514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.419" endtime="20201030 18:28:43.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.437" endtime="20201030 18:28:43.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.113" endtime="20201030 18:28:43.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.112" endtime="20201030 18:28:43.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:43.450" level="INFO">${PHILIP_RES} = [{'diff': 0.0002059169999999999}, {'diff': 0.00020580600000000282}, {'diff': 0.0002057780000000002}, {'diff': 0.00020579199999999978}, {'diff': 0.00020579200000000325}, {'diff': 0.0002057780000000002}...</msg>
<status status="PASS" starttime="20201030 18:28:43.443" endtime="20201030 18:28:43.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.459" level="INFO">${RESULT} = {'diff': [0.0002059169999999999, 0.00020580600000000282, 0.0002057780000000002, 0.00020579199999999978, 0.00020579200000000325, 0.0002057780000000002, 0.00020579199999999978, 0.00020580599999999935, 0...</msg>
<status status="PASS" starttime="20201030 18:28:43.452" endtime="20201030 18:28:43.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.467" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:43.465" endtime="20201030 18:28:43.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.473" level="INFO">VALUE: [0.0002059169999999999, 0.00020580600000000282, 0.0002057780000000002, 0.00020579199999999978, 0.00020579200000000325, 0.0002057780000000002, 0.00020579199999999978, 0.00020580599999999935, 0.00020573599999999803, 0.00020580599999999935, 0.0002057910000000003, 0.00020580499999999988, 0.00020577700000000074, 0.0002057910000000003, 0.00020581899999999945, 0.0002057910000000003, 0.00020581899999999945, 0.0002057910000000003, 0.00020586100000000163, 0.0002057910000000003, 0.0002057910000000003, 0.0002057910000000003, 0.0002057910000000003, 0.0002057780000000002, 0.00020579199999999978, 0.0002057910000000003, 0.00020579199999999978, 0.00020579199999999978, 0.00020580599999999935, 0.00020576400000000064, 0.0002057780000000002, 0.00020579199999999978, 0.0002057780000000002, 0.0002057780000000002, 0.00020579199999999978, 0.0002057780000000002, 0.00020579199999999978, 0.0002057780000000002, 0.00020581999999999892, 0.00020579199999999978, 0.00020572199999999846, 0.0002057780000000002, 0.0002058620000000011, 0.00020576400000000064, 0.00020579199999999978, 0.00020579199999999978, 0.0002057780000000002, 0.00020576400000000064, 0.0002057910000000003, 0.00020577699999999727]</msg>
<status status="PASS" starttime="20201030 18:28:43.470" endtime="20201030 18:28:43.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.460" endtime="20201030 18:28:43.477"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.481" endtime="20201030 18:28:43.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.480" endtime="20201030 18:28:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.479" endtime="20201030 18:28:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.075" endtime="20201030 18:28:43.502"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.074" endtime="20201030 18:28:43.502"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.511" endtime="20201030 18:28:43.531"></status>
</kw>
<msg timestamp="20201030 18:28:43.531" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.509" endtime="20201030 18:28:43.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.534" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.532" endtime="20201030 18:28:43.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.535" endtime="20201030 18:28:43.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.507" endtime="20201030 18:28:43.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.505" endtime="20201030 18:28:43.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.544" endtime="20201030 18:28:43.829"></status>
</kw>
<msg timestamp="20201030 18:28:43.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017879931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.542" endtime="20201030 18:28:43.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017879931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018102236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.834" endtime="20201030 18:28:43.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.844" endtime="20201030 18:28:43.846"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.540" endtime="20201030 18:28:43.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.538" endtime="20201030 18:28:43.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:43.852" level="INFO">${PHILIP_RES} = [{'diff': 0.00022230499999999903}, {'diff': 0.00022223600000000066}, {'diff': 0.00022220800000000152}, {'diff': 0.00022219399999999848}, {'diff': 0.00022219500000000142}, {'diff': 0.000222138999999999...</msg>
<status status="PASS" starttime="20201030 18:28:43.848" endtime="20201030 18:28:43.853"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:43.859" level="INFO">${RESULT} = {'diff': [0.00022230499999999903, 0.00022223600000000066, 0.00022220800000000152, 0.00022219399999999848, 0.00022219500000000142, 0.00022213899999999967, 0.00022219499999999795, 0.0002221799999999989,...</msg>
<status status="PASS" starttime="20201030 18:28:43.854" endtime="20201030 18:28:43.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.864" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:43.863" endtime="20201030 18:28:43.865"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.867" level="INFO">VALUE: [0.00022230499999999903, 0.00022223600000000066, 0.00022220800000000152, 0.00022219399999999848, 0.00022219500000000142, 0.00022213899999999967, 0.00022219499999999795, 0.0002221799999999989, 0.00022227799999999936, 0.0002222229999999971, 0.00022219399999999848, 0.00022222200000000109, 0.00022220899999999752, 0.00022219399999999848, 0.00022222300000000056, 0.000222209000000001, 0.00022218000000000238, 0.000222209000000001, 0.00022220800000000152, 0.00022219400000000195, 0.00022218100000000185, 0.00022220800000000152, 0.00022219400000000195, 0.00022219500000000142, 0.00022220800000000152, 0.00022222200000000109, 0.00022219399999999848, 0.00022220799999999805, 0.00022222300000000056, 0.0002221799999999989, 0.00022220799999999805, 0.00022219499999999795, 0.00022219399999999848, 0.00022220799999999805, 0.000222209000000001, 0.00022219399999999848, 0.000222209000000001, 0.00022219400000000195, 0.00022225000000000023, 0.00022219500000000142, 0.00022216599999999934, 0.00022220800000000152, 0.00022215299999999924, 0.00022220800000000152, 0.00022220800000000152, 0.00022225000000000023, 0.00022220800000000152, 0.00022222300000000056, 0.00022216599999999934, 0.00022220799999999805]</msg>
<status status="PASS" starttime="20201030 18:28:43.866" endtime="20201030 18:28:43.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.860" endtime="20201030 18:28:43.869"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:43.872" endtime="20201030 18:28:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.871" endtime="20201030 18:28:43.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.870" endtime="20201030 18:28:43.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.503" endtime="20201030 18:28:43.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.503" endtime="20201030 18:28:43.893"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.901" endtime="20201030 18:28:43.924"></status>
</kw>
<msg timestamp="20201030 18:28:43.924" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.900" endtime="20201030 18:28:43.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:43.927" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:43.925" endtime="20201030 18:28:43.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.928" endtime="20201030 18:28:43.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.897" endtime="20201030 18:28:43.930"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.895" endtime="20201030 18:28:43.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:43.937" endtime="20201030 18:28:44.230"></status>
</kw>
<msg timestamp="20201030 18:28:44.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017746319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017985667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:43.935" endtime="20201030 18:28:44.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017746319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017985667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.239" endtime="20201030 18:28:44.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.257" endtime="20201030 18:28:44.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.932" endtime="20201030 18:28:44.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.931" endtime="20201030 18:28:44.264"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:44.272" level="INFO">${PHILIP_RES} = [{'diff': 0.00023934800000000034}, {'diff': 0.00023922200000000074}, {'diff': 0.0002391529999999989}, {'diff': 0.00023927699999999955}, {'diff': 0.00023922200000000074}, {'diff': 0.0002392230000000002...</msg>
<status status="PASS" starttime="20201030 18:28:44.266" endtime="20201030 18:28:44.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.281" level="INFO">${RESULT} = {'diff': [0.00023934800000000034, 0.00023922200000000074, 0.0002391529999999989, 0.00023927699999999955, 0.00023922200000000074, 0.0002392230000000002, 0.00023922200000000074, 0.00023920800000000117, ...</msg>
<status status="PASS" starttime="20201030 18:28:44.274" endtime="20201030 18:28:44.282"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.289" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:44.288" endtime="20201030 18:28:44.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.292" level="INFO">VALUE: [0.00023934800000000034, 0.00023922200000000074, 0.0002391529999999989, 0.00023927699999999955, 0.00023922200000000074, 0.0002392230000000002, 0.00023922200000000074, 0.00023920800000000117, 0.0002392360000000003, 0.00023917999999999856, 0.00023916699999999846, 0.00023924999999999988, 0.0002392360000000003, 0.00023924999999999988, 0.00023927799999999902, 0.00023920800000000117, 0.00023924999999999988, 0.00023922200000000074, 0.0002392230000000002, 0.00023929099999999912, 0.00023924999999999988, 0.0002392230000000002, 0.0002392079999999977, 0.00023926399999999945, 0.00023922199999999727, 0.00023926399999999945, 0.00023924999999999988, 0.0002392360000000003, 0.00023922200000000074, 0.0002391810000000015, 0.00023920800000000117, 0.0002391940000000016, 0.00023924999999999988, 0.00023917999999999856, 0.0002392360000000003, 0.00023922200000000074, 0.00023922199999999727, 0.00023924999999999988, 0.00023923599999999684, 0.0002392360000000003, 0.00023922199999999727, 0.0002392360000000003, 0.00023924999999999988, 0.00023915300000000236, 0.00023922200000000074, 0.00023920900000000064, 0.00023922200000000074, 0.00023924999999999988, 0.0002392360000000003, 0.0002392360000000003]</msg>
<status status="PASS" starttime="20201030 18:28:44.290" endtime="20201030 18:28:44.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.283" endtime="20201030 18:28:44.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.297" endtime="20201030 18:28:44.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.295" endtime="20201030 18:28:44.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.294" endtime="20201030 18:28:44.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.894" endtime="20201030 18:28:44.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:43.893" endtime="20201030 18:28:44.317"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.326" endtime="20201030 18:28:44.349"></status>
</kw>
<msg timestamp="20201030 18:28:44.350" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.324" endtime="20201030 18:28:44.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.352" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.351" endtime="20201030 18:28:44.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.353" endtime="20201030 18:28:44.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.322" endtime="20201030 18:28:44.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.320" endtime="20201030 18:28:44.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.362" endtime="20201030 18:28:44.647"></status>
</kw>
<msg timestamp="20201030 18:28:44.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018871181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.361" endtime="20201030 18:28:44.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018614139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018871181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.651" endtime="20201030 18:28:44.659"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.659" endtime="20201030 18:28:44.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.358" endtime="20201030 18:28:44.661"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.357" endtime="20201030 18:28:44.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:44.666" level="INFO">${PHILIP_RES} = [{'diff': 0.00025704200000000246}, {'diff': 0.00025687500000000016}, {'diff': 0.0002568610000000006}, {'diff': 0.0002568609999999971}, {'diff': 0.0002568610000000006}, {'diff': 0.0002568480000000005},...</msg>
<status status="PASS" starttime="20201030 18:28:44.663" endtime="20201030 18:28:44.666"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:44.670" level="INFO">${RESULT} = {'diff': [0.00025704200000000246, 0.00025687500000000016, 0.0002568610000000006, 0.0002568609999999971, 0.0002568610000000006, 0.0002568480000000005, 0.0002568610000000006, 0.00025683300000000145, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:44.667" endtime="20201030 18:28:44.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.674" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:44.673" endtime="20201030 18:28:44.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.677" level="INFO">VALUE: [0.00025704200000000246, 0.00025687500000000016, 0.0002568610000000006, 0.0002568609999999971, 0.0002568610000000006, 0.0002568480000000005, 0.0002568610000000006, 0.00025683300000000145, 0.00025687500000000016, 0.00025687500000000016, 0.0002569019999999998, 0.0002568610000000006, 0.0002568749999999967, 0.00025687500000000016, 0.00025687500000000016, 0.000256847000000001, 0.0002568609999999971, 0.00025691600000000286, 0.00025687500000000016, 0.0002568610000000006, 0.0002568610000000006, 0.00025688800000000026, 0.00025687500000000016, 0.00025687500000000016, 0.00025686200000000006, 0.00025687500000000016, 0.0002568610000000006, 0.00025683300000000145, 0.00025686200000000006, 0.00025692999999999896, 0.00025684699999999755, 0.00025687500000000016, 0.0002568610000000006, 0.00025688899999999973, 0.00025680499999999884, 0.0002568610000000006, 0.0002568610000000006, 0.00025687500000000016, 0.00025684699999999755, 0.0002568480000000005, 0.0002568059999999983, 0.0002568610000000006, 0.0002568610000000006, 0.00025686200000000006, 0.00025687500000000363, 0.0002568890000000032, 0.0002568609999999971, 0.00025686100000000406, 0.0002568609999999971, 0.0002568609999999971]</msg>
<status status="PASS" starttime="20201030 18:28:44.675" endtime="20201030 18:28:44.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.671" endtime="20201030 18:28:44.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:44.685" endtime="20201030 18:28:44.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.683" endtime="20201030 18:28:44.704"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.682" endtime="20201030 18:28:44.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.318" endtime="20201030 18:28:44.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.318" endtime="20201030 18:28:44.705"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.713" endtime="20201030 18:28:44.738"></status>
</kw>
<msg timestamp="20201030 18:28:44.739" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.712" endtime="20201030 18:28:44.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:44.741" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:44.740" endtime="20201030 18:28:44.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.742" endtime="20201030 18:28:44.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.709" endtime="20201030 18:28:44.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.708" endtime="20201030 18:28:44.745"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:44.751" endtime="20201030 18:28:45.042"></status>
</kw>
<msg timestamp="20201030 18:28:45.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:44.750" endtime="20201030 18:28:45.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017615861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017891111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.051" endtime="20201030 18:28:45.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.068" endtime="20201030 18:28:45.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.747" endtime="20201030 18:28:45.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.745" endtime="20201030 18:28:45.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:45.082" level="INFO">${PHILIP_RES} = [{'diff': 0.0002752500000000012}, {'diff': 0.00027509699999999845}, {'diff': 0.0002751110000000015}, {'diff': 0.00027508300000000235}, {'diff': 0.0002750970000000019}, {'diff': 0.0002751110000000015},...</msg>
<status status="PASS" starttime="20201030 18:28:45.075" endtime="20201030 18:28:45.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.092" level="INFO">${RESULT} = {'diff': [0.0002752500000000012, 0.00027509699999999845, 0.0002751110000000015, 0.00027508300000000235, 0.0002750970000000019, 0.0002751110000000015, 0.00027505499999999974, 0.000275110999999998, 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:45.084" endtime="20201030 18:28:45.093"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.100" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:45.099" endtime="20201030 18:28:45.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.102" level="INFO">VALUE: [0.0002752500000000012, 0.00027509699999999845, 0.0002751110000000015, 0.00027508300000000235, 0.0002750970000000019, 0.0002751110000000015, 0.00027505499999999974, 0.000275110999999998, 0.00027512500000000106, 0.00027508300000000235, 0.00027516699999999977, 0.0002751249999999976, 0.000275110999999998, 0.000275110999999998, 0.0002751110000000015, 0.0002751110000000015, 0.0002751110000000015, 0.0002750980000000014, 0.0002750699999999988, 0.00027509699999999845, 0.0002750829999999989, 0.0002751110000000015, 0.0002750970000000019, 0.0002750410000000002, 0.00027512500000000106, 0.0002751660000000003, 0.00027509699999999845, 0.0002750690000000028, 0.0002751110000000015, 0.00027513900000000063, 0.0002751110000000015, 0.00027509799999999793, 0.0002750559999999992, 0.000275110999999998, 0.0002750970000000019, 0.0002751110000000015, 0.0002751110000000015, 0.00027509699999999845, 0.00027509699999999845, 0.00027513900000000063, 0.00027508300000000235, 0.0002750980000000014, 0.00027512500000000106, 0.0002750689999999993, 0.000275110999999998, 0.0002751110000000015, 0.00027506899999999584, 0.0002750829999999954, 0.00027512500000000106, 0.0002750970000000019]</msg>
<status status="PASS" starttime="20201030 18:28:45.101" endtime="20201030 18:28:45.103"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.094" endtime="20201030 18:28:45.103"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.107" endtime="20201030 18:28:45.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.106" endtime="20201030 18:28:45.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.104" endtime="20201030 18:28:45.127"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.706" endtime="20201030 18:28:45.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:44.706" endtime="20201030 18:28:45.128"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.136" endtime="20201030 18:28:45.161"></status>
</kw>
<msg timestamp="20201030 18:28:45.161" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.135" endtime="20201030 18:28:45.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.164" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.163" endtime="20201030 18:28:45.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.165" endtime="20201030 18:28:45.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.132" endtime="20201030 18:28:45.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.130" endtime="20201030 18:28:45.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.174" endtime="20201030 18:28:45.460"></status>
</kw>
<msg timestamp="20201030 18:28:45.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018975333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:45.172" endtime="20201030 18:28:45.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01868125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018975333, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:45.464" endtime="20201030 18:28:45.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.472" endtime="20201030 18:28:45.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.170" endtime="20201030 18:28:45.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.168" endtime="20201030 18:28:45.475"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:45.479" level="INFO">${PHILIP_RES} = [{'diff': 0.00029408300000000054}, {'diff': 0.00029390299999999814}, {'diff': 0.00029394400000000084}, {'diff': 0.0002939589999999999}, {'diff': 0.0002939300000000013}, {'diff': 0.0002939450000000003}...</msg>
<status status="PASS" starttime="20201030 18:28:45.476" endtime="20201030 18:28:45.479"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.483" level="INFO">${RESULT} = {'diff': [0.00029408300000000054, 0.00029390299999999814, 0.00029394400000000084, 0.0002939589999999999, 0.0002939300000000013, 0.0002939450000000003, 0.0002939299999999978, 0.00029394499999999685, 0....</msg>
<status status="PASS" starttime="20201030 18:28:45.480" endtime="20201030 18:28:45.483"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.487" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:45.486" endtime="20201030 18:28:45.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.490" level="INFO">VALUE: [0.00029408300000000054, 0.00029390299999999814, 0.00029394400000000084, 0.0002939589999999999, 0.0002939300000000013, 0.0002939450000000003, 0.0002939299999999978, 0.00029394499999999685, 0.000293972, 0.0002939589999999999, 0.0002939580000000004, 0.0002939589999999999, 0.000293972, 0.0002939170000000012, 0.00029394400000000084, 0.0002939439999999974, 0.000293972, 0.0002939580000000004, 0.0002939450000000003, 0.0002939300000000013, 0.0002939450000000003, 0.0002939300000000013, 0.0002939030000000016, 0.0002939580000000004, 0.0002940000000000026, 0.0002939439999999974, 0.00029398599999999955, 0.00029394400000000084, 0.0002939450000000003, 0.0002939309999999973, 0.0002940139999999987, 0.0002939580000000004, 0.0002939580000000004, 0.00029393100000000075, 0.000293972, 0.00029393100000000075, 0.0002939580000000004, 0.0002939309999999973, 0.00029394400000000084, 0.00029397200000000345, 0.00029395799999999694, 0.0002939719999999965, 0.0002939439999999974, 0.00029394499999999685, 0.00029394499999999685, 0.00029395799999999694, 0.00029397200000000345, 0.0002939440000000043, 0.00029390299999999814, 0.0002939439999999974]</msg>
<status status="PASS" starttime="20201030 18:28:45.488" endtime="20201030 18:28:45.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.484" endtime="20201030 18:28:45.491"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.495" endtime="20201030 18:28:45.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.493" endtime="20201030 18:28:45.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.492" endtime="20201030 18:28:45.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.129" endtime="20201030 18:28:45.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.128" endtime="20201030 18:28:45.516"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.525" endtime="20201030 18:28:45.550"></status>
</kw>
<msg timestamp="20201030 18:28:45.551" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.523" endtime="20201030 18:28:45.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.553" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.552" endtime="20201030 18:28:45.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.554" endtime="20201030 18:28:45.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.520" endtime="20201030 18:28:45.556"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.518" endtime="20201030 18:28:45.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.563" endtime="20201030 18:28:45.857"></status>
</kw>
<msg timestamp="20201030 18:28:45.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.562" endtime="20201030 18:28:45.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019971264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020284778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.866" endtime="20201030 18:28:45.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.884" endtime="20201030 18:28:45.887"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.559" endtime="20201030 18:28:45.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.557" endtime="20201030 18:28:45.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:45.897" level="INFO">${PHILIP_RES} = [{'diff': 0.00031351400000000085}, {'diff': 0.0003134160000000004}, {'diff': 0.0003134160000000004}, {'diff': 0.000313332999999999}, {'diff': 0.00031348599999999824}, {'diff': 0.00031342999999999996},...</msg>
<status status="PASS" starttime="20201030 18:28:45.890" endtime="20201030 18:28:45.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:45.906" level="INFO">${RESULT} = {'diff': [0.00031351400000000085, 0.0003134160000000004, 0.0003134160000000004, 0.000313332999999999, 0.00031348599999999824, 0.00031342999999999996, 0.0003134030000000003, 0.00031342999999999996, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:45.899" endtime="20201030 18:28:45.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.912" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:45.911" endtime="20201030 18:28:45.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.914" level="INFO">VALUE: [0.00031351400000000085, 0.0003134160000000004, 0.0003134160000000004, 0.000313332999999999, 0.00031348599999999824, 0.00031342999999999996, 0.0003134030000000003, 0.00031342999999999996, 0.0003133890000000007, 0.000313444999999999, 0.0003134579999999991, 0.0003134020000000008, 0.00031341699999999986, 0.0003134030000000003, 0.0003134030000000003, 0.00031347199999999867, 0.0003134160000000004, 0.0003134030000000003, 0.00031341699999999986, 0.00031332000000000235, 0.00031340199999999735, 0.00031337500000000115, 0.0003134030000000003, 0.0003133890000000007, 0.0003134030000000003, 0.00031340199999999735, 0.0003134029999999968, 0.0003134029999999968, 0.00031341699999999986, 0.000313444000000003, 0.00031347200000000214, 0.00031343099999999943, 0.0003133890000000007, 0.0003133750000000046, 0.00031340199999999735, 0.0003133890000000042, 0.00031338899999999725, 0.00031340300000000376, 0.00031338899999999725, 0.0003133890000000042, 0.0003134169999999964, 0.0003134310000000029, 0.0003134029999999968, 0.00031340199999999735, 0.0003133749999999977, 0.0003134029999999968, 0.00031345799999999563, 0.00031340300000000376, 0.00031338899999999725, 0.00031334699999999854]</msg>
<status status="PASS" starttime="20201030 18:28:45.913" endtime="20201030 18:28:45.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.908" endtime="20201030 18:28:45.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:45.920" endtime="20201030 18:28:45.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.918" endtime="20201030 18:28:45.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.917" endtime="20201030 18:28:45.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.517" endtime="20201030 18:28:45.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.516" endtime="20201030 18:28:45.940"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.949" endtime="20201030 18:28:45.977"></status>
</kw>
<msg timestamp="20201030 18:28:45.977" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.947" endtime="20201030 18:28:45.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:45.980" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:45.979" endtime="20201030 18:28:45.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.981" endtime="20201030 18:28:45.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.945" endtime="20201030 18:28:45.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.943" endtime="20201030 18:28:45.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:45.990" endtime="20201030 18:28:46.276"></status>
</kw>
<msg timestamp="20201030 18:28:46.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018084833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:45.989" endtime="20201030 18:28:46.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017751236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018084833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.280" endtime="20201030 18:28:46.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.288" endtime="20201030 18:28:46.289"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.986" endtime="20201030 18:28:46.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.984" endtime="20201030 18:28:46.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:46.294" level="INFO">${PHILIP_RES} = [{'diff': 0.00033359700000000145}, {'diff': 0.0003334730000000008}, {'diff': 0.00033345899999999776}, {'diff': 0.0003335279999999996}, {'diff': 0.0003334859999999974}, {'diff': 0.0003334860000000009},...</msg>
<status status="PASS" starttime="20201030 18:28:46.291" endtime="20201030 18:28:46.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.299" level="INFO">${RESULT} = {'diff': [0.00033359700000000145, 0.0003334730000000008, 0.00033345899999999776, 0.0003335279999999996, 0.0003334859999999974, 0.0003334860000000009, 0.0003334590000000012, 0.0003334579999999983, 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:46.295" endtime="20201030 18:28:46.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.303" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:46.303" endtime="20201030 18:28:46.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.306" level="INFO">VALUE: [0.00033359700000000145, 0.0003334730000000008, 0.00033345899999999776, 0.0003335279999999996, 0.0003334859999999974, 0.0003334860000000009, 0.0003334590000000012, 0.0003334579999999983, 0.0003334440000000022, 0.00033342999999999914, 0.00033344500000000166, 0.0003334720000000013, 0.00033347199999999785, 0.0003334860000000009, 0.00033345899999999776, 0.00033345800000000175, 0.00033347199999999785, 0.0003334579999999983, 0.0003334730000000008, 0.00033347199999999785, 0.0003335279999999996, 0.00033347199999999785, 0.00033344500000000166, 0.0003335129999999971, 0.00033347199999999785, 0.0003334720000000013, 0.00033347299999999733, 0.0003334590000000012, 0.0003334439999999987, 0.0003334439999999987, 0.0003334590000000012, 0.00033350000000000046, 0.00033345800000000175, 0.0003334029999999995, 0.0003334720000000013, 0.0003334590000000012, 0.0003334579999999983, 0.00033344399999999524, 0.0003334860000000009, 0.0003334730000000008, 0.0003334720000000013, 0.0003334860000000009, 0.00033344399999999524, 0.0003334730000000008, 0.00033351300000000056, 0.0003334720000000013, 0.0003334860000000009, 0.00033354199999999917, 0.0003334860000000009, 0.00033345800000000175]</msg>
<status status="PASS" starttime="20201030 18:28:46.305" endtime="20201030 18:28:46.307"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.300" endtime="20201030 18:28:46.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.311" endtime="20201030 18:28:46.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.309" endtime="20201030 18:28:46.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.308" endtime="20201030 18:28:46.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.941" endtime="20201030 18:28:46.331"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:45.941" endtime="20201030 18:28:46.332"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.340" endtime="20201030 18:28:46.369"></status>
</kw>
<msg timestamp="20201030 18:28:46.369" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.338" endtime="20201030 18:28:46.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.372" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.370" endtime="20201030 18:28:46.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.373" endtime="20201030 18:28:46.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.336" endtime="20201030 18:28:46.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.334" endtime="20201030 18:28:46.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.382" endtime="20201030 18:28:46.677"></status>
</kw>
<msg timestamp="20201030 18:28:46.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017741028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.380" endtime="20201030 18:28:46.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017741028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018095264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.686" endtime="20201030 18:28:46.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.704" endtime="20201030 18:28:46.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.378" endtime="20201030 18:28:46.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.376" endtime="20201030 18:28:46.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:46.719" level="INFO">${PHILIP_RES} = [{'diff': 0.00035423600000000083}, {'diff': 0.00035412500000000027}, {'diff': 0.0003541659999999995}, {'diff': 0.000354166999999999}, {'diff': 0.00035413899999999984}, {'diff': 0.0003541110000000007},...</msg>
<status status="PASS" starttime="20201030 18:28:46.713" endtime="20201030 18:28:46.719"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:46.723" level="INFO">${RESULT} = {'diff': [0.00035423600000000083, 0.00035412500000000027, 0.0003541659999999995, 0.000354166999999999, 0.00035413899999999984, 0.0003541110000000007, 0.000354166000000003, 0.00035413899999999984, 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:46.720" endtime="20201030 18:28:46.723"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.727" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:46.726" endtime="20201030 18:28:46.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.730" level="INFO">VALUE: [0.00035423600000000083, 0.00035412500000000027, 0.0003541659999999995, 0.000354166999999999, 0.00035413899999999984, 0.0003541110000000007, 0.000354166000000003, 0.00035413899999999984, 0.00035415199999999994, 0.00035412500000000027, 0.00035413899999999984, 0.00035412500000000027, 0.0003541249999999968, 0.00035412500000000027, 0.00035413899999999984, 0.00035413899999999984, 0.00035413899999999984, 0.00035413899999999984, 0.0003541529999999994, 0.00035413899999999984, 0.00035412500000000027, 0.00035413800000000037, 0.00035408300000000156, 0.00035413899999999984, 0.0003541529999999994, 0.00035412500000000027, 0.00035413899999999984, 0.00035415199999999994, 0.00035413899999999984, 0.00035416700000000245, 0.00035413899999999984, 0.00035412500000000027, 0.00035413899999999984, 0.00035412500000000027, 0.00035412500000000027, 0.0003541249999999968, 0.0003541390000000033, 0.00035412500000000374, 0.0003541389999999964, 0.00035415199999999647, 0.0003541390000000033, 0.0003541390000000033, 0.0003541389999999964, 0.0003541389999999964, 0.0003541530000000029, 0.0003541390000000033, 0.0003541389999999964, 0.0003541530000000029, 0.00035411100000000417, 0.0003541390000000033]</msg>
<status status="PASS" starttime="20201030 18:28:46.728" endtime="20201030 18:28:46.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.724" endtime="20201030 18:28:46.731"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:46.735" endtime="20201030 18:28:46.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.733" endtime="20201030 18:28:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.732" endtime="20201030 18:28:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.333" endtime="20201030 18:28:46.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.332" endtime="20201030 18:28:46.755"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.764" endtime="20201030 18:28:46.795"></status>
</kw>
<msg timestamp="20201030 18:28:46.795" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.762" endtime="20201030 18:28:46.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:46.798" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:46.796" endtime="20201030 18:28:46.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.799" endtime="20201030 18:28:46.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.760" endtime="20201030 18:28:46.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.758" endtime="20201030 18:28:46.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:46.808" endtime="20201030 18:28:47.093"></status>
</kw>
<msg timestamp="20201030 18:28:47.096" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018929653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:46.806" endtime="20201030 18:28:47.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018554125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018929653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.097" endtime="20201030 18:28:47.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.105" endtime="20201030 18:28:47.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.803" endtime="20201030 18:28:47.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.802" endtime="20201030 18:28:47.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:47.113" level="INFO">${PHILIP_RES} = [{'diff': 0.000375528}, {'diff': 0.0003753890000000003}, {'diff': 0.00037540299999999985}, {'diff': 0.00037545799999999865}, {'diff': 0.0003753890000000003}, {'diff': 0.00037540299999999985}, {'diff':...</msg>
<status status="PASS" starttime="20201030 18:28:47.109" endtime="20201030 18:28:47.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.119" level="INFO">${RESULT} = {'diff': [0.000375528, 0.0003753890000000003, 0.00037540299999999985, 0.00037545799999999865, 0.0003753890000000003, 0.00037540299999999985, 0.0003753890000000003, 0.0003753890000000003, 0.00037541599...</msg>
<status status="PASS" starttime="20201030 18:28:47.115" endtime="20201030 18:28:47.119"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.125" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:47.123" endtime="20201030 18:28:47.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.128" level="INFO">VALUE: [0.000375528, 0.0003753890000000003, 0.00037540299999999985, 0.00037545799999999865, 0.0003753890000000003, 0.00037540299999999985, 0.0003753890000000003, 0.0003753890000000003, 0.00037541599999999994, 0.0003754169999999994, 0.0003753890000000003, 0.00037547300000000117, 0.0003754169999999994, 0.0003754299999999995, 0.0003754169999999994, 0.00037541599999999994, 0.0003754169999999994, 0.0003754169999999994, 0.0003753890000000003, 0.00037540299999999985, 0.00037541599999999994, 0.0003754170000000029, 0.00037545799999999865, 0.0003753890000000003, 0.00037545799999999865, 0.0003754299999999995, 0.0003753750000000007, 0.0003754020000000004, 0.00037540299999999985, 0.00037540299999999985, 0.00037543100000000246, 0.0003754170000000029, 0.0003753750000000042, 0.0003754029999999964, 0.0003754160000000034, 0.0003754170000000029, 0.00037541699999999595, 0.00037544500000000203, 0.00037544400000000255, 0.0003754159999999965, 0.0003753469999999981, 0.0003754160000000034, 0.0003754029999999964, 0.0003754170000000029, 0.0003753750000000042, 0.00037541699999999595, 0.0003753750000000042, 0.00037533300000000547, 0.0003754029999999964, 0.0003754170000000029]</msg>
<status status="PASS" starttime="20201030 18:28:47.126" endtime="20201030 18:28:47.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.120" endtime="20201030 18:28:47.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.147" endtime="20201030 18:28:47.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.142" endtime="20201030 18:28:47.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.140" endtime="20201030 18:28:47.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.756" endtime="20201030 18:28:47.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:46.756" endtime="20201030 18:28:47.170"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.190" endtime="20201030 18:28:47.224"></status>
</kw>
<msg timestamp="20201030 18:28:47.225" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.184" endtime="20201030 18:28:47.225"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.228" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.226" endtime="20201030 18:28:47.228"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.229" endtime="20201030 18:28:47.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.175" endtime="20201030 18:28:47.232"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.172" endtime="20201030 18:28:47.232"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.240" endtime="20201030 18:28:47.545"></status>
</kw>
<msg timestamp="20201030 18:28:47.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033408278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033805667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.238" endtime="20201030 18:28:47.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033408278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033805667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.550" endtime="20201030 18:28:47.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.558" endtime="20201030 18:28:47.560"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.235" endtime="20201030 18:28:47.561"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.233" endtime="20201030 18:28:47.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:47.565" level="INFO">${PHILIP_RES} = [{'diff': 0.000397388999999998}, {'diff': 0.00039726400000000134}, {'diff': 0.0003972920000000005}, {'diff': 0.0003972780000000009}, {'diff': 0.0003972920000000005}, {'diff': 0.0003972780000000009}, {...</msg>
<status status="PASS" starttime="20201030 18:28:47.562" endtime="20201030 18:28:47.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.570" level="INFO">${RESULT} = {'diff': [0.000397388999999998, 0.00039726400000000134, 0.0003972920000000005, 0.0003972780000000009, 0.0003972920000000005, 0.0003972780000000009, 0.0003972920000000005, 0.00039730600000000005, 0.000...</msg>
<status status="PASS" starttime="20201030 18:28:47.566" endtime="20201030 18:28:47.570"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.575" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:47.574" endtime="20201030 18:28:47.575"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.577" level="INFO">VALUE: [0.000397388999999998, 0.00039726400000000134, 0.0003972920000000005, 0.0003972780000000009, 0.0003972920000000005, 0.0003972780000000009, 0.0003972920000000005, 0.00039730600000000005, 0.0003973050000000006, 0.00039730600000000005, 0.0003973050000000006, 0.0003972920000000005, 0.000397291000000001, 0.0003972920000000005, 0.000397291000000001, 0.0003973199999999996, 0.000397291000000001, 0.0003972780000000009, 0.0003973199999999996, 0.0003973050000000006, 0.00039730600000000005, 0.00039731900000000014, 0.0003972920000000005, 0.000397291000000001, 0.0003972920000000005, 0.00039729099999999407, 0.00039730600000000005, 0.00039731900000000014, 0.0003973469999999993, 0.000397291000000001, 0.00039730600000000005, 0.0003972920000000005, 0.0003972920000000005, 0.00039730600000000005, 0.0003973050000000006, 0.00039729199999999354, 0.00039727700000000143, 0.0003972920000000005, 0.00039727700000000143, 0.0003972360000000022, 0.0003973050000000006, 0.0003972920000000005, 0.0003972780000000009, 0.00039726300000000186, 0.0003972920000000005, 0.0003972920000000005, 0.0003973199999999996, 0.0003972920000000005, 0.0003972920000000005, 0.00039727700000000143]</msg>
<status status="PASS" starttime="20201030 18:28:47.576" endtime="20201030 18:28:47.578"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.571" endtime="20201030 18:28:47.579"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.583" endtime="20201030 18:28:47.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.581" endtime="20201030 18:28:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.580" endtime="20201030 18:28:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.171" endtime="20201030 18:28:47.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.170" endtime="20201030 18:28:47.603"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.612" endtime="20201030 18:28:47.643"></status>
</kw>
<msg timestamp="20201030 18:28:47.644" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.611" endtime="20201030 18:28:47.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.646" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:47.645" endtime="20201030 18:28:47.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.647" endtime="20201030 18:28:47.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.608" endtime="20201030 18:28:47.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.606" endtime="20201030 18:28:47.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.657" endtime="20201030 18:28:47.943"></status>
</kw>
<msg timestamp="20201030 18:28:47.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018795306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.655" endtime="20201030 18:28:47.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018375389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018795306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:47.947" endtime="20201030 18:28:47.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:47.956" endtime="20201030 18:28:47.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.652" endtime="20201030 18:28:47.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.651" endtime="20201030 18:28:47.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:47.962" level="INFO">${PHILIP_RES} = [{'diff': 0.0004199170000000023}, {'diff': 0.0004197779999999991}, {'diff': 0.00041984700000000097}, {'diff': 0.0004197919999999987}, {'diff': 0.00041975}, {'diff': 0.0004197919999999987}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:28:47.959" endtime="20201030 18:28:47.963"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:47.967" level="INFO">${RESULT} = {'diff': [0.0004199170000000023, 0.0004197779999999991, 0.00041984700000000097, 0.0004197919999999987, 0.00041975, 0.0004197919999999987, 0.0004197779999999991, 0.0004197919999999987, 0.00041972300000...</msg>
<status status="PASS" starttime="20201030 18:28:47.963" endtime="20201030 18:28:47.967"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.971" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:47.970" endtime="20201030 18:28:47.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:47.974" level="INFO">VALUE: [0.0004199170000000023, 0.0004197779999999991, 0.00041984700000000097, 0.0004197919999999987, 0.00041975, 0.0004197919999999987, 0.0004197779999999991, 0.0004197919999999987, 0.0004197230000000003, 0.00041980599999999826, 0.0004197909999999992, 0.0004197779999999991, 0.0004197919999999987, 0.0004197919999999987, 0.0004198049999999988, 0.0004197919999999987, 0.0004197909999999992, 0.0004197779999999991, 0.0004197909999999992, 0.0004197919999999987, 0.0004197909999999992, 0.0004197779999999991, 0.0004197909999999992, 0.0004197360000000004, 0.0004198469999999975, 0.0004197919999999987, 0.0004197630000000001, 0.00041979200000000216, 0.00041977699999999965, 0.00041977799999999565, 0.0004197079999999978, 0.00041977799999999565, 0.0004197910000000027, 0.0004197919999999952, 0.0004197910000000027, 0.0004198059999999948, 0.0004197770000000031, 0.00041977799999999565, 0.0004198200000000013, 0.00041977799999999565, 0.00041979200000000216, 0.0004197639999999961, 0.00041984800000000044, 0.00041977799999999565, 0.00041975000000000345, 0.0004197369999999964, 0.0004197780000000026, 0.00041979200000000216, 0.0004197780000000026, 0.00041980600000000173]</msg>
<status status="PASS" starttime="20201030 18:28:47.972" endtime="20201030 18:28:47.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.968" endtime="20201030 18:28:47.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:47.979" endtime="20201030 18:28:47.998"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.977" endtime="20201030 18:28:47.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.976" endtime="20201030 18:28:47.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.604" endtime="20201030 18:28:48.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:47.604" endtime="20201030 18:28:48.000"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.009" endtime="20201030 18:28:48.040"></status>
</kw>
<msg timestamp="20201030 18:28:48.040" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.007" endtime="20201030 18:28:48.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.043" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.041" endtime="20201030 18:28:48.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.044" endtime="20201030 18:28:48.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.004" endtime="20201030 18:28:48.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.002" endtime="20201030 18:28:48.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.054" endtime="20201030 18:28:48.340"></status>
</kw>
<msg timestamp="20201030 18:28:48.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.052" endtime="20201030 18:28:48.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019853083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.344" endtime="20201030 18:28:48.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.353" endtime="20201030 18:28:48.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.049" endtime="20201030 18:28:48.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.047" endtime="20201030 18:28:48.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:48.360" level="INFO">${PHILIP_RES} = [{'diff': 0.000443014000000002}, {'diff': 0.0004428750000000023}, {'diff': 0.0004428889999999984}, {'diff': 0.0004428330000000001}, {'diff': 0.00044290299999999796}, {'diff': 0.0004428469999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:28:48.356" endtime="20201030 18:28:48.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.364" level="INFO">${RESULT} = {'diff': [0.000443014000000002, 0.0004428750000000023, 0.0004428889999999984, 0.0004428330000000001, 0.00044290299999999796, 0.0004428469999999997, 0.0004428610000000027, 0.0004428049999999975, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:28:48.361" endtime="20201030 18:28:48.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.368" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:48.367" endtime="20201030 18:28:48.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.371" level="INFO">VALUE: [0.000443014000000002, 0.0004428750000000023, 0.0004428889999999984, 0.0004428330000000001, 0.00044290299999999796, 0.0004428469999999997, 0.0004428610000000027, 0.0004428049999999975, 0.00044290300000000143, 0.00044281900000000055, 0.0004428889999999984, 0.0004428339999999996, 0.00044288900000000186, 0.0004428889999999984, 0.00044286099999999926, 0.00044286099999999926, 0.00044291699999999753, 0.00044295800000000024, 0.0004429310000000006, 0.00044286099999999926, 0.0004429019999999985, 0.00044291699999999753, 0.00044290300000000143, 0.0004428750000000023, 0.0004428750000000023, 0.000442917000000001, 0.00044290200000000196, 0.00044290300000000143, 0.00044287499999999536, 0.00044287499999999536, 0.0004428049999999975, 0.0004428750000000023, 0.0004428880000000024, 0.0004428750000000023, 0.0004428750000000023, 0.0004428880000000024, 0.00044288900000000186, 0.00044290200000000196, 0.00044288799999999545, 0.0004428609999999958, 0.00044287499999999536, 0.0004428889999999949, 0.0004428750000000023, 0.0004428610000000027, 0.0004428189999999971, 0.00044290300000000143, 0.00044288900000000186, 0.0004428330000000036, 0.00044295800000000024, 0.00044284800000000263]</msg>
<status status="PASS" starttime="20201030 18:28:48.369" endtime="20201030 18:28:48.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.365" endtime="20201030 18:28:48.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.379" endtime="20201030 18:28:48.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.378" endtime="20201030 18:28:48.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.376" endtime="20201030 18:28:48.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.001" endtime="20201030 18:28:48.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.000" endtime="20201030 18:28:48.400"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.409" endtime="20201030 18:28:48.442"></status>
</kw>
<msg timestamp="20201030 18:28:48.443" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.407" endtime="20201030 18:28:48.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.445" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.444" endtime="20201030 18:28:48.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.446" endtime="20201030 18:28:48.448"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.405" endtime="20201030 18:28:48.449"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.403" endtime="20201030 18:28:48.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.456" endtime="20201030 18:28:48.742"></status>
</kw>
<msg timestamp="20201030 18:28:48.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.454" endtime="20201030 18:28:48.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.753" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018463625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018930347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.746" endtime="20201030 18:28:48.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.754" endtime="20201030 18:28:48.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.451" endtime="20201030 18:28:48.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.450" endtime="20201030 18:28:48.757"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:48.761" level="INFO">${PHILIP_RES} = [{'diff': 0.0004667219999999993}, {'diff': 0.00046659699999999915}, {'diff': 0.0004666110000000022}, {'diff': 0.0004665829999999996}, {'diff': 0.0004665829999999996}, {'diff': 0.0004665970000000026}, ...</msg>
<status status="PASS" starttime="20201030 18:28:48.758" endtime="20201030 18:28:48.761"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:48.766" level="INFO">${RESULT} = {'diff': [0.0004667219999999993, 0.00046659699999999915, 0.0004666110000000022, 0.0004665829999999996, 0.0004665829999999996, 0.0004665970000000026, 0.00046659699999999915, 0.000466569, 0.000466624999...</msg>
<status status="PASS" starttime="20201030 18:28:48.762" endtime="20201030 18:28:48.766"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.770" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:48.769" endtime="20201030 18:28:48.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.773" level="INFO">VALUE: [0.0004667219999999993, 0.00046659699999999915, 0.0004666110000000022, 0.0004665829999999996, 0.0004665829999999996, 0.0004665970000000026, 0.00046659699999999915, 0.000466569, 0.0004666249999999983, 0.0004665829999999996, 0.0004665829999999996, 0.0004665829999999996, 0.0004666520000000014, 0.00046663800000000186, 0.0004665280000000008, 0.00046658399999999906, 0.0004665980000000021, 0.00046663899999999786, 0.00046658399999999906, 0.00046663900000000133, 0.00046654200000000035, 0.00046658399999999906, 0.0004665980000000021, 0.00046658399999999906, 0.0004665699999999995, 0.0004665970000000026, 0.000466569, 0.0004665829999999996, 0.0004665829999999996, 0.00046661100000000566, 0.00046654100000000087, 0.00046659699999999915, 0.000466569, 0.0004666109999999987, 0.000466569, 0.00046659699999999915, 0.0004666109999999987, 0.00046663899999999786, 0.000466569, 0.00046659699999999915, 0.00046659699999999915, 0.0004666249999999983, 0.00046662500000000523, 0.0004665559999999999, 0.00046659699999999915, 0.0004665829999999996, 0.0004665699999999995, 0.00046659699999999915, 0.0004665699999999995, 0.00046658399999999906]</msg>
<status status="PASS" starttime="20201030 18:28:48.771" endtime="20201030 18:28:48.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.767" endtime="20201030 18:28:48.774"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:48.778" endtime="20201030 18:28:48.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.776" endtime="20201030 18:28:48.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.775" endtime="20201030 18:28:48.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.401" endtime="20201030 18:28:48.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.401" endtime="20201030 18:28:48.799"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.808" endtime="20201030 18:28:48.843"></status>
</kw>
<msg timestamp="20201030 18:28:48.843" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.806" endtime="20201030 18:28:48.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:48.846" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:48.844" endtime="20201030 18:28:48.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.847" endtime="20201030 18:28:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.803" endtime="20201030 18:28:48.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.801" endtime="20201030 18:28:48.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:48.856" endtime="20201030 18:28:49.144"></status>
</kw>
<msg timestamp="20201030 18:28:49.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018807667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:48.855" endtime="20201030 18:28:49.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018316653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018807667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.148" endtime="20201030 18:28:49.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.157" endtime="20201030 18:28:49.158"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.852" endtime="20201030 18:28:49.159"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.850" endtime="20201030 18:28:49.159"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:49.163" level="INFO">${PHILIP_RES} = [{'diff': 0.0004910140000000014}, {'diff': 0.0004909030000000009}, {'diff': 0.0004909020000000014}, {'diff': 0.0004908610000000022}, {'diff': 0.0004908889999999978}, {'diff': 0.0004908199999999995}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.160" endtime="20201030 18:28:49.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.167" level="INFO">${RESULT} = {'diff': [0.0004910140000000014, 0.0004909030000000009, 0.0004909020000000014, 0.0004908610000000022, 0.0004908889999999978, 0.0004908199999999995, 0.0004908889999999978, 0.0004908890000000013, 0.0004...</msg>
<status status="PASS" starttime="20201030 18:28:49.164" endtime="20201030 18:28:49.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.171" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:49.170" endtime="20201030 18:28:49.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.174" level="INFO">VALUE: [0.0004910140000000014, 0.0004909030000000009, 0.0004909020000000014, 0.0004908610000000022, 0.0004908889999999978, 0.0004908199999999995, 0.0004908889999999978, 0.0004908890000000013, 0.0004909170000000004, 0.0004908750000000017, 0.0004909030000000009, 0.0004909030000000009, 0.0004909170000000004, 0.0004908889999999978, 0.0004909030000000009, 0.0004909030000000009, 0.0004908890000000013, 0.0004909170000000004, 0.0004909030000000009, 0.0004908890000000013, 0.0004909029999999974, 0.000490916000000001, 0.0004909029999999974, 0.0004908890000000013, 0.0004908750000000017, 0.0004908890000000013, 0.0004908619999999947, 0.000490931, 0.0004909020000000014, 0.0004908750000000017, 0.0004909030000000009, 0.0004909030000000009, 0.0004908750000000017, 0.0004908890000000013, 0.0004908890000000013, 0.0004909019999999945, 0.0004909030000000009, 0.000490833000000003, 0.0004908890000000013, 0.0004909030000000009, 0.0004909020000000014, 0.0004909030000000009, 0.0004909020000000014, 0.0004909030000000009, 0.0004909030000000009, 0.000490819999999996, 0.0004909030000000009, 0.0004909020000000014, 0.0004908890000000013, 0.0004909030000000009]</msg>
<status status="PASS" starttime="20201030 18:28:49.172" endtime="20201030 18:28:49.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.168" endtime="20201030 18:28:49.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.179" endtime="20201030 18:28:49.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.177" endtime="20201030 18:28:49.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.176" endtime="20201030 18:28:49.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.800" endtime="20201030 18:28:49.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:48.799" endtime="20201030 18:28:49.200"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.208" endtime="20201030 18:28:49.245"></status>
</kw>
<msg timestamp="20201030 18:28:49.245" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.207" endtime="20201030 18:28:49.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.248" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.246" endtime="20201030 18:28:49.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.249" endtime="20201030 18:28:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.204" endtime="20201030 18:28:49.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.202" endtime="20201030 18:28:49.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.258" endtime="20201030 18:28:49.543"></status>
</kw>
<msg timestamp="20201030 18:28:49.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.256" endtime="20201030 18:28:49.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019886486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020402417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.547" endtime="20201030 18:28:49.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.555" endtime="20201030 18:28:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.254" endtime="20201030 18:28:49.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.252" endtime="20201030 18:28:49.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:49.562" level="INFO">${PHILIP_RES} = [{'diff': 0.0005159310000000007}, {'diff': 0.0005158200000000002}, {'diff': 0.0005158339999999997}, {'diff': 0.0005158200000000002}, {'diff': 0.0005157499999999988}, {'diff': 0.0005158200000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:28:49.559" endtime="20201030 18:28:49.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.566" level="INFO">${RESULT} = {'diff': [0.0005159310000000007, 0.0005158200000000002, 0.0005158339999999997, 0.0005158200000000002, 0.0005157499999999988, 0.0005158200000000002, 0.0005158060000000006, 0.0005158199999999967, 0.0005...</msg>
<status status="PASS" starttime="20201030 18:28:49.563" endtime="20201030 18:28:49.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.570" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:49.569" endtime="20201030 18:28:49.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.573" level="INFO">VALUE: [0.0005159310000000007, 0.0005158200000000002, 0.0005158339999999997, 0.0005158200000000002, 0.0005157499999999988, 0.0005158200000000002, 0.0005158060000000006, 0.0005158199999999967, 0.0005158200000000002, 0.0005157919999999976, 0.0005158200000000002, 0.0005158059999999971, 0.0005158060000000006, 0.0005158059999999971, 0.0005158060000000006, 0.0005158060000000006, 0.0005158200000000002, 0.0005157499999999988, 0.0005158200000000002, 0.0005158200000000002, 0.0005158889999999985, 0.0005158060000000006, 0.0005158190000000007, 0.0005158879999999991, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158340000000067, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158330000000003, 0.0005158190000000007, 0.0005158050000000011, 0.000515874999999999, 0.0005158189999999938, 0.0005158190000000007, 0.0005158050000000011, 0.0005158469999999998, 0.0005158049999999942, 0.0005157910000000016, 0.0005158330000000003, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158190000000007, 0.0005158330000000003]</msg>
<status status="PASS" starttime="20201030 18:28:49.572" endtime="20201030 18:28:49.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.567" endtime="20201030 18:28:49.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:49.580" endtime="20201030 18:28:49.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.578" endtime="20201030 18:28:49.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.577" endtime="20201030 18:28:49.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.200" endtime="20201030 18:28:49.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.200" endtime="20201030 18:28:49.601"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.610" endtime="20201030 18:28:49.647"></status>
</kw>
<msg timestamp="20201030 18:28:49.648" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.608" endtime="20201030 18:28:49.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.653" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:49.650" endtime="20201030 18:28:49.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.655" endtime="20201030 18:28:49.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.605" endtime="20201030 18:28:49.660"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.603" endtime="20201030 18:28:49.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.675" endtime="20201030 18:28:49.968"></status>
</kw>
<msg timestamp="20201030 18:28:49.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019102194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.671" endtime="20201030 18:28:49.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019102194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:49.973" endtime="20201030 18:28:49.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:49.981" endtime="20201030 18:28:49.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.666" endtime="20201030 18:28:49.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.662" endtime="20201030 18:28:49.983"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:49.987" level="INFO">${PHILIP_RES} = [{'diff': 0.0005414169999999989}, {'diff': 0.0005412920000000022}, {'diff': 0.0005413480000000005}, {'diff': 0.0005413610000000006}, {'diff': 0.000541347000000001}, {'diff': 0.0005414019999999999}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:49.984" endtime="20201030 18:28:49.987"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:49.992" level="INFO">${RESULT} = {'diff': [0.0005414169999999989, 0.0005412920000000022, 0.0005413480000000005, 0.0005413610000000006, 0.000541347000000001, 0.0005414019999999999, 0.0005413480000000005, 0.0005413610000000006, 0.00054...</msg>
<status status="PASS" starttime="20201030 18:28:49.988" endtime="20201030 18:28:49.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.996" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:49.995" endtime="20201030 18:28:49.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:49.999" level="INFO">VALUE: [0.0005414169999999989, 0.0005412920000000022, 0.0005413480000000005, 0.0005413610000000006, 0.000541347000000001, 0.0005414019999999999, 0.0005413480000000005, 0.0005413610000000006, 0.000541347000000001, 0.000541347000000001, 0.000541334000000001, 0.000541347000000001, 0.0005413610000000006, 0.000541347000000001, 0.000541334000000001, 0.0005413610000000006, 0.000541332999999998, 0.0005413469999999976, 0.0005413480000000005, 0.000541347000000001, 0.0005413610000000006, 0.000541333000000005, 0.0005413059999999983, 0.000541333000000005, 0.0005413610000000041, 0.0005413470000000045, 0.0005413340000000044, 0.0005413049999999989, 0.0005413750000000037, 0.0005413470000000045, 0.0005413339999999975, 0.0005413889999999963, 0.0005414029999999959, 0.000541415999999996, 0.0005412919999999988, 0.0005413469999999976, 0.000541332999999998, 0.0005413609999999972, 0.0005413469999999976, 0.0005413469999999976, 0.000541332999999998, 0.0005413609999999972, 0.000541415999999996, 0.0005413609999999972, 0.0005413469999999976, 0.0005413469999999976, 0.0005413339999999975, 0.0005413609999999972, 0.000541332999999998, 0.0005413749999999967]</msg>
<status status="PASS" starttime="20201030 18:28:49.998" endtime="20201030 18:28:50.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.993" endtime="20201030 18:28:50.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.004" endtime="20201030 18:28:50.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.002" endtime="20201030 18:28:50.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.001" endtime="20201030 18:28:50.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.602" endtime="20201030 18:28:50.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:49.601" endtime="20201030 18:28:50.025"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.033" endtime="20201030 18:28:50.072"></status>
</kw>
<msg timestamp="20201030 18:28:50.072" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.032" endtime="20201030 18:28:50.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.075" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.073" endtime="20201030 18:28:50.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.076" endtime="20201030 18:28:50.077"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.029" endtime="20201030 18:28:50.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.027" endtime="20201030 18:28:50.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.085" endtime="20201030 18:28:50.371"></status>
</kw>
<msg timestamp="20201030 18:28:50.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.083" endtime="20201030 18:28:50.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017936625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018504222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.375" endtime="20201030 18:28:50.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.384" endtime="20201030 18:28:50.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.081" endtime="20201030 18:28:50.386"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.079" endtime="20201030 18:28:50.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:50.390" level="INFO">${PHILIP_RES} = [{'diff': 0.0005675969999999995}, {'diff': 0.0005674719999999994}, {'diff': 0.0005675140000000016}, {'diff': 0.000567500000000002}, {'diff': 0.000567485999999999}, {'diff': 0.0005674719999999994}, {'d...</msg>
<status status="PASS" starttime="20201030 18:28:50.387" endtime="20201030 18:28:50.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.394" level="INFO">${RESULT} = {'diff': [0.0005675969999999995, 0.0005674719999999994, 0.0005675140000000016, 0.000567500000000002, 0.000567485999999999, 0.0005674719999999994, 0.0005674860000000025, 0.0005674729999999989, 0.000567...</msg>
<status status="PASS" starttime="20201030 18:28:50.391" endtime="20201030 18:28:50.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.399" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:50.398" endtime="20201030 18:28:50.399"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.401" level="INFO">VALUE: [0.0005675969999999995, 0.0005674719999999994, 0.0005675140000000016, 0.000567500000000002, 0.000567485999999999, 0.0005674719999999994, 0.0005674860000000025, 0.0005674729999999989, 0.0005674719999999994, 0.0005674860000000025, 0.0005674729999999989, 0.0005674579999999999, 0.0005674860000000025, 0.0005675280000000012, 0.000567485999999999, 0.0005675130000000021, 0.0005674720000000029, 0.000567485999999999, 0.0005674999999999986, 0.0005674860000000025, 0.0005674999999999986, 0.0005674579999999999, 0.0005674719999999994, 0.000567485999999999, 0.0005674579999999999, 0.0005674719999999994, 0.0005675409999999978, 0.000567485999999999, 0.000567485999999999, 0.0005674869999999985, 0.0005674579999999999, 0.0005674720000000064, 0.000567485999999999, 0.0005674719999999994, 0.000567485999999999, 0.000567388000000002, 0.000567485999999999, 0.0005674860000000059, 0.0005674719999999994, 0.000567485999999999, 0.0005674869999999985, 0.0005674719999999994, 0.000567485999999999, 0.0005674440000000003, 0.0005674720000000064, 0.000567485999999999, 0.000567485999999999, 0.0005674719999999994, 0.0005674589999999993, 0.000567485999999999]</msg>
<status status="PASS" starttime="20201030 18:28:50.400" endtime="20201030 18:28:50.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.395" endtime="20201030 18:28:50.402"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.406" endtime="20201030 18:28:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.405" endtime="20201030 18:28:50.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.403" endtime="20201030 18:28:50.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.026" endtime="20201030 18:28:50.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.025" endtime="20201030 18:28:50.427"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.435" endtime="20201030 18:28:50.478"></status>
</kw>
<msg timestamp="20201030 18:28:50.478" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.434" endtime="20201030 18:28:50.478"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.481" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.479" endtime="20201030 18:28:50.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.482" endtime="20201030 18:28:50.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.431" endtime="20201030 18:28:50.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.429" endtime="20201030 18:28:50.484"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.491" endtime="20201030 18:28:50.777"></status>
</kw>
<msg timestamp="20201030 18:28:50.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01890725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:50.489" endtime="20201030 18:28:50.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01890725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019501597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:50.781" endtime="20201030 18:28:50.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.789" endtime="20201030 18:28:50.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.487" endtime="20201030 18:28:50.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.485" endtime="20201030 18:28:50.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:50.796" level="INFO">${PHILIP_RES} = [{'diff': 0.0005943469999999985}, {'diff': 0.0005942360000000015}, {'diff': 0.0005942230000000014}, {'diff': 0.000594235999999998}, {'diff': 0.0005942219999999984}, {'diff': 0.0005942230000000014}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:50.792" endtime="20201030 18:28:50.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:50.800" level="INFO">${RESULT} = {'diff': [0.0005943469999999985, 0.0005942360000000015, 0.0005942230000000014, 0.000594235999999998, 0.0005942219999999984, 0.0005942230000000014, 0.0005942220000000019, 0.0005942079999999988, 0.00059...</msg>
<status status="PASS" starttime="20201030 18:28:50.797" endtime="20201030 18:28:50.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.804" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:50.803" endtime="20201030 18:28:50.804"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.807" level="INFO">VALUE: [0.0005943469999999985, 0.0005942360000000015, 0.0005942230000000014, 0.000594235999999998, 0.0005942219999999984, 0.0005942230000000014, 0.0005942220000000019, 0.0005942079999999988, 0.000594153, 0.0005942220000000019, 0.0005942360000000015, 0.0005942079999999988, 0.0005942219999999984, 0.0005942090000000018, 0.0005942220000000019, 0.0005942079999999988, 0.0005942219999999984, 0.0005942640000000006, 0.0005942220000000019, 0.0005942370000000044, 0.000594235999999998, 0.0005942220000000054, 0.0005942229999999979, 0.0005942219999999984, 0.0005942220000000054, 0.0005942089999999983, 0.0005941799999999997, 0.0005941939999999993, 0.0005942089999999983, 0.0005942360000000049, 0.0005942219999999984, 0.000594235999999998, 0.0005942080000000058, 0.0005942089999999983, 0.0005942089999999983, 0.0005942219999999984, 0.0005942219999999984, 0.0005941799999999997, 0.000594235999999998, 0.0005942219999999984, 0.0005942360000000049, 0.0005942219999999984, 0.0005942369999999975, 0.0005942079999999988, 0.000594235999999998, 0.0005942220000000054, 0.0005942219999999984, 0.0005941939999999993, 0.0005941950000000057, 0.000594235999999998]</msg>
<status status="PASS" starttime="20201030 18:28:50.805" endtime="20201030 18:28:50.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.801" endtime="20201030 18:28:50.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:50.813" endtime="20201030 18:28:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.812" endtime="20201030 18:28:50.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.811" endtime="20201030 18:28:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.428" endtime="20201030 18:28:50.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.427" endtime="20201030 18:28:50.834"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.843" endtime="20201030 18:28:50.883"></status>
</kw>
<msg timestamp="20201030 18:28:50.884" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.841" endtime="20201030 18:28:50.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:50.886" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:50.885" endtime="20201030 18:28:50.887"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.887" endtime="20201030 18:28:50.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.839" endtime="20201030 18:28:50.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.837" endtime="20201030 18:28:50.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:50.897" endtime="20201030 18:28:51.190"></status>
</kw>
<msg timestamp="20201030 18:28:51.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017900389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018522069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:50.895" endtime="20201030 18:28:51.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017900389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018522069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.199" endtime="20201030 18:28:51.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.218" endtime="20201030 18:28:51.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.892" endtime="20201030 18:28:51.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.891" endtime="20201030 18:28:51.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:51.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0006216799999999995}, {'diff': 0.0006215689999999989}, {'diff': 0.0006216110000000011}, {'diff': 0.0006215839999999979}, {'diff': 0.0006215699999999984}, {'diff': 0.0006215270000000002}, {...</msg>
<status status="PASS" starttime="20201030 18:28:51.225" endtime="20201030 18:28:51.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.242" level="INFO">${RESULT} = {'diff': [0.0006216799999999995, 0.0006215689999999989, 0.0006216110000000011, 0.0006215839999999979, 0.0006215699999999984, 0.0006215270000000002, 0.0006215690000000024, 0.0006215140000000001, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:51.234" endtime="20201030 18:28:51.243"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.251" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:51.249" endtime="20201030 18:28:51.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.256" level="INFO">VALUE: [0.0006216799999999995, 0.0006215689999999989, 0.0006216110000000011, 0.0006215839999999979, 0.0006215699999999984, 0.0006215270000000002, 0.0006215690000000024, 0.0006215140000000001, 0.0006215830000000019, 0.0006215699999999984, 0.0006215699999999984, 0.0006215689999999989, 0.000621596999999998, 0.0006215559999999988, 0.0006215560000000023, 0.0006215700000000018, 0.0006215699999999984, 0.0006215689999999989, 0.0006215689999999989, 0.0006215829999999985, 0.0006215559999999953, 0.0006215560000000023, 0.0006215689999999954, 0.0006215550000000028, 0.0006214859999999975, 0.0006215560000000023, 0.0006215970000000015, 0.0006215700000000018, 0.0006215830000000019, 0.0006215689999999954, 0.0006215830000000019, 0.000621598000000001, 0.0006215560000000023, 0.0006215690000000024, 0.0006215550000000028, 0.0006215830000000019, 0.0006215279999999962, 0.0006215700000000018, 0.0006215699999999949, 0.0006215690000000024, 0.0006215830000000019, 0.0006215830000000019, 0.0006215700000000018, 0.0006215699999999949, 0.0006215690000000024, 0.0006215549999999959, 0.0006215690000000024, 0.0006215689999999954, 0.0006215840000000014, 0.0006215840000000014]</msg>
<status status="PASS" starttime="20201030 18:28:51.254" endtime="20201030 18:28:51.258"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.244" endtime="20201030 18:28:51.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.267" endtime="20201030 18:28:51.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.264" endtime="20201030 18:28:51.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.261" endtime="20201030 18:28:51.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.835" endtime="20201030 18:28:51.288"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:50.835" endtime="20201030 18:28:51.288"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.297" endtime="20201030 18:28:51.341"></status>
</kw>
<msg timestamp="20201030 18:28:51.342" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.295" endtime="20201030 18:28:51.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.344" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.343" endtime="20201030 18:28:51.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.345" endtime="20201030 18:28:51.347"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.293" endtime="20201030 18:28:51.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.291" endtime="20201030 18:28:51.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.355" endtime="20201030 18:28:51.641"></status>
</kw>
<msg timestamp="20201030 18:28:51.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019066889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.353" endtime="20201030 18:28:51.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019066889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.645" endtime="20201030 18:28:51.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.653" endtime="20201030 18:28:51.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.350" endtime="20201030 18:28:51.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.349" endtime="20201030 18:28:51.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:51.659" level="INFO">${PHILIP_RES} = [{'diff': 0.0006496250000000009}, {'diff': 0.0006495279999999999}, {'diff': 0.0006495560000000025}, {'diff': 0.0006495280000000034}, {'diff': 0.0006495140000000003}, {'diff': 0.0006495270000000004}, {...</msg>
<status status="PASS" starttime="20201030 18:28:51.656" endtime="20201030 18:28:51.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:51.663" level="INFO">${RESULT} = {'diff': [0.0006496250000000009, 0.0006495279999999999, 0.0006495560000000025, 0.0006495280000000034, 0.0006495140000000003, 0.0006495270000000004, 0.0006495549999999996, 0.0006495560000000025, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:51.660" endtime="20201030 18:28:51.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.668" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:51.666" endtime="20201030 18:28:51.668"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.670" level="INFO">VALUE: [0.0006496250000000009, 0.0006495279999999999, 0.0006495560000000025, 0.0006495280000000034, 0.0006495140000000003, 0.0006495270000000004, 0.0006495549999999996, 0.0006495560000000025, 0.0006495279999999999, 0.0006495419999999995, 0.0006495419999999995, 0.0006495279999999999, 0.0006495419999999995, 0.0006494869999999972, 0.0006495829999999987, 0.0006494860000000012, 0.0006495279999999999, 0.0006496110000000013, 0.0006494999999999973, 0.0006494860000000047, 0.000649526999999997, 0.0006495280000000034, 0.0006495279999999964, 0.000649541999999996, 0.000649542000000003, 0.0006495969999999948, 0.0006494860000000047, 0.0006495549999999961, 0.000649526999999997, 0.0006495280000000034, 0.0006495279999999964, 0.0006495140000000038, 0.0006495279999999964, 0.0006495280000000034, 0.000649542000000003, 0.000649443999999999, 0.0006495410000000035, 0.0006495830000000022, 0.0006494589999999981, 0.000649542000000003, 0.0006495139999999969, 0.0006496110000000013, 0.0006495279999999964, 0.0006495410000000035, 0.000649526999999997, 0.0006495279999999964, 0.0006495140000000038, 0.0006495279999999964, 0.0006495280000000034, 0.0006495560000000025]</msg>
<status status="PASS" starttime="20201030 18:28:51.669" endtime="20201030 18:28:51.671"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.664" endtime="20201030 18:28:51.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:51.675" endtime="20201030 18:28:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.673" endtime="20201030 18:28:51.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.672" endtime="20201030 18:28:51.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.289" endtime="20201030 18:28:51.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.289" endtime="20201030 18:28:51.696"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.704" endtime="20201030 18:28:51.750"></status>
</kw>
<msg timestamp="20201030 18:28:51.751" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.702" endtime="20201030 18:28:51.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:51.753" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:51.752" endtime="20201030 18:28:51.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.754" endtime="20201030 18:28:51.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.700" endtime="20201030 18:28:51.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.698" endtime="20201030 18:28:51.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:51.763" endtime="20201030 18:28:52.067"></status>
</kw>
<msg timestamp="20201030 18:28:52.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:51.762" endtime="20201030 18:28:52.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018630639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019308847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.076" endtime="20201030 18:28:52.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.085" endtime="20201030 18:28:52.087"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.759" endtime="20201030 18:28:52.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.758" endtime="20201030 18:28:52.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:52.092" level="INFO">${PHILIP_RES} = [{'diff': 0.0006782079999999996}, {'diff': 0.0006780699999999994}, {'diff': 0.0006780829999999995}, {'diff': 0.0006781109999999986}, {'diff': 0.0006780279999999972}, {'diff': 0.0006780830000000029}, {...</msg>
<status status="PASS" starttime="20201030 18:28:52.089" endtime="20201030 18:28:52.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.096" level="INFO">${RESULT} = {'diff': [0.0006782079999999996, 0.0006780699999999994, 0.0006780829999999995, 0.0006781109999999986, 0.0006780279999999972, 0.0006780830000000029, 0.0006780979999999985, 0.0006780829999999995, 0.0006...</msg>
<status status="PASS" starttime="20201030 18:28:52.093" endtime="20201030 18:28:52.096"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.100" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:52.099" endtime="20201030 18:28:52.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.102" level="INFO">VALUE: [0.0006782079999999996, 0.0006780699999999994, 0.0006780829999999995, 0.0006781109999999986, 0.0006780279999999972, 0.0006780830000000029, 0.0006780979999999985, 0.0006780829999999995, 0.000678096999999999, 0.0006781110000000021, 0.0006780689999999999, 0.0006780840000000024, 0.000678096999999999, 0.0006780979999999985, 0.0006780269999999977, 0.0006780829999999995, 0.0006780140000000011, 0.0006780689999999999, 0.000678098000000002, 0.0006780830000000029, 0.0006780279999999972, 0.000678082999999996, 0.000678082999999996, 0.0006781250000000016, 0.0006780689999999964, 0.0006781390000000012, 0.0006781530000000008, 0.0006780830000000029, 0.0006780830000000029, 0.0006780970000000025, 0.0006780549999999969, 0.0006780970000000025, 0.000678098000000002, 0.0006780549999999969, 0.000678082999999996, 0.0006780969999999956, 0.0006781110000000021, 0.0006781250000000016, 0.0006780830000000029, 0.0006780970000000025, 0.0006780830000000029, 0.0006781110000000021, 0.0006780970000000025, 0.0006780970000000025, 0.000678097999999995, 0.0006781109999999951, 0.0006781119999999946, 0.000678082999999996, 0.0006780700000000028, 0.0006780700000000028]</msg>
<status status="PASS" starttime="20201030 18:28:52.101" endtime="20201030 18:28:52.106"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.097" endtime="20201030 18:28:52.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.111" endtime="20201030 18:28:52.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.109" endtime="20201030 18:28:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.108" endtime="20201030 18:28:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.697" endtime="20201030 18:28:52.131"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:51.696" endtime="20201030 18:28:52.131"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.141" endtime="20201030 18:28:52.186"></status>
</kw>
<msg timestamp="20201030 18:28:52.186" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.140" endtime="20201030 18:28:52.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.189" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.187" endtime="20201030 18:28:52.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.190" endtime="20201030 18:28:52.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.137" endtime="20201030 18:28:52.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.134" endtime="20201030 18:28:52.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.199" endtime="20201030 18:28:52.485"></status>
</kw>
<msg timestamp="20201030 18:28:52.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.197" endtime="20201030 18:28:52.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.489" endtime="20201030 18:28:52.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.497" endtime="20201030 18:28:52.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.194" endtime="20201030 18:28:52.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.193" endtime="20201030 18:28:52.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:52.503" level="INFO">${PHILIP_RES} = [{'diff': 0.0007074029999999988}, {'diff': 0.000707236}, {'diff': 0.0007072919999999983}, {'diff': 0.0007073200000000009}, {'diff': 0.0007072499999999995}, {'diff': 0.0007072640000000026}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:28:52.500" endtime="20201030 18:28:52.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.508" level="INFO">${RESULT} = {'diff': [0.0007074029999999988, 0.000707236, 0.0007072919999999983, 0.0007073200000000009, 0.0007072499999999995, 0.0007072640000000026, 0.0007072639999999991, 0.0007072639999999991, 0.00070726399999...</msg>
<status status="PASS" starttime="20201030 18:28:52.504" endtime="20201030 18:28:52.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.512" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:52.511" endtime="20201030 18:28:52.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.515" level="INFO">VALUE: [0.0007074029999999988, 0.000707236, 0.0007072919999999983, 0.0007073200000000009, 0.0007072499999999995, 0.0007072640000000026, 0.0007072639999999991, 0.0007072639999999991, 0.0007072639999999991, 0.0007072220000000004, 0.0007072499999999995, 0.0007072640000000026, 0.0007072499999999995, 0.0007071809999999977, 0.0007072499999999995, 0.000707333999999997, 0.0007072499999999995, 0.0007072779999999987, 0.0007072499999999995, 0.0007072220000000004, 0.0007072500000000065, 0.0007072639999999991, 0.0007072629999999996, 0.0007072639999999991, 0.0007072499999999995, 0.0007072779999999987, 0.0007072499999999995, 0.0007072639999999991, 0.0007072499999999995, 0.0007072639999999991, 0.0007072639999999991, 0.0007072779999999987, 0.000707236, 0.0007073060000000048, 0.0007072910000000057, 0.0007072639999999991, 0.0007072639999999991, 0.0007072639999999991, 0.0007073199999999974, 0.0007072639999999991, 0.0007072639999999991, 0.0007072779999999987, 0.0007072639999999991, 0.0007072639999999991, 0.0007072499999999995, 0.0007072779999999987, 0.0007072499999999995, 0.000707236, 0.0007072779999999987, 0.0007072499999999995]</msg>
<status status="PASS" starttime="20201030 18:28:52.513" endtime="20201030 18:28:52.515"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.509" endtime="20201030 18:28:52.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.520" endtime="20201030 18:28:52.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.518" endtime="20201030 18:28:52.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.517" endtime="20201030 18:28:52.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.132" endtime="20201030 18:28:52.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.132" endtime="20201030 18:28:52.540"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.549" endtime="20201030 18:28:52.595"></status>
</kw>
<msg timestamp="20201030 18:28:52.596" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.547" endtime="20201030 18:28:52.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.598" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.597" endtime="20201030 18:28:52.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.599" endtime="20201030 18:28:52.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.545" endtime="20201030 18:28:52.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.543" endtime="20201030 18:28:52.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.608" endtime="20201030 18:28:52.909"></status>
</kw>
<msg timestamp="20201030 18:28:52.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017716903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.606" endtime="20201030 18:28:52.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017716903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018454042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:52.913" endtime="20201030 18:28:52.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.921" endtime="20201030 18:28:52.922"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.604" endtime="20201030 18:28:52.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.602" endtime="20201030 18:28:52.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:52.927" level="INFO">${PHILIP_RES} = [{'diff': 0.0007371390000000012}, {'diff': 0.0007370410000000008}, {'diff': 0.0007370269999999977}, {'diff': 0.0007370409999999973}, {'diff': 0.0007370410000000008}, {'diff': 0.0007370559999999998}, {...</msg>
<status status="PASS" starttime="20201030 18:28:52.924" endtime="20201030 18:28:52.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:52.931" level="INFO">${RESULT} = {'diff': [0.0007371390000000012, 0.0007370410000000008, 0.0007370269999999977, 0.0007370409999999973, 0.0007370410000000008, 0.0007370559999999998, 0.0007370699999999994, 0.0007370279999999972, 0.0007...</msg>
<status status="PASS" starttime="20201030 18:28:52.928" endtime="20201030 18:28:52.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.935" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:52.934" endtime="20201030 18:28:52.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:52.938" level="INFO">VALUE: [0.0007371390000000012, 0.0007370410000000008, 0.0007370269999999977, 0.0007370409999999973, 0.0007370410000000008, 0.0007370559999999998, 0.0007370699999999994, 0.0007370279999999972, 0.0007370559999999998, 0.0007370420000000003, 0.0007370970000000025, 0.0007370420000000003, 0.0007370410000000008, 0.0007369999999999981, 0.0007370410000000008, 0.0007370559999999998, 0.0007370280000000007, 0.0007370420000000003, 0.0007370139999999942, 0.0007370280000000007, 0.0007370559999999998, 0.0007370550000000003, 0.0007370270000000012, 0.0007370550000000003, 0.0007370410000000008, 0.0007370420000000003, 0.0007370420000000003, 0.0007370280000000007, 0.0007370559999999998, 0.0007370420000000003, 0.0007370829999999995, 0.0007370420000000003, 0.0007370550000000003, 0.0007370270000000012, 0.0007370140000000011, 0.0007369720000000024, 0.0007370420000000003, 0.0007370420000000003, 0.0007370420000000003, 0.0007370700000000063, 0.0007370280000000007, 0.0007370280000000007, 0.0007370280000000007, 0.0007370130000000016, 0.000736986000000002, 0.0007370280000000007, 0.0007370559999999998, 0.0007370420000000003, 0.0007370420000000003, 0.0007370420000000003]</msg>
<status status="PASS" starttime="20201030 18:28:52.937" endtime="20201030 18:28:52.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.932" endtime="20201030 18:28:52.939"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:52.943" endtime="20201030 18:28:52.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.941" endtime="20201030 18:28:52.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.940" endtime="20201030 18:28:52.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.541" endtime="20201030 18:28:52.963"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.541" endtime="20201030 18:28:52.964"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:52.972" endtime="20201030 18:28:53.022"></status>
</kw>
<msg timestamp="20201030 18:28:53.022" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:52.970" endtime="20201030 18:28:53.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.025" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.023" endtime="20201030 18:28:53.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.026" endtime="20201030 18:28:53.027"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.968" endtime="20201030 18:28:53.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.966" endtime="20201030 18:28:53.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.035" endtime="20201030 18:28:53.320"></status>
</kw>
<msg timestamp="20201030 18:28:53.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.033" endtime="20201030 18:28:53.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018621583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.324" endtime="20201030 18:28:53.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.332" endtime="20201030 18:28:53.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.031" endtime="20201030 18:28:53.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.029" endtime="20201030 18:28:53.335"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:53.339" level="INFO">${PHILIP_RES} = [{'diff': 0.000767528}, {'diff': 0.000767430999999999}, {'diff': 0.0007674310000000024}, {'diff': 0.000767430000000003}, {'diff': 0.0007674159999999999}, {'diff': 0.0007674029999999998}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 18:28:53.336" endtime="20201030 18:28:53.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.343" level="INFO">${RESULT} = {'diff': [0.000767528, 0.000767430999999999, 0.0007674310000000024, 0.000767430000000003, 0.0007674159999999999, 0.0007674029999999998, 0.0007674169999999994, 0.0007674020000000004, 0.0007674159999999...</msg>
<status status="PASS" starttime="20201030 18:28:53.340" endtime="20201030 18:28:53.343"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.347" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:53.346" endtime="20201030 18:28:53.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.349" level="INFO">VALUE: [0.000767528, 0.000767430999999999, 0.0007674310000000024, 0.000767430000000003, 0.0007674159999999999, 0.0007674029999999998, 0.0007674169999999994, 0.0007674020000000004, 0.0007674159999999999, 0.0007674730000000012, 0.0007674029999999998, 0.0007674170000000029, 0.0007674159999999999, 0.0007674439999999991, 0.0007674169999999994, 0.000767430999999999, 0.0007674579999999986, 0.0007673469999999946, 0.0007674029999999998, 0.0007674169999999994, 0.0007674169999999994, 0.0007674159999999999, 0.0007674159999999999, 0.0007673890000000003, 0.0007674029999999998, 0.0007674169999999994, 0.0007674299999999995, 0.000767430999999999, 0.000767430999999999, 0.000767430999999999, 0.0007674300000000064, 0.0007674029999999998, 0.0007674029999999998, 0.0007674169999999994, 0.0007674169999999994, 0.0007674159999999999, 0.0007674169999999994, 0.0007674029999999998, 0.0007673750000000007, 0.0007674159999999999, 0.0007674299999999995, 0.000767332999999995, 0.0007674029999999998, 0.0007674169999999994, 0.0007674720000000052, 0.0007674169999999994, 0.0007674169999999994, 0.0007674029999999998, 0.0007674159999999999, 0.0007674159999999999]</msg>
<status status="PASS" starttime="20201030 18:28:53.348" endtime="20201030 18:28:53.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.344" endtime="20201030 18:28:53.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.355" endtime="20201030 18:28:53.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.354" endtime="20201030 18:28:53.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.353" endtime="20201030 18:28:53.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.964" endtime="20201030 18:28:53.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:52.964" endtime="20201030 18:28:53.376"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.384" endtime="20201030 18:28:53.435"></status>
</kw>
<msg timestamp="20201030 18:28:53.435" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.383" endtime="20201030 18:28:53.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.438" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.436" endtime="20201030 18:28:53.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.439" endtime="20201030 18:28:53.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.380" endtime="20201030 18:28:53.441"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.378" endtime="20201030 18:28:53.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.448" endtime="20201030 18:28:53.751"></status>
</kw>
<msg timestamp="20201030 18:28:53.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018424472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.446" endtime="20201030 18:28:53.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017625931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018424472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.755" endtime="20201030 18:28:53.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.763" endtime="20201030 18:28:53.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.444" endtime="20201030 18:28:53.765"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.442" endtime="20201030 18:28:53.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:53.769" level="INFO">${PHILIP_RES} = [{'diff': 0.0007985409999999998}, {'diff': 0.0007984310000000022}, {'diff': 0.0007984030000000031}, {'diff': 0.0007984170000000027}, {'diff': 0.0007984160000000032}, {'diff': 0.0007984159999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:28:53.766" endtime="20201030 18:28:53.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:53.774" level="INFO">${RESULT} = {'diff': [0.0007985409999999998, 0.0007984310000000022, 0.0007984030000000031, 0.0007984170000000027, 0.0007984160000000032, 0.0007984159999999997, 0.0007984029999999996, 0.000798389, 0.00079841699999...</msg>
<status status="PASS" starttime="20201030 18:28:53.770" endtime="20201030 18:28:53.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.779" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:53.778" endtime="20201030 18:28:53.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.781" level="INFO">VALUE: [0.0007985409999999998, 0.0007984310000000022, 0.0007984030000000031, 0.0007984170000000027, 0.0007984160000000032, 0.0007984159999999997, 0.0007984029999999996, 0.000798389, 0.0007984169999999992, 0.0007984169999999992, 0.0007984299999999993, 0.0007984169999999992, 0.0007984029999999996, 0.0007984029999999996, 0.0007984029999999996, 0.0007984159999999997, 0.0007984729999999975, 0.0007984310000000022, 0.000798374999999997, 0.0007984169999999957, 0.0007984160000000032, 0.0007984029999999961, 0.0007984170000000027, 0.0007984169999999957, 0.0007984720000000015, 0.0007984029999999961, 0.0007983609999999974, 0.0007984029999999961, 0.0007984030000000031, 0.0007984159999999962, 0.0007984030000000031, 0.0007983329999999983, 0.0007984310000000022, 0.0007984169999999957, 0.0007984160000000032, 0.0007984159999999962, 0.0007983890000000035, 0.0007984169999999957, 0.0007984310000000022, 0.0007984439999999954, 0.0007983890000000035, 0.0007984310000000022, 0.0007984030000000031, 0.0007983889999999966, 0.0007984160000000032, 0.0007984160000000032, 0.0007984310000000022, 0.0007984170000000027, 0.0007984029999999961, 0.0007984020000000036]</msg>
<status status="PASS" starttime="20201030 18:28:53.780" endtime="20201030 18:28:53.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.775" endtime="20201030 18:28:53.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:53.786" endtime="20201030 18:28:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.785" endtime="20201030 18:28:53.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.783" endtime="20201030 18:28:53.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.377" endtime="20201030 18:28:53.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.376" endtime="20201030 18:28:53.807"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.817" endtime="20201030 18:28:53.869"></status>
</kw>
<msg timestamp="20201030 18:28:53.870" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.815" endtime="20201030 18:28:53.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:53.872" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:53.871" endtime="20201030 18:28:53.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.873" endtime="20201030 18:28:53.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.812" endtime="20201030 18:28:53.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.810" endtime="20201030 18:28:53.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:53.883" endtime="20201030 18:28:54.172"></status>
</kw>
<msg timestamp="20201030 18:28:54.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018942958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:53.882" endtime="20201030 18:28:54.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018942958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019773097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.176" endtime="20201030 18:28:54.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.185" endtime="20201030 18:28:54.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.879" endtime="20201030 18:28:54.187"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.877" endtime="20201030 18:28:54.187"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:54.191" level="INFO">${PHILIP_RES} = [{'diff': 0.0008301390000000006}, {'diff': 0.0008299999999999974}, {'diff': 0.0008299720000000017}, {'diff': 0.000830028}, {'diff': 0.0008299999999999974}, {'diff': 0.0008300140000000004}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 18:28:54.188" endtime="20201030 18:28:54.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.195" level="INFO">${RESULT} = {'diff': [0.0008301390000000006, 0.0008299999999999974, 0.0008299720000000017, 0.000830028, 0.0008299999999999974, 0.0008300140000000004, 0.000830028, 0.0008299860000000013, 0.0008300140000000004, 0.0...</msg>
<status status="PASS" starttime="20201030 18:28:54.192" endtime="20201030 18:28:54.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.199" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:54.198" endtime="20201030 18:28:54.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.202" level="INFO">VALUE: [0.0008301390000000006, 0.0008299999999999974, 0.0008299720000000017, 0.000830028, 0.0008299999999999974, 0.0008300140000000004, 0.000830028, 0.0008299860000000013, 0.0008300140000000004, 0.000830013999999997, 0.0008300140000000004, 0.0008300000000000009, 0.0008299999999999974, 0.0008299859999999978, 0.0008299999999999974, 0.0008300130000000044, 0.000830013999999997, 0.0008299999999999974, 0.000830027000000004, 0.000830027000000004, 0.0008300279999999965, 0.0008300280000000035, 0.0008300140000000039, 0.0008299999999999974, 0.0008300140000000039, 0.0008300280000000035, 0.000830013999999997, 0.000830013999999997, 0.0008300280000000035, 0.000830013999999997, 0.0008299719999999983, 0.0008300140000000039, 0.000830013999999997, 0.0008299999999999974, 0.0008300140000000039, 0.0008299999999999974, 0.000830013999999997, 0.0008300280000000035, 0.0008300140000000039, 0.0008300269999999971, 0.0008299999999999974, 0.000830027000000004, 0.0008300269999999971, 0.0008300000000000043, 0.0008300280000000035, 0.0008299999999999974, 0.0008299999999999974, 0.0008300140000000039, 0.0008299859999999978, 0.0008300280000000035]</msg>
<status status="PASS" starttime="20201030 18:28:54.201" endtime="20201030 18:28:54.203"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.196" endtime="20201030 18:28:54.203"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.207" endtime="20201030 18:28:54.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.205" endtime="20201030 18:28:54.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.204" endtime="20201030 18:28:54.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.808" endtime="20201030 18:28:54.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:53.807" endtime="20201030 18:28:54.228"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.236" endtime="20201030 18:28:54.291"></status>
</kw>
<msg timestamp="20201030 18:28:54.291" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.234" endtime="20201030 18:28:54.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.294" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.292" endtime="20201030 18:28:54.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.295" endtime="20201030 18:28:54.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.232" endtime="20201030 18:28:54.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.230" endtime="20201030 18:28:54.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.304" endtime="20201030 18:28:54.603"></status>
</kw>
<msg timestamp="20201030 18:28:54.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:54.302" endtime="20201030 18:28:54.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018543417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01940575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:28:54.607" endtime="20201030 18:28:54.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.615" endtime="20201030 18:28:54.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.300" endtime="20201030 18:28:54.617"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.298" endtime="20201030 18:28:54.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:54.621" level="INFO">${PHILIP_RES} = [{'diff': 0.0008623329999999998}, {'diff': 0.0008622079999999997}, {'diff': 0.0008621949999999996}, {'diff': 0.0008622220000000028}, {'diff': 0.0008622219999999993}, {'diff': 0.0008622079999999997}, {...</msg>
<status status="PASS" starttime="20201030 18:28:54.618" endtime="20201030 18:28:54.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:54.625" level="INFO">${RESULT} = {'diff': [0.0008623329999999998, 0.0008622079999999997, 0.0008621949999999996, 0.0008622220000000028, 0.0008622219999999993, 0.0008622079999999997, 0.0008622229999999988, 0.0008622219999999993, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:28:54.622" endtime="20201030 18:28:54.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.630" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:54.629" endtime="20201030 18:28:54.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.632" level="INFO">VALUE: [0.0008623329999999998, 0.0008622079999999997, 0.0008621949999999996, 0.0008622220000000028, 0.0008622219999999993, 0.0008622079999999997, 0.0008622229999999988, 0.0008622219999999993, 0.0008622079999999997, 0.0008622079999999997, 0.0008622500000000019, 0.0008621389999999979, 0.0008622220000000028, 0.0008622219999999993, 0.0008621809999999966, 0.0008622220000000028, 0.0008622220000000028, 0.0008622080000000032, 0.0008622089999999957, 0.0008622219999999958, 0.0008622080000000032, 0.0008622220000000028, 0.0008622230000000022, 0.0008621809999999966, 0.0008622360000000023, 0.0008622220000000028, 0.0008621249999999983, 0.0008622779999999941, 0.0008622220000000028, 0.0008622500000000019, 0.0008622220000000028, 0.0008622219999999958, 0.0008621389999999979, 0.0008622360000000023, 0.000862167000000004, 0.0008622079999999963, 0.0008622639999999945, 0.0008622230000000022, 0.0008622500000000019, 0.0008622640000000015, 0.0008622079999999963, 0.0008621799999999971, 0.0008622220000000028, 0.0008622230000000022, 0.0008621939999999967, 0.0008622229999999953, 0.0008621530000000044, 0.0008622080000000032, 0.0008621799999999902, 0.0008622230000000092]</msg>
<status status="PASS" starttime="20201030 18:28:54.631" endtime="20201030 18:28:54.634"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.626" endtime="20201030 18:28:54.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:54.638" endtime="20201030 18:28:54.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.636" endtime="20201030 18:28:54.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.635" endtime="20201030 18:28:54.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.228" endtime="20201030 18:28:54.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.228" endtime="20201030 18:28:54.659"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.668" endtime="20201030 18:28:54.725"></status>
</kw>
<msg timestamp="20201030 18:28:54.725" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.666" endtime="20201030 18:28:54.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:54.728" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:54.727" endtime="20201030 18:28:54.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.729" endtime="20201030 18:28:54.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.663" endtime="20201030 18:28:54.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.661" endtime="20201030 18:28:54.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:54.738" endtime="20201030 18:28:55.024"></status>
</kw>
<msg timestamp="20201030 18:28:55.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019348847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:54.737" endtime="20201030 18:28:55.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018453708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019348847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.028" endtime="20201030 18:28:55.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.036" endtime="20201030 18:28:55.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.734" endtime="20201030 18:28:55.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.732" endtime="20201030 18:28:55.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:55.042" level="INFO">${PHILIP_RES} = [{'diff': 0.0008951389999999997}, {'diff': 0.0008950139999999995}, {'diff': 0.0008950420000000021}, {'diff': 0.0008950689999999983}, {'diff': 0.0008950279999999991}, {'diff': 0.0008950139999999995}, {...</msg>
<status status="PASS" starttime="20201030 18:28:55.039" endtime="20201030 18:28:55.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.047" level="INFO">${RESULT} = {'diff': [0.0008951389999999997, 0.0008950139999999995, 0.0008950420000000021, 0.0008950689999999983, 0.0008950279999999991, 0.0008950139999999995, 0.0008950280000000026, 0.0008950279999999991, 0.0008...</msg>
<status status="PASS" starttime="20201030 18:28:55.043" endtime="20201030 18:28:55.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.051" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:55.050" endtime="20201030 18:28:55.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.054" level="INFO">VALUE: [0.0008951389999999997, 0.0008950139999999995, 0.0008950420000000021, 0.0008950689999999983, 0.0008950279999999991, 0.0008950139999999995, 0.0008950280000000026, 0.0008950279999999991, 0.0008950279999999991, 0.000895, 0.0008950269999999996, 0.0008950280000000026, 0.0008950139999999995, 0.0008950279999999991, 0.0008950839999999974, 0.0008950419999999987, 0.0008950279999999991, 0.000895028000000006, 0.000895028000000006, 0.0008950419999999987, 0.0008950269999999996, 0.0008950139999999995, 0.0008950279999999991, 0.0008950279999999991, 0.0008950139999999995, 0.0008950139999999995, 0.0008950560000000052, 0.0008950409999999992, 0.0008950139999999995, 0.0008950559999999982, 0.0008950279999999991, 0.0008950419999999987, 0.0008950419999999987, 0.0008950419999999987, 0.0008950139999999995, 0.000895028000000006, 0.000895, 0.000895110999999997, 0.0008950419999999987, 0.0008949450000000012, 0.0008950139999999995, 0.0008950279999999991, 0.000895, 0.0008950139999999995, 0.0008950129999999931, 0.0008950279999999991, 0.0008950139999999995, 0.0008950409999999992, 0.0008950279999999922, 0.0008950419999999987]</msg>
<status status="PASS" starttime="20201030 18:28:55.053" endtime="20201030 18:28:55.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.048" endtime="20201030 18:28:55.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.059" endtime="20201030 18:28:55.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.057" endtime="20201030 18:28:55.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.056" endtime="20201030 18:28:55.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.659" endtime="20201030 18:28:55.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:54.659" endtime="20201030 18:28:55.080"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.088" endtime="20201030 18:28:55.147"></status>
</kw>
<msg timestamp="20201030 18:28:55.148" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.087" endtime="20201030 18:28:55.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.150" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:28:55.149" endtime="20201030 18:28:55.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.151" endtime="20201030 18:28:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.084" endtime="20201030 18:28:55.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.082" endtime="20201030 18:28:55.154"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.160" endtime="20201030 18:28:55.465"></status>
</kw>
<msg timestamp="20201030 18:28:55.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.159" endtime="20201030 18:28:55.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017744611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018673181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:28:55.469" endtime="20201030 18:28:55.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:28:55.477" endtime="20201030 18:28:55.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.156" endtime="20201030 18:28:55.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.154" endtime="20201030 18:28:55.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 18:28:55.483" level="INFO">${PHILIP_RES} = [{'diff': 0.0009285700000000001}, {'diff': 0.0009284580000000001}, {'diff': 0.0009284300000000009}, {'diff': 0.0009284170000000008}, {'diff': 0.000928459000000003}, {'diff': 0.0009284440000000005}, {'...</msg>
<status status="PASS" starttime="20201030 18:28:55.480" endtime="20201030 18:28:55.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:28:55.487" level="INFO">${RESULT} = {'diff': [0.0009285700000000001, 0.0009284580000000001, 0.0009284300000000009, 0.0009284170000000008, 0.000928459000000003, 0.0009284440000000005, 0.0009284580000000001, 0.0009285140000000018, 0.00092...</msg>
<status status="PASS" starttime="20201030 18:28:55.484" endtime="20201030 18:28:55.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.492" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 18:28:55.491" endtime="20201030 18:28:55.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.494" level="INFO">VALUE: [0.0009285700000000001, 0.0009284580000000001, 0.0009284300000000009, 0.0009284170000000008, 0.000928459000000003, 0.0009284440000000005, 0.0009284580000000001, 0.0009285140000000018, 0.0009284870000000021, 0.0009284440000000005, 0.000928445, 0.0009284310000000004, 0.0009284580000000001, 0.0009283750000000021, 0.000928445, 0.0009284580000000001, 0.0009283750000000021, 0.0009284589999999995, 0.0009284580000000001, 0.0009284300000000009, 0.0009284580000000001, 0.0009284309999999935, 0.0009284440000000005, 0.0009284859999999992, 0.0009284310000000004, 0.0009284440000000005, 0.0009284170000000008, 0.0009284580000000001, 0.0009284729999999991, 0.0009284999999999988, 0.0009284439999999936, 0.0009284589999999995, 0.0009284310000000004, 0.0009284439999999936, 0.000928445, 0.000928445, 0.0009284719999999996, 0.0009284580000000001, 0.000928445, 0.0009284719999999996, 0.0009284440000000005, 0.000928445, 0.0009284719999999996, 0.0009284440000000005, 0.000928445, 0.000928444999999993, 0.000928429999999994, 0.0009284579999999931, 0.0009284310000000073, 0.000928445]</msg>
<status status="PASS" starttime="20201030 18:28:55.493" endtime="20201030 18:28:55.495"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.488" endtime="20201030 18:28:55.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.499" endtime="20201030 18:28:55.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.497" endtime="20201030 18:28:55.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.496" endtime="20201030 18:28:55.519"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.081" endtime="20201030 18:28:55.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.080" endtime="20201030 18:28:55.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:35.433" endtime="20201030 18:28:55.520"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:55.524" endtime="20201030 18:28:55.543"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.522" endtime="20201030 18:28:55.544"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.521" endtime="20201030 18:28:55.544"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 18:28:28.140" endtime="20201030 18:28:55.544" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:27:37.274" endtime="20201030 18:28:55.554"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:28:55.627" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:28:55.636" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:28:56.820" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:28:55.626" endtime="20201030 18:28:56.821"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:28:59.824" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:28:56.822" endtime="20201030 18:28:59.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.625" endtime="20201030 18:28:59.826"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:28:59.830" endtime="20201030 18:29:00.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:59.828" endtime="20201030 18:29:00.055"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:00.067" endtime="20201030 18:29:03.088"></status>
</kw>
<msg timestamp="20201030 18:29:03.089" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:00.066" endtime="20201030 18:29:03.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.092" endtime="20201030 18:29:03.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:03.101" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:03.097" endtime="20201030 18:29:03.102"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:00.063" endtime="20201030 18:29:03.103"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:00.061" endtime="20201030 18:29:03.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.060" endtime="20201030 18:29:03.105"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:03.112" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:03.111" endtime="20201030 18:29:03.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.107" endtime="20201030 18:29:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.059" endtime="20201030 18:29:03.116"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.058" endtime="20201030 18:29:03.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.118" endtime="20201030 18:29:03.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.057" endtime="20201030 18:29:03.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.125" endtime="20201030 18:29:03.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:00.055" endtime="20201030 18:29:03.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:28:55.623" endtime="20201030 18:29:03.130"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:03.142" endtime="20201030 18:29:03.163"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.139" endtime="20201030 18:29:03.164"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:03.191" endtime="20201030 18:29:06.215"></status>
</kw>
<msg timestamp="20201030 18:29:06.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:03.188" endtime="20201030 18:29:06.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.221" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.218" endtime="20201030 18:29:06.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.227" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:06.223" endtime="20201030 18:29:06.228"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:03.183" endtime="20201030 18:29:06.229"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:03.178" endtime="20201030 18:29:06.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.175" endtime="20201030 18:29:06.231"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:06.238" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:06.237" endtime="20201030 18:29:06.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.232" endtime="20201030 18:29:06.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.173" endtime="20201030 18:29:06.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.172" endtime="20201030 18:29:06.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.242" endtime="20201030 18:29:06.245"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.169" endtime="20201030 18:29:06.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.166" endtime="20201030 18:29:06.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:03.136" endtime="20201030 18:29:06.247"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.269" endtime="20201030 18:29:06.286"></status>
</kw>
<msg timestamp="20201030 18:29:06.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.266" endtime="20201030 18:29:06.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.290" endtime="20201030 18:29:06.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.294" endtime="20201030 18:29:06.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.258" endtime="20201030 18:29:06.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.254" endtime="20201030 18:29:06.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.304" endtime="20201030 18:29:06.601"></status>
</kw>
<msg timestamp="20201030 18:29:06.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.118490042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.302" endtime="20201030 18:29:06.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118487458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.118490042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.606" endtime="20201030 18:29:06.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.614" endtime="20201030 18:29:06.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.300" endtime="20201030 18:29:06.616"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.298" endtime="20201030 18:29:06.617"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:06.621" level="INFO">${RESULT} = [{'diff': 2.5839999997501195e-06}, {'diff': 3.2769999998016885e-06}, {'diff': 2.5830000001114684e-06}, {'diff': 2.5830000001114684e-06}, {'diff': 3.2640000000583314e-06}, {'diff': 2.5840000001942087e-...</msg>
<status status="PASS" starttime="20201030 18:29:06.618" endtime="20201030 18:29:06.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:06.625" level="INFO">${ACCURACY} = {'diff': [2.5839999997501195e-06, 3.2769999998016885e-06, 2.5830000001114684e-06, 2.5830000001114684e-06, 3.2640000000583314e-06, 2.5840000001942087e-06, 2.569999999924022e-06, 3.277999999884429e-06, ...</msg>
<status status="PASS" starttime="20201030 18:29:06.622" endtime="20201030 18:29:06.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.630" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 18:29:06.629" endtime="20201030 18:29:06.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.633" level="INFO">VALUE: [2.5839999997501195e-06, 3.2769999998016885e-06, 2.5830000001114684e-06, 2.5830000001114684e-06, 3.2640000000583314e-06, 2.5840000001942087e-06, 2.569999999924022e-06, 3.277999999884429e-06, 3.2920000001546157e-06, 2.596999999937566e-06, 2.9450000003095056e-06, 2.582999999667379e-06, 2.5830000001114684e-06, 2.5839999997501195e-06, 2.9449999998654164e-06, 2.5830000001114684e-06, 2.986000000149147e-06, 2.9299999999565784e-06, 2.6529999996860454e-06, 2.569999999924022e-06, 2.5830000001114684e-06, 2.986000000149147e-06, 2.8610000000206526e-06, 2.5689999998412816e-06, 2.9029999999430345e-06, 2.9299999999565784e-06, 3.2640000000583314e-06, 2.596999999937566e-06, 3.2640000000583314e-06, 2.639000000304037e-06, 3.262999999975591e-06, 2.9299999999565784e-06, 2.916000000130481e-06, 2.931000000039319e-06, 2.931000000039319e-06, 3.277999999884429e-06, 2.5840000001942087e-06, 3.2770000002457778e-06, 2.9299999999565784e-06, 3.263999999614242e-06, 2.569000000285371e-06, 2.5839999997501195e-06, 3.2499999997881446e-06, 2.582999999667379e-06, 2.582999999667379e-06, 2.986000000149147e-06, 2.931000000039319e-06, 2.9170000002132213e-06, 2.5830000001114684e-06, 3.262999999975591e-06]</msg>
<status status="PASS" starttime="20201030 18:29:06.632" endtime="20201030 18:29:06.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.626" endtime="20201030 18:29:06.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:06.638" endtime="20201030 18:29:06.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.636" endtime="20201030 18:29:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.635" endtime="20201030 18:29:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.251" endtime="20201030 18:29:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.250" endtime="20201030 18:29:06.658"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.667" endtime="20201030 18:29:06.681"></status>
</kw>
<msg timestamp="20201030 18:29:06.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.665" endtime="20201030 18:29:06.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:06.682" endtime="20201030 18:29:06.685"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.685" endtime="20201030 18:29:06.687"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.663" endtime="20201030 18:29:06.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.661" endtime="20201030 18:29:06.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.694" endtime="20201030 18:29:06.984"></status>
</kw>
<msg timestamp="20201030 18:29:06.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.693" endtime="20201030 18:29:06.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:06.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019535444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:06.988" endtime="20201030 18:29:06.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:06.997" endtime="20201030 18:29:06.999"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.690" endtime="20201030 18:29:07.001"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.689" endtime="20201030 18:29:07.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.012" level="INFO">${RESULT} = [{'diff': 3.625000000000156e-06}, {'diff': 4.333000000002196e-06}, {'diff': 3.9449999999982555e-06}, {'diff': 4.318999999999157e-06}, {'diff': 3.986000000000961e-06}, {'diff': 3.665999999999392e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:07.004" endtime="20201030 18:29:07.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.026" level="INFO">${ACCURACY} = {'diff': [3.625000000000156e-06, 4.333000000002196e-06, 3.9449999999982555e-06, 4.318999999999157e-06, 3.986000000000961e-06, 3.665999999999392e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.958...</msg>
<status status="PASS" starttime="20201030 18:29:07.015" endtime="20201030 18:29:07.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.038" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.035" endtime="20201030 18:29:07.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.045" level="INFO">VALUE: [3.625000000000156e-06, 4.333000000002196e-06, 3.9449999999982555e-06, 4.318999999999157e-06, 3.986000000000961e-06, 3.665999999999392e-06, 3.973000000000865e-06, 3.972000000001391e-06, 3.958000000001821e-06, 3.958000000001821e-06, 4.3199999999986305e-06, 3.625000000000156e-06, 3.972000000001391e-06, 3.611000000000586e-06, 3.625000000000156e-06, 4.333000000002196e-06, 4.304999999999587e-06, 3.5699999999978804e-06, 4.041999999999241e-06, 4.304999999999587e-06, 3.973000000000865e-06, 4.304999999999587e-06, 4.000000000000531e-06, 3.971999999997922e-06, 3.971999999997922e-06, 3.611000000000586e-06, 4.305999999999061e-06, 3.957999999998352e-06, 3.972000000001391e-06, 3.611000000000586e-06, 4.027999999999671e-06, 3.957999999998352e-06, 3.971999999997922e-06, 4.304999999999587e-06, 4.291999999999491e-06, 3.958000000001821e-06, 3.972000000001391e-06, 4.3199999999986305e-06, 3.625000000000156e-06, 3.5839999999974503e-06, 3.611000000000586e-06, 3.972000000001391e-06, 3.972999999997395e-06, 4.3339999999982e-06, 3.958000000001821e-06, 4.33400000000167e-06, 3.972000000001391e-06, 3.611000000000586e-06, 3.625000000000156e-06, 3.972000000001391e-06]</msg>
<status status="PASS" starttime="20201030 18:29:07.041" endtime="20201030 18:29:07.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.028" endtime="20201030 18:29:07.049"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.057" endtime="20201030 18:29:07.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.054" endtime="20201030 18:29:07.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.051" endtime="20201030 18:29:07.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.659" endtime="20201030 18:29:07.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.659" endtime="20201030 18:29:07.082"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.100" endtime="20201030 18:29:07.116"></status>
</kw>
<msg timestamp="20201030 18:29:07.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.097" endtime="20201030 18:29:07.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.118" endtime="20201030 18:29:07.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.120" endtime="20201030 18:29:07.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.091" endtime="20201030 18:29:07.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.087" endtime="20201030 18:29:07.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.129" endtime="20201030 18:29:07.415"></status>
</kw>
<msg timestamp="20201030 18:29:07.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033248014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033253375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.128" endtime="20201030 18:29:07.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033248014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033253375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.420" endtime="20201030 18:29:07.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.428" endtime="20201030 18:29:07.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.125" endtime="20201030 18:29:07.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.123" endtime="20201030 18:29:07.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.434" level="INFO">${RESULT} = [{'diff': 5.361000000002336e-06}, {'diff': 4.639000000000726e-06}, {'diff': 4.693999999999532e-06}, {'diff': 5.347000000002766e-06}, {'diff': 4.971999999998922e-06}, {'diff': 5.013000000005097e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:07.431" endtime="20201030 18:29:07.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.439" level="INFO">${ACCURACY} = {'diff': [5.361000000002336e-06, 4.639000000000726e-06, 4.693999999999532e-06, 5.347000000002766e-06, 4.971999999998922e-06, 5.013000000005097e-06, 5.417000000000616e-06, 4.9999999999980616e-06, 5.332...</msg>
<status status="PASS" starttime="20201030 18:29:07.435" endtime="20201030 18:29:07.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.443" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.442" endtime="20201030 18:29:07.443"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.446" level="INFO">VALUE: [5.361000000002336e-06, 4.639000000000726e-06, 4.693999999999532e-06, 5.347000000002766e-06, 4.971999999998922e-06, 5.013000000005097e-06, 5.417000000000616e-06, 4.9999999999980616e-06, 5.332999999996257e-06, 4.666999999999866e-06, 5.347000000002766e-06, 4.638999999993787e-06, 4.957999999999352e-06, 5.34800000000224e-06, 4.667000000006805e-06, 4.9999999999980616e-06, 4.639000000000726e-06, 4.666999999999866e-06, 4.639000000000726e-06, 4.666999999999866e-06, 5.347000000002766e-06, 4.639000000000726e-06, 5.360999999995397e-06, 5.346999999995827e-06, 4.985999999998492e-06, 4.639000000000726e-06, 4.985999999998492e-06, 4.9999999999980616e-06, 4.666000000000392e-06, 5.04200000000371e-06, 4.9999999999980616e-06, 4.666999999999866e-06, 5.0000000000050004e-06, 4.9999999999980616e-06, 5.347000000002766e-06, 4.985999999998492e-06, 5.01400000000457e-06, 4.666999999999866e-06, 5.3189999999966875e-06, 5.333000000003196e-06, 5.0139999999976315e-06, 5.08400000000242e-06, 5.319999999996161e-06, 5.0139999999976315e-06, 5.360999999995397e-06, 5.2639999999978815e-06, 5.347999999995301e-06, 4.9999999999980616e-06, 5.36200000000181e-06, 4.653000000000296e-06]</msg>
<status status="PASS" starttime="20201030 18:29:07.444" endtime="20201030 18:29:07.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.440" endtime="20201030 18:29:07.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.450" endtime="20201030 18:29:07.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.449" endtime="20201030 18:29:07.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.448" endtime="20201030 18:29:07.470"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.084" endtime="20201030 18:29:07.471"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.083" endtime="20201030 18:29:07.471"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.481" endtime="20201030 18:29:07.494"></status>
</kw>
<msg timestamp="20201030 18:29:07.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.479" endtime="20201030 18:29:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.495" endtime="20201030 18:29:07.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.498" endtime="20201030 18:29:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.475" endtime="20201030 18:29:07.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.473" endtime="20201030 18:29:07.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.507" endtime="20201030 18:29:07.789"></status>
</kw>
<msg timestamp="20201030 18:29:07.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.505" endtime="20201030 18:29:07.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020834042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020839736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.794" endtime="20201030 18:29:07.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.802" endtime="20201030 18:29:07.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.503" endtime="20201030 18:29:07.805"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.501" endtime="20201030 18:29:07.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:07.811" level="INFO">${RESULT} = [{'diff': 5.694000000000532e-06}, {'diff': 6.431000000001186e-06}, {'diff': 6.333000000000727e-06}, {'diff': 5.681000000000436e-06}, {'diff': 6.0279999999982015e-06}, {'diff': 6.041999999997771e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:07.807" endtime="20201030 18:29:07.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:07.816" level="INFO">${ACCURACY} = {'diff': [5.694000000000532e-06, 6.431000000001186e-06, 6.333000000000727e-06, 5.681000000000436e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 5.7089999999995755e-06, 5.333000000003196e-06, 5.69...</msg>
<status status="PASS" starttime="20201030 18:29:07.812" endtime="20201030 18:29:07.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.822" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 18:29:07.820" endtime="20201030 18:29:07.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.826" level="INFO">VALUE: [5.694000000000532e-06, 6.431000000001186e-06, 6.333000000000727e-06, 5.681000000000436e-06, 6.0279999999982015e-06, 6.041999999997771e-06, 5.7089999999995755e-06, 5.333000000003196e-06, 5.694000000000532e-06, 6.320000000000631e-06, 6.028000000001671e-06, 6.083000000000477e-06, 6.36199999999934e-06, 5.694000000000532e-06, 6.056000000000811e-06, 6.374999999999437e-06, 5.7089999999995755e-06, 6.388999999999007e-06, 5.332999999999727e-06, 6.028000000001671e-06, 5.332999999999727e-06, 5.694000000000532e-06, 5.695000000000006e-06, 5.666000000001392e-06, 5.332999999999727e-06, 5.695000000000006e-06, 5.679999999997493e-06, 6.374999999999437e-06, 5.735999999999242e-06, 6.056000000000811e-06, 6.028000000001671e-06, 5.653000000001296e-06, 5.694000000000532e-06, 6.054999999997868e-06, 5.680000000000962e-06, 5.374999999998437e-06, 5.999999999999062e-06, 5.694000000000532e-06, 5.681000000000436e-06, 5.681000000000436e-06, 5.346999999999297e-06, 6.069000000000907e-06, 6.056000000000811e-06, 5.7089999999995755e-06, 5.681000000000436e-06, 6.041999999997771e-06, 5.610999999999117e-06, 6.388999999999007e-06, 6.040999999998298e-06, 6.028000000001671e-06]</msg>
<status status="PASS" starttime="20201030 18:29:07.824" endtime="20201030 18:29:07.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.817" endtime="20201030 18:29:07.828"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:07.833" endtime="20201030 18:29:07.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.831" endtime="20201030 18:29:07.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.829" endtime="20201030 18:29:07.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.472" endtime="20201030 18:29:07.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.471" endtime="20201030 18:29:07.854"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.863" endtime="20201030 18:29:07.877"></status>
</kw>
<msg timestamp="20201030 18:29:07.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.862" endtime="20201030 18:29:07.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:07.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:07.879" endtime="20201030 18:29:07.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.881" endtime="20201030 18:29:07.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.859" endtime="20201030 18:29:07.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.857" endtime="20201030 18:29:07.884"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:07.890" endtime="20201030 18:29:08.174"></status>
</kw>
<msg timestamp="20201030 18:29:08.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:07.889" endtime="20201030 18:29:08.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019947056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.178" endtime="20201030 18:29:08.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.186" endtime="20201030 18:29:08.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.886" endtime="20201030 18:29:08.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.884" endtime="20201030 18:29:08.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.193" level="INFO">${RESULT} = [{'diff': 7.138999999999757e-06}, {'diff': 7.443999999998813e-06}, {'diff': 6.374999999999437e-06}, {'diff': 6.7369999999997154e-06}, {'diff': 6.7230000000001455e-06}, {'diff': 6.722000000000672e-06},...</msg>
<status status="PASS" starttime="20201030 18:29:08.190" endtime="20201030 18:29:08.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.198" level="INFO">${ACCURACY} = {'diff': [7.138999999999757e-06, 7.443999999998813e-06, 6.374999999999437e-06, 6.7369999999997154e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.374999999999437e-06, 7.4...</msg>
<status status="PASS" starttime="20201030 18:29:08.194" endtime="20201030 18:29:08.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.202" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.201" endtime="20201030 18:29:08.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.205" level="INFO">VALUE: [7.138999999999757e-06, 7.443999999998813e-06, 6.374999999999437e-06, 6.7369999999997154e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 6.7230000000001455e-06, 6.374999999999437e-06, 7.4169999999991465e-06, 7.013000000000158e-06, 7.125000000000187e-06, 7.068999999998438e-06, 6.708000000001102e-06, 7.068999999998438e-06, 7.125000000000187e-06, 6.736000000000242e-06, 7.430999999998716e-06, 6.7219999999972024e-06, 7.069000000001907e-06, 7.055999999998341e-06, 6.736000000000242e-06, 7.3469999999978275e-06, 7.431000000002186e-06, 7.084000000000951e-06, 7.0279999999992016e-06, 7.068999999998438e-06, 7.069000000001907e-06, 7.347000000001297e-06, 6.388999999999007e-06, 7.4169999999991465e-06, 7.4169999999991465e-06, 6.736000000000242e-06, 7.4169999999991465e-06, 7.000000000000062e-06, 7.084000000000951e-06, 6.681000000001436e-06, 6.736000000000242e-06, 7.084000000000951e-06, 6.736000000000242e-06, 7.070000000001381e-06, 6.374999999999437e-06, 6.735999999996772e-06, 6.7230000000001455e-06, 6.722000000000672e-06, 7.084000000000951e-06, 7.069000000001907e-06, 6.389000000002476e-06, 7.056000000001811e-06, 7.056000000001811e-06, 7.068999999998438e-06]</msg>
<status status="PASS" starttime="20201030 18:29:08.204" endtime="20201030 18:29:08.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.199" endtime="20201030 18:29:08.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.210" endtime="20201030 18:29:08.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.208" endtime="20201030 18:29:08.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.207" endtime="20201030 18:29:08.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.855" endtime="20201030 18:29:08.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:07.855" endtime="20201030 18:29:08.231"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.239" endtime="20201030 18:29:08.254"></status>
</kw>
<msg timestamp="20201030 18:29:08.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.238" endtime="20201030 18:29:08.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.255" endtime="20201030 18:29:08.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.258" endtime="20201030 18:29:08.259"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.235" endtime="20201030 18:29:08.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.233" endtime="20201030 18:29:08.260"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.267" endtime="20201030 18:29:08.554"></status>
</kw>
<msg timestamp="20201030 18:29:08.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019527278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.265" endtime="20201030 18:29:08.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019519472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019527278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.558" endtime="20201030 18:29:08.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.567" endtime="20201030 18:29:08.568"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.263" endtime="20201030 18:29:08.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.261" endtime="20201030 18:29:08.569"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.573" level="INFO">${RESULT} = [{'diff': 7.805999999999091e-06}, {'diff': 7.764000000000382e-06}, {'diff': 8.111000000001617e-06}, {'diff': 8.110999999998147e-06}, {'diff': 7.750000000000812e-06}, {'diff': 7.750000000000812e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:08.570" endtime="20201030 18:29:08.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.577" level="INFO">${ACCURACY} = {'diff': [7.805999999999091e-06, 7.764000000000382e-06, 8.111000000001617e-06, 8.110999999998147e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 8.110999999998147e-06, 7.7640...</msg>
<status status="PASS" starttime="20201030 18:29:08.574" endtime="20201030 18:29:08.578"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.582" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.581" endtime="20201030 18:29:08.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.584" level="INFO">VALUE: [7.805999999999091e-06, 7.764000000000382e-06, 8.111000000001617e-06, 8.110999999998147e-06, 7.750000000000812e-06, 7.750000000000812e-06, 7.764000000000382e-06, 8.110999999998147e-06, 7.764000000000382e-06, 8.458999999998856e-06, 7.4169999999991465e-06, 8.082999999999008e-06, 7.4169999999991465e-06, 7.750000000000812e-06, 8.457999999999383e-06, 8.125000000001187e-06, 7.417000000002616e-06, 8.471999999998953e-06, 7.777000000000478e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.195000000002506e-06, 7.764000000000382e-06, 7.750000000000812e-06, 8.444999999999286e-06, 7.415999999999673e-06, 7.777000000000478e-06, 7.375000000000437e-06, 8.472000000002422e-06, 8.056000000002811e-06, 8.430999999999716e-06, 7.429999999999243e-06, 8.445000000002756e-06, 7.4169999999991465e-06, 8.459000000002326e-06, 8.430000000000243e-06, 7.764000000000382e-06, 7.764000000000382e-06, 8.125000000001187e-06, 8.096999999998578e-06, 7.777000000000478e-06, 8.09800000000152e-06, 8.110999999998147e-06, 8.403000000000577e-06, 8.09800000000152e-06, 7.721999999998203e-06, 8.096999999998578e-06, 7.791999999999522e-06, 8.111000000001617e-06, 8.111000000001617e-06]</msg>
<status status="PASS" starttime="20201030 18:29:08.583" endtime="20201030 18:29:08.585"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.578" endtime="20201030 18:29:08.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.589" endtime="20201030 18:29:08.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.588" endtime="20201030 18:29:08.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.587" endtime="20201030 18:29:08.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.232" endtime="20201030 18:29:08.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.231" endtime="20201030 18:29:08.610"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.619" endtime="20201030 18:29:08.634"></status>
</kw>
<msg timestamp="20201030 18:29:08.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.617" endtime="20201030 18:29:08.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.636" endtime="20201030 18:29:08.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.638" endtime="20201030 18:29:08.640"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.615" endtime="20201030 18:29:08.641"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.613" endtime="20201030 18:29:08.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.647" endtime="20201030 18:29:08.933"></status>
</kw>
<msg timestamp="20201030 18:29:08.936" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.646" endtime="20201030 18:29:08.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:08.937" endtime="20201030 18:29:08.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.946" endtime="20201030 18:29:08.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.643" endtime="20201030 18:29:08.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.642" endtime="20201030 18:29:08.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:08.952" level="INFO">${RESULT} = [{'diff': 8.791000000001048e-06}, {'diff': 8.457999999999383e-06}, {'diff': 8.792000000000522e-06}, {'diff': 9.110999999999148e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.137999999998814e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:08.949" endtime="20201030 18:29:08.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:08.957" level="INFO">${ACCURACY} = {'diff': [8.791000000001048e-06, 8.457999999999383e-06, 8.792000000000522e-06, 9.110999999999148e-06, 9.499999999999093e-06, 9.137999999998814e-06, 9.166000000001423e-06, 9.138999999998287e-06, 8.4590...</msg>
<status status="PASS" starttime="20201030 18:29:08.953" endtime="20201030 18:29:08.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.961" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 18:29:08.960" endtime="20201030 18:29:08.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:08.964" level="INFO">VALUE: [8.791000000001048e-06, 8.457999999999383e-06, 8.792000000000522e-06, 9.110999999999148e-06, 9.499999999999093e-06, 9.137999999998814e-06, 9.166000000001423e-06, 9.138999999998287e-06, 8.459000000002326e-06, 9.153000000001327e-06, 9.139000000001757e-06, 9.125000000002187e-06, 9.485999999999523e-06, 8.778000000000952e-06, 9.500000000002562e-06, 8.806000000000092e-06, 9.139000000001757e-06, 9.139000000001757e-06, 9.485999999999523e-06, 9.180000000000993e-06, 8.487000000001466e-06, 8.791000000001048e-06, 9.137999999998814e-06, 8.792000000000522e-06, 9.139000000001757e-06, 8.805000000000618e-06, 8.457999999999383e-06, 8.443999999999813e-06, 9.167000000000897e-06, 8.805000000000618e-06, 9.499999999999093e-06, 9.125000000002187e-06, 9.137999999998814e-06, 9.137999999998814e-06, 9.542000000001272e-06, 8.819000000000188e-06, 9.207999999996663e-06, 8.764000000001382e-06, 8.444000000003282e-06, 8.457999999999383e-06, 8.443999999999813e-06, 8.777999999997482e-06, 9.139000000001757e-06, 9.499999999999093e-06, 8.764000000001382e-06, 9.153000000001327e-06, 9.096999999999578e-06, 8.819999999999661e-06, 9.167000000000897e-06, 9.152000000001853e-06]</msg>
<status status="PASS" starttime="20201030 18:29:08.962" endtime="20201030 18:29:08.965"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.958" endtime="20201030 18:29:08.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:08.970" endtime="20201030 18:29:08.989"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.968" endtime="20201030 18:29:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.967" endtime="20201030 18:29:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.611" endtime="20201030 18:29:08.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.610" endtime="20201030 18:29:08.990"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:08.999" endtime="20201030 18:29:09.013"></status>
</kw>
<msg timestamp="20201030 18:29:09.013" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:08.997" endtime="20201030 18:29:09.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.014" endtime="20201030 18:29:09.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.017" endtime="20201030 18:29:09.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.995" endtime="20201030 18:29:09.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.993" endtime="20201030 18:29:09.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.027" endtime="20201030 18:29:09.312"></status>
</kw>
<msg timestamp="20201030 18:29:09.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.025" endtime="20201030 18:29:09.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019605597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.316" endtime="20201030 18:29:09.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.324" endtime="20201030 18:29:09.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.022" endtime="20201030 18:29:09.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.021" endtime="20201030 18:29:09.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.331" level="INFO">${RESULT} = [{'diff': 1.0181000000001467e-05}, {'diff': 9.834000000000231e-06}, {'diff': 9.471999999999953e-06}, {'diff': 9.485999999999523e-06}, {'diff': 9.819000000001188e-06}, {'diff': 9.834000000000231e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:09.328" endtime="20201030 18:29:09.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.338" level="INFO">${ACCURACY} = {'diff': [1.0181000000001467e-05, 9.834000000000231e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.819000000001188e-06, 9.834000000000231e-06, 1.0179999999998524e-05, 9.847000000000328e-06, 9.49...</msg>
<status status="PASS" starttime="20201030 18:29:09.332" endtime="20201030 18:29:09.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.343" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.342" endtime="20201030 18:29:09.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.345" level="INFO">VALUE: [1.0181000000001467e-05, 9.834000000000231e-06, 9.471999999999953e-06, 9.485999999999523e-06, 9.819000000001188e-06, 9.834000000000231e-06, 1.0179999999998524e-05, 9.847000000000328e-06, 9.499999999999093e-06, 9.485999999999523e-06, 9.472999999999426e-06, 1.0513999999999663e-05, 9.860999999999898e-06, 9.556000000000842e-06, 9.527000000002228e-06, 1.0179999999998524e-05, 9.486999999998996e-06, 9.834000000000231e-06, 1.0179999999998524e-05, 1.0166999999998427e-05, 9.833000000000758e-06, 9.485999999999523e-06, 1.0181000000001467e-05, 9.486999999998996e-06, 9.805000000001618e-06, 9.833000000000758e-06, 1.0180999999997997e-05, 1.0179999999998524e-05, 9.888999999999037e-06, 9.833000000000758e-06, 9.487000000002466e-06, 1.0166999999998427e-05, 1.0165999999998954e-05, 9.458999999999856e-06, 9.834000000000231e-06, 9.834000000000231e-06, 9.833000000000758e-06, 9.860999999999898e-06, 1.0179999999998524e-05, 9.847000000000328e-06, 9.834000000000231e-06, 1.0194000000001563e-05, 1.0542000000002272e-05, 1.0194999999997567e-05, 1.0513999999999663e-05, 1.0542000000002272e-05, 9.499999999999093e-06, 9.832999999997288e-06, 1.0166999999998427e-05, 9.486000000002992e-06]</msg>
<status status="PASS" starttime="20201030 18:29:09.344" endtime="20201030 18:29:09.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.339" endtime="20201030 18:29:09.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.350" endtime="20201030 18:29:09.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.349" endtime="20201030 18:29:09.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.348" endtime="20201030 18:29:09.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.991" endtime="20201030 18:29:09.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:08.991" endtime="20201030 18:29:09.371"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.380" endtime="20201030 18:29:09.394"></status>
</kw>
<msg timestamp="20201030 18:29:09.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.378" endtime="20201030 18:29:09.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.396" endtime="20201030 18:29:09.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.398" endtime="20201030 18:29:09.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.375" endtime="20201030 18:29:09.400"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.373" endtime="20201030 18:29:09.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.407" endtime="20201030 18:29:09.694"></status>
</kw>
<msg timestamp="20201030 18:29:09.697" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.406" endtime="20201030 18:29:09.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019415375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.698" endtime="20201030 18:29:09.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.706" endtime="20201030 18:29:09.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.403" endtime="20201030 18:29:09.708"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.401" endtime="20201030 18:29:09.709"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:09.712" level="INFO">${RESULT} = [{'diff': 1.1236000000001273e-05}, {'diff': 1.1223000000001176e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.1277000000000509e-05}, {'diff': 1.1223000000001176e-05}, {'diff': 1.1207999999998663e-...</msg>
<status status="PASS" starttime="20201030 18:29:09.709" endtime="20201030 18:29:09.713"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:09.717" level="INFO">${ACCURACY} = {'diff': [1.1236000000001273e-05, 1.1223000000001176e-05, 1.1582999999999039e-05, 1.1277000000000509e-05, 1.1223000000001176e-05, 1.1207999999998663e-05, 1.0526999999999759e-05, 1.1193999999999094e-05...</msg>
<status status="PASS" starttime="20201030 18:29:09.713" endtime="20201030 18:29:09.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.721" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 18:29:09.720" endtime="20201030 18:29:09.722"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.724" level="INFO">VALUE: [1.1236000000001273e-05, 1.1223000000001176e-05, 1.1582999999999039e-05, 1.1277000000000509e-05, 1.1223000000001176e-05, 1.1207999999998663e-05, 1.0526999999999759e-05, 1.1193999999999094e-05, 1.0500000000000093e-05, 1.0875000000000468e-05, 1.0847000000001328e-05, 1.0486000000000523e-05, 1.1207999999998663e-05, 1.0527000000003228e-05, 1.0513999999999663e-05, 1.1193999999999094e-05, 1.1208000000002133e-05, 1.1221999999998233e-05, 1.1194000000002563e-05, 1.0832999999998288e-05, 1.1195000000002037e-05, 1.0874999999996998e-05, 1.0875000000000468e-05, 1.0528000000002702e-05, 1.0930999999998747e-05, 1.0902999999999607e-05, 1.1180999999998997e-05, 1.1221999999998233e-05, 1.1222000000001703e-05, 1.0861000000000898e-05, 1.0875000000000468e-05, 1.0874999999996998e-05, 1.0513999999999663e-05, 1.0874999999996998e-05, 1.0527999999999232e-05, 1.0875000000000468e-05, 1.0874999999996998e-05, 1.0875000000000468e-05, 1.1194999999998567e-05, 1.0861000000000898e-05, 1.1556000000002842e-05, 1.1292000000003022e-05, 1.0861000000000898e-05, 1.0860999999997428e-05, 1.0861000000000898e-05, 1.1236000000001273e-05, 1.1221999999998233e-05, 1.0889000000000038e-05, 1.1208000000002133e-05, 1.0875000000000468e-05]</msg>
<status status="PASS" starttime="20201030 18:29:09.722" endtime="20201030 18:29:09.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.718" endtime="20201030 18:29:09.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:09.729" endtime="20201030 18:29:09.748"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.727" endtime="20201030 18:29:09.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.726" endtime="20201030 18:29:09.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.372" endtime="20201030 18:29:09.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.371" endtime="20201030 18:29:09.750"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.758" endtime="20201030 18:29:09.774"></status>
</kw>
<msg timestamp="20201030 18:29:09.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.757" endtime="20201030 18:29:09.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:09.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:09.776" endtime="20201030 18:29:09.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.778" endtime="20201030 18:29:09.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.754" endtime="20201030 18:29:09.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.752" endtime="20201030 18:29:09.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:09.787" endtime="20201030 18:29:10.074"></status>
</kw>
<msg timestamp="20201030 18:29:10.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:09.786" endtime="20201030 18:29:10.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020314056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.078" endtime="20201030 18:29:10.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.086" endtime="20201030 18:29:10.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.783" endtime="20201030 18:29:10.088"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.782" endtime="20201030 18:29:10.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.093" level="INFO">${RESULT} = [{'diff': 1.2291000000001079e-05}, {'diff': 1.1930999999999747e-05}, {'diff': 1.1568999999999469e-05}, {'diff': 1.1916000000000704e-05}, {'diff': 1.1487000000000996e-05}, {'diff': 1.1917000000000177e-...</msg>
<status status="PASS" starttime="20201030 18:29:10.089" endtime="20201030 18:29:10.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.097" level="INFO">${ACCURACY} = {'diff': [1.2291000000001079e-05, 1.1930999999999747e-05, 1.1568999999999469e-05, 1.1916000000000704e-05, 1.1487000000000996e-05, 1.1917000000000177e-05, 1.1569999999998942e-05, 1.2264000000001413e-05...</msg>
<status status="PASS" starttime="20201030 18:29:10.094" endtime="20201030 18:29:10.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.101" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.100" endtime="20201030 18:29:10.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.104" level="INFO">VALUE: [1.2291000000001079e-05, 1.1930999999999747e-05, 1.1568999999999469e-05, 1.1916000000000704e-05, 1.1487000000000996e-05, 1.1917000000000177e-05, 1.1569999999998942e-05, 1.2264000000001413e-05, 1.2263999999997943e-05, 1.1902000000001134e-05, 1.2194999999999567e-05, 1.1889000000001038e-05, 1.2250000000001843e-05, 1.1917000000000177e-05, 1.1888999999997568e-05, 1.2249999999998373e-05, 1.2249999999998373e-05, 1.2263000000001939e-05, 1.1902000000001134e-05, 1.2250000000001843e-05, 1.1638000000001314e-05, 1.1916999999996708e-05, 1.1917000000000177e-05, 1.1943999999999844e-05, 1.1861000000001898e-05, 1.2221999999999233e-05, 1.1554999999999899e-05, 1.1541999999999802e-05, 1.1555999999999372e-05, 1.1889000000001038e-05, 1.1902000000001134e-05, 1.1583999999998512e-05, 1.2263999999997943e-05, 1.2583000000000039e-05, 1.2250000000001843e-05, 1.2250000000001843e-05, 1.2250000000001843e-05, 1.1917000000000177e-05, 1.2235999999998803e-05, 1.1582999999999039e-05, 1.1916000000000704e-05, 1.1597000000002078e-05, 1.2249999999998373e-05, 1.2250000000001843e-05, 1.1874999999997998e-05, 1.1916000000000704e-05, 1.1930000000000274e-05, 1.1582999999999039e-05, 1.1554999999999899e-05, 1.2305000000000649e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.102" endtime="20201030 18:29:10.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.098" endtime="20201030 18:29:10.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.110" endtime="20201030 18:29:10.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.108" endtime="20201030 18:29:10.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.107" endtime="20201030 18:29:10.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.750" endtime="20201030 18:29:10.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:09.750" endtime="20201030 18:29:10.130"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.139" endtime="20201030 18:29:10.155"></status>
</kw>
<msg timestamp="20201030 18:29:10.155" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.138" endtime="20201030 18:29:10.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.158" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.157" endtime="20201030 18:29:10.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.159" endtime="20201030 18:29:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.135" endtime="20201030 18:29:10.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.133" endtime="20201030 18:29:10.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.168" endtime="20201030 18:29:10.454"></status>
</kw>
<msg timestamp="20201030 18:29:10.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.167" endtime="20201030 18:29:10.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019601875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.458" endtime="20201030 18:29:10.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.466" endtime="20201030 18:29:10.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.164" endtime="20201030 18:29:10.468"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.162" endtime="20201030 18:29:10.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.473" level="INFO">${RESULT} = [{'diff': 1.2610999999999178e-05}, {'diff': 1.2943999999997374e-05}, {'diff': 1.2597999999999082e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2597000000003078e-05}, {'diff': 1.2958000000000414e-...</msg>
<status status="PASS" starttime="20201030 18:29:10.470" endtime="20201030 18:29:10.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.478" level="INFO">${ACCURACY} = {'diff': [1.2610999999999178e-05, 1.2943999999997374e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2985999999999553e-05...</msg>
<status status="PASS" starttime="20201030 18:29:10.474" endtime="20201030 18:29:10.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.483" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.482" endtime="20201030 18:29:10.483"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.485" level="INFO">VALUE: [1.2610999999999178e-05, 1.2943999999997374e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2958000000000414e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2888999999998568e-05, 1.2583000000000039e-05, 1.3306000000001122e-05, 1.2958999999999887e-05, 1.2596999999999609e-05, 1.2931000000000747e-05, 1.3291999999998083e-05, 1.2638999999998318e-05, 1.3320000000000692e-05, 1.327699999999904e-05, 1.3291999999998083e-05, 1.2943999999997374e-05, 1.2610999999999178e-05, 1.2944000000000844e-05, 1.2610999999999178e-05, 1.3291999999998083e-05, 1.2945000000000317e-05, 1.2596999999999609e-05, 1.2930999999997278e-05, 1.2943999999997374e-05, 1.3278000000001983e-05, 1.2931000000000747e-05, 1.2875000000002468e-05, 1.2569999999999942e-05, 1.3292000000001553e-05, 1.3291999999998083e-05, 1.2944000000000844e-05, 1.2957999999996944e-05, 1.3278000000001983e-05, 1.2917000000001178e-05, 1.2596999999999609e-05, 1.2945000000000317e-05, 1.3334000000000262e-05, 1.2945000000000317e-05, 1.2945000000000317e-05, 1.2971999999999984e-05, 1.2583000000000039e-05, 1.2958999999999887e-05, 1.2598000000002552e-05, 1.3250000000002843e-05, 1.2944000000000844e-05, 1.2624999999998748e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.484" endtime="20201030 18:29:10.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.479" endtime="20201030 18:29:10.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.490" endtime="20201030 18:29:10.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.489" endtime="20201030 18:29:10.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.487" endtime="20201030 18:29:10.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.131" endtime="20201030 18:29:10.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.131" endtime="20201030 18:29:10.511"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.519" endtime="20201030 18:29:10.534"></status>
</kw>
<msg timestamp="20201030 18:29:10.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.518" endtime="20201030 18:29:10.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.535" endtime="20201030 18:29:10.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.538" endtime="20201030 18:29:10.539"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.515" endtime="20201030 18:29:10.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.513" endtime="20201030 18:29:10.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.547" endtime="20201030 18:29:10.833"></status>
</kw>
<msg timestamp="20201030 18:29:10.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.545" endtime="20201030 18:29:10.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019469625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019483625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.837" endtime="20201030 18:29:10.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.845" endtime="20201030 18:29:10.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.543" endtime="20201030 18:29:10.847"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.541" endtime="20201030 18:29:10.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:10.852" level="INFO">${RESULT} = [{'diff': 1.4000000000000123e-05}, {'diff': 1.3638999999999318e-05}, {'diff': 1.3638999999999318e-05}, {'diff': 1.4305000000002649e-05}, {'diff': 1.3638999999999318e-05}, {'diff': 1.3986000000000554e-...</msg>
<status status="PASS" starttime="20201030 18:29:10.849" endtime="20201030 18:29:10.852"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:10.856" level="INFO">${ACCURACY} = {'diff': [1.4000000000000123e-05, 1.3638999999999318e-05, 1.3638999999999318e-05, 1.4305000000002649e-05, 1.3638999999999318e-05, 1.3986000000000554e-05, 1.4334000000001262e-05, 1.3639000000002788e-05...</msg>
<status status="PASS" starttime="20201030 18:29:10.853" endtime="20201030 18:29:10.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.861" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 18:29:10.860" endtime="20201030 18:29:10.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.863" level="INFO">VALUE: [1.4000000000000123e-05, 1.3638999999999318e-05, 1.3638999999999318e-05, 1.4305000000002649e-05, 1.3638999999999318e-05, 1.3986000000000554e-05, 1.4334000000001262e-05, 1.3639000000002788e-05, 1.3986000000000554e-05, 1.4292000000002553e-05, 1.3653000000002358e-05, 1.3971999999997514e-05, 1.431899999999875e-05, 1.4320000000001692e-05, 1.3638999999999318e-05, 1.4277999999999513e-05, 1.3985999999997084e-05, 1.3652999999998888e-05, 1.4000000000000123e-05, 1.3638999999999318e-05, 1.3973000000000457e-05, 1.3638999999999318e-05, 1.3597000000000609e-05, 1.3624999999999748e-05, 1.4000000000000123e-05, 1.4362000000000402e-05, 1.3986000000000554e-05, 1.3638999999999318e-05, 1.3665999999998985e-05, 1.4319000000002219e-05, 1.3652999999998888e-05, 1.3652999999998888e-05, 1.4319999999998223e-05, 1.3638999999999318e-05, 1.4347000000001359e-05, 1.3611000000000179e-05, 1.3651999999999415e-05, 1.3959000000000887e-05, 1.3972000000000984e-05, 1.3624999999999748e-05, 1.3638999999999318e-05, 1.3652999999998888e-05, 1.3638999999999318e-05, 1.434699999999789e-05, 1.4389000000000068e-05, 1.3624999999999748e-05, 1.3986000000000554e-05, 1.3611000000000179e-05, 1.3972000000000984e-05, 1.404099999999936e-05]</msg>
<status status="PASS" starttime="20201030 18:29:10.862" endtime="20201030 18:29:10.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.857" endtime="20201030 18:29:10.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:10.868" endtime="20201030 18:29:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.867" endtime="20201030 18:29:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.865" endtime="20201030 18:29:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.512" endtime="20201030 18:29:10.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.511" endtime="20201030 18:29:10.889"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.897" endtime="20201030 18:29:10.913"></status>
</kw>
<msg timestamp="20201030 18:29:10.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.896" endtime="20201030 18:29:10.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:10.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:10.915" endtime="20201030 18:29:10.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.918" endtime="20201030 18:29:10.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.893" endtime="20201030 18:29:10.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.891" endtime="20201030 18:29:10.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:10.927" endtime="20201030 18:29:11.214"></status>
</kw>
<msg timestamp="20201030 18:29:11.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020431028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:10.925" endtime="20201030 18:29:11.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020431028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.219" endtime="20201030 18:29:11.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.227" endtime="20201030 18:29:11.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.923" endtime="20201030 18:29:11.229"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.921" endtime="20201030 18:29:11.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.234" level="INFO">${RESULT} = [{'diff': 1.4666999999999458e-05}, {'diff': 1.5013999999997224e-05}, {'diff': 1.4999999999997654e-05}, {'diff': 1.5000000000001124e-05}, {'diff': 1.5028000000000263e-05}, {'diff': 1.4721999999998264e-...</msg>
<status status="PASS" starttime="20201030 18:29:11.231" endtime="20201030 18:29:11.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.238" level="INFO">${ACCURACY} = {'diff': [1.4666999999999458e-05, 1.5013999999997224e-05, 1.4999999999997654e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.4721999999998264e-05, 1.4972000000001984e-05, 1.5014000000000693e-05...</msg>
<status status="PASS" starttime="20201030 18:29:11.235" endtime="20201030 18:29:11.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.243" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.242" endtime="20201030 18:29:11.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.245" level="INFO">VALUE: [1.4666999999999458e-05, 1.5013999999997224e-05, 1.4999999999997654e-05, 1.5000000000001124e-05, 1.5028000000000263e-05, 1.4721999999998264e-05, 1.4972000000001984e-05, 1.5014000000000693e-05, 1.4651999999996945e-05, 1.4694999999998598e-05, 1.5014000000000693e-05, 1.53750000000015e-05, 1.536099999999846e-05, 1.4695000000002068e-05, 1.4666999999999458e-05, 1.536099999999846e-05, 1.431899999999875e-05, 1.4971999999998514e-05, 1.536099999999846e-05, 1.5028000000000263e-05, 1.5000000000001124e-05, 1.430499999999918e-05, 1.5014000000000693e-05, 1.4999999999997654e-05, 1.4666999999999458e-05, 1.5014000000000693e-05, 1.5028000000000263e-05, 1.4681000000002498e-05, 1.4679999999999555e-05, 1.4652000000000415e-05, 1.4666999999999458e-05, 1.4666999999999458e-05, 1.4639000000000318e-05, 1.540299999999717e-05, 1.4375000000000498e-05, 1.536099999999846e-05, 1.4665999999999985e-05, 1.4665999999999985e-05, 1.50689999999995e-05, 1.537499999999803e-05, 1.4625000000000749e-05, 1.4958000000002414e-05, 1.4680999999999028e-05, 1.4666999999999458e-05, 1.4680999999999028e-05, 1.5027999999996794e-05, 1.4930999999999278e-05, 1.536099999999846e-05, 1.4665999999999985e-05, 1.5014000000000693e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.244" endtime="20201030 18:29:11.247"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.239" endtime="20201030 18:29:11.247"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.251" endtime="20201030 18:29:11.270"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.249" endtime="20201030 18:29:11.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.248" endtime="20201030 18:29:11.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.890" endtime="20201030 18:29:11.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:10.889" endtime="20201030 18:29:11.272"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.281" endtime="20201030 18:29:11.297"></status>
</kw>
<msg timestamp="20201030 18:29:11.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.279" endtime="20201030 18:29:11.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.299" endtime="20201030 18:29:11.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.301" endtime="20201030 18:29:11.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.277" endtime="20201030 18:29:11.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.274" endtime="20201030 18:29:11.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.310" endtime="20201030 18:29:11.597"></status>
</kw>
<msg timestamp="20201030 18:29:11.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020720361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.309" endtime="20201030 18:29:11.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020703986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020720361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.601" endtime="20201030 18:29:11.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.609" endtime="20201030 18:29:11.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.306" endtime="20201030 18:29:11.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.304" endtime="20201030 18:29:11.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:11.616" level="INFO">${RESULT} = [{'diff': 1.637499999999903e-05}, {'diff': 1.5971999999999514e-05}, {'diff': 1.5985999999999084e-05}, {'diff': 1.5722999999998738e-05}, {'diff': 1.640299999999817e-05}, {'diff': 1.536100000000193e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:11.612" endtime="20201030 18:29:11.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:11.621" level="INFO">${ACCURACY} = {'diff': [1.637499999999903e-05, 1.5971999999999514e-05, 1.5985999999999084e-05, 1.5722999999998738e-05, 1.640299999999817e-05, 1.536100000000193e-05, 1.5707999999999694e-05, 1.536099999999846e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:11.617" endtime="20201030 18:29:11.621"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.625" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 18:29:11.624" endtime="20201030 18:29:11.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.628" level="INFO">VALUE: [1.637499999999903e-05, 1.5971999999999514e-05, 1.5985999999999084e-05, 1.5722999999998738e-05, 1.640299999999817e-05, 1.536100000000193e-05, 1.5707999999999694e-05, 1.536099999999846e-05, 1.5694999999999598e-05, 1.641700000000121e-05, 1.604100000000136e-05, 1.638900000000207e-05, 1.6056000000000403e-05, 1.5694000000000125e-05, 1.640300000000164e-05, 1.63889999999986e-05, 1.5292000000000083e-05, 1.5693999999996655e-05, 1.536099999999846e-05, 1.566700000000046e-05, 1.5694999999999598e-05, 1.605499999999746e-05, 1.5708000000003164e-05, 1.605500000000093e-05, 1.636099999999946e-05, 1.5749999999998404e-05, 1.637499999999903e-05, 1.5693999999996655e-05, 1.605499999999746e-05, 1.536100000000193e-05, 1.611099999999921e-05, 1.6056000000000403e-05, 1.60690000000005e-05, 1.604099999999789e-05, 1.5707999999999694e-05, 1.602700000000179e-05, 1.6415999999998265e-05, 1.604099999999789e-05, 1.605500000000093e-05, 1.5749999999998404e-05, 1.5694999999999598e-05, 1.6056000000000403e-05, 1.536100000000193e-05, 1.612499999999878e-05, 1.5694000000000125e-05, 1.537499999999803e-05, 1.6458000000000444e-05, 1.6056000000000403e-05, 1.5707999999999694e-05, 1.5694999999999598e-05]</msg>
<status status="PASS" starttime="20201030 18:29:11.626" endtime="20201030 18:29:11.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.622" endtime="20201030 18:29:11.634"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:11.638" endtime="20201030 18:29:11.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.636" endtime="20201030 18:29:11.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.635" endtime="20201030 18:29:11.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.273" endtime="20201030 18:29:11.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.272" endtime="20201030 18:29:11.658"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.667" endtime="20201030 18:29:11.683"></status>
</kw>
<msg timestamp="20201030 18:29:11.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.665" endtime="20201030 18:29:11.683"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:11.684" endtime="20201030 18:29:11.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.687" endtime="20201030 18:29:11.688"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.663" endtime="20201030 18:29:11.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.661" endtime="20201030 18:29:11.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.696" endtime="20201030 18:29:11.981"></status>
</kw>
<msg timestamp="20201030 18:29:11.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.694" endtime="20201030 18:29:11.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:11.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020105486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020121889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:11.985" endtime="20201030 18:29:11.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:11.993" endtime="20201030 18:29:11.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.692" endtime="20201030 18:29:11.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.690" endtime="20201030 18:29:11.996"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.000" level="INFO">${RESULT} = [{'diff': 1.640300000000164e-05}, {'diff': 1.7430000000002305e-05}, {'diff': 1.6707999999997225e-05}, {'diff': 1.6735999999999834e-05}, {'diff': 1.6722000000000264e-05}, {'diff': 1.6735999999999834e-0...</msg>
<status status="PASS" starttime="20201030 18:29:11.997" endtime="20201030 18:29:12.000"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.004" level="INFO">${ACCURACY} = {'diff': [1.640300000000164e-05, 1.7430000000002305e-05, 1.6707999999997225e-05, 1.6735999999999834e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.708300000000107e-05, 1.706899999999803e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:29:12.001" endtime="20201030 18:29:12.004"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.009" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.008" endtime="20201030 18:29:12.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.011" level="INFO">VALUE: [1.640300000000164e-05, 1.7430000000002305e-05, 1.6707999999997225e-05, 1.6735999999999834e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.708300000000107e-05, 1.706899999999803e-05, 1.6306000000000653e-05, 1.6735999999999834e-05, 1.744500000000135e-05, 1.6735999999999834e-05, 1.711100000000021e-05, 1.70829999999976e-05, 1.7084000000000543e-05, 1.640300000000164e-05, 1.743100000000178e-05, 1.6722000000000264e-05, 1.638900000000207e-05, 1.709700000000064e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.6736999999999308e-05, 1.7415999999999265e-05, 1.6722000000000264e-05, 1.706899999999803e-05, 1.744500000000135e-05, 1.6735999999999834e-05, 1.666699999999799e-05, 1.709700000000064e-05, 1.7084000000000543e-05, 1.6749999999999404e-05, 1.6707999999997225e-05, 1.640299999999817e-05, 1.7084000000000543e-05, 1.709699999999717e-05, 1.711100000000021e-05, 1.6737000000002777e-05, 1.6735999999999834e-05, 1.708300000000107e-05, 1.70690000000015e-05, 1.6722999999999738e-05, 1.6722000000000264e-05, 1.743100000000178e-05, 1.7443999999998405e-05, 1.6735999999999834e-05, 1.6763999999998974e-05, 1.711100000000021e-05, 1.744500000000135e-05, 1.743100000000178e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.010" endtime="20201030 18:29:12.012"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.005" endtime="20201030 18:29:12.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.016" endtime="20201030 18:29:12.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.015" endtime="20201030 18:29:12.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.013" endtime="20201030 18:29:12.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.659" endtime="20201030 18:29:12.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:11.659" endtime="20201030 18:29:12.037"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.045" endtime="20201030 18:29:12.061"></status>
</kw>
<msg timestamp="20201030 18:29:12.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.044" endtime="20201030 18:29:12.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.063" endtime="20201030 18:29:12.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.066" endtime="20201030 18:29:12.067"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.041" endtime="20201030 18:29:12.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.039" endtime="20201030 18:29:12.068"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.075" endtime="20201030 18:29:12.360"></status>
</kw>
<msg timestamp="20201030 18:29:12.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021180889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021198333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.073" endtime="20201030 18:29:12.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021180889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021198333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.365" endtime="20201030 18:29:12.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.373" endtime="20201030 18:29:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.070" endtime="20201030 18:29:12.375"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.069" endtime="20201030 18:29:12.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.380" level="INFO">${RESULT} = [{'diff': 1.7443999999998405e-05}, {'diff': 1.808300000000207e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.812500000000078e-05}, {'diff': 1.8055999999998934e-05}, {'diff': 1.7806000000002153e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:12.376" endtime="20201030 18:29:12.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.384" level="INFO">${ACCURACY} = {'diff': [1.7443999999998405e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.8055999999998934e-05, 1.7806000000002153e-05, 1.743099999999831e-05, 1.8500000000001154e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:12.381" endtime="20201030 18:29:12.384"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.388" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.387" endtime="20201030 18:29:12.389"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.391" level="INFO">VALUE: [1.7443999999998405e-05, 1.808300000000207e-05, 1.812500000000078e-05, 1.812500000000078e-05, 1.8055999999998934e-05, 1.7806000000002153e-05, 1.743099999999831e-05, 1.8500000000001154e-05, 1.7709000000001168e-05, 1.744500000000135e-05, 1.8471999999998545e-05, 1.811100000000121e-05, 1.77630000000005e-05, 1.8070000000001973e-05, 1.741700000000221e-05, 1.781900000000225e-05, 1.813900000000035e-05, 1.851300000000125e-05, 1.811100000000121e-05, 1.7777999999999544e-05, 1.7805999999998684e-05, 1.780499999999921e-05, 1.815299999999992e-05, 1.743099999999831e-05, 1.8471999999998545e-05, 1.7777999999999544e-05, 1.7709000000001168e-05, 1.781899999999878e-05, 1.8471999999998545e-05, 1.7514000000003194e-05, 1.812500000000078e-05, 1.8098000000001113e-05, 1.744499999999788e-05, 1.816699999999949e-05, 1.7791999999999114e-05, 1.811100000000121e-05, 1.741699999999874e-05, 1.7805999999998684e-05, 1.7415999999999265e-05, 1.7792000000002584e-05, 1.783299999999835e-05, 1.7778000000003014e-05, 1.7763999999999974e-05, 1.744499999999788e-05, 1.7792000000002584e-05, 1.7777999999999544e-05, 1.7791999999999114e-05, 1.7763999999999974e-05, 1.7777999999999544e-05, 1.7777999999999544e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.389" endtime="20201030 18:29:12.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.385" endtime="20201030 18:29:12.393"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.397" endtime="20201030 18:29:12.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.395" endtime="20201030 18:29:12.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.394" endtime="20201030 18:29:12.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.038" endtime="20201030 18:29:12.417"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.037" endtime="20201030 18:29:12.417"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.426" endtime="20201030 18:29:12.441"></status>
</kw>
<msg timestamp="20201030 18:29:12.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.424" endtime="20201030 18:29:12.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.444" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.442" endtime="20201030 18:29:12.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.445" endtime="20201030 18:29:12.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.422" endtime="20201030 18:29:12.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.420" endtime="20201030 18:29:12.447"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.454" endtime="20201030 18:29:12.741"></status>
</kw>
<msg timestamp="20201030 18:29:12.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.452" endtime="20201030 18:29:12.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019695583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.745" endtime="20201030 18:29:12.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.753" endtime="20201030 18:29:12.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.450" endtime="20201030 18:29:12.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.448" endtime="20201030 18:29:12.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:12.759" level="INFO">${RESULT} = [{'diff': 1.9513999999998255e-05}, {'diff': 1.8485999999998115e-05}, {'diff': 1.8443999999999405e-05}, {'diff': 1.8458000000002445e-05}, {'diff': 1.845899999999845e-05}, {'diff': 1.9472000000003015e-0...</msg>
<status status="PASS" starttime="20201030 18:29:12.756" endtime="20201030 18:29:12.760"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:12.769" level="INFO">${ACCURACY} = {'diff': [1.9513999999998255e-05, 1.8485999999998115e-05, 1.8443999999999405e-05, 1.8458000000002445e-05, 1.845899999999845e-05, 1.9472000000003015e-05, 1.8486000000001584e-05, 1.8486000000001584e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:12.760" endtime="20201030 18:29:12.770"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.776" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 18:29:12.775" endtime="20201030 18:29:12.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.780" level="INFO">VALUE: [1.9513999999998255e-05, 1.8485999999998115e-05, 1.8443999999999405e-05, 1.8458000000002445e-05, 1.845899999999845e-05, 1.9472000000003015e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.9152000000001446e-05, 1.881899999999978e-05, 1.881899999999978e-05, 1.8834000000002293e-05, 1.880500000000021e-05, 1.8792000000000114e-05, 1.8792000000000114e-05, 1.881900000000325e-05, 1.8472000000002015e-05, 1.883299999999935e-05, 1.9513999999998255e-05, 1.916700000000049e-05, 1.8458000000002445e-05, 1.8805999999999684e-05, 1.8792000000000114e-05, 1.913900000000135e-05, 1.8471999999998545e-05, 1.9513999999998255e-05, 1.915300000000092e-05, 1.845900000000192e-05, 1.8805999999999684e-05, 1.9542000000000864e-05, 1.8805999999999684e-05, 1.9221999999999295e-05, 1.9499999999998685e-05, 1.8778000000000544e-05, 1.912499999999831e-05, 1.8819999999999254e-05, 1.9500000000002154e-05, 1.845900000000192e-05, 1.9152000000001446e-05, 1.881899999999978e-05, 1.9499999999998685e-05, 1.90829999999996e-05, 1.9179999999997116e-05, 1.8805999999999684e-05, 1.9500000000002154e-05, 1.880500000000021e-05, 1.87769999999976e-05, 1.8457999999998975e-05, 1.8471999999998545e-05, 1.880500000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:29:12.778" endtime="20201030 18:29:12.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.771" endtime="20201030 18:29:12.782"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:12.788" endtime="20201030 18:29:12.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.785" endtime="20201030 18:29:12.808"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.783" endtime="20201030 18:29:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.418" endtime="20201030 18:29:12.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.418" endtime="20201030 18:29:12.809"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.818" endtime="20201030 18:29:12.834"></status>
</kw>
<msg timestamp="20201030 18:29:12.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.816" endtime="20201030 18:29:12.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:12.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:12.835" endtime="20201030 18:29:12.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.838" endtime="20201030 18:29:12.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.813" endtime="20201030 18:29:12.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.811" endtime="20201030 18:29:12.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:12.847" endtime="20201030 18:29:13.135"></status>
</kw>
<msg timestamp="20201030 18:29:13.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:12.845" endtime="20201030 18:29:13.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020433667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020453125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.139" endtime="20201030 18:29:13.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.148" endtime="20201030 18:29:13.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.843" endtime="20201030 18:29:13.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.841" endtime="20201030 18:29:13.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.154" level="INFO">${RESULT} = [{'diff': 1.9457999999999975e-05}, {'diff': 1.984699999999992e-05}, {'diff': 2.019500000000063e-05}, {'diff': 1.986099999999949e-05}, {'diff': 1.988899999999863e-05}, {'diff': 1.9500000000002154e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:13.151" endtime="20201030 18:29:13.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.158" level="INFO">${ACCURACY} = {'diff': [1.9457999999999975e-05, 1.984699999999992e-05, 2.019500000000063e-05, 1.986099999999949e-05, 1.988899999999863e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 2.0193999999997686e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:13.155" endtime="20201030 18:29:13.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.163" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.162" endtime="20201030 18:29:13.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.165" level="INFO">VALUE: [1.9457999999999975e-05, 1.984699999999992e-05, 2.019500000000063e-05, 1.986099999999949e-05, 1.988899999999863e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 2.0193999999997686e-05, 1.9542000000000864e-05, 1.986099999999949e-05, 1.9514000000001724e-05, 1.9555999999996965e-05, 1.948699999999859e-05, 2.018100000000106e-05, 2.018099999999759e-05, 2.0222000000000295e-05, 1.984699999999992e-05, 1.9500000000002154e-05, 2.0193999999997686e-05, 2.019500000000063e-05, 2.0555999999997965e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 2.0194000000001155e-05, 2.0513999999999255e-05, 1.986099999999949e-05, 2.052699999999935e-05, 2.019500000000063e-05, 1.986099999999949e-05, 1.984699999999992e-05, 2.0222000000000295e-05, 2.0194000000001155e-05, 2.018100000000106e-05, 2.018100000000106e-05, 2.0541999999998395e-05, 2.0208000000000725e-05, 2.0208000000000725e-05, 1.984699999999992e-05, 2.018100000000106e-05, 2.0527999999998825e-05, 1.9847999999999394e-05, 2.0194000000001155e-05, 1.984699999999992e-05, 2.055499999999849e-05, 1.984699999999992e-05, 2.0193999999997686e-05, 2.0194000000001155e-05, 2.0194000000001155e-05, 1.9500000000002154e-05, 2.0180000000001586e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.164" endtime="20201030 18:29:13.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.159" endtime="20201030 18:29:13.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.170" endtime="20201030 18:29:13.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.169" endtime="20201030 18:29:13.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.168" endtime="20201030 18:29:13.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.810" endtime="20201030 18:29:13.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:12.809" endtime="20201030 18:29:13.191"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.200" endtime="20201030 18:29:13.215"></status>
</kw>
<msg timestamp="20201030 18:29:13.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.198" endtime="20201030 18:29:13.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.217" endtime="20201030 18:29:13.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.219" endtime="20201030 18:29:13.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.195" endtime="20201030 18:29:13.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.193" endtime="20201030 18:29:13.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.229" endtime="20201030 18:29:13.515"></status>
</kw>
<msg timestamp="20201030 18:29:13.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.227" endtime="20201030 18:29:13.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020551347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020571861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.519" endtime="20201030 18:29:13.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.528" endtime="20201030 18:29:13.529"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.224" endtime="20201030 18:29:13.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.223" endtime="20201030 18:29:13.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.534" level="INFO">${RESULT} = [{'diff': 2.0513999999999255e-05}, {'diff': 2.0513999999999255e-05}, {'diff': 2.061100000000024e-05}, {'diff': 2.0527999999998825e-05}, {'diff': 2.1193999999998686e-05}, {'diff': 2.116700000000249e-05...</msg>
<status status="PASS" starttime="20201030 18:29:13.531" endtime="20201030 18:29:13.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.538" level="INFO">${ACCURACY} = {'diff': [2.0513999999999255e-05, 2.0513999999999255e-05, 2.061100000000024e-05, 2.0527999999998825e-05, 2.1193999999998686e-05, 2.116700000000249e-05, 2.054099999999892e-05, 2.1222000000001295e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:29:13.535" endtime="20201030 18:29:13.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.543" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.542" endtime="20201030 18:29:13.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.545" level="INFO">VALUE: [2.0513999999999255e-05, 2.0513999999999255e-05, 2.061100000000024e-05, 2.0527999999998825e-05, 2.1193999999998686e-05, 2.116700000000249e-05, 2.054099999999892e-05, 2.1222000000001295e-05, 2.1235999999997396e-05, 2.1264000000000005e-05, 2.156899999999906e-05, 2.123700000000034e-05, 2.0542000000001864e-05, 2.05969999999972e-05, 2.1207999999998256e-05, 2.088899999999963e-05, 2.054099999999892e-05, 2.087500000000006e-05, 2.084700000000092e-05, 2.154099999999992e-05, 2.123700000000034e-05, 2.0527999999998825e-05, 2.087500000000006e-05, 2.087500000000006e-05, 2.156899999999906e-05, 2.088899999999963e-05, 2.122300000000077e-05, 2.156900000000253e-05, 2.087500000000006e-05, 2.1207999999998256e-05, 2.083300000000135e-05, 2.1236000000000865e-05, 2.158299999999863e-05, 2.122300000000077e-05, 2.1222000000001295e-05, 2.1222000000001295e-05, 2.123700000000034e-05, 2.087500000000006e-05, 2.0542000000001864e-05, 2.090300000000267e-05, 2.09029999999992e-05, 2.1250000000000435e-05, 2.09029999999992e-05, 2.122300000000077e-05, 2.087500000000006e-05, 2.1250000000000435e-05, 2.086099999999702e-05, 2.088899999999963e-05, 2.0541999999998395e-05, 2.087500000000006e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.544" endtime="20201030 18:29:13.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.539" endtime="20201030 18:29:13.548"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.551" endtime="20201030 18:29:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.550" endtime="20201030 18:29:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.549" endtime="20201030 18:29:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.192" endtime="20201030 18:29:13.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.191" endtime="20201030 18:29:13.572"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.581" endtime="20201030 18:29:13.596"></status>
</kw>
<msg timestamp="20201030 18:29:13.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.579" endtime="20201030 18:29:13.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.597" endtime="20201030 18:29:13.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.600" endtime="20201030 18:29:13.601"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.576" endtime="20201030 18:29:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.574" endtime="20201030 18:29:13.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.609" endtime="20201030 18:29:13.895"></status>
</kw>
<msg timestamp="20201030 18:29:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.607" endtime="20201030 18:29:13.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019604208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019625764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.900" endtime="20201030 18:29:13.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.908" endtime="20201030 18:29:13.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.604" endtime="20201030 18:29:13.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.603" endtime="20201030 18:29:13.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:13.914" level="INFO">${RESULT} = [{'diff': 2.1555999999998965e-05}, {'diff': 2.191699999999977e-05}, {'diff': 2.194499999999891e-05}, {'diff': 2.2264000000001005e-05}, {'diff': 2.15969999999982e-05}, {'diff': 2.2264000000001005e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:13.911" endtime="20201030 18:29:13.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:13.920" level="INFO">${ACCURACY} = {'diff': [2.1555999999998965e-05, 2.191699999999977e-05, 2.194499999999891e-05, 2.2264000000001005e-05, 2.15969999999982e-05, 2.2264000000001005e-05, 2.15830000000021e-05, 2.1555999999998965e-05, 2.15...</msg>
<status status="PASS" starttime="20201030 18:29:13.915" endtime="20201030 18:29:13.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.924" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 18:29:13.923" endtime="20201030 18:29:13.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.927" level="INFO">VALUE: [2.1555999999998965e-05, 2.191699999999977e-05, 2.194499999999891e-05, 2.2264000000001005e-05, 2.15969999999982e-05, 2.2264000000001005e-05, 2.15830000000021e-05, 2.1555999999998965e-05, 2.1514000000000255e-05, 2.2250000000001435e-05, 2.158299999999863e-05, 2.1514000000000255e-05, 2.2264000000001005e-05, 2.1972000000002045e-05, 2.19030000000002e-05, 2.2278000000000575e-05, 2.159700000000167e-05, 2.2277999999997106e-05, 2.15830000000021e-05, 2.1570000000002004e-05, 2.1888000000001157e-05, 2.1555999999998965e-05, 2.2278000000000575e-05, 2.1943999999999436e-05, 2.191699999999977e-05, 2.19030000000002e-05, 2.19030000000002e-05, 2.1569999999998535e-05, 2.2278000000000575e-05, 2.2264000000001005e-05, 2.1570000000002004e-05, 2.193100000000281e-05, 2.1569999999998535e-05, 2.156899999999906e-05, 2.184699999999845e-05, 2.2264000000001005e-05, 2.193099999999934e-05, 2.1972000000002045e-05, 2.1971999999998576e-05, 2.19030000000002e-05, 2.2264000000001005e-05, 2.191699999999977e-05, 2.161099999999777e-05, 2.193099999999934e-05, 2.193099999999934e-05, 2.165299999999995e-05, 2.191699999999977e-05, 2.2249999999997966e-05, 2.191699999999977e-05, 2.2264000000001005e-05]</msg>
<status status="PASS" starttime="20201030 18:29:13.925" endtime="20201030 18:29:13.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.920" endtime="20201030 18:29:13.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:13.932" endtime="20201030 18:29:13.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.930" endtime="20201030 18:29:13.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.929" endtime="20201030 18:29:13.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.573" endtime="20201030 18:29:13.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.572" endtime="20201030 18:29:13.952"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.961" endtime="20201030 18:29:13.976"></status>
</kw>
<msg timestamp="20201030 18:29:13.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.960" endtime="20201030 18:29:13.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:13.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:13.978" endtime="20201030 18:29:13.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.980" endtime="20201030 18:29:13.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.957" endtime="20201030 18:29:13.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.955" endtime="20201030 18:29:13.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:13.989" endtime="20201030 18:29:14.277"></status>
</kw>
<msg timestamp="20201030 18:29:14.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:13.988" endtime="20201030 18:29:14.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019613083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.282" endtime="20201030 18:29:14.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.290" endtime="20201030 18:29:14.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.985" endtime="20201030 18:29:14.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.983" endtime="20201030 18:29:14.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.297" level="INFO">${RESULT} = [{'diff': 2.2569999999999535e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.261100000000224e-05}, {'diff': 2.2930000000000866e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.330500000000124e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:14.293" endtime="20201030 18:29:14.297"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.301" level="INFO">${ACCURACY} = {'diff': [2.2569999999999535e-05, 2.2999999999998716e-05, 2.261100000000224e-05, 2.2930000000000866e-05, 2.263900000000138e-05, 2.330500000000124e-05, 2.2971999999999576e-05, 2.258299999999963e-05, 2....</msg>
<status status="PASS" starttime="20201030 18:29:14.298" endtime="20201030 18:29:14.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.305" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.304" endtime="20201030 18:29:14.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.308" level="INFO">VALUE: [2.2569999999999535e-05, 2.2999999999998716e-05, 2.261100000000224e-05, 2.2930000000000866e-05, 2.263900000000138e-05, 2.330500000000124e-05, 2.2971999999999576e-05, 2.258299999999963e-05, 2.261099999999877e-05, 2.2569999999999535e-05, 2.2958000000000006e-05, 2.2598000000002144e-05, 2.3306000000000715e-05, 2.2958000000000006e-05, 2.330500000000124e-05, 2.3290999999998202e-05, 2.2986000000002615e-05, 2.2944000000000436e-05, 2.261099999999877e-05, 2.3306000000000715e-05, 2.330500000000124e-05, 2.3306000000000715e-05, 2.3292000000001145e-05, 2.3305999999997246e-05, 2.331900000000081e-05, 2.2943999999996967e-05, 2.261100000000224e-05, 2.255500000000049e-05, 2.3318999999997342e-05, 2.2584000000002574e-05, 2.261099999999877e-05, 2.2929999999997397e-05, 2.2958000000000006e-05, 2.2971999999999576e-05, 2.3304999999997772e-05, 2.2944000000000436e-05, 2.261100000000224e-05, 2.25969999999992e-05, 2.261100000000224e-05, 2.2971999999999576e-05, 2.3000000000002185e-05, 2.329100000000167e-05, 2.2901999999998257e-05, 2.256900000000006e-05, 2.331900000000081e-05, 2.262499999999834e-05, 2.2611999999998245e-05, 2.259700000000267e-05, 2.2958000000000006e-05, 2.262499999999834e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.306" endtime="20201030 18:29:14.309"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.302" endtime="20201030 18:29:14.309"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.313" endtime="20201030 18:29:14.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.311" endtime="20201030 18:29:14.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.310" endtime="20201030 18:29:14.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.953" endtime="20201030 18:29:14.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:13.953" endtime="20201030 18:29:14.333"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.342" endtime="20201030 18:29:14.357"></status>
</kw>
<msg timestamp="20201030 18:29:14.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.341" endtime="20201030 18:29:14.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.359" endtime="20201030 18:29:14.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.361" endtime="20201030 18:29:14.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.338" endtime="20201030 18:29:14.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.336" endtime="20201030 18:29:14.364"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.370" endtime="20201030 18:29:14.656"></status>
</kw>
<msg timestamp="20201030 18:29:14.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.369" endtime="20201030 18:29:14.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020480458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020504486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.662" endtime="20201030 18:29:14.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.671" endtime="20201030 18:29:14.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.366" endtime="20201030 18:29:14.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.365" endtime="20201030 18:29:14.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:14.680" level="INFO">${RESULT} = [{'diff': 2.4027999999998856e-05}, {'diff': 2.433300000000138e-05}, {'diff': 2.3972000000000576e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.3665999999998577e-05}, {'diff': 2.4277999999999106e-0...</msg>
<status status="PASS" starttime="20201030 18:29:14.676" endtime="20201030 18:29:14.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:14.685" level="INFO">${ACCURACY} = {'diff': [2.4027999999998856e-05, 2.433300000000138e-05, 2.3972000000000576e-05, 2.3986000000000146e-05, 2.3665999999998577e-05, 2.4277999999999106e-05, 2.4318999999998342e-05, 2.3638000000002907e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:14.681" endtime="20201030 18:29:14.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.690" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 18:29:14.689" endtime="20201030 18:29:14.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.693" level="INFO">VALUE: [2.4027999999998856e-05, 2.433300000000138e-05, 2.3972000000000576e-05, 2.3986000000000146e-05, 2.3665999999998577e-05, 2.4277999999999106e-05, 2.4318999999998342e-05, 2.3638000000002907e-05, 2.398699999999962e-05, 2.433300000000138e-05, 2.433300000000138e-05, 2.361099999999977e-05, 2.3679999999998147e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.4346999999997482e-05, 2.3986000000000146e-05, 2.3986000000000146e-05, 2.4332999999997912e-05, 2.4334000000000855e-05, 2.433300000000138e-05, 2.365299999999848e-05, 2.363900000000238e-05, 2.363899999999891e-05, 2.3999999999999716e-05, 2.436099999999705e-05, 2.4290999999999202e-05, 2.365300000000195e-05, 2.433300000000138e-05, 2.3999999999999716e-05, 2.4334000000000855e-05, 2.433300000000138e-05, 2.363899999999891e-05, 2.3999999999999716e-05, 2.3999999999999716e-05, 2.362499999999934e-05, 2.365300000000195e-05, 2.395900000000048e-05, 2.363900000000238e-05, 2.3637999999999437e-05, 2.398699999999962e-05, 2.365300000000195e-05, 2.3570000000000535e-05, 2.3986000000000146e-05, 2.3651999999999007e-05, 2.4334000000000855e-05, 2.3986000000000146e-05, 2.370900000000023e-05, 2.3999999999999716e-05, 2.4333999999997385e-05]</msg>
<status status="PASS" starttime="20201030 18:29:14.691" endtime="20201030 18:29:14.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.686" endtime="20201030 18:29:14.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:14.699" endtime="20201030 18:29:14.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.697" endtime="20201030 18:29:14.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.696" endtime="20201030 18:29:14.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.334" endtime="20201030 18:29:14.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.334" endtime="20201030 18:29:14.719"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.728" endtime="20201030 18:29:14.743"></status>
</kw>
<msg timestamp="20201030 18:29:14.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.726" endtime="20201030 18:29:14.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:14.746" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:14.745" endtime="20201030 18:29:14.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.747" endtime="20201030 18:29:14.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.724" endtime="20201030 18:29:14.749"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.722" endtime="20201030 18:29:14.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:14.756" endtime="20201030 18:29:15.041"></status>
</kw>
<msg timestamp="20201030 18:29:15.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:14.755" endtime="20201030 18:29:15.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019686708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019711375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.045" endtime="20201030 18:29:15.053"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.053" endtime="20201030 18:29:15.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.752" endtime="20201030 18:29:15.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.750" endtime="20201030 18:29:15.056"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.060" level="INFO">${RESULT} = [{'diff': 2.466699999999905e-05}, {'diff': 2.536100000000152e-05}, {'diff': 2.4694000000002186e-05}, {'diff': 2.466699999999905e-05}, {'diff': 2.4972000000001576e-05}, {'diff': 2.433300000000138e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:15.057" endtime="20201030 18:29:15.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.065" level="INFO">${ACCURACY} = {'diff': [2.466699999999905e-05, 2.536100000000152e-05, 2.4694000000002186e-05, 2.466699999999905e-05, 2.4972000000001576e-05, 2.433300000000138e-05, 2.468099999999862e-05, 2.4680000000002617e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:29:15.061" endtime="20201030 18:29:15.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.070" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.069" endtime="20201030 18:29:15.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.072" level="INFO">VALUE: [2.466699999999905e-05, 2.536100000000152e-05, 2.4694000000002186e-05, 2.466699999999905e-05, 2.4972000000001576e-05, 2.433300000000138e-05, 2.468099999999862e-05, 2.4680000000002617e-05, 2.4679999999999147e-05, 2.5054999999999522e-05, 2.5027999999999856e-05, 2.4693999999998717e-05, 2.5054999999999522e-05, 2.469499999999819e-05, 2.537499999999762e-05, 2.463899999999991e-05, 2.5027999999999856e-05, 2.537500000000109e-05, 2.5305999999999246e-05, 2.466699999999905e-05, 2.5027999999999856e-05, 2.4736000000000896e-05, 2.468099999999862e-05, 2.5027999999999856e-05, 2.468099999999862e-05, 2.4346999999997482e-05, 2.540300000000023e-05, 2.5041999999999426e-05, 2.5027999999999856e-05, 2.5027000000000382e-05, 2.538900000000066e-05, 2.4693999999998717e-05, 2.5042000000002895e-05, 2.461100000000077e-05, 2.5360999999998052e-05, 2.468099999999862e-05, 2.5027999999999856e-05, 2.536100000000152e-05, 2.469500000000166e-05, 2.466699999999905e-05, 2.5040999999999952e-05, 2.469500000000166e-05, 2.4665999999999577e-05, 2.537500000000109e-05, 2.5028000000003325e-05, 2.4679999999999147e-05, 2.5027000000000382e-05, 2.537500000000109e-05, 2.466699999999905e-05, 2.4334000000000855e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.071" endtime="20201030 18:29:15.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.066" endtime="20201030 18:29:15.073"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.077" endtime="20201030 18:29:15.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.075" endtime="20201030 18:29:15.097"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.074" endtime="20201030 18:29:15.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.720" endtime="20201030 18:29:15.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:14.720" endtime="20201030 18:29:15.098"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.108" endtime="20201030 18:29:15.123"></status>
</kw>
<msg timestamp="20201030 18:29:15.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.106" endtime="20201030 18:29:15.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.125" endtime="20201030 18:29:15.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.128" endtime="20201030 18:29:15.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.103" endtime="20201030 18:29:15.130"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.101" endtime="20201030 18:29:15.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.137" endtime="20201030 18:29:15.424"></status>
</kw>
<msg timestamp="20201030 18:29:15.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021064694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021091083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.135" endtime="20201030 18:29:15.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021064694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021091083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.429" endtime="20201030 18:29:15.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.437" endtime="20201030 18:29:15.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.133" endtime="20201030 18:29:15.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.131" endtime="20201030 18:29:15.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.444" level="INFO">${RESULT} = [{'diff': 2.638900000000166e-05}, {'diff': 2.6069000000000092e-05}, {'diff': 2.638900000000166e-05}, {'diff': 2.5735999999998427e-05}, {'diff': 2.537500000000109e-05}, {'diff': 2.57230000000018e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:15.440" endtime="20201030 18:29:15.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.448" level="INFO">${ACCURACY} = {'diff': [2.638900000000166e-05, 2.6069000000000092e-05, 2.638900000000166e-05, 2.5735999999998427e-05, 2.537500000000109e-05, 2.57230000000018e-05, 2.5735999999998427e-05, 2.6055999999999996e-05, 2.5...</msg>
<status status="PASS" starttime="20201030 18:29:15.445" endtime="20201030 18:29:15.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.452" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.451" endtime="20201030 18:29:15.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.455" level="INFO">VALUE: [2.638900000000166e-05, 2.6069000000000092e-05, 2.638900000000166e-05, 2.5735999999998427e-05, 2.537500000000109e-05, 2.57230000000018e-05, 2.5735999999998427e-05, 2.6055999999999996e-05, 2.572299999999833e-05, 2.6082999999999662e-05, 2.6096999999999232e-05, 2.5320000000002285e-05, 2.6041999999996956e-05, 2.5707999999999287e-05, 2.5721999999998857e-05, 2.64170000000008e-05, 2.5707999999999287e-05, 2.5693999999999717e-05, 2.640300000000123e-05, 2.640300000000123e-05, 2.6055999999999996e-05, 2.5721999999998857e-05, 2.5680000000000147e-05, 2.538899999999719e-05, 2.643100000000037e-05, 2.5721999999998857e-05, 2.569499999999919e-05, 2.5721999999998857e-05, 2.6042000000000426e-05, 2.572299999999833e-05, 2.640300000000123e-05, 2.6041999999996956e-05, 2.638900000000166e-05, 2.5750000000001466e-05, 2.5707999999999287e-05, 2.534700000000195e-05, 2.5721999999998857e-05, 2.537499999999762e-05, 2.6416000000001327e-05, 2.572299999999833e-05, 2.6069000000000092e-05, 2.537500000000109e-05, 2.6042000000000426e-05, 2.6083999999999136e-05, 2.64170000000008e-05, 2.6416000000001327e-05, 2.537500000000109e-05, 2.537500000000109e-05, 2.640299999999776e-05, 2.5736000000001896e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.453" endtime="20201030 18:29:15.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.449" endtime="20201030 18:29:15.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.460" endtime="20201030 18:29:15.479"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.458" endtime="20201030 18:29:15.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.457" endtime="20201030 18:29:15.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.099" endtime="20201030 18:29:15.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.098" endtime="20201030 18:29:15.480"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.489" endtime="20201030 18:29:15.505"></status>
</kw>
<msg timestamp="20201030 18:29:15.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.488" endtime="20201030 18:29:15.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.506" endtime="20201030 18:29:15.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.509" endtime="20201030 18:29:15.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.485" endtime="20201030 18:29:15.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.483" endtime="20201030 18:29:15.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.518" endtime="20201030 18:29:15.803"></status>
</kw>
<msg timestamp="20201030 18:29:15.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020713861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.516" endtime="20201030 18:29:15.806"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020686764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020713861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.807" endtime="20201030 18:29:15.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.815" endtime="20201030 18:29:15.817"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.514" endtime="20201030 18:29:15.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.512" endtime="20201030 18:29:15.818"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:15.822" level="INFO">${RESULT} = [{'diff': 2.7097000000000232e-05}, {'diff': 2.6749999999998997e-05}, {'diff': 2.6763999999998567e-05}, {'diff': 2.7042000000001426e-05}, {'diff': 2.6402000000001757e-05}, {'diff': 2.6749999999998997e-...</msg>
<status status="PASS" starttime="20201030 18:29:15.819" endtime="20201030 18:29:15.822"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:15.826" level="INFO">${ACCURACY} = {'diff': [2.7097000000000232e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.7042000000001426e-05, 2.6402000000001757e-05, 2.6749999999998997e-05, 2.7098000000003175e-05, 2.7110999999999802e-05...</msg>
<status status="PASS" starttime="20201030 18:29:15.823" endtime="20201030 18:29:15.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.831" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:15.830" endtime="20201030 18:29:15.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.833" level="INFO">VALUE: [2.7097000000000232e-05, 2.6749999999998997e-05, 2.6763999999998567e-05, 2.7042000000001426e-05, 2.6402000000001757e-05, 2.6749999999998997e-05, 2.7098000000003175e-05, 2.7110999999999802e-05, 2.7097999999999706e-05, 2.6749999999998997e-05, 2.6749999999998997e-05, 2.641699999999733e-05, 2.6777999999998137e-05, 2.636100000000252e-05, 2.6471999999999607e-05, 2.745900000000051e-05, 2.7097999999999706e-05, 2.7124999999999372e-05, 2.6750000000002466e-05, 2.7097000000000232e-05, 2.6777999999998137e-05, 2.6791000000001702e-05, 2.7083000000000662e-05, 2.6749999999998997e-05, 2.6735999999999427e-05, 2.640299999999776e-05, 2.6806000000000746e-05, 2.7110999999999802e-05, 2.7097000000000232e-05, 2.6763999999998567e-05, 2.6374999999998622e-05, 2.712500000000284e-05, 2.7083000000000662e-05, 2.7486000000000177e-05, 2.6791000000001702e-05, 2.7527999999998887e-05, 2.7097000000000232e-05, 2.6750000000002466e-05, 2.7512999999999843e-05, 2.6735999999999427e-05, 2.6750000000002466e-05, 2.6749999999998997e-05, 2.7110999999999802e-05, 2.7083000000000662e-05, 2.6735999999999427e-05, 2.7097000000000232e-05, 2.6763999999998567e-05, 2.6764000000002036e-05, 2.7124999999999372e-05, 2.711100000000327e-05]</msg>
<status status="PASS" starttime="20201030 18:29:15.832" endtime="20201030 18:29:15.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.827" endtime="20201030 18:29:15.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:15.839" endtime="20201030 18:29:15.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.838" endtime="20201030 18:29:15.859"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.837" endtime="20201030 18:29:15.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.481" endtime="20201030 18:29:15.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.481" endtime="20201030 18:29:15.860"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.869" endtime="20201030 18:29:15.885"></status>
</kw>
<msg timestamp="20201030 18:29:15.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.867" endtime="20201030 18:29:15.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:15.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:15.887" endtime="20201030 18:29:15.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.889" endtime="20201030 18:29:15.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.865" endtime="20201030 18:29:15.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.863" endtime="20201030 18:29:15.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:15.898" endtime="20201030 18:29:16.184"></status>
</kw>
<msg timestamp="20201030 18:29:16.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:15.897" endtime="20201030 18:29:16.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020080819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.188" endtime="20201030 18:29:16.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.196" endtime="20201030 18:29:16.198"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.894" endtime="20201030 18:29:16.199"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.892" endtime="20201030 18:29:16.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.203" level="INFO">${RESULT} = [{'diff': 2.7791999999998707e-05}, {'diff': 2.8138999999999942e-05}, {'diff': 2.7805999999998277e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.8472000000001607e-05}, {'diff': 2.8125000000000372e-...</msg>
<status status="PASS" starttime="20201030 18:29:16.200" endtime="20201030 18:29:16.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.211" level="INFO">${ACCURACY} = {'diff': [2.7791999999998707e-05, 2.8138999999999942e-05, 2.7805999999998277e-05, 2.8472000000001607e-05, 2.8472000000001607e-05, 2.8125000000000372e-05, 2.744500000000094e-05, 2.7790999999999233e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:16.204" endtime="20201030 18:29:16.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.215" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.214" endtime="20201030 18:29:16.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.218" level="INFO">VALUE: [2.7791999999998707e-05, 2.8138999999999942e-05, 2.7805999999998277e-05, 2.8472000000001607e-05, 2.8472000000001607e-05, 2.8125000000000372e-05, 2.744500000000094e-05, 2.7790999999999233e-05, 2.819499999999822e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.845900000000151e-05, 2.7804999999998803e-05, 2.7790999999999233e-05, 2.8124999999996902e-05, 2.7776999999999663e-05, 2.7458000000001037e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.8125000000000372e-05, 2.8193999999998748e-05, 2.8152000000000038e-05, 2.8138999999999942e-05, 2.8125000000000372e-05, 2.7791999999998707e-05, 2.7790999999999233e-05, 2.8152999999999512e-05, 2.8471999999998138e-05, 2.8138000000000468e-05, 2.8486000000001177e-05, 2.7778000000002606e-05, 2.8125000000000372e-05, 2.7847000000000982e-05, 2.8125000000000372e-05, 2.7792000000002176e-05, 2.7805000000002272e-05, 2.8125000000000372e-05, 2.8152000000000038e-05, 2.7458000000001037e-05, 2.8125000000000372e-05, 2.815300000000298e-05, 2.8472000000001607e-05, 2.8486000000001177e-05, 2.7791000000002702e-05, 2.8485999999997708e-05, 2.8471999999998138e-05, 2.7832999999997943e-05, 2.8152999999999512e-05, 2.8471999999998138e-05, 2.8526999999996944e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.216" endtime="20201030 18:29:16.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.211" endtime="20201030 18:29:16.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.222" endtime="20201030 18:29:16.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.221" endtime="20201030 18:29:16.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.220" endtime="20201030 18:29:16.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.861" endtime="20201030 18:29:16.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:15.861" endtime="20201030 18:29:16.243"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.252" endtime="20201030 18:29:16.267"></status>
</kw>
<msg timestamp="20201030 18:29:16.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.250" endtime="20201030 18:29:16.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.268" endtime="20201030 18:29:16.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.270" endtime="20201030 18:29:16.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.248" endtime="20201030 18:29:16.273"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.246" endtime="20201030 18:29:16.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.280" endtime="20201030 18:29:16.566"></status>
</kw>
<msg timestamp="20201030 18:29:16.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.278" endtime="20201030 18:29:16.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019559639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.571" endtime="20201030 18:29:16.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.579" endtime="20201030 18:29:16.580"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.275" endtime="20201030 18:29:16.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.274" endtime="20201030 18:29:16.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.586" level="INFO">${RESULT} = [{'diff': 2.9499999999998278e-05}, {'diff': 2.8875000000001122e-05}, {'diff': 2.8457999999998568e-05}, {'diff': 2.8847000000001982e-05}, {'diff': 2.9153000000000512e-05}, {'diff': 2.8818999999999373e-...</msg>
<status status="PASS" starttime="20201030 18:29:16.582" endtime="20201030 18:29:16.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.590" level="INFO">${ACCURACY} = {'diff': [2.9499999999998278e-05, 2.8875000000001122e-05, 2.8457999999998568e-05, 2.8847000000001982e-05, 2.9153000000000512e-05, 2.8818999999999373e-05, 2.9236000000001927e-05, 2.9167000000000082e-05...</msg>
<status status="PASS" starttime="20201030 18:29:16.587" endtime="20201030 18:29:16.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.594" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.593" endtime="20201030 18:29:16.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.597" level="INFO">VALUE: [2.9499999999998278e-05, 2.8875000000001122e-05, 2.8457999999998568e-05, 2.8847000000001982e-05, 2.9153000000000512e-05, 2.8818999999999373e-05, 2.9236000000001927e-05, 2.9167000000000082e-05, 2.8818999999999373e-05, 2.8820000000002316e-05, 2.8486000000001177e-05, 2.9166000000000608e-05, 2.8847000000001982e-05, 2.9166000000000608e-05, 2.9112000000001276e-05, 2.918099999999965e-05, 2.9153000000000512e-05, 2.8804999999999803e-05, 2.8819999999998847e-05, 2.8833999999998416e-05, 2.8819000000002842e-05, 2.8847000000001982e-05, 2.8778000000000137e-05, 2.9499999999998278e-05, 2.8486000000001177e-05, 2.8472000000001607e-05, 2.918099999999965e-05, 2.8818999999999373e-05, 2.9236000000001927e-05, 2.9167000000000082e-05, 2.9514000000001317e-05, 2.9167000000000082e-05, 2.8500000000000747e-05, 2.9167000000000082e-05, 2.918099999999965e-05, 2.9166000000000608e-05, 2.8833000000002412e-05, 2.8819999999998847e-05, 2.8819999999998847e-05, 2.8832999999998943e-05, 2.9236000000001927e-05, 2.8778000000000137e-05, 2.9167000000000082e-05, 2.9500000000001747e-05, 2.8485999999997708e-05, 2.9166000000000608e-05, 2.8832999999998943e-05, 2.9096999999998763e-05, 2.844499999999847e-05, 2.8848000000001456e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.595" endtime="20201030 18:29:16.597"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.591" endtime="20201030 18:29:16.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.602" endtime="20201030 18:29:16.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.600" endtime="20201030 18:29:16.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.599" endtime="20201030 18:29:16.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.244" endtime="20201030 18:29:16.622"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.244" endtime="20201030 18:29:16.622"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.631" endtime="20201030 18:29:16.647"></status>
</kw>
<msg timestamp="20201030 18:29:16.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.629" endtime="20201030 18:29:16.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:16.648" endtime="20201030 18:29:16.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.651" endtime="20201030 18:29:16.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.627" endtime="20201030 18:29:16.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.625" endtime="20201030 18:29:16.653"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.660" endtime="20201030 18:29:16.945"></status>
</kw>
<msg timestamp="20201030 18:29:16.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.658" endtime="20201030 18:29:16.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020544611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020574819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:16.950" endtime="20201030 18:29:16.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:16.958" endtime="20201030 18:29:16.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.656" endtime="20201030 18:29:16.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.654" endtime="20201030 18:29:16.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:16.964" level="INFO">${RESULT} = [{'diff': 3.0208000000000318e-05}, {'diff': 3.0208000000000318e-05}, {'diff': 3.0194000000000748e-05}, {'diff': 3.0181000000000652e-05}, {'diff': 2.9514000000001317e-05}, {'diff': 2.9860999999999083e-...</msg>
<status status="PASS" starttime="20201030 18:29:16.961" endtime="20201030 18:29:16.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:16.969" level="INFO">${ACCURACY} = {'diff': [3.0208000000000318e-05, 3.0208000000000318e-05, 3.0194000000000748e-05, 3.0181000000000652e-05, 2.9514000000001317e-05, 2.9860999999999083e-05, 3.020899999999979e-05, 2.9514000000001317e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:16.965" endtime="20201030 18:29:16.969"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.973" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:16.972" endtime="20201030 18:29:16.973"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:16.975" level="INFO">VALUE: [3.0208000000000318e-05, 3.0208000000000318e-05, 3.0194000000000748e-05, 3.0181000000000652e-05, 2.9514000000001317e-05, 2.9860999999999083e-05, 3.020899999999979e-05, 2.9514000000001317e-05, 2.9569999999999597e-05, 2.9513999999997848e-05, 3.0249999999999028e-05, 3.0263999999998598e-05, 2.9860999999999083e-05, 3.0208000000000318e-05, 2.9860999999999083e-05, 2.9805000000000803e-05, 2.9514000000001317e-05, 3.020899999999979e-05, 3.0208000000000318e-05, 2.9861999999998556e-05, 2.9846999999999513e-05, 2.9513999999997848e-05, 2.9514000000001317e-05, 2.9527999999997417e-05, 3.054199999999799e-05, 2.9528000000000887e-05, 2.9860999999999083e-05, 2.9861999999998556e-05, 3.0208000000000318e-05, 2.9874999999998653e-05, 2.9861000000002552e-05, 3.054199999999799e-05, 3.020899999999979e-05, 2.9846999999999513e-05, 2.9846999999999513e-05, 2.9860999999999083e-05, 2.9874999999998653e-05, 2.9861000000002552e-05, 2.9512999999998374e-05, 3.0208000000000318e-05, 2.9860999999999083e-05, 2.9513999999997848e-05, 3.054200000000146e-05, 2.9860999999999083e-05, 3.0194000000000748e-05, 2.9875000000002122e-05, 2.9861000000002552e-05, 2.9514000000001317e-05, 2.9526999999997944e-05, 2.9944000000000498e-05]</msg>
<status status="PASS" starttime="20201030 18:29:16.974" endtime="20201030 18:29:16.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.969" endtime="20201030 18:29:16.982"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:16.986" endtime="20201030 18:29:17.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.984" endtime="20201030 18:29:17.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.983" endtime="20201030 18:29:17.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.623" endtime="20201030 18:29:17.006"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:16.623" endtime="20201030 18:29:17.007"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.015" endtime="20201030 18:29:17.030"></status>
</kw>
<msg timestamp="20201030 18:29:17.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.014" endtime="20201030 18:29:17.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.035" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.032" endtime="20201030 18:29:17.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.036" endtime="20201030 18:29:17.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.011" endtime="20201030 18:29:17.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.009" endtime="20201030 18:29:17.039"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.047" endtime="20201030 18:29:17.334"></status>
</kw>
<msg timestamp="20201030 18:29:17.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.044" endtime="20201030 18:29:17.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019693403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.338" endtime="20201030 18:29:17.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.347" endtime="20201030 18:29:17.348"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.041" endtime="20201030 18:29:17.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.039" endtime="20201030 18:29:17.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.353" level="INFO">${RESULT} = [{'diff': 3.119399999999828e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.091700000000183e-05}, {'diff': 3.0540999999998514e-05}, {'diff': 3.123600000000046e-05}, {'diff': 3.055599999999756e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:17.350" endtime="20201030 18:29:17.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.358" level="INFO">${ACCURACY} = {'diff': [3.119399999999828e-05, 3.123600000000046e-05, 3.091700000000183e-05, 3.0540999999998514e-05, 3.123600000000046e-05, 3.055599999999756e-05, 3.122200000000089e-05, 3.125000000000003e-05, 3.122...</msg>
<status status="PASS" starttime="20201030 18:29:17.354" endtime="20201030 18:29:17.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.363" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.362" endtime="20201030 18:29:17.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.365" level="INFO">VALUE: [3.119399999999828e-05, 3.123600000000046e-05, 3.091700000000183e-05, 3.0540999999998514e-05, 3.123600000000046e-05, 3.055599999999756e-05, 3.122200000000089e-05, 3.125000000000003e-05, 3.122199999999742e-05, 3.054199999999799e-05, 3.088899999999922e-05, 3.0526999999998944e-05, 3.123699999999993e-05, 3.056900000000112e-05, 3.130599999999831e-05, 3.1610999999997363e-05, 3.123600000000046e-05, 3.125000000000003e-05, 3.125000000000003e-05, 3.052800000000189e-05, 3.097200000000064e-05, 3.055599999999756e-05, 3.1568999999998654e-05, 3.123600000000046e-05, 3.056900000000112e-05, 3.088899999999922e-05, 3.090299999999879e-05, 3.061099999999983e-05, 3.090300000000226e-05, 3.090299999999879e-05, 3.126400000000307e-05, 3.054200000000146e-05, 3.090299999999879e-05, 3.06249999999994e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.090199999999932e-05, 3.055599999999756e-05, 3.048699999999918e-05, 3.088900000000269e-05, 3.090300000000226e-05, 3.125000000000003e-05, 3.094399999999803e-05, 3.118099999999818e-05, 3.088900000000269e-05, 3.054200000000146e-05, 3.117999999999871e-05, 3.090299999999879e-05, 3.127799999999917e-05, 3.1596999999997794e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.364" endtime="20201030 18:29:17.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.359" endtime="20201030 18:29:17.367"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.370" endtime="20201030 18:29:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.369" endtime="20201030 18:29:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.368" endtime="20201030 18:29:17.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.008" endtime="20201030 18:29:17.391"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.007" endtime="20201030 18:29:17.391"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.400" endtime="20201030 18:29:17.415"></status>
</kw>
<msg timestamp="20201030 18:29:17.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.398" endtime="20201030 18:29:17.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.416" endtime="20201030 18:29:17.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.419" endtime="20201030 18:29:17.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.395" endtime="20201030 18:29:17.421"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.393" endtime="20201030 18:29:17.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.428" endtime="20201030 18:29:17.716"></status>
</kw>
<msg timestamp="20201030 18:29:17.719" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.426" endtime="20201030 18:29:17.719"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019557903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.720" endtime="20201030 18:29:17.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.728" endtime="20201030 18:29:17.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.424" endtime="20201030 18:29:17.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.422" endtime="20201030 18:29:17.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:17.735" level="INFO">${RESULT} = [{'diff': 3.477800000000267e-05}, {'diff': 3.493100000000193e-05}, {'diff': 3.495799999999813e-05}, {'diff': 3.466699999999864e-05}, {'diff': 3.4875000000000184e-05}, {'diff': 3.5166999999999143e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:17.732" endtime="20201030 18:29:17.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:17.739" level="INFO">${ACCURACY} = {'diff': [3.477800000000267e-05, 3.493100000000193e-05, 3.495799999999813e-05, 3.466699999999864e-05, 3.4875000000000184e-05, 3.5166999999999143e-05, 3.544499999999853e-05, 3.469500000000125e-05, 3.50...</msg>
<status status="PASS" starttime="20201030 18:29:17.736" endtime="20201030 18:29:17.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.744" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:17.743" endtime="20201030 18:29:17.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.746" level="INFO">VALUE: [3.477800000000267e-05, 3.493100000000193e-05, 3.495799999999813e-05, 3.466699999999864e-05, 3.4875000000000184e-05, 3.5166999999999143e-05, 3.544499999999853e-05, 3.469500000000125e-05, 3.50840000000012e-05, 3.523600000000099e-05, 3.501399999999988e-05, 3.498700000000021e-05, 3.548700000000071e-05, 3.4569000000001654e-05, 3.523600000000099e-05, 3.523599999999752e-05, 3.494399999999856e-05, 3.448600000000024e-05, 3.4790999999999295e-05, 3.47779999999992e-05, 3.4611000000000364e-05, 3.4861000000000614e-05, 3.5097000000001294e-05, 3.545799999999863e-05, 3.476399999999963e-05, 3.523600000000099e-05, 3.469400000000178e-05, 3.5347000000001544e-05, 3.498600000000074e-05, 3.479199999999877e-05, 3.451399999999938e-05, 3.491700000000236e-05, 3.526400000000013e-05, 3.533400000000145e-05, 3.483400000000095e-05, 3.498600000000074e-05, 3.538799999999731e-05, 3.540300000000329e-05, 3.533399999999798e-05, 3.5375000000000684e-05, 3.469499999999778e-05, 3.5111000000000864e-05, 3.466599999999917e-05, 3.4611000000000364e-05, 3.5111000000000864e-05, 3.468000000000221e-05, 3.4583000000001224e-05, 3.5152999999999573e-05, 3.531999999999841e-05, 3.4833000000001474e-05]</msg>
<status status="PASS" starttime="20201030 18:29:17.745" endtime="20201030 18:29:17.747"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.740" endtime="20201030 18:29:17.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:17.751" endtime="20201030 18:29:17.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.750" endtime="20201030 18:29:17.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.748" endtime="20201030 18:29:17.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.392" endtime="20201030 18:29:17.772"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.391" endtime="20201030 18:29:17.772"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.780" endtime="20201030 18:29:17.798"></status>
</kw>
<msg timestamp="20201030 18:29:17.799" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.779" endtime="20201030 18:29:17.799"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:17.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:17.800" endtime="20201030 18:29:17.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.802" endtime="20201030 18:29:17.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.776" endtime="20201030 18:29:17.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.774" endtime="20201030 18:29:17.805"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:17.811" endtime="20201030 18:29:18.097"></status>
</kw>
<msg timestamp="20201030 18:29:18.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:17.810" endtime="20201030 18:29:18.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021059931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021095681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.101" endtime="20201030 18:29:18.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.109" endtime="20201030 18:29:18.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.807" endtime="20201030 18:29:18.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.805" endtime="20201030 18:29:18.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.116" level="INFO">${RESULT} = [{'diff': 3.575000000000106e-05}, {'diff': 3.606999999999916e-05}, {'diff': 3.5874999999997714e-05}, {'diff': 3.616600000000067e-05}, {'diff': 3.632000000000288e-05}, {'diff': 3.6346999999999074e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:18.112" endtime="20201030 18:29:18.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.120" level="INFO">${ACCURACY} = {'diff': [3.575000000000106e-05, 3.606999999999916e-05, 3.5874999999997714e-05, 3.616600000000067e-05, 3.632000000000288e-05, 3.6346999999999074e-05, 3.572200000000192e-05, 3.5833000000002474e-05, 3.5...</msg>
<status status="PASS" starttime="20201030 18:29:18.117" endtime="20201030 18:29:18.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.124" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.123" endtime="20201030 18:29:18.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.127" level="INFO">VALUE: [3.575000000000106e-05, 3.606999999999916e-05, 3.5874999999997714e-05, 3.616600000000067e-05, 3.632000000000288e-05, 3.6346999999999074e-05, 3.572200000000192e-05, 3.5833000000002474e-05, 3.57780000000002e-05, 3.626400000000113e-05, 3.6041000000000545e-05, 3.5568999999999185e-05, 3.5554999999999615e-05, 3.5860999999998144e-05, 3.5568999999999185e-05, 3.5916999999999893e-05, 3.605599999999959e-05, 3.5582999999998755e-05, 3.6305000000000365e-05, 3.556999999999866e-05, 3.605599999999959e-05, 3.572200000000192e-05, 3.620899999999885e-05, 3.6167000000000143e-05, 3.5610999999997894e-05, 3.5916999999999893e-05, 3.5666999999999643e-05, 3.5639000000000504e-05, 3.570799999999888e-05, 3.6111000000001864e-05, 3.5791000000000295e-05, 3.575000000000106e-05, 3.5610999999997894e-05, 3.6305000000000365e-05, 3.597299999999817e-05, 3.5804999999999865e-05, 3.5875000000001184e-05, 3.598600000000174e-05, 3.5847000000002044e-05, 3.5639000000000504e-05, 3.6389000000001254e-05, 3.605599999999959e-05, 3.623600000000199e-05, 3.57780000000002e-05, 3.623600000000199e-05, 3.6138999999997534e-05, 3.604200000000002e-05, 3.550000000000081e-05, 3.5861000000001614e-05, 3.551400000000038e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.125" endtime="20201030 18:29:18.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.121" endtime="20201030 18:29:18.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.133" endtime="20201030 18:29:18.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.131" endtime="20201030 18:29:18.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.130" endtime="20201030 18:29:18.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.773" endtime="20201030 18:29:18.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:17.772" endtime="20201030 18:29:18.154"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.163" endtime="20201030 18:29:18.179"></status>
</kw>
<msg timestamp="20201030 18:29:18.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.161" endtime="20201030 18:29:18.180"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.181" endtime="20201030 18:29:18.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.183" endtime="20201030 18:29:18.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.158" endtime="20201030 18:29:18.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.156" endtime="20201030 18:29:18.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.192" endtime="20201030 18:29:18.478"></status>
</kw>
<msg timestamp="20201030 18:29:18.481" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.191" endtime="20201030 18:29:18.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.489" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020710639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.482" endtime="20201030 18:29:18.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.490" endtime="20201030 18:29:18.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.188" endtime="20201030 18:29:18.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.187" endtime="20201030 18:29:18.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.497" level="INFO">${RESULT} = [{'diff': 3.698599999999927e-05}, {'diff': 3.65979999999988e-05}, {'diff': 3.677799999999773e-05}, {'diff': 3.6930999999996994e-05}, {'diff': 3.732000000000041e-05}, {'diff': 3.684799999999905e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:18.494" endtime="20201030 18:29:18.497"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.502" level="INFO">${ACCURACY} = {'diff': [3.698599999999927e-05, 3.65979999999988e-05, 3.677799999999773e-05, 3.6930999999996994e-05, 3.732000000000041e-05, 3.684799999999905e-05, 3.70979999999993e-05, 3.680600000000034e-05, 3.74720...</msg>
<status status="PASS" starttime="20201030 18:29:18.498" endtime="20201030 18:29:18.502"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.507" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.506" endtime="20201030 18:29:18.507"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.509" level="INFO">VALUE: [3.698599999999927e-05, 3.65979999999988e-05, 3.677799999999773e-05, 3.6930999999996994e-05, 3.732000000000041e-05, 3.684799999999905e-05, 3.70979999999993e-05, 3.680600000000034e-05, 3.74720000000002e-05, 3.670799999999988e-05, 3.7083000000000255e-05, 3.676400000000163e-05, 3.7388999999998784e-05, 3.7110999999999394e-05, 3.698599999999927e-05, 3.7374999999999214e-05, 3.7347000000000075e-05, 3.748599999999977e-05, 3.673600000000249e-05, 3.7096999999999825e-05, 3.6569000000000185e-05, 3.684799999999905e-05, 3.6653000000001074e-05, 3.74590000000001e-05, 3.670899999999935e-05, 3.7389000000002254e-05, 3.705600000000059e-05, 3.6860999999999144e-05, 3.658399999999923e-05, 3.7110999999999394e-05, 3.670899999999935e-05, 3.651399999999791e-05, 3.7055000000001115e-05, 3.722199999999995e-05, 3.7276999999998756e-05, 3.672199999999945e-05, 3.6611000000002364e-05, 3.745800000000063e-05, 3.7096999999999825e-05, 3.6847000000003044e-05, 3.699999999999884e-05, 3.6916999999997424e-05, 3.719400000000081e-05, 3.74720000000002e-05, 3.701400000000188e-05, 3.69589999999996e-05, 3.679200000000077e-05, 3.702799999999798e-05, 3.74590000000001e-05, 3.736199999999912e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.508" endtime="20201030 18:29:18.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.503" endtime="20201030 18:29:18.510"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.514" endtime="20201030 18:29:18.533"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.512" endtime="20201030 18:29:18.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.511" endtime="20201030 18:29:18.534"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.155" endtime="20201030 18:29:18.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.154" endtime="20201030 18:29:18.535"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.544" endtime="20201030 18:29:18.560"></status>
</kw>
<msg timestamp="20201030 18:29:18.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.542" endtime="20201030 18:29:18.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.562" endtime="20201030 18:29:18.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.564" endtime="20201030 18:29:18.566"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.539" endtime="20201030 18:29:18.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.537" endtime="20201030 18:29:18.567"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.573" endtime="20201030 18:29:18.860"></status>
</kw>
<msg timestamp="20201030 18:29:18.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.572" endtime="20201030 18:29:18.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020468708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020506875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.864" endtime="20201030 18:29:18.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.873" endtime="20201030 18:29:18.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.569" endtime="20201030 18:29:18.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.568" endtime="20201030 18:29:18.875"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:18.879" level="INFO">${RESULT} = [{'diff': 3.8167000000002144e-05}, {'diff': 3.7833000000001005e-05}, {'diff': 3.7917000000001894e-05}, {'diff': 3.8346999999997605e-05}, {'diff': 3.805600000000159e-05}, {'diff': 3.8361000000000645e-0...</msg>
<status status="PASS" starttime="20201030 18:29:18.876" endtime="20201030 18:29:18.879"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:18.883" level="INFO">${ACCURACY} = {'diff': [3.8167000000002144e-05, 3.7833000000001005e-05, 3.7917000000001894e-05, 3.8346999999997605e-05, 3.805600000000159e-05, 3.8361000000000645e-05, 3.825000000000009e-05, 3.8181000000001714e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:18.880" endtime="20201030 18:29:18.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.888" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 18:29:18.887" endtime="20201030 18:29:18.888"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.891" level="INFO">VALUE: [3.8167000000002144e-05, 3.7833000000001005e-05, 3.7917000000001894e-05, 3.8346999999997605e-05, 3.805600000000159e-05, 3.8361000000000645e-05, 3.825000000000009e-05, 3.8181000000001714e-05, 3.7931000000001464e-05, 3.792999999999852e-05, 3.798600000000027e-05, 3.791600000000242e-05, 3.801399999999941e-05, 3.7624999999999464e-05, 3.845800000000163e-05, 3.8290999999999326e-05, 3.819399999999834e-05, 3.802800000000245e-05, 3.8111000000000395e-05, 3.8318999999998465e-05, 3.776399999999916e-05, 3.832000000000141e-05, 3.7902999999998854e-05, 3.8347000000001075e-05, 3.7917000000001894e-05, 3.782000000000091e-05, 3.783400000000048e-05, 3.8403000000002824e-05, 3.7653000000002074e-05, 3.767999999999827e-05, 3.807000000000116e-05, 3.7569000000001185e-05, 3.770800000000088e-05, 3.7846999999997105e-05, 3.7832999999997535e-05, 3.790199999999938e-05, 3.8096999999997355e-05, 3.7833000000001005e-05, 3.8333000000001505e-05, 3.767999999999827e-05, 3.8167000000002144e-05, 3.754199999999805e-05, 3.804200000000202e-05, 3.802799999999898e-05, 3.8333000000001505e-05, 3.8111000000000395e-05, 3.780600000000134e-05, 3.832000000000141e-05, 3.751399999999891e-05, 3.7846999999997105e-05]</msg>
<status status="PASS" starttime="20201030 18:29:18.889" endtime="20201030 18:29:18.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.884" endtime="20201030 18:29:18.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:18.895" endtime="20201030 18:29:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.894" endtime="20201030 18:29:18.915"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.893" endtime="20201030 18:29:18.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.536" endtime="20201030 18:29:18.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.535" endtime="20201030 18:29:18.916"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.925" endtime="20201030 18:29:18.942"></status>
</kw>
<msg timestamp="20201030 18:29:18.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.923" endtime="20201030 18:29:18.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:18.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:18.943" endtime="20201030 18:29:18.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.946" endtime="20201030 18:29:18.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.921" endtime="20201030 18:29:18.948"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.919" endtime="20201030 18:29:18.949"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:18.955" endtime="20201030 18:29:19.241"></status>
</kw>
<msg timestamp="20201030 18:29:19.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:18.953" endtime="20201030 18:29:19.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020580875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020620056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.245" endtime="20201030 18:29:19.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.253" endtime="20201030 18:29:19.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.951" endtime="20201030 18:29:19.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.949" endtime="20201030 18:29:19.256"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.260" level="INFO">${RESULT} = [{'diff': 3.9181000000002714e-05}, {'diff': 3.9403000000000354e-05}, {'diff': 3.9444999999999064e-05}, {'diff': 3.9068999999999215e-05}, {'diff': 3.895799999999866e-05}, {'diff': 3.869399999999884e-05...</msg>
<status status="PASS" starttime="20201030 18:29:19.256" endtime="20201030 18:29:19.260"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.264" level="INFO">${ACCURACY} = {'diff': [3.9181000000002714e-05, 3.9403000000000354e-05, 3.9444999999999064e-05, 3.9068999999999215e-05, 3.895799999999866e-05, 3.869399999999884e-05, 3.872200000000145e-05, 3.919399999999934e-05, 3....</msg>
<status status="PASS" starttime="20201030 18:29:19.261" endtime="20201030 18:29:19.264"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.268" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.267" endtime="20201030 18:29:19.269"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.271" level="INFO">VALUE: [3.9181000000002714e-05, 3.9403000000000354e-05, 3.9444999999999064e-05, 3.9068999999999215e-05, 3.895799999999866e-05, 3.869399999999884e-05, 3.872200000000145e-05, 3.919399999999934e-05, 3.899999999999737e-05, 3.872199999999798e-05, 3.8889000000000284e-05, 3.8832999999998535e-05, 3.926400000000066e-05, 3.9416999999999924e-05, 3.920799999999891e-05, 3.895799999999866e-05, 3.855600000000209e-05, 3.9347000000002075e-05, 3.915200000000063e-05, 3.8639000000000034e-05, 3.9458999999998634e-05, 3.873600000000102e-05, 3.8625000000000465e-05, 3.8639000000000034e-05, 3.8874999999997245e-05, 3.870799999999841e-05, 3.8875000000000715e-05, 3.9068999999999215e-05, 3.900000000000084e-05, 3.865200000000013e-05, 3.877799999999973e-05, 3.8625000000000465e-05, 3.922200000000195e-05, 3.9416999999999924e-05, 3.920799999999891e-05, 3.9111000000001395e-05, 3.9153000000000104e-05, 3.901400000000041e-05, 3.8931000000002464e-05, 3.9332999999999035e-05, 3.85980000000008e-05, 3.884799999999758e-05, 3.8680999999998744e-05, 3.926400000000066e-05, 3.925000000000109e-05, 3.884800000000105e-05, 3.923599999999805e-05, 3.870799999999841e-05, 3.9277000000000756e-05, 3.9277000000000756e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.269" endtime="20201030 18:29:19.272"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.265" endtime="20201030 18:29:19.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.277" endtime="20201030 18:29:19.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.275" endtime="20201030 18:29:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.274" endtime="20201030 18:29:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.917" endtime="20201030 18:29:19.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:18.917" endtime="20201030 18:29:19.297"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.306" endtime="20201030 18:29:19.323"></status>
</kw>
<msg timestamp="20201030 18:29:19.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.304" endtime="20201030 18:29:19.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.324" endtime="20201030 18:29:19.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.327" endtime="20201030 18:29:19.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.302" endtime="20201030 18:29:19.329"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.300" endtime="20201030 18:29:19.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.336" endtime="20201030 18:29:19.622"></status>
</kw>
<msg timestamp="20201030 18:29:19.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.334" endtime="20201030 18:29:19.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020404472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.626" endtime="20201030 18:29:19.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.634" endtime="20201030 18:29:19.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.332" endtime="20201030 18:29:19.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.330" endtime="20201030 18:29:19.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:19.641" level="INFO">${RESULT} = [{'diff': 4.0319000000000466e-05}, {'diff': 3.948600000000177e-05}, {'diff': 3.955599999999962e-05}, {'diff': 4.0333000000000035e-05}, {'diff': 4.0152999999997635e-05}, {'diff': 4.030600000000037e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:19.637" endtime="20201030 18:29:19.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:19.648" level="INFO">${ACCURACY} = {'diff': [4.0319000000000466e-05, 3.948600000000177e-05, 3.955599999999962e-05, 4.0333000000000035e-05, 4.0152999999997635e-05, 4.030600000000037e-05, 3.9638999999997565e-05, 3.9847000000002575e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:29:19.642" endtime="20201030 18:29:19.649"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.653" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 18:29:19.652" endtime="20201030 18:29:19.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.655" level="INFO">VALUE: [4.0319000000000466e-05, 3.948600000000177e-05, 3.955599999999962e-05, 4.0333000000000035e-05, 4.0152999999997635e-05, 4.030600000000037e-05, 3.9638999999997565e-05, 3.9847000000002575e-05, 3.974999999999812e-05, 4.01660000000012e-05, 3.9638999999997565e-05, 3.9639000000001035e-05, 3.9430999999999494e-05, 4.051399999999844e-05, 4.038799999999884e-05, 4.0138999999998065e-05, 4.0167000000000674e-05, 3.974999999999812e-05, 4.026400000000166e-05, 3.973599999999855e-05, 4.047199999999973e-05, 3.9555000000000146e-05, 4.02920000000008e-05, 3.9861000000002145e-05, 3.9860999999998675e-05, 3.9860999999998675e-05, 3.952800000000048e-05, 4.0096999999999355e-05, 3.981999999999944e-05, 4.0346999999999605e-05, 4.0223000000002423e-05, 3.9972999999998704e-05, 3.9624999999997995e-05, 3.9973000000002173e-05, 4.0458999999999634e-05, 4.0013000000001936e-05, 4.038799999999884e-05, 4.019400000000034e-05, 4.0389000000001785e-05, 3.994400000000009e-05, 4.040200000000188e-05, 4.0360999999999175e-05, 4.0333000000000035e-05, 4.0124999999998495e-05, 4.0181000000000244e-05, 4.008399999999926e-05, 4.0111000000002395e-05, 3.9860999999998675e-05, 4.030600000000037e-05, 4.0431000000000494e-05]</msg>
<status status="PASS" starttime="20201030 18:29:19.654" endtime="20201030 18:29:19.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.649" endtime="20201030 18:29:19.657"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:19.660" endtime="20201030 18:29:19.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.659" endtime="20201030 18:29:19.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.658" endtime="20201030 18:29:19.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.298" endtime="20201030 18:29:19.681"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.298" endtime="20201030 18:29:19.681"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.690" endtime="20201030 18:29:19.707"></status>
</kw>
<msg timestamp="20201030 18:29:19.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.688" endtime="20201030 18:29:19.707"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:19.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:19.708" endtime="20201030 18:29:19.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.711" endtime="20201030 18:29:19.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.686" endtime="20201030 18:29:19.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.684" endtime="20201030 18:29:19.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:19.720" endtime="20201030 18:29:20.006"></status>
</kw>
<msg timestamp="20201030 18:29:20.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:19.718" endtime="20201030 18:29:20.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020130431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020171861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.010" endtime="20201030 18:29:20.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.019" endtime="20201030 18:29:20.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.716" endtime="20201030 18:29:20.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.714" endtime="20201030 18:29:20.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.025" level="INFO">${RESULT} = [{'diff': 4.142999999999855e-05}, {'diff': 4.0930999999997525e-05}, {'diff': 4.09859999999998e-05}, {'diff': 4.1097000000000355e-05}, {'diff': 4.133399999999704e-05}, {'diff': 4.0805000000001396e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:20.022" endtime="20201030 18:29:20.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.030" level="INFO">${ACCURACY} = {'diff': [4.142999999999855e-05, 4.0930999999997525e-05, 4.09859999999998e-05, 4.1097000000000355e-05, 4.133399999999704e-05, 4.0805000000001396e-05, 4.097200000000023e-05, 4.1125000000002965e-05, 4.1...</msg>
<status status="PASS" starttime="20201030 18:29:20.026" endtime="20201030 18:29:20.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.034" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.033" endtime="20201030 18:29:20.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.036" level="INFO">VALUE: [4.142999999999855e-05, 4.0930999999997525e-05, 4.09859999999998e-05, 4.1097000000000355e-05, 4.133399999999704e-05, 4.0805000000001396e-05, 4.097200000000023e-05, 4.1125000000002965e-05, 4.1402999999998885e-05, 4.1222999999999954e-05, 4.057000000000019e-05, 4.0569000000000716e-05, 4.0526999999998536e-05, 4.0625000000002465e-05, 4.1110999999999925e-05, 4.120799999999744e-05, 4.0554999999997676e-05, 4.073599999999955e-05, 4.126399999999919e-05, 4.1290999999998856e-05, 4.124999999999962e-05, 4.123600000000005e-05, 4.054200000000105e-05, 4.051399999999844e-05, 4.126399999999919e-05, 4.0708999999999884e-05, 4.102799999999851e-05, 4.0972999999999704e-05, 4.1374999999999745e-05, 4.0860999999999675e-05, 4.108399999999679e-05, 4.1402999999998885e-05, 4.0762999999999217e-05, 4.122200000000048e-05, 4.074999999999912e-05, 4.091600000000195e-05, 4.1167000000001674e-05, 4.0583000000000286e-05, 4.0583000000000286e-05, 4.0860999999999675e-05, 4.127799999999876e-05, 4.094399999999762e-05, 4.1167000000001674e-05, 4.0708999999999884e-05, 4.0667000000001174e-05, 4.0902999999998385e-05, 4.09859999999998e-05, 4.0860999999999675e-05, 4.0708999999999884e-05, 4.124999999999962e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.035" endtime="20201030 18:29:20.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.030" endtime="20201030 18:29:20.038"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.042" endtime="20201030 18:29:20.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.040" endtime="20201030 18:29:20.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.039" endtime="20201030 18:29:20.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.682" endtime="20201030 18:29:20.062"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:19.681" endtime="20201030 18:29:20.062"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.071" endtime="20201030 18:29:20.088"></status>
</kw>
<msg timestamp="20201030 18:29:20.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.069" endtime="20201030 18:29:20.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.090" endtime="20201030 18:29:20.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.092" endtime="20201030 18:29:20.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.067" endtime="20201030 18:29:20.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.065" endtime="20201030 18:29:20.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.101" endtime="20201030 18:29:20.386"></status>
</kw>
<msg timestamp="20201030 18:29:20.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.100" endtime="20201030 18:29:20.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020655972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.391" endtime="20201030 18:29:20.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.399" endtime="20201030 18:29:20.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.097" endtime="20201030 18:29:20.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.095" endtime="20201030 18:29:20.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.405" level="INFO">${RESULT} = [{'diff': 4.18059999999984e-05}, {'diff': 4.18059999999984e-05}, {'diff': 4.1709000000000884e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.2347000000001606e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:20.402" endtime="20201030 18:29:20.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.410" level="INFO">${ACCURACY} = {'diff': [4.18059999999984e-05, 4.18059999999984e-05, 4.1709000000000884e-05, 4.204199999999908e-05, 4.151399999999944e-05, 4.2347000000001606e-05, 4.190199999999991e-05, 4.216599999999973e-05, 4.1916...</msg>
<status status="PASS" starttime="20201030 18:29:20.406" endtime="20201030 18:29:20.410"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.414" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.413" endtime="20201030 18:29:20.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.417" level="INFO">VALUE: [4.18059999999984e-05, 4.18059999999984e-05, 4.1709000000000884e-05, 4.204199999999908e-05, 4.151399999999944e-05, 4.2347000000001606e-05, 4.190199999999991e-05, 4.216599999999973e-05, 4.1916999999998955e-05, 4.1832999999998066e-05, 4.244399999999912e-05, 4.247199999999826e-05, 4.2111000000000925e-05, 4.175000000000012e-05, 4.157000000000119e-05, 4.2333000000002036e-05, 4.1902999999999385e-05, 4.248599999999783e-05, 4.151399999999944e-05, 4.2096999999997886e-05, 4.222200000000148e-05, 4.2459000000001634e-05, 4.177799999999926e-05, 4.2110999999997456e-05, 4.208399999999779e-05, 4.234799999999761e-05, 4.1638999999999565e-05, 4.169400000000184e-05, 4.169399999999837e-05, 4.225000000000062e-05, 4.194399999999862e-05, 4.2346999999998136e-05, 4.1582999999997816e-05, 4.2096999999997886e-05, 4.1916999999998955e-05, 4.219399999999887e-05, 4.1833000000001536e-05, 4.2402999999999885e-05, 4.173600000000055e-05, 4.179199999999883e-05, 4.172200000000098e-05, 4.1583000000001286e-05, 4.177799999999926e-05, 4.1916999999998955e-05, 4.1680999999998275e-05, 4.2139000000000065e-05, 4.173599999999708e-05, 4.245800000000216e-05, 4.188800000000034e-05, 4.1624999999999995e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.415" endtime="20201030 18:29:20.418"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.411" endtime="20201030 18:29:20.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.422" endtime="20201030 18:29:20.442"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.421" endtime="20201030 18:29:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.420" endtime="20201030 18:29:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.063" endtime="20201030 18:29:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.063" endtime="20201030 18:29:20.443"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.452" endtime="20201030 18:29:20.469"></status>
</kw>
<msg timestamp="20201030 18:29:20.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.450" endtime="20201030 18:29:20.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.470" endtime="20201030 18:29:20.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.473" endtime="20201030 18:29:20.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.448" endtime="20201030 18:29:20.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.446" endtime="20201030 18:29:20.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.482" endtime="20201030 18:29:20.766"></status>
</kw>
<msg timestamp="20201030 18:29:20.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.480" endtime="20201030 18:29:20.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019888833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019931569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.770" endtime="20201030 18:29:20.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.778" endtime="20201030 18:29:20.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.478" endtime="20201030 18:29:20.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.476" endtime="20201030 18:29:20.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:20.785" level="INFO">${RESULT} = [{'diff': 4.273599999999808e-05}, {'diff': 4.293000000000005e-05}, {'diff': 4.295799999999919e-05}, {'diff': 4.3167000000000205e-05}, {'diff': 4.326399999999772e-05}, {'diff': 4.279199999999983e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:20.782" endtime="20201030 18:29:20.785"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:20.790" level="INFO">${ACCURACY} = {'diff': [4.273599999999808e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.3167000000000205e-05, 4.326399999999772e-05, 4.279199999999983e-05, 4.300000000000137e-05, 4.327700000000129e-05, 4.291...</msg>
<status status="PASS" starttime="20201030 18:29:20.786" endtime="20201030 18:29:20.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.795" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 18:29:20.794" endtime="20201030 18:29:20.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.797" level="INFO">VALUE: [4.273599999999808e-05, 4.293000000000005e-05, 4.295799999999919e-05, 4.3167000000000205e-05, 4.326399999999772e-05, 4.279199999999983e-05, 4.300000000000137e-05, 4.327700000000129e-05, 4.2916999999999955e-05, 4.2610999999997956e-05, 4.29860000000018e-05, 4.251400000000044e-05, 4.3110999999998456e-05, 4.2861000000001676e-05, 4.309800000000183e-05, 4.3487000000001774e-05, 4.2611000000001426e-05, 4.2902999999996916e-05, 4.2958999999998665e-05, 4.341599999999751e-05, 4.313799999999812e-05, 4.3291000000000857e-05, 4.322199999999901e-05, 4.3417000000000455e-05, 4.279199999999983e-05, 4.273600000000155e-05, 4.2666999999999705e-05, 4.323599999999858e-05, 4.251400000000044e-05, 4.33059999999999e-05, 4.2874999999997776e-05, 4.307000000000269e-05, 4.2874999999997776e-05, 4.252800000000001e-05, 4.2582999999998816e-05, 4.325000000000162e-05, 4.347199999999926e-05, 4.324999999999815e-05, 4.277800000000026e-05, 4.275000000000112e-05, 4.3444999999999595e-05, 4.327800000000076e-05, 4.3360999999998706e-05, 4.2916999999999955e-05, 4.327800000000076e-05, 4.322199999999901e-05, 4.3444999999999595e-05, 4.3417000000000455e-05, 4.3375000000001745e-05, 4.2625000000000995e-05]</msg>
<status status="PASS" starttime="20201030 18:29:20.796" endtime="20201030 18:29:20.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.791" endtime="20201030 18:29:20.798"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:20.802" endtime="20201030 18:29:20.821"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.801" endtime="20201030 18:29:20.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.799" endtime="20201030 18:29:20.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.444" endtime="20201030 18:29:20.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.444" endtime="20201030 18:29:20.823"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.831" endtime="20201030 18:29:20.847"></status>
</kw>
<msg timestamp="20201030 18:29:20.847" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.830" endtime="20201030 18:29:20.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:20.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:20.848" endtime="20201030 18:29:20.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.851" endtime="20201030 18:29:20.852"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.827" endtime="20201030 18:29:20.853"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.825" endtime="20201030 18:29:20.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:20.860" endtime="20201030 18:29:21.146"></status>
</kw>
<msg timestamp="20201030 18:29:21.150" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019507333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:20.858" endtime="20201030 18:29:21.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019463319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019507333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.151" endtime="20201030 18:29:21.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.159" endtime="20201030 18:29:21.160"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.856" endtime="20201030 18:29:21.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.854" endtime="20201030 18:29:21.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.165" level="INFO">${RESULT} = [{'diff': 4.401400000000194e-05}, {'diff': 4.3583000000003286e-05}, {'diff': 4.3819000000000496e-05}, {'diff': 4.381899999999703e-05}, {'diff': 4.393000000000105e-05}, {'diff': 4.404100000000161e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:21.162" endtime="20201030 18:29:21.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.170" level="INFO">${ACCURACY} = {'diff': [4.401400000000194e-05, 4.3583000000003286e-05, 4.3819000000000496e-05, 4.381899999999703e-05, 4.393000000000105e-05, 4.404100000000161e-05, 4.3652999999997666e-05, 4.394399999999715e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 18:29:21.166" endtime="20201030 18:29:21.170"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.174" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.173" endtime="20201030 18:29:21.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.177" level="INFO">VALUE: [4.401400000000194e-05, 4.3583000000003286e-05, 4.3819000000000496e-05, 4.381899999999703e-05, 4.393000000000105e-05, 4.404100000000161e-05, 4.3652999999997666e-05, 4.394399999999715e-05, 4.4096999999999886e-05, 4.419400000000087e-05, 4.347199999999926e-05, 4.38060000000004e-05, 4.3667000000000705e-05, 4.380599999999693e-05, 4.358399999999929e-05, 4.433400000000004e-05, 4.427800000000176e-05, 4.4195000000000345e-05, 4.356999999999972e-05, 4.4096999999999886e-05, 4.376399999999822e-05, 4.394400000000062e-05, 4.373599999999908e-05, 4.3903000000001385e-05, 4.3653000000001135e-05, 4.4319000000000996e-05, 4.3805000000000927e-05, 4.3624999999998526e-05, 4.4417000000001455e-05, 4.4069000000000746e-05, 4.372199999999951e-05, 4.4222999999999485e-05, 4.43060000000009e-05, 4.424999999999915e-05, 4.422200000000001e-05, 4.432000000000047e-05, 4.4388999999998846e-05, 4.3875000000002246e-05, 4.4459000000000165e-05, 4.384799999999911e-05, 4.39860000000028e-05, 4.4138999999998596e-05, 4.3860999999999206e-05, 4.415199999999869e-05, 4.3652999999997666e-05, 4.423599999999958e-05, 4.352800000000101e-05, 4.4360999999999706e-05, 4.429200000000133e-05, 4.352800000000101e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.175" endtime="20201030 18:29:21.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.170" endtime="20201030 18:29:21.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.181" endtime="20201030 18:29:21.201"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.180" endtime="20201030 18:29:21.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.179" endtime="20201030 18:29:21.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.824" endtime="20201030 18:29:21.202"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:20.823" endtime="20201030 18:29:21.202"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.211" endtime="20201030 18:29:21.227"></status>
</kw>
<msg timestamp="20201030 18:29:21.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.209" endtime="20201030 18:29:21.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.229" endtime="20201030 18:29:21.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.231" endtime="20201030 18:29:21.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.207" endtime="20201030 18:29:21.233"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.205" endtime="20201030 18:29:21.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.240" endtime="20201030 18:29:21.526"></status>
</kw>
<msg timestamp="20201030 18:29:21.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.239" endtime="20201030 18:29:21.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020554708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.530" endtime="20201030 18:29:21.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.538" endtime="20201030 18:29:21.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.236" endtime="20201030 18:29:21.541"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.235" endtime="20201030 18:29:21.541"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.545" level="INFO">${RESULT} = [{'diff': 4.5319000000001997e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.454200000000158e-05}, {'diff': 4.5375000000000276e-05}, {'diff': 4.4652999999998666e-0...</msg>
<status status="PASS" starttime="20201030 18:29:21.542" endtime="20201030 18:29:21.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.549" level="INFO">${ACCURACY} = {'diff': [4.5319000000001997e-05, 4.5111000000000456e-05, 4.5388999999999846e-05, 4.454200000000158e-05, 4.5375000000000276e-05, 4.4652999999998666e-05, 4.49999999999999e-05, 4.474999999999965e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:21.546" endtime="20201030 18:29:21.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.554" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.553" endtime="20201030 18:29:21.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.556" level="INFO">VALUE: [4.5319000000001997e-05, 4.5111000000000456e-05, 4.5388999999999846e-05, 4.454200000000158e-05, 4.5375000000000276e-05, 4.4652999999998666e-05, 4.49999999999999e-05, 4.474999999999965e-05, 4.4874999999999776e-05, 4.5138999999999596e-05, 4.542999999999908e-05, 4.5097000000000886e-05, 4.4695000000000845e-05, 4.509800000000036e-05, 4.458400000000029e-05, 4.497200000000076e-05, 4.547200000000126e-05, 4.497200000000076e-05, 4.545800000000169e-05, 4.4888999999999346e-05, 4.473600000000008e-05, 4.447199999999679e-05, 4.49999999999999e-05, 4.470800000000094e-05, 4.5416999999998986e-05, 4.479200000000183e-05, 4.473600000000008e-05, 4.4930999999998056e-05, 4.498599999999686e-05, 4.544399999999865e-05, 4.506999999999775e-05, 4.526299999999678e-05, 4.4666999999998236e-05, 4.4610999999999956e-05, 4.4695000000000845e-05, 4.473600000000008e-05, 4.4638999999999096e-05, 4.517999999999883e-05, 4.497200000000076e-05, 4.542999999999908e-05, 4.505500000000218e-05, 4.4555000000001677e-05, 4.481899999999803e-05, 4.548600000000083e-05, 4.451399999999897e-05, 4.504199999999861e-05, 4.5166999999998736e-05, 4.5180999999998306e-05, 4.5444999999998126e-05, 4.540199999999994e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.555" endtime="20201030 18:29:21.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.550" endtime="20201030 18:29:21.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.562" endtime="20201030 18:29:21.581"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.561" endtime="20201030 18:29:21.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.559" endtime="20201030 18:29:21.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.203" endtime="20201030 18:29:21.583"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.203" endtime="20201030 18:29:21.583"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.591" endtime="20201030 18:29:21.608"></status>
</kw>
<msg timestamp="20201030 18:29:21.608" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.590" endtime="20201030 18:29:21.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.609" endtime="20201030 18:29:21.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.612" endtime="20201030 18:29:21.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.587" endtime="20201030 18:29:21.614"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.585" endtime="20201030 18:29:21.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.621" endtime="20201030 18:29:21.906"></status>
</kw>
<msg timestamp="20201030 18:29:21.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.619" endtime="20201030 18:29:21.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019986139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:21.910" endtime="20201030 18:29:21.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.918" endtime="20201030 18:29:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.617" endtime="20201030 18:29:21.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.615" endtime="20201030 18:29:21.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:21.925" level="INFO">${RESULT} = [{'diff': 4.6416999999999986e-05}, {'diff': 4.608400000000179e-05}, {'diff': 4.561099999999749e-05}, {'diff': 4.6194999999998876e-05}, {'diff': 4.55000000000004e-05}, {'diff': 4.5847000000001636e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:21.921" endtime="20201030 18:29:21.925"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:21.930" level="INFO">${ACCURACY} = {'diff': [4.6416999999999986e-05, 4.608400000000179e-05, 4.561099999999749e-05, 4.6194999999998876e-05, 4.55000000000004e-05, 4.5847000000001636e-05, 4.641600000000051e-05, 4.595799999999872e-05, 4.58...</msg>
<status status="PASS" starttime="20201030 18:29:21.926" endtime="20201030 18:29:21.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.934" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 18:29:21.933" endtime="20201030 18:29:21.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.937" level="INFO">VALUE: [4.6416999999999986e-05, 4.608400000000179e-05, 4.561099999999749e-05, 4.6194999999998876e-05, 4.55000000000004e-05, 4.5847000000001636e-05, 4.641600000000051e-05, 4.595799999999872e-05, 4.587499999999731e-05, 4.56939999999989e-05, 4.641600000000051e-05, 4.576400000000022e-05, 4.648600000000183e-05, 4.576400000000022e-05, 4.604199999999961e-05, 4.6166999999999736e-05, 4.5681000000002275e-05, 4.584699999999817e-05, 4.558399999999782e-05, 4.6347000000002136e-05, 4.625000000000115e-05, 4.584800000000111e-05, 4.6458999999998696e-05, 4.573600000000108e-05, 4.6111000000001456e-05, 4.5639000000000096e-05, 4.611199999999746e-05, 4.6111000000001456e-05, 4.573599999999761e-05, 4.6125000000001026e-05, 4.548600000000083e-05, 4.629199999999986e-05, 4.605499999999971e-05, 4.6180999999999306e-05, 4.574999999999718e-05, 4.636099999999824e-05, 4.6139000000000596e-05, 4.5875000000000776e-05, 4.575000000000065e-05, 4.627800000000029e-05, 4.583400000000154e-05, 4.569400000000237e-05, 4.627800000000029e-05, 4.6166999999999736e-05, 4.616600000000026e-05, 4.602700000000057e-05, 4.6125000000001026e-05, 4.6125000000001026e-05, 4.565200000000019e-05, 4.6125000000001026e-05]</msg>
<status status="PASS" starttime="20201030 18:29:21.935" endtime="20201030 18:29:21.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.931" endtime="20201030 18:29:21.938"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:21.942" endtime="20201030 18:29:21.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.940" endtime="20201030 18:29:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.939" endtime="20201030 18:29:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.584" endtime="20201030 18:29:21.962"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.583" endtime="20201030 18:29:21.963"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.971" endtime="20201030 18:29:21.988"></status>
</kw>
<msg timestamp="20201030 18:29:21.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.970" endtime="20201030 18:29:21.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:21.991" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:21.990" endtime="20201030 18:29:21.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:21.992" endtime="20201030 18:29:21.994"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.967" endtime="20201030 18:29:21.995"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.965" endtime="20201030 18:29:21.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.002" endtime="20201030 18:29:22.289"></status>
</kw>
<msg timestamp="20201030 18:29:22.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.000" endtime="20201030 18:29:22.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.293" endtime="20201030 18:29:22.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.302" endtime="20201030 18:29:22.303"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.997" endtime="20201030 18:29:22.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.996" endtime="20201030 18:29:22.304"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.308" level="INFO">${RESULT} = [{'diff': 4.706900000000028e-05}, {'diff': 4.712499999999856e-05}, {'diff': 4.7417000000000986e-05}, {'diff': 4.726399999999825e-05}, {'diff': 4.7361000000002706e-05}, {'diff': 4.712499999999856e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:22.305" endtime="20201030 18:29:22.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.313" level="INFO">${ACCURACY} = {'diff': [4.706900000000028e-05, 4.712499999999856e-05, 4.7417000000000986e-05, 4.726399999999825e-05, 4.7361000000002706e-05, 4.712499999999856e-05, 4.6930999999996587e-05, 4.7417000000000986e-05, 4....</msg>
<status status="PASS" starttime="20201030 18:29:22.309" endtime="20201030 18:29:22.313"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.317" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.316" endtime="20201030 18:29:22.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.320" level="INFO">VALUE: [4.706900000000028e-05, 4.712499999999856e-05, 4.7417000000000986e-05, 4.726399999999825e-05, 4.7361000000002706e-05, 4.712499999999856e-05, 4.6930999999996587e-05, 4.7417000000000986e-05, 4.659799999999839e-05, 4.655600000000315e-05, 4.6931000000000056e-05, 4.698599999999886e-05, 4.690199999999797e-05, 4.747199999999979e-05, 4.7125000000002026e-05, 4.679100000000089e-05, 4.694400000000015e-05, 4.704099999999767e-05, 4.734699999999967e-05, 4.655499999999674e-05, 4.736099999999924e-05, 4.724999999999868e-05, 4.6694999999999376e-05, 4.73330000000001e-05, 4.727800000000129e-05, 4.651400000000097e-05, 4.7153000000001166e-05, 4.658299999999935e-05, 4.7181000000000306e-05, 4.741599999999804e-05, 4.691600000000101e-05, 4.672199999999904e-05, 4.6625000000001526e-05, 4.687499999999831e-05, 4.698599999999886e-05, 4.727800000000129e-05, 4.745800000000022e-05, 4.702800000000104e-05, 4.676399999999775e-05, 4.736099999999924e-05, 4.6917000000000486e-05, 4.697199999999929e-05, 4.7167000000000736e-05, 4.6680999999999806e-05, 4.658400000000229e-05, 4.713899999999813e-05, 4.75000000000024e-05, 4.663899999999763e-05, 4.684800000000211e-05, 4.734699999999967e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.318" endtime="20201030 18:29:22.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.313" endtime="20201030 18:29:22.321"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.324" endtime="20201030 18:29:22.344"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.323" endtime="20201030 18:29:22.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.322" endtime="20201030 18:29:22.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.963" endtime="20201030 18:29:22.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:21.963" endtime="20201030 18:29:22.345"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.354" endtime="20201030 18:29:22.370"></status>
</kw>
<msg timestamp="20201030 18:29:22.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.352" endtime="20201030 18:29:22.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.373" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.372" endtime="20201030 18:29:22.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.374" endtime="20201030 18:29:22.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.350" endtime="20201030 18:29:22.376"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.348" endtime="20201030 18:29:22.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.383" endtime="20201030 18:29:22.669"></status>
</kw>
<msg timestamp="20201030 18:29:22.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020485875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.382" endtime="20201030 18:29:22.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020485875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020533444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.673" endtime="20201030 18:29:22.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.681" endtime="20201030 18:29:22.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.379" endtime="20201030 18:29:22.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.377" endtime="20201030 18:29:22.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:22.688" level="INFO">${RESULT} = [{'diff': 4.756900000000078e-05}, {'diff': 4.794400000000115e-05}, {'diff': 4.75139999999985e-05}, {'diff': 4.7639000000002096e-05}, {'diff': 4.816599999999879e-05}, {'diff': 4.779099999999842e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:22.684" endtime="20201030 18:29:22.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:22.692" level="INFO">${ACCURACY} = {'diff': [4.756900000000078e-05, 4.794400000000115e-05, 4.75139999999985e-05, 4.7639000000002096e-05, 4.816599999999879e-05, 4.779099999999842e-05, 4.81529999999987e-05, 4.767999999999786e-05, 4.79580...</msg>
<status status="PASS" starttime="20201030 18:29:22.689" endtime="20201030 18:29:22.692"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.696" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 18:29:22.695" endtime="20201030 18:29:22.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.699" level="INFO">VALUE: [4.756900000000078e-05, 4.794400000000115e-05, 4.75139999999985e-05, 4.7639000000002096e-05, 4.816599999999879e-05, 4.779099999999842e-05, 4.81529999999987e-05, 4.767999999999786e-05, 4.795800000000072e-05, 4.808300000000085e-05, 4.759699999999992e-05, 4.816699999999827e-05, 4.824999999999968e-05, 4.78200000000005e-05, 4.826299999999978e-05, 4.804099999999867e-05, 4.849999999999993e-05, 4.780500000000146e-05, 4.794400000000115e-05, 4.811099999999999e-05, 4.8013999999999e-05, 4.798599999999986e-05, 4.848600000000036e-05, 4.793000000000158e-05, 4.776399999999875e-05, 4.804199999999814e-05, 4.798599999999986e-05, 4.7681000000000806e-05, 4.7917000000001486e-05, 4.763899999999863e-05, 4.768099999999734e-05, 4.761099999999949e-05, 4.822200000000054e-05, 4.774999999999918e-05, 4.7959000000000196e-05, 4.811199999999946e-05, 4.829099999999892e-05, 4.78879999999994e-05, 4.827699999999935e-05, 4.75130000000025e-05, 4.763899999999863e-05, 4.82079999999975e-05, 4.7875000000002776e-05, 4.809700000000042e-05, 4.762499999999906e-05, 4.749999999999893e-05, 4.827799999999882e-05, 4.847200000000079e-05, 4.834700000000067e-05, 4.7611000000002957e-05]</msg>
<status status="PASS" starttime="20201030 18:29:22.697" endtime="20201030 18:29:22.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.693" endtime="20201030 18:29:22.701"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:22.705" endtime="20201030 18:29:22.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.703" endtime="20201030 18:29:22.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.702" endtime="20201030 18:29:22.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.346" endtime="20201030 18:29:22.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.346" endtime="20201030 18:29:22.725"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.734" endtime="20201030 18:29:22.751"></status>
</kw>
<msg timestamp="20201030 18:29:22.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.732" endtime="20201030 18:29:22.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:22.754" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:22.752" endtime="20201030 18:29:22.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.755" endtime="20201030 18:29:22.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.730" endtime="20201030 18:29:22.757"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.728" endtime="20201030 18:29:22.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:22.763" endtime="20201030 18:29:23.049"></status>
</kw>
<msg timestamp="20201030 18:29:23.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:22.762" endtime="20201030 18:29:23.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019922306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.053" endtime="20201030 18:29:23.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.061" endtime="20201030 18:29:23.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.759" endtime="20201030 18:29:23.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.758" endtime="20201030 18:29:23.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.068" level="INFO">${RESULT} = [{'diff': 4.8486999999999836e-05}, {'diff': 4.944399999999918e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.900000000000043e-05}, {'diff': 4.908300000000185e-05}, {'diff': 4.863899999999963e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:23.064" endtime="20201030 18:29:23.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.075" level="INFO">${ACCURACY} = {'diff': [4.8486999999999836e-05, 4.944399999999918e-05, 4.873600000000061e-05, 4.900000000000043e-05, 4.908300000000185e-05, 4.863899999999963e-05, 4.944399999999918e-05, 4.95140000000005e-05, 4.9014...</msg>
<status status="PASS" starttime="20201030 18:29:23.069" endtime="20201030 18:29:23.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.080" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.079" endtime="20201030 18:29:23.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.082" level="INFO">VALUE: [4.8486999999999836e-05, 4.944399999999918e-05, 4.873600000000061e-05, 4.900000000000043e-05, 4.908300000000185e-05, 4.863899999999963e-05, 4.944399999999918e-05, 4.95140000000005e-05, 4.9014e-05, 4.876399999999975e-05, 4.944399999999918e-05, 4.886100000000074e-05, 4.940299999999995e-05, 4.8917000000002486e-05, 4.85139999999995e-05, 4.950000000000093e-05, 4.891699999999902e-05, 4.8917000000002486e-05, 4.9320000000002e-05, 4.877699999999985e-05, 4.887500000000031e-05, 4.904099999999967e-05, 4.891599999999954e-05, 4.855499999999874e-05, 4.890299999999945e-05, 4.880499999999899e-05, 4.9181000000002306e-05, 4.861099999999702e-05, 4.875000000000018e-05, 4.8709000000000946e-05, 4.857000000000125e-05, 4.862500000000006e-05, 4.893099999999859e-05, 4.9417000000002986e-05, 4.9153000000003166e-05, 4.8987000000000336e-05, 4.88200000000015e-05, 4.861199999999996e-05, 4.954200000000311e-05, 4.947199999999832e-05, 4.865199999999972e-05, 4.95140000000005e-05, 4.926400000000025e-05, 4.926400000000025e-05, 4.891699999999902e-05, 4.891699999999902e-05, 4.862500000000006e-05, 4.925000000000068e-05, 4.905600000000218e-05, 4.890299999999945e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.081" endtime="20201030 18:29:23.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.076" endtime="20201030 18:29:23.084"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.087" endtime="20201030 18:29:23.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.086" endtime="20201030 18:29:23.107"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.085" endtime="20201030 18:29:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.726" endtime="20201030 18:29:23.108"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:22.726" endtime="20201030 18:29:23.108"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.117" endtime="20201030 18:29:23.132"></status>
</kw>
<msg timestamp="20201030 18:29:23.133" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.115" endtime="20201030 18:29:23.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.134" endtime="20201030 18:29:23.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.136" endtime="20201030 18:29:23.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.113" endtime="20201030 18:29:23.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.111" endtime="20201030 18:29:23.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.145" endtime="20201030 18:29:23.432"></status>
</kw>
<msg timestamp="20201030 18:29:23.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.144" endtime="20201030 18:29:23.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019664736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019714736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.436" endtime="20201030 18:29:23.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.444" endtime="20201030 18:29:23.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.141" endtime="20201030 18:29:23.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.139" endtime="20201030 18:29:23.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.451" level="INFO">${RESULT} = [{'diff': 5.000000000000143e-05}, {'diff': 4.980599999999946e-05}, {'diff': 4.968099999999934e-05}, {'diff': 5.005599999999971e-05}, {'diff': 4.990299999999698e-05}, {'diff': 5.027800000000082e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:23.448" endtime="20201030 18:29:23.451"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.455" level="INFO">${ACCURACY} = {'diff': [5.000000000000143e-05, 4.980599999999946e-05, 4.968099999999934e-05, 5.005599999999971e-05, 4.990299999999698e-05, 5.027800000000082e-05, 4.976400000000075e-05, 5.000000000000143e-05, 4.9971...</msg>
<status status="PASS" starttime="20201030 18:29:23.452" endtime="20201030 18:29:23.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.460" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.459" endtime="20201030 18:29:23.460"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.462" level="INFO">VALUE: [5.000000000000143e-05, 4.980599999999946e-05, 4.968099999999934e-05, 5.005599999999971e-05, 4.990299999999698e-05, 5.027800000000082e-05, 4.976400000000075e-05, 5.000000000000143e-05, 4.997199999999882e-05, 4.9667000000003236e-05, 4.987500000000131e-05, 4.961100000000149e-05, 4.966600000000029e-05, 4.952800000000007e-05, 4.958300000000235e-05, 4.999999999999796e-05, 5.016700000000027e-05, 4.965299999999673e-05, 5.029200000000039e-05, 4.972200000000204e-05, 4.958299999999888e-05, 5.016700000000027e-05, 4.9887999999997934e-05, 4.959700000000192e-05, 5.004200000000014e-05, 4.956999999999878e-05, 4.973599999999814e-05, 4.983299999999913e-05, 4.993000000000011e-05, 5.043000000000061e-05, 5.037499999999834e-05, 5.033299999999963e-05, 5.004100000000067e-05, 5.013900000000113e-05, 4.969399999999943e-05, 4.998600000000186e-05, 5.036099999999877e-05, 5.022200000000254e-05, 4.962500000000106e-05, 4.974999999999771e-05, 5.025000000000168e-05, 4.991700000000002e-05, 5.023599999999864e-05, 5.005599999999971e-05, 5.0472999999998797e-05, 5.041600000000104e-05, 5.041700000000052e-05, 4.973600000000161e-05, 4.976300000000128e-05, 4.975000000000118e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.461" endtime="20201030 18:29:23.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.456" endtime="20201030 18:29:23.463"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.467" endtime="20201030 18:29:23.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.465" endtime="20201030 18:29:23.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.464" endtime="20201030 18:29:23.487"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.109" endtime="20201030 18:29:23.488"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.108" endtime="20201030 18:29:23.488"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.496" endtime="20201030 18:29:23.514"></status>
</kw>
<msg timestamp="20201030 18:29:23.514" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.495" endtime="20201030 18:29:23.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.516" endtime="20201030 18:29:23.517"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.518" endtime="20201030 18:29:23.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.492" endtime="20201030 18:29:23.520"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.490" endtime="20201030 18:29:23.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.527" endtime="20201030 18:29:23.813"></status>
</kw>
<msg timestamp="20201030 18:29:23.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.526" endtime="20201030 18:29:23.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020535694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020586986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.817" endtime="20201030 18:29:23.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.825" endtime="20201030 18:29:23.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.523" endtime="20201030 18:29:23.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.521" endtime="20201030 18:29:23.828"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:23.832" level="INFO">${RESULT} = [{'diff': 5.129200000000139e-05}, {'diff': 5.133300000000063e-05}, {'diff': 5.055500000000074e-05}, {'diff': 5.084799999999917e-05}, {'diff': 5.073599999999914e-05}, {'diff': 5.091700000000102e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:23.829" endtime="20201030 18:29:23.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:23.836" level="INFO">${ACCURACY} = {'diff': [5.129200000000139e-05, 5.133300000000063e-05, 5.055500000000074e-05, 5.084799999999917e-05, 5.073599999999914e-05, 5.091700000000102e-05, 5.113900000000213e-05, 5.0929999999997644e-05, 5.058...</msg>
<status status="PASS" starttime="20201030 18:29:23.833" endtime="20201030 18:29:23.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.841" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 18:29:23.840" endtime="20201030 18:29:23.841"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.843" level="INFO">VALUE: [5.129200000000139e-05, 5.133300000000063e-05, 5.055500000000074e-05, 5.084799999999917e-05, 5.073599999999914e-05, 5.091700000000102e-05, 5.113900000000213e-05, 5.0929999999997644e-05, 5.058399999999935e-05, 5.087499999999884e-05, 5.129199999999792e-05, 5.0652000000001723e-05, 5.113900000000213e-05, 5.108300000000038e-05, 5.079100000000142e-05, 5.147200000000032e-05, 5.116700000000127e-05, 5.127800000000182e-05, 5.099999999999896e-05, 5.113900000000213e-05, 5.088899999999841e-05, 5.061099999999902e-05, 5.109699999999995e-05, 5.082000000000003e-05, 5.099999999999896e-05, 5.088899999999841e-05, 5.066700000000077e-05, 5.082000000000003e-05, 5.145899999999676e-05, 5.134799999999967e-05, 5.075000000000218e-05, 5.0929999999997644e-05, 5.104100000000167e-05, 5.098599999999939e-05, 5.0929999999997644e-05, 5.10409999999982e-05, 5.122200000000007e-05, 5.098599999999939e-05, 5.083300000000013e-05, 5.125000000000268e-05, 5.066700000000077e-05, 5.091699999999755e-05, 5.104199999999767e-05, 5.127800000000182e-05, 5.118100000000084e-05, 5.079099999999795e-05, 5.132000000000053e-05, 5.061200000000196e-05, 5.136099999999977e-05, 5.111100000000299e-05]</msg>
<status status="PASS" starttime="20201030 18:29:23.842" endtime="20201030 18:29:23.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.837" endtime="20201030 18:29:23.845"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:23.849" endtime="20201030 18:29:23.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.847" endtime="20201030 18:29:23.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.846" endtime="20201030 18:29:23.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.489" endtime="20201030 18:29:23.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.488" endtime="20201030 18:29:23.870"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.878" endtime="20201030 18:29:23.895"></status>
</kw>
<msg timestamp="20201030 18:29:23.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.877" endtime="20201030 18:29:23.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:23.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:23.896" endtime="20201030 18:29:23.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.899" endtime="20201030 18:29:23.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.874" endtime="20201030 18:29:23.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.872" endtime="20201030 18:29:23.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:23.908" endtime="20201030 18:29:24.209"></status>
</kw>
<msg timestamp="20201030 18:29:24.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:23.907" endtime="20201030 18:29:24.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019590917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.214" endtime="20201030 18:29:24.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.222" endtime="20201030 18:29:24.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.904" endtime="20201030 18:29:24.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.902" endtime="20201030 18:29:24.224"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.229" level="INFO">${RESULT} = [{'diff': 5.173600000000014e-05}, {'diff': 5.241700000000252e-05}, {'diff': 5.238899999999991e-05}, {'diff': 5.245899999999776e-05}, {'diff': 5.162499999999959e-05}, {'diff': 5.219499999999794e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:24.225" endtime="20201030 18:29:24.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.234" level="INFO">${ACCURACY} = {'diff': [5.173600000000014e-05, 5.241700000000252e-05, 5.238899999999991e-05, 5.245899999999776e-05, 5.162499999999959e-05, 5.219499999999794e-05, 5.2152000000003224e-05, 5.1665999999998824e-05, 5.18...</msg>
<status status="PASS" starttime="20201030 18:29:24.230" endtime="20201030 18:29:24.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.239" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.238" endtime="20201030 18:29:24.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.241" level="INFO">VALUE: [5.173600000000014e-05, 5.241700000000252e-05, 5.238899999999991e-05, 5.245899999999776e-05, 5.162499999999959e-05, 5.219499999999794e-05, 5.2152000000003224e-05, 5.1665999999998824e-05, 5.180500000000199e-05, 5.201399999999953e-05, 5.213899999999966e-05, 5.174999999999971e-05, 5.211100000000052e-05, 5.154200000000164e-05, 5.229199999999892e-05, 5.240299999999948e-05, 5.20279999999991e-05, 5.232000000000153e-05, 5.236100000000077e-05, 5.209700000000095e-05, 5.24730000000008e-05, 5.182000000000103e-05, 5.23340000000011e-05, 5.2457999999998284e-05, 5.237500000000034e-05, 5.229099999999945e-05, 5.2443999999998714e-05, 5.173600000000014e-05, 5.212500000000009e-05, 5.245800000000175e-05, 5.227800000000282e-05, 5.174999999999971e-05, 5.176399999999928e-05, 5.205600000000171e-05, 5.187499999999984e-05, 5.152800000000207e-05, 5.174999999999971e-05, 5.213899999999966e-05, 5.24730000000008e-05, 5.176399999999928e-05, 5.186199999999974e-05, 5.1637999999999684e-05, 5.2457999999998284e-05, 5.202699999999963e-05, 5.174999999999971e-05, 5.233300000000163e-05, 5.158300000000088e-05, 5.223600000000064e-05, 5.161100000000002e-05, 5.155599999999774e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.240" endtime="20201030 18:29:24.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.235" endtime="20201030 18:29:24.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.248" endtime="20201030 18:29:24.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.245" endtime="20201030 18:29:24.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.244" endtime="20201030 18:29:24.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.871" endtime="20201030 18:29:24.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:23.870" endtime="20201030 18:29:24.269"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.278" endtime="20201030 18:29:24.295"></status>
</kw>
<msg timestamp="20201030 18:29:24.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.277" endtime="20201030 18:29:24.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.297" endtime="20201030 18:29:24.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.300" endtime="20201030 18:29:24.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.274" endtime="20201030 18:29:24.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.272" endtime="20201030 18:29:24.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.309" endtime="20201030 18:29:24.596"></status>
</kw>
<msg timestamp="20201030 18:29:24.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.307" endtime="20201030 18:29:24.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020405625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.600" endtime="20201030 18:29:24.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.608" endtime="20201030 18:29:24.610"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.305" endtime="20201030 18:29:24.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.303" endtime="20201030 18:29:24.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:24.615" level="INFO">${RESULT} = [{'diff': 5.350000000000146e-05}, {'diff': 5.331899999999959e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.338900000000091e-05}, {'diff': 5.33470000000022e-05}, {'diff': 5.326400000000078e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:24.612" endtime="20201030 18:29:24.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:24.619" level="INFO">${ACCURACY} = {'diff': [5.350000000000146e-05, 5.331899999999959e-05, 5.327800000000035e-05, 5.338900000000091e-05, 5.33470000000022e-05, 5.326400000000078e-05, 5.256999999999831e-05, 5.294499999999869e-05, 5.28059...</msg>
<status status="PASS" starttime="20201030 18:29:24.616" endtime="20201030 18:29:24.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.624" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 18:29:24.623" endtime="20201030 18:29:24.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.626" level="INFO">VALUE: [5.350000000000146e-05, 5.331899999999959e-05, 5.327800000000035e-05, 5.338900000000091e-05, 5.33470000000022e-05, 5.326400000000078e-05, 5.256999999999831e-05, 5.294499999999869e-05, 5.280599999999899e-05, 5.2499999999996994e-05, 5.263900000000016e-05, 5.323600000000164e-05, 5.3415999999997105e-05, 5.298600000000139e-05, 5.3235999999998174e-05, 5.25279999999996e-05, 5.2652000000000254e-05, 5.281899999999909e-05, 5.275000000000071e-05, 5.30280000000001e-05, 5.3457999999999284e-05, 5.286100000000127e-05, 5.311100000000152e-05, 5.323600000000164e-05, 5.306999999999881e-05, 5.291699999999955e-05, 5.279199999999942e-05, 5.300000000000096e-05, 5.275000000000071e-05, 5.3152000000000754e-05, 5.2652000000000254e-05, 5.263900000000016e-05, 5.336100000000177e-05, 5.259699999999798e-05, 5.340299999999701e-05, 5.338899999999744e-05, 5.254199999999917e-05, 5.3193999999999464e-05, 5.337500000000134e-05, 5.329199999999992e-05, 5.311099999999805e-05, 5.305499999999977e-05, 5.247200000000132e-05, 5.2999999999997494e-05, 5.311200000000099e-05, 5.291700000000302e-05, 5.334800000000167e-05, 5.279099999999995e-05, 5.259699999999798e-05, 5.325000000000121e-05]</msg>
<status status="PASS" starttime="20201030 18:29:24.625" endtime="20201030 18:29:24.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.620" endtime="20201030 18:29:24.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:24.631" endtime="20201030 18:29:24.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.630" endtime="20201030 18:29:24.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.628" endtime="20201030 18:29:24.651"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.270" endtime="20201030 18:29:24.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.270" endtime="20201030 18:29:24.652"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.660" endtime="20201030 18:29:24.679"></status>
</kw>
<msg timestamp="20201030 18:29:24.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.659" endtime="20201030 18:29:24.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:24.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:24.680" endtime="20201030 18:29:24.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.683" endtime="20201030 18:29:24.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.656" endtime="20201030 18:29:24.685"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.654" endtime="20201030 18:29:24.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:24.692" endtime="20201030 18:29:24.993"></status>
</kw>
<msg timestamp="20201030 18:29:24.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.690" endtime="20201030 18:29:24.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020503069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:24.997" endtime="20201030 18:29:25.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.005" endtime="20201030 18:29:25.007"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.688" endtime="20201030 18:29:25.008"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.686" endtime="20201030 18:29:25.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.012" level="INFO">${RESULT} = [{'diff': 5.363900000000116e-05}, {'diff': 5.401400000000153e-05}, {'diff': 5.4221999999999604e-05}, {'diff': 5.3693999999999964e-05}, {'diff': 5.387500000000184e-05}, {'diff': 5.4471999999999854e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:25.009" endtime="20201030 18:29:25.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.016" level="INFO">${ACCURACY} = {'diff': [5.363900000000116e-05, 5.401400000000153e-05, 5.4221999999999604e-05, 5.3693999999999964e-05, 5.387500000000184e-05, 5.4471999999999854e-05, 5.416699999999733e-05, 5.361100000000202e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 18:29:25.013" endtime="20201030 18:29:25.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.021" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.020" endtime="20201030 18:29:25.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.023" level="INFO">VALUE: [5.363900000000116e-05, 5.401400000000153e-05, 5.4221999999999604e-05, 5.3693999999999964e-05, 5.387500000000184e-05, 5.4471999999999854e-05, 5.416699999999733e-05, 5.361100000000202e-05, 5.3693999999999964e-05, 5.4235999999999174e-05, 5.406900000000034e-05, 5.4458000000000284e-05, 5.365300000000073e-05, 5.357000000000278e-05, 5.408400000000285e-05, 5.359799999999845e-05, 5.394499999999969e-05, 5.383300000000313e-05, 5.434699999999973e-05, 5.40549999999973e-05, 5.362500000000159e-05, 5.363899999999769e-05, 5.3999999999998494e-05, 5.390299999999751e-05, 5.384699999999923e-05, 5.369499999999944e-05, 5.388900000000141e-05, 5.4235999999999174e-05, 5.434699999999973e-05, 5.401400000000153e-05, 5.381999999999956e-05, 5.363900000000116e-05, 5.351400000000103e-05, 5.4415999999998105e-05, 5.3930000000000644e-05, 5.4402000000002004e-05, 5.356899999999984e-05, 5.3985999999998924e-05, 5.440300000000148e-05, 5.3999999999998494e-05, 5.365299999999726e-05, 5.4444000000000714e-05, 5.4208000000000034e-05, 5.38609999999988e-05, 5.4277999999997883e-05, 5.393100000000012e-05, 5.3971999999999354e-05, 5.405600000000024e-05, 5.381999999999956e-05, 5.379200000000042e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.022" endtime="20201030 18:29:25.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.017" endtime="20201030 18:29:25.025"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.029" endtime="20201030 18:29:25.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.027" endtime="20201030 18:29:25.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.026" endtime="20201030 18:29:25.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.653" endtime="20201030 18:29:25.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:24.652" endtime="20201030 18:29:25.050"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.058" endtime="20201030 18:29:25.074"></status>
</kw>
<msg timestamp="20201030 18:29:25.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.057" endtime="20201030 18:29:25.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.076" endtime="20201030 18:29:25.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.079" endtime="20201030 18:29:25.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.054" endtime="20201030 18:29:25.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.052" endtime="20201030 18:29:25.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.088" endtime="20201030 18:29:25.374"></status>
</kw>
<msg timestamp="20201030 18:29:25.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.086" endtime="20201030 18:29:25.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019600389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.378" endtime="20201030 18:29:25.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.387" endtime="20201030 18:29:25.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.083" endtime="20201030 18:29:25.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.082" endtime="20201030 18:29:25.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.393" level="INFO">${RESULT} = [{'diff': 5.516699999999833e-05}, {'diff': 5.488899999999894e-05}, {'diff': 5.5291999999998453e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.463900000000216e-05}, {'diff': 5.4763999999998814e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:25.390" endtime="20201030 18:29:25.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.398" level="INFO">${ACCURACY} = {'diff': [5.516699999999833e-05, 5.488899999999894e-05, 5.5291999999998453e-05, 5.4985999999999924e-05, 5.463900000000216e-05, 5.4763999999998814e-05, 5.516699999999833e-05, 5.48479999999997e-05, 5.45...</msg>
<status status="PASS" starttime="20201030 18:29:25.394" endtime="20201030 18:29:25.399"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.403" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.402" endtime="20201030 18:29:25.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.406" level="INFO">VALUE: [5.516699999999833e-05, 5.488899999999894e-05, 5.5291999999998453e-05, 5.4985999999999924e-05, 5.463900000000216e-05, 5.4763999999998814e-05, 5.516699999999833e-05, 5.48479999999997e-05, 5.450000000000246e-05, 5.512499999999962e-05, 5.4722000000000104e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.513900000000266e-05, 5.534700000000073e-05, 5.5486000000000424e-05, 5.48609999999998e-05, 5.515299999999876e-05, 5.519500000000094e-05, 5.532000000000106e-05, 5.5291999999998453e-05, 5.5499999999999994e-05, 5.505600000000124e-05, 5.463900000000216e-05, 5.476300000000281e-05, 5.45410000000017e-05, 5.458300000000041e-05, 5.4735999999999674e-05, 5.5165999999998855e-05, 5.505500000000177e-05, 5.547300000000033e-05, 5.4763999999998814e-05, 5.4735999999999674e-05, 5.5027999999998634e-05, 5.520900000000051e-05, 5.525000000000321e-05, 5.520900000000051e-05, 5.468100000000087e-05, 5.505600000000124e-05, 5.538899999999944e-05, 5.450000000000246e-05, 5.529100000000245e-05, 5.5249999999999744e-05, 5.5263999999999314e-05, 5.534699999999726e-05, 5.483299999999719e-05, 5.481899999999762e-05, 5.4777999999998384e-05, 5.50280000000021e-05, 5.5291999999998453e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.404" endtime="20201030 18:29:25.406"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.399" endtime="20201030 18:29:25.407"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.410" endtime="20201030 18:29:25.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.409" endtime="20201030 18:29:25.430"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.408" endtime="20201030 18:29:25.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.051" endtime="20201030 18:29:25.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.050" endtime="20201030 18:29:25.431"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.440" endtime="20201030 18:29:25.457"></status>
</kw>
<msg timestamp="20201030 18:29:25.457" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.438" endtime="20201030 18:29:25.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.460" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.458" endtime="20201030 18:29:25.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.461" endtime="20201030 18:29:25.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.436" endtime="20201030 18:29:25.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.434" endtime="20201030 18:29:25.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.470" endtime="20201030 18:29:25.757"></status>
</kw>
<msg timestamp="20201030 18:29:25.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:25.468" endtime="20201030 18:29:25.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.768" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019522569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019579, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:25.761" endtime="20201030 18:29:25.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.769" endtime="20201030 18:29:25.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.466" endtime="20201030 18:29:25.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.464" endtime="20201030 18:29:25.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:25.776" level="INFO">${RESULT} = [{'diff': 5.643099999999915e-05}, {'diff': 5.58610000000008e-05}, {'diff': 5.608299999999844e-05}, {'diff': 5.588899999999994e-05}, {'diff': 5.6055999999998773e-05}, {'diff': 5.613900000000019e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:25.772" endtime="20201030 18:29:25.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:25.780" level="INFO">${ACCURACY} = {'diff': [5.643099999999915e-05, 5.58610000000008e-05, 5.608299999999844e-05, 5.588899999999994e-05, 5.6055999999998773e-05, 5.613900000000019e-05, 5.58619999999968e-05, 5.633399999999816e-05, 5.63329...</msg>
<status status="PASS" starttime="20201030 18:29:25.777" endtime="20201030 18:29:25.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.784" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 18:29:25.783" endtime="20201030 18:29:25.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.787" level="INFO">VALUE: [5.643099999999915e-05, 5.58610000000008e-05, 5.608299999999844e-05, 5.588899999999994e-05, 5.6055999999998773e-05, 5.613900000000019e-05, 5.58619999999968e-05, 5.633399999999816e-05, 5.633299999999869e-05, 5.634700000000173e-05, 5.63610000000013e-05, 5.5972000000001354e-05, 5.6014000000000064e-05, 5.5972000000001354e-05, 5.580499999999905e-05, 5.6236000000001174e-05, 5.5541999999998704e-05, 5.5763999999999814e-05, 5.56809999999984e-05, 5.6277999999999884e-05, 5.6221999999998135e-05, 5.647300000000133e-05, 5.604200000000267e-05, 5.5915999999999605e-05, 5.6402000000000535e-05, 5.559700000000098e-05, 5.5679999999998925e-05, 5.5763999999999814e-05, 5.584700000000123e-05, 5.6014000000000064e-05, 5.634699999999826e-05, 5.5555999999998273e-05, 5.5707999999998065e-05, 5.562500000000012e-05, 5.558300000000141e-05, 5.6249999999997274e-05, 5.563899999999969e-05, 5.580600000000199e-05, 5.568100000000187e-05, 5.569500000000144e-05, 5.63610000000013e-05, 5.634699999999826e-05, 5.580600000000199e-05, 5.6264000000000314e-05, 5.5665999999999355e-05, 5.643099999999915e-05, 5.5499999999999994e-05, 5.6500000000000994e-05, 5.641700000000305e-05, 5.565299999999926e-05]</msg>
<status status="PASS" starttime="20201030 18:29:25.785" endtime="20201030 18:29:25.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.781" endtime="20201030 18:29:25.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:25.792" endtime="20201030 18:29:25.811"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.790" endtime="20201030 18:29:25.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.789" endtime="20201030 18:29:25.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.432" endtime="20201030 18:29:25.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.432" endtime="20201030 18:29:25.813"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.821" endtime="20201030 18:29:25.839"></status>
</kw>
<msg timestamp="20201030 18:29:25.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.820" endtime="20201030 18:29:25.839"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:25.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:25.840" endtime="20201030 18:29:25.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.843" endtime="20201030 18:29:25.844"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.817" endtime="20201030 18:29:25.845"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.815" endtime="20201030 18:29:25.845"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:25.852" endtime="20201030 18:29:26.137"></status>
</kw>
<msg timestamp="20201030 18:29:26.140" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020777847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:25.850" endtime="20201030 18:29:26.140"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020720625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020777847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.141" endtime="20201030 18:29:26.149"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.150" endtime="20201030 18:29:26.151"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.848" endtime="20201030 18:29:26.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.846" endtime="20201030 18:29:26.152"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.156" level="INFO">${RESULT} = [{'diff': 5.7221999999999135e-05}, {'diff': 5.6693999999999495e-05}, {'diff': 5.670900000000201e-05}, {'diff': 5.691700000000008e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.669499999999897e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:26.153" endtime="20201030 18:29:26.157"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.161" level="INFO">${ACCURACY} = {'diff': [5.7221999999999135e-05, 5.6693999999999495e-05, 5.670900000000201e-05, 5.691700000000008e-05, 5.7000000000001494e-05, 5.669499999999897e-05, 5.68610000000018e-05, 5.741699999999711e-05, 5.70...</msg>
<status status="PASS" starttime="20201030 18:29:26.157" endtime="20201030 18:29:26.161"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.165" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.164" endtime="20201030 18:29:26.165"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.168" level="INFO">VALUE: [5.7221999999999135e-05, 5.6693999999999495e-05, 5.670900000000201e-05, 5.691700000000008e-05, 5.7000000000001494e-05, 5.669499999999897e-05, 5.68610000000018e-05, 5.741699999999711e-05, 5.7028000000000634e-05, 5.6569999999998843e-05, 5.747299999999886e-05, 5.687500000000137e-05, 5.6637999999997746e-05, 5.654100000000023e-05, 5.7235999999998705e-05, 5.736200000000177e-05, 5.7277999999997414e-05, 5.6707999999999065e-05, 5.7042000000000204e-05, 5.66809999999994e-05, 5.66809999999994e-05, 5.6569999999998843e-05, 5.7221999999999135e-05, 5.6985999999998455e-05, 5.6500000000000994e-05, 5.662499999999765e-05, 5.6986000000001924e-05, 5.68610000000018e-05, 5.73749999999984e-05, 5.731900000000012e-05, 5.7471999999999385e-05, 5.6902000000001035e-05, 5.7292000000000454e-05, 5.7485999999998955e-05, 5.711099999999858e-05, 5.733300000000316e-05, 5.663900000000069e-05, 5.68619999999978e-05, 5.7292000000000454e-05, 5.743100000000015e-05, 5.695900000000226e-05, 5.734699999999926e-05, 5.713900000000119e-05, 5.737500000000187e-05, 5.676299999999787e-05, 5.661100000000155e-05, 5.737500000000187e-05, 5.663900000000069e-05, 5.736099999999883e-05, 5.7000000000001494e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.166" endtime="20201030 18:29:26.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.162" endtime="20201030 18:29:26.170"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.173" endtime="20201030 18:29:26.193"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.172" endtime="20201030 18:29:26.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.171" endtime="20201030 18:29:26.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.813" endtime="20201030 18:29:26.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:25.813" endtime="20201030 18:29:26.194"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.203" endtime="20201030 18:29:26.220"></status>
</kw>
<msg timestamp="20201030 18:29:26.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.201" endtime="20201030 18:29:26.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.223" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.221" endtime="20201030 18:29:26.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.224" endtime="20201030 18:29:26.225"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.199" endtime="20201030 18:29:26.226"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.197" endtime="20201030 18:29:26.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.233" endtime="20201030 18:29:26.518"></status>
</kw>
<msg timestamp="20201030 18:29:26.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.231" endtime="20201030 18:29:26.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019962417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020020806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.522" endtime="20201030 18:29:26.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.530" endtime="20201030 18:29:26.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.229" endtime="20201030 18:29:26.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.227" endtime="20201030 18:29:26.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.537" level="INFO">${RESULT} = [{'diff': 5.838899999999897e-05}, {'diff': 5.7971999999999885e-05}, {'diff': 5.770899999999954e-05}, {'diff': 5.7902000000002035e-05}, {'diff': 5.811200000000252e-05}, {'diff': 5.7708000000000065e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:26.534" endtime="20201030 18:29:26.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.544" level="INFO">${ACCURACY} = {'diff': [5.838899999999897e-05, 5.7971999999999885e-05, 5.770899999999954e-05, 5.7902000000002035e-05, 5.811200000000252e-05, 5.7708000000000065e-05, 5.826299999999937e-05, 5.7944000000000745e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:29:26.538" endtime="20201030 18:29:26.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.549" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.548" endtime="20201030 18:29:26.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.551" level="INFO">VALUE: [5.838899999999897e-05, 5.7971999999999885e-05, 5.770899999999954e-05, 5.7902000000002035e-05, 5.811200000000252e-05, 5.7708000000000065e-05, 5.826299999999937e-05, 5.7944000000000745e-05, 5.8472000000000385e-05, 5.833299999999722e-05, 5.8041999999997734e-05, 5.843100000000115e-05, 5.791699999999761e-05, 5.812499999999915e-05, 5.793100000000065e-05, 5.841700000000158e-05, 5.8013999999998594e-05, 5.7806000000000524e-05, 5.8249999999999275e-05, 5.805499999999783e-05, 5.769499999999997e-05, 5.8472000000000385e-05, 5.8472000000000385e-05, 5.752699999999819e-05, 5.7958000000000315e-05, 5.837500000000287e-05, 5.815300000000176e-05, 5.7985999999999455e-05, 5.8042000000001204e-05, 5.8083999999999913e-05, 5.83749999999994e-05, 5.8250000000002744e-05, 5.7777999999997914e-05, 5.8165999999998386e-05, 5.848699999999943e-05, 5.812499999999915e-05, 5.7736000000002674e-05, 5.7749999999998775e-05, 5.7735999999999205e-05, 5.7680000000000925e-05, 5.790299999999804e-05, 5.7985999999999455e-05, 5.780500000000105e-05, 5.8430000000001675e-05, 5.81810000000009e-05, 5.8208000000000565e-05, 5.819500000000047e-05, 5.8028000000001634e-05, 5.8263999999998844e-05, 5.7750000000002244e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.550" endtime="20201030 18:29:26.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.545" endtime="20201030 18:29:26.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.557" endtime="20201030 18:29:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.555" endtime="20201030 18:29:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.554" endtime="20201030 18:29:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.195" endtime="20201030 18:29:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.195" endtime="20201030 18:29:26.577"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.586" endtime="20201030 18:29:26.603"></status>
</kw>
<msg timestamp="20201030 18:29:26.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.584" endtime="20201030 18:29:26.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.606" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.604" endtime="20201030 18:29:26.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.607" endtime="20201030 18:29:26.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.582" endtime="20201030 18:29:26.609"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.580" endtime="20201030 18:29:26.609"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.616" endtime="20201030 18:29:26.902"></status>
</kw>
<msg timestamp="20201030 18:29:26.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.614" endtime="20201030 18:29:26.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019500319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019559431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.906" endtime="20201030 18:29:26.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.915" endtime="20201030 18:29:26.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.612" endtime="20201030 18:29:26.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.610" endtime="20201030 18:29:26.917"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:26.921" level="INFO">${RESULT} = [{'diff': 5.9112000000000053e-05}, {'diff': 5.897299999999689e-05}, {'diff': 5.865300000000226e-05}, {'diff': 5.9000000000000025e-05}, {'diff': 5.9207999999998095e-05}, {'diff': 5.9444000000002245e-05...</msg>
<status status="PASS" starttime="20201030 18:29:26.918" endtime="20201030 18:29:26.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:26.925" level="INFO">${ACCURACY} = {'diff': [5.9112000000000053e-05, 5.897299999999689e-05, 5.865300000000226e-05, 5.9000000000000025e-05, 5.9207999999998095e-05, 5.9444000000002245e-05, 5.8777999999998914e-05, 5.8929999999998706e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:26.922" endtime="20201030 18:29:26.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.930" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 18:29:26.929" endtime="20201030 18:29:26.930"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.932" level="INFO">VALUE: [5.9112000000000053e-05, 5.897299999999689e-05, 5.865300000000226e-05, 5.9000000000000025e-05, 5.9207999999998095e-05, 5.9444000000002245e-05, 5.8777999999998914e-05, 5.8929999999998706e-05, 5.881900000000162e-05, 5.8944000000001745e-05, 5.922300000000061e-05, 5.90689999999984e-05, 5.8792000000001954e-05, 5.9402000000000066e-05, 5.893100000000165e-05, 5.941699999999911e-05, 5.8763999999999345e-05, 5.941699999999911e-05, 5.915299999999929e-05, 5.9485999999997485e-05, 5.9193999999998526e-05, 5.913899999999972e-05, 5.8556000000001274e-05, 5.909699999999754e-05, 5.8736000000000205e-05, 5.9278000000002884e-05, 5.9291999999998984e-05, 5.863899999999922e-05, 5.8749999999999775e-05, 5.8791999999998484e-05, 5.9055999999998304e-05, 5.9333999999997694e-05, 5.8666000000002355e-05, 5.893100000000165e-05, 5.934700000000126e-05, 5.852699999999919e-05, 5.8722000000000635e-05, 5.8972000000000885e-05, 5.8777999999998914e-05, 5.8680000000001925e-05, 5.8986000000000455e-05, 5.9027999999999164e-05, 5.8749999999999775e-05, 5.9013999999999595e-05, 5.9222000000001135e-05, 5.8901999999999566e-05, 5.916699999999886e-05, 5.9000000000000025e-05, 5.912500000000015e-05, 5.8584000000000414e-05]</msg>
<status status="PASS" starttime="20201030 18:29:26.931" endtime="20201030 18:29:26.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.926" endtime="20201030 18:29:26.934"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:26.937" endtime="20201030 18:29:26.957"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.936" endtime="20201030 18:29:26.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.935" endtime="20201030 18:29:26.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.578" endtime="20201030 18:29:26.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.578" endtime="20201030 18:29:26.958"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.967" endtime="20201030 18:29:26.986"></status>
</kw>
<msg timestamp="20201030 18:29:26.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.965" endtime="20201030 18:29:26.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:26.989" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:26.987" endtime="20201030 18:29:26.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.990" endtime="20201030 18:29:26.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.963" endtime="20201030 18:29:26.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.961" endtime="20201030 18:29:26.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:26.999" endtime="20201030 18:29:27.288"></status>
</kw>
<msg timestamp="20201030 18:29:27.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:26.997" endtime="20201030 18:29:27.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020401264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.292" endtime="20201030 18:29:27.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.321" endtime="20201030 18:29:27.330"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.995" endtime="20201030 18:29:27.334"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.993" endtime="20201030 18:29:27.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.341" level="INFO">${RESULT} = [{'diff': 6.0291999999999984e-05}, {'diff': 5.968099999999893e-05}, {'diff': 6.005499999999983e-05}, {'diff': 5.95689999999989e-05}, {'diff': 5.984700000000176e-05}, {'diff': 5.979100000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:27.337" endtime="20201030 18:29:27.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.347" level="INFO">${ACCURACY} = {'diff': [6.0291999999999984e-05, 5.968099999999893e-05, 6.005499999999983e-05, 5.95689999999989e-05, 5.984700000000176e-05, 5.979100000000001e-05, 6.009700000000201e-05, 6.033300000000269e-05, 6.0332...</msg>
<status status="PASS" starttime="20201030 18:29:27.343" endtime="20201030 18:29:27.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.353" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.352" endtime="20201030 18:29:27.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.356" level="INFO">VALUE: [6.0291999999999984e-05, 5.968099999999893e-05, 6.005499999999983e-05, 5.95689999999989e-05, 5.984700000000176e-05, 5.979100000000001e-05, 6.009700000000201e-05, 6.033300000000269e-05, 6.033299999999922e-05, 6.040300000000054e-05, 6.044499999999925e-05, 5.991699999999961e-05, 5.96949999999985e-05, 6.051299999999815e-05, 5.994499999999875e-05, 6.0305999999999554e-05, 5.993099999999918e-05, 5.9916000000000136e-05, 5.9958000000002315e-05, 6.011099999999811e-05, 5.9764000000000345e-05, 6.034699999999879e-05, 6.0415999999997166e-05, 6.041700000000011e-05, 5.991699999999961e-05, 5.966699999999936e-05, 5.993099999999918e-05, 6.0333999999998694e-05, 5.9806000000002524e-05, 5.9750000000000775e-05, 5.987499999999743e-05, 5.981899999999915e-05, 5.9652000000000316e-05, 6.033300000000269e-05, 5.979100000000001e-05, 6.0179999999999956e-05, 5.9958000000002315e-05, 5.9999999999997555e-05, 5.988900000000047e-05, 5.966700000000283e-05, 6.0013999999997125e-05, 5.9777999999999915e-05, 6.0278000000000415e-05, 6.0014000000000595e-05, 5.9847999999997764e-05, 6.022299999999814e-05, 6.0084000000001914e-05, 6.016699999999986e-05, 6.0388000000001496e-05, 6.0430000000000206e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.354" endtime="20201030 18:29:27.364"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.348" endtime="20201030 18:29:27.364"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.368" endtime="20201030 18:29:27.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.367" endtime="20201030 18:29:27.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.366" endtime="20201030 18:29:27.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.959" endtime="20201030 18:29:27.390"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:26.959" endtime="20201030 18:29:27.390"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.400" endtime="20201030 18:29:27.417"></status>
</kw>
<msg timestamp="20201030 18:29:27.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.398" endtime="20201030 18:29:27.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.420" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.419" endtime="20201030 18:29:27.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.421" endtime="20201030 18:29:27.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.396" endtime="20201030 18:29:27.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.393" endtime="20201030 18:29:27.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.430" endtime="20201030 18:29:27.718"></status>
</kw>
<msg timestamp="20201030 18:29:27.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.429" endtime="20201030 18:29:27.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022238486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022299778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:27.722" endtime="20201030 18:29:27.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.730" endtime="20201030 18:29:27.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.426" endtime="20201030 18:29:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.424" endtime="20201030 18:29:27.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:27.737" level="INFO">${RESULT} = [{'diff': 6.129200000000098e-05}, {'diff': 6.123599999999924e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.059699999999904e-05}, {'diff': 6.122200000000314e-05}, {'diff': 6.0944000000000276e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:27.734" endtime="20201030 18:29:27.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:27.742" level="INFO">${ACCURACY} = {'diff': [6.129200000000098e-05, 6.123599999999924e-05, 6.068099999999993e-05, 6.059699999999904e-05, 6.122200000000314e-05, 6.0944000000000276e-05, 6.131899999999718e-05, 6.055500000000033e-05, 6.145...</msg>
<status status="PASS" starttime="20201030 18:29:27.738" endtime="20201030 18:29:27.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.747" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 18:29:27.745" endtime="20201030 18:29:27.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.749" level="INFO">VALUE: [6.129200000000098e-05, 6.123599999999924e-05, 6.068099999999993e-05, 6.059699999999904e-05, 6.122200000000314e-05, 6.0944000000000276e-05, 6.131899999999718e-05, 6.055500000000033e-05, 6.145800000000035e-05, 6.147199999999992e-05, 6.104200000000073e-05, 6.06949999999995e-05, 6.141700000000111e-05, 6.0971999999999416e-05, 6.134800000000273e-05, 6.0500000000001525e-05, 6.068099999999993e-05, 6.093100000000018e-05, 6.062499999999818e-05, 6.127800000000141e-05, 6.117999999999749e-05, 6.115200000000182e-05, 6.062499999999818e-05, 6.0888999999998e-05, 6.08750000000019e-05, 6.134699999999979e-05, 6.143100000000068e-05, 6.0944000000000276e-05, 6.138900000000197e-05, 6.0764000000001345e-05, 6.068099999999993e-05, 6.141699999999764e-05, 6.140299999999807e-05, 6.112500000000215e-05, 6.145800000000035e-05, 6.0721999999999166e-05, 6.0500000000001525e-05, 6.133300000000022e-05, 6.118000000000096e-05, 6.133300000000022e-05, 6.055500000000033e-05, 6.127799999999795e-05, 6.144400000000078e-05, 6.129199999999752e-05, 6.147199999999992e-05, 6.129199999999752e-05, 6.141700000000111e-05, 6.0736000000002205e-05, 6.070899999999907e-05, 6.094499999999975e-05]</msg>
<status status="PASS" starttime="20201030 18:29:27.748" endtime="20201030 18:29:27.750"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.743" endtime="20201030 18:29:27.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:27.754" endtime="20201030 18:29:27.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.753" endtime="20201030 18:29:27.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.751" endtime="20201030 18:29:27.774"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.391" endtime="20201030 18:29:27.775"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.390" endtime="20201030 18:29:27.775"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.783" endtime="20201030 18:29:27.801"></status>
</kw>
<msg timestamp="20201030 18:29:27.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.782" endtime="20201030 18:29:27.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:27.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:27.802" endtime="20201030 18:29:27.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.805" endtime="20201030 18:29:27.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.779" endtime="20201030 18:29:27.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.777" endtime="20201030 18:29:27.807"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:27.814" endtime="20201030 18:29:28.101"></status>
</kw>
<msg timestamp="20201030 18:29:28.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:27.812" endtime="20201030 18:29:28.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019516861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195785, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:28.105" endtime="20201030 18:29:28.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.113" endtime="20201030 18:29:28.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.810" endtime="20201030 18:29:28.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.808" endtime="20201030 18:29:28.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.120" level="INFO">${RESULT} = [{'diff': 6.163899999999875e-05}, {'diff': 6.159700000000004e-05}, {'diff': 6.243099999999821e-05}, {'diff': 6.245799999999788e-05}, {'diff': 6.230599999999809e-05}, {'diff': 6.17080000000006e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:28.117" endtime="20201030 18:29:28.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.124" level="INFO">${ACCURACY} = {'diff': [6.163899999999875e-05, 6.159700000000004e-05, 6.243099999999821e-05, 6.245799999999788e-05, 6.230599999999809e-05, 6.17080000000006e-05, 6.163900000000222e-05, 6.161099999999961e-05, 6.16810...</msg>
<status status="PASS" starttime="20201030 18:29:28.121" endtime="20201030 18:29:28.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.129" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.128" endtime="20201030 18:29:28.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.131" level="INFO">VALUE: [6.163899999999875e-05, 6.159700000000004e-05, 6.243099999999821e-05, 6.245799999999788e-05, 6.230599999999809e-05, 6.17080000000006e-05, 6.163900000000222e-05, 6.161099999999961e-05, 6.168100000000093e-05, 6.223600000000024e-05, 6.152700000000219e-05, 6.18750000000029e-05, 6.170799999999713e-05, 6.231900000000165e-05, 6.219400000000153e-05, 6.184700000000029e-05, 6.209700000000054e-05, 6.198599999999999e-05, 6.241699999999864e-05, 6.222200000000067e-05, 6.16950000000005e-05, 6.187499999999943e-05, 6.20560000000013e-05, 6.209700000000054e-05, 6.242999999999874e-05, 6.166699999999789e-05, 6.1888999999999e-05, 6.233300000000122e-05, 6.238900000000297e-05, 6.245800000000135e-05, 6.17080000000006e-05, 6.212499999999968e-05, 6.180600000000105e-05, 6.179199999999802e-05, 6.195799999999738e-05, 6.162499999999918e-05, 6.205599999999784e-05, 6.25279999999992e-05, 6.241699999999864e-05, 6.187499999999943e-05, 6.184799999999976e-05, 6.216599999999892e-05, 6.24439999999983e-05, 6.15140000000021e-05, 6.241599999999917e-05, 6.180500000000158e-05, 6.229099999999904e-05, 6.233300000000122e-05, 6.176399999999888e-05, 6.179199999999802e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.130" endtime="20201030 18:29:28.132"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.125" endtime="20201030 18:29:28.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.136" endtime="20201030 18:29:28.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.135" endtime="20201030 18:29:28.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.134" endtime="20201030 18:29:28.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.776" endtime="20201030 18:29:28.157"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:27.775" endtime="20201030 18:29:28.157"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.166" endtime="20201030 18:29:28.183"></status>
</kw>
<msg timestamp="20201030 18:29:28.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.164" endtime="20201030 18:29:28.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.184" endtime="20201030 18:29:28.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.187" endtime="20201030 18:29:28.188"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.162" endtime="20201030 18:29:28.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.160" endtime="20201030 18:29:28.189"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.196" endtime="20201030 18:29:28.482"></status>
</kw>
<msg timestamp="20201030 18:29:28.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.194" endtime="20201030 18:29:28.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020493583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020556806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:28.486" endtime="20201030 18:29:28.493"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.494" endtime="20201030 18:29:28.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.192" endtime="20201030 18:29:28.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.190" endtime="20201030 18:29:28.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.501" level="INFO">${RESULT} = [{'diff': 6.322300000000114e-05}, {'diff': 6.250000000000006e-05}, {'diff': 6.3195000000002e-05}, {'diff': 6.315299999999982e-05}, {'diff': 6.265299999999932e-05}, {'diff': 6.302700000000022e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:28.497" endtime="20201030 18:29:28.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.505" level="INFO">${ACCURACY} = {'diff': [6.322300000000114e-05, 6.250000000000006e-05, 6.3195000000002e-05, 6.315299999999982e-05, 6.265299999999932e-05, 6.302700000000022e-05, 6.283299999999825e-05, 6.331899999999918e-05, 6.299999...</msg>
<status status="PASS" starttime="20201030 18:29:28.502" endtime="20201030 18:29:28.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.510" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.508" endtime="20201030 18:29:28.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.512" level="INFO">VALUE: [6.322300000000114e-05, 6.250000000000006e-05, 6.3195000000002e-05, 6.315299999999982e-05, 6.265299999999932e-05, 6.302700000000022e-05, 6.283299999999825e-05, 6.331899999999918e-05, 6.299999999999709e-05, 6.300000000000056e-05, 6.294400000000228e-05, 6.287500000000043e-05, 6.250000000000006e-05, 6.261100000000061e-05, 6.343099999999921e-05, 6.343099999999921e-05, 6.347299999999792e-05, 6.329199999999952e-05, 6.344500000000225e-05, 6.30690000000024e-05, 6.27630000000004e-05, 6.341600000000017e-05, 6.295799999999838e-05, 6.292999999999924e-05, 6.322200000000167e-05, 6.347200000000192e-05, 6.297200000000142e-05, 6.318099999999896e-05, 6.315299999999982e-05, 6.26950000000015e-05, 6.318099999999896e-05, 6.273600000000074e-05, 6.263800000000028e-05, 6.343099999999921e-05, 6.337500000000093e-05, 6.309800000000101e-05, 6.336100000000136e-05, 6.329100000000004e-05, 6.261100000000061e-05, 6.311100000000111e-05, 6.265299999999932e-05, 6.262500000000018e-05, 6.280599999999859e-05, 6.297200000000142e-05, 6.348600000000149e-05, 6.268100000000193e-05, 6.30560000000023e-05, 6.34439999999993e-05, 6.263899999999975e-05, 6.341700000000311e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.511" endtime="20201030 18:29:28.514"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.506" endtime="20201030 18:29:28.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.518" endtime="20201030 18:29:28.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.516" endtime="20201030 18:29:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.515" endtime="20201030 18:29:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.158" endtime="20201030 18:29:28.538"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.158" endtime="20201030 18:29:28.539"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.547" endtime="20201030 18:29:28.565"></status>
</kw>
<msg timestamp="20201030 18:29:28.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.546" endtime="20201030 18:29:28.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.566" endtime="20201030 18:29:28.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.569" endtime="20201030 18:29:28.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.543" endtime="20201030 18:29:28.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.541" endtime="20201030 18:29:28.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.578" endtime="20201030 18:29:28.863"></status>
</kw>
<msg timestamp="20201030 18:29:28.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01957875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:28.576" endtime="20201030 18:29:28.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01957875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:28.867" endtime="20201030 18:29:28.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.875" endtime="20201030 18:29:28.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.573" endtime="20201030 18:29:28.877"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.572" endtime="20201030 18:29:28.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:28.881" level="INFO">${RESULT} = [{'diff': 6.386099999999839e-05}, {'diff': 6.437499999999846e-05}, {'diff': 6.434699999999932e-05}, {'diff': 6.394499999999928e-05}, {'diff': 6.408399999999898e-05}, {'diff': 6.433399999999923e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:28.878" endtime="20201030 18:29:28.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:28.887" level="INFO">${ACCURACY} = {'diff': [6.386099999999839e-05, 6.437499999999846e-05, 6.434699999999932e-05, 6.394499999999928e-05, 6.408399999999898e-05, 6.433399999999923e-05, 6.443000000000074e-05, 6.413900000000125e-05, 6.4430...</msg>
<status status="PASS" starttime="20201030 18:29:28.882" endtime="20201030 18:29:28.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.891" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 18:29:28.890" endtime="20201030 18:29:28.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.894" level="INFO">VALUE: [6.386099999999839e-05, 6.437499999999846e-05, 6.434699999999932e-05, 6.394499999999928e-05, 6.408399999999898e-05, 6.433399999999923e-05, 6.443000000000074e-05, 6.413900000000125e-05, 6.443000000000074e-05, 6.411099999999864e-05, 6.400000000000156e-05, 6.427799999999748e-05, 6.379100000000054e-05, 6.367999999999999e-05, 6.368100000000293e-05, 6.405599999999984e-05, 6.444499999999978e-05, 6.415300000000082e-05, 6.437499999999846e-05, 6.443000000000074e-05, 6.432000000000312e-05, 6.441700000000064e-05, 6.411100000000211e-05, 6.42219999999992e-05, 6.400000000000156e-05, 6.415300000000082e-05, 6.37219999999987e-05, 6.445799999999988e-05, 6.423600000000224e-05, 6.401400000000113e-05, 6.42639999999979e-05, 6.447199999999945e-05, 6.372200000000217e-05, 6.429200000000052e-05, 6.366600000000042e-05, 6.441600000000117e-05, 6.398699999999799e-05, 6.441600000000117e-05, 6.42219999999992e-05, 6.430500000000061e-05, 6.43890000000015e-05, 6.433299999999975e-05, 6.44440000000003e-05, 6.374999999999784e-05, 6.437499999999846e-05, 6.381999999999916e-05, 6.351399999999716e-05, 6.434699999999932e-05, 6.391700000000014e-05, 6.416699999999692e-05]</msg>
<status status="PASS" starttime="20201030 18:29:28.892" endtime="20201030 18:29:28.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.887" endtime="20201030 18:29:28.895"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:28.899" endtime="20201030 18:29:28.918"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.897" endtime="20201030 18:29:28.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.896" endtime="20201030 18:29:28.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.540" endtime="20201030 18:29:28.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.539" endtime="20201030 18:29:28.919"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.928" endtime="20201030 18:29:28.945"></status>
</kw>
<msg timestamp="20201030 18:29:28.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.926" endtime="20201030 18:29:28.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:28.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:28.947" endtime="20201030 18:29:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.949" endtime="20201030 18:29:28.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.924" endtime="20201030 18:29:28.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.922" endtime="20201030 18:29:28.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:28.959" endtime="20201030 18:29:29.246"></status>
</kw>
<msg timestamp="20201030 18:29:29.250" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:28.958" endtime="20201030 18:29:29.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019550444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:29:29.251" endtime="20201030 18:29:29.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.259" endtime="20201030 18:29:29.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.954" endtime="20201030 18:29:29.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.953" endtime="20201030 18:29:29.262"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.265" level="INFO">${RESULT} = [{'diff': 6.455600000000034e-05}, {'diff': 6.469400000000056e-05}, {'diff': 6.483299999999678e-05}, {'diff': 6.4583e-05}, {'diff': 6.513899999999878e-05}, {'diff': 6.48340000000032e-05}, {'diff': 6.49...</msg>
<status status="PASS" starttime="20201030 18:29:29.262" endtime="20201030 18:29:29.266"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.270" level="INFO">${ACCURACY} = {'diff': [6.455600000000034e-05, 6.469400000000056e-05, 6.483299999999678e-05, 6.4583e-05, 6.513899999999878e-05, 6.48340000000032e-05, 6.493100000000071e-05, 6.533400000000023e-05, 6.538899999999903e...</msg>
<status status="PASS" starttime="20201030 18:29:29.266" endtime="20201030 18:29:29.270"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.274" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.273" endtime="20201030 18:29:29.274"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.277" level="INFO">VALUE: [6.455600000000034e-05, 6.469400000000056e-05, 6.483299999999678e-05, 6.4583e-05, 6.513899999999878e-05, 6.48340000000032e-05, 6.493100000000071e-05, 6.533400000000023e-05, 6.538899999999903e-05, 6.505600000000084e-05, 6.54440000000013e-05, 6.548600000000002e-05, 6.470800000000013e-05, 6.499999999999909e-05, 6.519400000000106e-05, 6.465300000000132e-05, 6.540300000000207e-05, 6.513899999999878e-05, 6.468099999999699e-05, 6.487499999999896e-05, 6.495900000000332e-05, 6.487499999999896e-05, 6.511199999999912e-05, 6.504099999999832e-05, 6.533300000000075e-05, 6.506900000000093e-05, 6.474999999999884e-05, 6.505499999999789e-05, 6.534700000000032e-05, 6.536099999999989e-05, 6.479199999999755e-05, 6.519500000000053e-05, 6.465300000000132e-05, 6.461099999999914e-05, 6.540300000000207e-05, 6.488899999999853e-05, 6.511199999999912e-05, 6.543000000000174e-05, 6.455499999999739e-05, 6.494399999999734e-05, 6.468000000000099e-05, 6.468000000000099e-05, 6.480500000000111e-05, 6.474999999999884e-05, 6.529200000000152e-05, 6.49440000000008e-05, 6.499999999999909e-05, 6.479200000000102e-05, 6.50700000000004e-05, 6.509799999999955e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.275" endtime="20201030 18:29:29.277"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.270" endtime="20201030 18:29:29.278"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.282" endtime="20201030 18:29:29.301"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.280" endtime="20201030 18:29:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.279" endtime="20201030 18:29:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.920" endtime="20201030 18:29:29.302"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:28.920" endtime="20201030 18:29:29.302"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.311" endtime="20201030 18:29:29.330"></status>
</kw>
<msg timestamp="20201030 18:29:29.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.310" endtime="20201030 18:29:29.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.331" endtime="20201030 18:29:29.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.334" endtime="20201030 18:29:29.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.307" endtime="20201030 18:29:29.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.305" endtime="20201030 18:29:29.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.343" endtime="20201030 18:29:29.628"></status>
</kw>
<msg timestamp="20201030 18:29:29.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020801125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.341" endtime="20201030 18:29:29.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020801125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020867306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.632" endtime="20201030 18:29:29.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.640" endtime="20201030 18:29:29.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.339" endtime="20201030 18:29:29.642"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.337" endtime="20201030 18:29:29.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:29.647" level="INFO">${RESULT} = [{'diff': 6.618099999999849e-05}, {'diff': 6.602699999999975e-05}, {'diff': 6.591700000000214e-05}, {'diff': 6.647199999999798e-05}, {'diff': 6.59159999999992e-05}, {'diff': 6.606899999999846e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:29.643" endtime="20201030 18:29:29.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:29.651" level="INFO">${ACCURACY} = {'diff': [6.618099999999849e-05, 6.602699999999975e-05, 6.591700000000214e-05, 6.647199999999798e-05, 6.59159999999992e-05, 6.606899999999846e-05, 6.587499999999996e-05, 6.60280000000027e-05, 6.554199...</msg>
<status status="PASS" starttime="20201030 18:29:29.647" endtime="20201030 18:29:29.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.655" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 18:29:29.654" endtime="20201030 18:29:29.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.658" level="INFO">VALUE: [6.618099999999849e-05, 6.602699999999975e-05, 6.591700000000214e-05, 6.647199999999798e-05, 6.59159999999992e-05, 6.606899999999846e-05, 6.587499999999996e-05, 6.60280000000027e-05, 6.55419999999983e-05, 6.563899999999928e-05, 6.641699999999917e-05, 6.611100000000064e-05, 6.580600000000159e-05, 6.611200000000012e-05, 6.563799999999981e-05, 6.569400000000156e-05, 6.594399999999834e-05, 6.568000000000199e-05, 6.577799999999898e-05, 6.62220000000012e-05, 6.600000000000009e-05, 6.577800000000245e-05, 6.562500000000318e-05, 6.622199999999773e-05, 6.561100000000014e-05, 6.563899999999928e-05, 6.577799999999898e-05, 6.598699999999999e-05, 6.612500000000021e-05, 6.556900000000143e-05, 6.554099999999882e-05, 6.616599999999945e-05, 6.577700000000297e-05, 6.613899999999978e-05, 6.634700000000132e-05, 6.638900000000003e-05, 6.60969999999976e-05, 6.59029999999991e-05, 6.602799999999923e-05, 6.629199999999905e-05, 6.563899999999928e-05, 6.601399999999966e-05, 6.60839999999975e-05, 6.637500000000046e-05, 6.602799999999923e-05, 6.570800000000113e-05, 6.617999999999902e-05, 6.64029999999996e-05, 6.643100000000221e-05, 6.573600000000027e-05]</msg>
<status status="PASS" starttime="20201030 18:29:29.656" endtime="20201030 18:29:29.659"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.652" endtime="20201030 18:29:29.660"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:29.664" endtime="20201030 18:29:29.683"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.662" endtime="20201030 18:29:29.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.661" endtime="20201030 18:29:29.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.303" endtime="20201030 18:29:29.684"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.303" endtime="20201030 18:29:29.684"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.693" endtime="20201030 18:29:29.711"></status>
</kw>
<msg timestamp="20201030 18:29:29.712" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.692" endtime="20201030 18:29:29.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:29.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:29.713" endtime="20201030 18:29:29.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.715" endtime="20201030 18:29:29.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.689" endtime="20201030 18:29:29.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.687" endtime="20201030 18:29:29.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:29.724" endtime="20201030 18:29:30.010"></status>
</kw>
<msg timestamp="20201030 18:29:30.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020543597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:29.722" endtime="20201030 18:29:30.013"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.021" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020476931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020543597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.014" endtime="20201030 18:29:30.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.022" endtime="20201030 18:29:30.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.720" endtime="20201030 18:29:30.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.718" endtime="20201030 18:29:30.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.029" level="INFO">${RESULT} = [{'diff': 6.666599999999995e-05}, {'diff': 6.686100000000139e-05}, {'diff': 6.659700000000157e-05}, {'diff': 6.722199999999873e-05}, {'diff': 6.686099999999792e-05}, {'diff': 6.662500000000071e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:30.026" endtime="20201030 18:29:30.029"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.037" level="INFO">${ACCURACY} = {'diff': [6.666599999999995e-05, 6.686100000000139e-05, 6.659700000000157e-05, 6.722199999999873e-05, 6.686099999999792e-05, 6.662500000000071e-05, 6.681999999999869e-05, 6.694499999999881e-05, 6.6569...</msg>
<status status="PASS" starttime="20201030 18:29:30.030" endtime="20201030 18:29:30.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.041" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.040" endtime="20201030 18:29:30.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.044" level="INFO">VALUE: [6.666599999999995e-05, 6.686100000000139e-05, 6.659700000000157e-05, 6.722199999999873e-05, 6.686099999999792e-05, 6.662500000000071e-05, 6.681999999999869e-05, 6.694499999999881e-05, 6.656900000000243e-05, 6.669499999999856e-05, 6.734699999999885e-05, 6.741599999999723e-05, 6.712500000000121e-05, 6.700000000000109e-05, 6.701400000000066e-05, 6.686100000000139e-05, 6.693099999999924e-05, 6.691699999999967e-05, 6.666700000000289e-05, 6.724999999999787e-05, 6.712500000000121e-05, 6.718099999999949e-05, 6.686099999999792e-05, 6.648700000000049e-05, 6.656900000000243e-05, 6.680499999999964e-05, 6.711100000000164e-05, 6.656900000000243e-05, 6.713900000000078e-05, 6.699999999999762e-05, 6.705499999999989e-05, 6.697199999999848e-05, 6.693099999999924e-05, 6.686100000000139e-05, 6.747299999999845e-05, 6.655599999999887e-05, 6.733399999999876e-05, 6.718000000000002e-05, 6.690200000000063e-05, 6.667999999999952e-05, 6.663900000000028e-05, 6.663900000000028e-05, 6.663900000000028e-05, 6.672199999999823e-05, 6.665299999999985e-05, 6.723700000000124e-05, 6.733299999999928e-05, 6.734699999999885e-05, 6.729200000000005e-05, 6.722199999999873e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.042" endtime="20201030 18:29:30.044"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.038" endtime="20201030 18:29:30.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.048" endtime="20201030 18:29:30.068"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.047" endtime="20201030 18:29:30.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.046" endtime="20201030 18:29:30.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.685" endtime="20201030 18:29:30.069"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:29.685" endtime="20201030 18:29:30.069"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.078" endtime="20201030 18:29:30.096"></status>
</kw>
<msg timestamp="20201030 18:29:30.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.076" endtime="20201030 18:29:30.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.097" endtime="20201030 18:29:30.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.100" endtime="20201030 18:29:30.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.074" endtime="20201030 18:29:30.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.072" endtime="20201030 18:29:30.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.109" endtime="20201030 18:29:30.395"></status>
</kw>
<msg timestamp="20201030 18:29:30.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.107" endtime="20201030 18:29:30.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020205583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020273917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.399" endtime="20201030 18:29:30.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.408" endtime="20201030 18:29:30.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.105" endtime="20201030 18:29:30.410"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.103" endtime="20201030 18:29:30.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.414" level="INFO">${RESULT} = [{'diff': 6.833399999999976e-05}, {'diff': 6.813900000000178e-05}, {'diff': 6.763899999999781e-05}, {'diff': 6.768099999999999e-05}, {'diff': 6.818000000000102e-05}, {'diff': 6.755499999999692e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:30.411" endtime="20201030 18:29:30.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.419" level="INFO">${ACCURACY} = {'diff': [6.833399999999976e-05, 6.813900000000178e-05, 6.763899999999781e-05, 6.768099999999999e-05, 6.818000000000102e-05, 6.755499999999692e-05, 6.787499999999849e-05, 6.758299999999953e-05, 6.8028...</msg>
<status status="PASS" starttime="20201030 18:29:30.415" endtime="20201030 18:29:30.419"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.423" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.422" endtime="20201030 18:29:30.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.425" level="INFO">VALUE: [6.833399999999976e-05, 6.813900000000178e-05, 6.763899999999781e-05, 6.768099999999999e-05, 6.818000000000102e-05, 6.755499999999692e-05, 6.787499999999849e-05, 6.758299999999953e-05, 6.802800000000123e-05, 6.769400000000009e-05, 6.776399999999794e-05, 6.762499999999824e-05, 6.751400000000116e-05, 6.82359999999993e-05, 6.845899999999988e-05, 6.776299999999846e-05, 6.80420000000008e-05, 6.809799999999908e-05, 6.820800000000016e-05, 6.826300000000243e-05, 6.80969999999996e-05, 6.805500000000089e-05, 6.843099999999727e-05, 6.791700000000067e-05, 6.82359999999993e-05, 6.775000000000184e-05, 6.768099999999999e-05, 6.812499999999874e-05, 6.769499999999956e-05, 6.80420000000008e-05, 6.765199999999791e-05, 6.824999999999887e-05, 6.77640000000014e-05, 6.811099999999917e-05, 6.754099999999735e-05, 6.827800000000148e-05, 6.798600000000252e-05, 6.826399999999844e-05, 6.830499999999767e-05, 6.818100000000049e-05, 6.783399999999926e-05, 6.801399999999819e-05, 6.762500000000171e-05, 6.815299999999788e-05, 6.82359999999993e-05, 6.806900000000046e-05, 6.812500000000221e-05, 6.834699999999985e-05, 6.826399999999844e-05, 6.765300000000085e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.424" endtime="20201030 18:29:30.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.419" endtime="20201030 18:29:30.427"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.430" endtime="20201030 18:29:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.429" endtime="20201030 18:29:30.450"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.428" endtime="20201030 18:29:30.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.070" endtime="20201030 18:29:30.451"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.070" endtime="20201030 18:29:30.451"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.460" endtime="20201030 18:29:30.479"></status>
</kw>
<msg timestamp="20201030 18:29:30.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.458" endtime="20201030 18:29:30.480"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.481" endtime="20201030 18:29:30.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.483" endtime="20201030 18:29:30.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.456" endtime="20201030 18:29:30.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.454" endtime="20201030 18:29:30.485"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.492" endtime="20201030 18:29:30.777"></status>
</kw>
<msg timestamp="20201030 18:29:30.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.491" endtime="20201030 18:29:30.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.788" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020515347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020583889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.781" endtime="20201030 18:29:30.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.789" endtime="20201030 18:29:30.791"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.488" endtime="20201030 18:29:30.792"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.486" endtime="20201030 18:29:30.792"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:30.796" level="INFO">${RESULT} = [{'diff': 6.85420000000013e-05}, {'diff': 6.883400000000026e-05}, {'diff': 6.87229999999997e-05}, {'diff': 6.92230000000002e-05}, {'diff': 6.881899999999774e-05}, {'diff': 6.862500000000271e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:30.793" endtime="20201030 18:29:30.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:30.800" level="INFO">${ACCURACY} = {'diff': [6.85420000000013e-05, 6.883400000000026e-05, 6.87229999999997e-05, 6.92230000000002e-05, 6.881899999999774e-05, 6.862500000000271e-05, 6.931899999999824e-05, 6.862499999999924e-05, 6.8971999...</msg>
<status status="PASS" starttime="20201030 18:29:30.797" endtime="20201030 18:29:30.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.805" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 18:29:30.804" endtime="20201030 18:29:30.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.807" level="INFO">VALUE: [6.85420000000013e-05, 6.883400000000026e-05, 6.87229999999997e-05, 6.92230000000002e-05, 6.881899999999774e-05, 6.862500000000271e-05, 6.931899999999824e-05, 6.862499999999924e-05, 6.897199999999701e-05, 6.938899999999956e-05, 6.876399999999894e-05, 6.861099999999967e-05, 6.92230000000002e-05, 6.912499999999974e-05, 6.920800000000116e-05, 6.945900000000088e-05, 6.883400000000026e-05, 6.893100000000124e-05, 6.941599999999923e-05, 6.897200000000048e-05, 6.917999999999855e-05, 6.902699999999928e-05, 6.943000000000227e-05, 6.943099999999827e-05, 6.950000000000012e-05, 6.876399999999894e-05, 6.875000000000284e-05, 6.87359999999998e-05, 6.865299999999838e-05, 6.863900000000228e-05, 6.863899999999881e-05, 6.94169999999987e-05, 6.89030000000021e-05, 6.945900000000088e-05, 6.868000000000152e-05, 6.927699999999953e-05, 6.863900000000228e-05, 6.880500000000164e-05, 6.905600000000137e-05, 6.874999999999937e-05, 6.904199999999833e-05, 6.94169999999987e-05, 6.901400000000266e-05, 6.868100000000099e-05, 6.919500000000106e-05, 6.893100000000124e-05, 6.867999999999805e-05, 6.886099999999992e-05, 6.905500000000189e-05, 6.941599999999923e-05]</msg>
<status status="PASS" starttime="20201030 18:29:30.806" endtime="20201030 18:29:30.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.801" endtime="20201030 18:29:30.809"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:30.813" endtime="20201030 18:29:30.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.812" endtime="20201030 18:29:30.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.810" endtime="20201030 18:29:30.833"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.452" endtime="20201030 18:29:30.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.452" endtime="20201030 18:29:30.834"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.843" endtime="20201030 18:29:30.860"></status>
</kw>
<msg timestamp="20201030 18:29:30.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.841" endtime="20201030 18:29:30.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:30.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:30.862" endtime="20201030 18:29:30.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.865" endtime="20201030 18:29:30.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.838" endtime="20201030 18:29:30.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.836" endtime="20201030 18:29:30.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:30.874" endtime="20201030 18:29:31.160"></status>
</kw>
<msg timestamp="20201030 18:29:31.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:30.872" endtime="20201030 18:29:31.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019543042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019613222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.164" endtime="20201030 18:29:31.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.172" endtime="20201030 18:29:31.174"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.870" endtime="20201030 18:29:31.175"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.868" endtime="20201030 18:29:31.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.179" level="INFO">${RESULT} = [{'diff': 7.017999999999955e-05}, {'diff': 7.029199999999958e-05}, {'diff': 7.011100000000117e-05}, {'diff': 7.000000000000062e-05}, {'diff': 6.952799999999926e-05}, {'diff': 7.022200000000173e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:31.176" endtime="20201030 18:29:31.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.184" level="INFO">${ACCURACY} = {'diff': [7.017999999999955e-05, 7.029199999999958e-05, 7.011100000000117e-05, 7.000000000000062e-05, 6.952799999999926e-05, 7.022200000000173e-05, 7.018099999999902e-05, 6.98620000000004e-05, 7.03469...</msg>
<status status="PASS" starttime="20201030 18:29:31.180" endtime="20201030 18:29:31.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.189" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.188" endtime="20201030 18:29:31.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.191" level="INFO">VALUE: [7.017999999999955e-05, 7.029199999999958e-05, 7.011100000000117e-05, 7.000000000000062e-05, 6.952799999999926e-05, 7.022200000000173e-05, 7.018099999999902e-05, 6.98620000000004e-05, 7.034699999999838e-05, 6.998600000000105e-05, 7.050000000000112e-05, 6.97909999999996e-05, 7.027699999999706e-05, 7.004099999999985e-05, 6.962500000000024e-05, 6.988900000000006e-05, 7.006900000000246e-05, 6.969400000000209e-05, 7.029199999999958e-05, 7.029199999999958e-05, 7.027800000000001e-05, 6.990299999999963e-05, 6.998600000000105e-05, 7.029199999999958e-05, 7.026400000000044e-05, 7.001300000000071e-05, 7.051400000000069e-05, 7.011100000000117e-05, 6.991599999999973e-05, 6.970799999999819e-05, 7.048599999999808e-05, 6.970799999999819e-05, 7.006999999999847e-05, 6.979200000000255e-05, 6.980599999999865e-05, 7.029199999999958e-05, 6.962499999999677e-05, 7.033399999999829e-05, 7.031999999999872e-05, 7.041600000000023e-05, 7.02910000000001e-05, 6.963899999999981e-05, 7.038900000000056e-05, 7.006900000000246e-05, 6.982000000000169e-05, 6.96109999999972e-05, 7.019500000000206e-05, 7.026399999999697e-05, 6.963899999999981e-05, 7.018099999999902e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.190" endtime="20201030 18:29:31.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.185" endtime="20201030 18:29:31.192"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.196" endtime="20201030 18:29:31.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.195" endtime="20201030 18:29:31.216"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.193" endtime="20201030 18:29:31.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.835" endtime="20201030 18:29:31.217"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:30.834" endtime="20201030 18:29:31.217"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.226" endtime="20201030 18:29:31.243"></status>
</kw>
<msg timestamp="20201030 18:29:31.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.224" endtime="20201030 18:29:31.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.244" endtime="20201030 18:29:31.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.247" endtime="20201030 18:29:31.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.221" endtime="20201030 18:29:31.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.219" endtime="20201030 18:29:31.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.256" endtime="20201030 18:29:31.544"></status>
</kw>
<msg timestamp="20201030 18:29:31.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.254" endtime="20201030 18:29:31.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.548" endtime="20201030 18:29:31.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.556" endtime="20201030 18:29:31.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.252" endtime="20201030 18:29:31.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.250" endtime="20201030 18:29:31.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.563" level="INFO">${RESULT} = [{'diff': 7.14170000000007e-05}, {'diff': 7.068000000000005e-05}, {'diff': 7.080599999999965e-05}, {'diff': 7.102800000000076e-05}, {'diff': 7.069499999999909e-05}, {'diff': 7.083400000000226e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:31.560" endtime="20201030 18:29:31.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.567" level="INFO">${ACCURACY} = {'diff': [7.14170000000007e-05, 7.068000000000005e-05, 7.080599999999965e-05, 7.102800000000076e-05, 7.069499999999909e-05, 7.083400000000226e-05, 7.05979999999981e-05, 7.115300000000088e-05, 7.081999...</msg>
<status status="PASS" starttime="20201030 18:29:31.564" endtime="20201030 18:29:31.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.572" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.571" endtime="20201030 18:29:31.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.574" level="INFO">VALUE: [7.14170000000007e-05, 7.068000000000005e-05, 7.080599999999965e-05, 7.102800000000076e-05, 7.069499999999909e-05, 7.083400000000226e-05, 7.05979999999981e-05, 7.115300000000088e-05, 7.081999999999922e-05, 7.090199999999769e-05, 7.058299999999906e-05, 7.065300000000038e-05, 7.111100000000217e-05, 7.140300000000113e-05, 7.099999999999815e-05, 7.11109999999987e-05, 7.123599999999883e-05, 7.079200000000008e-05, 7.094499999999934e-05, 7.070899999999866e-05, 7.094500000000281e-05, 7.052800000000026e-05, 7.111200000000165e-05, 7.051400000000069e-05, 7.136099999999895e-05, 7.108299999999956e-05, 7.147199999999951e-05, 7.138899999999809e-05, 7.102800000000076e-05, 7.082000000000269e-05, 7.098600000000205e-05, 7.091699999999673e-05, 7.133399999999929e-05, 7.108399999999904e-05, 7.052800000000026e-05, 7.122200000000273e-05, 7.072199999999876e-05, 7.140200000000166e-05, 7.076400000000094e-05, 7.12499999999984e-05, 7.122199999999926e-05, 7.14300000000008e-05, 7.088900000000106e-05, 7.108399999999904e-05, 7.119400000000012e-05, 7.070899999999866e-05, 7.12629999999985e-05, 7.075000000000137e-05, 7.080599999999965e-05, 7.065200000000091e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.573" endtime="20201030 18:29:31.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.568" endtime="20201030 18:29:31.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.579" endtime="20201030 18:29:31.598"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.578" endtime="20201030 18:29:31.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.576" endtime="20201030 18:29:31.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.218" endtime="20201030 18:29:31.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.217" endtime="20201030 18:29:31.600"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.609" endtime="20201030 18:29:31.627"></status>
</kw>
<msg timestamp="20201030 18:29:31.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.607" endtime="20201030 18:29:31.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.628" endtime="20201030 18:29:31.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.631" endtime="20201030 18:29:31.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.604" endtime="20201030 18:29:31.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.602" endtime="20201030 18:29:31.633"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.640" endtime="20201030 18:29:31.926"></status>
</kw>
<msg timestamp="20201030 18:29:31.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020821569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.638" endtime="20201030 18:29:31.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020749472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020821569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:31.930" endtime="20201030 18:29:31.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.939" endtime="20201030 18:29:31.941"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.636" endtime="20201030 18:29:31.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.634" endtime="20201030 18:29:31.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:31.946" level="INFO">${RESULT} = [{'diff': 7.209700000000013e-05}, {'diff': 7.187499999999902e-05}, {'diff': 7.17499999999989e-05}, {'diff': 7.191599999999826e-05}, {'diff': 7.155500000000092e-05}, {'diff': 7.205499999999795e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:31.943" endtime="20201030 18:29:31.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:31.950" level="INFO">${ACCURACY} = {'diff': [7.209700000000013e-05, 7.187499999999902e-05, 7.17499999999989e-05, 7.191599999999826e-05, 7.155500000000092e-05, 7.205499999999795e-05, 7.241699999999823e-05, 7.169400000000062e-05, 7.20840...</msg>
<status status="PASS" starttime="20201030 18:29:31.947" endtime="20201030 18:29:31.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.955" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 18:29:31.954" endtime="20201030 18:29:31.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:31.957" level="INFO">VALUE: [7.209700000000013e-05, 7.187499999999902e-05, 7.17499999999989e-05, 7.191599999999826e-05, 7.155500000000092e-05, 7.205499999999795e-05, 7.241699999999823e-05, 7.169400000000062e-05, 7.208400000000004e-05, 7.148600000000255e-05, 7.24309999999978e-05, 7.244499999999737e-05, 7.245900000000041e-05, 7.22499999999994e-05, 7.213799999999937e-05, 7.187499999999902e-05, 7.24439999999979e-05, 7.229099999999863e-05, 7.180500000000117e-05, 7.241699999999823e-05, 7.177800000000151e-05, 7.191699999999773e-05, 7.243100000000127e-05, 7.182000000000022e-05, 7.212499999999927e-05, 7.207000000000047e-05, 7.195899999999991e-05, 7.219500000000059e-05, 7.247200000000051e-05, 7.152800000000126e-05, 7.169400000000062e-05, 7.209700000000013e-05, 7.222200000000026e-05, 7.19309999999973e-05, 7.180600000000065e-05, 7.199999999999915e-05, 7.172199999999976e-05, 7.216699999999798e-05, 7.230600000000115e-05, 7.227800000000201e-05, 7.188899999999859e-05, 7.247199999999704e-05, 7.244400000000137e-05, 7.202699999999881e-05, 7.18049999999977e-05, 7.187500000000249e-05, 7.215300000000188e-05, 7.149999999999865e-05, 7.169500000000009e-05, 7.150000000000212e-05]</msg>
<status status="PASS" starttime="20201030 18:29:31.956" endtime="20201030 18:29:31.959"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.951" endtime="20201030 18:29:31.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:31.963" endtime="20201030 18:29:31.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.962" endtime="20201030 18:29:31.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.961" endtime="20201030 18:29:31.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.601" endtime="20201030 18:29:31.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.600" endtime="20201030 18:29:31.984"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:31.993" endtime="20201030 18:29:32.011"></status>
</kw>
<msg timestamp="20201030 18:29:32.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:31.991" endtime="20201030 18:29:32.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.012" endtime="20201030 18:29:32.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.015" endtime="20201030 18:29:32.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.989" endtime="20201030 18:29:32.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.986" endtime="20201030 18:29:32.017"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.024" endtime="20201030 18:29:32.324"></status>
</kw>
<msg timestamp="20201030 18:29:32.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.022" endtime="20201030 18:29:32.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019588944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.329" endtime="20201030 18:29:32.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.337" endtime="20201030 18:29:32.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.020" endtime="20201030 18:29:32.339"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.018" endtime="20201030 18:29:32.339"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.343" level="INFO">${RESULT} = [{'diff': 7.316699999999898e-05}, {'diff': 7.31110000000007e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.254199999999836e-05}, {'diff': 7.287500000000002e-05}, {'diff': 7.329200000000258e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:32.340" endtime="20201030 18:29:32.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.348" level="INFO">${ACCURACY} = {'diff': [7.316699999999898e-05, 7.31110000000007e-05, 7.32500000000004e-05, 7.254199999999836e-05, 7.287500000000002e-05, 7.329200000000258e-05, 7.283300000000131e-05, 7.340200000000019e-05, 7.331899...</msg>
<status status="PASS" starttime="20201030 18:29:32.344" endtime="20201030 18:29:32.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.353" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.352" endtime="20201030 18:29:32.353"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.355" level="INFO">VALUE: [7.316699999999898e-05, 7.31110000000007e-05, 7.32500000000004e-05, 7.254199999999836e-05, 7.287500000000002e-05, 7.329200000000258e-05, 7.283300000000131e-05, 7.340200000000019e-05, 7.331899999999877e-05, 7.284699999999741e-05, 7.298600000000058e-05, 7.290299999999916e-05, 7.294400000000187e-05, 7.340299999999966e-05, 7.329199999999911e-05, 7.309700000000113e-05, 7.305499999999895e-05, 7.313899999999984e-05, 7.298600000000058e-05, 7.277799999999904e-05, 7.270899999999719e-05, 7.267999999999858e-05, 7.337500000000052e-05, 7.336100000000095e-05, 7.249999999999965e-05, 7.301399999999972e-05, 7.259800000000011e-05, 7.311099999999723e-05, 7.316699999999898e-05, 7.302799999999929e-05, 7.269500000000109e-05, 7.29309999999983e-05, 7.280599999999818e-05, 7.348600000000108e-05, 7.245900000000041e-05, 7.31110000000007e-05, 7.280500000000217e-05, 7.29300000000023e-05, 7.301399999999972e-05, 7.258300000000106e-05, 7.286100000000045e-05, 7.34309999999988e-05, 7.338900000000009e-05, 7.284800000000036e-05, 7.283400000000079e-05, 7.279199999999861e-05, 7.269500000000109e-05, 7.326399999999997e-05, 7.265300000000238e-05, 7.301399999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.354" endtime="20201030 18:29:32.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.349" endtime="20201030 18:29:32.357"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.361" endtime="20201030 18:29:32.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.359" endtime="20201030 18:29:32.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.358" endtime="20201030 18:29:32.381"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.985" endtime="20201030 18:29:32.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:31.984" endtime="20201030 18:29:32.382"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.390" endtime="20201030 18:29:32.409"></status>
</kw>
<msg timestamp="20201030 18:29:32.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.389" endtime="20201030 18:29:32.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.411" endtime="20201030 18:29:32.413"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.413" endtime="20201030 18:29:32.415"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.386" endtime="20201030 18:29:32.416"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.384" endtime="20201030 18:29:32.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.422" endtime="20201030 18:29:32.709"></status>
</kw>
<msg timestamp="20201030 18:29:32.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.421" endtime="20201030 18:29:32.712"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019620458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.713" endtime="20201030 18:29:32.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.721" endtime="20201030 18:29:32.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.418" endtime="20201030 18:29:32.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.417" endtime="20201030 18:29:32.724"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:32.728" level="INFO">${RESULT} = [{'diff': 7.44309999999998e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.354200000000283e-05}, {'diff': 7.433299999999934e-05}, {'diff': 7.419399999999965e-05}, {'diff': 7.379100000000013e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:32.724" endtime="20201030 18:29:32.728"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:32.732" level="INFO">${ACCURACY} = {'diff': [7.44309999999998e-05, 7.384699999999841e-05, 7.354200000000283e-05, 7.433299999999934e-05, 7.419399999999965e-05, 7.379100000000013e-05, 7.412500000000127e-05, 7.409700000000213e-05, 7.37219...</msg>
<status status="PASS" starttime="20201030 18:29:32.729" endtime="20201030 18:29:32.732"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.736" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 18:29:32.735" endtime="20201030 18:29:32.737"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.739" level="INFO">VALUE: [7.44309999999998e-05, 7.384699999999841e-05, 7.354200000000283e-05, 7.433299999999934e-05, 7.419399999999965e-05, 7.379100000000013e-05, 7.412500000000127e-05, 7.409700000000213e-05, 7.372199999999829e-05, 7.447199999999904e-05, 7.35690000000025e-05, 7.384699999999841e-05, 7.405599999999943e-05, 7.386100000000145e-05, 7.405599999999943e-05, 7.376400000000047e-05, 7.432000000000272e-05, 7.422199999999879e-05, 7.383300000000231e-05, 7.358300000000206e-05, 7.401400000000072e-05, 7.420800000000269e-05, 7.354199999999936e-05, 7.438900000000109e-05, 7.359700000000163e-05, 7.384700000000188e-05, 7.39309999999993e-05, 7.390300000000016e-05, 7.411099999999823e-05, 7.440300000000066e-05, 7.40829999999991e-05, 7.383300000000231e-05, 7.394499999999887e-05, 7.355499999999945e-05, 7.447299999999851e-05, 7.35560000000024e-05, 7.419500000000259e-05, 7.395899999999844e-05, 7.423600000000183e-05, 7.409700000000213e-05, 7.445899999999894e-05, 7.379100000000013e-05, 7.384799999999789e-05, 7.416600000000051e-05, 7.433299999999934e-05, 7.380500000000317e-05, 7.391600000000026e-05, 7.373600000000133e-05, 7.384700000000188e-05, 7.397199999999854e-05]</msg>
<status status="PASS" starttime="20201030 18:29:32.738" endtime="20201030 18:29:32.744"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.733" endtime="20201030 18:29:32.745"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:32.749" endtime="20201030 18:29:32.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.747" endtime="20201030 18:29:32.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.746" endtime="20201030 18:29:32.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.383" endtime="20201030 18:29:32.769"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.382" endtime="20201030 18:29:32.770"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.778" endtime="20201030 18:29:32.798"></status>
</kw>
<msg timestamp="20201030 18:29:32.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.777" endtime="20201030 18:29:32.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:32.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:32.799" endtime="20201030 18:29:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.802" endtime="20201030 18:29:32.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.774" endtime="20201030 18:29:32.804"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.772" endtime="20201030 18:29:32.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:32.811" endtime="20201030 18:29:33.097"></status>
</kw>
<msg timestamp="20201030 18:29:33.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:32.809" endtime="20201030 18:29:33.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020453819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020528681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.101" endtime="20201030 18:29:33.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.109" endtime="20201030 18:29:33.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.806" endtime="20201030 18:29:33.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.805" endtime="20201030 18:29:33.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.115" level="INFO">${RESULT} = [{'diff': 7.486199999999846e-05}, {'diff': 7.465199999999797e-05}, {'diff': 7.47500000000019e-05}, {'diff': 7.459699999999916e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.530600000000068e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:33.112" endtime="20201030 18:29:33.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.120" level="INFO">${ACCURACY} = {'diff': [7.486199999999846e-05, 7.465199999999797e-05, 7.47500000000019e-05, 7.459699999999916e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.540300000000166e-05, 7.469500000000309e-05, 7.46939...</msg>
<status status="PASS" starttime="20201030 18:29:33.116" endtime="20201030 18:29:33.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.124" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.123" endtime="20201030 18:29:33.124"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.126" level="INFO">VALUE: [7.486199999999846e-05, 7.465199999999797e-05, 7.47500000000019e-05, 7.459699999999916e-05, 7.533300000000034e-05, 7.530600000000068e-05, 7.540300000000166e-05, 7.469500000000309e-05, 7.469399999999668e-05, 7.469499999999962e-05, 7.512500000000227e-05, 7.4763999999998e-05, 7.486099999999898e-05, 7.472199999999929e-05, 7.538899999999862e-05, 7.505600000000043e-05, 7.505500000000095e-05, 7.53050000000012e-05, 7.462500000000177e-05, 7.538899999999862e-05, 7.474999999999843e-05, 7.480600000000018e-05, 7.518100000000055e-05, 7.529200000000111e-05, 7.479200000000061e-05, 7.544500000000037e-05, 7.501300000000224e-05, 7.520899999999969e-05, 7.533399999999982e-05, 7.520800000000022e-05, 7.536099999999948e-05, 7.466699999999701e-05, 7.526400000000197e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.524999999999893e-05, 7.482000000000322e-05, 7.533399999999982e-05, 7.459699999999916e-05, 7.505600000000043e-05, 7.498599999999911e-05, 7.533300000000034e-05, 7.470799999999972e-05, 7.518000000000108e-05, 7.505499999999748e-05, 7.523599999999936e-05, 7.463900000000134e-05, 7.52639999999985e-05, 7.547200000000004e-05, 7.470899999999919e-05]</msg>
<status status="PASS" starttime="20201030 18:29:33.125" endtime="20201030 18:29:33.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.120" endtime="20201030 18:29:33.129"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.132" endtime="20201030 18:29:33.152"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.131" endtime="20201030 18:29:33.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.130" endtime="20201030 18:29:33.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.770" endtime="20201030 18:29:33.153"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:32.770" endtime="20201030 18:29:33.153"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.162" endtime="20201030 18:29:33.180"></status>
</kw>
<msg timestamp="20201030 18:29:33.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.160" endtime="20201030 18:29:33.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.183" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.181" endtime="20201030 18:29:33.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.184" endtime="20201030 18:29:33.185"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.158" endtime="20201030 18:29:33.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.156" endtime="20201030 18:29:33.186"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.193" endtime="20201030 18:29:33.478"></status>
</kw>
<msg timestamp="20201030 18:29:33.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:33.191" endtime="20201030 18:29:33.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.490" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201065, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020182611, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 18:29:33.483" endtime="20201030 18:29:33.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.491" endtime="20201030 18:29:33.492"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.189" endtime="20201030 18:29:33.493"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.187" endtime="20201030 18:29:33.493"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.497" level="INFO">${RESULT} = [{'diff': 7.611100000000023e-05}, {'diff': 7.622200000000079e-05}, {'diff': 7.618099999999808e-05}, {'diff': 7.641699999999876e-05}, {'diff': 7.615299999999894e-05}, {'diff': 7.63189999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:33.494" endtime="20201030 18:29:33.498"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.505" level="INFO">${ACCURACY} = {'diff': [7.611100000000023e-05, 7.622200000000079e-05, 7.618099999999808e-05, 7.641699999999876e-05, 7.615299999999894e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.63189999999983e-05, 7.561099...</msg>
<status status="PASS" starttime="20201030 18:29:33.498" endtime="20201030 18:29:33.505"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.509" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.508" endtime="20201030 18:29:33.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.512" level="INFO">VALUE: [7.611100000000023e-05, 7.622200000000079e-05, 7.618099999999808e-05, 7.641699999999876e-05, 7.615299999999894e-05, 7.63189999999983e-05, 7.599999999999968e-05, 7.63189999999983e-05, 7.561099999999973e-05, 7.647199999999757e-05, 7.611099999999676e-05, 7.569400000000115e-05, 7.570800000000072e-05, 7.622200000000079e-05, 7.56249999999993e-05, 7.559700000000016e-05, 7.615300000000241e-05, 7.574999999999943e-05, 7.611199999999971e-05, 7.633400000000082e-05, 7.551299999999928e-05, 7.624999999999993e-05, 7.584700000000041e-05, 7.618100000000155e-05, 7.615299999999894e-05, 7.572200000000029e-05, 7.599999999999968e-05, 7.565299999999844e-05, 7.651399999999975e-05, 7.633400000000082e-05, 7.638899999999962e-05, 7.576400000000247e-05, 7.644500000000137e-05, 7.581900000000127e-05, 7.563899999999887e-05, 7.642999999999886e-05, 7.579099999999866e-05, 7.647200000000104e-05, 7.587499999999955e-05, 7.623600000000036e-05, 7.622199999999732e-05, 7.569500000000062e-05, 7.616700000000198e-05, 7.636100000000048e-05, 7.606900000000152e-05, 7.647300000000051e-05, 7.605499999999848e-05, 7.592999999999836e-05, 7.59440000000014e-05, 7.637500000000005e-05]</msg>
<status status="PASS" starttime="20201030 18:29:33.510" endtime="20201030 18:29:33.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.506" endtime="20201030 18:29:33.513"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.517" endtime="20201030 18:29:33.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.515" endtime="20201030 18:29:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.514" endtime="20201030 18:29:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.154" endtime="20201030 18:29:33.537"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.154" endtime="20201030 18:29:33.538"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.546" endtime="20201030 18:29:33.564"></status>
</kw>
<msg timestamp="20201030 18:29:33.564" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.545" endtime="20201030 18:29:33.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.565" endtime="20201030 18:29:33.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.568" endtime="20201030 18:29:33.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.542" endtime="20201030 18:29:33.570"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.540" endtime="20201030 18:29:33.571"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.577" endtime="20201030 18:29:33.865"></status>
</kw>
<msg timestamp="20201030 18:29:33.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.575" endtime="20201030 18:29:33.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019553611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019631042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.869" endtime="20201030 18:29:33.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.877" endtime="20201030 18:29:33.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.573" endtime="20201030 18:29:33.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.571" endtime="20201030 18:29:33.880"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:33.884" level="INFO">${RESULT} = [{'diff': 7.74310000000028e-05}, {'diff': 7.734799999999792e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.741699999999976e-05}, {'diff': 7.730499999999974e-05}, {'diff': 7.713900000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:33.881" endtime="20201030 18:29:33.884"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:33.888" level="INFO">${ACCURACY} = {'diff': [7.74310000000028e-05, 7.734799999999792e-05, 7.716699999999951e-05, 7.741699999999976e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.709700000000166e-05, 7.665299999999944e-05, 7.65279...</msg>
<status status="PASS" starttime="20201030 18:29:33.885" endtime="20201030 18:29:33.888"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.892" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 18:29:33.891" endtime="20201030 18:29:33.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.895" level="INFO">VALUE: [7.74310000000028e-05, 7.734799999999792e-05, 7.716699999999951e-05, 7.741699999999976e-05, 7.730499999999974e-05, 7.713900000000037e-05, 7.709700000000166e-05, 7.665299999999944e-05, 7.652799999999932e-05, 7.704199999999939e-05, 7.72640000000005e-05, 7.669500000000162e-05, 7.722300000000126e-05, 7.665300000000291e-05, 7.749999999999771e-05, 7.730499999999974e-05, 7.702700000000035e-05, 7.672200000000129e-05, 7.69029999999997e-05, 7.741699999999976e-05, 7.69579999999985e-05, 7.668099999999858e-05, 7.700000000000068e-05, 7.686100000000098e-05, 7.661100000000073e-05, 7.718100000000255e-05, 7.651399999999975e-05, 7.715299999999994e-05, 7.705600000000243e-05, 7.684699999999794e-05, 7.713900000000037e-05, 7.711100000000123e-05, 7.7457999999999e-05, 7.687499999999708e-05, 7.698600000000111e-05, 7.65830000000016e-05, 7.670799999999825e-05, 7.66250000000003e-05, 7.729199999999964e-05, 7.686100000000098e-05, 7.698599999999764e-05, 7.706899999999905e-05, 7.701400000000025e-05, 7.66250000000003e-05, 7.717999999999961e-05, 7.74030000000002e-05, 7.65969999999977e-05, 7.738899999999715e-05, 7.698600000000111e-05, 7.656999999999803e-05]</msg>
<status status="PASS" starttime="20201030 18:29:33.893" endtime="20201030 18:29:33.896"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.889" endtime="20201030 18:29:33.896"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:33.900" endtime="20201030 18:29:33.919"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.898" endtime="20201030 18:29:33.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.897" endtime="20201030 18:29:33.920"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.539" endtime="20201030 18:29:33.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.538" endtime="20201030 18:29:33.921"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.930" endtime="20201030 18:29:33.948"></status>
</kw>
<msg timestamp="20201030 18:29:33.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.928" endtime="20201030 18:29:33.949"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:33.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:33.950" endtime="20201030 18:29:33.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.952" endtime="20201030 18:29:33.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.925" endtime="20201030 18:29:33.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.923" endtime="20201030 18:29:33.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:33.962" endtime="20201030 18:29:34.248"></status>
</kw>
<msg timestamp="20201030 18:29:34.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:33.961" endtime="20201030 18:29:34.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020852056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.252" endtime="20201030 18:29:34.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.264" endtime="20201030 18:29:34.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.958" endtime="20201030 18:29:34.269"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.956" endtime="20201030 18:29:34.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.278" level="INFO">${RESULT} = [{'diff': 7.802800000000082e-05}, {'diff': 7.820899999999922e-05}, {'diff': 7.833299999999987e-05}, {'diff': 7.768000000000011e-05}, {'diff': 7.794399999999993e-05}, {'diff': 7.780500000000024e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:34.271" endtime="20201030 18:29:34.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.287" level="INFO">${ACCURACY} = {'diff': [7.802800000000082e-05, 7.820899999999922e-05, 7.833299999999987e-05, 7.768000000000011e-05, 7.794399999999993e-05, 7.780500000000024e-05, 7.786100000000198e-05, 7.843100000000033e-05, 7.8028...</msg>
<status status="PASS" starttime="20201030 18:29:34.280" endtime="20201030 18:29:34.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.296" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.294" endtime="20201030 18:29:34.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.301" level="INFO">VALUE: [7.802800000000082e-05, 7.820899999999922e-05, 7.833299999999987e-05, 7.768000000000011e-05, 7.794399999999993e-05, 7.780500000000024e-05, 7.786100000000198e-05, 7.843100000000033e-05, 7.802800000000082e-05, 7.769499999999915e-05, 7.7764000000001e-05, 7.768099999999958e-05, 7.82770000000016e-05, 7.763900000000087e-05, 7.761200000000121e-05, 7.834699999999944e-05, 7.809700000000266e-05, 7.791600000000079e-05, 7.823600000000236e-05, 7.836099999999901e-05, 7.752800000000032e-05, 7.829200000000064e-05, 7.769499999999915e-05, 7.848599999999914e-05, 7.800000000000168e-05, 7.76250000000013e-05, 7.762499999999783e-05, 7.783299999999937e-05, 7.788799999999818e-05, 7.758299999999912e-05, 7.833299999999987e-05, 7.84030000000012e-05, 7.806900000000006e-05, 7.786100000000198e-05, 7.834699999999944e-05, 7.81250000000018e-05, 7.847199999999957e-05, 7.793099999999983e-05, 7.786199999999799e-05, 7.791700000000026e-05, 7.759700000000216e-05, 7.761099999999826e-05, 7.830600000000021e-05, 7.851400000000175e-05, 7.843100000000033e-05, 7.801399999999778e-05, 7.805599999999996e-05, 7.806900000000006e-05, 7.82779999999976e-05, 7.830600000000021e-05]</msg>
<status status="PASS" starttime="20201030 18:29:34.299" endtime="20201030 18:29:34.304"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.289" endtime="20201030 18:29:34.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.313" endtime="20201030 18:29:34.335"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.310" endtime="20201030 18:29:34.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.308" endtime="20201030 18:29:34.337"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.922" endtime="20201030 18:29:34.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:33.921" endtime="20201030 18:29:34.338"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.356" endtime="20201030 18:29:34.376"></status>
</kw>
<msg timestamp="20201030 18:29:34.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.353" endtime="20201030 18:29:34.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.378" endtime="20201030 18:29:34.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.380" endtime="20201030 18:29:34.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.348" endtime="20201030 18:29:34.382"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.343" endtime="20201030 18:29:34.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.389" endtime="20201030 18:29:34.675"></status>
</kw>
<msg timestamp="20201030 18:29:34.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033308389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033387722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.388" endtime="20201030 18:29:34.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.033308389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.033387722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.679" endtime="20201030 18:29:34.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.688" endtime="20201030 18:29:34.689"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.385" endtime="20201030 18:29:34.690"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.383" endtime="20201030 18:29:34.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:34.694" level="INFO">${RESULT} = [{'diff': 7.933300000000088e-05}, {'diff': 7.872200000000329e-05}, {'diff': 7.888899999999865e-05}, {'diff': 7.86519999999985e-05}, {'diff': 7.862499999999883e-05}, {'diff': 7.936100000000001e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:34.691" endtime="20201030 18:29:34.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:34.699" level="INFO">${ACCURACY} = {'diff': [7.933300000000088e-05, 7.872200000000329e-05, 7.888899999999865e-05, 7.86519999999985e-05, 7.862499999999883e-05, 7.936100000000001e-05, 7.875000000000243e-05, 7.897200000000354e-05, 7.90420...</msg>
<status status="PASS" starttime="20201030 18:29:34.695" endtime="20201030 18:29:34.700"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.704" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 18:29:34.703" endtime="20201030 18:29:34.704"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.706" level="INFO">VALUE: [7.933300000000088e-05, 7.872200000000329e-05, 7.888899999999865e-05, 7.86519999999985e-05, 7.862499999999883e-05, 7.936100000000001e-05, 7.875000000000243e-05, 7.897200000000354e-05, 7.904200000000139e-05, 7.949999999999624e-05, 7.912499999999933e-05, 7.899999999999574e-05, 7.876299999999559e-05, 7.90970000000002e-05, 7.917999999999814e-05, 7.91389999999989e-05, 7.926399999999556e-05, 7.933300000000088e-05, 7.901399999999531e-05, 7.877799999999463e-05, 7.89169999999978e-05, 7.934700000000044e-05, 7.869499999999668e-05, 7.852800000000132e-05, 7.88049999999943e-05, 7.920899999999675e-05, 7.901300000000278e-05, 7.902700000000235e-05, 7.922200000000379e-05, 7.88190000000008e-05, 7.911099999999976e-05, 7.905499999999455e-05, 7.886100000000645e-05, 7.92640000000025e-05, 7.894500000000387e-05, 7.9458999999997e-05, 7.855500000000099e-05, 7.92919999999947e-05, 7.8764000000002e-05, 7.875000000000243e-05, 7.86519999999985e-05, 7.873599999999592e-05, 7.877799999999463e-05, 7.904199999999445e-05, 7.858300000000012e-05, 7.927800000000207e-05, 7.897200000000354e-05, 7.932000000000078e-05, 7.851399999999481e-05, 7.886099999999951e-05]</msg>
<status status="PASS" starttime="20201030 18:29:34.705" endtime="20201030 18:29:34.707"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.700" endtime="20201030 18:29:34.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:34.711" endtime="20201030 18:29:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.710" endtime="20201030 18:29:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.708" endtime="20201030 18:29:34.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.340" endtime="20201030 18:29:34.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.339" endtime="20201030 18:29:34.732"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.741" endtime="20201030 18:29:34.758"></status>
</kw>
<msg timestamp="20201030 18:29:34.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.739" endtime="20201030 18:29:34.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:34.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:34.760" endtime="20201030 18:29:34.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.762" endtime="20201030 18:29:34.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.736" endtime="20201030 18:29:34.764"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.734" endtime="20201030 18:29:34.765"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:34.771" endtime="20201030 18:29:35.058"></status>
</kw>
<msg timestamp="20201030 18:29:35.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:34.770" endtime="20201030 18:29:35.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019649694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.062" endtime="20201030 18:29:35.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.071" endtime="20201030 18:29:35.072"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.767" endtime="20201030 18:29:35.073"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.765" endtime="20201030 18:29:35.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.077" level="INFO">${RESULT} = [{'diff': 7.96519999999995e-05}, {'diff': 8.045799999999853e-05}, {'diff': 8.048599999999767e-05}, {'diff': 7.952799999999885e-05}, {'diff': 7.992999999999889e-05}, {'diff': 8.009699999999773e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:35.074" endtime="20201030 18:29:35.077"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.081" level="INFO">${ACCURACY} = {'diff': [7.96519999999995e-05, 8.045799999999853e-05, 8.048599999999767e-05, 7.952799999999885e-05, 7.992999999999889e-05, 8.009699999999773e-05, 8.018099999999861e-05, 8.020799999999828e-05, 8.04169...</msg>
<status status="PASS" starttime="20201030 18:29:35.078" endtime="20201030 18:29:35.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.086" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.085" endtime="20201030 18:29:35.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.089" level="INFO">VALUE: [7.96519999999995e-05, 8.045799999999853e-05, 8.048599999999767e-05, 7.952799999999885e-05, 7.992999999999889e-05, 8.009699999999773e-05, 8.018099999999861e-05, 8.020799999999828e-05, 8.04169999999993e-05, 8.006999999999806e-05, 7.965299999999897e-05, 7.991599999999932e-05, 7.979100000000267e-05, 8.016599999999957e-05, 7.988899999999965e-05, 8.009699999999773e-05, 7.96389999999994e-05, 8.009699999999773e-05, 8.030599999999874e-05, 7.973600000000039e-05, 7.96389999999994e-05, 7.97779999999991e-05, 8.038800000000068e-05, 7.970800000000125e-05, 8.033400000000135e-05, 7.966599999999907e-05, 8.047200000000157e-05, 7.980500000000224e-05, 8.00970000000012e-05, 8.030600000000221e-05, 7.994400000000193e-05, 7.987500000000008e-05, 7.955599999999799e-05, 7.997200000000107e-05, 8.050000000000071e-05, 8.038900000000015e-05, 8.015299999999947e-05, 8.034700000000145e-05, 8.027700000000013e-05, 7.991599999999932e-05, 7.991599999999932e-05, 8.009699999999773e-05, 8.037500000000058e-05, 7.98190000000018e-05, 7.99580000000015e-05, 8.049999999999724e-05, 7.974999999999996e-05, 7.965299999999897e-05, 7.990299999999922e-05, 7.954100000000242e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.087" endtime="20201030 18:29:35.089"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.082" endtime="20201030 18:29:35.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.093" endtime="20201030 18:29:35.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.092" endtime="20201030 18:29:35.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.091" endtime="20201030 18:29:35.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.733" endtime="20201030 18:29:35.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:34.732" endtime="20201030 18:29:35.114"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.123" endtime="20201030 18:29:35.143"></status>
</kw>
<msg timestamp="20201030 18:29:35.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.121" endtime="20201030 18:29:35.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.144" endtime="20201030 18:29:35.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.147" endtime="20201030 18:29:35.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.119" endtime="20201030 18:29:35.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.117" endtime="20201030 18:29:35.150"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.156" endtime="20201030 18:29:35.441"></status>
</kw>
<msg timestamp="20201030 18:29:35.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.154" endtime="20201030 18:29:35.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021866736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.445" endtime="20201030 18:29:35.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.454" endtime="20201030 18:29:35.455"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.152" endtime="20201030 18:29:35.456"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.150" endtime="20201030 18:29:35.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.460" level="INFO">${RESULT} = [{'diff': 8.105500000000002e-05}, {'diff': 8.054199999999942e-05}, {'diff': 8.125000000000146e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.101400000000078e-05}, {'diff': 8.086099999999805e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:35.457" endtime="20201030 18:29:35.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.465" level="INFO">${ACCURACY} = {'diff': [8.105500000000002e-05, 8.054199999999942e-05, 8.125000000000146e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.086099999999805e-05, 8.070799999999878e-05, 8.102800000000035e-05, 8.1167...</msg>
<status status="PASS" starttime="20201030 18:29:35.461" endtime="20201030 18:29:35.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.469" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.468" endtime="20201030 18:29:35.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.472" level="INFO">VALUE: [8.105500000000002e-05, 8.054199999999942e-05, 8.125000000000146e-05, 8.101400000000078e-05, 8.101400000000078e-05, 8.086099999999805e-05, 8.070799999999878e-05, 8.102800000000035e-05, 8.116700000000004e-05, 8.083300000000238e-05, 8.058299999999866e-05, 8.058299999999866e-05, 8.124999999999799e-05, 8.097200000000207e-05, 8.062499999999737e-05, 8.099999999999774e-05, 8.093099999999936e-05, 8.148700000000161e-05, 8.076399999999706e-05, 8.084700000000195e-05, 8.123600000000189e-05, 8.051400000000028e-05, 8.14719999999991e-05, 8.075000000000096e-05, 8.084700000000195e-05, 8.129200000000017e-05, 8.082000000000228e-05, 8.090300000000022e-05, 8.120899999999875e-05, 8.093099999999936e-05, 8.062500000000083e-05, 8.125000000000146e-05, 8.068000000000311e-05, 8.105500000000002e-05, 8.052799999999985e-05, 8.118000000000014e-05, 8.097200000000207e-05, 8.125000000000146e-05, 8.073600000000139e-05, 8.11109999999983e-05, 8.079199999999967e-05, 8.07230000000013e-05, 8.136100000000202e-05, 8.092999999999989e-05, 8.061100000000126e-05, 8.122199999999885e-05, 8.07910000000002e-05, 8.112500000000133e-05, 8.08329999999989e-05, 8.102800000000035e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.470" endtime="20201030 18:29:35.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.465" endtime="20201030 18:29:35.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.478" endtime="20201030 18:29:35.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.476" endtime="20201030 18:29:35.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.475" endtime="20201030 18:29:35.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.115" endtime="20201030 18:29:35.498"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.115" endtime="20201030 18:29:35.498"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.507" endtime="20201030 18:29:35.526"></status>
</kw>
<msg timestamp="20201030 18:29:35.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.506" endtime="20201030 18:29:35.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.528" endtime="20201030 18:29:35.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.530" endtime="20201030 18:29:35.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.503" endtime="20201030 18:29:35.532"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.501" endtime="20201030 18:29:35.533"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.539" endtime="20201030 18:29:35.823"></status>
</kw>
<msg timestamp="20201030 18:29:35.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:35.538" endtime="20201030 18:29:35.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019578444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01966, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:35.828" endtime="20201030 18:29:35.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.836" endtime="20201030 18:29:35.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.535" endtime="20201030 18:29:35.838"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.533" endtime="20201030 18:29:35.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:35.842" level="INFO">${RESULT} = [{'diff': 8.155599999999999e-05}, {'diff': 8.168100000000011e-05}, {'diff': 8.149999999999824e-05}, {'diff': 8.1458999999999e-05}, {'diff': 8.198599999999917e-05}, {'diff': 8.172199999999935e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:35.839" endtime="20201030 18:29:35.842"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:35.847" level="INFO">${ACCURACY} = {'diff': [8.155599999999999e-05, 8.168100000000011e-05, 8.149999999999824e-05, 8.1458999999999e-05, 8.198599999999917e-05, 8.172199999999935e-05, 8.23330000000004e-05, 8.20269999999984e-05, 8.20140000...</msg>
<status status="PASS" starttime="20201030 18:29:35.843" endtime="20201030 18:29:35.848"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.852" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 18:29:35.851" endtime="20201030 18:29:35.852"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.854" level="INFO">VALUE: [8.155599999999999e-05, 8.168100000000011e-05, 8.149999999999824e-05, 8.1458999999999e-05, 8.198599999999917e-05, 8.172199999999935e-05, 8.23330000000004e-05, 8.20269999999984e-05, 8.201400000000178e-05, 8.175000000000196e-05, 8.240300000000172e-05, 8.208399999999963e-05, 8.149999999999824e-05, 8.212500000000234e-05, 8.173600000000239e-05, 8.17369999999984e-05, 8.20130000000023e-05, 8.20979999999992e-05, 8.218000000000114e-05, 8.16659999999976e-05, 8.166600000000107e-05, 8.226400000000203e-05, 8.218100000000061e-05, 8.232000000000031e-05, 8.166699999999708e-05, 8.236099999999955e-05, 8.225000000000246e-05, 8.243000000000139e-05, 8.219500000000018e-05, 8.236099999999955e-05, 8.209699999999973e-05, 8.223599999999942e-05, 8.244400000000096e-05, 8.2152999999998e-05, 8.250000000000271e-05, 8.208300000000016e-05, 8.187500000000208e-05, 8.175000000000196e-05, 8.17230000000023e-05, 8.232000000000031e-05, 8.220800000000028e-05, 8.158299999999966e-05, 8.238899999999869e-05, 8.227700000000213e-05, 8.170799999999978e-05, 8.191599999999785e-05, 8.204200000000092e-05, 8.154200000000042e-05, 8.166700000000054e-05, 8.218099999999715e-05]</msg>
<status status="PASS" starttime="20201030 18:29:35.853" endtime="20201030 18:29:35.855"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.848" endtime="20201030 18:29:35.855"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:35.859" endtime="20201030 18:29:35.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.858" endtime="20201030 18:29:35.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.856" endtime="20201030 18:29:35.879"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.499" endtime="20201030 18:29:35.880"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.499" endtime="20201030 18:29:35.880"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.889" endtime="20201030 18:29:35.907"></status>
</kw>
<msg timestamp="20201030 18:29:35.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.887" endtime="20201030 18:29:35.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:35.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:35.909" endtime="20201030 18:29:35.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.911" endtime="20201030 18:29:35.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.884" endtime="20201030 18:29:35.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.882" endtime="20201030 18:29:35.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:35.920" endtime="20201030 18:29:36.206"></status>
</kw>
<msg timestamp="20201030 18:29:36.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:35.919" endtime="20201030 18:29:36.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019564417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.210" endtime="20201030 18:29:36.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.219" endtime="20201030 18:29:36.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.916" endtime="20201030 18:29:36.221"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.914" endtime="20201030 18:29:36.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.225" level="INFO">${RESULT} = [{'diff': 8.322200000000085e-05}, {'diff': 8.276399999999906e-05}, {'diff': 8.273599999999992e-05}, {'diff': 8.290199999999928e-05}, {'diff': 8.336200000000002e-05}, {'diff': 8.315199999999953e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:36.222" endtime="20201030 18:29:36.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.230" level="INFO">${ACCURACY} = {'diff': [8.322200000000085e-05, 8.276399999999906e-05, 8.273599999999992e-05, 8.290199999999928e-05, 8.336200000000002e-05, 8.315199999999953e-05, 8.345800000000153e-05, 8.258300000000066e-05, 8.2874...</msg>
<status status="PASS" starttime="20201030 18:29:36.226" endtime="20201030 18:29:36.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.234" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.233" endtime="20201030 18:29:36.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.236" level="INFO">VALUE: [8.322200000000085e-05, 8.276399999999906e-05, 8.273599999999992e-05, 8.290199999999928e-05, 8.336200000000002e-05, 8.315199999999953e-05, 8.345800000000153e-05, 8.258300000000066e-05, 8.287499999999962e-05, 8.343000000000239e-05, 8.315300000000247e-05, 8.295800000000103e-05, 8.326399999999956e-05, 8.331999999999784e-05, 8.263899999999894e-05, 8.351399999999981e-05, 8.256900000000109e-05, 8.341600000000282e-05, 8.26520000000025e-05, 8.273599999999992e-05, 8.301399999999931e-05, 8.266699999999808e-05, 8.308300000000116e-05, 8.324999999999999e-05, 8.319500000000118e-05, 8.280600000000124e-05, 8.290199999999928e-05, 8.273599999999992e-05, 8.272299999999982e-05, 8.341599999999935e-05, 8.255499999999805e-05, 8.323600000000042e-05, 8.252799999999838e-05, 8.26390000000024e-05, 8.342999999999892e-05, 8.3152999999999e-05, 8.29170000000018e-05, 8.319499999999772e-05, 8.350000000000024e-05, 8.255600000000099e-05, 8.341599999999935e-05, 8.284700000000048e-05, 8.287500000000309e-05, 8.324999999999999e-05, 8.26109999999998e-05, 8.316699999999858e-05, 8.322200000000085e-05, 8.34720000000011e-05, 8.269400000000121e-05, 8.326399999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:29:36.235" endtime="20201030 18:29:36.237"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.230" endtime="20201030 18:29:36.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.241" endtime="20201030 18:29:36.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.240" endtime="20201030 18:29:36.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.239" endtime="20201030 18:29:36.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.881" endtime="20201030 18:29:36.262"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:35.880" endtime="20201030 18:29:36.262"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.271" endtime="20201030 18:29:36.291"></status>
</kw>
<msg timestamp="20201030 18:29:36.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.269" endtime="20201030 18:29:36.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.293" endtime="20201030 18:29:36.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.295" endtime="20201030 18:29:36.297"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.267" endtime="20201030 18:29:36.298"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.265" endtime="20201030 18:29:36.298"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.304" endtime="20201030 18:29:36.590"></status>
</kw>
<msg timestamp="20201030 18:29:36.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.303" endtime="20201030 18:29:36.593"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021338153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.594" endtime="20201030 18:29:36.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.602" endtime="20201030 18:29:36.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.300" endtime="20201030 18:29:36.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.299" endtime="20201030 18:29:36.605"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.608" level="INFO">${RESULT} = [{'diff': 8.401400000000031e-05}, {'diff': 8.44720000000021e-05}, {'diff': 8.405599999999902e-05}, {'diff': 8.425000000000099e-05}, {'diff': 8.38330000000019e-05}, {'diff': 8.397199999999813e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:36.605" endtime="20201030 18:29:36.609"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.613" level="INFO">${ACCURACY} = {'diff': [8.401400000000031e-05, 8.44720000000021e-05, 8.405599999999902e-05, 8.425000000000099e-05, 8.38330000000019e-05, 8.397199999999813e-05, 8.392999999999942e-05, 8.387500000000062e-05, 8.395799...</msg>
<status status="PASS" starttime="20201030 18:29:36.609" endtime="20201030 18:29:36.613"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.617" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 18:29:36.616" endtime="20201030 18:29:36.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.619" level="INFO">VALUE: [8.401400000000031e-05, 8.44720000000021e-05, 8.405599999999902e-05, 8.425000000000099e-05, 8.38330000000019e-05, 8.397199999999813e-05, 8.392999999999942e-05, 8.387500000000062e-05, 8.395799999999856e-05, 8.375000000000049e-05, 8.354199999999895e-05, 8.36529999999995e-05, 8.433400000000188e-05, 8.354200000000242e-05, 8.426400000000056e-05, 8.367999999999917e-05, 8.392999999999942e-05, 8.384700000000148e-05, 8.408300000000216e-05, 8.351400000000328e-05, 8.418100000000261e-05, 8.395799999999856e-05, 8.419499999999872e-05, 8.373599999999745e-05, 8.368099999999865e-05, 8.386200000000052e-05, 8.438800000000121e-05, 8.447199999999863e-05, 8.426400000000056e-05, 8.43049999999998e-05, 8.375000000000049e-05, 8.44309999999994e-05, 8.387500000000062e-05, 8.412500000000087e-05, 8.409699999999826e-05, 8.381999999999834e-05, 8.426300000000109e-05, 8.384700000000148e-05, 8.369400000000221e-05, 8.36249999999969e-05, 8.425000000000099e-05, 8.400000000000074e-05, 8.352799999999938e-05, 8.383400000000138e-05, 8.393100000000236e-05, 8.36110000000008e-05, 8.436099999999808e-05, 8.434800000000145e-05, 8.365200000000003e-05, 8.392999999999942e-05]</msg>
<status status="PASS" starttime="20201030 18:29:36.618" endtime="20201030 18:29:36.621"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.613" endtime="20201030 18:29:36.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:36.625" endtime="20201030 18:29:36.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.624" endtime="20201030 18:29:36.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.623" endtime="20201030 18:29:36.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.263" endtime="20201030 18:29:36.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.262" endtime="20201030 18:29:36.646"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.655" endtime="20201030 18:29:36.673"></status>
</kw>
<msg timestamp="20201030 18:29:36.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.653" endtime="20201030 18:29:36.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:36.675" endtime="20201030 18:29:36.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.677" endtime="20201030 18:29:36.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.651" endtime="20201030 18:29:36.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.649" endtime="20201030 18:29:36.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.686" endtime="20201030 18:29:36.970"></status>
</kw>
<msg timestamp="20201030 18:29:36.973" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.685" endtime="20201030 18:29:36.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:36.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019486319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019571556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:36.974" endtime="20201030 18:29:36.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:36.983" endtime="20201030 18:29:36.984"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.682" endtime="20201030 18:29:36.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.680" endtime="20201030 18:29:36.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:36.989" level="INFO">${RESULT} = [{'diff': 8.52370000000019e-05}, {'diff': 8.475000000000149e-05}, {'diff': 8.469399999999974e-05}, {'diff': 8.46110000000018e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.520799999999981e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:36.986" endtime="20201030 18:29:36.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:36.997" level="INFO">${ACCURACY} = {'diff': [8.52370000000019e-05, 8.475000000000149e-05, 8.469399999999974e-05, 8.46110000000018e-05, 8.501400000000131e-05, 8.520799999999981e-05, 8.451400000000081e-05, 8.51249999999984e-05, 8.5374999...</msg>
<status status="PASS" starttime="20201030 18:29:36.990" endtime="20201030 18:29:36.997"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.001" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.000" endtime="20201030 18:29:37.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.004" level="INFO">VALUE: [8.52370000000019e-05, 8.475000000000149e-05, 8.469399999999974e-05, 8.46110000000018e-05, 8.501400000000131e-05, 8.520799999999981e-05, 8.451400000000081e-05, 8.51249999999984e-05, 8.537499999999865e-05, 8.459699999999876e-05, 8.461099999999833e-05, 8.470899999999879e-05, 8.472300000000182e-05, 8.469499999999922e-05, 8.476400000000106e-05, 8.520799999999981e-05, 8.476400000000106e-05, 8.487500000000162e-05, 8.473599999999845e-05, 8.463900000000094e-05, 8.473599999999845e-05, 8.504200000000045e-05, 8.533400000000288e-05, 8.544499999999997e-05, 8.476399999999759e-05, 8.477800000000063e-05, 8.505499999999708e-05, 8.501399999999784e-05, 8.523600000000242e-05, 8.474999999999802e-05, 8.455500000000005e-05, 8.529199999999723e-05, 8.520799999999981e-05, 8.54310000000004e-05, 8.501400000000131e-05, 8.451400000000081e-05, 8.488900000000119e-05, 8.519400000000024e-05, 8.465200000000103e-05, 8.515299999999754e-05, 8.547199999999963e-05, 8.469399999999974e-05, 8.486099999999858e-05, 8.488900000000119e-05, 8.504200000000045e-05, 8.513799999999849e-05, 8.508299999999969e-05, 8.505600000000002e-05, 8.524999999999852e-05, 8.519400000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.003" endtime="20201030 18:29:37.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.998" endtime="20201030 18:29:37.005"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.009" endtime="20201030 18:29:37.028"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.007" endtime="20201030 18:29:37.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.006" endtime="20201030 18:29:37.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.647" endtime="20201030 18:29:37.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:36.647" endtime="20201030 18:29:37.030"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.038" endtime="20201030 18:29:37.058"></status>
</kw>
<msg timestamp="20201030 18:29:37.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.037" endtime="20201030 18:29:37.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.059" endtime="20201030 18:29:37.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.062" endtime="20201030 18:29:37.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.034" endtime="20201030 18:29:37.064"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.032" endtime="20201030 18:29:37.064"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.070" endtime="20201030 18:29:37.357"></status>
</kw>
<msg timestamp="20201030 18:29:37.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.069" endtime="20201030 18:29:37.360"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020101153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.361" endtime="20201030 18:29:37.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.369" endtime="20201030 18:29:37.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.066" endtime="20201030 18:29:37.371"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.065" endtime="20201030 18:29:37.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.376" level="INFO">${RESULT} = [{'diff': 8.59310000000009e-05}, {'diff': 8.563899999999847e-05}, {'diff': 8.588900000000219e-05}, {'diff': 8.568100000000065e-05}, {'diff': 8.63470000000005e-05}, {'diff': 8.576400000000206e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:37.373" endtime="20201030 18:29:37.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.380" level="INFO">${ACCURACY} = {'diff': [8.59310000000009e-05, 8.563899999999847e-05, 8.588900000000219e-05, 8.568100000000065e-05, 8.63470000000005e-05, 8.576400000000206e-05, 8.62920000000017e-05, 8.652799999999891e-05, 8.5916999...</msg>
<status status="PASS" starttime="20201030 18:29:37.377" endtime="20201030 18:29:37.380"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.384" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.383" endtime="20201030 18:29:37.385"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.387" level="INFO">VALUE: [8.59310000000009e-05, 8.563899999999847e-05, 8.588900000000219e-05, 8.568100000000065e-05, 8.63470000000005e-05, 8.576400000000206e-05, 8.62920000000017e-05, 8.652799999999891e-05, 8.591699999999786e-05, 8.602799999999841e-05, 8.611099999999983e-05, 8.594500000000047e-05, 8.644500000000097e-05, 8.568100000000065e-05, 8.644399999999802e-05, 8.630499999999833e-05, 8.591599999999838e-05, 8.561099999999933e-05, 8.611099999999983e-05, 8.56249999999989e-05, 8.608400000000016e-05, 8.609700000000026e-05, 8.568100000000065e-05, 8.559799999999923e-05, 8.619400000000124e-05, 8.626399999999909e-05, 8.631900000000137e-05, 8.56799999999977e-05, 8.613899999999897e-05, 8.644399999999802e-05, 8.576400000000206e-05, 8.61249999999994e-05, 8.556900000000062e-05, 8.607000000000059e-05, 8.559699999999976e-05, 8.563900000000194e-05, 8.626299999999962e-05, 8.634799999999998e-05, 8.611099999999983e-05, 8.609700000000026e-05, 8.592999999999795e-05, 8.63189999999979e-05, 8.588899999999872e-05, 8.582000000000034e-05, 8.588899999999872e-05, 8.622199999999691e-05, 8.616700000000158e-05, 8.638899999999922e-05, 8.64860000000002e-05, 8.604099999999851e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.386" endtime="20201030 18:29:37.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.381" endtime="20201030 18:29:37.388"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.392" endtime="20201030 18:29:37.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.390" endtime="20201030 18:29:37.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.389" endtime="20201030 18:29:37.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.031" endtime="20201030 18:29:37.413"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.030" endtime="20201030 18:29:37.413"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.421" endtime="20201030 18:29:37.440"></status>
</kw>
<msg timestamp="20201030 18:29:37.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.420" endtime="20201030 18:29:37.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.443" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.442" endtime="20201030 18:29:37.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.445" endtime="20201030 18:29:37.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.417" endtime="20201030 18:29:37.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.415" endtime="20201030 18:29:37.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.454" endtime="20201030 18:29:37.740"></status>
</kw>
<msg timestamp="20201030 18:29:37.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.453" endtime="20201030 18:29:37.743"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020914597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021001514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:37.744" endtime="20201030 18:29:37.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.752" endtime="20201030 18:29:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.450" endtime="20201030 18:29:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.448" endtime="20201030 18:29:37.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:37.759" level="INFO">${RESULT} = [{'diff': 8.691699999999886e-05}, {'diff': 8.651399999999934e-05}, {'diff': 8.68059999999983e-05}, {'diff': 8.736099999999761e-05}, {'diff': 8.705599999999855e-05}, {'diff': 8.700000000000027e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:37.755" endtime="20201030 18:29:37.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:37.763" level="INFO">${ACCURACY} = {'diff': [8.691699999999886e-05, 8.651399999999934e-05, 8.68059999999983e-05, 8.736099999999761e-05, 8.705599999999855e-05, 8.700000000000027e-05, 8.655499999999858e-05, 8.675000000000002e-05, 8.69029...</msg>
<status status="PASS" starttime="20201030 18:29:37.760" endtime="20201030 18:29:37.763"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.767" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 18:29:37.766" endtime="20201030 18:29:37.768"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.770" level="INFO">VALUE: [8.691699999999886e-05, 8.651399999999934e-05, 8.68059999999983e-05, 8.736099999999761e-05, 8.705599999999855e-05, 8.700000000000027e-05, 8.655499999999858e-05, 8.675000000000002e-05, 8.690299999999929e-05, 8.727800000000313e-05, 8.741700000000283e-05, 8.661100000000033e-05, 8.700000000000027e-05, 8.659800000000023e-05, 8.711100000000083e-05, 8.718100000000215e-05, 8.697200000000113e-05, 8.74860000000012e-05, 8.729099999999976e-05, 8.6847000000001e-05, 8.702799999999941e-05, 8.722200000000138e-05, 8.675000000000002e-05, 8.657000000000109e-05, 8.687500000000015e-05, 8.69310000000019e-05, 8.731999999999837e-05, 8.684800000000048e-05, 8.679099999999926e-05, 8.711100000000083e-05, 8.694399999999852e-05, 8.747199999999816e-05, 8.694400000000199e-05, 8.66669999999986e-05, 8.695899999999757e-05, 8.73059999999988e-05, 8.675000000000002e-05, 8.652799999999891e-05, 8.669500000000122e-05, 8.670800000000131e-05, 8.729099999999976e-05, 8.695800000000156e-05, 8.726400000000009e-05, 8.722200000000138e-05, 8.694399999999852e-05, 8.700000000000027e-05, 8.73059999999988e-05, 8.704199999999898e-05, 8.708400000000116e-05, 8.726400000000009e-05]</msg>
<status status="PASS" starttime="20201030 18:29:37.769" endtime="20201030 18:29:37.776"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.764" endtime="20201030 18:29:37.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:37.780" endtime="20201030 18:29:37.800"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.779" endtime="20201030 18:29:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.778" endtime="20201030 18:29:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.414" endtime="20201030 18:29:37.801"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.413" endtime="20201030 18:29:37.801"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.810" endtime="20201030 18:29:37.829"></status>
</kw>
<msg timestamp="20201030 18:29:37.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.808" endtime="20201030 18:29:37.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:37.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:37.830" endtime="20201030 18:29:37.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.833" endtime="20201030 18:29:37.834"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.806" endtime="20201030 18:29:37.835"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.804" endtime="20201030 18:29:37.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:37.842" endtime="20201030 18:29:38.162"></status>
</kw>
<msg timestamp="20201030 18:29:38.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:37.840" endtime="20201030 18:29:38.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01962, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019707681, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 18:29:38.166" endtime="20201030 18:29:38.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.175" endtime="20201030 18:29:38.176"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.838" endtime="20201030 18:29:38.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.836" endtime="20201030 18:29:38.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.181" level="INFO">${RESULT} = [{'diff': 8.768100000000265e-05}, {'diff': 8.829099999999729e-05}, {'diff': 8.804100000000051e-05}, {'diff': 8.829100000000076e-05}, {'diff': 8.784699999999854e-05}, {'diff': 8.76250000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:38.178" endtime="20201030 18:29:38.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.186" level="INFO">${ACCURACY} = {'diff': [8.768100000000265e-05, 8.829099999999729e-05, 8.804100000000051e-05, 8.829100000000076e-05, 8.784699999999854e-05, 8.76250000000009e-05, 8.794500000000247e-05, 8.826400000000109e-05, 8.83469...</msg>
<status status="PASS" starttime="20201030 18:29:38.182" endtime="20201030 18:29:38.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.191" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.190" endtime="20201030 18:29:38.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.193" level="INFO">VALUE: [8.768100000000265e-05, 8.829099999999729e-05, 8.804100000000051e-05, 8.829100000000076e-05, 8.784699999999854e-05, 8.76250000000009e-05, 8.794500000000247e-05, 8.826400000000109e-05, 8.834699999999904e-05, 8.775000000000102e-05, 8.813799999999802e-05, 8.805599999999955e-05, 8.787499999999768e-05, 8.843000000000045e-05, 8.777700000000069e-05, 8.792999999999995e-05, 8.829200000000023e-05, 8.797199999999866e-05, 8.793099999999943e-05, 8.787500000000115e-05, 8.770899999999832e-05, 8.843099999999993e-05, 8.756999999999862e-05, 8.76250000000009e-05, 8.792999999999995e-05, 8.811099999999836e-05, 8.784699999999854e-05, 8.833299999999947e-05, 8.772199999999841e-05, 8.847199999999916e-05, 8.834699999999904e-05, 8.833400000000241e-05, 8.815299999999707e-05, 8.751400000000034e-05, 8.827800000000066e-05, 8.811099999999836e-05, 8.827700000000119e-05, 8.76799999999997e-05, 8.833299999999947e-05, 8.755499999999958e-05, 8.83059999999998e-05, 8.81670000000001e-05, 8.756999999999862e-05, 8.822199999999891e-05, 8.768099999999918e-05, 8.840300000000079e-05, 8.754100000000001e-05, 8.787500000000115e-05, 8.776400000000059e-05, 8.847200000000263e-05]</msg>
<status status="PASS" starttime="20201030 18:29:38.192" endtime="20201030 18:29:38.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.187" endtime="20201030 18:29:38.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.198" endtime="20201030 18:29:38.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.197" endtime="20201030 18:29:38.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.196" endtime="20201030 18:29:38.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.802" endtime="20201030 18:29:38.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:37.802" endtime="20201030 18:29:38.219"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.228" endtime="20201030 18:29:38.247"></status>
</kw>
<msg timestamp="20201030 18:29:38.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.226" endtime="20201030 18:29:38.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.249" endtime="20201030 18:29:38.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.251" endtime="20201030 18:29:38.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.224" endtime="20201030 18:29:38.253"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.221" endtime="20201030 18:29:38.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.260" endtime="20201030 18:29:38.548"></status>
</kw>
<msg timestamp="20201030 18:29:38.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.259" endtime="20201030 18:29:38.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019721014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019809528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.552" endtime="20201030 18:29:38.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.560" endtime="20201030 18:29:38.562"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.256" endtime="20201030 18:29:38.563"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.254" endtime="20201030 18:29:38.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.567" level="INFO">${RESULT} = [{'diff': 8.851400000000134e-05}, {'diff': 8.890299999999782e-05}, {'diff': 8.865300000000104e-05}, {'diff': 8.854200000000048e-05}, {'diff': 8.929099999999829e-05}, {'diff': 8.923600000000295e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:38.564" endtime="20201030 18:29:38.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.571" level="INFO">${ACCURACY} = {'diff': [8.851400000000134e-05, 8.890299999999782e-05, 8.865300000000104e-05, 8.854200000000048e-05, 8.929099999999829e-05, 8.923600000000295e-05, 8.879199999999726e-05, 8.876400000000159e-05, 8.8667...</msg>
<status status="PASS" starttime="20201030 18:29:38.568" endtime="20201030 18:29:38.571"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.576" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.575" endtime="20201030 18:29:38.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.578" level="INFO">VALUE: [8.851400000000134e-05, 8.890299999999782e-05, 8.865300000000104e-05, 8.854200000000048e-05, 8.929099999999829e-05, 8.923600000000295e-05, 8.879199999999726e-05, 8.876400000000159e-05, 8.86670000000006e-05, 8.940299999999832e-05, 8.925000000000252e-05, 8.947200000000016e-05, 8.888900000000172e-05, 8.922300000000286e-05, 8.904200000000098e-05, 8.880500000000083e-05, 8.901400000000184e-05, 8.869400000000027e-05, 8.926399999999862e-05, 8.876400000000159e-05, 8.856999999999962e-05, 8.911099999999936e-05, 8.909699999999979e-05, 8.919500000000025e-05, 8.854200000000048e-05, 8.906900000000065e-05, 8.886100000000258e-05, 8.91389999999985e-05, 8.941600000000188e-05, 8.854100000000101e-05, 8.91800000000012e-05, 8.84999999999983e-05, 8.856999999999962e-05, 8.891700000000086e-05, 8.89999999999988e-05, 8.929200000000123e-05, 8.90129999999989e-05, 8.9332999999997e-05, 8.920800000000034e-05, 8.905499999999761e-05, 8.926399999999862e-05, 8.937499999999918e-05, 8.859699999999929e-05, 8.904200000000098e-05, 8.934700000000004e-05, 8.874999999999855e-05, 8.870799999999984e-05, 8.904200000000098e-05, 8.929099999999829e-05, 8.906900000000065e-05]</msg>
<status status="PASS" starttime="20201030 18:29:38.577" endtime="20201030 18:29:38.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.572" endtime="20201030 18:29:38.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.583" endtime="20201030 18:29:38.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.582" endtime="20201030 18:29:38.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.581" endtime="20201030 18:29:38.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.220" endtime="20201030 18:29:38.604"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.219" endtime="20201030 18:29:38.604"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.613" endtime="20201030 18:29:38.633"></status>
</kw>
<msg timestamp="20201030 18:29:38.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.611" endtime="20201030 18:29:38.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.634" endtime="20201030 18:29:38.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.637" endtime="20201030 18:29:38.638"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.609" endtime="20201030 18:29:38.639"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.606" endtime="20201030 18:29:38.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.646" endtime="20201030 18:29:38.930"></status>
</kw>
<msg timestamp="20201030 18:29:38.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.644" endtime="20201030 18:29:38.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021487556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021577903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:38.934" endtime="20201030 18:29:38.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.942" endtime="20201030 18:29:38.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.642" endtime="20201030 18:29:38.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.640" endtime="20201030 18:29:38.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:38.949" level="INFO">${RESULT} = [{'diff': 9.034699999999757e-05}, {'diff': 9.016699999999864e-05}, {'diff': 8.98190000000014e-05}, {'diff': 8.969500000000075e-05}, {'diff': 8.993099999999796e-05}, {'diff': 9.025000000000005e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:38.945" endtime="20201030 18:29:38.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:38.953" level="INFO">${ACCURACY} = {'diff': [9.034699999999757e-05, 9.016699999999864e-05, 8.98190000000014e-05, 8.969500000000075e-05, 8.993099999999796e-05, 9.025000000000005e-05, 9.029099999999929e-05, 8.990199999999934e-05, 8.99170...</msg>
<status status="PASS" starttime="20201030 18:29:38.950" endtime="20201030 18:29:38.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.957" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 18:29:38.956" endtime="20201030 18:29:38.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:38.960" level="INFO">VALUE: [9.034699999999757e-05, 9.016699999999864e-05, 8.98190000000014e-05, 8.969500000000075e-05, 8.993099999999796e-05, 9.025000000000005e-05, 9.029099999999929e-05, 8.990199999999934e-05, 8.991700000000186e-05, 9.043100000000193e-05, 9.01389999999995e-05, 9.025000000000005e-05, 8.984800000000001e-05, 8.991599999999891e-05, 8.967999999999823e-05, 8.98329999999975e-05, 9.016599999999916e-05, 8.977799999999869e-05, 8.995800000000109e-05, 9.001400000000284e-05, 8.972200000000041e-05, 8.951399999999887e-05, 9.019499999999778e-05, 9.05130000000004e-05, 9.01519999999996e-05, 9.01519999999996e-05, 8.983300000000097e-05, 8.972200000000041e-05, 9.040299999999932e-05, 8.955499999999811e-05, 9.004199999999851e-05, 8.9638999999999e-05, 9.004199999999851e-05, 9.029199999999876e-05, 9.019500000000125e-05, 9.001400000000284e-05, 8.970800000000084e-05, 9.002699999999947e-05, 9.006899999999818e-05, 9.005500000000208e-05, 9.005500000000208e-05, 9.030599999999833e-05, 8.998600000000023e-05, 8.98329999999975e-05, 9.038899999999975e-05, 9.011199999999983e-05, 9.030500000000233e-05, 8.988799999999977e-05, 9.030499999999886e-05, 9.036099999999714e-05]</msg>
<status status="PASS" starttime="20201030 18:29:38.958" endtime="20201030 18:29:38.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.954" endtime="20201030 18:29:38.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:38.966" endtime="20201030 18:29:38.985"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.964" endtime="20201030 18:29:38.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.963" endtime="20201030 18:29:38.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.605" endtime="20201030 18:29:38.986"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.604" endtime="20201030 18:29:38.987"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:38.995" endtime="20201030 18:29:39.014"></status>
</kw>
<msg timestamp="20201030 18:29:39.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:38.994" endtime="20201030 18:29:39.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.015" endtime="20201030 18:29:39.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.018" endtime="20201030 18:29:39.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.991" endtime="20201030 18:29:39.020"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.989" endtime="20201030 18:29:39.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.027" endtime="20201030 18:29:39.313"></status>
</kw>
<msg timestamp="20201030 18:29:39.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.025" endtime="20201030 18:29:39.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019581236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019671819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.317" endtime="20201030 18:29:39.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.325" endtime="20201030 18:29:39.327"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.022" endtime="20201030 18:29:39.328"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.021" endtime="20201030 18:29:39.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.332" level="INFO">${RESULT} = [{'diff': 9.058300000000172e-05}, {'diff': 9.102700000000047e-05}, {'diff': 9.119400000000277e-05}, {'diff': 9.083300000000197e-05}, {'diff': 9.091699999999939e-05}, {'diff': 9.097200000000166e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:39.329" endtime="20201030 18:29:39.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.337" level="INFO">${ACCURACY} = {'diff': [9.058300000000172e-05, 9.102700000000047e-05, 9.119400000000277e-05, 9.083300000000197e-05, 9.091699999999939e-05, 9.097200000000166e-05, 9.095900000000157e-05, 9.137500000000118e-05, 9.1471...</msg>
<status status="PASS" starttime="20201030 18:29:39.333" endtime="20201030 18:29:39.337"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.342" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.341" endtime="20201030 18:29:39.342"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.344" level="INFO">VALUE: [9.058300000000172e-05, 9.102700000000047e-05, 9.119400000000277e-05, 9.083300000000197e-05, 9.091699999999939e-05, 9.097200000000166e-05, 9.095900000000157e-05, 9.137500000000118e-05, 9.14719999999987e-05, 9.101400000000037e-05, 9.10139999999969e-05, 9.11939999999993e-05, 9.106899999999918e-05, 9.14719999999987e-05, 9.098599999999776e-05, 9.11390000000005e-05, 9.143100000000293e-05, 9.088900000000025e-05, 9.0945000000002e-05, 9.133400000000194e-05, 9.06670000000026e-05, 9.118100000000268e-05, 9.120799999999887e-05, 9.11390000000005e-05, 9.122199999999844e-05, 9.143099999999946e-05, 9.094399999999905e-05, 9.059700000000129e-05, 9.112500000000093e-05, 9.111099999999789e-05, 9.051399999999987e-05, 9.073600000000098e-05, 9.056899999999868e-05, 9.076300000000065e-05, 9.091599999999991e-05, 9.080499999999936e-05, 9.115199999999712e-05, 9.086099999999764e-05, 9.074999999999708e-05, 9.058300000000172e-05, 9.091700000000286e-05, 9.061200000000033e-05, 9.122300000000139e-05, 9.109799999999779e-05, 9.123599999999801e-05, 9.134699999999857e-05, 9.122200000000191e-05, 9.094400000000252e-05, 9.069400000000227e-05, 9.148600000000173e-05]</msg>
<status status="PASS" starttime="20201030 18:29:39.343" endtime="20201030 18:29:39.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.338" endtime="20201030 18:29:39.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.349" endtime="20201030 18:29:39.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.348" endtime="20201030 18:29:39.369"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.347" endtime="20201030 18:29:39.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.987" endtime="20201030 18:29:39.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:38.987" endtime="20201030 18:29:39.370"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.379" endtime="20201030 18:29:39.397"></status>
</kw>
<msg timestamp="20201030 18:29:39.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.377" endtime="20201030 18:29:39.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.399" endtime="20201030 18:29:39.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.401" endtime="20201030 18:29:39.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.374" endtime="20201030 18:29:39.403"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.372" endtime="20201030 18:29:39.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.410" endtime="20201030 18:29:39.696"></status>
</kw>
<msg timestamp="20201030 18:29:39.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.409" endtime="20201030 18:29:39.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.700" endtime="20201030 18:29:39.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.709" endtime="20201030 18:29:39.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.406" endtime="20201030 18:29:39.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.404" endtime="20201030 18:29:39.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:39.715" level="INFO">${RESULT} = [{'diff': 9.230499999999739e-05}, {'diff': 9.1639000000001e-05}, {'diff': 9.229200000000076e-05}, {'diff': 9.158299999999925e-05}, {'diff': 9.177799999999722e-05}, {'diff': 9.20139999999979e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:29:39.712" endtime="20201030 18:29:39.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:39.719" level="INFO">${ACCURACY} = {'diff': [9.230499999999739e-05, 9.1639000000001e-05, 9.229200000000076e-05, 9.158299999999925e-05, 9.177799999999722e-05, 9.20139999999979e-05, 9.169499999999928e-05, 9.188900000000125e-05, 9.2138999...</msg>
<status status="PASS" starttime="20201030 18:29:39.716" endtime="20201030 18:29:39.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.724" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 18:29:39.723" endtime="20201030 18:29:39.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.726" level="INFO">VALUE: [9.230499999999739e-05, 9.1639000000001e-05, 9.229200000000076e-05, 9.158299999999925e-05, 9.177799999999722e-05, 9.20139999999979e-05, 9.169499999999928e-05, 9.188900000000125e-05, 9.213899999999803e-05, 9.1639000000001e-05, 9.218100000000021e-05, 9.195800000000309e-05, 9.240299999999785e-05, 9.209699999999932e-05, 9.180499999999689e-05, 9.222199999999944e-05, 9.241700000000089e-05, 9.254099999999807e-05, 9.243099999999699e-05, 9.173700000000146e-05, 9.20139999999979e-05, 9.234699999999957e-05, 9.225000000000205e-05, 9.166700000000014e-05, 9.186099999999864e-05, 9.226400000000162e-05, 9.187499999999821e-05, 9.183399999999897e-05, 9.218100000000021e-05, 9.19719999999992e-05, 9.159700000000229e-05, 9.229200000000076e-05, 9.16520000000011e-05, 9.209699999999932e-05, 9.16939999999998e-05, 9.198599999999876e-05, 9.231900000000043e-05, 9.205600000000008e-05, 9.230600000000033e-05, 9.205600000000008e-05, 9.224999999999858e-05, 9.226400000000162e-05, 9.173599999999851e-05, 9.226400000000162e-05, 9.161100000000186e-05, 9.218000000000073e-05, 9.202800000000094e-05, 9.190300000000082e-05, 9.241700000000089e-05, 9.234799999999904e-05]</msg>
<status status="PASS" starttime="20201030 18:29:39.725" endtime="20201030 18:29:39.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.720" endtime="20201030 18:29:39.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:39.731" endtime="20201030 18:29:39.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.730" endtime="20201030 18:29:39.751"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.729" endtime="20201030 18:29:39.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.371" endtime="20201030 18:29:39.752"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.370" endtime="20201030 18:29:39.752"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.761" endtime="20201030 18:29:39.782"></status>
</kw>
<msg timestamp="20201030 18:29:39.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.759" endtime="20201030 18:29:39.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:39.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:39.783" endtime="20201030 18:29:39.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.786" endtime="20201030 18:29:39.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.757" endtime="20201030 18:29:39.788"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.755" endtime="20201030 18:29:39.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:39.795" endtime="20201030 18:29:40.079"></status>
</kw>
<msg timestamp="20201030 18:29:40.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:39.793" endtime="20201030 18:29:40.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021183014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021275833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.083" endtime="20201030 18:29:40.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.091" endtime="20201030 18:29:40.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.791" endtime="20201030 18:29:40.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.789" endtime="20201030 18:29:40.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.098" level="INFO">${RESULT} = [{'diff': 9.281900000000093e-05}, {'diff': 9.308300000000075e-05}, {'diff': 9.327799999999872e-05}, {'diff': 9.34720000000007e-05}, {'diff': 9.277700000000222e-05}, {'diff': 9.334700000000057e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:40.095" endtime="20201030 18:29:40.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.104" level="INFO">${ACCURACY} = {'diff': [9.281900000000093e-05, 9.308300000000075e-05, 9.327799999999872e-05, 9.34720000000007e-05, 9.277700000000222e-05, 9.334700000000057e-05, 9.334800000000004e-05, 9.308400000000022e-05, 9.31669...</msg>
<status status="PASS" starttime="20201030 18:29:40.100" endtime="20201030 18:29:40.104"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.108" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.107" endtime="20201030 18:29:40.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.111" level="INFO">VALUE: [9.281900000000093e-05, 9.308300000000075e-05, 9.327799999999872e-05, 9.34720000000007e-05, 9.277700000000222e-05, 9.334700000000057e-05, 9.334800000000004e-05, 9.308400000000022e-05, 9.316699999999817e-05, 9.308400000000022e-05, 9.302799999999847e-05, 9.287499999999921e-05, 9.327799999999872e-05, 9.327799999999872e-05, 9.333400000000047e-05, 9.288899999999878e-05, 9.3333000000001e-05, 9.275000000000255e-05, 9.28330000000005e-05, 9.337499999999971e-05, 9.292999999999801e-05, 9.308300000000075e-05, 9.322200000000044e-05, 9.281900000000093e-05, 9.267999999999776e-05, 9.312500000000293e-05, 9.327800000000219e-05, 9.3333000000001e-05, 9.30139999999989e-05, 9.324999999999958e-05, 9.31659999999987e-05, 9.33879999999998e-05, 9.330500000000186e-05, 9.30139999999989e-05, 9.279200000000126e-05, 9.270800000000037e-05, 9.312500000000293e-05, 9.273599999999951e-05, 9.344500000000103e-05, 9.347300000000017e-05, 9.274999999999908e-05, 9.25000000000023e-05, 9.315199999999912e-05, 9.354200000000201e-05, 9.357000000000115e-05, 9.286100000000311e-05, 9.322200000000044e-05, 9.327800000000219e-05, 9.341699999999842e-05, 9.3333999999997e-05]</msg>
<status status="PASS" starttime="20201030 18:29:40.110" endtime="20201030 18:29:40.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.105" endtime="20201030 18:29:40.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.117" endtime="20201030 18:29:40.136"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.115" endtime="20201030 18:29:40.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.114" endtime="20201030 18:29:40.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.753" endtime="20201030 18:29:40.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:39.752" endtime="20201030 18:29:40.138"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.146" endtime="20201030 18:29:40.166"></status>
</kw>
<msg timestamp="20201030 18:29:40.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.145" endtime="20201030 18:29:40.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.168" endtime="20201030 18:29:40.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.170" endtime="20201030 18:29:40.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.142" endtime="20201030 18:29:40.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.140" endtime="20201030 18:29:40.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.180" endtime="20201030 18:29:40.465"></status>
</kw>
<msg timestamp="20201030 18:29:40.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.178" endtime="20201030 18:29:40.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020151097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020245083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.469" endtime="20201030 18:29:40.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.478" endtime="20201030 18:29:40.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.175" endtime="20201030 18:29:40.480"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.173" endtime="20201030 18:29:40.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.485" level="INFO">${RESULT} = [{'diff': 9.398600000000076e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.430499999999939e-05}, {'diff': 9.397300000000067e-05}, {'diff': 9.409700000000132e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:40.482" endtime="20201030 18:29:40.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.493" level="INFO">${ACCURACY} = {'diff': [9.398600000000076e-05, 9.400000000000033e-05, 9.362499999999996e-05, 9.430499999999939e-05, 9.397300000000067e-05, 9.409700000000132e-05, 9.376399999999965e-05, 9.42079999999984e-05, 9.41110...</msg>
<status status="PASS" starttime="20201030 18:29:40.486" endtime="20201030 18:29:40.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.498" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.497" endtime="20201030 18:29:40.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.500" level="INFO">VALUE: [9.398600000000076e-05, 9.400000000000033e-05, 9.362499999999996e-05, 9.430499999999939e-05, 9.397300000000067e-05, 9.409700000000132e-05, 9.376399999999965e-05, 9.42079999999984e-05, 9.411100000000089e-05, 9.352799999999897e-05, 9.375000000000008e-05, 9.419399999999883e-05, 9.423600000000101e-05, 9.440299999999985e-05, 9.400000000000033e-05, 9.445800000000212e-05, 9.416699999999917e-05, 9.43469999999981e-05, 9.376300000000018e-05, 9.440200000000037e-05, 9.406899999999871e-05, 9.445800000000212e-05, 9.440299999999985e-05, 9.41940000000023e-05, 9.426400000000015e-05, 9.419499999999831e-05, 9.387500000000021e-05, 9.398600000000076e-05, 9.444499999999856e-05, 9.427799999999972e-05, 9.387500000000021e-05, 9.437500000000071e-05, 9.400000000000033e-05, 9.368000000000223e-05, 9.395799999999815e-05, 9.380499999999889e-05, 9.373599999999704e-05, 9.44720000000017e-05, 9.451300000000093e-05, 9.441599999999994e-05, 9.409700000000132e-05, 9.407000000000165e-05, 9.409700000000132e-05, 9.409700000000132e-05, 9.445800000000212e-05, 9.427799999999972e-05, 9.38469999999976e-05, 9.413900000000003e-05, 9.416699999999917e-05, 9.431999999999843e-05]</msg>
<status status="PASS" starttime="20201030 18:29:40.499" endtime="20201030 18:29:40.501"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.494" endtime="20201030 18:29:40.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.505" endtime="20201030 18:29:40.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.504" endtime="20201030 18:29:40.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.502" endtime="20201030 18:29:40.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.138" endtime="20201030 18:29:40.526"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.138" endtime="20201030 18:29:40.526"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.535" endtime="20201030 18:29:40.552"></status>
</kw>
<msg timestamp="20201030 18:29:40.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.533" endtime="20201030 18:29:40.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.554" endtime="20201030 18:29:40.556"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.557" endtime="20201030 18:29:40.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.531" endtime="20201030 18:29:40.559"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.528" endtime="20201030 18:29:40.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.566" endtime="20201030 18:29:40.852"></status>
</kw>
<msg timestamp="20201030 18:29:40.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.564" endtime="20201030 18:29:40.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019856542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:40.856" endtime="20201030 18:29:40.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.864" endtime="20201030 18:29:40.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.561" endtime="20201030 18:29:40.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.560" endtime="20201030 18:29:40.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:40.871" level="INFO">${RESULT} = [{'diff': 9.472300000000142e-05}, {'diff': 9.458300000000225e-05}, {'diff': 9.500000000000133e-05}, {'diff': 9.523599999999854e-05}, {'diff': 9.480599999999936e-05}, {'diff': 9.519399999999983e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:40.868" endtime="20201030 18:29:40.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:40.875" level="INFO">${ACCURACY} = {'diff': [9.472300000000142e-05, 9.458300000000225e-05, 9.500000000000133e-05, 9.523599999999854e-05, 9.480599999999936e-05, 9.519399999999983e-05, 9.504100000000057e-05, 9.495799999999915e-05, 9.5264...</msg>
<status status="PASS" starttime="20201030 18:29:40.872" endtime="20201030 18:29:40.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.879" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 18:29:40.878" endtime="20201030 18:29:40.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.882" level="INFO">VALUE: [9.472300000000142e-05, 9.458300000000225e-05, 9.500000000000133e-05, 9.523599999999854e-05, 9.480599999999936e-05, 9.519399999999983e-05, 9.504100000000057e-05, 9.495799999999915e-05, 9.526400000000115e-05, 9.47079999999989e-05, 9.459699999999835e-05, 9.495800000000262e-05, 9.511100000000189e-05, 9.463900000000053e-05, 9.505599999999961e-05, 9.506899999999971e-05, 9.509699999999885e-05, 9.500000000000133e-05, 9.50140000000009e-05, 9.530500000000039e-05, 9.459700000000182e-05, 9.519499999999931e-05, 9.51530000000006e-05, 9.529200000000029e-05, 9.493099999999949e-05, 9.48339999999985e-05, 9.522199999999897e-05, 9.481899999999946e-05, 9.49859999999983e-05, 9.454100000000007e-05, 9.525000000000158e-05, 9.480600000000283e-05, 9.524999999999811e-05, 9.468099999999924e-05, 9.513900000000103e-05, 9.530599999999986e-05, 9.541700000000042e-05, 9.456900000000268e-05, 9.523599999999854e-05, 9.523599999999854e-05, 9.504200000000004e-05, 9.487499999999774e-05, 9.524999999999811e-05, 9.484700000000207e-05, 9.461099999999792e-05, 9.479199999999979e-05, 9.508399999999875e-05, 9.541700000000042e-05, 9.541600000000094e-05, 9.529099999999735e-05]</msg>
<status status="PASS" starttime="20201030 18:29:40.880" endtime="20201030 18:29:40.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.876" endtime="20201030 18:29:40.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:40.887" endtime="20201030 18:29:40.906"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.885" endtime="20201030 18:29:40.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.884" endtime="20201030 18:29:40.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.527" endtime="20201030 18:29:40.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.526" endtime="20201030 18:29:40.908"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.916" endtime="20201030 18:29:40.937"></status>
</kw>
<msg timestamp="20201030 18:29:40.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.915" endtime="20201030 18:29:40.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:40.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:40.938" endtime="20201030 18:29:40.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.941" endtime="20201030 18:29:40.942"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.912" endtime="20201030 18:29:40.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.910" endtime="20201030 18:29:40.943"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:40.950" endtime="20201030 18:29:41.235"></status>
</kw>
<msg timestamp="20201030 18:29:41.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:40.948" endtime="20201030 18:29:41.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02078725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020883111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:41.239" endtime="20201030 18:29:41.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.247" endtime="20201030 18:29:41.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.945" endtime="20201030 18:29:41.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.944" endtime="20201030 18:29:41.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.254" level="INFO">${RESULT} = [{'diff': 9.586099999999917e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.625000000000258e-05}, {'diff': 9.559699999999935e-05}, {'diff': 9.632000000000043e-05}, {'diff': 9.6334e-05}, {'diff': 9.5...</msg>
<status status="PASS" starttime="20201030 18:29:41.251" endtime="20201030 18:29:41.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.258" level="INFO">${ACCURACY} = {'diff': [9.586099999999917e-05, 9.586099999999917e-05, 9.625000000000258e-05, 9.559699999999935e-05, 9.632000000000043e-05, 9.6334e-05, 9.570900000000285e-05, 9.602800000000147e-05, 9.611199999999889...</msg>
<status status="PASS" starttime="20201030 18:29:41.255" endtime="20201030 18:29:41.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.262" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.261" endtime="20201030 18:29:41.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.265" level="INFO">VALUE: [9.586099999999917e-05, 9.586099999999917e-05, 9.625000000000258e-05, 9.559699999999935e-05, 9.632000000000043e-05, 9.6334e-05, 9.570900000000285e-05, 9.602800000000147e-05, 9.611199999999889e-05, 9.619500000000031e-05, 9.568000000000076e-05, 9.627699999999878e-05, 9.636099999999967e-05, 9.588899999999831e-05, 9.563899999999806e-05, 9.588900000000178e-05, 9.61530000000016e-05, 9.591699999999745e-05, 9.626400000000215e-05, 9.615199999999866e-05, 9.655600000000111e-05, 9.595800000000015e-05, 9.606900000000071e-05, 9.59859999999993e-05, 9.651399999999893e-05, 9.580600000000036e-05, 9.613900000000203e-05, 9.608399999999975e-05, 9.580600000000036e-05, 9.608399999999975e-05, 9.554100000000107e-05, 9.611100000000289e-05, 9.631900000000096e-05, 9.608300000000028e-05, 9.573599999999904e-05, 9.55279999999975e-05, 9.63470000000001e-05, 9.570899999999938e-05, 9.594500000000006e-05, 9.565199999999816e-05, 9.584799999999907e-05, 9.612499999999899e-05, 9.579200000000079e-05, 9.649999999999936e-05, 9.570900000000285e-05, 9.57079999999999e-05, 9.649999999999936e-05, 9.575000000000208e-05, 9.636099999999967e-05, 9.586099999999917e-05]</msg>
<status status="PASS" starttime="20201030 18:29:41.264" endtime="20201030 18:29:41.267"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.259" endtime="20201030 18:29:41.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.271" endtime="20201030 18:29:41.290"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.269" endtime="20201030 18:29:41.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.268" endtime="20201030 18:29:41.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.909" endtime="20201030 18:29:41.291"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:40.908" endtime="20201030 18:29:41.291"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.300" endtime="20201030 18:29:41.318"></status>
</kw>
<msg timestamp="20201030 18:29:41.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.299" endtime="20201030 18:29:41.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.320" endtime="20201030 18:29:41.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.322" endtime="20201030 18:29:41.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.296" endtime="20201030 18:29:41.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.294" endtime="20201030 18:29:41.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.331" endtime="20201030 18:29:41.618"></status>
</kw>
<msg timestamp="20201030 18:29:41.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.330" endtime="20201030 18:29:41.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019586486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019683333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.622" endtime="20201030 18:29:41.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.630" endtime="20201030 18:29:41.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.327" endtime="20201030 18:29:41.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.325" endtime="20201030 18:29:41.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:41.637" level="INFO">${RESULT} = [{'diff': 9.68470000000006e-05}, {'diff': 9.716599999999923e-05}, {'diff': 9.647199999999675e-05}, {'diff': 9.734699999999763e-05}, {'diff': 9.702800000000247e-05}, {'diff': 9.665299999999863e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:41.634" endtime="20201030 18:29:41.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:41.642" level="INFO">${ACCURACY} = {'diff': [9.68470000000006e-05, 9.716599999999923e-05, 9.647199999999675e-05, 9.734699999999763e-05, 9.702800000000247e-05, 9.665299999999863e-05, 9.65279999999985e-05, 9.748599999999732e-05, 9.687499...</msg>
<status status="PASS" starttime="20201030 18:29:41.638" endtime="20201030 18:29:41.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.646" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 18:29:41.645" endtime="20201030 18:29:41.647"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.649" level="INFO">VALUE: [9.68470000000006e-05, 9.716599999999923e-05, 9.647199999999675e-05, 9.734699999999763e-05, 9.702800000000247e-05, 9.665299999999863e-05, 9.65279999999985e-05, 9.748599999999732e-05, 9.687499999999974e-05, 9.733299999999806e-05, 9.649999999999936e-05, 9.706900000000171e-05, 9.712499999999999e-05, 9.741699999999895e-05, 9.657000000000068e-05, 9.7334000000001e-05, 9.663899999999906e-05, 9.729199999999882e-05, 9.741699999999895e-05, 9.691600000000244e-05, 9.741600000000294e-05, 9.715299999999913e-05, 9.65279999999985e-05, 9.677799999999875e-05, 9.691700000000192e-05, 9.672299999999995e-05, 9.7027999999999e-05, 9.726399999999968e-05, 9.677799999999875e-05, 9.72080000000014e-05, 9.70409999999991e-05, 9.725000000000011e-05, 9.662499999999949e-05, 9.736100000000067e-05, 9.663899999999906e-05, 9.701399999999943e-05, 9.651399999999893e-05, 9.750000000000036e-05, 9.662500000000296e-05, 9.741700000000242e-05, 9.673600000000004e-05, 9.681900000000146e-05, 9.686100000000017e-05, 9.65279999999985e-05, 9.686100000000017e-05, 9.670799999999743e-05, 9.662499999999949e-05, 9.722200000000097e-05, 9.701299999999996e-05, 9.740299999999938e-05]</msg>
<status status="PASS" starttime="20201030 18:29:41.648" endtime="20201030 18:29:41.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.643" endtime="20201030 18:29:41.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:41.654" endtime="20201030 18:29:41.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.652" endtime="20201030 18:29:41.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.651" endtime="20201030 18:29:41.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.292" endtime="20201030 18:29:41.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.292" endtime="20201030 18:29:41.675"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.684" endtime="20201030 18:29:41.704"></status>
</kw>
<msg timestamp="20201030 18:29:41.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.682" endtime="20201030 18:29:41.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:41.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:41.705" endtime="20201030 18:29:41.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.708" endtime="20201030 18:29:41.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.679" endtime="20201030 18:29:41.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.677" endtime="20201030 18:29:41.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:41.717" endtime="20201030 18:29:42.003"></status>
</kw>
<msg timestamp="20201030 18:29:42.006" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:41.715" endtime="20201030 18:29:42.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.014" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019769889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019867403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.007" endtime="20201030 18:29:42.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.015" endtime="20201030 18:29:42.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.712" endtime="20201030 18:29:42.017"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.711" endtime="20201030 18:29:42.018"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.022" level="INFO">${RESULT} = [{'diff': 9.751399999999993e-05}, {'diff': 9.809800000000132e-05}, {'diff': 9.772300000000095e-05}, {'diff': 9.808299999999881e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.806999999999871e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:42.019" endtime="20201030 18:29:42.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.026" level="INFO">${ACCURACY} = {'diff': [9.751399999999993e-05, 9.809800000000132e-05, 9.772300000000095e-05, 9.808299999999881e-05, 9.784699999999813e-05, 9.806999999999871e-05, 9.840300000000038e-05, 9.801400000000043e-05, 9.8028...</msg>
<status status="PASS" starttime="20201030 18:29:42.023" endtime="20201030 18:29:42.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.030" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.029" endtime="20201030 18:29:42.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.033" level="INFO">VALUE: [9.751399999999993e-05, 9.809800000000132e-05, 9.772300000000095e-05, 9.808299999999881e-05, 9.784699999999813e-05, 9.806999999999871e-05, 9.840300000000038e-05, 9.801400000000043e-05, 9.8028e-05, 9.818099999999927e-05, 9.793099999999902e-05, 9.822300000000145e-05, 9.808300000000228e-05, 9.808399999999828e-05, 9.794399999999912e-05, 9.765299999999963e-05, 9.759700000000135e-05, 9.8028e-05, 9.82219999999985e-05, 9.783399999999803e-05, 9.791699999999945e-05, 9.769499999999834e-05, 9.787500000000074e-05, 9.843000000000005e-05, 9.827700000000078e-05, 9.77920000000028e-05, 9.795799999999869e-05, 9.806899999999924e-05, 9.805600000000261e-05, 9.795800000000215e-05, 9.827800000000025e-05, 9.811100000000142e-05, 9.800000000000086e-05, 9.76669999999992e-05, 9.794400000000258e-05, 9.777700000000028e-05, 9.788900000000031e-05, 9.784699999999813e-05, 9.78059999999989e-05, 9.81669999999997e-05, 9.759700000000135e-05, 9.844499999999909e-05, 9.75279999999995e-05, 9.81669999999997e-05, 9.802700000000053e-05, 9.83470000000021e-05, 9.805500000000314e-05, 9.841699999999995e-05, 9.809700000000185e-05, 9.827800000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:29:42.031" endtime="20201030 18:29:42.034"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.027" endtime="20201030 18:29:42.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.038" endtime="20201030 18:29:42.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.036" endtime="20201030 18:29:42.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.035" endtime="20201030 18:29:42.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.676" endtime="20201030 18:29:42.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:41.675" endtime="20201030 18:29:42.059"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.067" endtime="20201030 18:29:42.088"></status>
</kw>
<msg timestamp="20201030 18:29:42.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.066" endtime="20201030 18:29:42.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.090" endtime="20201030 18:29:42.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.093" endtime="20201030 18:29:42.094"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.063" endtime="20201030 18:29:42.095"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.061" endtime="20201030 18:29:42.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.102" endtime="20201030 18:29:42.387"></status>
</kw>
<msg timestamp="20201030 18:29:42.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020564417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.100" endtime="20201030 18:29:42.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020564417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.391" endtime="20201030 18:29:42.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.400" endtime="20201030 18:29:42.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.098" endtime="20201030 18:29:42.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.096" endtime="20201030 18:29:42.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.406" level="INFO">${RESULT} = [{'diff': 9.929200000000082e-05}, {'diff': 9.901399999999796e-05}, {'diff': 9.859700000000235e-05}, {'diff': 9.873700000000152e-05}, {'diff': 9.891700000000045e-05}, {'diff': 9.879200000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:42.403" endtime="20201030 18:29:42.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.410" level="INFO">${ACCURACY} = {'diff': [9.929200000000082e-05, 9.901399999999796e-05, 9.859700000000235e-05, 9.873700000000152e-05, 9.891700000000045e-05, 9.879200000000032e-05, 9.941700000000095e-05, 9.904200000000057e-05, 9.9346...</msg>
<status status="PASS" starttime="20201030 18:29:42.407" endtime="20201030 18:29:42.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.415" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.414" endtime="20201030 18:29:42.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.417" level="INFO">VALUE: [9.929200000000082e-05, 9.901399999999796e-05, 9.859700000000235e-05, 9.873700000000152e-05, 9.891700000000045e-05, 9.879200000000032e-05, 9.941700000000095e-05, 9.904200000000057e-05, 9.934699999999963e-05, 9.944400000000062e-05, 9.92219999999995e-05, 9.909699999999938e-05, 9.876400000000118e-05, 9.906999999999971e-05, 9.877799999999728e-05, 9.938900000000181e-05, 9.89999999999984e-05, 9.924999999999864e-05, 9.881899999999999e-05, 9.89999999999984e-05, 9.847200000000222e-05, 9.88470000000026e-05, 9.905600000000014e-05, 9.873599999999857e-05, 9.877800000000075e-05, 9.863900000000106e-05, 9.943100000000052e-05, 9.923600000000254e-05, 9.904200000000057e-05, 9.934699999999963e-05, 9.916600000000123e-05, 9.893100000000002e-05, 9.920799999999994e-05, 9.869499999999934e-05, 9.863899999999759e-05, 9.891700000000045e-05, 9.924999999999864e-05, 9.875000000000161e-05, 9.947199999999976e-05, 9.934699999999963e-05, 9.918100000000027e-05, 9.854200000000007e-05, 9.927799999999778e-05, 9.926400000000168e-05, 9.92219999999995e-05, 9.859800000000182e-05, 9.887499999999827e-05, 9.852700000000103e-05, 9.927699999999831e-05, 9.916600000000123e-05]</msg>
<status status="PASS" starttime="20201030 18:29:42.416" endtime="20201030 18:29:42.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.411" endtime="20201030 18:29:42.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.423" endtime="20201030 18:29:42.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.422" endtime="20201030 18:29:42.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.420" endtime="20201030 18:29:42.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.060" endtime="20201030 18:29:42.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.059" endtime="20201030 18:29:42.444"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.453" endtime="20201030 18:29:42.471"></status>
</kw>
<msg timestamp="20201030 18:29:42.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.451" endtime="20201030 18:29:42.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.473" endtime="20201030 18:29:42.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.475" endtime="20201030 18:29:42.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.448" endtime="20201030 18:29:42.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.446" endtime="20201030 18:29:42.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.484" endtime="20201030 18:29:42.770"></status>
</kw>
<msg timestamp="20201030 18:29:42.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.483" endtime="20201030 18:29:42.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019515528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.774" endtime="20201030 18:29:42.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.782" endtime="20201030 18:29:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.480" endtime="20201030 18:29:42.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.478" endtime="20201030 18:29:42.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:42.789" level="INFO">${RESULT} = [{'diff': 0.00010031899999999802}, {'diff': 9.962500000000249e-05}, {'diff': 9.992999999999808e-05}, {'diff': 0.00010048599999999686}, {'diff': 9.970899999999991e-05}, {'diff': 9.993100000000102e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:42.786" endtime="20201030 18:29:42.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:42.794" level="INFO">${ACCURACY} = {'diff': [0.00010031899999999802, 9.962500000000249e-05, 9.992999999999808e-05, 0.00010048599999999686, 9.970899999999991e-05, 9.993100000000102e-05, 9.974999999999914e-05, 9.991700000000145e-05, 9.96...</msg>
<status status="PASS" starttime="20201030 18:29:42.790" endtime="20201030 18:29:42.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.799" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 18:29:42.798" endtime="20201030 18:29:42.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.801" level="INFO">VALUE: [0.00010031899999999802, 9.962500000000249e-05, 9.992999999999808e-05, 0.00010048599999999686, 9.970899999999991e-05, 9.993100000000102e-05, 9.974999999999914e-05, 9.991700000000145e-05, 9.963799999999912e-05, 9.99999999999994e-05, 0.0001003610000000002, 0.00010033300000000106, 0.00010008299999999734, 9.991700000000145e-05, 9.997200000000026e-05, 0.00010038899999999934, 9.977800000000175e-05, 9.982000000000046e-05, 0.0001001939999999979, 9.954099999999813e-05, 9.959699999999988e-05, 0.00010001400000000243, 9.974999999999914e-05, 9.98609999999997e-05, 9.993100000000102e-05, 0.0001003060000000014, 0.00010033300000000106, 0.00010047300000000023, 0.00010005500000000167, 9.994400000000112e-05, 9.973599999999957e-05, 0.00010013899999999909, 9.963900000000206e-05, 9.995799999999722e-05, 9.998599999999983e-05, 0.00010026399999999921, 9.962499999999902e-05, 0.00010001299999999949, 0.0001001809999999978, 0.00010033300000000106, 9.966699999999773e-05, 9.987499999999927e-05, 9.974999999999914e-05, 0.00010026399999999921, 9.979199999999785e-05, 0.00010038799999999987, 0.00010040300000000238, 0.00010040299999999891, 0.00010023600000000008, 9.961099999999945e-05]</msg>
<status status="PASS" starttime="20201030 18:29:42.800" endtime="20201030 18:29:42.802"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.795" endtime="20201030 18:29:42.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:42.806" endtime="20201030 18:29:42.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.805" endtime="20201030 18:29:42.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.804" endtime="20201030 18:29:42.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.445" endtime="20201030 18:29:42.827"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.444" endtime="20201030 18:29:42.827"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.836" endtime="20201030 18:29:42.855"></status>
</kw>
<msg timestamp="20201030 18:29:42.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.834" endtime="20201030 18:29:42.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:42.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:42.857" endtime="20201030 18:29:42.859"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.859" endtime="20201030 18:29:42.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.832" endtime="20201030 18:29:42.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.830" endtime="20201030 18:29:42.862"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:42.868" endtime="20201030 18:29:43.156"></status>
</kw>
<msg timestamp="20201030 18:29:43.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:42.867" endtime="20201030 18:29:43.159"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019714875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.160" endtime="20201030 18:29:43.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.168" endtime="20201030 18:29:43.169"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.864" endtime="20201030 18:29:43.170"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.863" endtime="20201030 18:29:43.170"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.174" level="INFO">${RESULT} = [{'diff': 0.00010108300000000181}, {'diff': 0.00010145899999999819}, {'diff': 0.00010059700000000088}, {'diff': 0.00010094400000000212}, {'diff': 0.00010091700000000245}, {'diff': 0.000100542000000002...</msg>
<status status="PASS" starttime="20201030 18:29:43.171" endtime="20201030 18:29:43.174"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.178" level="INFO">${ACCURACY} = {'diff': [0.00010108300000000181, 0.00010145899999999819, 0.00010059700000000088, 0.00010094400000000212, 0.00010091700000000245, 0.00010054200000000207, 0.00010075000000000014, 0.00010129199999999935...</msg>
<status status="PASS" starttime="20201030 18:29:43.175" endtime="20201030 18:29:43.179"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.183" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.182" endtime="20201030 18:29:43.183"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.185" level="INFO">VALUE: [0.00010108300000000181, 0.00010145899999999819, 0.00010059700000000088, 0.00010094400000000212, 0.00010091700000000245, 0.00010054200000000207, 0.00010075000000000014, 0.00010129199999999935, 0.00010068100000000177, 0.00010129199999999935, 0.00010101399999999996, 0.00010106900000000224, 0.00010072199999999754, 0.00010148600000000133, 0.00010094399999999865, 0.00010067999999999883, 0.00010080599999999842, 0.0001012220000000015, 0.00010076399999999971, 0.00010108400000000128, 0.00010134700000000163, 0.00010075000000000014, 0.00010083300000000156, 0.00010059700000000088, 0.00010137500000000077, 0.00010081899999999852, 0.00010130599999999892, 0.0001010000000000004, 0.00010137500000000077, 0.00010133400000000153, 0.00010075000000000014, 0.00010056900000000174, 0.0001006800000000023, 0.00010080499999999895, 0.00010070799999999797, 0.0001006939999999984, 0.0001010419999999991, 0.00010116699999999923, 0.00010093099999999855, 0.00010072300000000048, 0.00010111200000000042, 0.00010108300000000181, 0.0001011939999999989, 0.00010055599999999817, 0.00010062500000000002, 0.0001006670000000022, 0.00010134699999999816, 0.00010084699999999766, 0.00010058399999999731, 0.00010133399999999806]</msg>
<status status="PASS" starttime="20201030 18:29:43.184" endtime="20201030 18:29:43.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.179" endtime="20201030 18:29:43.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.191" endtime="20201030 18:29:43.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.189" endtime="20201030 18:29:43.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.188" endtime="20201030 18:29:43.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.828" endtime="20201030 18:29:43.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:42.828" endtime="20201030 18:29:43.211"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.220" endtime="20201030 18:29:43.240"></status>
</kw>
<msg timestamp="20201030 18:29:43.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.218" endtime="20201030 18:29:43.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.241" endtime="20201030 18:29:43.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.244" endtime="20201030 18:29:43.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.216" endtime="20201030 18:29:43.246"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.214" endtime="20201030 18:29:43.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.253" endtime="20201030 18:29:43.538"></status>
</kw>
<msg timestamp="20201030 18:29:43.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.251" endtime="20201030 18:29:43.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020554306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020656819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.542" endtime="20201030 18:29:43.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.550" endtime="20201030 18:29:43.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.249" endtime="20201030 18:29:43.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.247" endtime="20201030 18:29:43.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.557" level="INFO">${RESULT} = [{'diff': 0.00010251299999999852}, {'diff': 0.00010243100000000005}, {'diff': 0.00010179199999999985}, {'diff': 0.00010227699999999784}, {'diff': 0.00010248599999999886}, {'diff': 0.000102375000000001...</msg>
<status status="PASS" starttime="20201030 18:29:43.553" endtime="20201030 18:29:43.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.561" level="INFO">${ACCURACY} = {'diff': [0.00010251299999999852, 0.00010243100000000005, 0.00010179199999999985, 0.00010227699999999784, 0.00010248599999999886, 0.00010237500000000177, 0.00010227800000000078, 0.0001020000000000014,...</msg>
<status status="PASS" starttime="20201030 18:29:43.558" endtime="20201030 18:29:43.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.565" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.564" endtime="20201030 18:29:43.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.568" level="INFO">VALUE: [0.00010251299999999852, 0.00010243100000000005, 0.00010179199999999985, 0.00010227699999999784, 0.00010248599999999886, 0.00010237500000000177, 0.00010227800000000078, 0.0001020000000000014, 0.00010216700000000023, 0.00010211100000000195, 0.00010208399999999881, 0.00010186200000000117, 0.0001015549999999997, 0.00010213900000000109, 0.00010184700000000213, 0.00010233300000000306, 0.00010241700000000048, 0.0001020420000000001, 0.00010243100000000005, 0.00010161099999999798, 0.00010176400000000071, 0.00010193000000000008, 0.0001019160000000005, 0.00010225000000000165, 0.00010211099999999848, 0.00010152800000000003, 0.00010199999999999793, 0.00010220799999999947, 0.00010166699999999973, 0.0001023749999999983, 0.00010237500000000177, 0.00010211200000000142, 0.00010227699999999784, 0.00010236099999999873, 0.00010236099999999873, 0.00010241700000000048, 0.00010157000000000221, 0.00010163900000000059, 0.00010188899999999737, 0.00010170899999999844, 0.00010165199999999722, 0.00010183299999999909, 0.00010233299999999959, 0.00010154100000000013, 0.00010184700000000213, 0.00010234699999999916, 0.00010234700000000263, 0.00010211100000000195, 0.00010247199999999929, 0.00010183399999999856]</msg>
<status status="PASS" starttime="20201030 18:29:43.566" endtime="20201030 18:29:43.569"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.562" endtime="20201030 18:29:43.570"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.573" endtime="20201030 18:29:43.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.572" endtime="20201030 18:29:43.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.571" endtime="20201030 18:29:43.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.212" endtime="20201030 18:29:43.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.212" endtime="20201030 18:29:43.594"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.603" endtime="20201030 18:29:43.624"></status>
</kw>
<msg timestamp="20201030 18:29:43.624" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.601" endtime="20201030 18:29:43.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.625" endtime="20201030 18:29:43.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.628" endtime="20201030 18:29:43.629"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.599" endtime="20201030 18:29:43.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.597" endtime="20201030 18:29:43.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.637" endtime="20201030 18:29:43.922"></status>
</kw>
<msg timestamp="20201030 18:29:43.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.635" endtime="20201030 18:29:43.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020335764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020439194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:43.926" endtime="20201030 18:29:43.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.934" endtime="20201030 18:29:43.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.632" endtime="20201030 18:29:43.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.631" endtime="20201030 18:29:43.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:43.941" level="INFO">${RESULT} = [{'diff': 0.00010343000000000158}, {'diff': 0.00010304099999999816}, {'diff': 0.00010287500000000227}, {'diff': 0.00010284699999999966}, {'diff': 0.00010322200000000004}, {'diff': 0.000102806000000000...</msg>
<status status="PASS" starttime="20201030 18:29:43.938" endtime="20201030 18:29:43.941"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:43.949" level="INFO">${ACCURACY} = {'diff': [0.00010343000000000158, 0.00010304099999999816, 0.00010287500000000227, 0.00010284699999999966, 0.00010322200000000004, 0.00010280600000000042, 0.00010256900000000027, 0.00010348599999999986...</msg>
<status status="PASS" starttime="20201030 18:29:43.942" endtime="20201030 18:29:43.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.953" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 18:29:43.952" endtime="20201030 18:29:43.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:43.956" level="INFO">VALUE: [0.00010343000000000158, 0.00010304099999999816, 0.00010287500000000227, 0.00010284699999999966, 0.00010322200000000004, 0.00010280600000000042, 0.00010256900000000027, 0.00010348599999999986, 0.0001028749999999988, 0.00010288800000000237, 0.00010329099999999841, 0.00010267999999999736, 0.00010322200000000004, 0.00010299999999999893, 0.00010262500000000202, 0.00010299999999999893, 0.00010279199999999739, 0.00010307000000000024, 0.00010283300000000009, 0.00010254100000000113, 0.00010288899999999837, 0.0001026940000000004, 0.00010315300000000166, 0.00010309699999999991, 0.00010262499999999855, 0.00010345900000000019, 0.00010263899999999812, 0.00010345800000000072, 0.00010280500000000095, 0.00010329099999999841, 0.0001026940000000004, 0.00010347200000000029, 0.00010283300000000009, 0.00010324999999999918, 0.00010340300000000191, 0.0001031810000000008, 0.00010269499999999987, 0.00010347299999999976, 0.00010305499999999773, 0.0001030000000000024, 0.00010302699999999859, 0.00010275000000000215, 0.00010279199999999739, 0.0001030420000000011, 0.00010286099999999923, 0.0001031810000000008, 0.00010283399999999956, 0.00010293000000000108, 0.00010331900000000102, 0.0001025550000000007]</msg>
<status status="PASS" starttime="20201030 18:29:43.954" endtime="20201030 18:29:43.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.950" endtime="20201030 18:29:43.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:43.961" endtime="20201030 18:29:43.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.959" endtime="20201030 18:29:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.958" endtime="20201030 18:29:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.595" endtime="20201030 18:29:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.594" endtime="20201030 18:29:43.981"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:43.990" endtime="20201030 18:29:44.009"></status>
</kw>
<msg timestamp="20201030 18:29:44.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:43.989" endtime="20201030 18:29:44.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.010" endtime="20201030 18:29:44.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.013" endtime="20201030 18:29:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.986" endtime="20201030 18:29:44.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.984" endtime="20201030 18:29:44.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.022" endtime="20201030 18:29:44.310"></status>
</kw>
<msg timestamp="20201030 18:29:44.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.020" endtime="20201030 18:29:44.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019751139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.314" endtime="20201030 18:29:44.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.322" endtime="20201030 18:29:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.018" endtime="20201030 18:29:44.324"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.016" endtime="20201030 18:29:44.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.329" level="INFO">${RESULT} = [{'diff': 0.00010441700000000248}, {'diff': 0.00010433400000000106}, {'diff': 0.00010440299999999944}, {'diff': 0.00010398600000000036}, {'diff': 0.00010409700000000091}, {'diff': 0.000103847000000000...</msg>
<status status="PASS" starttime="20201030 18:29:44.325" endtime="20201030 18:29:44.329"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.333" level="INFO">${ACCURACY} = {'diff': [0.00010441700000000248, 0.00010433400000000106, 0.00010440299999999944, 0.00010398600000000036, 0.00010409700000000091, 0.00010384700000000066, 0.00010441699999999901, 0.00010441599999999954...</msg>
<status status="PASS" starttime="20201030 18:29:44.330" endtime="20201030 18:29:44.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.338" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.337" endtime="20201030 18:29:44.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.341" level="INFO">VALUE: [0.00010441700000000248, 0.00010433400000000106, 0.00010440299999999944, 0.00010398600000000036, 0.00010409700000000091, 0.00010384700000000066, 0.00010441699999999901, 0.00010441599999999954, 0.00010380599999999796, 0.00010380599999999796, 0.00010361099999999998, 0.0001043339999999976, 0.00010425000000000018, 0.00010408400000000081, 0.00010422200000000104, 0.00010441599999999954, 0.00010391699999999851, 0.00010441699999999901, 0.00010436100000000073, 0.00010427799999999932, 0.00010450000000000043, 0.00010390299999999894, 0.00010408300000000134, 0.00010415299999999919, 0.00010351300000000299, 0.00010402699999999959, 0.00010374999999999968, 0.00010388899999999937, 0.00010376399999999925, 0.00010430599999999846, 0.00010441699999999901, 0.00010366699999999826, 0.0001040420000000021, 0.00010398600000000036, 0.00010413899999999962, 0.00010370800000000097, 0.00010356900000000127, 0.00010433299999999812, 0.00010397300000000026, 0.00010443099999999858, 0.00010362499999999955, 0.00010352799999999857, 0.00010433299999999812, 0.00010430499999999898, 0.00010434700000000116, 0.00010416699999999876, 0.00010370800000000097, 0.00010416700000000223, 0.000103820000000001, 0.00010412500000000005]</msg>
<status status="PASS" starttime="20201030 18:29:44.339" endtime="20201030 18:29:44.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.334" endtime="20201030 18:29:44.342"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.346" endtime="20201030 18:29:44.365"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.344" endtime="20201030 18:29:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.343" endtime="20201030 18:29:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.982" endtime="20201030 18:29:44.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:43.982" endtime="20201030 18:29:44.367"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.375" endtime="20201030 18:29:44.396"></status>
</kw>
<msg timestamp="20201030 18:29:44.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.374" endtime="20201030 18:29:44.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.397" endtime="20201030 18:29:44.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.400" endtime="20201030 18:29:44.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.371" endtime="20201030 18:29:44.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.369" endtime="20201030 18:29:44.402"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.409" endtime="20201030 18:29:44.715"></status>
</kw>
<msg timestamp="20201030 18:29:44.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.407" endtime="20201030 18:29:44.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020673167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020778333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:44.719" endtime="20201030 18:29:44.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.727" endtime="20201030 18:29:44.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.405" endtime="20201030 18:29:44.729"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.403" endtime="20201030 18:29:44.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:44.734" level="INFO">${RESULT} = [{'diff': 0.00010516600000000029}, {'diff': 0.00010458300000000184}, {'diff': 0.00010534700000000216}, {'diff': 0.000104514}, {'diff': 0.00010479199999999939}, {'diff': 0.00010502800000000007}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:29:44.731" endtime="20201030 18:29:44.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:44.738" level="INFO">${ACCURACY} = {'diff': [0.00010516600000000029, 0.00010458300000000184, 0.00010534700000000216, 0.000104514, 0.00010479199999999939, 0.00010502800000000007, 0.00010484699999999819, 0.00010499999999999746, 0.0001046...</msg>
<status status="PASS" starttime="20201030 18:29:44.735" endtime="20201030 18:29:44.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.742" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 18:29:44.741" endtime="20201030 18:29:44.743"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:44.745" level="INFO">VALUE: [0.00010516600000000029, 0.00010458300000000184, 0.00010534700000000216, 0.000104514, 0.00010479199999999939, 0.00010502800000000007, 0.00010484699999999819, 0.00010499999999999746, 0.00010463800000000065, 0.00010498599999999789, 0.00010544500000000262, 0.00010548599999999839, 0.00010545800000000272, 0.00010483300000000209, 0.00010533400000000206, 0.00010538900000000087, 0.00010545899999999872, 0.00010536199999999774, 0.0001050559999999992, 0.0001046940000000024, 0.0001048750000000008, 0.00010516600000000029, 0.00010519399999999943, 0.00010463900000000012, 0.00010495899999999822, 0.00010509699999999844, 0.00010523599999999814, 0.00010529199999999989, 0.00010545799999999925, 0.00010475000000000068, 0.00010508300000000234, 0.00010522199999999857, 0.00010458299999999837, 0.00010526399999999728, 0.00010509699999999844, 0.00010472300000000101, 0.00010527800000000032, 0.00010517999999999986, 0.00010454099999999966, 0.00010450000000000043, 0.00010512500000000105, 0.00010444400000000215, 0.00010518099999999933, 0.00010534699999999869, 0.00010472199999999807, 0.00010547300000000176, 0.00010540300000000044, 0.00010454099999999966, 0.00010450000000000043, 0.00010523599999999814]</msg>
<status status="PASS" starttime="20201030 18:29:44.743" endtime="20201030 18:29:44.746"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.739" endtime="20201030 18:29:44.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.751" endtime="20201030 18:29:44.770"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.749" endtime="20201030 18:29:44.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.748" endtime="20201030 18:29:44.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.368" endtime="20201030 18:29:44.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.367" endtime="20201030 18:29:44.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:06.248" endtime="20201030 18:29:44.772"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.775" endtime="20201030 18:29:44.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.774" endtime="20201030 18:29:44.795"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.773" endtime="20201030 18:29:44.796"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:03.131" endtime="20201030 18:29:44.796" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:44.803" endtime="20201030 18:29:44.822"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.801" endtime="20201030 18:29:44.823"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:44.836" endtime="20201030 18:29:47.857"></status>
</kw>
<msg timestamp="20201030 18:29:47.858" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:44.834" endtime="20201030 18:29:47.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.860" endtime="20201030 18:29:47.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.870" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:29:47.866" endtime="20201030 18:29:47.870"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:44.832" endtime="20201030 18:29:47.872"></status>
</kw>
<status status="FAIL" starttime="20201030 18:29:44.829" endtime="20201030 18:29:47.873"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.828" endtime="20201030 18:29:47.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:29:47.881" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:29:47.880" endtime="20201030 18:29:47.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.875" endtime="20201030 18:29:47.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.827" endtime="20201030 18:29:47.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.827" endtime="20201030 18:29:47.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.884" endtime="20201030 18:29:47.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.825" endtime="20201030 18:29:47.889"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.823" endtime="20201030 18:29:47.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:44.800" endtime="20201030 18:29:47.890"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.912" endtime="20201030 18:29:47.938"></status>
</kw>
<msg timestamp="20201030 18:29:47.939" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.909" endtime="20201030 18:29:47.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:47.944" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:47.941" endtime="20201030 18:29:47.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.947" endtime="20201030 18:29:47.950"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.904" endtime="20201030 18:29:47.951"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.897" endtime="20201030 18:29:47.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:47.965" endtime="20201030 18:29:48.264"></status>
</kw>
<msg timestamp="20201030 18:29:48.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109406375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109412083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:47.962" endtime="20201030 18:29:48.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.109406375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.109412083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.268" endtime="20201030 18:29:48.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.276" endtime="20201030 18:29:48.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.957" endtime="20201030 18:29:48.278"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.953" endtime="20201030 18:29:48.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.283" level="INFO">${RESULT} = [{'diff': 5.708000000215208e-06}, {'diff': 6.055999999698969e-06}, {'diff': 6.084000000239342e-06}, {'diff': 5.721999999597216e-06}, {'diff': 5.721999999597216e-06}, {'diff': 6.069999999969156e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:48.280" endtime="20201030 18:29:48.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.288" level="INFO">${ACCURACY} = {'diff': [5.708000000215208e-06, 6.055999999698969e-06, 6.084000000239342e-06, 5.721999999597216e-06, 5.721999999597216e-06, 6.069999999969156e-06, 6.084000000239342e-06, 5.4309999999446745e-06, 6.084...</msg>
<status status="PASS" starttime="20201030 18:29:48.284" endtime="20201030 18:29:48.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.292" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.291" endtime="20201030 18:29:48.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.295" level="INFO">VALUE: [5.708000000215208e-06, 6.055999999698969e-06, 6.084000000239342e-06, 5.721999999597216e-06, 5.721999999597216e-06, 6.069999999969156e-06, 6.084000000239342e-06, 5.4309999999446745e-06, 6.084000000239342e-06, 5.374999999752106e-06, 5.389000000022293e-06, 5.40299999984839e-06, 5.708000000215208e-06, 6.068999999886415e-06, 5.389000000022293e-06, 5.708000000215208e-06, 6.068999999886415e-06, 5.375000000196195e-06, 6.0690000003305045e-06, 5.709000000297948e-06, 6.083000000156602e-06, 6.041999999872871e-06, 5.347999999738562e-06, 6.041999999872871e-06, 6.068999999886415e-06, 6.040999999790131e-06, 5.389000000022293e-06, 6.055000000060318e-06, 5.722000000041305e-06, 5.693999999945021e-06, 5.375000000196195e-06, 5.708999999853859e-06, 5.374999999752106e-06, 6.040999999790131e-06, 5.375000000196195e-06, 6.056000000143058e-06, 5.375000000196195e-06, 5.374999999752106e-06, 5.708000000215208e-06, 6.055000000060318e-06, 6.055999999698969e-06, 5.722000000041305e-06, 6.083999999795253e-06, 5.986000000124392e-06, 5.7230000001240455e-06, 6.069999999969156e-06, 5.375000000196195e-06, 5.389000000022293e-06, 6.069999999969156e-06, 5.735999999867403e-06]</msg>
<status status="PASS" starttime="20201030 18:29:48.293" endtime="20201030 18:29:48.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.289" endtime="20201030 18:29:48.296"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.299" endtime="20201030 18:29:48.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.298" endtime="20201030 18:29:48.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.297" endtime="20201030 18:29:48.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.893" endtime="20201030 18:29:48.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.892" endtime="20201030 18:29:48.320"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.329" endtime="20201030 18:29:48.344"></status>
</kw>
<msg timestamp="20201030 18:29:48.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.328" endtime="20201030 18:29:48.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.345" endtime="20201030 18:29:48.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.348" endtime="20201030 18:29:48.349"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.325" endtime="20201030 18:29:48.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.323" endtime="20201030 18:29:48.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.357" endtime="20201030 18:29:48.640"></status>
</kw>
<msg timestamp="20201030 18:29:48.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020035514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.355" endtime="20201030 18:29:48.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020028778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020035514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.644" endtime="20201030 18:29:48.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.653" endtime="20201030 18:29:48.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.353" endtime="20201030 18:29:48.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.351" endtime="20201030 18:29:48.655"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:48.659" level="INFO">${RESULT} = [{'diff': 6.736000000000242e-06}, {'diff': 6.388999999999007e-06}, {'diff': 7.054999999998868e-06}, {'diff': 6.389000000002476e-06}, {'diff': 7.0980000000005206e-06}, {'diff': 6.403000000002046e-06}, ...</msg>
<status status="PASS" starttime="20201030 18:29:48.656" endtime="20201030 18:29:48.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:48.665" level="INFO">${ACCURACY} = {'diff': [6.736000000000242e-06, 6.388999999999007e-06, 7.054999999998868e-06, 6.389000000002476e-06, 7.0980000000005206e-06, 6.403000000002046e-06, 7.068999999998438e-06, 6.4029999999985765e-06, 6.40...</msg>
<status status="PASS" starttime="20201030 18:29:48.660" endtime="20201030 18:29:48.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.670" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 18:29:48.669" endtime="20201030 18:29:48.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.673" level="INFO">VALUE: [6.736000000000242e-06, 6.388999999999007e-06, 7.054999999998868e-06, 6.389000000002476e-06, 7.0980000000005206e-06, 6.403000000002046e-06, 7.068999999998438e-06, 6.4029999999985765e-06, 6.4029999999985765e-06, 6.416999999998146e-06, 6.417000000001616e-06, 7.111000000000617e-06, 7.055999999998341e-06, 7.097000000001047e-06, 7.097000000001047e-06, 7.111000000000617e-06, 6.818999999998188e-06, 7.084000000000951e-06, 6.375000000002906e-06, 6.749999999999812e-06, 7.070000000001381e-06, 6.749999999999812e-06, 6.749999999999812e-06, 7.097000000001047e-06, 7.125000000000187e-06, 6.430999999997716e-06, 7.083000000001477e-06, 6.374999999999437e-06, 6.417000000001616e-06, 7.097000000001047e-06, 7.111000000000617e-06, 6.415999999998673e-06, 6.4029999999985765e-06, 6.708000000001102e-06, 7.068999999998438e-06, 6.374999999999437e-06, 6.415999999998673e-06, 7.097000000001047e-06, 7.111000000000617e-06, 6.749999999999812e-06, 6.388999999999007e-06, 7.084000000000951e-06, 6.415999999998673e-06, 6.403000000002046e-06, 6.790999999999048e-06, 6.736000000000242e-06, 6.401999999999103e-06, 6.416999999998146e-06, 6.415999999998673e-06, 6.749999999999812e-06]</msg>
<status status="PASS" starttime="20201030 18:29:48.671" endtime="20201030 18:29:48.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.666" endtime="20201030 18:29:48.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:48.678" endtime="20201030 18:29:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.676" endtime="20201030 18:29:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.675" endtime="20201030 18:29:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.321" endtime="20201030 18:29:48.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.321" endtime="20201030 18:29:48.699"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.708" endtime="20201030 18:29:48.724"></status>
</kw>
<msg timestamp="20201030 18:29:48.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.706" endtime="20201030 18:29:48.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:48.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:48.725" endtime="20201030 18:29:48.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.728" endtime="20201030 18:29:48.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.704" endtime="20201030 18:29:48.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.702" endtime="20201030 18:29:48.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:48.737" endtime="20201030 18:29:49.024"></status>
</kw>
<msg timestamp="20201030 18:29:49.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:48.735" endtime="20201030 18:29:49.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021162764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021169875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.029" endtime="20201030 18:29:49.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.037" endtime="20201030 18:29:49.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.733" endtime="20201030 18:29:49.039"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.731" endtime="20201030 18:29:49.039"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.043" level="INFO">${RESULT} = [{'diff': 7.111000000000617e-06}, {'diff': 7.444000000002282e-06}, {'diff': 7.777999999999952e-06}, {'diff': 7.735999999997772e-06}, {'diff': 7.777999999999952e-06}, {'diff': 7.445000000001756e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:49.040" endtime="20201030 18:29:49.044"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:49.048" level="INFO">${ACCURACY} = {'diff': [7.111000000000617e-06, 7.444000000002282e-06, 7.777999999999952e-06, 7.735999999997772e-06, 7.777999999999952e-06, 7.445000000001756e-06, 7.805999999999091e-06, 7.764000000000382e-06, 8.1390...</msg>
<status status="PASS" starttime="20201030 18:29:49.044" endtime="20201030 18:29:49.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.052" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 18:29:49.051" endtime="20201030 18:29:49.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.055" level="INFO">VALUE: [7.111000000000617e-06, 7.444000000002282e-06, 7.777999999999952e-06, 7.735999999997772e-06, 7.777999999999952e-06, 7.445000000001756e-06, 7.805999999999091e-06, 7.764000000000382e-06, 8.139000000000757e-06, 7.443999999998813e-06, 8.139000000000757e-06, 8.138999999997287e-06, 7.777999999999952e-06, 7.445000000001756e-06, 7.777000000000478e-06, 7.777999999999952e-06, 7.443999999998813e-06, 7.791999999999522e-06, 7.443999999998813e-06, 7.791999999999522e-06, 7.443999999998813e-06, 8.138999999997287e-06, 8.097999999998051e-06, 7.764000000000382e-06, 7.791000000000048e-06, 7.097000000001047e-06, 7.791999999999522e-06, 7.389000000000007e-06, 7.443999999998813e-06, 8.125000000001187e-06, 8.124999999997717e-06, 7.805999999999091e-06, 7.457999999998383e-06, 7.429999999999243e-06, 8.125000000001187e-06, 7.445000000001756e-06, 7.443999999998813e-06, 7.791999999999522e-06, 7.445000000001756e-06, 7.444999999998286e-06, 7.4169999999991465e-06, 7.458000000001852e-06, 7.735999999997772e-06, 8.125000000001187e-06, 7.764000000000382e-06, 7.375000000000437e-06, 7.791999999999522e-06, 8.068999999999438e-06, 8.125000000001187e-06, 8.125000000001187e-06]</msg>
<status status="PASS" starttime="20201030 18:29:49.053" endtime="20201030 18:29:49.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.049" endtime="20201030 18:29:49.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.060" endtime="20201030 18:29:49.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.058" endtime="20201030 18:29:49.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.057" endtime="20201030 18:29:49.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.700" endtime="20201030 18:29:49.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:48.699" endtime="20201030 18:29:49.080"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.090" endtime="20201030 18:29:49.105"></status>
</kw>
<msg timestamp="20201030 18:29:49.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.088" endtime="20201030 18:29:49.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.106" endtime="20201030 18:29:49.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.109" endtime="20201030 18:29:49.110"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.085" endtime="20201030 18:29:49.111"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.083" endtime="20201030 18:29:49.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.119" endtime="20201030 18:29:49.405"></status>
</kw>
<msg timestamp="20201030 18:29:49.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.116" endtime="20201030 18:29:49.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020489361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.409" endtime="20201030 18:29:49.417"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.417" endtime="20201030 18:29:49.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.114" endtime="20201030 18:29:49.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.112" endtime="20201030 18:29:49.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.424" level="INFO">${RESULT} = [{'diff': 8.485999999998523e-06}, {'diff': 8.806000000000092e-06}, {'diff': 9.167000000000897e-06}, {'diff': 8.472000000002422e-06}, {'diff': 8.472999999998426e-06}, {'diff': 9.166000000001423e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:49.421" endtime="20201030 18:29:49.424"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:49.428" level="INFO">${ACCURACY} = {'diff': [8.485999999998523e-06, 8.806000000000092e-06, 9.167000000000897e-06, 8.472000000002422e-06, 8.472999999998426e-06, 9.166000000001423e-06, 8.485999999998523e-06, 8.832999999999758e-06, 8.1390...</msg>
<status status="PASS" starttime="20201030 18:29:49.425" endtime="20201030 18:29:49.428"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.433" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 18:29:49.432" endtime="20201030 18:29:49.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.436" level="INFO">VALUE: [8.485999999998523e-06, 8.806000000000092e-06, 9.167000000000897e-06, 8.472000000002422e-06, 8.472999999998426e-06, 9.166000000001423e-06, 8.485999999998523e-06, 8.832999999999758e-06, 8.139000000000757e-06, 8.485999999998523e-06, 8.806000000000092e-06, 8.819000000000188e-06, 8.833000000003227e-06, 8.499999999998092e-06, 9.153000000001327e-06, 8.457999999999383e-06, 8.805000000000618e-06, 8.417000000000147e-06, 8.457999999999383e-06, 8.500000000001562e-06, 8.833999999999231e-06, 8.819000000000188e-06, 9.166000000001423e-06, 8.487000000001466e-06, 8.471999999998953e-06, 9.167000000000897e-06, 8.833999999999231e-06, 8.860999999998898e-06, 8.832999999999758e-06, 8.749999999998342e-06, 8.806000000000092e-06, 8.805000000000618e-06, 8.472000000002422e-06, 8.472000000002422e-06, 8.832999999999758e-06, 8.403000000000577e-06, 8.86200000000184e-06, 9.167000000000897e-06, 8.485999999998523e-06, 8.473000000001896e-06, 8.542000000000272e-06, 9.181000000000467e-06, 8.792000000000522e-06, 8.819999999999661e-06, 8.472999999998426e-06, 9.151999999998384e-06, 8.778000000000952e-06, 8.472000000002422e-06, 9.152999999997857e-06, 8.471999999998953e-06]</msg>
<status status="PASS" starttime="20201030 18:29:49.434" endtime="20201030 18:29:49.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.429" endtime="20201030 18:29:49.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.441" endtime="20201030 18:29:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.439" endtime="20201030 18:29:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.438" endtime="20201030 18:29:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.081" endtime="20201030 18:29:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.081" endtime="20201030 18:29:49.462"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.470" endtime="20201030 18:29:49.485"></status>
</kw>
<msg timestamp="20201030 18:29:49.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.469" endtime="20201030 18:29:49.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.487" endtime="20201030 18:29:49.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.489" endtime="20201030 18:29:49.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.466" endtime="20201030 18:29:49.491"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.464" endtime="20201030 18:29:49.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.498" endtime="20201030 18:29:49.784"></status>
</kw>
<msg timestamp="20201030 18:29:49.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.497" endtime="20201030 18:29:49.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019531208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.789" endtime="20201030 18:29:49.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.797" endtime="20201030 18:29:49.798"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.494" endtime="20201030 18:29:49.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.492" endtime="20201030 18:29:49.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:49.803" level="INFO">${RESULT} = [{'diff': 9.513999999998662e-06}, {'diff': 9.513999999998662e-06}, {'diff': 9.790999999998579e-06}, {'diff': 9.499999999999093e-06}, {'diff': 9.847000000000328e-06}, {'diff': 9.514000000002132e-06}, {...</msg>
<status status="PASS" starttime="20201030 18:29:49.800" endtime="20201030 18:29:49.804"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:49.809" level="INFO">${ACCURACY} = {'diff': [9.513999999998662e-06, 9.513999999998662e-06, 9.790999999998579e-06, 9.499999999999093e-06, 9.847000000000328e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.513999999998662e-06, 1.0179...</msg>
<status status="PASS" starttime="20201030 18:29:49.804" endtime="20201030 18:29:49.809"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.813" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 18:29:49.812" endtime="20201030 18:29:49.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.816" level="INFO">VALUE: [9.513999999998662e-06, 9.513999999998662e-06, 9.790999999998579e-06, 9.499999999999093e-06, 9.847000000000328e-06, 9.514000000002132e-06, 9.527999999998232e-06, 9.513999999998662e-06, 1.0179999999998524e-05, 9.847000000000328e-06, 9.166999999997427e-06, 9.846999999996858e-06, 9.512999999999189e-06, 9.528000000001702e-06, 9.499999999999093e-06, 9.499999999999093e-06, 9.180000000000993e-06, 9.528000000001702e-06, 9.874999999999468e-06, 9.834000000000231e-06, 9.860999999999898e-06, 9.471999999999953e-06, 9.860999999999898e-06, 9.874999999999468e-06, 9.514000000002132e-06, 9.889000000002507e-06, 1.0222000000000703e-05, 9.860999999999898e-06, 9.499999999999093e-06, 9.152000000001853e-06, 9.847000000000328e-06, 9.860999999999898e-06, 9.874999999999468e-06, 1.0221999999997233e-05, 9.499999999999093e-06, 9.542000000001272e-06, 9.513999999998662e-06, 9.195000000000036e-06, 1.0166999999998427e-05, 1.0222000000000703e-05, 9.513999999998662e-06, 9.860999999999898e-06, 1.0208000000001133e-05, 9.528000000001702e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.500000000002562e-06, 9.944000000001313e-06, 9.847000000000328e-06]</msg>
<status status="PASS" starttime="20201030 18:29:49.814" endtime="20201030 18:29:49.816"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.809" endtime="20201030 18:29:49.817"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:49.821" endtime="20201030 18:29:49.840"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.819" endtime="20201030 18:29:49.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.818" endtime="20201030 18:29:49.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.463" endtime="20201030 18:29:49.841"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.462" endtime="20201030 18:29:49.841"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.850" endtime="20201030 18:29:49.864"></status>
</kw>
<msg timestamp="20201030 18:29:49.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.848" endtime="20201030 18:29:49.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:49.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:49.866" endtime="20201030 18:29:49.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.868" endtime="20201030 18:29:49.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.846" endtime="20201030 18:29:49.870"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.844" endtime="20201030 18:29:49.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:49.877" endtime="20201030 18:29:50.163"></status>
</kw>
<msg timestamp="20201030 18:29:50.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:49.876" endtime="20201030 18:29:50.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020382417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020392958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.168" endtime="20201030 18:29:50.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.176" endtime="20201030 18:29:50.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.873" endtime="20201030 18:29:50.178"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.871" endtime="20201030 18:29:50.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.182" level="INFO">${RESULT} = [{'diff': 1.0540999999999329e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.1236000000001273e-05}, {'diff': 1.0166999999998427e-05}, {'diff': 1.0542000000002272e-05}, {'diff': 1.0138999999999287e-...</msg>
<status status="PASS" starttime="20201030 18:29:50.179" endtime="20201030 18:29:50.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:50.187" level="INFO">${ACCURACY} = {'diff': [1.0540999999999329e-05, 1.1249999999997373e-05, 1.1236000000001273e-05, 1.0166999999998427e-05, 1.0542000000002272e-05, 1.0138999999999287e-05, 1.0526999999999759e-05, 1.0889000000000038e-05...</msg>
<status status="PASS" starttime="20201030 18:29:50.183" endtime="20201030 18:29:50.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.191" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 18:29:50.190" endtime="20201030 18:29:50.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.194" level="INFO">VALUE: [1.0540999999999329e-05, 1.1249999999997373e-05, 1.1236000000001273e-05, 1.0166999999998427e-05, 1.0542000000002272e-05, 1.0138999999999287e-05, 1.0526999999999759e-05, 1.0889000000000038e-05, 1.0638999999999788e-05, 1.0208000000001133e-05, 1.0902000000000134e-05, 1.0583999999997512e-05, 1.0556000000001842e-05, 1.0903000000003077e-05, 1.1277000000000509e-05, 1.0264000000002882e-05, 1.1250000000000843e-05, 1.0972000000001453e-05, 1.1235999999997803e-05, 1.0556000000001842e-05, 1.0486000000000523e-05, 1.0500000000000093e-05, 1.0861000000000898e-05, 1.0555000000002368e-05, 1.0846999999997858e-05, 1.0554999999998899e-05, 1.0193999999998093e-05, 1.1207999999998663e-05, 1.0875000000000468e-05, 1.0875000000000468e-05, 1.1250000000000843e-05, 1.0888000000000564e-05, 1.0611000000000648e-05, 1.0209000000000606e-05, 1.0889000000000038e-05, 1.1305999999999122e-05, 1.0555999999998372e-05, 1.0556000000001842e-05, 1.0124999999999718e-05, 1.0208000000001133e-05, 1.0209000000000606e-05, 1.0209000000000606e-05, 1.0889000000000038e-05, 1.1194999999998567e-05, 1.0847999999997332e-05, 1.1223000000001176e-05, 1.0556000000001842e-05, 1.0597000000001078e-05, 1.0570000000001412e-05, 1.1236000000001273e-05]</msg>
<status status="PASS" starttime="20201030 18:29:50.192" endtime="20201030 18:29:50.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.187" endtime="20201030 18:29:50.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.199" endtime="20201030 18:29:50.218"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.197" endtime="20201030 18:29:50.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.196" endtime="20201030 18:29:50.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.842" endtime="20201030 18:29:50.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:49.842" endtime="20201030 18:29:50.219"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.228" endtime="20201030 18:29:50.245"></status>
</kw>
<msg timestamp="20201030 18:29:50.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.226" endtime="20201030 18:29:50.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.247" endtime="20201030 18:29:50.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.249" endtime="20201030 18:29:50.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.224" endtime="20201030 18:29:50.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.222" endtime="20201030 18:29:50.252"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.259" endtime="20201030 18:29:50.543"></status>
</kw>
<msg timestamp="20201030 18:29:50.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023232042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.257" endtime="20201030 18:29:50.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023232042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023243625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.548" endtime="20201030 18:29:50.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.556" endtime="20201030 18:29:50.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.254" endtime="20201030 18:29:50.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.253" endtime="20201030 18:29:50.559"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.563" level="INFO">${RESULT} = [{'diff': 1.1582999999999039e-05}, {'diff': 1.1945000000002787e-05}, {'diff': 1.1930999999999747e-05}, {'diff': 1.1917000000000177e-05}, {'diff': 1.1250000000000843e-05}, {'diff': 1.1277999999999982e-...</msg>
<status status="PASS" starttime="20201030 18:29:50.559" endtime="20201030 18:29:50.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:50.567" level="INFO">${ACCURACY} = {'diff': [1.1582999999999039e-05, 1.1945000000002787e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1875000000001468e-05, 1.227699999999804e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:50.564" endtime="20201030 18:29:50.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.571" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 18:29:50.570" endtime="20201030 18:29:50.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.574" level="INFO">VALUE: [1.1582999999999039e-05, 1.1945000000002787e-05, 1.1930999999999747e-05, 1.1917000000000177e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.1875000000001468e-05, 1.227699999999804e-05, 1.1236000000001273e-05, 1.1568999999999469e-05, 1.1221999999998233e-05, 1.1610999999998178e-05, 1.1249999999997373e-05, 1.1917000000000177e-05, 1.1250000000000843e-05, 1.1236000000001273e-05, 1.2250000000001843e-05, 1.1249999999997373e-05, 1.2264000000001413e-05, 1.1930999999999747e-05, 1.1597000000002078e-05, 1.1930000000000274e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.1943999999999844e-05, 1.1584000000001982e-05, 1.1930000000000274e-05, 1.1930999999999747e-05, 1.1597000000002078e-05, 1.1250000000000843e-05, 1.1583000000002508e-05, 1.1903000000000608e-05, 1.1930999999999747e-05, 1.1568999999999469e-05, 1.1568999999999469e-05, 1.1582999999999039e-05, 1.1209000000001607e-05, 1.1930000000000274e-05, 1.2278000000000983e-05, 1.1889000000001038e-05, 1.1915999999997234e-05, 1.2292000000000552e-05, 1.1930999999999747e-05, 1.1264000000000413e-05, 1.2264000000001413e-05, 1.1597000000002078e-05, 1.1582999999999039e-05, 1.2263000000001939e-05, 1.1582999999999039e-05, 1.1582999999999039e-05]</msg>
<status status="PASS" starttime="20201030 18:29:50.572" endtime="20201030 18:29:50.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.568" endtime="20201030 18:29:50.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.580" endtime="20201030 18:29:50.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.578" endtime="20201030 18:29:50.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.577" endtime="20201030 18:29:50.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.220" endtime="20201030 18:29:50.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.220" endtime="20201030 18:29:50.601"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.609" endtime="20201030 18:29:50.624"></status>
</kw>
<msg timestamp="20201030 18:29:50.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.608" endtime="20201030 18:29:50.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.627" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.626" endtime="20201030 18:29:50.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.628" endtime="20201030 18:29:50.630"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.605" endtime="20201030 18:29:50.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.603" endtime="20201030 18:29:50.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.638" endtime="20201030 18:29:50.923"></status>
</kw>
<msg timestamp="20201030 18:29:50.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.636" endtime="20201030 18:29:50.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.934" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019676264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019688931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:50.927" endtime="20201030 18:29:50.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.935" endtime="20201030 18:29:50.937"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.633" endtime="20201030 18:29:50.938"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.632" endtime="20201030 18:29:50.938"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:50.942" level="INFO">${RESULT} = [{'diff': 1.2667000000000928e-05}, {'diff': 1.2695000000000067e-05}, {'diff': 1.2985999999999553e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2985999999999553e-05}, {'diff': 1.2958000000000414e-...</msg>
<status status="PASS" starttime="20201030 18:29:50.939" endtime="20201030 18:29:50.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:50.947" level="INFO">${ACCURACY} = {'diff': [1.2667000000000928e-05, 1.2695000000000067e-05, 1.2985999999999553e-05, 1.2610999999999178e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2957999999996944e-05, 1.2625000000002218e-05...</msg>
<status status="PASS" starttime="20201030 18:29:50.943" endtime="20201030 18:29:50.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.952" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 18:29:50.951" endtime="20201030 18:29:50.952"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:50.954" level="INFO">VALUE: [1.2667000000000928e-05, 1.2695000000000067e-05, 1.2985999999999553e-05, 1.2610999999999178e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2957999999996944e-05, 1.2625000000002218e-05, 1.2624999999998748e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2612000000002122e-05, 1.2278000000000983e-05, 1.2930000000001274e-05, 1.2624999999998748e-05, 1.2277999999997513e-05, 1.229099999999761e-05, 1.2625000000002218e-05, 1.2263999999997943e-05, 1.3320000000000692e-05, 1.2264000000001413e-05, 1.2971999999999984e-05, 1.2610999999999178e-05, 1.2291999999997083e-05, 1.3306000000001122e-05, 1.3306000000001122e-05, 1.2610999999999178e-05, 1.2639000000001788e-05, 1.2958000000000414e-05, 1.2958999999999887e-05, 1.2624999999998748e-05, 1.3235999999999803e-05, 1.3360999999999928e-05, 1.2958999999999887e-05, 1.227699999999804e-05, 1.2278000000000983e-05, 1.3320000000000692e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2263999999997943e-05, 1.3027999999998263e-05, 1.2292000000000552e-05, 1.2972999999999457e-05, 1.2972999999999457e-05, 1.2611000000002648e-05, 1.2291000000001079e-05, 1.2638000000002314e-05, 1.2624999999998748e-05, 1.2624999999998748e-05, 1.3013999999998693e-05]</msg>
<status status="PASS" starttime="20201030 18:29:50.953" endtime="20201030 18:29:50.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.948" endtime="20201030 18:29:50.956"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:50.959" endtime="20201030 18:29:50.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.958" endtime="20201030 18:29:50.979"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.957" endtime="20201030 18:29:50.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.601" endtime="20201030 18:29:50.980"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.601" endtime="20201030 18:29:50.980"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:50.989" endtime="20201030 18:29:51.005"></status>
</kw>
<msg timestamp="20201030 18:29:51.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:50.987" endtime="20201030 18:29:51.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.007" endtime="20201030 18:29:51.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.009" endtime="20201030 18:29:51.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.984" endtime="20201030 18:29:51.011"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.982" endtime="20201030 18:29:51.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.018" endtime="20201030 18:29:51.305"></status>
</kw>
<msg timestamp="20201030 18:29:51.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020460319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.017" endtime="20201030 18:29:51.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020446292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020460319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.309" endtime="20201030 18:29:51.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.318" endtime="20201030 18:29:51.319"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.014" endtime="20201030 18:29:51.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.012" endtime="20201030 18:29:51.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.324" level="INFO">${RESULT} = [{'diff': 1.402699999999979e-05}, {'diff': 1.4042000000002303e-05}, {'diff': 1.4360999999997459e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.3306000000001122e-0...</msg>
<status status="PASS" starttime="20201030 18:29:51.321" endtime="20201030 18:29:51.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:51.328" level="INFO">${ACCURACY} = {'diff': [1.402699999999979e-05, 1.4042000000002303e-05, 1.4360999999997459e-05, 1.4013999999999693e-05, 1.4347000000001359e-05, 1.3306000000001122e-05, 1.3638000000003314e-05, 1.3986000000000554e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:51.325" endtime="20201030 18:29:51.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.333" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 18:29:51.332" endtime="20201030 18:29:51.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.335" level="INFO">VALUE: [1.402699999999979e-05, 1.4042000000002303e-05, 1.4360999999997459e-05, 1.4013999999999693e-05, 1.4347000000001359e-05, 1.3306000000001122e-05, 1.3638000000003314e-05, 1.3986000000000554e-05, 1.3680000000002024e-05, 1.3624999999999748e-05, 1.3334000000000262e-05, 1.4000000000000123e-05, 1.3667000000001928e-05, 1.4000000000000123e-05, 1.4013999999999693e-05, 1.3292000000001553e-05, 1.4348000000000832e-05, 1.4000000000000123e-05, 1.3624999999999748e-05, 1.4027999999999263e-05, 1.3653000000002358e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3666999999998458e-05, 1.3319000000001219e-05, 1.4000000000000123e-05, 1.331899999999775e-05, 1.3736999999999777e-05, 1.3235999999999803e-05, 1.3958000000001414e-05, 1.3305000000001649e-05, 1.3958000000001414e-05, 1.3652000000002884e-05, 1.3666999999998458e-05, 1.4000000000000123e-05, 1.333299999999732e-05, 1.3667000000001928e-05, 1.3681000000001498e-05, 1.3388999999999068e-05, 1.3986000000000554e-05, 1.3665999999998985e-05, 1.4000000000000123e-05, 1.3292000000001553e-05, 1.3638999999999318e-05, 1.4013999999999693e-05, 1.3319999999997223e-05, 1.3319999999997223e-05, 1.3305999999997653e-05, 1.3652999999998888e-05, 1.4000000000000123e-05]</msg>
<status status="PASS" starttime="20201030 18:29:51.334" endtime="20201030 18:29:51.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.329" endtime="20201030 18:29:51.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.340" endtime="20201030 18:29:51.360"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.339" endtime="20201030 18:29:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.338" endtime="20201030 18:29:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.981" endtime="20201030 18:29:51.361"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:50.980" endtime="20201030 18:29:51.361"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.370" endtime="20201030 18:29:51.386"></status>
</kw>
<msg timestamp="20201030 18:29:51.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.368" endtime="20201030 18:29:51.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.388" endtime="20201030 18:29:51.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.390" endtime="20201030 18:29:51.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.366" endtime="20201030 18:29:51.392"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.364" endtime="20201030 18:29:51.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.399" endtime="20201030 18:29:51.685"></status>
</kw>
<msg timestamp="20201030 18:29:51.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02053875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:51.398" endtime="20201030 18:29:51.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02053875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020553444, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:51.689" endtime="20201030 18:29:51.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.697" endtime="20201030 18:29:51.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.395" endtime="20201030 18:29:51.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.393" endtime="20201030 18:29:51.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:51.704" level="INFO">${RESULT} = [{'diff': 1.4693999999999124e-05}, {'diff': 1.4361000000000929e-05}, {'diff': 1.4347000000001359e-05}, {'diff': 1.4707999999998694e-05}, {'diff': 1.5055999999999403e-05}, {'diff': 1.4361000000000929e-...</msg>
<status status="PASS" starttime="20201030 18:29:51.701" endtime="20201030 18:29:51.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:51.709" level="INFO">${ACCURACY} = {'diff': [1.4693999999999124e-05, 1.4361000000000929e-05, 1.4347000000001359e-05, 1.4707999999998694e-05, 1.5055999999999403e-05, 1.4361000000000929e-05, 1.5028000000000263e-05, 1.536099999999846e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:51.705" endtime="20201030 18:29:51.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.714" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 18:29:51.712" endtime="20201030 18:29:51.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.716" level="INFO">VALUE: [1.4693999999999124e-05, 1.4361000000000929e-05, 1.4347000000001359e-05, 1.4707999999998694e-05, 1.5055999999999403e-05, 1.4361000000000929e-05, 1.5028000000000263e-05, 1.536099999999846e-05, 1.5041999999999833e-05, 1.4985999999998084e-05, 1.504100000000036e-05, 1.5069999999998973e-05, 1.4348000000000832e-05, 1.4388000000000595e-05, 1.4694000000002594e-05, 1.4375000000000498e-05, 1.5013999999997224e-05, 1.4750000000000874e-05, 1.5014000000000693e-05, 1.5014000000000693e-05, 1.4347999999997363e-05, 1.4389000000000068e-05, 1.5041999999999833e-05, 1.5028000000000263e-05, 1.508299999999907e-05, 1.4348000000000832e-05, 1.4694000000002594e-05, 1.5055999999999403e-05, 1.504100000000036e-05, 1.5014000000000693e-05, 1.4347000000001359e-05, 1.4362000000000402e-05, 1.427700000000004e-05, 1.5041999999999833e-05, 1.504100000000036e-05, 1.4693999999999124e-05, 1.433299999999832e-05, 1.4665999999999985e-05, 1.434699999999789e-05, 1.4679999999999555e-05, 1.505499999999993e-05, 1.5028000000000263e-05, 1.537499999999803e-05, 1.4333999999997793e-05, 1.5041999999999833e-05, 1.4347000000001359e-05, 1.5028000000000263e-05, 1.4320000000001692e-05, 1.5028000000000263e-05, 1.4721999999998264e-05]</msg>
<status status="PASS" starttime="20201030 18:29:51.715" endtime="20201030 18:29:51.718"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.710" endtime="20201030 18:29:51.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:51.723" endtime="20201030 18:29:51.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.721" endtime="20201030 18:29:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.720" endtime="20201030 18:29:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.362" endtime="20201030 18:29:51.743"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.362" endtime="20201030 18:29:51.743"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.752" endtime="20201030 18:29:51.767"></status>
</kw>
<msg timestamp="20201030 18:29:51.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.751" endtime="20201030 18:29:51.768"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:51.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:51.769" endtime="20201030 18:29:51.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.771" endtime="20201030 18:29:51.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.748" endtime="20201030 18:29:51.773"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.746" endtime="20201030 18:29:51.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:51.780" endtime="20201030 18:29:52.066"></status>
</kw>
<msg timestamp="20201030 18:29:52.069" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:51.779" endtime="20201030 18:29:52.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019874333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.070" endtime="20201030 18:29:52.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.078" endtime="20201030 18:29:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.776" endtime="20201030 18:29:52.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.774" endtime="20201030 18:29:52.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.084" level="INFO">${RESULT} = [{'diff': 1.605500000000093e-05}, {'diff': 1.5723000000002207e-05}, {'diff': 1.5735999999998834e-05}, {'diff': 1.538900000000107e-05}, {'diff': 1.613899999999835e-05}, {'diff': 1.612499999999878e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:52.081" endtime="20201030 18:29:52.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:52.090" level="INFO">${ACCURACY} = {'diff': [1.605500000000093e-05, 1.5723000000002207e-05, 1.5735999999998834e-05, 1.538900000000107e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.5736000000002304e-05, 1.6083999999999543e-05, 1....</msg>
<status status="PASS" starttime="20201030 18:29:52.085" endtime="20201030 18:29:52.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.094" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 18:29:52.093" endtime="20201030 18:29:52.094"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.097" level="INFO">VALUE: [1.605500000000093e-05, 1.5723000000002207e-05, 1.5735999999998834e-05, 1.538900000000107e-05, 1.613899999999835e-05, 1.612499999999878e-05, 1.5736000000002304e-05, 1.6083999999999543e-05, 1.5778000000001013e-05, 1.536100000000193e-05, 1.5722999999998738e-05, 1.608300000000007e-05, 1.5402000000001165e-05, 1.5721999999999264e-05, 1.5444999999999348e-05, 1.608300000000007e-05, 1.6069999999999973e-05, 1.60690000000005e-05, 1.53750000000015e-05, 1.538900000000107e-05, 1.537499999999803e-05, 1.612500000000225e-05, 1.60690000000005e-05, 1.566700000000046e-05, 1.608300000000007e-05, 1.609699999999964e-05, 1.538900000000107e-05, 1.60690000000005e-05, 1.5777999999997544e-05, 1.5707999999999694e-05, 1.5736000000002304e-05, 1.6069999999999973e-05, 1.6083999999999543e-05, 1.60690000000005e-05, 1.540300000000064e-05, 1.5735999999998834e-05, 1.5764000000001444e-05, 1.538900000000107e-05, 1.5749999999998404e-05, 1.60690000000005e-05, 1.5723000000002207e-05, 1.5444999999999348e-05, 1.602700000000179e-05, 1.541699999999674e-05, 1.53750000000015e-05, 1.6069999999999973e-05, 1.538900000000107e-05, 1.608300000000007e-05, 1.5735999999998834e-05, 1.6083999999999543e-05]</msg>
<status status="PASS" starttime="20201030 18:29:52.095" endtime="20201030 18:29:52.098"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.091" endtime="20201030 18:29:52.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.102" endtime="20201030 18:29:52.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.100" endtime="20201030 18:29:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.099" endtime="20201030 18:29:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.744" endtime="20201030 18:29:52.122"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:51.744" endtime="20201030 18:29:52.122"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.133" endtime="20201030 18:29:52.148"></status>
</kw>
<msg timestamp="20201030 18:29:52.148" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.132" endtime="20201030 18:29:52.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.150" endtime="20201030 18:29:52.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.152" endtime="20201030 18:29:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.129" endtime="20201030 18:29:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.126" endtime="20201030 18:29:52.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.161" endtime="20201030 18:29:52.448"></status>
</kw>
<msg timestamp="20201030 18:29:52.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.160" endtime="20201030 18:29:52.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021716431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021732861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.453" endtime="20201030 18:29:52.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.463" endtime="20201030 18:29:52.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.157" endtime="20201030 18:29:52.466"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.155" endtime="20201030 18:29:52.467"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.471" level="INFO">${RESULT} = [{'diff': 1.6429999999997835e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.6445000000000348e-05}, {'diff': 1.6764000000002444e-05}, {'diff': 1.6763999999998974e-05}, {'diff': 1.6443999999997405e-0...</msg>
<status status="PASS" starttime="20201030 18:29:52.468" endtime="20201030 18:29:52.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:52.477" level="INFO">${ACCURACY} = {'diff': [1.6429999999997835e-05, 1.711100000000021e-05, 1.6445000000000348e-05, 1.6764000000002444e-05, 1.6763999999998974e-05, 1.6443999999997405e-05, 1.677699999999907e-05, 1.641699999999774e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:29:52.473" endtime="20201030 18:29:52.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.481" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 18:29:52.480" endtime="20201030 18:29:52.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.484" level="INFO">VALUE: [1.6429999999997835e-05, 1.711100000000021e-05, 1.6445000000000348e-05, 1.6764000000002444e-05, 1.6763999999998974e-05, 1.6443999999997405e-05, 1.677699999999907e-05, 1.641699999999774e-05, 1.638900000000207e-05, 1.709700000000064e-05, 1.63750000000025e-05, 1.711100000000021e-05, 1.711100000000021e-05, 1.681900000000125e-05, 1.6430000000001305e-05, 1.677699999999907e-05, 1.6708000000000695e-05, 1.6764000000002444e-05, 1.641699999999774e-05, 1.711100000000021e-05, 1.6763999999998974e-05, 1.6415999999998265e-05, 1.6416000000001735e-05, 1.6777999999998544e-05, 1.6749999999999404e-05, 1.643099999999731e-05, 1.6764000000002444e-05, 1.6763999999998974e-05, 1.641700000000121e-05, 1.712499999999978e-05, 1.6763999999998974e-05, 1.6764000000002444e-05, 1.6708000000000695e-05, 1.6763999999998974e-05, 1.711100000000021e-05, 1.6429999999997835e-05, 1.711100000000021e-05, 1.6778000000002014e-05, 1.712499999999978e-05, 1.679099999999864e-05, 1.641700000000121e-05, 1.711100000000021e-05, 1.683300000000082e-05, 1.684700000000039e-05, 1.6764000000002444e-05, 1.711100000000021e-05, 1.643100000000078e-05, 1.6416000000001735e-05, 1.711100000000021e-05, 1.677699999999907e-05]</msg>
<status status="PASS" starttime="20201030 18:29:52.482" endtime="20201030 18:29:52.484"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.478" endtime="20201030 18:29:52.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.489" endtime="20201030 18:29:52.508"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.487" endtime="20201030 18:29:52.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.486" endtime="20201030 18:29:52.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.123" endtime="20201030 18:29:52.509"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.123" endtime="20201030 18:29:52.509"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.518" endtime="20201030 18:29:52.534"></status>
</kw>
<msg timestamp="20201030 18:29:52.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.516" endtime="20201030 18:29:52.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.536" endtime="20201030 18:29:52.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.538" endtime="20201030 18:29:52.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.514" endtime="20201030 18:29:52.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.512" endtime="20201030 18:29:52.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.547" endtime="20201030 18:29:52.834"></status>
</kw>
<msg timestamp="20201030 18:29:52.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.546" endtime="20201030 18:29:52.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020741056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.839" endtime="20201030 18:29:52.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.847" endtime="20201030 18:29:52.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.543" endtime="20201030 18:29:52.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.541" endtime="20201030 18:29:52.850"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:52.853" level="INFO">${RESULT} = [{'diff': 1.780499999999921e-05}, {'diff': 1.7819999999998254e-05}, {'diff': 1.7458000000001445e-05}, {'diff': 1.783300000000182e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.7459000000000918e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:52.850" endtime="20201030 18:29:52.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:52.858" level="INFO">${ACCURACY} = {'diff': [1.780499999999921e-05, 1.7819999999998254e-05, 1.7458000000001445e-05, 1.783300000000182e-05, 1.787500000000053e-05, 1.7459000000000918e-05, 1.7458000000001445e-05, 1.7805999999998684e-05, 1...</msg>
<status status="PASS" starttime="20201030 18:29:52.854" endtime="20201030 18:29:52.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.862" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 18:29:52.861" endtime="20201030 18:29:52.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.865" level="INFO">VALUE: [1.780499999999921e-05, 1.7819999999998254e-05, 1.7458000000001445e-05, 1.783300000000182e-05, 1.787500000000053e-05, 1.7459000000000918e-05, 1.7458000000001445e-05, 1.7805999999998684e-05, 1.815299999999992e-05, 1.711100000000021e-05, 1.7791999999999114e-05, 1.7473000000000488e-05, 1.7805999999998684e-05, 1.780499999999921e-05, 1.780499999999921e-05, 1.780499999999921e-05, 1.7070000000000973e-05, 1.7805999999998684e-05, 1.8166000000000015e-05, 1.779099999999964e-05, 1.7763999999999974e-05, 1.815299999999992e-05, 1.8166000000000015e-05, 1.745899999999745e-05, 1.7444000000001875e-05, 1.7444000000001875e-05, 1.7111999999999683e-05, 1.7458000000001445e-05, 1.7429999999998835e-05, 1.806899999999903e-05, 1.7444000000001875e-05, 1.813900000000035e-05, 1.7541999999998864e-05, 1.815299999999992e-05, 1.7792000000002584e-05, 1.7819999999998254e-05, 1.779099999999964e-05, 1.7513999999999724e-05, 1.7415999999999265e-05, 1.711100000000021e-05, 1.7459000000000918e-05, 1.7805999999998684e-05, 1.813900000000035e-05, 1.7471999999997545e-05, 1.7444000000001875e-05, 1.7749999999996935e-05, 1.7472000000001014e-05, 1.705500000000193e-05, 1.7429999999998835e-05, 1.7444000000001875e-05]</msg>
<status status="PASS" starttime="20201030 18:29:52.863" endtime="20201030 18:29:52.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.859" endtime="20201030 18:29:52.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:52.871" endtime="20201030 18:29:52.890"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.869" endtime="20201030 18:29:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.868" endtime="20201030 18:29:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.510" endtime="20201030 18:29:52.891"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.510" endtime="20201030 18:29:52.891"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.900" endtime="20201030 18:29:52.915"></status>
</kw>
<msg timestamp="20201030 18:29:52.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.899" endtime="20201030 18:29:52.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:52.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:52.917" endtime="20201030 18:29:52.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.919" endtime="20201030 18:29:52.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.896" endtime="20201030 18:29:52.921"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.894" endtime="20201030 18:29:52.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:52.928" endtime="20201030 18:29:53.235"></status>
</kw>
<msg timestamp="20201030 18:29:53.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:52.927" endtime="20201030 18:29:53.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019830792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019849639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.239" endtime="20201030 18:29:53.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.248" endtime="20201030 18:29:53.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.924" endtime="20201030 18:29:53.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.922" endtime="20201030 18:29:53.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.254" level="INFO">${RESULT} = [{'diff': 1.884699999999892e-05}, {'diff': 1.8500000000001154e-05}, {'diff': 1.884699999999892e-05}, {'diff': 1.881899999999978e-05}, {'diff': 1.913900000000135e-05}, {'diff': 1.884699999999892e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:53.251" endtime="20201030 18:29:53.254"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:53.259" level="INFO">${ACCURACY} = {'diff': [1.884699999999892e-05, 1.8500000000001154e-05, 1.884699999999892e-05, 1.881899999999978e-05, 1.913900000000135e-05, 1.884699999999892e-05, 1.8471999999998545e-05, 1.815299999999992e-05, 1.88...</msg>
<status status="PASS" starttime="20201030 18:29:53.255" endtime="20201030 18:29:53.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.264" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 18:29:53.263" endtime="20201030 18:29:53.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.266" level="INFO">VALUE: [1.884699999999892e-05, 1.8500000000001154e-05, 1.884699999999892e-05, 1.881899999999978e-05, 1.913900000000135e-05, 1.884699999999892e-05, 1.8471999999998545e-05, 1.815299999999992e-05, 1.8833999999998824e-05, 1.8487000000001058e-05, 1.813900000000035e-05, 1.909700000000264e-05, 1.8486000000001584e-05, 1.883299999999935e-05, 1.8833999999998824e-05, 1.8207999999998725e-05, 1.9180000000000585e-05, 1.813900000000035e-05, 1.918100000000006e-05, 1.911100000000221e-05, 1.9166000000001016e-05, 1.918100000000006e-05, 1.8819999999999254e-05, 1.9165999999997546e-05, 1.8833999999998824e-05, 1.918099999999659e-05, 1.9180000000000585e-05, 1.8485999999998115e-05, 1.816699999999949e-05, 1.918100000000006e-05, 1.8500000000001154e-05, 1.9180000000000585e-05, 1.9222000000002765e-05, 1.919499999999963e-05, 1.8486000000001584e-05, 1.8486000000001584e-05, 1.8819999999999254e-05, 1.912499999999831e-05, 1.884699999999892e-05, 1.8487000000001058e-05, 1.881899999999978e-05, 1.884700000000239e-05, 1.9194000000000155e-05, 1.811099999999774e-05, 1.847299999999802e-05, 1.9194000000000155e-05, 1.916700000000049e-05, 1.918100000000006e-05, 1.848699999999759e-05, 1.9193999999996686e-05]</msg>
<status status="PASS" starttime="20201030 18:29:53.265" endtime="20201030 18:29:53.271"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.260" endtime="20201030 18:29:53.271"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.275" endtime="20201030 18:29:53.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.274" endtime="20201030 18:29:53.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.272" endtime="20201030 18:29:53.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.892" endtime="20201030 18:29:53.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:52.892" endtime="20201030 18:29:53.296"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.305" endtime="20201030 18:29:53.320"></status>
</kw>
<msg timestamp="20201030 18:29:53.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.303" endtime="20201030 18:29:53.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.322" endtime="20201030 18:29:53.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.324" endtime="20201030 18:29:53.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.301" endtime="20201030 18:29:53.326"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.299" endtime="20201030 18:29:53.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.333" endtime="20201030 18:29:53.621"></status>
</kw>
<msg timestamp="20201030 18:29:53.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.332" endtime="20201030 18:29:53.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019687986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.625" endtime="20201030 18:29:53.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.634" endtime="20201030 18:29:53.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.329" endtime="20201030 18:29:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.328" endtime="20201030 18:29:53.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:53.640" level="INFO">${RESULT} = [{'diff': 2.0249999999999435e-05}, {'diff': 1.987499999999906e-05}, {'diff': 1.952699999999835e-05}, {'diff': 1.986099999999949e-05}, {'diff': 1.987499999999906e-05}, {'diff': 1.954100000000139e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:53.637" endtime="20201030 18:29:53.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:53.644" level="INFO">${ACCURACY} = {'diff': [2.0249999999999435e-05, 1.987499999999906e-05, 1.952699999999835e-05, 1.986099999999949e-05, 1.987499999999906e-05, 1.954100000000139e-05, 2.0208000000000725e-05, 1.9485999999999115e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 18:29:53.641" endtime="20201030 18:29:53.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.649" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 18:29:53.648" endtime="20201030 18:29:53.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.652" level="INFO">VALUE: [2.0249999999999435e-05, 1.987499999999906e-05, 1.952699999999835e-05, 1.986099999999949e-05, 1.987499999999906e-05, 1.954100000000139e-05, 2.0208000000000725e-05, 1.9485999999999115e-05, 1.987499999999906e-05, 1.9944000000000905e-05, 1.9847999999999394e-05, 1.9180000000000585e-05, 1.986099999999949e-05, 1.9485999999999115e-05, 1.9514000000001724e-05, 1.9916000000001766e-05, 1.9541999999997395e-05, 1.918100000000006e-05, 1.986099999999949e-05, 1.9499999999998685e-05, 1.9528000000001294e-05, 1.986099999999949e-05, 1.986100000000296e-05, 1.9542000000000864e-05, 2.0208000000000725e-05, 1.988899999999863e-05, 1.9541999999997395e-05, 2.0208000000000725e-05, 2.0278000000002044e-05, 1.986100000000296e-05, 1.987499999999906e-05, 1.99029999999982e-05, 1.987500000000253e-05, 1.9513999999998255e-05, 1.9542000000000864e-05, 2.0208000000000725e-05, 1.987500000000253e-05, 1.987499999999906e-05, 1.9527999999997825e-05, 1.988899999999863e-05, 1.987500000000253e-05, 1.952699999999835e-05, 1.986099999999949e-05, 1.9861999999998964e-05, 1.9513999999998255e-05, 1.9888000000002626e-05, 1.98890000000021e-05, 1.986099999999949e-05, 1.9527999999997825e-05, 1.9528000000001294e-05]</msg>
<status status="PASS" starttime="20201030 18:29:53.650" endtime="20201030 18:29:53.652"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.645" endtime="20201030 18:29:53.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:53.656" endtime="20201030 18:29:53.676"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.655" endtime="20201030 18:29:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.654" endtime="20201030 18:29:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.297" endtime="20201030 18:29:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.296" endtime="20201030 18:29:53.678"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.687" endtime="20201030 18:29:53.705"></status>
</kw>
<msg timestamp="20201030 18:29:53.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.685" endtime="20201030 18:29:53.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:53.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:53.707" endtime="20201030 18:29:53.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.709" endtime="20201030 18:29:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.682" endtime="20201030 18:29:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.680" endtime="20201030 18:29:53.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:53.718" endtime="20201030 18:29:54.004"></status>
</kw>
<msg timestamp="20201030 18:29:54.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:53.717" endtime="20201030 18:29:54.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023639542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023660111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.008" endtime="20201030 18:29:54.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.016" endtime="20201030 18:29:54.018"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.714" endtime="20201030 18:29:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.712" endtime="20201030 18:29:54.019"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.023" level="INFO">${RESULT} = [{'diff': 2.056900000000153e-05}, {'diff': 2.055500000000196e-05}, {'diff': 2.056900000000153e-05}, {'diff': 2.0584000000000574e-05}, {'diff': 2.055500000000196e-05}, {'diff': 2.088899999999963e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:54.020" endtime="20201030 18:29:54.023"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:54.027" level="INFO">${ACCURACY} = {'diff': [2.056900000000153e-05, 2.055500000000196e-05, 2.056900000000153e-05, 2.0584000000000574e-05, 2.055500000000196e-05, 2.088899999999963e-05, 2.1250000000000435e-05, 2.09029999999992e-05, 2.095...</msg>
<status status="PASS" starttime="20201030 18:29:54.024" endtime="20201030 18:29:54.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.032" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 18:29:54.031" endtime="20201030 18:29:54.032"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.034" level="INFO">VALUE: [2.056900000000153e-05, 2.055500000000196e-05, 2.056900000000153e-05, 2.0584000000000574e-05, 2.055500000000196e-05, 2.088899999999963e-05, 2.1250000000000435e-05, 2.09029999999992e-05, 2.0958000000001475e-05, 2.09029999999992e-05, 2.1262999999997062e-05, 2.0556000000001434e-05, 2.1264000000000005e-05, 2.0916000000002766e-05, 2.055499999999849e-05, 2.1250000000000435e-05, 2.09029999999992e-05, 2.056899999999806e-05, 2.0901999999999726e-05, 2.1236000000000865e-05, 2.09029999999992e-05, 2.0208000000000725e-05, 2.09029999999992e-05, 2.0207999999997256e-05, 2.0902000000003196e-05, 2.055499999999849e-05, 2.088899999999963e-05, 2.0222000000000295e-05, 2.1235999999997396e-05, 2.091699999999877e-05, 2.12770000000001e-05, 2.088899999999963e-05, 2.088899999999963e-05, 2.1264000000000005e-05, 2.091699999999877e-05, 2.088899999999963e-05, 2.0901999999999726e-05, 2.09029999999992e-05, 2.0556000000001434e-05, 2.09029999999992e-05, 2.0569999999997535e-05, 2.088899999999963e-05, 2.055500000000196e-05, 2.1264000000000005e-05, 2.052699999999935e-05, 2.0208000000000725e-05, 2.1250000000000435e-05, 2.1235999999997396e-05, 2.09029999999992e-05, 2.0570000000001004e-05]</msg>
<status status="PASS" starttime="20201030 18:29:54.033" endtime="20201030 18:29:54.036"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.028" endtime="20201030 18:29:54.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.040" endtime="20201030 18:29:54.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.038" endtime="20201030 18:29:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.037" endtime="20201030 18:29:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.679" endtime="20201030 18:29:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:53.678" endtime="20201030 18:29:54.061"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.069" endtime="20201030 18:29:54.086"></status>
</kw>
<msg timestamp="20201030 18:29:54.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.068" endtime="20201030 18:29:54.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.087" endtime="20201030 18:29:54.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.090" endtime="20201030 18:29:54.092"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.065" endtime="20201030 18:29:54.093"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.063" endtime="20201030 18:29:54.093"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.100" endtime="20201030 18:29:54.387"></status>
</kw>
<msg timestamp="20201030 18:29:54.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.098" endtime="20201030 18:29:54.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020465819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.391" endtime="20201030 18:29:54.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.400" endtime="20201030 18:29:54.401"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.095" endtime="20201030 18:29:54.402"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.094" endtime="20201030 18:29:54.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.406" level="INFO">${RESULT} = [{'diff': 2.1916000000000296e-05}, {'diff': 2.197300000000152e-05}, {'diff': 2.19030000000002e-05}, {'diff': 2.1943999999999436e-05}, {'diff': 2.1180000000002586e-05}, {'diff': 2.161100000000124e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:54.403" endtime="20201030 18:29:54.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:54.411" level="INFO">${ACCURACY} = {'diff': [2.1916000000000296e-05, 2.197300000000152e-05, 2.19030000000002e-05, 2.1943999999999436e-05, 2.1180000000002586e-05, 2.161100000000124e-05, 2.1943999999999436e-05, 2.162500000000081e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 18:29:54.407" endtime="20201030 18:29:54.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.416" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 18:29:54.415" endtime="20201030 18:29:54.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.418" level="INFO">VALUE: [2.1916000000000296e-05, 2.197300000000152e-05, 2.19030000000002e-05, 2.1943999999999436e-05, 2.1180000000002586e-05, 2.161100000000124e-05, 2.1943999999999436e-05, 2.162500000000081e-05, 2.161099999999777e-05, 2.159700000000167e-05, 2.1597999999997675e-05, 2.1264000000000005e-05, 2.1250000000000435e-05, 2.2207999999999256e-05, 2.231899999999981e-05, 2.187500000000106e-05, 2.2235999999998396e-05, 2.1958000000002476e-05, 2.1249999999996966e-05, 2.159700000000167e-05, 2.194500000000238e-05, 2.161099999999777e-05, 2.1583999999998105e-05, 2.2278000000000575e-05, 2.1943999999999436e-05, 2.1598000000001144e-05, 2.1250000000000435e-05, 2.165299999999995e-05, 2.1943999999999436e-05, 2.2292000000000145e-05, 2.159700000000167e-05, 2.1986000000001615e-05, 2.15969999999982e-05, 2.1569999999998535e-05, 2.194499999999891e-05, 2.159700000000167e-05, 2.194499999999891e-05, 2.2278000000000575e-05, 2.159700000000167e-05, 2.1971999999998576e-05, 2.1250000000000435e-05, 2.1943999999999436e-05, 2.229100000000067e-05, 2.193100000000281e-05, 2.22770000000011e-05, 2.2292000000000145e-05, 2.194499999999891e-05, 2.194499999999891e-05, 2.194499999999891e-05, 2.1929999999999866e-05]</msg>
<status status="PASS" starttime="20201030 18:29:54.417" endtime="20201030 18:29:54.419"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.412" endtime="20201030 18:29:54.420"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.423" endtime="20201030 18:29:54.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.422" endtime="20201030 18:29:54.443"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.421" endtime="20201030 18:29:54.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.062" endtime="20201030 18:29:54.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.061" endtime="20201030 18:29:54.444"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.453" endtime="20201030 18:29:54.467"></status>
</kw>
<msg timestamp="20201030 18:29:54.468" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.451" endtime="20201030 18:29:54.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.470" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.469" endtime="20201030 18:29:54.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.471" endtime="20201030 18:29:54.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.449" endtime="20201030 18:29:54.473"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.447" endtime="20201030 18:29:54.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.480" endtime="20201030 18:29:54.768"></status>
</kw>
<msg timestamp="20201030 18:29:54.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.479" endtime="20201030 18:29:54.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019606833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.772" endtime="20201030 18:29:54.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.780" endtime="20201030 18:29:54.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.476" endtime="20201030 18:29:54.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.474" endtime="20201030 18:29:54.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:54.787" level="INFO">${RESULT} = [{'diff': 2.3306000000000715e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.3320000000000285e-05}, {'diff': 2.3333999999999855e-05}, {'diff': 2.2971999999999576e-05...</msg>
<status status="PASS" starttime="20201030 18:29:54.784" endtime="20201030 18:29:54.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:54.791" level="INFO">${ACCURACY} = {'diff': [2.3306000000000715e-05, 2.262500000000181e-05, 2.263900000000138e-05, 2.3320000000000285e-05, 2.3333999999999855e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.266700000000052e-05, 2...</msg>
<status status="PASS" starttime="20201030 18:29:54.788" endtime="20201030 18:29:54.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.796" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 18:29:54.795" endtime="20201030 18:29:54.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.798" level="INFO">VALUE: [2.3306000000000715e-05, 2.262500000000181e-05, 2.263900000000138e-05, 2.3320000000000285e-05, 2.3333999999999855e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.266700000000052e-05, 2.261099999999877e-05, 2.2985999999999146e-05, 2.265300000000095e-05, 2.297299999999905e-05, 2.263900000000138e-05, 2.2999999999998716e-05, 2.2999999999998716e-05, 2.2985999999999146e-05, 2.229100000000067e-05, 2.295899999999948e-05, 2.2971999999999576e-05, 2.2292000000000145e-05, 2.297299999999905e-05, 2.331900000000081e-05, 2.262499999999834e-05, 2.331900000000081e-05, 2.2638000000001907e-05, 2.2958000000000006e-05, 2.29030000000012e-05, 2.2637999999998437e-05, 2.298700000000209e-05, 2.263899999999791e-05, 2.262499999999834e-05, 2.263900000000138e-05, 2.295900000000295e-05, 2.2305999999999715e-05, 2.2971999999999576e-05, 2.295899999999948e-05, 2.3320000000000285e-05, 2.2292000000000145e-05, 2.2986000000002615e-05, 2.2971999999999576e-05, 2.2680000000000616e-05, 2.2263999999997536e-05, 2.2694000000000186e-05, 2.2999999999998716e-05, 2.269500000000313e-05, 2.2971999999999576e-05, 2.2958000000000006e-05, 2.262499999999834e-05, 2.262499999999834e-05, 2.2264000000001005e-05]</msg>
<status status="PASS" starttime="20201030 18:29:54.797" endtime="20201030 18:29:54.799"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.792" endtime="20201030 18:29:54.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:54.803" endtime="20201030 18:29:54.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.802" endtime="20201030 18:29:54.823"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.801" endtime="20201030 18:29:54.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.445" endtime="20201030 18:29:54.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.444" endtime="20201030 18:29:54.824"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.833" endtime="20201030 18:29:54.848"></status>
</kw>
<msg timestamp="20201030 18:29:54.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.831" endtime="20201030 18:29:54.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:54.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:54.850" endtime="20201030 18:29:54.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.852" endtime="20201030 18:29:54.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.829" endtime="20201030 18:29:54.854"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.827" endtime="20201030 18:29:54.855"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:54.861" endtime="20201030 18:29:55.147"></status>
</kw>
<msg timestamp="20201030 18:29:55.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020634708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:54.859" endtime="20201030 18:29:55.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020634708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.153" endtime="20201030 18:29:55.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.163" endtime="20201030 18:29:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.857" endtime="20201030 18:29:55.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.855" endtime="20201030 18:29:55.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.173" level="INFO">${RESULT} = [{'diff': 2.336099999999952e-05}, {'diff': 2.4014000000002755e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.3999999999999716e-05}, {'diff': 2.334699999999995e-05}, {'diff': 2.366700000000152e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:55.169" endtime="20201030 18:29:55.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:55.177" level="INFO">${ACCURACY} = {'diff': [2.336099999999952e-05, 2.4014000000002755e-05, 2.437500000000009e-05, 2.3999999999999716e-05, 2.334699999999995e-05, 2.366700000000152e-05, 2.330500000000124e-05, 2.4013999999999286e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:29:55.174" endtime="20201030 18:29:55.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.182" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 18:29:55.181" endtime="20201030 18:29:55.182"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.184" level="INFO">VALUE: [2.336099999999952e-05, 2.4014000000002755e-05, 2.437500000000009e-05, 2.3999999999999716e-05, 2.334699999999995e-05, 2.366700000000152e-05, 2.330500000000124e-05, 2.4013999999999286e-05, 2.4042000000001895e-05, 2.3999999999999716e-05, 2.368099999999762e-05, 2.3666000000002047e-05, 2.4027999999998856e-05, 2.3986000000000146e-05, 2.366699999999805e-05, 2.3986000000000146e-05, 2.366700000000152e-05, 2.366700000000152e-05, 2.334699999999995e-05, 2.397300000000005e-05, 2.3306000000000715e-05, 2.366699999999805e-05, 2.362499999999934e-05, 2.4027999999998856e-05, 2.4028000000002325e-05, 2.3666000000002047e-05, 2.336099999999952e-05, 2.436100000000052e-05, 2.3318999999997342e-05, 2.368099999999762e-05, 2.330500000000124e-05, 2.3306000000000715e-05, 2.366700000000152e-05, 2.3680000000001616e-05, 2.366700000000152e-05, 2.4040999999998952e-05, 2.434700000000095e-05, 2.3320000000000285e-05, 2.4013999999999286e-05, 2.395900000000048e-05, 2.336099999999952e-05, 2.4013999999999286e-05, 2.4014000000002755e-05, 2.3320000000000285e-05, 2.3999999999999716e-05, 2.4028000000002325e-05, 2.436099999999705e-05, 2.37229999999998e-05, 2.3999999999999716e-05, 2.4068999999998092e-05]</msg>
<status status="PASS" starttime="20201030 18:29:55.183" endtime="20201030 18:29:55.186"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.178" endtime="20201030 18:29:55.187"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.190" endtime="20201030 18:29:55.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.189" endtime="20201030 18:29:55.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.188" endtime="20201030 18:29:55.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.825" endtime="20201030 18:29:55.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:54.824" endtime="20201030 18:29:55.211"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.220" endtime="20201030 18:29:55.237"></status>
</kw>
<msg timestamp="20201030 18:29:55.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.218" endtime="20201030 18:29:55.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.238" endtime="20201030 18:29:55.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.241" endtime="20201030 18:29:55.242"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.216" endtime="20201030 18:29:55.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.214" endtime="20201030 18:29:55.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.250" endtime="20201030 18:29:55.535"></status>
</kw>
<msg timestamp="20201030 18:29:55.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.248" endtime="20201030 18:29:55.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020663778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.539" endtime="20201030 18:29:55.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.547" endtime="20201030 18:29:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.246" endtime="20201030 18:29:55.549"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.244" endtime="20201030 18:29:55.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.554" level="INFO">${RESULT} = [{'diff': 2.470900000000123e-05}, {'diff': 2.540300000000023e-05}, {'diff': 2.470900000000123e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.5068999999999092e-05}, {'diff': 2.4722000000001326e-05},...</msg>
<status status="PASS" starttime="20201030 18:29:55.551" endtime="20201030 18:29:55.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:55.559" level="INFO">${ACCURACY} = {'diff': [2.470900000000123e-05, 2.540300000000023e-05, 2.470900000000123e-05, 2.438899999999966e-05, 2.5068999999999092e-05, 2.4722000000001326e-05, 2.5056000000002465e-05, 2.436100000000052e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 18:29:55.555" endtime="20201030 18:29:55.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.563" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 18:29:55.562" endtime="20201030 18:29:55.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.566" level="INFO">VALUE: [2.470900000000123e-05, 2.540300000000023e-05, 2.470900000000123e-05, 2.438899999999966e-05, 2.5068999999999092e-05, 2.4722000000001326e-05, 2.5056000000002465e-05, 2.436100000000052e-05, 2.4722000000001326e-05, 2.5068999999999092e-05, 2.465299999999948e-05, 2.4708000000001756e-05, 2.4332999999997912e-05, 2.5042000000002895e-05, 2.4707999999998287e-05, 2.4387999999996718e-05, 2.4721999999997857e-05, 2.436099999999705e-05, 2.436100000000052e-05, 2.5098000000001175e-05, 2.5055999999998996e-05, 2.469500000000166e-05, 2.436099999999705e-05, 2.5041999999999426e-05, 2.469499999999819e-05, 2.438899999999966e-05, 2.5070000000002035e-05, 2.4277999999999106e-05, 2.437500000000009e-05, 2.5040999999999952e-05, 2.436100000000052e-05, 2.468099999999862e-05, 2.5040999999999952e-05, 2.4722000000001326e-05, 2.4707999999998287e-05, 2.5056000000002465e-05, 2.540300000000023e-05, 2.5068999999999092e-05, 2.470899999999776e-05, 2.4361999999999995e-05, 2.436100000000052e-05, 2.431900000000181e-05, 2.436100000000052e-05, 2.4708000000001756e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.5070000000002035e-05, 2.436100000000052e-05, 2.468100000000209e-05, 2.5027999999999856e-05]</msg>
<status status="PASS" starttime="20201030 18:29:55.564" endtime="20201030 18:29:55.567"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.560" endtime="20201030 18:29:55.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.571" endtime="20201030 18:29:55.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.569" endtime="20201030 18:29:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.568" endtime="20201030 18:29:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.212" endtime="20201030 18:29:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.211" endtime="20201030 18:29:55.592"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.600" endtime="20201030 18:29:55.617"></status>
</kw>
<msg timestamp="20201030 18:29:55.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.599" endtime="20201030 18:29:55.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.619" endtime="20201030 18:29:55.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.621" endtime="20201030 18:29:55.623"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.596" endtime="20201030 18:29:55.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.594" endtime="20201030 18:29:55.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.630" endtime="20201030 18:29:55.917"></status>
</kw>
<msg timestamp="20201030 18:29:55.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.629" endtime="20201030 18:29:55.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020642986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:55.921" endtime="20201030 18:29:55.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.932" endtime="20201030 18:29:55.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.626" endtime="20201030 18:29:55.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.625" endtime="20201030 18:29:55.936"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:55.941" level="INFO">${RESULT} = [{'diff': 2.5750000000001466e-05}, {'diff': 2.5722000000002326e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.6096999999999232e-05}, {'diff': 2.5750000000001466e-05}, {'diff': 2.540300000000023e-0...</msg>
<status status="PASS" starttime="20201030 18:29:55.937" endtime="20201030 18:29:55.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:55.947" level="INFO">${ACCURACY} = {'diff': [2.5750000000001466e-05, 2.5722000000002326e-05, 2.5764000000001036e-05, 2.6096999999999232e-05, 2.5750000000001466e-05, 2.540300000000023e-05, 2.6166000000001077e-05, 2.5721999999998857e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:55.943" endtime="20201030 18:29:55.948"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.954" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 18:29:55.952" endtime="20201030 18:29:55.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:55.957" level="INFO">VALUE: [2.5750000000001466e-05, 2.5722000000002326e-05, 2.5764000000001036e-05, 2.6096999999999232e-05, 2.5750000000001466e-05, 2.540300000000023e-05, 2.6166000000001077e-05, 2.5721999999998857e-05, 2.6069000000000092e-05, 2.5387999999997718e-05, 2.538900000000066e-05, 2.540299999999676e-05, 2.6096999999999232e-05, 2.5735999999998427e-05, 2.608300000000313e-05, 2.6084000000002605e-05, 2.54169999999998e-05, 2.5735999999998427e-05, 2.538900000000066e-05, 2.5735999999998427e-05, 2.5764000000001036e-05, 2.6069000000000092e-05, 2.540300000000023e-05, 2.5735999999998427e-05, 2.5721999999998857e-05, 2.6124999999998372e-05, 2.6082999999999662e-05, 2.6096999999999232e-05, 2.6082999999999662e-05, 2.573700000000137e-05, 2.538900000000066e-05, 2.6082999999999662e-05, 2.538900000000066e-05, 2.6083999999999136e-05, 2.5736000000001896e-05, 2.537500000000109e-05, 2.5750000000001466e-05, 2.570900000000223e-05, 2.5750000000001466e-05, 2.6096999999999232e-05, 2.538900000000066e-05, 2.60970000000027e-05, 2.573700000000137e-05, 2.568099999999962e-05, 2.6055000000000522e-05, 2.5763999999997567e-05, 2.6069000000000092e-05, 2.5750000000001466e-05, 2.60970000000027e-05, 2.573700000000137e-05]</msg>
<status status="PASS" starttime="20201030 18:29:55.955" endtime="20201030 18:29:55.958"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.949" endtime="20201030 18:29:55.959"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:55.962" endtime="20201030 18:29:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.961" endtime="20201030 18:29:55.982"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.959" endtime="20201030 18:29:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.592" endtime="20201030 18:29:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.592" endtime="20201030 18:29:55.983"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:55.992" endtime="20201030 18:29:56.008"></status>
</kw>
<msg timestamp="20201030 18:29:56.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:55.990" endtime="20201030 18:29:56.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.010" endtime="20201030 18:29:56.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.012" endtime="20201030 18:29:56.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.988" endtime="20201030 18:29:56.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.985" endtime="20201030 18:29:56.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.021" endtime="20201030 18:29:56.306"></status>
</kw>
<msg timestamp="20201030 18:29:56.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:56.020" endtime="20201030 18:29:56.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02077975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020806875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:29:56.310" endtime="20201030 18:29:56.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.318" endtime="20201030 18:29:56.320"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.017" endtime="20201030 18:29:56.321"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.016" endtime="20201030 18:29:56.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.325" level="INFO">${RESULT} = [{'diff': 2.7124999999999372e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.6792000000001176e-05}, {'diff': 2.715299999999851e-05}, {'diff': 2.6764000000002036e-05}, {'diff': 2.7110999999999802e-0...</msg>
<status status="PASS" starttime="20201030 18:29:56.322" endtime="20201030 18:29:56.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:56.329" level="INFO">${ACCURACY} = {'diff': [2.7124999999999372e-05, 2.6458000000000037e-05, 2.6792000000001176e-05, 2.715299999999851e-05, 2.6764000000002036e-05, 2.7110999999999802e-05, 2.6764000000002036e-05, 2.716700000000155e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:56.326" endtime="20201030 18:29:56.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.334" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 18:29:56.333" endtime="20201030 18:29:56.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.336" level="INFO">VALUE: [2.7124999999999372e-05, 2.6458000000000037e-05, 2.6792000000001176e-05, 2.715299999999851e-05, 2.6764000000002036e-05, 2.7110999999999802e-05, 2.6764000000002036e-05, 2.716700000000155e-05, 2.6777999999998137e-05, 2.713900000000241e-05, 2.6430000000000897e-05, 2.64309999999969e-05, 2.7097999999999706e-05, 2.6430000000000897e-05, 2.6777999999998137e-05, 2.7124999999999372e-05, 2.6764000000002036e-05, 2.7110999999999802e-05, 2.6778000000001606e-05, 2.6792000000001176e-05, 2.6778000000001606e-05, 2.6777000000002132e-05, 2.6485999999999177e-05, 2.6778000000001606e-05, 2.7097000000000232e-05, 2.7110999999999802e-05, 2.7152000000002507e-05, 2.6778000000001606e-05, 2.643100000000037e-05, 2.6791999999997707e-05, 2.6429999999997428e-05, 2.6763999999998567e-05, 2.7124999999999372e-05, 2.6762999999999093e-05, 2.713900000000241e-05, 2.6776999999998663e-05, 2.643100000000037e-05, 2.6778000000001606e-05, 2.7124999999999372e-05, 2.6763999999998567e-05, 2.6778000000001606e-05, 2.6792000000001176e-05, 2.6790999999998233e-05, 2.6430000000000897e-05, 2.6764000000002036e-05, 2.641699999999733e-05, 2.6458000000000037e-05, 2.6778000000001606e-05, 2.6762999999999093e-05, 2.643100000000037e-05]</msg>
<status status="PASS" starttime="20201030 18:29:56.335" endtime="20201030 18:29:56.338"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.330" endtime="20201030 18:29:56.339"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.342" endtime="20201030 18:29:56.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.341" endtime="20201030 18:29:56.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.340" endtime="20201030 18:29:56.362"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.984" endtime="20201030 18:29:56.363"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:55.983" endtime="20201030 18:29:56.363"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.372" endtime="20201030 18:29:56.387"></status>
</kw>
<msg timestamp="20201030 18:29:56.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.370" endtime="20201030 18:29:56.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.389" endtime="20201030 18:29:56.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.391" endtime="20201030 18:29:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.367" endtime="20201030 18:29:56.393"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.365" endtime="20201030 18:29:56.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.400" endtime="20201030 18:29:56.685"></status>
</kw>
<msg timestamp="20201030 18:29:56.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.399" endtime="20201030 18:29:56.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019900264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019928417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.689" endtime="20201030 18:29:56.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.697" endtime="20201030 18:29:56.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.396" endtime="20201030 18:29:56.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.394" endtime="20201030 18:29:56.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:56.704" level="INFO">${RESULT} = [{'diff': 2.8152999999999512e-05}, {'diff': 2.7805000000002272e-05}, {'diff': 2.7834000000000886e-05}, {'diff': 2.816699999999908e-05}, {'diff': 2.7819999999997846e-05}, {'diff': 2.7486000000000177e-0...</msg>
<status status="PASS" starttime="20201030 18:29:56.701" endtime="20201030 18:29:56.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:56.709" level="INFO">${ACCURACY} = {'diff': [2.8152999999999512e-05, 2.7805000000002272e-05, 2.7834000000000886e-05, 2.816699999999908e-05, 2.7819999999997846e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.7819999999997846e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:56.705" endtime="20201030 18:29:56.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.713" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 18:29:56.712" endtime="20201030 18:29:56.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.716" level="INFO">VALUE: [2.8152999999999512e-05, 2.7805000000002272e-05, 2.7834000000000886e-05, 2.816699999999908e-05, 2.7819999999997846e-05, 2.7486000000000177e-05, 2.7499999999999747e-05, 2.7819999999997846e-05, 2.7179999999998178e-05, 2.7111999999999276e-05, 2.7832999999997943e-05, 2.7832999999997943e-05, 2.7804999999998803e-05, 2.7834000000000886e-05, 2.7861000000000552e-05, 2.8152000000000038e-05, 2.7443999999997998e-05, 2.745899999999704e-05, 2.7457999999997568e-05, 2.7458000000001037e-05, 2.7804999999998803e-05, 2.7832999999997943e-05, 2.7804999999998803e-05, 2.7486000000000177e-05, 2.7777000000003133e-05, 2.7820000000001316e-05, 2.8180000000002647e-05, 2.7486000000000177e-05, 2.8083000000001662e-05, 2.7820000000001316e-05, 2.7444000000001467e-05, 2.8193999999998748e-05, 2.712500000000284e-05, 2.8152000000000038e-05, 2.8152999999999512e-05, 2.7820000000001316e-05, 2.7472000000000607e-05, 2.7486000000000177e-05, 2.7486000000000177e-05, 2.7820000000001316e-05, 2.7486000000000177e-05, 2.816699999999908e-05, 2.7847000000000982e-05, 2.8138999999999942e-05, 2.8235999999997458e-05, 2.7472000000000607e-05, 2.7472000000000607e-05, 2.813900000000341e-05, 2.7888999999999692e-05, 2.8125000000000372e-05]</msg>
<status status="PASS" starttime="20201030 18:29:56.715" endtime="20201030 18:29:56.717"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.710" endtime="20201030 18:29:56.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:56.721" endtime="20201030 18:29:56.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.719" endtime="20201030 18:29:56.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.718" endtime="20201030 18:29:56.741"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.364" endtime="20201030 18:29:56.742"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.363" endtime="20201030 18:29:56.742"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.750" endtime="20201030 18:29:56.765"></status>
</kw>
<msg timestamp="20201030 18:29:56.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.749" endtime="20201030 18:29:56.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:56.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:56.767" endtime="20201030 18:29:56.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.769" endtime="20201030 18:29:56.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.746" endtime="20201030 18:29:56.771"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.744" endtime="20201030 18:29:56.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:56.778" endtime="20201030 18:29:57.065"></status>
</kw>
<msg timestamp="20201030 18:29:57.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:56.777" endtime="20201030 18:29:57.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019761542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019790389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.069" endtime="20201030 18:29:57.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.078" endtime="20201030 18:29:57.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.774" endtime="20201030 18:29:57.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.772" endtime="20201030 18:29:57.080"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.084" level="INFO">${RESULT} = [{'diff': 2.8846999999998513e-05}, {'diff': 2.8875000000001122e-05}, {'diff': 2.8833999999998416e-05}, {'diff': 2.9167000000000082e-05}, {'diff': 2.8832999999998943e-05}, {'diff': 2.919499999999922e-0...</msg>
<status status="PASS" starttime="20201030 18:29:57.081" endtime="20201030 18:29:57.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:57.089" level="INFO">${ACCURACY} = {'diff': [2.8846999999998513e-05, 2.8875000000001122e-05, 2.8833999999998416e-05, 2.9167000000000082e-05, 2.8832999999998943e-05, 2.919499999999922e-05, 2.8514000000000317e-05, 2.818099999999865e-05, ...</msg>
<status status="PASS" starttime="20201030 18:29:57.085" endtime="20201030 18:29:57.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.093" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 18:29:57.092" endtime="20201030 18:29:57.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.095" level="INFO">VALUE: [2.8846999999998513e-05, 2.8875000000001122e-05, 2.8833999999998416e-05, 2.9167000000000082e-05, 2.8832999999998943e-05, 2.919499999999922e-05, 2.8514000000000317e-05, 2.818099999999865e-05, 2.8847000000001982e-05, 2.8860999999998083e-05, 2.8847000000001982e-05, 2.8514000000000317e-05, 2.9194000000003217e-05, 2.8152000000000038e-05, 2.8875000000001122e-05, 2.8138999999999942e-05, 2.8500000000000747e-05, 2.8485999999997708e-05, 2.8846999999998513e-05, 2.8486000000001177e-05, 2.9166000000000608e-05, 2.8514000000000317e-05, 2.8542000000002926e-05, 2.8846999999998513e-05, 2.8486000000001177e-05, 2.8500000000000747e-05, 2.8846999999998513e-05, 2.8486000000001177e-05, 2.920900000000226e-05, 2.8486000000001177e-05, 2.816699999999908e-05, 2.919499999999922e-05, 2.8847999999997986e-05, 2.8514000000000317e-05, 2.9193999999999748e-05, 2.920900000000226e-05, 2.8846999999998513e-05, 2.8527999999999887e-05, 2.8568999999999123e-05, 2.8875000000001122e-05, 2.8514000000000317e-05, 2.8818999999999373e-05, 2.919499999999922e-05, 2.8847000000001982e-05, 2.9180000000000178e-05, 2.919500000000269e-05, 2.8861000000001552e-05, 2.8207999999998318e-05, 2.8874999999997653e-05, 2.8832999999998943e-05]</msg>
<status status="PASS" starttime="20201030 18:29:57.094" endtime="20201030 18:29:57.096"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.089" endtime="20201030 18:29:57.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.101" endtime="20201030 18:29:57.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.099" endtime="20201030 18:29:57.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.098" endtime="20201030 18:29:57.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.743" endtime="20201030 18:29:57.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:56.742" endtime="20201030 18:29:57.122"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.130" endtime="20201030 18:29:57.150"></status>
</kw>
<msg timestamp="20201030 18:29:57.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.129" endtime="20201030 18:29:57.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.152" endtime="20201030 18:29:57.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.154" endtime="20201030 18:29:57.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.126" endtime="20201030 18:29:57.156"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.124" endtime="20201030 18:29:57.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.163" endtime="20201030 18:29:57.449"></status>
</kw>
<msg timestamp="20201030 18:29:57.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.162" endtime="20201030 18:29:57.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023063264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023092806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.453" endtime="20201030 18:29:57.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.461" endtime="20201030 18:29:57.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.159" endtime="20201030 18:29:57.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.157" endtime="20201030 18:29:57.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.468" level="INFO">${RESULT} = [{'diff': 2.9542000000000457e-05}, {'diff': 2.9541000000000983e-05}, {'diff': 2.920899999999879e-05}, {'diff': 2.9888999999998223e-05}, {'diff': 2.9542000000000457e-05}, {'diff': 2.9528000000000887e-0...</msg>
<status status="PASS" starttime="20201030 18:29:57.465" endtime="20201030 18:29:57.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:57.472" level="INFO">${ACCURACY} = {'diff': [2.9542000000000457e-05, 2.9541000000000983e-05, 2.920899999999879e-05, 2.9888999999998223e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9889000000001692e-05, 2.9528000000000887e-05,...</msg>
<status status="PASS" starttime="20201030 18:29:57.469" endtime="20201030 18:29:57.472"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.477" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 18:29:57.476" endtime="20201030 18:29:57.477"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.479" level="INFO">VALUE: [2.9542000000000457e-05, 2.9541000000000983e-05, 2.920899999999879e-05, 2.9888999999998223e-05, 2.9542000000000457e-05, 2.9528000000000887e-05, 2.9889000000001692e-05, 2.9528000000000887e-05, 2.9819000000000373e-05, 2.9542000000000457e-05, 2.9499999999998278e-05, 2.9527999999997417e-05, 2.9541999999996987e-05, 2.9542000000000457e-05, 2.9903000000001262e-05, 3.0235999999999458e-05, 2.9180000000000178e-05, 2.9527999999997417e-05, 2.9540999999997514e-05, 2.9528000000000887e-05, 3.0263999999998598e-05, 3.0250000000002497e-05, 2.9889000000001692e-05, 2.9874999999998653e-05, 2.9888999999998223e-05, 3.0235999999999458e-05, 2.919499999999922e-05, 2.9903000000001262e-05, 2.9569000000000123e-05, 3.0221999999999888e-05, 2.9542000000000457e-05, 2.9874999999998653e-05, 2.920899999999879e-05, 2.9180000000000178e-05, 2.9556000000000027e-05, 2.9860999999999083e-05, 2.918100000000312e-05, 3.0222000000003357e-05, 2.9541000000000983e-05, 2.9540999999997514e-05, 2.9194000000003217e-05, 2.9541000000000983e-05, 2.9526999999997944e-05, 3.0235999999999458e-05, 3.022299999999936e-05, 2.9569999999999597e-05, 2.9542000000000457e-05, 2.9874999999998653e-05, 2.920899999999879e-05, 2.9541000000000983e-05]</msg>
<status status="PASS" starttime="20201030 18:29:57.478" endtime="20201030 18:29:57.481"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.473" endtime="20201030 18:29:57.481"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.485" endtime="20201030 18:29:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.484" endtime="20201030 18:29:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.482" endtime="20201030 18:29:57.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.123" endtime="20201030 18:29:57.506"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.122" endtime="20201030 18:29:57.506"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.514" endtime="20201030 18:29:57.530"></status>
</kw>
<msg timestamp="20201030 18:29:57.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.513" endtime="20201030 18:29:57.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.531" endtime="20201030 18:29:57.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.534" endtime="20201030 18:29:57.535"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.510" endtime="20201030 18:29:57.536"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.508" endtime="20201030 18:29:57.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.543" endtime="20201030 18:29:57.828"></status>
</kw>
<msg timestamp="20201030 18:29:57.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.541" endtime="20201030 18:29:57.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.840" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019639667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019669889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.833" endtime="20201030 18:29:57.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.841" endtime="20201030 18:29:57.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.539" endtime="20201030 18:29:57.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.537" endtime="20201030 18:29:57.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:57.847" level="INFO">${RESULT} = [{'diff': 3.0221999999999888e-05}, {'diff': 3.091700000000183e-05}, {'diff': 3.091599999999889e-05}, {'diff': 3.09440000000015e-05}, {'diff': 3.12639999999996e-05}, {'diff': 3.0208000000000318e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:29:57.844" endtime="20201030 18:29:57.848"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:57.852" level="INFO">${ACCURACY} = {'diff': [3.0221999999999888e-05, 3.091700000000183e-05, 3.091599999999889e-05, 3.09440000000015e-05, 3.12639999999996e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.063899999999897e-05, 3.125...</msg>
<status status="PASS" starttime="20201030 18:29:57.848" endtime="20201030 18:29:57.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.857" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 18:29:57.856" endtime="20201030 18:29:57.857"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.859" level="INFO">VALUE: [3.0221999999999888e-05, 3.091700000000183e-05, 3.091599999999889e-05, 3.09440000000015e-05, 3.12639999999996e-05, 3.0208000000000318e-05, 3.0221999999999888e-05, 3.063899999999897e-05, 3.125000000000003e-05, 3.058300000000069e-05, 3.093099999999793e-05, 3.05700000000006e-05, 3.12639999999996e-05, 3.0554999999998084e-05, 3.058300000000069e-05, 3.09440000000015e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 3.0250000000002497e-05, 3.056900000000112e-05, 3.0263999999998598e-05, 3.0499999999999278e-05, 3.097200000000064e-05, 3.0249999999999028e-05, 3.091599999999889e-05, 3.093000000000193e-05, 3.093000000000193e-05, 3.120799999999785e-05, 3.059700000000026e-05, 3.0568999999997654e-05, 3.058300000000069e-05, 3.093099999999793e-05, 3.091699999999836e-05, 3.058300000000069e-05, 3.05700000000006e-05, 3.091600000000236e-05, 3.0584000000000167e-05, 3.05700000000006e-05, 3.091700000000183e-05, 3.056999999999713e-05, 3.0499999999999278e-05, 3.09310000000014e-05, 3.1263000000000124e-05, 3.0584000000000167e-05, 3.0235999999999458e-05, 3.09310000000014e-05, 3.12639999999996e-05, 3.0568999999997654e-05, 3.09440000000015e-05, 3.091700000000183e-05]</msg>
<status status="PASS" starttime="20201030 18:29:57.858" endtime="20201030 18:29:57.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.853" endtime="20201030 18:29:57.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:57.864" endtime="20201030 18:29:57.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.863" endtime="20201030 18:29:57.884"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.862" endtime="20201030 18:29:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.507" endtime="20201030 18:29:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.506" endtime="20201030 18:29:57.885"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.894" endtime="20201030 18:29:57.908"></status>
</kw>
<msg timestamp="20201030 18:29:57.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.892" endtime="20201030 18:29:57.909"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:57.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:57.910" endtime="20201030 18:29:57.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.912" endtime="20201030 18:29:57.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.890" endtime="20201030 18:29:57.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.888" endtime="20201030 18:29:57.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:57.921" endtime="20201030 18:29:58.208"></status>
</kw>
<msg timestamp="20201030 18:29:58.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:57.920" endtime="20201030 18:29:58.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.213" endtime="20201030 18:29:58.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.221" endtime="20201030 18:29:58.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.917" endtime="20201030 18:29:58.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.915" endtime="20201030 18:29:58.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.228" level="INFO">${RESULT} = [{'diff': 3.127799999999917e-05}, {'diff': 3.197199999999817e-05}, {'diff': 3.19449999999985e-05}, {'diff': 3.195800000000207e-05}, {'diff': 3.19449999999985e-05}, {'diff': 3.127700000000316e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:29:58.224" endtime="20201030 18:29:58.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:58.232" level="INFO">${ACCURACY} = {'diff': [3.127799999999917e-05, 3.197199999999817e-05, 3.19449999999985e-05, 3.195800000000207e-05, 3.19449999999985e-05, 3.127700000000316e-05, 3.227800000000017e-05, 3.161100000000083e-05, 3.195900...</msg>
<status status="PASS" starttime="20201030 18:29:58.229" endtime="20201030 18:29:58.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.236" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 18:29:58.235" endtime="20201030 18:29:58.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.239" level="INFO">VALUE: [3.127799999999917e-05, 3.197199999999817e-05, 3.19449999999985e-05, 3.195800000000207e-05, 3.19449999999985e-05, 3.127700000000316e-05, 3.227800000000017e-05, 3.161100000000083e-05, 3.195900000000154e-05, 3.159700000000126e-05, 3.122200000000089e-05, 3.16380000000005e-05, 3.19579999999986e-05, 3.191700000000283e-05, 3.154199999999899e-05, 3.198600000000121e-05, 3.16250000000004e-05, 3.230599999999931e-05, 3.161100000000083e-05, 3.195900000000154e-05, 3.197200000000164e-05, 3.19579999999986e-05, 3.190299999999979e-05, 3.195899999999807e-05, 3.1596999999997794e-05, 3.127799999999917e-05, 3.19579999999986e-05, 3.1610999999997363e-05, 3.195900000000154e-05, 3.19579999999986e-05, 3.161100000000083e-05, 3.19579999999986e-05, 3.1598000000000737e-05, 3.19579999999986e-05, 3.19579999999986e-05, 3.16250000000004e-05, 3.16250000000004e-05, 3.197199999999817e-05, 3.1612000000000307e-05, 3.12639999999996e-05, 3.1596999999997794e-05, 3.204199999999949e-05, 3.197199999999817e-05, 3.223600000000146e-05, 3.224999999999756e-05, 3.168099999999868e-05, 3.197200000000164e-05, 3.195899999999807e-05, 3.194399999999903e-05, 3.200000000000078e-05]</msg>
<status status="PASS" starttime="20201030 18:29:58.237" endtime="20201030 18:29:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.233" endtime="20201030 18:29:58.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.244" endtime="20201030 18:29:58.263"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.242" endtime="20201030 18:29:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.241" endtime="20201030 18:29:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.886" endtime="20201030 18:29:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:57.886" endtime="20201030 18:29:58.264"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.273" endtime="20201030 18:29:58.290"></status>
</kw>
<msg timestamp="20201030 18:29:58.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.272" endtime="20201030 18:29:58.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.291" endtime="20201030 18:29:58.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.294" endtime="20201030 18:29:58.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.269" endtime="20201030 18:29:58.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.267" endtime="20201030 18:29:58.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.303" endtime="20201030 18:29:58.589"></status>
</kw>
<msg timestamp="20201030 18:29:58.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.301" endtime="20201030 18:29:58.592"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020681889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020714861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.593" endtime="20201030 18:29:58.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.601" endtime="20201030 18:29:58.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.299" endtime="20201030 18:29:58.603"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.297" endtime="20201030 18:29:58.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.608" level="INFO">${RESULT} = [{'diff': 3.297200000000264e-05}, {'diff': 3.3332999999999974e-05}, {'diff': 3.301400000000135e-05}, {'diff': 3.229199999999974e-05}, {'diff': 3.301399999999788e-05}, {'diff': 3.300000000000178e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:58.604" endtime="20201030 18:29:58.608"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:58.612" level="INFO">${ACCURACY} = {'diff': [3.297200000000264e-05, 3.3332999999999974e-05, 3.301400000000135e-05, 3.229199999999974e-05, 3.301399999999788e-05, 3.300000000000178e-05, 3.298600000000221e-05, 3.26250000000014e-05, 3.2652...</msg>
<status status="PASS" starttime="20201030 18:29:58.609" endtime="20201030 18:29:58.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.616" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 18:29:58.615" endtime="20201030 18:29:58.617"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.619" level="INFO">VALUE: [3.297200000000264e-05, 3.3332999999999974e-05, 3.301400000000135e-05, 3.229199999999974e-05, 3.301399999999788e-05, 3.300000000000178e-05, 3.298600000000221e-05, 3.26250000000014e-05, 3.265200000000107e-05, 3.2291000000000264e-05, 3.265299999999707e-05, 3.299999999999831e-05, 3.263900000000097e-05, 3.265300000000054e-05, 3.2332999999998974e-05, 3.298599999999874e-05, 3.26250000000014e-05, 3.297300000000211e-05, 3.265299999999707e-05, 3.298600000000221e-05, 3.265300000000054e-05, 3.298599999999874e-05, 3.301400000000135e-05, 3.229199999999974e-05, 3.300000000000178e-05, 3.299999999999831e-05, 3.265299999999707e-05, 3.300000000000178e-05, 3.268000000000021e-05, 3.3374999999998683e-05, 3.26519999999976e-05, 3.300000000000178e-05, 3.334700000000301e-05, 3.298599999999874e-05, 3.290299999999732e-05, 3.229199999999974e-05, 3.300000000000178e-05, 3.298599999999874e-05, 3.298600000000221e-05, 3.265200000000107e-05, 3.2304999999999834e-05, 3.298599999999874e-05, 3.297199999999917e-05, 3.265300000000054e-05, 3.298600000000221e-05, 3.298699999999821e-05, 3.263900000000097e-05, 3.331999999999988e-05, 3.227800000000017e-05, 3.298600000000221e-05]</msg>
<status status="PASS" starttime="20201030 18:29:58.617" endtime="20201030 18:29:58.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.613" endtime="20201030 18:29:58.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:58.629" endtime="20201030 18:29:58.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.627" endtime="20201030 18:29:58.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.626" endtime="20201030 18:29:58.649"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.265" endtime="20201030 18:29:58.650"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.265" endtime="20201030 18:29:58.650"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.659" endtime="20201030 18:29:58.674"></status>
</kw>
<msg timestamp="20201030 18:29:58.674" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.657" endtime="20201030 18:29:58.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:58.676" endtime="20201030 18:29:58.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.678" endtime="20201030 18:29:58.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.654" endtime="20201030 18:29:58.680"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.652" endtime="20201030 18:29:58.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.687" endtime="20201030 18:29:58.973"></status>
</kw>
<msg timestamp="20201030 18:29:58.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.686" endtime="20201030 18:29:58.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:58.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019700125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:58.977" endtime="20201030 18:29:58.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:58.986" endtime="20201030 18:29:58.987"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.683" endtime="20201030 18:29:58.988"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.681" endtime="20201030 18:29:58.988"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:58.992" level="INFO">${RESULT} = [{'diff': 3.402799999999845e-05}, {'diff': 3.368000000000121e-05}, {'diff': 3.4068999999997684e-05}, {'diff': 3.4026999999998975e-05}, {'diff': 3.4040999999998545e-05}, {'diff': 3.366700000000111e-05}...</msg>
<status status="PASS" starttime="20201030 18:29:58.989" endtime="20201030 18:29:58.992"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:58.997" level="INFO">${ACCURACY} = {'diff': [3.402799999999845e-05, 3.368000000000121e-05, 3.4068999999997684e-05, 3.4026999999998975e-05, 3.4040999999998545e-05, 3.366700000000111e-05, 3.4069000000001154e-05, 3.3332999999999974e-05, 3...</msg>
<status status="PASS" starttime="20201030 18:29:58.993" endtime="20201030 18:29:58.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.002" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 18:29:59.001" endtime="20201030 18:29:59.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.004" level="INFO">VALUE: [3.402799999999845e-05, 3.368000000000121e-05, 3.4068999999997684e-05, 3.4026999999998975e-05, 3.4040999999998545e-05, 3.366700000000111e-05, 3.4069000000001154e-05, 3.3332999999999974e-05, 3.333399999999945e-05, 3.402800000000192e-05, 3.340299999999782e-05, 3.369500000000025e-05, 3.341700000000086e-05, 3.3346999999999544e-05, 3.401399999999888e-05, 3.4026999999998975e-05, 3.398599999999974e-05, 3.397200000000017e-05, 3.333399999999945e-05, 3.3332999999999974e-05, 3.3346999999999544e-05, 3.4026999999998975e-05, 3.404200000000149e-05, 3.3346999999999544e-05, 3.369400000000078e-05, 3.4026999999998975e-05, 3.333399999999945e-05, 3.397200000000017e-05, 3.366600000000164e-05, 3.401400000000235e-05, 3.366700000000111e-05, 3.3332999999999974e-05, 3.369400000000078e-05, 3.39580000000006e-05, 3.407000000000063e-05, 3.333399999999945e-05, 3.399999999999931e-05, 3.3346999999999544e-05, 3.369400000000078e-05, 3.3346999999999544e-05, 3.368100000000068e-05, 3.368000000000121e-05, 3.398599999999974e-05, 3.3638999999998503e-05, 3.4040999999998545e-05, 3.368000000000121e-05, 3.407000000000063e-05, 3.401400000000235e-05, 3.402800000000192e-05, 3.331999999999988e-05]</msg>
<status status="PASS" starttime="20201030 18:29:59.003" endtime="20201030 18:29:59.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.998" endtime="20201030 18:29:59.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.009" endtime="20201030 18:29:59.029"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.008" endtime="20201030 18:29:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.007" endtime="20201030 18:29:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.651" endtime="20201030 18:29:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:58.650" endtime="20201030 18:29:59.030"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.039" endtime="20201030 18:29:59.055"></status>
</kw>
<msg timestamp="20201030 18:29:59.055" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.038" endtime="20201030 18:29:59.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.058" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.056" endtime="20201030 18:29:59.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.059" endtime="20201030 18:29:59.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.035" endtime="20201030 18:29:59.061"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.033" endtime="20201030 18:29:59.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.068" endtime="20201030 18:29:59.355"></status>
</kw>
<msg timestamp="20201030 18:29:59.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.066" endtime="20201030 18:29:59.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019857625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019902694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.360" endtime="20201030 18:29:59.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.370" endtime="20201030 18:29:59.372"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.064" endtime="20201030 18:29:59.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.062" endtime="20201030 18:29:59.373"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.379" level="INFO">${RESULT} = [{'diff': 4.506899999999828e-05}, {'diff': 4.470800000000094e-05}, {'diff': 4.4861000000000206e-05}, {'diff': 4.466599999999876e-05}, {'diff': 4.508299999999785e-05}, {'diff': 4.494400000000162e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:29:59.374" endtime="20201030 18:29:59.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:59.385" level="INFO">${ACCURACY} = {'diff': [4.506899999999828e-05, 4.470800000000094e-05, 4.4861000000000206e-05, 4.466599999999876e-05, 4.508299999999785e-05, 4.494400000000162e-05, 4.474999999999965e-05, 4.447200000000026e-05, 4.494...</msg>
<status status="PASS" starttime="20201030 18:29:59.381" endtime="20201030 18:29:59.385"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.391" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 18:29:59.389" endtime="20201030 18:29:59.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.396" level="INFO">VALUE: [4.506899999999828e-05, 4.470800000000094e-05, 4.4861000000000206e-05, 4.466599999999876e-05, 4.508299999999785e-05, 4.494400000000162e-05, 4.474999999999965e-05, 4.447200000000026e-05, 4.494399999999815e-05, 4.479200000000183e-05, 4.4431000000001025e-05, 4.470800000000094e-05, 4.432000000000047e-05, 4.4889000000002816e-05, 4.4666999999998236e-05, 4.448599999999983e-05, 4.43060000000009e-05, 4.4431000000001025e-05, 4.43329999999971e-05, 4.476400000000269e-05, 4.4833000000001066e-05, 4.4695000000000845e-05, 4.445800000000069e-05, 4.431899999999753e-05, 4.429099999999839e-05, 4.4833000000001066e-05, 4.5125000000000026e-05, 4.481899999999803e-05, 4.527799999999929e-05, 4.455599999999768e-05, 4.495800000000119e-05, 4.477800000000226e-05, 4.4861000000000206e-05, 4.481899999999803e-05, 4.4902999999998916e-05, 4.51800000000023e-05, 4.43060000000009e-05, 4.525000000000015e-05, 4.4888999999999346e-05, 4.508400000000079e-05, 4.4888999999999346e-05, 4.479199999999836e-05, 4.43060000000009e-05, 4.477799999999879e-05, 4.5083000000001316e-05, 4.490199999999944e-05, 4.5125000000000026e-05, 4.497200000000076e-05, 4.481899999999803e-05, 4.5138999999999596e-05]</msg>
<status status="PASS" starttime="20201030 18:29:59.392" endtime="20201030 18:29:59.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.386" endtime="20201030 18:29:59.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.406" endtime="20201030 18:29:59.426"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.403" endtime="20201030 18:29:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.401" endtime="20201030 18:29:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.031" endtime="20201030 18:29:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.031" endtime="20201030 18:29:59.428"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.436" endtime="20201030 18:29:59.452"></status>
</kw>
<msg timestamp="20201030 18:29:59.453" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.435" endtime="20201030 18:29:59.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.454" endtime="20201030 18:29:59.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.456" endtime="20201030 18:29:59.458"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.432" endtime="20201030 18:29:59.459"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.430" endtime="20201030 18:29:59.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.465" endtime="20201030 18:29:59.753"></status>
</kw>
<msg timestamp="20201030 18:29:59.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.464" endtime="20201030 18:29:59.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021041264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021087347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.757" endtime="20201030 18:29:59.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.766" endtime="20201030 18:29:59.767"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.461" endtime="20201030 18:29:59.768"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.460" endtime="20201030 18:29:59.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:29:59.772" level="INFO">${RESULT} = [{'diff': 4.608299999999885e-05}, {'diff': 4.588800000000087e-05}, {'diff': 4.606899999999928e-05}, {'diff': 4.609699999999842e-05}, {'diff': 4.602800000000004e-05}, {'diff': 4.60000000000009e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:29:59.769" endtime="20201030 18:29:59.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:29:59.777" level="INFO">${ACCURACY} = {'diff': [4.608299999999885e-05, 4.588800000000087e-05, 4.606899999999928e-05, 4.609699999999842e-05, 4.602800000000004e-05, 4.60000000000009e-05, 4.548599999999736e-05, 4.542999999999908e-05, 4.59029...</msg>
<status status="PASS" starttime="20201030 18:29:59.773" endtime="20201030 18:29:59.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.781" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 18:29:59.780" endtime="20201030 18:29:59.781"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.784" level="INFO">VALUE: [4.608299999999885e-05, 4.588800000000087e-05, 4.606899999999928e-05, 4.609699999999842e-05, 4.602800000000004e-05, 4.60000000000009e-05, 4.548599999999736e-05, 4.542999999999908e-05, 4.5902999999999916e-05, 4.629199999999986e-05, 4.5861000000001206e-05, 4.55000000000004e-05, 4.534799999999714e-05, 4.6194999999998876e-05, 4.5667000000002705e-05, 4.606999999999875e-05, 4.606999999999875e-05, 4.5833000000002067e-05, 4.5653000000003136e-05, 4.5833000000002067e-05, 4.6166999999999736e-05, 4.613800000000112e-05, 4.615200000000069e-05, 4.558299999999835e-05, 4.617999999999983e-05, 4.573600000000108e-05, 4.572199999999804e-05, 4.530499999999896e-05, 4.617999999999983e-05, 4.572200000000151e-05, 4.6180999999999306e-05, 4.597199999999829e-05, 4.58329999999986e-05, 4.601400000000047e-05, 4.577799999999979e-05, 4.533399999999757e-05, 4.605599999999918e-05, 4.5902999999999916e-05, 4.5959000000001665e-05, 4.5889000000000346e-05, 4.55000000000004e-05, 4.5402999999999416e-05, 4.591600000000001e-05, 4.606899999999928e-05, 4.6013999999997e-05, 4.530500000000243e-05, 4.5361000000000706e-05, 4.551399999999997e-05, 4.580500000000293e-05, 4.5375000000000276e-05]</msg>
<status status="PASS" starttime="20201030 18:29:59.782" endtime="20201030 18:29:59.785"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.777" endtime="20201030 18:29:59.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:29:59.790" endtime="20201030 18:29:59.809"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.788" endtime="20201030 18:29:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.787" endtime="20201030 18:29:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.428" endtime="20201030 18:29:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.428" endtime="20201030 18:29:59.810"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.819" endtime="20201030 18:29:59.837"></status>
</kw>
<msg timestamp="20201030 18:29:59.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.817" endtime="20201030 18:29:59.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:29:59.840" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:29:59.838" endtime="20201030 18:29:59.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.841" endtime="20201030 18:29:59.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.815" endtime="20201030 18:29:59.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.813" endtime="20201030 18:29:59.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:29:59.850" endtime="20201030 18:30:00.135"></status>
</kw>
<msg timestamp="20201030 18:30:00.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:29:59.849" endtime="20201030 18:30:00.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019662611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019709458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.139" endtime="20201030 18:30:00.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.147" endtime="20201030 18:30:00.149"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.846" endtime="20201030 18:30:00.150"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.844" endtime="20201030 18:30:00.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.154" level="INFO">${RESULT} = [{'diff': 4.684699999999917e-05}, {'diff': 4.724999999999868e-05}, {'diff': 4.711099999999899e-05}, {'diff': 4.627800000000029e-05}, {'diff': 4.63329999999991e-05}, {'diff': 4.6667000000000236e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:00.151" endtime="20201030 18:30:00.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:00.159" level="INFO">${ACCURACY} = {'diff': [4.684699999999917e-05, 4.724999999999868e-05, 4.711099999999899e-05, 4.627800000000029e-05, 4.63329999999991e-05, 4.6667000000000236e-05, 4.715200000000169e-05, 4.629199999999986e-05, 4.6846...</msg>
<status status="PASS" starttime="20201030 18:30:00.155" endtime="20201030 18:30:00.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.163" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 18:30:00.162" endtime="20201030 18:30:00.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.166" level="INFO">VALUE: [4.684699999999917e-05, 4.724999999999868e-05, 4.711099999999899e-05, 4.627800000000029e-05, 4.63329999999991e-05, 4.6667000000000236e-05, 4.715200000000169e-05, 4.629199999999986e-05, 4.684699999999917e-05, 4.6639000000001096e-05, 4.683399999999907e-05, 4.629199999999986e-05, 4.6972999999998766e-05, 4.684799999999864e-05, 4.6473000000001735e-05, 4.6944999999999626e-05, 4.63329999999991e-05, 4.6375000000001276e-05, 4.694400000000015e-05, 4.68329999999996e-05, 4.724999999999868e-05, 4.630499999999996e-05, 4.631899999999953e-05, 4.694400000000015e-05, 4.717999999999736e-05, 4.6667000000000236e-05, 4.6903000000000916e-05, 4.725000000000215e-05, 4.6347000000002136e-05, 4.722199999999954e-05, 4.720799999999997e-05, 4.649999999999793e-05, 4.674999999999818e-05, 4.6639000000001096e-05, 4.726399999999825e-05, 4.6694999999999376e-05, 4.6430999999999556e-05, 4.634800000000161e-05, 4.649999999999793e-05, 4.701299999999853e-05, 4.672199999999904e-05, 4.698599999999886e-05, 4.643000000000008e-05, 4.663899999999763e-05, 4.652800000000054e-05, 4.695799999999972e-05, 4.705499999999724e-05, 4.681900000000003e-05, 4.690299999999745e-05, 4.673599999999861e-05]</msg>
<status status="PASS" starttime="20201030 18:30:00.165" endtime="20201030 18:30:00.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.160" endtime="20201030 18:30:00.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.171" endtime="20201030 18:30:00.190"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.169" endtime="20201030 18:30:00.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.168" endtime="20201030 18:30:00.191"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.811" endtime="20201030 18:30:00.192"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:59.811" endtime="20201030 18:30:00.192"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.200" endtime="20201030 18:30:00.217"></status>
</kw>
<msg timestamp="20201030 18:30:00.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.199" endtime="20201030 18:30:00.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.220" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.218" endtime="20201030 18:30:00.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.221" endtime="20201030 18:30:00.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.196" endtime="20201030 18:30:00.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.194" endtime="20201030 18:30:00.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.230" endtime="20201030 18:30:00.516"></status>
</kw>
<msg timestamp="20201030 18:30:00.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.228" endtime="20201030 18:30:00.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019654708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.520" endtime="20201030 18:30:00.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.528" endtime="20201030 18:30:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.225" endtime="20201030 18:30:00.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.224" endtime="20201030 18:30:00.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.535" level="INFO">${RESULT} = [{'diff': 4.7959000000000196e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.776400000000222e-05}, {'diff': 4.755500000000121e-05}, {'diff': 4.799999999999943e-05}, {'diff': 4.818000000000183e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:00.532" endtime="20201030 18:30:00.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:00.539" level="INFO">${ACCURACY} = {'diff': [4.7959000000000196e-05, 4.7445000000000126e-05, 4.776400000000222e-05, 4.755500000000121e-05, 4.799999999999943e-05, 4.818000000000183e-05, 4.78879999999994e-05, 4.755499999999774e-05, 4.731...</msg>
<status status="PASS" starttime="20201030 18:30:00.536" endtime="20201030 18:30:00.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.544" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 18:30:00.543" endtime="20201030 18:30:00.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.546" level="INFO">VALUE: [4.7959000000000196e-05, 4.7445000000000126e-05, 4.776400000000222e-05, 4.755500000000121e-05, 4.799999999999943e-05, 4.818000000000183e-05, 4.78879999999994e-05, 4.755499999999774e-05, 4.731900000000053e-05, 4.7653000000001666e-05, 4.820800000000097e-05, 4.788899999999888e-05, 4.743000000000108e-05, 4.7667000000001236e-05, 4.777799999999832e-05, 4.802799999999857e-05, 4.7417000000000986e-05, 4.7445000000000126e-05, 4.741699999999752e-05, 4.783400000000007e-05, 4.7653000000001666e-05, 4.7653000000001666e-05, 4.755599999999721e-05, 4.737499999999881e-05, 4.830499999999849e-05, 4.790200000000244e-05, 4.81940000000014e-05, 4.781900000000103e-05, 4.743000000000108e-05, 4.780499999999799e-05, 4.740299999999795e-05, 4.775000000000265e-05, 4.743000000000108e-05, 4.742999999999761e-05, 4.730500000000096e-05, 4.738899999999838e-05, 4.807000000000075e-05, 4.754200000000111e-05, 4.733399999999957e-05, 4.738899999999838e-05, 4.812499999999956e-05, 4.763899999999863e-05, 4.736199999999871e-05, 4.751299999999903e-05, 4.826399999999925e-05, 4.7695000000000376e-05, 4.772200000000004e-05, 4.812499999999956e-05, 4.768000000000133e-05, 4.741600000000151e-05]</msg>
<status status="PASS" starttime="20201030 18:30:00.545" endtime="20201030 18:30:00.547"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.540" endtime="20201030 18:30:00.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.551" endtime="20201030 18:30:00.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.550" endtime="20201030 18:30:00.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.548" endtime="20201030 18:30:00.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.193" endtime="20201030 18:30:00.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.192" endtime="20201030 18:30:00.572"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.580" endtime="20201030 18:30:00.600"></status>
</kw>
<msg timestamp="20201030 18:30:00.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.579" endtime="20201030 18:30:00.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.602" endtime="20201030 18:30:00.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.604" endtime="20201030 18:30:00.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.576" endtime="20201030 18:30:00.606"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.574" endtime="20201030 18:30:00.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.613" endtime="20201030 18:30:00.899"></status>
</kw>
<msg timestamp="20201030 18:30:00.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.612" endtime="20201030 18:30:00.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023167472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023215903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.903" endtime="20201030 18:30:00.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.911" endtime="20201030 18:30:00.913"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.609" endtime="20201030 18:30:00.914"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.607" endtime="20201030 18:30:00.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:00.918" level="INFO">${RESULT} = [{'diff': 4.843099999999809e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.849999999999993e-05}, {'diff': 4.88200000000015e-05}, {'diff': 4.879199999999889e-05}, {'diff': 4.8958999999997727e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:00.915" endtime="20201030 18:30:00.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:00.922" level="INFO">${ACCURACY} = {'diff': [4.843099999999809e-05, 4.863899999999963e-05, 4.849999999999993e-05, 4.88200000000015e-05, 4.879199999999889e-05, 4.8958999999997727e-05, 4.830599999999796e-05, 4.8417000000001986e-05, 4.915...</msg>
<status status="PASS" starttime="20201030 18:30:00.919" endtime="20201030 18:30:00.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.927" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 18:30:00.926" endtime="20201030 18:30:00.927"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.929" level="INFO">VALUE: [4.843099999999809e-05, 4.863899999999963e-05, 4.849999999999993e-05, 4.88200000000015e-05, 4.879199999999889e-05, 4.8958999999997727e-05, 4.830599999999796e-05, 4.8417000000001986e-05, 4.915200000000022e-05, 4.83330000000011e-05, 4.876300000000028e-05, 4.837499999999981e-05, 4.870800000000147e-05, 4.85139999999995e-05, 4.86529999999992e-05, 4.869399999999843e-05, 4.855599999999821e-05, 4.8931000000002056e-05, 4.88330000000016e-05, 4.8389000000002846e-05, 4.8431000000001556e-05, 4.890299999999945e-05, 4.890299999999945e-05, 4.849999999999993e-05, 4.923600000000111e-05, 4.912500000000056e-05, 4.8653000000002666e-05, 4.894499999999816e-05, 4.872200000000104e-05, 4.863800000000015e-05, 4.915200000000022e-05, 4.911100000000099e-05, 4.836099999999677e-05, 4.85269999999996e-05, 4.830499999999849e-05, 4.838899999999938e-05, 4.926400000000025e-05, 4.866699999999877e-05, 4.912500000000056e-05, 4.8431000000001556e-05, 4.890299999999945e-05, 4.861100000000049e-05, 4.830599999999796e-05, 4.8445000000001126e-05, 4.8417000000001986e-05, 4.890299999999945e-05, 4.876399999999975e-05, 4.831900000000153e-05, 4.830600000000143e-05, 4.913900000000013e-05]</msg>
<status status="PASS" starttime="20201030 18:30:00.928" endtime="20201030 18:30:00.931"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.923" endtime="20201030 18:30:00.931"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:00.935" endtime="20201030 18:30:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.934" endtime="20201030 18:30:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.932" endtime="20201030 18:30:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.573" endtime="20201030 18:30:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.572" endtime="20201030 18:30:00.956"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.966" endtime="20201030 18:30:00.984"></status>
</kw>
<msg timestamp="20201030 18:30:00.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.964" endtime="20201030 18:30:00.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:00.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:00.986" endtime="20201030 18:30:00.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.989" endtime="20201030 18:30:00.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.960" endtime="20201030 18:30:00.992"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.958" endtime="20201030 18:30:00.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:00.999" endtime="20201030 18:30:01.286"></status>
</kw>
<msg timestamp="20201030 18:30:01.289" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:00.998" endtime="20201030 18:30:01.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022195361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022245542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.290" endtime="20201030 18:30:01.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.298" endtime="20201030 18:30:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.995" endtime="20201030 18:30:01.300"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.993" endtime="20201030 18:30:01.301"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:01.304" level="INFO">${RESULT} = [{'diff': 5.018099999999984e-05}, {'diff': 4.990300000000045e-05}, {'diff': 4.944399999999918e-05}, {'diff': 5.00270000000011e-05}, {'diff': 4.966600000000029e-05}, {'diff': 5.005500000000024e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:01.301" endtime="20201030 18:30:01.305"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:01.310" level="INFO">${ACCURACY} = {'diff': [5.018099999999984e-05, 4.990300000000045e-05, 4.944399999999918e-05, 5.00270000000011e-05, 4.966600000000029e-05, 5.005500000000024e-05, 4.95409999999967e-05, 4.972199999999857e-05, 4.995799...</msg>
<status status="PASS" starttime="20201030 18:30:01.305" endtime="20201030 18:30:01.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.314" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 18:30:01.313" endtime="20201030 18:30:01.314"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.316" level="INFO">VALUE: [5.018099999999984e-05, 4.990300000000045e-05, 4.944399999999918e-05, 5.00270000000011e-05, 4.966600000000029e-05, 5.005500000000024e-05, 4.95409999999967e-05, 4.972199999999857e-05, 4.995799999999925e-05, 4.962500000000106e-05, 5.025000000000168e-05, 4.949999999999746e-05, 4.936099999999777e-05, 5.024999999999821e-05, 4.990300000000045e-05, 5.018099999999984e-05, 4.995800000000272e-05, 4.959700000000192e-05, 4.949999999999746e-05, 4.988900000000088e-05, 4.980599999999946e-05, 4.938900000000038e-05, 4.993099999999959e-05, 4.948600000000136e-05, 4.9388000000000903e-05, 4.983299999999913e-05, 5.000000000000143e-05, 5.02079999999995e-05, 4.977800000000032e-05, 4.926400000000025e-05, 4.93330000000021e-05, 5.000000000000143e-05, 4.933299999999863e-05, 4.954199999999964e-05, 4.936099999999777e-05, 4.995800000000272e-05, 4.959699999999845e-05, 4.979199999999989e-05, 5.012500000000156e-05, 4.931999999999853e-05, 5.012499999999809e-05, 4.959800000000139e-05, 4.929199999999939e-05, 5.018099999999984e-05, 5.0237000000001586e-05, 4.987500000000131e-05, 5.011100000000199e-05, 4.95140000000005e-05, 5.018000000000036e-05, 4.98469999999987e-05]</msg>
<status status="PASS" starttime="20201030 18:30:01.315" endtime="20201030 18:30:01.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.310" endtime="20201030 18:30:01.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.322" endtime="20201030 18:30:01.341"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.320" endtime="20201030 18:30:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.319" endtime="20201030 18:30:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.957" endtime="20201030 18:30:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:00.956" endtime="20201030 18:30:01.342"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.351" endtime="20201030 18:30:01.368"></status>
</kw>
<msg timestamp="20201030 18:30:01.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.350" endtime="20201030 18:30:01.369"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.371" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.370" endtime="20201030 18:30:01.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.372" endtime="20201030 18:30:01.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.347" endtime="20201030 18:30:01.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.345" endtime="20201030 18:30:01.375"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.381" endtime="20201030 18:30:01.668"></status>
</kw>
<msg timestamp="20201030 18:30:01.671" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02033425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:01.380" endtime="20201030 18:30:01.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02033425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:01.672" endtime="20201030 18:30:01.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.680" endtime="20201030 18:30:01.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.377" endtime="20201030 18:30:01.682"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.375" endtime="20201030 18:30:01.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:01.687" level="INFO">${RESULT} = [{'diff': 5.108300000000038e-05}, {'diff': 5.093100000000059e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.047199999999932e-05}, {'diff': 5.06530000000012e-05}, {'diff': 5.127800000000182e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:01.683" endtime="20201030 18:30:01.687"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:01.691" level="INFO">${ACCURACY} = {'diff': [5.108300000000038e-05, 5.093100000000059e-05, 5.12080000000005e-05, 5.047199999999932e-05, 5.06530000000012e-05, 5.127800000000182e-05, 5.070899999999948e-05, 5.105600000000071e-05, 5.070900...</msg>
<status status="PASS" starttime="20201030 18:30:01.688" endtime="20201030 18:30:01.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.695" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 18:30:01.694" endtime="20201030 18:30:01.696"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.698" level="INFO">VALUE: [5.108300000000038e-05, 5.093100000000059e-05, 5.12080000000005e-05, 5.047199999999932e-05, 5.06530000000012e-05, 5.127800000000182e-05, 5.070899999999948e-05, 5.105600000000071e-05, 5.0709000000002946e-05, 5.093100000000059e-05, 5.072199999999957e-05, 5.118100000000084e-05, 5.1193999999997464e-05, 5.030499999999702e-05, 5.0651999999998254e-05, 5.094400000000068e-05, 5.075000000000218e-05, 5.027799999999735e-05, 5.076400000000175e-05, 5.079200000000089e-05, 5.12080000000005e-05, 5.062500000000206e-05, 5.081900000000056e-05, 5.116700000000127e-05, 5.090300000000145e-05, 5.034700000000267e-05, 5.070899999999948e-05, 5.0320000000003e-05, 5.094500000000016e-05, 5.079100000000142e-05, 5.084799999999917e-05, 5.0387999999998434e-05, 5.113900000000213e-05, 5.112499999999909e-05, 5.132000000000053e-05, 5.12080000000005e-05, 5.112500000000256e-05, 5.081900000000056e-05, 5.038899999999791e-05, 5.112499999999909e-05, 5.033299999999963e-05, 5.076400000000175e-05, 5.088899999999841e-05, 5.047199999999932e-05, 5.093100000000059e-05, 5.072199999999957e-05, 5.08339999999996e-05, 5.049999999999846e-05, 5.030599999999996e-05, 5.0472999999998797e-05]</msg>
<status status="PASS" starttime="20201030 18:30:01.697" endtime="20201030 18:30:01.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.692" endtime="20201030 18:30:01.699"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:01.703" endtime="20201030 18:30:01.722"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.701" endtime="20201030 18:30:01.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.700" endtime="20201030 18:30:01.723"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.343" endtime="20201030 18:30:01.724"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.343" endtime="20201030 18:30:01.724"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.732" endtime="20201030 18:30:01.750"></status>
</kw>
<msg timestamp="20201030 18:30:01.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.731" endtime="20201030 18:30:01.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:01.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:01.752" endtime="20201030 18:30:01.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.754" endtime="20201030 18:30:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.728" endtime="20201030 18:30:01.756"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.726" endtime="20201030 18:30:01.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:01.763" endtime="20201030 18:30:02.049"></status>
</kw>
<msg timestamp="20201030 18:30:02.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:01.762" endtime="20201030 18:30:02.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021270681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021322542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.053" endtime="20201030 18:30:02.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.061" endtime="20201030 18:30:02.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.759" endtime="20201030 18:30:02.063"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.757" endtime="20201030 18:30:02.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.068" level="INFO">${RESULT} = [{'diff': 5.186100000000027e-05}, {'diff': 5.145899999999676e-05}, {'diff': 5.154199999999817e-05}, {'diff': 5.168100000000134e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.179199999999842e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:02.065" endtime="20201030 18:30:02.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:02.072" level="INFO">${ACCURACY} = {'diff': [5.186100000000027e-05, 5.145899999999676e-05, 5.154199999999817e-05, 5.168100000000134e-05, 5.161100000000002e-05, 5.179199999999842e-05, 5.173600000000014e-05, 5.181899999999809e-05, 5.2179...</msg>
<status status="PASS" starttime="20201030 18:30:02.069" endtime="20201030 18:30:02.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.076" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 18:30:02.075" endtime="20201030 18:30:02.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.079" level="INFO">VALUE: [5.186100000000027e-05, 5.145899999999676e-05, 5.154199999999817e-05, 5.168100000000134e-05, 5.161100000000002e-05, 5.179199999999842e-05, 5.173600000000014e-05, 5.181899999999809e-05, 5.2179999999998894e-05, 5.206900000000181e-05, 5.161100000000002e-05, 5.131899999999759e-05, 5.205500000000224e-05, 5.225000000000021e-05, 5.179200000000189e-05, 5.212500000000009e-05, 5.208300000000138e-05, 5.133300000000063e-05, 5.225000000000021e-05, 5.219500000000141e-05, 5.219500000000141e-05, 5.21669999999988e-05, 5.148599999999989e-05, 5.137499999999934e-05, 5.195800000000125e-05, 5.130600000000096e-05, 5.161100000000002e-05, 5.195800000000125e-05, 5.155499999999827e-05, 5.226399999999978e-05, 5.159700000000045e-05, 5.161100000000002e-05, 5.176399999999928e-05, 5.20279999999991e-05, 5.131900000000106e-05, 5.129200000000139e-05, 5.190299999999898e-05, 5.177799999999885e-05, 5.144400000000118e-05, 5.1708000000001e-05, 5.179199999999842e-05, 5.16669999999983e-05, 5.170900000000048e-05, 5.201399999999953e-05, 5.165299999999873e-05, 5.212500000000009e-05, 5.1457999999997284e-05, 5.137499999999934e-05, 5.209700000000095e-05, 5.226399999999978e-05]</msg>
<status status="PASS" starttime="20201030 18:30:02.077" endtime="20201030 18:30:02.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.073" endtime="20201030 18:30:02.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.085" endtime="20201030 18:30:02.104"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.083" endtime="20201030 18:30:02.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.082" endtime="20201030 18:30:02.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.725" endtime="20201030 18:30:02.105"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:01.724" endtime="20201030 18:30:02.106"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.114" endtime="20201030 18:30:02.131"></status>
</kw>
<msg timestamp="20201030 18:30:02.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.113" endtime="20201030 18:30:02.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.133" endtime="20201030 18:30:02.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.135" endtime="20201030 18:30:02.137"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.110" endtime="20201030 18:30:02.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.108" endtime="20201030 18:30:02.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.144" endtime="20201030 18:30:02.429"></status>
</kw>
<msg timestamp="20201030 18:30:02.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:02.143" endtime="20201030 18:30:02.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020312222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:02.433" endtime="20201030 18:30:02.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.442" endtime="20201030 18:30:02.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.140" endtime="20201030 18:30:02.444"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.139" endtime="20201030 18:30:02.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.448" level="INFO">${RESULT} = [{'diff': 5.322200000000207e-05}, {'diff': 5.2429999999999144e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.332000000000253e-05}, {'diff': 5.234699999999773e-05}, {'diff': 5.28470000000017e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:02.445" endtime="20201030 18:30:02.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:02.453" level="INFO">${ACCURACY} = {'diff': [5.322200000000207e-05, 5.2429999999999144e-05, 5.237500000000034e-05, 5.332000000000253e-05, 5.234699999999773e-05, 5.28470000000017e-05, 5.230599999999849e-05, 5.272200000000157e-05, 5.2582...</msg>
<status status="PASS" starttime="20201030 18:30:02.449" endtime="20201030 18:30:02.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.458" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 18:30:02.457" endtime="20201030 18:30:02.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.460" level="INFO">VALUE: [5.322200000000207e-05, 5.2429999999999144e-05, 5.237500000000034e-05, 5.332000000000253e-05, 5.234699999999773e-05, 5.28470000000017e-05, 5.230599999999849e-05, 5.272200000000157e-05, 5.258299999999841e-05, 5.251400000000003e-05, 5.275000000000071e-05, 5.301400000000053e-05, 5.319499999999894e-05, 5.3152000000000754e-05, 5.259800000000092e-05, 5.275000000000071e-05, 5.2888000000000934e-05, 5.2735999999997674e-05, 5.2665999999999824e-05, 5.290299999999998e-05, 5.281900000000256e-05, 5.315300000000023e-05, 5.325000000000121e-05, 5.281899999999909e-05, 5.30280000000001e-05, 5.306999999999881e-05, 5.290299999999998e-05, 5.301400000000053e-05, 5.312499999999762e-05, 5.241699999999905e-05, 5.236100000000077e-05, 5.248600000000089e-05, 5.277799999999985e-05, 5.243100000000209e-05, 5.231899999999859e-05, 5.2902000000000504e-05, 5.231900000000206e-05, 5.311100000000152e-05, 5.325000000000121e-05, 5.23609999999973e-05, 5.3193999999999464e-05, 5.2721999999998104e-05, 5.2735999999997674e-05, 5.250000000000046e-05, 5.307000000000228e-05, 5.225000000000021e-05, 5.287500000000084e-05, 5.2485999999997424e-05, 5.283299999999866e-05, 5.305499999999977e-05]</msg>
<status status="PASS" starttime="20201030 18:30:02.459" endtime="20201030 18:30:02.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.454" endtime="20201030 18:30:02.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.465" endtime="20201030 18:30:02.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.464" endtime="20201030 18:30:02.485"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.463" endtime="20201030 18:30:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.107" endtime="20201030 18:30:02.486"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.106" endtime="20201030 18:30:02.486"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.495" endtime="20201030 18:30:02.512"></status>
</kw>
<msg timestamp="20201030 18:30:02.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.493" endtime="20201030 18:30:02.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.514" endtime="20201030 18:30:02.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.516" endtime="20201030 18:30:02.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.491" endtime="20201030 18:30:02.518"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.489" endtime="20201030 18:30:02.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.525" endtime="20201030 18:30:02.811"></status>
</kw>
<msg timestamp="20201030 18:30:02.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.523" endtime="20201030 18:30:02.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020420542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020474819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.815" endtime="20201030 18:30:02.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.824" endtime="20201030 18:30:02.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.521" endtime="20201030 18:30:02.826"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.519" endtime="20201030 18:30:02.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:02.830" level="INFO">${RESULT} = [{'diff': 5.427699999999841e-05}, {'diff': 5.4180000000000894e-05}, {'diff': 5.332000000000253e-05}, {'diff': 5.427699999999841e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.337500000000134e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:02.827" endtime="20201030 18:30:02.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:02.835" level="INFO">${ACCURACY} = {'diff': [5.427699999999841e-05, 5.4180000000000894e-05, 5.332000000000253e-05, 5.427699999999841e-05, 5.4013999999998064e-05, 5.337500000000134e-05, 5.3985999999998924e-05, 5.348600000000189e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 18:30:02.831" endtime="20201030 18:30:02.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.839" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 18:30:02.838" endtime="20201030 18:30:02.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.842" level="INFO">VALUE: [5.427699999999841e-05, 5.4180000000000894e-05, 5.332000000000253e-05, 5.427699999999841e-05, 5.4013999999998064e-05, 5.337500000000134e-05, 5.3985999999998924e-05, 5.348600000000189e-05, 5.4180000000000894e-05, 5.415300000000123e-05, 5.329099999999698e-05, 5.409700000000295e-05, 5.3944000000000214e-05, 5.4208000000000034e-05, 5.355599999999974e-05, 5.343099999999962e-05, 5.341700000000005e-05, 5.354200000000017e-05, 5.379199999999695e-05, 5.406999999999981e-05, 5.390300000000098e-05, 5.3916000000001074e-05, 5.337499999999787e-05, 5.412499999999862e-05, 5.4013999999998064e-05, 5.408299999999991e-05, 5.3735999999998674e-05, 5.355500000000027e-05, 5.3513999999997564e-05, 5.390300000000098e-05, 5.3513999999997564e-05, 5.383299999999966e-05, 5.383299999999966e-05, 5.383300000000313e-05, 5.397200000000282e-05, 5.406999999999981e-05, 5.401400000000153e-05, 5.383399999999913e-05, 5.330599999999949e-05, 5.365300000000073e-05, 5.334800000000167e-05, 5.393100000000012e-05, 5.401299999999859e-05, 5.4180000000000894e-05, 5.3430000000000144e-05, 5.406900000000034e-05, 5.36670000000003e-05, 5.3415999999997105e-05, 5.391700000000055e-05, 5.354200000000017e-05]</msg>
<status status="PASS" starttime="20201030 18:30:02.840" endtime="20201030 18:30:02.842"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.835" endtime="20201030 18:30:02.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:02.847" endtime="20201030 18:30:02.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.845" endtime="20201030 18:30:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.844" endtime="20201030 18:30:02.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.487" endtime="20201030 18:30:02.869"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.487" endtime="20201030 18:30:02.869"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.879" endtime="20201030 18:30:02.897"></status>
</kw>
<msg timestamp="20201030 18:30:02.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.877" endtime="20201030 18:30:02.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:02.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:02.899" endtime="20201030 18:30:02.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.901" endtime="20201030 18:30:02.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.874" endtime="20201030 18:30:02.904"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.872" endtime="20201030 18:30:02.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:02.911" endtime="20201030 18:30:03.198"></status>
</kw>
<msg timestamp="20201030 18:30:03.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023854472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:02.909" endtime="20201030 18:30:03.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023799528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023854472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.202" endtime="20201030 18:30:03.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.211" endtime="20201030 18:30:03.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.907" endtime="20201030 18:30:03.213"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.905" endtime="20201030 18:30:03.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.217" level="INFO">${RESULT} = [{'diff': 5.4944000000001214e-05}, {'diff': 5.4972000000000354e-05}, {'diff': 5.4958000000000784e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.470900000000001e-05}, {'diff': 5.443100000000062e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:03.214" endtime="20201030 18:30:03.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:03.221" level="INFO">${ACCURACY} = {'diff': [5.4944000000001214e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.465300000000173e-05, 5.470900000000001e-05, 5.443100000000062e-05, 5.5208000000001034e-05, 5.482000000000056e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:03.218" endtime="20201030 18:30:03.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.226" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 18:30:03.225" endtime="20201030 18:30:03.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.228" level="INFO">VALUE: [5.4944000000001214e-05, 5.4972000000000354e-05, 5.4958000000000784e-05, 5.465300000000173e-05, 5.470900000000001e-05, 5.443100000000062e-05, 5.5208000000001034e-05, 5.482000000000056e-05, 5.519499999999747e-05, 5.438900000000191e-05, 5.513899999999919e-05, 5.455600000000074e-05, 5.48479999999997e-05, 5.512499999999962e-05, 5.4722000000000104e-05, 5.4735999999999674e-05, 5.5291999999998453e-05, 5.448600000000289e-05, 5.4429999999997675e-05, 5.4972000000000354e-05, 5.515300000000223e-05, 5.4985999999999924e-05, 5.50410000000022e-05, 5.443100000000062e-05, 5.432000000000006e-05, 5.507000000000081e-05, 5.480599999999752e-05, 5.5027999999998634e-05, 5.43609999999993e-05, 5.530499999999855e-05, 5.4387999999998965e-05, 5.459799999999945e-05, 5.4972000000000354e-05, 5.481899999999762e-05, 5.431900000000059e-05, 5.477800000000185e-05, 5.532000000000106e-05, 5.513899999999919e-05, 5.491700000000155e-05, 5.436100000000277e-05, 5.431900000000059e-05, 5.4735999999999674e-05, 5.46809999999974e-05, 5.5263999999999314e-05, 5.463899999999869e-05, 5.495900000000026e-05, 5.4416000000001574e-05, 5.4735999999999674e-05, 5.4513999999998564e-05, 5.5208000000001034e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.227" endtime="20201030 18:30:03.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.222" endtime="20201030 18:30:03.230"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.234" endtime="20201030 18:30:03.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.233" endtime="20201030 18:30:03.254"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.231" endtime="20201030 18:30:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.870" endtime="20201030 18:30:03.255"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:02.870" endtime="20201030 18:30:03.255"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.264" endtime="20201030 18:30:03.280"></status>
</kw>
<msg timestamp="20201030 18:30:03.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.262" endtime="20201030 18:30:03.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.282" endtime="20201030 18:30:03.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.284" endtime="20201030 18:30:03.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.260" endtime="20201030 18:30:03.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.257" endtime="20201030 18:30:03.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.294" endtime="20201030 18:30:03.579"></status>
</kw>
<msg timestamp="20201030 18:30:03.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.292" endtime="20201030 18:30:03.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.590" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019681458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019737014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.583" endtime="20201030 18:30:03.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.592" endtime="20201030 18:30:03.593"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.290" endtime="20201030 18:30:03.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.288" endtime="20201030 18:30:03.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.598" level="INFO">${RESULT} = [{'diff': 5.555600000000174e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.606999999999834e-05}, {'diff': 5.5735999999997204e-05}, {'diff': 5.531900000000159e-05}, {'diff': 5.5555999999998273e-05}...</msg>
<status status="PASS" starttime="20201030 18:30:03.595" endtime="20201030 18:30:03.598"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:03.603" level="INFO">${ACCURACY} = {'diff': [5.555600000000174e-05, 5.6014000000000064e-05, 5.606999999999834e-05, 5.5735999999997204e-05, 5.531900000000159e-05, 5.5555999999998273e-05, 5.5708000000001534e-05, 5.6207999999998565e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:03.599" endtime="20201030 18:30:03.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.608" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 18:30:03.607" endtime="20201030 18:30:03.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.610" level="INFO">VALUE: [5.555600000000174e-05, 5.6014000000000064e-05, 5.606999999999834e-05, 5.5735999999997204e-05, 5.531900000000159e-05, 5.5555999999998273e-05, 5.5708000000001534e-05, 5.6207999999998565e-05, 5.566699999999883e-05, 5.607000000000181e-05, 5.6000000000000494e-05, 5.544499999999772e-05, 5.607000000000181e-05, 5.608399999999791e-05, 5.6208000000002034e-05, 5.54869999999999e-05, 5.6152000000000285e-05, 5.5486000000000424e-05, 5.5958000000001784e-05, 5.533300000000116e-05, 5.5472000000000854e-05, 5.566699999999883e-05, 5.5722000000001104e-05, 5.5708000000001534e-05, 5.541699999999858e-05, 5.565300000000273e-05, 5.5291999999998453e-05, 5.583400000000113e-05, 5.590299999999951e-05, 5.584799999999723e-05, 5.6236000000001174e-05, 5.595900000000126e-05, 5.609699999999801e-05, 5.583299999999819e-05, 5.5499999999999994e-05, 5.576300000000034e-05, 5.5791999999998954e-05, 5.5472000000000854e-05, 5.56809999999984e-05, 5.5777999999999384e-05, 5.5471999999997385e-05, 5.56670000000023e-05, 5.538899999999944e-05, 5.538899999999944e-05, 5.61809999999989e-05, 5.6250000000000744e-05, 5.555500000000227e-05, 5.6014000000000064e-05, 5.577699999999991e-05, 5.593099999999865e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.609" endtime="20201030 18:30:03.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.604" endtime="20201030 18:30:03.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:03.615" endtime="20201030 18:30:03.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.614" endtime="20201030 18:30:03.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.613" endtime="20201030 18:30:03.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.256" endtime="20201030 18:30:03.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.255" endtime="20201030 18:30:03.636"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.645" endtime="20201030 18:30:03.662"></status>
</kw>
<msg timestamp="20201030 18:30:03.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.643" endtime="20201030 18:30:03.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:03.663" endtime="20201030 18:30:03.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.666" endtime="20201030 18:30:03.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.641" endtime="20201030 18:30:03.668"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.639" endtime="20201030 18:30:03.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.675" endtime="20201030 18:30:03.961"></status>
</kw>
<msg timestamp="20201030 18:30:03.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.673" endtime="20201030 18:30:03.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020077236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:03.965" endtime="20201030 18:30:03.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:03.974" endtime="20201030 18:30:03.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.671" endtime="20201030 18:30:03.976"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.669" endtime="20201030 18:30:03.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:03.980" level="INFO">${RESULT} = [{'diff': 5.7263999999997844e-05}, {'diff': 5.6444000000002714e-05}, {'diff': 5.666699999999983e-05}, {'diff': 5.7000000000001494e-05}, {'diff': 5.6958000000002784e-05}, {'diff': 5.6305999999999023e-0...</msg>
<status status="PASS" starttime="20201030 18:30:03.977" endtime="20201030 18:30:03.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:03.984" level="INFO">${ACCURACY} = {'diff': [5.7263999999997844e-05, 5.6444000000002714e-05, 5.666699999999983e-05, 5.7000000000001494e-05, 5.6958000000002784e-05, 5.6305999999999023e-05, 5.684699999999876e-05, 5.709799999999848e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:03.981" endtime="20201030 18:30:03.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.989" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 18:30:03.988" endtime="20201030 18:30:03.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:03.992" level="INFO">VALUE: [5.7263999999997844e-05, 5.6444000000002714e-05, 5.666699999999983e-05, 5.7000000000001494e-05, 5.6958000000002784e-05, 5.6305999999999023e-05, 5.684699999999876e-05, 5.709799999999848e-05, 5.712499999999815e-05, 5.6541999999999704e-05, 5.702699999999769e-05, 5.679100000000048e-05, 5.6429999999999675e-05, 5.6888000000001465e-05, 5.631900000000259e-05, 5.677699999999744e-05, 5.708300000000291e-05, 5.655600000000274e-05, 5.6791999999999954e-05, 5.713899999999772e-05, 5.6958000000002784e-05, 5.637500000000087e-05, 5.694499999999922e-05, 5.632000000000206e-05, 5.684699999999876e-05, 5.6805999999999524e-05, 5.7013999999997594e-05, 5.6500000000000994e-05, 5.6471999999998385e-05, 5.6888000000001465e-05, 5.661099999999808e-05, 5.7207999999999565e-05, 5.6666000000000355e-05, 5.630499999999955e-05, 5.6721999999998635e-05, 5.7207999999999565e-05, 5.694499999999922e-05, 5.706899999999987e-05, 5.643099999999915e-05, 5.713900000000119e-05, 5.665300000000026e-05, 5.6471999999998385e-05, 5.7028000000000634e-05, 5.63610000000013e-05, 5.7221999999999135e-05, 5.687500000000137e-05, 5.644499999999872e-05, 5.726299999999837e-05, 5.68749999999979e-05, 5.7263999999997844e-05]</msg>
<status status="PASS" starttime="20201030 18:30:03.990" endtime="20201030 18:30:04.000"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.985" endtime="20201030 18:30:04.000"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.004" endtime="20201030 18:30:04.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.003" endtime="20201030 18:30:04.024"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.001" endtime="20201030 18:30:04.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.637" endtime="20201030 18:30:04.025"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:03.636" endtime="20201030 18:30:04.025"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.034" endtime="20201030 18:30:04.053"></status>
</kw>
<msg timestamp="20201030 18:30:04.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.032" endtime="20201030 18:30:04.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.054" endtime="20201030 18:30:04.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.057" endtime="20201030 18:30:04.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.030" endtime="20201030 18:30:04.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.028" endtime="20201030 18:30:04.059"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.066" endtime="20201030 18:30:04.352"></status>
</kw>
<msg timestamp="20201030 18:30:04.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023004306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.064" endtime="20201030 18:30:04.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.363" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023004306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023062542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.356" endtime="20201030 18:30:04.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.365" endtime="20201030 18:30:04.366"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.062" endtime="20201030 18:30:04.367"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.060" endtime="20201030 18:30:04.367"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.371" level="INFO">${RESULT} = [{'diff': 5.8235999999999705e-05}, {'diff': 5.7485999999998955e-05}, {'diff': 5.8083999999999913e-05}, {'diff': 5.730500000000055e-05}, {'diff': 5.7708000000000065e-05}, {'diff': 5.8194000000000995e-0...</msg>
<status status="PASS" starttime="20201030 18:30:04.368" endtime="20201030 18:30:04.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:04.375" level="INFO">${ACCURACY} = {'diff': [5.8235999999999705e-05, 5.7485999999998955e-05, 5.8083999999999913e-05, 5.730500000000055e-05, 5.7708000000000065e-05, 5.8194000000000995e-05, 5.743100000000015e-05, 5.765300000000126e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:04.372" endtime="20201030 18:30:04.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.380" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 18:30:04.379" endtime="20201030 18:30:04.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.382" level="INFO">VALUE: [5.8235999999999705e-05, 5.7485999999998955e-05, 5.8083999999999913e-05, 5.730500000000055e-05, 5.7708000000000065e-05, 5.8194000000000995e-05, 5.743100000000015e-05, 5.765300000000126e-05, 5.7778000000001384e-05, 5.7958000000000315e-05, 5.73749999999984e-05, 5.7291999999996984e-05, 5.738900000000144e-05, 5.813900000000219e-05, 5.7736000000002674e-05, 5.822299999999961e-05, 5.818099999999743e-05, 5.8083999999999913e-05, 5.73610000000023e-05, 5.784799999999923e-05, 5.7971999999999885e-05, 5.777700000000191e-05, 5.7887999999998996e-05, 5.7721999999999635e-05, 5.784699999999976e-05, 5.805499999999783e-05, 5.811099999999958e-05, 5.7430000000000675e-05, 5.829100000000198e-05, 5.733299999999969e-05, 5.788900000000194e-05, 5.8014000000002064e-05, 5.8056000000000774e-05, 5.76810000000004e-05, 5.770899999999954e-05, 5.73749999999984e-05, 5.823699999999918e-05, 5.761099999999908e-05, 5.8263999999998844e-05, 5.812500000000262e-05, 5.8014000000002064e-05, 5.8083999999999913e-05, 5.7444000000000245e-05, 5.730500000000055e-05, 5.8028000000001634e-05, 5.809700000000001e-05, 5.759699999999951e-05, 5.741700000000058e-05, 5.790299999999804e-05, 5.813899999999872e-05]</msg>
<status status="PASS" starttime="20201030 18:30:04.381" endtime="20201030 18:30:04.384"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.376" endtime="20201030 18:30:04.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.388" endtime="20201030 18:30:04.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.387" endtime="20201030 18:30:04.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.385" endtime="20201030 18:30:04.408"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.026" endtime="20201030 18:30:04.409"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.025" endtime="20201030 18:30:04.409"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.418" endtime="20201030 18:30:04.433"></status>
</kw>
<msg timestamp="20201030 18:30:04.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.416" endtime="20201030 18:30:04.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.435" endtime="20201030 18:30:04.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.437" endtime="20201030 18:30:04.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.413" endtime="20201030 18:30:04.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.411" endtime="20201030 18:30:04.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.446" endtime="20201030 18:30:04.731"></status>
</kw>
<msg timestamp="20201030 18:30:04.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.445" endtime="20201030 18:30:04.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019781944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019840514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.735" endtime="20201030 18:30:04.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.743" endtime="20201030 18:30:04.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.442" endtime="20201030 18:30:04.745"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.441" endtime="20201030 18:30:04.746"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:04.750" level="INFO">${RESULT} = [{'diff': 5.8570000000000844e-05}, {'diff': 5.8334000000000163e-05}, {'diff': 5.862499999999965e-05}, {'diff': 5.897300000000036e-05}, {'diff': 5.9070000000001344e-05}, {'diff': 5.8834000000000664e-05...</msg>
<status status="PASS" starttime="20201030 18:30:04.746" endtime="20201030 18:30:04.750"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:04.755" level="INFO">${ACCURACY} = {'diff': [5.8570000000000844e-05, 5.8334000000000163e-05, 5.862499999999965e-05, 5.897300000000036e-05, 5.9070000000001344e-05, 5.8834000000000664e-05, 5.8306000000001024e-05, 5.840299999999854e-05, 5...</msg>
<status status="PASS" starttime="20201030 18:30:04.751" endtime="20201030 18:30:04.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.759" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 18:30:04.758" endtime="20201030 18:30:04.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.762" level="INFO">VALUE: [5.8570000000000844e-05, 5.8334000000000163e-05, 5.862499999999965e-05, 5.897300000000036e-05, 5.9070000000001344e-05, 5.8834000000000664e-05, 5.8306000000001024e-05, 5.840299999999854e-05, 5.8485999999999955e-05, 5.833300000000069e-05, 5.830500000000155e-05, 5.852699999999919e-05, 5.836099999999983e-05, 5.8527999999998664e-05, 5.830500000000155e-05, 5.865299999999879e-05, 5.884700000000076e-05, 5.906900000000187e-05, 5.8291999999997984e-05, 5.8485999999999955e-05, 5.912500000000015e-05, 5.919500000000147e-05, 5.8541999999998234e-05, 5.913899999999972e-05, 5.9138000000000246e-05, 5.8749999999999775e-05, 5.83749999999994e-05, 5.8651999999999316e-05, 5.890300000000251e-05, 5.906900000000187e-05, 5.888899999999947e-05, 5.840300000000201e-05, 5.8722000000000635e-05, 5.8792000000001954e-05, 5.88749999999999e-05, 5.884700000000076e-05, 5.836099999999983e-05, 5.848699999999943e-05, 5.8555999999997804e-05, 5.9263999999999845e-05, 5.8597999999999983e-05, 5.9042000000002204e-05, 5.877699999999944e-05, 5.9180000000002425e-05, 5.838899999999897e-05, 5.90550000000023e-05, 5.8444000000001245e-05, 5.8541999999998234e-05, 5.908299999999797e-05, 5.890300000000251e-05]</msg>
<status status="PASS" starttime="20201030 18:30:04.760" endtime="20201030 18:30:04.762"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.756" endtime="20201030 18:30:04.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:04.767" endtime="20201030 18:30:04.786"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.765" endtime="20201030 18:30:04.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.764" endtime="20201030 18:30:04.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.410" endtime="20201030 18:30:04.787"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.409" endtime="20201030 18:30:04.788"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.796" endtime="20201030 18:30:04.814"></status>
</kw>
<msg timestamp="20201030 18:30:04.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.795" endtime="20201030 18:30:04.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:04.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:04.815" endtime="20201030 18:30:04.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.818" endtime="20201030 18:30:04.819"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.792" endtime="20201030 18:30:04.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.790" endtime="20201030 18:30:04.820"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:04.826" endtime="20201030 18:30:05.114"></status>
</kw>
<msg timestamp="20201030 18:30:05.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:04.825" endtime="20201030 18:30:05.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.125" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.118" endtime="20201030 18:30:05.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.127" endtime="20201030 18:30:05.128"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.822" endtime="20201030 18:30:05.129"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.821" endtime="20201030 18:30:05.129"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.133" level="INFO">${RESULT} = [{'diff': 5.966700000000283e-05}, {'diff': 5.936100000000083e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 5.941700000000258e-05}, {'diff': 5.941699999999911e-05}, {'diff': 6.0013999999997125e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:05.130" endtime="20201030 18:30:05.133"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:05.137" level="INFO">${ACCURACY} = {'diff': [5.966700000000283e-05, 5.936100000000083e-05, 6.0250000000001275e-05, 5.941700000000258e-05, 5.941699999999911e-05, 6.0013999999997125e-05, 5.9722000000001635e-05, 5.9514000000000095e-05, 5....</msg>
<status status="PASS" starttime="20201030 18:30:05.134" endtime="20201030 18:30:05.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.143" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 18:30:05.142" endtime="20201030 18:30:05.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.146" level="INFO">VALUE: [5.966700000000283e-05, 5.936100000000083e-05, 6.0250000000001275e-05, 5.941700000000258e-05, 5.941699999999911e-05, 6.0013999999997125e-05, 5.9722000000001635e-05, 5.9514000000000095e-05, 5.9929999999999706e-05, 6.0014000000000595e-05, 6.0014000000000595e-05, 5.9457999999998346e-05, 5.9415999999999636e-05, 5.9472000000001385e-05, 5.990300000000004e-05, 6.016699999999986e-05, 6.008299999999897e-05, 5.9500000000000525e-05, 5.9306000000002024e-05, 5.970900000000154e-05, 5.9319999999998124e-05, 5.9486000000000955e-05, 5.9665999999999886e-05, 5.966699999999936e-05, 5.965299999999979e-05, 6.004100000000026e-05, 5.988900000000047e-05, 5.9458000000001815e-05, 5.986100000000133e-05, 5.9929999999999706e-05, 6.00689999999994e-05, 5.991699999999961e-05, 5.961100000000108e-05, 5.931899999999865e-05, 5.9722000000001635e-05, 6.0221999999998665e-05, 5.9791999999999484e-05, 5.9334000000001164e-05, 5.972300000000111e-05, 6.015300000000029e-05, 5.995899999999832e-05, 5.977700000000044e-05, 6.012500000000115e-05, 5.930499999999908e-05, 5.9415999999999636e-05, 5.9472000000001385e-05, 5.9777999999999915e-05, 5.938899999999997e-05, 5.9722000000001635e-05, 5.9514000000000095e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.145" endtime="20201030 18:30:05.147"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.138" endtime="20201030 18:30:05.147"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.151" endtime="20201030 18:30:05.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.150" endtime="20201030 18:30:05.171"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.149" endtime="20201030 18:30:05.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.788" endtime="20201030 18:30:05.172"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:04.788" endtime="20201030 18:30:05.172"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.183" endtime="20201030 18:30:05.200"></status>
</kw>
<msg timestamp="20201030 18:30:05.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.181" endtime="20201030 18:30:05.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.202" endtime="20201030 18:30:05.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.204" endtime="20201030 18:30:05.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.179" endtime="20201030 18:30:05.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.176" endtime="20201030 18:30:05.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.214" endtime="20201030 18:30:05.499"></status>
</kw>
<msg timestamp="20201030 18:30:05.502" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.212" endtime="20201030 18:30:05.502"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022715653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022775944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.503" endtime="20201030 18:30:05.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.511" endtime="20201030 18:30:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.209" endtime="20201030 18:30:05.513"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.208" endtime="20201030 18:30:05.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.517" level="INFO">${RESULT} = [{'diff': 6.029100000000051e-05}, {'diff': 6.088799999999853e-05}, {'diff': 6.12499999999988e-05}, {'diff': 6.031899999999965e-05}, {'diff': 6.0416000000000636e-05}, {'diff': 6.0971999999999416e-05}, ...</msg>
<status status="PASS" starttime="20201030 18:30:05.514" endtime="20201030 18:30:05.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:05.522" level="INFO">${ACCURACY} = {'diff': [6.029100000000051e-05, 6.088799999999853e-05, 6.12499999999988e-05, 6.031899999999965e-05, 6.0416000000000636e-05, 6.0971999999999416e-05, 6.104200000000073e-05, 6.0486000000001955e-05, 6.10...</msg>
<status status="PASS" starttime="20201030 18:30:05.518" endtime="20201030 18:30:05.522"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.526" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 18:30:05.525" endtime="20201030 18:30:05.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.529" level="INFO">VALUE: [6.029100000000051e-05, 6.088799999999853e-05, 6.12499999999988e-05, 6.031899999999965e-05, 6.0416000000000636e-05, 6.0971999999999416e-05, 6.104200000000073e-05, 6.0486000000001955e-05, 6.1013999999998125e-05, 6.086100000000233e-05, 6.036099999999836e-05, 6.043099999999968e-05, 6.120899999999957e-05, 6.095899999999932e-05, 6.043099999999968e-05, 6.08750000000019e-05, 6.113899999999825e-05, 6.059699999999904e-05, 6.12499999999988e-05, 6.031899999999965e-05, 6.0471999999998916e-05, 6.054099999999729e-05, 6.113900000000172e-05, 6.0527999999997195e-05, 6.066700000000036e-05, 6.1013999999998125e-05, 6.0971999999999416e-05, 6.0735999999998735e-05, 6.106999999999987e-05, 6.098699999999846e-05, 6.0485999999998485e-05, 6.097299999999889e-05, 6.1013999999998125e-05, 6.055500000000033e-05, 6.0457999999999346e-05, 6.0680000000000456e-05, 6.036100000000183e-05, 6.091700000000061e-05, 6.12080000000001e-05, 6.043099999999968e-05, 6.081900000000015e-05, 6.083299999999972e-05, 6.10560000000003e-05, 6.0514000000001095e-05, 6.0305999999999554e-05, 6.0485999999998485e-05, 6.070899999999907e-05, 6.111100000000258e-05, 6.0457999999999346e-05, 6.033299999999922e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.527" endtime="20201030 18:30:05.530"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.523" endtime="20201030 18:30:05.531"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.534" endtime="20201030 18:30:05.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.533" endtime="20201030 18:30:05.554"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.532" endtime="20201030 18:30:05.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.174" endtime="20201030 18:30:05.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.173" endtime="20201030 18:30:05.555"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.564" endtime="20201030 18:30:05.581"></status>
</kw>
<msg timestamp="20201030 18:30:05.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.562" endtime="20201030 18:30:05.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.584" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.582" endtime="20201030 18:30:05.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.585" endtime="20201030 18:30:05.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.560" endtime="20201030 18:30:05.587"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.558" endtime="20201030 18:30:05.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.594" endtime="20201030 18:30:05.879"></status>
</kw>
<msg timestamp="20201030 18:30:05.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.593" endtime="20201030 18:30:05.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019753111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019814417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.883" endtime="20201030 18:30:05.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.891" endtime="20201030 18:30:05.893"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.590" endtime="20201030 18:30:05.894"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.588" endtime="20201030 18:30:05.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:05.898" level="INFO">${RESULT} = [{'diff': 6.130600000000055e-05}, {'diff': 6.16950000000005e-05}, {'diff': 6.223699999999971e-05}, {'diff': 6.1888999999999e-05}, {'diff': 6.166599999999842e-05}, {'diff': 6.177699999999897e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:05.895" endtime="20201030 18:30:05.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:05.903" level="INFO">${ACCURACY} = {'diff': [6.130600000000055e-05, 6.16950000000005e-05, 6.223699999999971e-05, 6.1888999999999e-05, 6.166599999999842e-05, 6.177699999999897e-05, 6.161099999999961e-05, 6.154100000000176e-05, 6.1846999...</msg>
<status status="PASS" starttime="20201030 18:30:05.899" endtime="20201030 18:30:05.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.908" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 18:30:05.907" endtime="20201030 18:30:05.908"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.910" level="INFO">VALUE: [6.130600000000055e-05, 6.16950000000005e-05, 6.223699999999971e-05, 6.1888999999999e-05, 6.166599999999842e-05, 6.177699999999897e-05, 6.161099999999961e-05, 6.154100000000176e-05, 6.184699999999682e-05, 6.137499999999893e-05, 6.179199999999802e-05, 6.195800000000085e-05, 6.194499999999728e-05, 6.220900000000057e-05, 6.17360000000032e-05, 6.177799999999845e-05, 6.197299999999989e-05, 6.143100000000068e-05, 6.134800000000273e-05, 6.195799999999738e-05, 6.192999999999824e-05, 6.165200000000232e-05, 6.1888999999999e-05, 6.142999999999774e-05, 6.172200000000017e-05, 6.173599999999974e-05, 6.22080000000011e-05, 6.126399999999838e-05, 6.229199999999852e-05, 6.181999999999716e-05, 6.195900000000032e-05, 6.195900000000032e-05, 6.22499999999998e-05, 6.133300000000022e-05, 6.201399999999913e-05, 6.219400000000153e-05, 6.195800000000085e-05, 6.165300000000179e-05, 6.190299999999857e-05, 6.213899999999925e-05, 6.149999999999906e-05, 6.217999999999849e-05, 6.168099999999746e-05, 6.190300000000204e-05, 6.20560000000013e-05, 6.149999999999906e-05, 6.227799999999895e-05, 6.147199999999992e-05, 6.227799999999895e-05, 6.13889999999985e-05]</msg>
<status status="PASS" starttime="20201030 18:30:05.909" endtime="20201030 18:30:05.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.904" endtime="20201030 18:30:05.911"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:05.915" endtime="20201030 18:30:05.935"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.914" endtime="20201030 18:30:05.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.912" endtime="20201030 18:30:05.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.556" endtime="20201030 18:30:05.936"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.555" endtime="20201030 18:30:05.936"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.945" endtime="20201030 18:30:05.962"></status>
</kw>
<msg timestamp="20201030 18:30:05.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.944" endtime="20201030 18:30:05.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:05.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:05.963" endtime="20201030 18:30:05.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.966" endtime="20201030 18:30:05.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.941" endtime="20201030 18:30:05.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.939" endtime="20201030 18:30:05.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:05.975" endtime="20201030 18:30:06.262"></status>
</kw>
<msg timestamp="20201030 18:30:06.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:05.973" endtime="20201030 18:30:06.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020138569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020201931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.266" endtime="20201030 18:30:06.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.274" endtime="20201030 18:30:06.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.971" endtime="20201030 18:30:06.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.969" endtime="20201030 18:30:06.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.281" level="INFO">${RESULT} = [{'diff': 6.336200000000083e-05}, {'diff': 6.27500000000003e-05}, {'diff': 6.284699999999782e-05}, {'diff': 6.295799999999838e-05}, {'diff': 6.23889999999995e-05}, {'diff': 6.324999999999734e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:06.278" endtime="20201030 18:30:06.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:06.285" level="INFO">${ACCURACY} = {'diff': [6.336200000000083e-05, 6.27500000000003e-05, 6.284699999999782e-05, 6.295799999999838e-05, 6.23889999999995e-05, 6.324999999999734e-05, 6.272200000000117e-05, 6.272200000000117e-05, 6.2889e-...</msg>
<status status="PASS" starttime="20201030 18:30:06.282" endtime="20201030 18:30:06.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.289" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 18:30:06.288" endtime="20201030 18:30:06.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.292" level="INFO">VALUE: [6.336200000000083e-05, 6.27500000000003e-05, 6.284699999999782e-05, 6.295799999999838e-05, 6.23889999999995e-05, 6.324999999999734e-05, 6.272200000000117e-05, 6.272200000000117e-05, 6.2889e-05, 6.250000000000006e-05, 6.290299999999957e-05, 6.279099999999954e-05, 6.277699999999997e-05, 6.227699999999947e-05, 6.231899999999818e-05, 6.294400000000228e-05, 6.305499999999936e-05, 6.295799999999838e-05, 6.315299999999982e-05, 6.248600000000049e-05, 6.284699999999782e-05, 6.241700000000211e-05, 6.247200000000092e-05, 6.266700000000236e-05, 6.254199999999877e-05, 6.308400000000144e-05, 6.287500000000043e-05, 6.280599999999859e-05, 6.261100000000061e-05, 6.277699999999997e-05, 6.305499999999936e-05, 6.280499999999911e-05, 6.265300000000279e-05, 6.313900000000025e-05, 6.231900000000165e-05, 6.248599999999702e-05, 6.333299999999875e-05, 6.313900000000025e-05, 6.318099999999896e-05, 6.312500000000068e-05, 6.294499999999828e-05, 6.254199999999877e-05, 6.247200000000092e-05, 6.327700000000047e-05, 6.318100000000243e-05, 6.29439999999988e-05, 6.2889e-05, 6.23889999999995e-05, 6.230500000000208e-05, 6.270799999999813e-05]</msg>
<status status="PASS" starttime="20201030 18:30:06.290" endtime="20201030 18:30:06.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.286" endtime="20201030 18:30:06.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.297" endtime="20201030 18:30:06.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.295" endtime="20201030 18:30:06.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.294" endtime="20201030 18:30:06.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.937" endtime="20201030 18:30:06.318"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:05.937" endtime="20201030 18:30:06.318"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.327" endtime="20201030 18:30:06.345"></status>
</kw>
<msg timestamp="20201030 18:30:06.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.325" endtime="20201030 18:30:06.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.347" endtime="20201030 18:30:06.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.349" endtime="20201030 18:30:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.322" endtime="20201030 18:30:06.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.320" endtime="20201030 18:30:06.352"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.358" endtime="20201030 18:30:06.643"></status>
</kw>
<msg timestamp="20201030 18:30:06.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020752639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.357" endtime="20201030 18:30:06.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020752639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.647" endtime="20201030 18:30:06.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.656" endtime="20201030 18:30:06.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.354" endtime="20201030 18:30:06.658"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.352" endtime="20201030 18:30:06.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:06.662" level="INFO">${RESULT} = [{'diff': 6.423599999999877e-05}, {'diff': 6.380600000000305e-05}, {'diff': 6.416700000000039e-05}, {'diff': 6.419400000000006e-05}, {'diff': 6.395900000000232e-05}, {'diff': 6.348600000000149e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:06.659" endtime="20201030 18:30:06.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:06.666" level="INFO">${ACCURACY} = {'diff': [6.423599999999877e-05, 6.380600000000305e-05, 6.416700000000039e-05, 6.419400000000006e-05, 6.395900000000232e-05, 6.348600000000149e-05, 6.413899999999778e-05, 6.348700000000096e-05, 6.3389...</msg>
<status status="PASS" starttime="20201030 18:30:06.663" endtime="20201030 18:30:06.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.671" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 18:30:06.670" endtime="20201030 18:30:06.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.673" level="INFO">VALUE: [6.423599999999877e-05, 6.380600000000305e-05, 6.416700000000039e-05, 6.419400000000006e-05, 6.395900000000232e-05, 6.348600000000149e-05, 6.413899999999778e-05, 6.348700000000096e-05, 6.33890000000005e-05, 6.331899999999918e-05, 6.400000000000156e-05, 6.331900000000265e-05, 6.342999999999974e-05, 6.39439999999998e-05, 6.405599999999984e-05, 6.354199999999977e-05, 6.379099999999707e-05, 6.404200000000027e-05, 6.404100000000079e-05, 6.40280000000007e-05, 6.365300000000032e-05, 6.383399999999873e-05, 6.401400000000113e-05, 6.397199999999895e-05, 6.383300000000272e-05, 6.412500000000168e-05, 6.40829999999995e-05, 6.387499999999796e-05, 6.340300000000007e-05, 6.419400000000006e-05, 6.419400000000006e-05, 6.406899999999993e-05, 6.397199999999895e-05, 6.344500000000225e-05, 6.343099999999921e-05, 6.40699999999994e-05, 6.38479999999983e-05, 6.354199999999977e-05, 6.400000000000156e-05, 6.404100000000079e-05, 6.384699999999882e-05, 6.417999999999702e-05, 6.39020000000011e-05, 6.381899999999968e-05, 6.424999999999834e-05, 6.337499999999746e-05, 6.345899999999835e-05, 6.365300000000032e-05, 6.344500000000225e-05, 6.36950000000025e-05]</msg>
<status status="PASS" starttime="20201030 18:30:06.672" endtime="20201030 18:30:06.675"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.667" endtime="20201030 18:30:06.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:06.679" endtime="20201030 18:30:06.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.678" endtime="20201030 18:30:06.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.677" endtime="20201030 18:30:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.319" endtime="20201030 18:30:06.700"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.318" endtime="20201030 18:30:06.700"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.709" endtime="20201030 18:30:06.727"></status>
</kw>
<msg timestamp="20201030 18:30:06.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.707" endtime="20201030 18:30:06.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:06.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:06.728" endtime="20201030 18:30:06.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.731" endtime="20201030 18:30:06.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.705" endtime="20201030 18:30:06.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.703" endtime="20201030 18:30:06.733"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:06.740" endtime="20201030 18:30:07.026"></status>
</kw>
<msg timestamp="20201030 18:30:07.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:06.738" endtime="20201030 18:30:07.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020644347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020709625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.030" endtime="20201030 18:30:07.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.038" endtime="20201030 18:30:07.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.736" endtime="20201030 18:30:07.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.734" endtime="20201030 18:30:07.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.045" level="INFO">${RESULT} = [{'diff': 6.527799999999848e-05}, {'diff': 6.448599999999902e-05}, {'diff': 6.50280000000017e-05}, {'diff': 6.519500000000053e-05}, {'diff': 6.505599999999737e-05}, {'diff': 6.465300000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:07.042" endtime="20201030 18:30:07.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:07.050" level="INFO">${ACCURACY} = {'diff': [6.527799999999848e-05, 6.448599999999902e-05, 6.50280000000017e-05, 6.519500000000053e-05, 6.505599999999737e-05, 6.465300000000132e-05, 6.451399999999816e-05, 6.508399999999998e-05, 6.44999...</msg>
<status status="PASS" starttime="20201030 18:30:07.046" endtime="20201030 18:30:07.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.054" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 18:30:07.053" endtime="20201030 18:30:07.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.057" level="INFO">VALUE: [6.527799999999848e-05, 6.448599999999902e-05, 6.50280000000017e-05, 6.519500000000053e-05, 6.505599999999737e-05, 6.465300000000132e-05, 6.451399999999816e-05, 6.508399999999998e-05, 6.449999999999859e-05, 6.465200000000185e-05, 6.433299999999975e-05, 6.509700000000007e-05, 6.495899999999985e-05, 6.519400000000106e-05, 6.501399999999866e-05, 6.448599999999902e-05, 6.470800000000013e-05, 6.447199999999945e-05, 6.44029999999976e-05, 6.461099999999914e-05, 6.508399999999998e-05, 6.499999999999909e-05, 6.50700000000004e-05, 6.500000000000256e-05, 6.482000000000016e-05, 6.513799999999931e-05, 6.468099999999699e-05, 6.441600000000117e-05, 6.456900000000043e-05, 6.451400000000163e-05, 6.436099999999889e-05, 6.524999999999934e-05, 6.483300000000025e-05, 6.504200000000127e-05, 6.443100000000021e-05, 6.43890000000015e-05, 6.448600000000249e-05, 6.52090000000001e-05, 6.43479999999988e-05, 6.494500000000028e-05, 6.52220000000002e-05, 6.441600000000117e-05, 6.480499999999764e-05, 6.448599999999902e-05, 6.431900000000018e-05, 6.513900000000225e-05, 6.491700000000114e-05, 6.455600000000034e-05, 6.448599999999902e-05, 6.473599999999927e-05]</msg>
<status status="PASS" starttime="20201030 18:30:07.056" endtime="20201030 18:30:07.058"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.051" endtime="20201030 18:30:07.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.062" endtime="20201030 18:30:07.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.060" endtime="20201030 18:30:07.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.059" endtime="20201030 18:30:07.082"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.701" endtime="20201030 18:30:07.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:06.700" endtime="20201030 18:30:07.083"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.091" endtime="20201030 18:30:07.109"></status>
</kw>
<msg timestamp="20201030 18:30:07.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.090" endtime="20201030 18:30:07.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.110" endtime="20201030 18:30:07.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.113" endtime="20201030 18:30:07.114"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.087" endtime="20201030 18:30:07.115"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.085" endtime="20201030 18:30:07.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.122" endtime="20201030 18:30:07.409"></status>
</kw>
<msg timestamp="20201030 18:30:07.412" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020576931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.120" endtime="20201030 18:30:07.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020576931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020642639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.413" endtime="20201030 18:30:07.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.421" endtime="20201030 18:30:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.118" endtime="20201030 18:30:07.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.116" endtime="20201030 18:30:07.424"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.428" level="INFO">${RESULT} = [{'diff': 6.570800000000113e-05}, {'diff': 6.582000000000116e-05}, {'diff': 6.561100000000014e-05}, {'diff': 6.57220000000007e-05}, {'diff': 6.537499999999946e-05}, {'diff': 6.556900000000143e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:07.424" endtime="20201030 18:30:07.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:07.432" level="INFO">${ACCURACY} = {'diff': [6.570800000000113e-05, 6.582000000000116e-05, 6.561100000000014e-05, 6.57220000000007e-05, 6.537499999999946e-05, 6.556900000000143e-05, 6.593099999999824e-05, 6.540199999999913e-05, 6.61529...</msg>
<status status="PASS" starttime="20201030 18:30:07.429" endtime="20201030 18:30:07.432"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.436" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 18:30:07.435" endtime="20201030 18:30:07.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.439" level="INFO">VALUE: [6.570800000000113e-05, 6.582000000000116e-05, 6.561100000000014e-05, 6.57220000000007e-05, 6.537499999999946e-05, 6.556900000000143e-05, 6.593099999999824e-05, 6.540199999999913e-05, 6.615299999999935e-05, 6.588899999999953e-05, 6.529099999999857e-05, 6.570800000000113e-05, 6.595799999999791e-05, 6.574999999999984e-05, 6.543099999999774e-05, 6.572199999999723e-05, 6.543099999999774e-05, 6.583300000000125e-05, 6.538899999999903e-05, 6.5889000000003e-05, 6.543099999999774e-05, 6.543099999999774e-05, 6.577799999999898e-05, 6.580500000000211e-05, 6.531899999999771e-05, 6.601400000000313e-05, 6.540300000000207e-05, 6.605500000000236e-05, 6.530499999999814e-05, 6.561100000000014e-05, 6.565300000000232e-05, 6.565299999999885e-05, 6.595799999999791e-05, 6.586100000000039e-05, 6.5583999999997e-05, 6.533400000000023e-05, 6.595900000000085e-05, 6.602799999999923e-05, 6.55969999999971e-05, 6.601399999999966e-05, 6.574999999999984e-05, 6.600000000000009e-05, 6.595800000000138e-05, 6.587499999999996e-05, 6.625000000000034e-05, 6.613900000000325e-05, 6.601399999999966e-05, 6.549999999999959e-05, 6.572300000000017e-05, 6.5889000000003e-05]</msg>
<status status="PASS" starttime="20201030 18:30:07.438" endtime="20201030 18:30:07.440"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.433" endtime="20201030 18:30:07.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.444" endtime="20201030 18:30:07.463"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.443" endtime="20201030 18:30:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.441" endtime="20201030 18:30:07.464"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.084" endtime="20201030 18:30:07.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.083" endtime="20201030 18:30:07.465"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.473" endtime="20201030 18:30:07.493"></status>
</kw>
<msg timestamp="20201030 18:30:07.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.472" endtime="20201030 18:30:07.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.494" endtime="20201030 18:30:07.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.497" endtime="20201030 18:30:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.469" endtime="20201030 18:30:07.499"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.467" endtime="20201030 18:30:07.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.506" endtime="20201030 18:30:07.792"></status>
</kw>
<msg timestamp="20201030 18:30:07.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.505" endtime="20201030 18:30:07.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023011472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023078597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.796" endtime="20201030 18:30:07.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.805" endtime="20201030 18:30:07.806"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.502" endtime="20201030 18:30:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.500" endtime="20201030 18:30:07.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:07.811" level="INFO">${RESULT} = [{'diff': 6.712499999999774e-05}, {'diff': 6.715300000000035e-05}, {'diff': 6.683299999999878e-05}, {'diff': 6.659700000000157e-05}, {'diff': 6.665299999999985e-05}, {'diff': 6.686099999999792e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:07.808" endtime="20201030 18:30:07.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:07.815" level="INFO">${ACCURACY} = {'diff': [6.712499999999774e-05, 6.715300000000035e-05, 6.683299999999878e-05, 6.659700000000157e-05, 6.665299999999985e-05, 6.686099999999792e-05, 6.686100000000139e-05, 6.709700000000207e-05, 6.7194...</msg>
<status status="PASS" starttime="20201030 18:30:07.812" endtime="20201030 18:30:07.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.820" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 18:30:07.819" endtime="20201030 18:30:07.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.822" level="INFO">VALUE: [6.712499999999774e-05, 6.715300000000035e-05, 6.683299999999878e-05, 6.659700000000157e-05, 6.665299999999985e-05, 6.686099999999792e-05, 6.686100000000139e-05, 6.709700000000207e-05, 6.719499999999906e-05, 6.697199999999848e-05, 6.701400000000066e-05, 6.648700000000049e-05, 6.68480000000013e-05, 6.633300000000175e-05, 6.716599999999698e-05, 6.661100000000114e-05, 6.697199999999848e-05, 6.669399999999909e-05, 6.650000000000059e-05, 6.723600000000177e-05, 6.684699999999835e-05, 6.70419999999998e-05, 6.718099999999949e-05, 6.681900000000268e-05, 6.641700000000264e-05, 6.688900000000053e-05, 6.684700000000182e-05, 6.706900000000293e-05, 6.669399999999909e-05, 6.637500000000046e-05, 6.62639999999999e-05, 6.636100000000089e-05, 6.670799999999866e-05, 6.64440000000023e-05, 6.636100000000089e-05, 6.637499999999699e-05, 6.654200000000277e-05, 6.644499999999831e-05, 6.648600000000102e-05, 6.643099999999874e-05, 6.640300000000307e-05, 6.677799999999998e-05, 6.629199999999905e-05, 6.697199999999848e-05, 6.702700000000075e-05, 6.695800000000238e-05, 6.670799999999866e-05, 6.638900000000003e-05, 6.720799999999916e-05, 6.701400000000066e-05]</msg>
<status status="PASS" starttime="20201030 18:30:07.821" endtime="20201030 18:30:07.824"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.816" endtime="20201030 18:30:07.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:07.828" endtime="20201030 18:30:07.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.827" endtime="20201030 18:30:07.848"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.825" endtime="20201030 18:30:07.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.466" endtime="20201030 18:30:07.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.465" endtime="20201030 18:30:07.849"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.858" endtime="20201030 18:30:07.875"></status>
</kw>
<msg timestamp="20201030 18:30:07.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.856" endtime="20201030 18:30:07.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:07.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:07.877" endtime="20201030 18:30:07.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.879" endtime="20201030 18:30:07.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.853" endtime="20201030 18:30:07.881"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.851" endtime="20201030 18:30:07.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:07.888" endtime="20201030 18:30:08.175"></status>
</kw>
<msg timestamp="20201030 18:30:08.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:07.886" endtime="20201030 18:30:08.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019656847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019724889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.179" endtime="20201030 18:30:08.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.187" endtime="20201030 18:30:08.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.884" endtime="20201030 18:30:08.189"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.882" endtime="20201030 18:30:08.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.194" level="INFO">${RESULT} = [{'diff': 6.804199999999733e-05}, {'diff': 6.730500000000014e-05}, {'diff': 6.801400000000166e-05}, {'diff': 6.823600000000277e-05}, {'diff': 6.77220000000027e-05}, {'diff': 6.806999999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:08.190" endtime="20201030 18:30:08.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:08.199" level="INFO">${ACCURACY} = {'diff': [6.804199999999733e-05, 6.730500000000014e-05, 6.801400000000166e-05, 6.823600000000277e-05, 6.77220000000027e-05, 6.806999999999994e-05, 6.781999999999969e-05, 6.794499999999981e-05, 6.77219...</msg>
<status status="PASS" starttime="20201030 18:30:08.195" endtime="20201030 18:30:08.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.203" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 18:30:08.202" endtime="20201030 18:30:08.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.206" level="INFO">VALUE: [6.804199999999733e-05, 6.730500000000014e-05, 6.801400000000166e-05, 6.823600000000277e-05, 6.77220000000027e-05, 6.806999999999994e-05, 6.781999999999969e-05, 6.794499999999981e-05, 6.772199999999923e-05, 6.824999999999887e-05, 6.770799999999966e-05, 6.736100000000189e-05, 6.786099999999892e-05, 6.781999999999969e-05, 6.744399999999984e-05, 6.812499999999874e-05, 6.730599999999962e-05, 6.737500000000146e-05, 6.786100000000239e-05, 6.820899999999963e-05, 6.808400000000298e-05, 6.734699999999885e-05, 6.765300000000085e-05, 6.777800000000098e-05, 6.77229999999987e-05, 6.743000000000027e-05, 6.779100000000107e-05, 6.808300000000003e-05, 6.763899999999781e-05, 6.806900000000046e-05, 6.786099999999892e-05, 6.824999999999887e-05, 6.745799999999941e-05, 6.731999999999919e-05, 6.825000000000234e-05, 6.745899999999888e-05, 6.811099999999917e-05, 6.737499999999799e-05, 6.805500000000089e-05, 6.813799999999884e-05, 6.795799999999991e-05, 6.740199999999766e-05, 6.772199999999923e-05, 6.795799999999991e-05, 6.832000000000019e-05, 6.763900000000128e-05, 6.768099999999999e-05, 6.815300000000135e-05, 6.819500000000006e-05, 6.802800000000123e-05]</msg>
<status status="PASS" starttime="20201030 18:30:08.204" endtime="20201030 18:30:08.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.200" endtime="20201030 18:30:08.207"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.211" endtime="20201030 18:30:08.230"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.209" endtime="20201030 18:30:08.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.208" endtime="20201030 18:30:08.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.850" endtime="20201030 18:30:08.231"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:07.849" endtime="20201030 18:30:08.232"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.240" endtime="20201030 18:30:08.259"></status>
</kw>
<msg timestamp="20201030 18:30:08.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.239" endtime="20201030 18:30:08.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.260" endtime="20201030 18:30:08.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.263" endtime="20201030 18:30:08.264"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.236" endtime="20201030 18:30:08.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.234" endtime="20201030 18:30:08.265"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.271" endtime="20201030 18:30:08.557"></status>
</kw>
<msg timestamp="20201030 18:30:08.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.270" endtime="20201030 18:30:08.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019630986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019699903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.562" endtime="20201030 18:30:08.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.570" endtime="20201030 18:30:08.571"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.267" endtime="20201030 18:30:08.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.266" endtime="20201030 18:30:08.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.576" level="INFO">${RESULT} = [{'diff': 6.891700000000167e-05}, {'diff': 6.87229999999997e-05}, {'diff': 6.840299999999813e-05}, {'diff': 6.891599999999873e-05}, {'diff': 6.844400000000084e-05}, {'diff': 6.902699999999928e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:08.573" endtime="20201030 18:30:08.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:08.581" level="INFO">${ACCURACY} = {'diff': [6.891700000000167e-05, 6.87229999999997e-05, 6.840299999999813e-05, 6.891599999999873e-05, 6.844400000000084e-05, 6.902699999999928e-05, 6.927799999999901e-05, 6.872200000000023e-05, 6.90279...</msg>
<status status="PASS" starttime="20201030 18:30:08.577" endtime="20201030 18:30:08.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.585" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 18:30:08.584" endtime="20201030 18:30:08.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.588" level="INFO">VALUE: [6.891700000000167e-05, 6.87229999999997e-05, 6.840299999999813e-05, 6.891599999999873e-05, 6.844400000000084e-05, 6.902699999999928e-05, 6.927799999999901e-05, 6.872200000000023e-05, 6.902799999999876e-05, 6.898600000000005e-05, 6.894399999999787e-05, 6.913799999999984e-05, 6.897200000000048e-05, 6.841700000000117e-05, 6.931900000000171e-05, 6.918100000000149e-05, 6.888900000000253e-05, 6.843100000000074e-05, 6.876399999999894e-05, 6.886099999999992e-05, 6.898600000000005e-05, 6.863900000000228e-05, 6.872200000000023e-05, 6.887499999999949e-05, 6.920800000000116e-05, 6.841700000000117e-05, 6.911100000000017e-05, 6.924999999999987e-05, 6.843099999999727e-05, 6.926399999999944e-05, 6.849999999999912e-05, 6.883400000000026e-05, 6.908399999999704e-05, 6.851299999999921e-05, 6.837499999999899e-05, 6.847199999999998e-05, 6.911100000000017e-05, 6.855500000000139e-05, 6.841599999999823e-05, 6.919400000000159e-05, 6.890299999999863e-05, 6.872200000000023e-05, 6.920900000000063e-05, 6.919499999999759e-05, 6.869499999999709e-05, 6.919500000000106e-05, 6.840200000000213e-05, 6.852699999999878e-05, 6.87359999999998e-05, 6.901299999999971e-05]</msg>
<status status="PASS" starttime="20201030 18:30:08.586" endtime="20201030 18:30:08.588"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.581" endtime="20201030 18:30:08.589"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.593" endtime="20201030 18:30:08.612"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.591" endtime="20201030 18:30:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.590" endtime="20201030 18:30:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.233" endtime="20201030 18:30:08.613"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.232" endtime="20201030 18:30:08.613"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.622" endtime="20201030 18:30:08.640"></status>
</kw>
<msg timestamp="20201030 18:30:08.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.620" endtime="20201030 18:30:08.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:08.642" endtime="20201030 18:30:08.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.644" endtime="20201030 18:30:08.646"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.618" endtime="20201030 18:30:08.647"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.616" endtime="20201030 18:30:08.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.654" endtime="20201030 18:30:08.939"></status>
</kw>
<msg timestamp="20201030 18:30:08.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.652" endtime="20201030 18:30:08.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020583458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020653361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:08.943" endtime="20201030 18:30:08.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:08.951" endtime="20201030 18:30:08.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.650" endtime="20201030 18:30:08.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.648" endtime="20201030 18:30:08.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:08.958" level="INFO">${RESULT} = [{'diff': 6.990299999999963e-05}, {'diff': 6.990299999999963e-05}, {'diff': 6.936100000000042e-05}, {'diff': 7.006999999999847e-05}, {'diff': 6.98620000000004e-05}, {'diff': 6.950000000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:08.955" endtime="20201030 18:30:08.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:08.963" level="INFO">${ACCURACY} = {'diff': [6.990299999999963e-05, 6.990299999999963e-05, 6.936100000000042e-05, 7.006999999999847e-05, 6.98620000000004e-05, 6.950000000000012e-05, 6.961100000000067e-05, 6.954199999999883e-05, 7.01120...</msg>
<status status="PASS" starttime="20201030 18:30:08.959" endtime="20201030 18:30:08.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.968" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 18:30:08.966" endtime="20201030 18:30:08.968"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:08.970" level="INFO">VALUE: [6.990299999999963e-05, 6.990299999999963e-05, 6.936100000000042e-05, 7.006999999999847e-05, 6.98620000000004e-05, 6.950000000000012e-05, 6.961100000000067e-05, 6.954199999999883e-05, 7.011200000000065e-05, 7.027800000000001e-05, 7.008299999999856e-05, 7.001400000000019e-05, 7.013900000000031e-05, 7.008300000000203e-05, 7.013900000000031e-05, 6.945899999999741e-05, 7.004199999999933e-05, 6.944499999999784e-05, 6.997300000000095e-05, 6.982000000000169e-05, 6.979199999999908e-05, 7.00970000000016e-05, 6.955600000000187e-05, 6.987500000000049e-05, 6.977799999999951e-05, 6.970800000000166e-05, 6.984700000000135e-05, 6.981899999999874e-05, 6.979200000000255e-05, 6.976399999999994e-05, 6.944400000000184e-05, 7.019399999999912e-05, 6.984700000000135e-05, 7.005600000000237e-05, 6.997299999999748e-05, 6.99030000000031e-05, 6.95420000000023e-05, 6.980499999999917e-05, 6.994500000000181e-05, 6.995799999999844e-05, 6.966700000000242e-05, 7.015299999999988e-05, 7.019399999999912e-05, 7.004199999999933e-05, 7.008300000000203e-05, 6.938900000000303e-05, 7.016699999999945e-05, 7.00970000000016e-05, 6.97909999999996e-05, 6.929199999999858e-05]</msg>
<status status="PASS" starttime="20201030 18:30:08.969" endtime="20201030 18:30:08.972"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.963" endtime="20201030 18:30:08.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:08.977" endtime="20201030 18:30:08.996"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.975" endtime="20201030 18:30:08.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.974" endtime="20201030 18:30:08.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.614" endtime="20201030 18:30:08.997"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.614" endtime="20201030 18:30:08.997"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.006" endtime="20201030 18:30:09.024"></status>
</kw>
<msg timestamp="20201030 18:30:09.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.005" endtime="20201030 18:30:09.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.026" endtime="20201030 18:30:09.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.028" endtime="20201030 18:30:09.030"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.002" endtime="20201030 18:30:09.031"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.000" endtime="20201030 18:30:09.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.038" endtime="20201030 18:30:09.322"></status>
</kw>
<msg timestamp="20201030 18:30:09.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.036" endtime="20201030 18:30:09.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019957236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020028014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.326" endtime="20201030 18:30:09.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.334" endtime="20201030 18:30:09.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.033" endtime="20201030 18:30:09.336"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.032" endtime="20201030 18:30:09.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.341" level="INFO">${RESULT} = [{'diff': 7.077800000000051e-05}, {'diff': 7.066699999999995e-05}, {'diff': 7.05559999999994e-05}, {'diff': 7.05979999999981e-05}, {'diff': 7.108399999999904e-05}, {'diff': 7.127699999999806e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:09.337" endtime="20201030 18:30:09.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:09.346" level="INFO">${ACCURACY} = {'diff': [7.077800000000051e-05, 7.066699999999995e-05, 7.05559999999994e-05, 7.05979999999981e-05, 7.108399999999904e-05, 7.127699999999806e-05, 7.07360000000018e-05, 7.04299999999998e-05, 7.10969999...</msg>
<status status="PASS" starttime="20201030 18:30:09.342" endtime="20201030 18:30:09.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.350" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 18:30:09.349" endtime="20201030 18:30:09.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.353" level="INFO">VALUE: [7.077800000000051e-05, 7.066699999999995e-05, 7.05559999999994e-05, 7.05979999999981e-05, 7.108399999999904e-05, 7.127699999999806e-05, 7.07360000000018e-05, 7.04299999999998e-05, 7.109699999999913e-05, 7.102800000000076e-05, 7.049999999999765e-05, 7.04299999999998e-05, 7.070799999999919e-05, 7.041600000000023e-05, 7.072199999999876e-05, 7.094499999999934e-05, 7.068099999999952e-05, 7.119499999999959e-05, 7.084799999999836e-05, 7.111199999999818e-05, 7.112499999999827e-05, 7.119400000000012e-05, 7.07360000000018e-05, 7.04299999999998e-05, 7.1069e-05, 7.077800000000051e-05, 7.072199999999876e-05, 7.077800000000051e-05, 7.101399999999772e-05, 7.063899999999734e-05, 7.05559999999994e-05, 7.11109999999987e-05, 7.087499999999802e-05, 7.10559999999999e-05, 7.101400000000119e-05, 7.030499999999967e-05, 7.036099999999795e-05, 7.102699999999781e-05, 7.065300000000038e-05, 7.04299999999998e-05, 7.083299999999931e-05, 7.065300000000038e-05, 7.031900000000271e-05, 7.084699999999888e-05, 7.076400000000094e-05, 7.077700000000103e-05, 7.076400000000094e-05, 7.066600000000048e-05, 7.108299999999956e-05, 7.090200000000116e-05]</msg>
<status status="PASS" starttime="20201030 18:30:09.352" endtime="20201030 18:30:09.354"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.347" endtime="20201030 18:30:09.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.358" endtime="20201030 18:30:09.377"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.356" endtime="20201030 18:30:09.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.355" endtime="20201030 18:30:09.378"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.998" endtime="20201030 18:30:09.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:08.998" endtime="20201030 18:30:09.379"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.387" endtime="20201030 18:30:09.406"></status>
</kw>
<msg timestamp="20201030 18:30:09.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.386" endtime="20201030 18:30:09.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.407" endtime="20201030 18:30:09.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.410" endtime="20201030 18:30:09.411"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.383" endtime="20201030 18:30:09.412"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.381" endtime="20201030 18:30:09.412"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.419" endtime="20201030 18:30:09.705"></status>
</kw>
<msg timestamp="20201030 18:30:09.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.417" endtime="20201030 18:30:09.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019610181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019681681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.709" endtime="20201030 18:30:09.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.717" endtime="20201030 18:30:09.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.415" endtime="20201030 18:30:09.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.413" endtime="20201030 18:30:09.720"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:09.724" level="INFO">${RESULT} = [{'diff': 7.149999999999865e-05}, {'diff': 7.17499999999989e-05}, {'diff': 7.2069000000001e-05}, {'diff': 7.204099999999838e-05}, {'diff': 7.143100000000027e-05}, {'diff': 7.188899999999859e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 18:30:09.721" endtime="20201030 18:30:09.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:09.728" level="INFO">${ACCURACY} = {'diff': [7.149999999999865e-05, 7.17499999999989e-05, 7.2069000000001e-05, 7.204099999999838e-05, 7.143100000000027e-05, 7.188899999999859e-05, 7.138899999999809e-05, 7.226399999999897e-05, 7.2027999...</msg>
<status status="PASS" starttime="20201030 18:30:09.725" endtime="20201030 18:30:09.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.733" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 18:30:09.732" endtime="20201030 18:30:09.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.735" level="INFO">VALUE: [7.149999999999865e-05, 7.17499999999989e-05, 7.2069000000001e-05, 7.204099999999838e-05, 7.143100000000027e-05, 7.188899999999859e-05, 7.138899999999809e-05, 7.226399999999897e-05, 7.202799999999829e-05, 7.15560000000004e-05, 7.173599999999933e-05, 7.161100000000267e-05, 7.219500000000059e-05, 7.166700000000095e-05, 7.183399999999979e-05, 7.176399999999847e-05, 7.149999999999865e-05, 7.166600000000148e-05, 7.137499999999852e-05, 7.163900000000181e-05, 7.148599999999908e-05, 7.217999999999808e-05, 7.208300000000056e-05, 7.175000000000237e-05, 7.140300000000113e-05, 7.219499999999712e-05, 7.170800000000019e-05, 7.184799999999936e-05, 7.213899999999884e-05, 7.130600000000015e-05, 7.165200000000191e-05, 7.140300000000113e-05, 7.213900000000231e-05, 7.131900000000024e-05, 7.2069000000001e-05, 7.201400000000219e-05, 7.215300000000188e-05, 7.165299999999791e-05, 7.130600000000015e-05, 7.204200000000133e-05, 7.166700000000095e-05, 7.16109999999992e-05, 7.220800000000069e-05, 7.194500000000034e-05, 7.150000000000212e-05, 7.207000000000047e-05, 7.149999999999865e-05, 7.206899999999752e-05, 7.166599999999801e-05, 7.226399999999897e-05]</msg>
<status status="PASS" starttime="20201030 18:30:09.734" endtime="20201030 18:30:09.736"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.729" endtime="20201030 18:30:09.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:09.740" endtime="20201030 18:30:09.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.739" endtime="20201030 18:30:09.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.737" endtime="20201030 18:30:09.760"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.380" endtime="20201030 18:30:09.761"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.379" endtime="20201030 18:30:09.761"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.769" endtime="20201030 18:30:09.787"></status>
</kw>
<msg timestamp="20201030 18:30:09.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.768" endtime="20201030 18:30:09.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:09.790" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:09.789" endtime="20201030 18:30:09.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.791" endtime="20201030 18:30:09.793"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.765" endtime="20201030 18:30:09.794"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.763" endtime="20201030 18:30:09.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:09.801" endtime="20201030 18:30:10.087"></status>
</kw>
<msg timestamp="20201030 18:30:10.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:09.799" endtime="20201030 18:30:10.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020609097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020682097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.091" endtime="20201030 18:30:10.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.099" endtime="20201030 18:30:10.101"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.796" endtime="20201030 18:30:10.102"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.795" endtime="20201030 18:30:10.102"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.106" level="INFO">${RESULT} = [{'diff': 7.300000000000015e-05}, {'diff': 7.32500000000004e-05}, {'diff': 7.236099999999995e-05}, {'diff': 7.291600000000273e-05}, {'diff': 7.254199999999836e-05}, {'diff': 7.294400000000187e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:10.103" endtime="20201030 18:30:10.106"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:10.110" level="INFO">${ACCURACY} = {'diff': [7.300000000000015e-05, 7.32500000000004e-05, 7.236099999999995e-05, 7.291600000000273e-05, 7.254199999999836e-05, 7.294400000000187e-05, 7.301300000000024e-05, 7.32500000000004e-05, 7.319399...</msg>
<status status="PASS" starttime="20201030 18:30:10.107" endtime="20201030 18:30:10.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.115" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 18:30:10.114" endtime="20201030 18:30:10.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.117" level="INFO">VALUE: [7.300000000000015e-05, 7.32500000000004e-05, 7.236099999999995e-05, 7.291600000000273e-05, 7.254199999999836e-05, 7.294400000000187e-05, 7.301300000000024e-05, 7.32500000000004e-05, 7.319399999999865e-05, 7.277799999999904e-05, 7.287500000000002e-05, 7.272200000000076e-05, 7.272200000000076e-05, 7.320900000000116e-05, 7.26110000000002e-05, 7.307000000000147e-05, 7.233400000000029e-05, 7.283400000000079e-05, 7.250000000000312e-05, 7.242999999999833e-05, 7.297200000000101e-05, 7.262499999999977e-05, 7.305500000000242e-05, 7.268099999999805e-05, 7.268100000000152e-05, 7.245800000000094e-05, 7.302799999999929e-05, 7.300000000000015e-05, 7.238899999999909e-05, 7.243100000000127e-05, 7.265299999999891e-05, 7.32500000000004e-05, 7.255499999999845e-05, 7.254199999999836e-05, 7.27499999999999e-05, 7.238899999999909e-05, 7.304200000000233e-05, 7.270799999999772e-05, 7.302799999999929e-05, 7.288899999999959e-05, 7.25560000000014e-05, 7.304200000000233e-05, 7.307000000000147e-05, 7.243100000000127e-05, 7.237499999999952e-05, 7.237499999999952e-05, 7.268000000000205e-05, 7.248600000000008e-05, 7.233300000000081e-05, 7.301399999999972e-05]</msg>
<status status="PASS" starttime="20201030 18:30:10.116" endtime="20201030 18:30:10.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.111" endtime="20201030 18:30:10.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.123" endtime="20201030 18:30:10.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.121" endtime="20201030 18:30:10.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.120" endtime="20201030 18:30:10.143"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.762" endtime="20201030 18:30:10.144"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:09.761" endtime="20201030 18:30:10.144"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.153" endtime="20201030 18:30:10.171"></status>
</kw>
<msg timestamp="20201030 18:30:10.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.151" endtime="20201030 18:30:10.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.174" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.172" endtime="20201030 18:30:10.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.175" endtime="20201030 18:30:10.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.149" endtime="20201030 18:30:10.177"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.146" endtime="20201030 18:30:10.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.184" endtime="20201030 18:30:10.468"></status>
</kw>
<msg timestamp="20201030 18:30:10.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02001375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:10.182" endtime="20201030 18:30:10.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02001375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020087806, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:10.473" endtime="20201030 18:30:10.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.481" endtime="20201030 18:30:10.482"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.180" endtime="20201030 18:30:10.483"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.178" endtime="20201030 18:30:10.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.487" level="INFO">${RESULT} = [{'diff': 7.405599999999943e-05}, {'diff': 7.341599999999976e-05}, {'diff': 7.331899999999877e-05}, {'diff': 7.39309999999993e-05}, {'diff': 7.41249999999978e-05}, {'diff': 7.424999999999793e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:10.484" endtime="20201030 18:30:10.487"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:10.492" level="INFO">${ACCURACY} = {'diff': [7.405599999999943e-05, 7.341599999999976e-05, 7.331899999999877e-05, 7.39309999999993e-05, 7.41249999999978e-05, 7.424999999999793e-05, 7.331900000000224e-05, 7.383300000000231e-05, 7.347200...</msg>
<status status="PASS" starttime="20201030 18:30:10.488" endtime="20201030 18:30:10.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.497" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 18:30:10.496" endtime="20201030 18:30:10.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.499" level="INFO">VALUE: [7.405599999999943e-05, 7.341599999999976e-05, 7.331899999999877e-05, 7.39309999999993e-05, 7.41249999999978e-05, 7.424999999999793e-05, 7.331900000000224e-05, 7.383300000000231e-05, 7.347200000000151e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.354199999999936e-05, 7.390300000000016e-05, 7.366699999999948e-05, 7.416699999999998e-05, 7.341699999999923e-05, 7.365200000000044e-05, 7.366600000000001e-05, 7.383299999999884e-05, 7.415300000000041e-05, 7.395799999999897e-05, 7.426400000000097e-05, 7.34309999999988e-05, 7.347199999999804e-05, 7.340299999999966e-05, 7.37500000000009e-05, 7.426400000000097e-05, 7.370800000000219e-05, 7.418099999999955e-05, 7.419400000000312e-05, 7.352700000000031e-05, 7.391600000000026e-05, 7.336100000000095e-05, 7.383300000000231e-05, 7.419399999999965e-05, 7.415300000000041e-05, 7.401400000000072e-05, 7.377800000000004e-05, 7.366699999999948e-05, 7.347300000000098e-05, 7.332000000000172e-05, 7.423599999999836e-05, 7.3763999999997e-05, 7.42769999999976e-05, 7.370799999999872e-05, 7.352799999999979e-05, 7.4069999999999e-05, 7.377800000000004e-05, 7.340299999999966e-05, 7.358300000000206e-05]</msg>
<status status="PASS" starttime="20201030 18:30:10.498" endtime="20201030 18:30:10.500"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.493" endtime="20201030 18:30:10.501"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.504" endtime="20201030 18:30:10.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.503" endtime="20201030 18:30:10.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.502" endtime="20201030 18:30:10.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.145" endtime="20201030 18:30:10.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.144" endtime="20201030 18:30:10.525"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.534" endtime="20201030 18:30:10.552"></status>
</kw>
<msg timestamp="20201030 18:30:10.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.532" endtime="20201030 18:30:10.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.553" endtime="20201030 18:30:10.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.556" endtime="20201030 18:30:10.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.530" endtime="20201030 18:30:10.558"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.528" endtime="20201030 18:30:10.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.565" endtime="20201030 18:30:10.852"></status>
</kw>
<msg timestamp="20201030 18:30:10.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.563" endtime="20201030 18:30:10.856"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019638431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019712917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.856" endtime="20201030 18:30:10.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.865" endtime="20201030 18:30:10.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.561" endtime="20201030 18:30:10.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.559" endtime="20201030 18:30:10.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:10.871" level="INFO">${RESULT} = [{'diff': 7.448599999999861e-05}, {'diff': 7.473699999999833e-05}, {'diff': 7.504100000000138e-05}, {'diff': 7.474999999999843e-05}, {'diff': 7.466600000000101e-05}, {'diff': 7.465200000000144e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:10.868" endtime="20201030 18:30:10.871"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:10.875" level="INFO">${ACCURACY} = {'diff': [7.448599999999861e-05, 7.473699999999833e-05, 7.504100000000138e-05, 7.474999999999843e-05, 7.466600000000101e-05, 7.465200000000144e-05, 7.438900000000109e-05, 7.472199999999929e-05, 7.4778...</msg>
<status status="PASS" starttime="20201030 18:30:10.872" endtime="20201030 18:30:10.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.880" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 18:30:10.879" endtime="20201030 18:30:10.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.882" level="INFO">VALUE: [7.448599999999861e-05, 7.473699999999833e-05, 7.504100000000138e-05, 7.474999999999843e-05, 7.466600000000101e-05, 7.465200000000144e-05, 7.438900000000109e-05, 7.472199999999929e-05, 7.477800000000104e-05, 7.49440000000004e-05, 7.481900000000027e-05, 7.470799999999972e-05, 7.516700000000098e-05, 7.491700000000073e-05, 7.462500000000177e-05, 7.495899999999944e-05, 7.484800000000236e-05, 7.44439999999999e-05, 7.433299999999934e-05, 7.487499999999855e-05, 7.445799999999947e-05, 7.443000000000033e-05, 7.501399999999825e-05, 7.470799999999972e-05, 7.448600000000208e-05, 7.490300000000116e-05, 7.516699999999751e-05, 7.491700000000073e-05, 7.501399999999825e-05, 7.438799999999815e-05, 7.473599999999886e-05, 7.431899999999977e-05, 7.502799999999782e-05, 7.527799999999807e-05, 7.498599999999911e-05, 7.505500000000095e-05, 7.495800000000344e-05, 7.4763999999998e-05, 7.483299999999984e-05, 7.441700000000023e-05, 7.454100000000088e-05, 7.481999999999975e-05, 7.4763999999998e-05, 7.443000000000033e-05, 7.490300000000116e-05, 7.488900000000159e-05, 7.513900000000184e-05, 7.499999999999868e-05, 7.433299999999934e-05, 7.513899999999837e-05]</msg>
<status status="PASS" starttime="20201030 18:30:10.881" endtime="20201030 18:30:10.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.876" endtime="20201030 18:30:10.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:10.887" endtime="20201030 18:30:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.886" endtime="20201030 18:30:10.907"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.885" endtime="20201030 18:30:10.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.526" endtime="20201030 18:30:10.908"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.526" endtime="20201030 18:30:10.908"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.917" endtime="20201030 18:30:10.937"></status>
</kw>
<msg timestamp="20201030 18:30:10.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.915" endtime="20201030 18:30:10.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:10.941" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:10.939" endtime="20201030 18:30:10.941"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.942" endtime="20201030 18:30:10.943"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.913" endtime="20201030 18:30:10.944"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.911" endtime="20201030 18:30:10.944"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:10.951" endtime="20201030 18:30:11.236"></status>
</kw>
<msg timestamp="20201030 18:30:11.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:10.949" endtime="20201030 18:30:11.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023423181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.240" endtime="20201030 18:30:11.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.248" endtime="20201030 18:30:11.250"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.947" endtime="20201030 18:30:11.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.945" endtime="20201030 18:30:11.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.255" level="INFO">${RESULT} = [{'diff': 7.619500000000112e-05}, {'diff': 7.566599999999854e-05}, {'diff': 7.544500000000037e-05}, {'diff': 7.533300000000034e-05}, {'diff': 7.61249999999998e-05}, {'diff': 7.565299999999844e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:11.252" endtime="20201030 18:30:11.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:11.260" level="INFO">${ACCURACY} = {'diff': [7.619500000000112e-05, 7.566599999999854e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.61249999999998e-05, 7.565299999999844e-05, 7.602800000000229e-05, 7.619399999999818e-05, 7.60830...</msg>
<status status="PASS" starttime="20201030 18:30:11.256" endtime="20201030 18:30:11.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.264" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 18:30:11.263" endtime="20201030 18:30:11.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.266" level="INFO">VALUE: [7.619500000000112e-05, 7.566599999999854e-05, 7.544500000000037e-05, 7.533300000000034e-05, 7.61249999999998e-05, 7.565299999999844e-05, 7.602800000000229e-05, 7.619399999999818e-05, 7.60830000000011e-05, 7.533399999999982e-05, 7.561099999999973e-05, 7.582000000000075e-05, 7.537500000000252e-05, 7.623600000000036e-05, 7.577700000000256e-05, 7.537499999999905e-05, 7.597200000000054e-05, 7.619399999999818e-05, 7.54440000000009e-05, 7.59440000000014e-05, 7.572200000000029e-05, 7.530600000000068e-05, 7.577799999999857e-05, 7.5763999999999e-05, 7.544500000000037e-05, 7.579199999999814e-05, 7.615299999999894e-05, 7.619500000000112e-05, 7.533300000000034e-05, 7.601400000000272e-05, 7.590199999999922e-05, 7.619400000000165e-05, 7.573599999999986e-05, 7.61249999999998e-05, 7.537499999999905e-05, 7.568100000000105e-05, 7.612500000000327e-05, 7.577800000000204e-05, 7.63050000000022e-05, 7.536099999999948e-05, 7.602799999999882e-05, 7.59579999999975e-05, 7.559700000000016e-05, 7.549999999999918e-05, 7.583300000000084e-05, 7.543000000000133e-05, 7.579199999999814e-05, 7.599999999999968e-05, 7.590300000000216e-05, 7.569500000000062e-05]</msg>
<status status="PASS" starttime="20201030 18:30:11.265" endtime="20201030 18:30:11.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.260" endtime="20201030 18:30:11.269"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.275" endtime="20201030 18:30:11.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.273" endtime="20201030 18:30:11.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.272" endtime="20201030 18:30:11.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.909" endtime="20201030 18:30:11.296"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:10.908" endtime="20201030 18:30:11.296"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.308" endtime="20201030 18:30:11.327"></status>
</kw>
<msg timestamp="20201030 18:30:11.327" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.307" endtime="20201030 18:30:11.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.328" endtime="20201030 18:30:11.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.331" endtime="20201030 18:30:11.332"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.304" endtime="20201030 18:30:11.333"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.301" endtime="20201030 18:30:11.333"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.340" endtime="20201030 18:30:11.642"></status>
</kw>
<msg timestamp="20201030 18:30:11.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.338" endtime="20201030 18:30:11.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.654" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023319125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023396167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.647" endtime="20201030 18:30:11.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.655" endtime="20201030 18:30:11.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.336" endtime="20201030 18:30:11.657"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.334" endtime="20201030 18:30:11.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:11.662" level="INFO">${RESULT} = [{'diff': 7.704199999999939e-05}, {'diff': 7.630599999999821e-05}, {'diff': 7.656900000000202e-05}, {'diff': 7.71380000000009e-05}, {'diff': 7.688900000000012e-05}, {'diff': 7.715299999999994e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:11.658" endtime="20201030 18:30:11.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:11.667" level="INFO">${ACCURACY} = {'diff': [7.704199999999939e-05, 7.630599999999821e-05, 7.656900000000202e-05, 7.71380000000009e-05, 7.688900000000012e-05, 7.715299999999994e-05, 7.666599999999954e-05, 7.672199999999782e-05, 7.72640...</msg>
<status status="PASS" starttime="20201030 18:30:11.663" endtime="20201030 18:30:11.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.671" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 18:30:11.670" endtime="20201030 18:30:11.672"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.674" level="INFO">VALUE: [7.704199999999939e-05, 7.630599999999821e-05, 7.656900000000202e-05, 7.71380000000009e-05, 7.688900000000012e-05, 7.715299999999994e-05, 7.666599999999954e-05, 7.672199999999782e-05, 7.72640000000005e-05, 7.684700000000141e-05, 7.65700000000015e-05, 7.718100000000255e-05, 7.665300000000291e-05, 7.652699999999985e-05, 7.665199999999997e-05, 7.69029999999997e-05, 7.690200000000022e-05, 7.70830000000021e-05, 7.713900000000037e-05, 7.686100000000098e-05, 7.642999999999886e-05, 7.665299999999944e-05, 7.701400000000025e-05, 7.698600000000111e-05, 7.713900000000037e-05, 7.670899999999772e-05, 7.655600000000193e-05, 7.686099999999751e-05, 7.69579999999985e-05, 7.709700000000166e-05, 7.722199999999832e-05, 7.727800000000007e-05, 7.722200000000179e-05, 7.644399999999843e-05, 7.686100000000098e-05, 7.702799999999982e-05, 7.698600000000111e-05, 7.695899999999797e-05, 7.701400000000025e-05, 7.683400000000132e-05, 7.648700000000008e-05, 7.695800000000197e-05, 7.722199999999832e-05, 7.65969999999977e-05, 7.713900000000037e-05, 7.644399999999843e-05, 7.681900000000227e-05, 7.706899999999905e-05, 7.722200000000179e-05, 7.684700000000141e-05]</msg>
<status status="PASS" starttime="20201030 18:30:11.672" endtime="20201030 18:30:11.674"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.668" endtime="20201030 18:30:11.675"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:11.679" endtime="20201030 18:30:11.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.677" endtime="20201030 18:30:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.676" endtime="20201030 18:30:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.298" endtime="20201030 18:30:11.699"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.297" endtime="20201030 18:30:11.700"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.708" endtime="20201030 18:30:11.727"></status>
</kw>
<msg timestamp="20201030 18:30:11.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.707" endtime="20201030 18:30:11.728"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:11.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:11.728" endtime="20201030 18:30:11.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.731" endtime="20201030 18:30:11.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.704" endtime="20201030 18:30:11.733"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.702" endtime="20201030 18:30:11.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:11.740" endtime="20201030 18:30:12.026"></status>
</kw>
<msg timestamp="20201030 18:30:12.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:11.739" endtime="20201030 18:30:12.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019864944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019942472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.031" endtime="20201030 18:30:12.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.039" endtime="20201030 18:30:12.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.736" endtime="20201030 18:30:12.041"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.734" endtime="20201030 18:30:12.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.046" level="INFO">${RESULT} = [{'diff': 7.752800000000032e-05}, {'diff': 7.790299999999722e-05}, {'diff': 7.790299999999722e-05}, {'diff': 7.754199999999989e-05}, {'diff': 7.738900000000062e-05}, {'diff': 7.818100000000008e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:12.043" endtime="20201030 18:30:12.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:12.051" level="INFO">${ACCURACY} = {'diff': [7.752800000000032e-05, 7.790299999999722e-05, 7.790299999999722e-05, 7.754199999999989e-05, 7.738900000000062e-05, 7.818100000000008e-05, 7.749999999999771e-05, 7.754199999999989e-05, 7.7874...</msg>
<status status="PASS" starttime="20201030 18:30:12.047" endtime="20201030 18:30:12.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.055" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 18:30:12.054" endtime="20201030 18:30:12.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.058" level="INFO">VALUE: [7.752800000000032e-05, 7.790299999999722e-05, 7.790299999999722e-05, 7.754199999999989e-05, 7.738900000000062e-05, 7.818100000000008e-05, 7.749999999999771e-05, 7.754199999999989e-05, 7.787499999999808e-05, 7.793099999999983e-05, 7.755499999999999e-05, 7.738900000000062e-05, 7.774999999999796e-05, 7.825000000000193e-05, 7.737500000000105e-05, 7.7764000000001e-05, 7.784699999999894e-05, 7.761099999999826e-05, 7.777800000000057e-05, 7.761100000000173e-05, 7.748700000000108e-05, 7.783399999999885e-05, 7.79579999999995e-05, 7.786100000000198e-05, 7.770799999999925e-05, 7.79579999999995e-05, 7.798600000000211e-05, 7.79030000000007e-05, 7.79579999999995e-05, 7.813900000000137e-05, 7.823600000000236e-05, 7.823600000000236e-05, 7.820900000000269e-05, 7.806999999999953e-05, 7.793099999999983e-05, 7.804200000000039e-05, 7.769399999999968e-05, 7.820799999999975e-05, 7.761100000000173e-05, 7.770800000000272e-05, 7.770799999999925e-05, 7.802799999999735e-05, 7.81389999999979e-05, 7.738900000000062e-05, 7.765300000000044e-05, 7.81389999999979e-05, 7.766700000000001e-05, 7.748599999999814e-05, 7.751399999999728e-05, 7.759799999999817e-05]</msg>
<status status="PASS" starttime="20201030 18:30:12.056" endtime="20201030 18:30:12.059"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.051" endtime="20201030 18:30:12.059"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.063" endtime="20201030 18:30:12.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.062" endtime="20201030 18:30:12.083"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.060" endtime="20201030 18:30:12.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.700" endtime="20201030 18:30:12.084"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:11.700" endtime="20201030 18:30:12.084"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.093" endtime="20201030 18:30:12.112"></status>
</kw>
<msg timestamp="20201030 18:30:12.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.092" endtime="20201030 18:30:12.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.114" endtime="20201030 18:30:12.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.116" endtime="20201030 18:30:12.118"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.089" endtime="20201030 18:30:12.119"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.087" endtime="20201030 18:30:12.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.126" endtime="20201030 18:30:12.432"></status>
</kw>
<msg timestamp="20201030 18:30:12.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.124" endtime="20201030 18:30:12.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021425014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021504083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.436" endtime="20201030 18:30:12.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.445" endtime="20201030 18:30:12.446"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.121" endtime="20201030 18:30:12.447"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.120" endtime="20201030 18:30:12.447"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.452" level="INFO">${RESULT} = [{'diff': 7.906900000000106e-05}, {'diff': 7.906900000000106e-05}, {'diff': 7.830499999999727e-05}, {'diff': 7.908300000000063e-05}, {'diff': 7.927800000000207e-05}, {'diff': 7.919499999999718e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:12.448" endtime="20201030 18:30:12.452"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:12.456" level="INFO">${ACCURACY} = {'diff': [7.906900000000106e-05, 7.906900000000106e-05, 7.830499999999727e-05, 7.908300000000063e-05, 7.927800000000207e-05, 7.919499999999718e-05, 7.866699999999754e-05, 7.90840000000001e-05, 7.84029...</msg>
<status status="PASS" starttime="20201030 18:30:12.453" endtime="20201030 18:30:12.456"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.461" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 18:30:12.460" endtime="20201030 18:30:12.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.463" level="INFO">VALUE: [7.906900000000106e-05, 7.906900000000106e-05, 7.830499999999727e-05, 7.908300000000063e-05, 7.927800000000207e-05, 7.919499999999718e-05, 7.866699999999754e-05, 7.90840000000001e-05, 7.840299999999772e-05, 7.87779999999981e-05, 7.838799999999868e-05, 7.891599999999832e-05, 7.837499999999858e-05, 7.911099999999976e-05, 7.891599999999832e-05, 7.911099999999976e-05, 7.87779999999981e-05, 7.911099999999976e-05, 7.838900000000162e-05, 7.833399999999935e-05, 7.890199999999875e-05, 7.866700000000101e-05, 7.830600000000021e-05, 7.891599999999832e-05, 7.893000000000136e-05, 7.854100000000142e-05, 7.906899999999759e-05, 7.879200000000114e-05, 7.868000000000111e-05, 7.83190000000003e-05, 7.92640000000025e-05, 7.908300000000063e-05, 7.901399999999878e-05, 7.918100000000108e-05, 7.859799999999917e-05, 7.870899999999972e-05, 7.87909999999982e-05, 7.897200000000007e-05, 7.88190000000008e-05, 7.884699999999994e-05, 7.926399999999903e-05, 7.85969999999997e-05, 7.919399999999771e-05, 7.872199999999982e-05, 7.919500000000065e-05, 7.888900000000212e-05, 7.899999999999921e-05, 7.92779999999986e-05, 7.841700000000076e-05, 7.926299999999956e-05]</msg>
<status status="PASS" starttime="20201030 18:30:12.462" endtime="20201030 18:30:12.465"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.457" endtime="20201030 18:30:12.466"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.470" endtime="20201030 18:30:12.489"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.468" endtime="20201030 18:30:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.467" endtime="20201030 18:30:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.085" endtime="20201030 18:30:12.490"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.084" endtime="20201030 18:30:12.491"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.500" endtime="20201030 18:30:12.518"></status>
</kw>
<msg timestamp="20201030 18:30:12.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.498" endtime="20201030 18:30:12.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.519" endtime="20201030 18:30:12.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.522" endtime="20201030 18:30:12.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.495" endtime="20201030 18:30:12.524"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.493" endtime="20201030 18:30:12.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.531" endtime="20201030 18:30:12.817"></status>
</kw>
<msg timestamp="20201030 18:30:12.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020277389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.530" endtime="20201030 18:30:12.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.829" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020277389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020356847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.822" endtime="20201030 18:30:12.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.830" endtime="20201030 18:30:12.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.527" endtime="20201030 18:30:12.832"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.525" endtime="20201030 18:30:12.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:12.837" level="INFO">${RESULT} = [{'diff': 7.9458000000001e-05}, {'diff': 7.983300000000138e-05}, {'diff': 7.944400000000143e-05}, {'diff': 7.98190000000018e-05}, {'diff': 7.99719999999976e-05}, {'diff': 7.97779999999991e-05}, {'diff...</msg>
<status status="PASS" starttime="20201030 18:30:12.834" endtime="20201030 18:30:12.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:12.842" level="INFO">${ACCURACY} = {'diff': [7.9458000000001e-05, 7.983300000000138e-05, 7.944400000000143e-05, 7.98190000000018e-05, 7.99719999999976e-05, 7.97779999999991e-05, 8.026400000000003e-05, 7.976399999999953e-05, 8.001399999...</msg>
<status status="PASS" starttime="20201030 18:30:12.838" endtime="20201030 18:30:12.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.847" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 18:30:12.846" endtime="20201030 18:30:12.847"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.850" level="INFO">VALUE: [7.9458000000001e-05, 7.983300000000138e-05, 7.944400000000143e-05, 7.98190000000018e-05, 7.99719999999976e-05, 7.97779999999991e-05, 8.026400000000003e-05, 7.976399999999953e-05, 8.001399999999978e-05, 7.943100000000133e-05, 8.000000000000021e-05, 7.994400000000193e-05, 7.96389999999994e-05, 7.973600000000039e-05, 7.937499999999958e-05, 8.001399999999978e-05, 7.994400000000193e-05, 7.937500000000305e-05, 7.966700000000201e-05, 7.944499999999743e-05, 7.972200000000082e-05, 8.025000000000046e-05, 7.96250000000033e-05, 7.983300000000138e-05, 7.950000000000318e-05, 7.988899999999965e-05, 7.93190000000013e-05, 7.990299999999922e-05, 8.026400000000003e-05, 7.937499999999958e-05, 7.990299999999922e-05, 8.020899999999775e-05, 7.948600000000014e-05, 7.994499999999793e-05, 8.002799999999935e-05, 7.930499999999827e-05, 7.998599999999717e-05, 7.977699999999963e-05, 7.99030000000027e-05, 7.966699999999854e-05, 7.993000000000236e-05, 7.99580000000015e-05, 8.026400000000003e-05, 7.993100000000183e-05, 7.979199999999867e-05, 8.000000000000021e-05, 8.001399999999978e-05, 7.987500000000008e-05, 8.004099999999945e-05, 8.01389999999999e-05]</msg>
<status status="PASS" starttime="20201030 18:30:12.848" endtime="20201030 18:30:12.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.843" endtime="20201030 18:30:12.851"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:12.855" endtime="20201030 18:30:12.874"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.853" endtime="20201030 18:30:12.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.852" endtime="20201030 18:30:12.875"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.491" endtime="20201030 18:30:12.876"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.491" endtime="20201030 18:30:12.876"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.885" endtime="20201030 18:30:12.904"></status>
</kw>
<msg timestamp="20201030 18:30:12.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.883" endtime="20201030 18:30:12.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:12.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:12.905" endtime="20201030 18:30:12.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.908" endtime="20201030 18:30:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.881" endtime="20201030 18:30:12.910"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.878" endtime="20201030 18:30:12.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:12.917" endtime="20201030 18:30:13.205"></status>
</kw>
<msg timestamp="20201030 18:30:13.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:12.916" endtime="20201030 18:30:13.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020266667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020347014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.209" endtime="20201030 18:30:13.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.217" endtime="20201030 18:30:13.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.913" endtime="20201030 18:30:13.220"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.911" endtime="20201030 18:30:13.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.224" level="INFO">${RESULT} = [{'diff': 8.034700000000145e-05}, {'diff': 8.084799999999795e-05}, {'diff': 8.093099999999936e-05}, {'diff': 8.122199999999885e-05}, {'diff': 8.108300000000263e-05}, {'diff': 8.073599999999792e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:13.221" endtime="20201030 18:30:13.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:13.228" level="INFO">${ACCURACY} = {'diff': [8.034700000000145e-05, 8.084799999999795e-05, 8.093099999999936e-05, 8.122199999999885e-05, 8.108300000000263e-05, 8.073599999999792e-05, 8.06390000000004e-05, 8.095799999999903e-05, 8.05000...</msg>
<status status="PASS" starttime="20201030 18:30:13.225" endtime="20201030 18:30:13.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.233" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 18:30:13.232" endtime="20201030 18:30:13.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.235" level="INFO">VALUE: [8.034700000000145e-05, 8.084799999999795e-05, 8.093099999999936e-05, 8.122199999999885e-05, 8.108300000000263e-05, 8.073599999999792e-05, 8.06390000000004e-05, 8.095799999999903e-05, 8.050000000000071e-05, 8.033300000000188e-05, 8.072200000000182e-05, 8.040299999999972e-05, 8.079199999999967e-05, 8.09719999999986e-05, 8.12230000000018e-05, 8.07780000000001e-05, 8.083399999999838e-05, 8.081999999999881e-05, 8.120799999999928e-05, 8.042999999999939e-05, 8.084700000000195e-05, 8.072200000000182e-05, 8.061100000000126e-05, 8.088900000000065e-05, 8.072199999999835e-05, 8.083300000000238e-05, 8.038900000000015e-05, 8.092999999999989e-05, 8.111100000000177e-05, 8.029199999999917e-05, 8.040299999999972e-05, 8.037500000000058e-05, 8.108300000000263e-05, 8.130599999999974e-05, 8.08329999999989e-05, 8.055499999999952e-05, 8.054199999999942e-05, 8.080499999999977e-05, 8.033400000000135e-05, 8.054200000000289e-05, 8.065299999999997e-05, 8.070900000000172e-05, 8.073700000000086e-05, 8.104100000000045e-05, 8.112499999999787e-05, 8.072199999999835e-05, 8.076400000000053e-05, 8.050000000000071e-05, 8.072199999999835e-05, 8.048599999999767e-05]</msg>
<status status="PASS" starttime="20201030 18:30:13.234" endtime="20201030 18:30:13.236"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.229" endtime="20201030 18:30:13.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.240" endtime="20201030 18:30:13.260"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.239" endtime="20201030 18:30:13.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.238" endtime="20201030 18:30:13.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.877" endtime="20201030 18:30:13.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:12.876" endtime="20201030 18:30:13.261"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.270" endtime="20201030 18:30:13.289"></status>
</kw>
<msg timestamp="20201030 18:30:13.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.269" endtime="20201030 18:30:13.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.292" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.291" endtime="20201030 18:30:13.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.293" endtime="20201030 18:30:13.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.266" endtime="20201030 18:30:13.295"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.264" endtime="20201030 18:30:13.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.302" endtime="20201030 18:30:13.588"></status>
</kw>
<msg timestamp="20201030 18:30:13.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.301" endtime="20201030 18:30:13.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021525944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021608111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.592" endtime="20201030 18:30:13.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.600" endtime="20201030 18:30:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.298" endtime="20201030 18:30:13.602"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.296" endtime="20201030 18:30:13.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:13.607" level="INFO">${RESULT} = [{'diff': 8.216699999999758e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.170899999999925e-05}, {'diff': 8.151399999999781e-05}, {'diff': 8.208300000000016e-05}, {'diff': 8.137499999999812e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:13.603" endtime="20201030 18:30:13.607"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:13.611" level="INFO">${ACCURACY} = {'diff': [8.216699999999758e-05, 8.19170000000008e-05, 8.170899999999925e-05, 8.151399999999781e-05, 8.208300000000016e-05, 8.137499999999812e-05, 8.212499999999887e-05, 8.14170000000003e-05, 8.175000...</msg>
<status status="PASS" starttime="20201030 18:30:13.608" endtime="20201030 18:30:13.611"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.616" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 18:30:13.615" endtime="20201030 18:30:13.616"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.618" level="INFO">VALUE: [8.216699999999758e-05, 8.19170000000008e-05, 8.170899999999925e-05, 8.151399999999781e-05, 8.208300000000016e-05, 8.137499999999812e-05, 8.212499999999887e-05, 8.14170000000003e-05, 8.175000000000196e-05, 8.138900000000115e-05, 8.13329999999994e-05, 8.123600000000189e-05, 8.179200000000067e-05, 8.173600000000239e-05, 8.16529999999975e-05, 8.188899999999819e-05, 8.219500000000018e-05, 8.179099999999773e-05, 8.188900000000165e-05, 8.224999999999899e-05, 8.161199999999827e-05, 8.206900000000059e-05, 8.166600000000107e-05, 8.177700000000163e-05, 8.136100000000202e-05, 8.195800000000003e-05, 8.17780000000011e-05, 8.184699999999948e-05, 8.18329999999999e-05, 8.224999999999899e-05, 8.154200000000042e-05, 8.207000000000006e-05, 8.15979999999987e-05, 8.143099999999986e-05, 8.166600000000107e-05, 8.172200000000282e-05, 8.202800000000135e-05, 8.148600000000214e-05, 8.166700000000054e-05, 8.15970000000027e-05, 8.150000000000171e-05, 8.168100000000011e-05, 8.188900000000165e-05, 8.226400000000203e-05, 8.138900000000115e-05, 8.181999999999981e-05, 8.176399999999806e-05, 8.13329999999994e-05, 8.190299999999776e-05, 8.219399999999724e-05]</msg>
<status status="PASS" starttime="20201030 18:30:13.617" endtime="20201030 18:30:13.620"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.612" endtime="20201030 18:30:13.620"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:13.624" endtime="20201030 18:30:13.643"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.623" endtime="20201030 18:30:13.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.621" endtime="20201030 18:30:13.644"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.262" endtime="20201030 18:30:13.645"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.262" endtime="20201030 18:30:13.645"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.653" endtime="20201030 18:30:13.673"></status>
</kw>
<msg timestamp="20201030 18:30:13.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.652" endtime="20201030 18:30:13.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:13.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:13.674" endtime="20201030 18:30:13.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.677" endtime="20201030 18:30:13.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.649" endtime="20201030 18:30:13.679"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.647" endtime="20201030 18:30:13.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:13.686" endtime="20201030 18:30:13.991"></status>
</kw>
<msg timestamp="20201030 18:30:13.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.684" endtime="20201030 18:30:13.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020431528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020514375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:13.995" endtime="20201030 18:30:14.002"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.003" endtime="20201030 18:30:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.682" endtime="20201030 18:30:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.680" endtime="20201030 18:30:14.006"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.010" level="INFO">${RESULT} = [{'diff': 8.284700000000048e-05}, {'diff': 8.259700000000023e-05}, {'diff': 8.232000000000031e-05}, {'diff': 8.295899999999704e-05}, {'diff': 8.243000000000139e-05}, {'diff': 8.259699999999676e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:14.006" endtime="20201030 18:30:14.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:14.015" level="INFO">${ACCURACY} = {'diff': [8.284700000000048e-05, 8.259700000000023e-05, 8.232000000000031e-05, 8.295899999999704e-05, 8.243000000000139e-05, 8.259699999999676e-05, 8.322300000000032e-05, 8.313799999999996e-05, 8.2541...</msg>
<status status="PASS" starttime="20201030 18:30:14.011" endtime="20201030 18:30:14.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.019" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 18:30:14.018" endtime="20201030 18:30:14.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.022" level="INFO">VALUE: [8.284700000000048e-05, 8.259700000000023e-05, 8.232000000000031e-05, 8.295899999999704e-05, 8.243000000000139e-05, 8.259699999999676e-05, 8.322300000000032e-05, 8.313799999999996e-05, 8.254100000000195e-05, 8.265199999999903e-05, 8.29170000000018e-05, 8.240299999999826e-05, 8.269399999999774e-05, 8.301399999999931e-05, 8.282000000000081e-05, 8.2459e-05, 8.265300000000197e-05, 8.318099999999815e-05, 8.266700000000154e-05, 8.286199999999952e-05, 8.319399999999824e-05, 8.295800000000103e-05, 8.231900000000084e-05, 8.323599999999695e-05, 8.274999999999949e-05, 8.304200000000192e-05, 8.251400000000228e-05, 8.263899999999894e-05, 8.318100000000161e-05, 8.319500000000118e-05, 8.284799999999995e-05, 8.266700000000154e-05, 8.230500000000127e-05, 8.231900000000084e-05, 8.236099999999955e-05, 8.277799999999863e-05, 8.3152999999999e-05, 8.281900000000134e-05, 8.288899999999919e-05, 8.302799999999888e-05, 8.295899999999704e-05, 8.323600000000042e-05, 8.244500000000043e-05, 8.316699999999858e-05, 8.293000000000189e-05, 8.308299999999769e-05, 8.286100000000005e-05, 8.255500000000152e-05, 8.276399999999906e-05, 8.293000000000189e-05]</msg>
<status status="PASS" starttime="20201030 18:30:14.021" endtime="20201030 18:30:14.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.016" endtime="20201030 18:30:14.023"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.027" endtime="20201030 18:30:14.046"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.025" endtime="20201030 18:30:14.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.024" endtime="20201030 18:30:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.646" endtime="20201030 18:30:14.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:13.645" endtime="20201030 18:30:14.048"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.057" endtime="20201030 18:30:14.075"></status>
</kw>
<msg timestamp="20201030 18:30:14.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.055" endtime="20201030 18:30:14.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.076" endtime="20201030 18:30:14.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.079" endtime="20201030 18:30:14.080"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.052" endtime="20201030 18:30:14.081"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.050" endtime="20201030 18:30:14.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.088" endtime="20201030 18:30:14.375"></status>
</kw>
<msg timestamp="20201030 18:30:14.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.086" endtime="20201030 18:30:14.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020227861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020311292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.379" endtime="20201030 18:30:14.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.387" endtime="20201030 18:30:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.084" endtime="20201030 18:30:14.389"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.082" endtime="20201030 18:30:14.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.393" level="INFO">${RESULT} = [{'diff': 8.343100000000186e-05}, {'diff': 8.401300000000084e-05}, {'diff': 8.388900000000019e-05}, {'diff': 8.331900000000184e-05}, {'diff': 8.34859999999972e-05}, {'diff': 8.338899999999969e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:14.390" endtime="20201030 18:30:14.394"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:14.398" level="INFO">${ACCURACY} = {'diff': [8.343100000000186e-05, 8.401300000000084e-05, 8.388900000000019e-05, 8.331900000000184e-05, 8.34859999999972e-05, 8.338899999999969e-05, 8.354100000000295e-05, 8.404199999999945e-05, 8.40689...</msg>
<status status="PASS" starttime="20201030 18:30:14.394" endtime="20201030 18:30:14.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.402" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 18:30:14.401" endtime="20201030 18:30:14.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.405" level="INFO">VALUE: [8.343100000000186e-05, 8.401300000000084e-05, 8.388900000000019e-05, 8.331900000000184e-05, 8.34859999999972e-05, 8.338899999999969e-05, 8.354100000000295e-05, 8.404199999999945e-05, 8.406899999999912e-05, 8.413900000000044e-05, 8.354200000000242e-05, 8.401400000000031e-05, 8.426400000000056e-05, 8.34309999999984e-05, 8.412500000000087e-05, 8.41249999999974e-05, 8.423600000000142e-05, 8.384700000000148e-05, 8.388900000000019e-05, 8.370799999999831e-05, 8.406900000000259e-05, 8.405599999999902e-05, 8.401400000000031e-05, 8.369499999999822e-05, 8.408400000000163e-05, 8.390299999999976e-05, 8.413800000000096e-05, 8.355499999999905e-05, 8.367999999999917e-05, 8.425000000000099e-05, 8.337500000000012e-05, 8.422199999999838e-05, 8.4153e-05, 8.41110000000013e-05, 8.338899999999969e-05, 8.372200000000135e-05, 8.35980000000007e-05, 8.387499999999715e-05, 8.39729999999976e-05, 8.412500000000087e-05, 8.395800000000203e-05, 8.348600000000067e-05, 8.367999999999917e-05, 8.350000000000024e-05, 8.354200000000242e-05, 8.401400000000031e-05, 8.386100000000105e-05, 8.413900000000044e-05, 8.355599999999852e-05, 8.366699999999908e-05]</msg>
<status status="PASS" starttime="20201030 18:30:14.404" endtime="20201030 18:30:14.414"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.399" endtime="20201030 18:30:14.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.418" endtime="20201030 18:30:14.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.417" endtime="20201030 18:30:14.438"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.415" endtime="20201030 18:30:14.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.049" endtime="20201030 18:30:14.439"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.048" endtime="20201030 18:30:14.439"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.448" endtime="20201030 18:30:14.469"></status>
</kw>
<msg timestamp="20201030 18:30:14.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.446" endtime="20201030 18:30:14.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.470" endtime="20201030 18:30:14.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.473" endtime="20201030 18:30:14.474"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.443" endtime="20201030 18:30:14.475"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.441" endtime="20201030 18:30:14.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.482" endtime="20201030 18:30:14.767"></status>
</kw>
<msg timestamp="20201030 18:30:14.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.480" endtime="20201030 18:30:14.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023588667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023673819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.771" endtime="20201030 18:30:14.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.779" endtime="20201030 18:30:14.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.478" endtime="20201030 18:30:14.781"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.476" endtime="20201030 18:30:14.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:14.786" level="INFO">${RESULT} = [{'diff': 8.515199999999806e-05}, {'diff': 8.463899999999747e-05}, {'diff': 8.526399999999809e-05}, {'diff': 8.504199999999698e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.463899999999747e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:14.782" endtime="20201030 18:30:14.786"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:14.790" level="INFO">${ACCURACY} = {'diff': [8.515199999999806e-05, 8.463899999999747e-05, 8.526399999999809e-05, 8.504199999999698e-05, 8.436099999999808e-05, 8.463899999999747e-05, 8.457000000000256e-05, 8.506999999999959e-05, 8.4722...</msg>
<status status="PASS" starttime="20201030 18:30:14.787" endtime="20201030 18:30:14.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.794" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 18:30:14.793" endtime="20201030 18:30:14.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.797" level="INFO">VALUE: [8.515199999999806e-05, 8.463899999999747e-05, 8.526399999999809e-05, 8.504199999999698e-05, 8.436099999999808e-05, 8.463899999999747e-05, 8.457000000000256e-05, 8.506999999999959e-05, 8.472200000000235e-05, 8.519499999999972e-05, 8.490300000000076e-05, 8.44859999999982e-05, 8.46660000000006e-05, 8.519400000000024e-05, 8.495799999999956e-05, 8.442999999999992e-05, 8.505500000000055e-05, 8.430599999999927e-05, 8.46530000000005e-05, 8.472199999999888e-05, 8.444399999999949e-05, 8.494499999999947e-05, 8.444499999999897e-05, 8.472299999999836e-05, 8.481899999999987e-05, 8.442999999999992e-05, 8.43469999999985e-05, 8.494399999999999e-05, 8.51110000000023e-05, 8.459700000000223e-05, 8.44309999999994e-05, 8.466700000000008e-05, 8.484799999999848e-05, 8.481999999999934e-05, 8.449999999999777e-05, 8.430599999999927e-05, 8.488800000000171e-05, 8.442999999999992e-05, 8.508300000000316e-05, 8.459700000000223e-05, 8.49720000000026e-05, 8.519399999999677e-05, 8.508299999999969e-05, 8.494499999999947e-05, 8.490300000000076e-05, 8.506900000000012e-05, 8.447300000000157e-05, 8.520799999999981e-05, 8.513800000000196e-05, 8.477700000000116e-05]</msg>
<status status="PASS" starttime="20201030 18:30:14.795" endtime="20201030 18:30:14.843"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.791" endtime="20201030 18:30:14.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:14.847" endtime="20201030 18:30:14.866"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.845" endtime="20201030 18:30:14.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.844" endtime="20201030 18:30:14.867"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.440" endtime="20201030 18:30:14.868"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.439" endtime="20201030 18:30:14.868"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.876" endtime="20201030 18:30:14.895"></status>
</kw>
<msg timestamp="20201030 18:30:14.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.875" endtime="20201030 18:30:14.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:14.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:14.896" endtime="20201030 18:30:14.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.899" endtime="20201030 18:30:14.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.872" endtime="20201030 18:30:14.901"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.870" endtime="20201030 18:30:14.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:14.908" endtime="20201030 18:30:15.194"></status>
</kw>
<msg timestamp="20201030 18:30:15.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:14.906" endtime="20201030 18:30:15.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020368278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.199" endtime="20201030 18:30:15.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.208" endtime="20201030 18:30:15.209"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.903" endtime="20201030 18:30:15.210"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.902" endtime="20201030 18:30:15.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.215" level="INFO">${RESULT} = [{'diff': 8.619500000000072e-05}, {'diff': 8.605600000000102e-05}, {'diff': 8.601399999999884e-05}, {'diff': 8.56249999999989e-05}, {'diff': 8.544400000000049e-05}, {'diff': 8.563899999999847e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:15.211" endtime="20201030 18:30:15.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:15.219" level="INFO">${ACCURACY} = {'diff': [8.619500000000072e-05, 8.605600000000102e-05, 8.601399999999884e-05, 8.56249999999989e-05, 8.544400000000049e-05, 8.563899999999847e-05, 8.601399999999884e-05, 8.558300000000019e-05, 8.59170...</msg>
<status status="PASS" starttime="20201030 18:30:15.216" endtime="20201030 18:30:15.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.224" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 18:30:15.223" endtime="20201030 18:30:15.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.226" level="INFO">VALUE: [8.619500000000072e-05, 8.605600000000102e-05, 8.601399999999884e-05, 8.56249999999989e-05, 8.544400000000049e-05, 8.563899999999847e-05, 8.601399999999884e-05, 8.558300000000019e-05, 8.591700000000133e-05, 8.537499999999865e-05, 8.626399999999909e-05, 8.561099999999933e-05, 8.605600000000102e-05, 8.572299999999936e-05, 8.538900000000169e-05, 8.613799999999949e-05, 8.626400000000256e-05, 8.5847e-05, 8.577800000000163e-05, 8.566599999999813e-05, 8.53050000000008e-05, 8.620799999999734e-05, 8.626399999999909e-05, 8.590299999999829e-05, 8.577799999999816e-05, 8.550000000000224e-05, 8.622299999999986e-05, 8.550000000000224e-05, 8.620800000000081e-05, 8.556900000000062e-05, 8.583300000000044e-05, 8.604099999999851e-05, 8.599999999999927e-05, 8.609700000000026e-05, 8.573599999999945e-05, 8.616700000000158e-05, 8.533399999999941e-05, 8.54310000000004e-05, 8.568100000000065e-05, 8.56660000000016e-05, 8.619400000000124e-05, 8.623599999999995e-05, 8.620800000000081e-05, 8.579199999999773e-05, 8.544399999999702e-05, 8.53469999999995e-05, 8.590300000000176e-05, 8.607000000000059e-05, 8.602800000000188e-05, 8.57370000000024e-05]</msg>
<status status="PASS" starttime="20201030 18:30:15.225" endtime="20201030 18:30:15.227"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.220" endtime="20201030 18:30:15.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.231" endtime="20201030 18:30:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.230" endtime="20201030 18:30:15.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.229" endtime="20201030 18:30:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.869" endtime="20201030 18:30:15.252"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:14.868" endtime="20201030 18:30:15.252"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.261" endtime="20201030 18:30:15.279"></status>
</kw>
<msg timestamp="20201030 18:30:15.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.259" endtime="20201030 18:30:15.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.282" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.281" endtime="20201030 18:30:15.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.283" endtime="20201030 18:30:15.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.257" endtime="20201030 18:30:15.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.254" endtime="20201030 18:30:15.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.292" endtime="20201030 18:30:15.577"></status>
</kw>
<msg timestamp="20201030 18:30:15.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.291" endtime="20201030 18:30:15.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020846319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020933417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.581" endtime="20201030 18:30:15.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.589" endtime="20201030 18:30:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.288" endtime="20201030 18:30:15.591"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.287" endtime="20201030 18:30:15.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.596" level="INFO">${RESULT} = [{'diff': 8.709800000000073e-05}, {'diff': 8.665299999999904e-05}, {'diff': 8.719400000000224e-05}, {'diff': 8.691599999999938e-05}, {'diff': 8.713800000000049e-05}, {'diff': 8.661100000000033e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:15.592" endtime="20201030 18:30:15.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:15.600" level="INFO">${ACCURACY} = {'diff': [8.709800000000073e-05, 8.665299999999904e-05, 8.719400000000224e-05, 8.691599999999938e-05, 8.713800000000049e-05, 8.661100000000033e-05, 8.704199999999898e-05, 8.694399999999852e-05, 8.6832...</msg>
<status status="PASS" starttime="20201030 18:30:15.597" endtime="20201030 18:30:15.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.604" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 18:30:15.603" endtime="20201030 18:30:15.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.608" level="INFO">VALUE: [8.709800000000073e-05, 8.665299999999904e-05, 8.719400000000224e-05, 8.691599999999938e-05, 8.713800000000049e-05, 8.661100000000033e-05, 8.704199999999898e-05, 8.694399999999852e-05, 8.683299999999797e-05, 8.725000000000052e-05, 8.69310000000019e-05, 8.641700000000183e-05, 8.643099999999793e-05, 8.708400000000116e-05, 8.725000000000052e-05, 8.708300000000169e-05, 8.719399999999877e-05, 8.640199999999931e-05, 8.634699999999704e-05, 8.706900000000212e-05, 8.676399999999959e-05, 8.636100000000008e-05, 8.629199999999823e-05, 8.630600000000127e-05, 8.643099999999793e-05, 8.716700000000258e-05, 8.71250000000004e-05, 8.677799999999916e-05, 8.725000000000052e-05, 8.690199999999981e-05, 8.702799999999941e-05, 8.706899999999865e-05, 8.659700000000076e-05, 8.726400000000009e-05, 8.663899999999947e-05, 8.641699999999836e-05, 8.688899999999972e-05, 8.687500000000015e-05, 8.726299999999715e-05, 8.676300000000012e-05, 8.705499999999908e-05, 8.681900000000187e-05, 8.705500000000255e-05, 8.693099999999843e-05, 8.659700000000076e-05, 8.672200000000088e-05, 8.690299999999929e-05, 8.718099999999868e-05, 8.690299999999929e-05, 8.729099999999976e-05]</msg>
<status status="PASS" starttime="20201030 18:30:15.605" endtime="20201030 18:30:15.608"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.601" endtime="20201030 18:30:15.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.613" endtime="20201030 18:30:15.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.611" endtime="20201030 18:30:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.610" endtime="20201030 18:30:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.253" endtime="20201030 18:30:15.633"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.252" endtime="20201030 18:30:15.634"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.642" endtime="20201030 18:30:15.660"></status>
</kw>
<msg timestamp="20201030 18:30:15.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.641" endtime="20201030 18:30:15.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:15.662" endtime="20201030 18:30:15.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.664" endtime="20201030 18:30:15.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.638" endtime="20201030 18:30:15.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.636" endtime="20201030 18:30:15.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.673" endtime="20201030 18:30:15.959"></status>
</kw>
<msg timestamp="20201030 18:30:15.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.672" endtime="20201030 18:30:15.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020011667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020099347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:15.963" endtime="20201030 18:30:15.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:15.971" endtime="20201030 18:30:15.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.669" endtime="20201030 18:30:15.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.668" endtime="20201030 18:30:15.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:15.978" level="INFO">${RESULT} = [{'diff': 8.76799999999997e-05}, {'diff': 8.744400000000249e-05}, {'diff': 8.826400000000109e-05}, {'diff': 8.744399999999902e-05}, {'diff': 8.748599999999773e-05}, {'diff': 8.826399999999762e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:15.974" endtime="20201030 18:30:15.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:15.983" level="INFO">${ACCURACY} = {'diff': [8.76799999999997e-05, 8.744400000000249e-05, 8.826400000000109e-05, 8.744399999999902e-05, 8.748599999999773e-05, 8.826399999999762e-05, 8.788900000000072e-05, 8.761100000000133e-05, 8.77090...</msg>
<status status="PASS" starttime="20201030 18:30:15.979" endtime="20201030 18:30:15.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.987" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 18:30:15.986" endtime="20201030 18:30:15.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:15.990" level="INFO">VALUE: [8.76799999999997e-05, 8.744400000000249e-05, 8.826400000000109e-05, 8.744399999999902e-05, 8.748599999999773e-05, 8.826399999999762e-05, 8.788900000000072e-05, 8.761100000000133e-05, 8.770900000000179e-05, 8.808399999999869e-05, 8.765300000000004e-05, 8.777700000000069e-05, 8.740299999999979e-05, 8.779100000000026e-05, 8.750000000000077e-05, 8.730499999999933e-05, 8.787500000000115e-05, 8.759799999999776e-05, 8.763900000000047e-05, 8.788900000000072e-05, 8.825000000000152e-05, 8.825000000000152e-05, 8.802700000000094e-05, 8.769399999999927e-05, 8.730499999999933e-05, 8.74860000000012e-05, 8.826400000000109e-05, 8.809699999999879e-05, 8.824999999999805e-05, 8.791699999999986e-05, 8.808400000000216e-05, 8.730600000000227e-05, 8.815300000000054e-05, 8.745800000000206e-05, 8.777700000000069e-05, 8.786100000000158e-05, 8.741599999999988e-05, 8.748599999999773e-05, 8.804199999999998e-05, 8.808300000000269e-05, 8.730600000000227e-05, 8.737499999999718e-05, 8.781999999999887e-05, 8.74860000000012e-05, 8.732000000000184e-05, 8.74449999999985e-05, 8.787500000000115e-05, 8.805599999999955e-05, 8.776400000000059e-05, 8.788900000000072e-05]</msg>
<status status="PASS" starttime="20201030 18:30:15.988" endtime="20201030 18:30:15.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.984" endtime="20201030 18:30:15.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:15.994" endtime="20201030 18:30:16.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.993" endtime="20201030 18:30:16.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.992" endtime="20201030 18:30:16.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.634" endtime="20201030 18:30:16.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:15.634" endtime="20201030 18:30:16.015"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.024" endtime="20201030 18:30:16.042"></status>
</kw>
<msg timestamp="20201030 18:30:16.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.023" endtime="20201030 18:30:16.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.043" endtime="20201030 18:30:16.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.046" endtime="20201030 18:30:16.047"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.020" endtime="20201030 18:30:16.048"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.018" endtime="20201030 18:30:16.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.055" endtime="20201030 18:30:16.342"></status>
</kw>
<msg timestamp="20201030 18:30:16.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.053" endtime="20201030 18:30:16.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020232639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020321458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.346" endtime="20201030 18:30:16.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.354" endtime="20201030 18:30:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.051" endtime="20201030 18:30:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.049" endtime="20201030 18:30:16.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:16.361" level="INFO">${RESULT} = [{'diff': 8.88190000000004e-05}, {'diff': 8.848599999999873e-05}, {'diff': 8.844400000000002e-05}, {'diff': 8.875000000000202e-05}, {'diff': 8.847200000000263e-05}, {'diff': 8.872199999999941e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:16.358" endtime="20201030 18:30:16.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:16.365" level="INFO">${ACCURACY} = {'diff': [8.88190000000004e-05, 8.848599999999873e-05, 8.844400000000002e-05, 8.875000000000202e-05, 8.847200000000263e-05, 8.872199999999941e-05, 8.843099999999993e-05, 8.865300000000104e-05, 8.86810...</msg>
<status status="PASS" starttime="20201030 18:30:16.362" endtime="20201030 18:30:16.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.370" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 18:30:16.369" endtime="20201030 18:30:16.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.372" level="INFO">VALUE: [8.88190000000004e-05, 8.848599999999873e-05, 8.844400000000002e-05, 8.875000000000202e-05, 8.847200000000263e-05, 8.872199999999941e-05, 8.843099999999993e-05, 8.865300000000104e-05, 8.868100000000018e-05, 8.859799999999876e-05, 8.851400000000134e-05, 8.91939999999973e-05, 8.872199999999941e-05, 8.836099999999861e-05, 8.870899999999932e-05, 8.84999999999983e-05, 8.843099999999993e-05, 8.881999999999987e-05, 8.83059999999998e-05, 8.919500000000025e-05, 8.865299999999757e-05, 8.913799999999902e-05, 8.863800000000199e-05, 8.887499999999868e-05, 8.884699999999954e-05, 8.879200000000073e-05, 8.897199999999966e-05, 8.883299999999997e-05, 8.865300000000104e-05, 8.831999999999937e-05, 8.926400000000209e-05, 8.880599999999683e-05, 8.898599999999923e-05, 8.924999999999905e-05, 8.908300000000022e-05, 8.89860000000027e-05, 8.859700000000276e-05, 8.923599999999948e-05, 8.913900000000197e-05, 8.856999999999962e-05, 8.856999999999962e-05, 8.851400000000134e-05, 8.83059999999998e-05, 8.843099999999993e-05, 8.926299999999915e-05, 8.898599999999923e-05, 8.922199999999991e-05, 8.900000000000227e-05, 8.879200000000073e-05, 8.902800000000141e-05]</msg>
<status status="PASS" starttime="20201030 18:30:16.371" endtime="20201030 18:30:16.373"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.366" endtime="20201030 18:30:16.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.377" endtime="20201030 18:30:16.396"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.375" endtime="20201030 18:30:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.374" endtime="20201030 18:30:16.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.016" endtime="20201030 18:30:16.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.016" endtime="20201030 18:30:16.398"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.407" endtime="20201030 18:30:16.426"></status>
</kw>
<msg timestamp="20201030 18:30:16.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.405" endtime="20201030 18:30:16.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.427" endtime="20201030 18:30:16.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.430" endtime="20201030 18:30:16.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.403" endtime="20201030 18:30:16.432"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.400" endtime="20201030 18:30:16.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.439" endtime="20201030 18:30:16.724"></status>
</kw>
<msg timestamp="20201030 18:30:16.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.437" endtime="20201030 18:30:16.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020888583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020978611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.728" endtime="20201030 18:30:16.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.736" endtime="20201030 18:30:16.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.434" endtime="20201030 18:30:16.738"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.433" endtime="20201030 18:30:16.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:16.742" level="INFO">${RESULT} = [{'diff': 9.002800000000241e-05}, {'diff': 8.995799999999762e-05}, {'diff': 8.930599999999733e-05}, {'diff': 9.020900000000082e-05}, {'diff': 8.973599999999998e-05}, {'diff': 8.933399999999994e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:16.739" endtime="20201030 18:30:16.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:16.747" level="INFO">${ACCURACY} = {'diff': [9.002800000000241e-05, 8.995799999999762e-05, 8.930599999999733e-05, 9.020900000000082e-05, 8.973599999999998e-05, 8.933399999999994e-05, 8.977799999999869e-05, 8.973699999999946e-05, 8.9722...</msg>
<status status="PASS" starttime="20201030 18:30:16.743" endtime="20201030 18:30:16.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.751" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 18:30:16.750" endtime="20201030 18:30:16.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.754" level="INFO">VALUE: [9.002800000000241e-05, 8.995799999999762e-05, 8.930599999999733e-05, 9.020900000000082e-05, 8.973599999999998e-05, 8.933399999999994e-05, 8.977799999999869e-05, 8.973699999999946e-05, 8.972200000000041e-05, 8.943000000000145e-05, 8.972200000000041e-05, 8.954200000000148e-05, 9.012499999999993e-05, 8.977799999999869e-05, 8.983300000000097e-05, 8.987499999999968e-05, 9.019500000000125e-05, 8.934799999999951e-05, 8.965299999999857e-05, 8.963900000000247e-05, 8.990199999999934e-05, 8.986100000000011e-05, 8.984700000000054e-05, 8.938899999999875e-05, 9.025000000000005e-05, 8.977799999999869e-05, 9.019500000000125e-05, 8.936199999999908e-05, 8.951399999999887e-05, 9.001399999999937e-05, 8.96250000000029e-05, 8.931899999999743e-05, 8.997200000000066e-05, 8.944400000000102e-05, 8.947200000000016e-05, 8.948599999999973e-05, 8.969400000000127e-05, 8.984699999999707e-05, 8.995800000000109e-05, 8.94450000000005e-05, 8.936099999999961e-05, 8.937500000000265e-05, 8.977799999999869e-05, 8.951399999999887e-05, 8.94999999999993e-05, 8.94860000000032e-05, 8.98329999999975e-05, 9.002799999999894e-05, 8.94450000000005e-05, 8.934700000000004e-05]</msg>
<status status="PASS" starttime="20201030 18:30:16.752" endtime="20201030 18:30:16.755"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.748" endtime="20201030 18:30:16.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:16.759" endtime="20201030 18:30:16.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.758" endtime="20201030 18:30:16.779"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.757" endtime="20201030 18:30:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.399" endtime="20201030 18:30:16.780"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.398" endtime="20201030 18:30:16.780"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.789" endtime="20201030 18:30:16.807"></status>
</kw>
<msg timestamp="20201030 18:30:16.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.787" endtime="20201030 18:30:16.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:16.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:16.808" endtime="20201030 18:30:16.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.811" endtime="20201030 18:30:16.812"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.785" endtime="20201030 18:30:16.813"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.782" endtime="20201030 18:30:16.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:16.820" endtime="20201030 18:30:17.106"></status>
</kw>
<msg timestamp="20201030 18:30:17.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:16.818" endtime="20201030 18:30:17.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019673306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019764014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.110" endtime="20201030 18:30:17.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.118" endtime="20201030 18:30:17.120"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.816" endtime="20201030 18:30:17.121"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.814" endtime="20201030 18:30:17.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.125" level="INFO">${RESULT} = [{'diff': 9.070799999999837e-05}, {'diff': 9.055600000000205e-05}, {'diff': 9.125000000000105e-05}, {'diff': 9.083400000000144e-05}, {'diff': 9.0332999999998e-05}, {'diff': 9.041599999999941e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:17.122" endtime="20201030 18:30:17.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:17.130" level="INFO">${ACCURACY} = {'diff': [9.070799999999837e-05, 9.055600000000205e-05, 9.125000000000105e-05, 9.083400000000144e-05, 9.0332999999998e-05, 9.041599999999941e-05, 9.033300000000147e-05, 9.097200000000166e-05, 9.102799...</msg>
<status status="PASS" starttime="20201030 18:30:17.126" endtime="20201030 18:30:17.130"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.134" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 18:30:17.133" endtime="20201030 18:30:17.135"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.137" level="INFO">VALUE: [9.070799999999837e-05, 9.055600000000205e-05, 9.125000000000105e-05, 9.083400000000144e-05, 9.0332999999998e-05, 9.041599999999941e-05, 9.033300000000147e-05, 9.097200000000166e-05, 9.102799999999994e-05, 9.105499999999961e-05, 9.095799999999862e-05, 9.041699999999889e-05, 9.072199999999794e-05, 9.092999999999948e-05, 9.083400000000144e-05, 9.06670000000026e-05, 9.06520000000001e-05, 9.066599999999966e-05, 9.037500000000018e-05, 9.125000000000105e-05, 9.070800000000184e-05, 9.079199999999926e-05, 9.08199999999984e-05, 9.059699999999782e-05, 9.095900000000157e-05, 9.094400000000252e-05, 9.03190000000019e-05, 9.109699999999832e-05, 9.117999999999973e-05, 9.111099999999789e-05, 9.101400000000037e-05, 9.106900000000265e-05, 9.042999999999898e-05, 9.112499999999746e-05, 9.084700000000154e-05, 9.108399999999822e-05, 9.084800000000101e-05, 9.070900000000132e-05, 9.11939999999993e-05, 9.097199999999819e-05, 9.066599999999966e-05, 9.0639e-05, 9.092999999999948e-05, 9.126400000000062e-05, 9.062500000000043e-05, 9.0945000000002e-05, 9.038899999999975e-05, 9.05000000000003e-05, 9.036100000000061e-05, 9.086100000000111e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.136" endtime="20201030 18:30:17.138"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.131" endtime="20201030 18:30:17.138"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.142" endtime="20201030 18:30:17.161"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.140" endtime="20201030 18:30:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.139" endtime="20201030 18:30:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.781" endtime="20201030 18:30:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:16.780" endtime="20201030 18:30:17.163"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.172" endtime="20201030 18:30:17.191"></status>
</kw>
<msg timestamp="20201030 18:30:17.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.170" endtime="20201030 18:30:17.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.192" endtime="20201030 18:30:17.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.195" endtime="20201030 18:30:17.196"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.167" endtime="20201030 18:30:17.197"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.165" endtime="20201030 18:30:17.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.204" endtime="20201030 18:30:17.490"></status>
</kw>
<msg timestamp="20201030 18:30:17.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.202" endtime="20201030 18:30:17.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020049333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020141583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.494" endtime="20201030 18:30:17.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.502" endtime="20201030 18:30:17.504"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.200" endtime="20201030 18:30:17.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.198" endtime="20201030 18:30:17.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.509" level="INFO">${RESULT} = [{'diff': 9.225000000000205e-05}, {'diff': 9.140300000000032e-05}, {'diff': 9.155500000000011e-05}, {'diff': 9.129100000000029e-05}, {'diff': 9.162499999999796e-05}, {'diff': 9.190300000000082e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:17.506" endtime="20201030 18:30:17.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:17.513" level="INFO">${ACCURACY} = {'diff': [9.225000000000205e-05, 9.140300000000032e-05, 9.155500000000011e-05, 9.129100000000029e-05, 9.162499999999796e-05, 9.190300000000082e-05, 9.162500000000143e-05, 9.208299999999975e-05, 9.1291...</msg>
<status status="PASS" starttime="20201030 18:30:17.510" endtime="20201030 18:30:17.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.518" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 18:30:17.517" endtime="20201030 18:30:17.518"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.520" level="INFO">VALUE: [9.225000000000205e-05, 9.140300000000032e-05, 9.155500000000011e-05, 9.129100000000029e-05, 9.162499999999796e-05, 9.190300000000082e-05, 9.162500000000143e-05, 9.208299999999975e-05, 9.129199999999976e-05, 9.21529999999976e-05, 9.156999999999915e-05, 9.143099999999946e-05, 9.215199999999812e-05, 9.229199999999729e-05, 9.212499999999846e-05, 9.140300000000032e-05, 9.184700000000254e-05, 9.141699999999989e-05, 9.172199999999894e-05, 9.159699999999882e-05, 9.21390000000015e-05, 9.197299999999867e-05, 9.206999999999965e-05, 9.148699999999774e-05, 9.148600000000173e-05, 9.177700000000122e-05, 9.144399999999955e-05, 9.1639000000001e-05, 9.148600000000173e-05, 9.149999999999783e-05, 9.190299999999735e-05, 9.180599999999983e-05, 9.136100000000161e-05, 9.136099999999814e-05, 9.190200000000134e-05, 9.154100000000054e-05, 9.225000000000205e-05, 9.187499999999821e-05, 9.161100000000186e-05, 9.21390000000015e-05, 9.208299999999975e-05, 9.208299999999975e-05, 9.152800000000044e-05, 9.130599999999933e-05, 9.20000000000018e-05, 9.184800000000201e-05, 9.177700000000122e-05, 9.176300000000165e-05, 9.148600000000173e-05, 9.191700000000039e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.519" endtime="20201030 18:30:17.521"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.514" endtime="20201030 18:30:17.522"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.525" endtime="20201030 18:30:17.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.524" endtime="20201030 18:30:17.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.523" endtime="20201030 18:30:17.545"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.164" endtime="20201030 18:30:17.546"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.163" endtime="20201030 18:30:17.546"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.555" endtime="20201030 18:30:17.573"></status>
</kw>
<msg timestamp="20201030 18:30:17.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.553" endtime="20201030 18:30:17.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.575" endtime="20201030 18:30:17.577"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.577" endtime="20201030 18:30:17.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.550" endtime="20201030 18:30:17.579"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.548" endtime="20201030 18:30:17.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.586" endtime="20201030 18:30:17.872"></status>
</kw>
<msg timestamp="20201030 18:30:17.875" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020847722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.585" endtime="20201030 18:30:17.875"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020755319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020847722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.876" endtime="20201030 18:30:17.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.884" endtime="20201030 18:30:17.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.582" endtime="20201030 18:30:17.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.580" endtime="20201030 18:30:17.887"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:17.890" level="INFO">${RESULT} = [{'diff': 9.240299999999785e-05}, {'diff': 9.272199999999994e-05}, {'diff': 9.272199999999994e-05}, {'diff': 9.276400000000212e-05}, {'diff': 9.287499999999921e-05}, {'diff': 9.297299999999967e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:17.887" endtime="20201030 18:30:17.891"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:17.895" level="INFO">${ACCURACY} = {'diff': [9.240299999999785e-05, 9.272199999999994e-05, 9.272199999999994e-05, 9.276400000000212e-05, 9.287499999999921e-05, 9.297299999999967e-05, 9.266700000000114e-05, 9.299999999999933e-05, 9.2666...</msg>
<status status="PASS" starttime="20201030 18:30:17.891" endtime="20201030 18:30:17.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.899" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 18:30:17.898" endtime="20201030 18:30:17.899"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.902" level="INFO">VALUE: [9.240299999999785e-05, 9.272199999999994e-05, 9.272199999999994e-05, 9.276400000000212e-05, 9.287499999999921e-05, 9.297299999999967e-05, 9.266700000000114e-05, 9.299999999999933e-05, 9.266600000000166e-05, 9.313899999999903e-05, 9.277699999999875e-05, 9.230500000000086e-05, 9.236099999999914e-05, 9.327799999999872e-05, 9.31529999999986e-05, 9.227800000000119e-05, 9.294500000000053e-05, 9.236100000000261e-05, 9.24870000000022e-05, 9.244399999999708e-05, 9.238900000000175e-05, 9.2333e-05, 9.31940000000013e-05, 9.315300000000207e-05, 9.322200000000044e-05, 9.266600000000166e-05, 9.290300000000182e-05, 9.29590000000001e-05, 9.244500000000003e-05, 9.29720000000002e-05, 9.240200000000184e-05, 9.254099999999807e-05, 9.248599999999926e-05, 9.302799999999847e-05, 9.306900000000118e-05, 9.29720000000002e-05, 9.323600000000001e-05, 9.294500000000053e-05, 9.233399999999947e-05, 9.244400000000055e-05, 9.255600000000058e-05, 9.30000000000028e-05, 9.324999999999958e-05, 9.251400000000187e-05, 9.263899999999853e-05, 9.252800000000144e-05, 9.230499999999739e-05, 9.261099999999939e-05, 9.288900000000225e-05, 9.326400000000262e-05]</msg>
<status status="PASS" starttime="20201030 18:30:17.900" endtime="20201030 18:30:17.903"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.895" endtime="20201030 18:30:17.904"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:17.907" endtime="20201030 18:30:17.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.906" endtime="20201030 18:30:17.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.905" endtime="20201030 18:30:17.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.547" endtime="20201030 18:30:17.928"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.546" endtime="20201030 18:30:17.928"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.937" endtime="20201030 18:30:17.954"></status>
</kw>
<msg timestamp="20201030 18:30:17.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.935" endtime="20201030 18:30:17.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:17.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:17.956" endtime="20201030 18:30:17.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.958" endtime="20201030 18:30:17.960"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.933" endtime="20201030 18:30:17.961"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.931" endtime="20201030 18:30:17.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:17.968" endtime="20201030 18:30:18.253"></status>
</kw>
<msg timestamp="20201030 18:30:18.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:17.966" endtime="20201030 18:30:18.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019816333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.258" endtime="20201030 18:30:18.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.266" endtime="20201030 18:30:18.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.963" endtime="20201030 18:30:18.268"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.962" endtime="20201030 18:30:18.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.272" level="INFO">${RESULT} = [{'diff': 9.397300000000067e-05}, {'diff': 9.379100000000279e-05}, {'diff': 9.413900000000003e-05}, {'diff': 9.419399999999883e-05}, {'diff': 9.377799999999922e-05}, {'diff': 9.390299999999935e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:18.269" endtime="20201030 18:30:18.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:18.280" level="INFO">${ACCURACY} = {'diff': [9.397300000000067e-05, 9.379100000000279e-05, 9.413900000000003e-05, 9.419399999999883e-05, 9.377799999999922e-05, 9.390299999999935e-05, 9.408299999999828e-05, 9.381900000000193e-05, 9.3888...</msg>
<status status="PASS" starttime="20201030 18:30:18.273" endtime="20201030 18:30:18.280"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.284" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 18:30:18.283" endtime="20201030 18:30:18.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.287" level="INFO">VALUE: [9.397300000000067e-05, 9.379100000000279e-05, 9.413900000000003e-05, 9.419399999999883e-05, 9.377799999999922e-05, 9.390299999999935e-05, 9.408299999999828e-05, 9.381900000000193e-05, 9.388899999999978e-05, 9.393099999999849e-05, 9.370899999999738e-05, 9.420800000000187e-05, 9.369500000000128e-05, 9.370800000000137e-05, 9.377699999999975e-05, 9.36659999999992e-05, 9.424999999999711e-05, 9.331899999999796e-05, 9.331899999999796e-05, 9.425000000000058e-05, 9.348600000000026e-05, 9.337499999999971e-05, 9.397300000000067e-05, 9.376399999999965e-05, 9.331900000000143e-05, 9.412499999999699e-05, 9.40139999999999e-05, 9.372200000000094e-05, 9.366699999999867e-05, 9.416700000000264e-05, 9.416700000000264e-05, 9.359700000000082e-05, 9.413900000000003e-05, 9.408400000000122e-05, 9.375000000000008e-05, 9.367999999999876e-05, 9.351400000000287e-05, 9.338900000000275e-05, 9.38330000000015e-05, 9.348600000000026e-05, 9.425000000000058e-05, 9.418100000000221e-05, 9.413900000000003e-05, 9.362499999999996e-05, 9.40139999999999e-05, 9.354199999999854e-05, 9.394400000000205e-05, 9.338900000000275e-05, 9.40139999999999e-05, 9.368099999999824e-05]</msg>
<status status="PASS" starttime="20201030 18:30:18.285" endtime="20201030 18:30:18.287"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.280" endtime="20201030 18:30:18.288"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.291" endtime="20201030 18:30:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.290" endtime="20201030 18:30:18.311"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.289" endtime="20201030 18:30:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.929" endtime="20201030 18:30:18.312"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:17.929" endtime="20201030 18:30:18.312"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.321" endtime="20201030 18:30:18.340"></status>
</kw>
<msg timestamp="20201030 18:30:18.340" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.319" endtime="20201030 18:30:18.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.341" endtime="20201030 18:30:18.343"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.344" endtime="20201030 18:30:18.345"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.317" endtime="20201030 18:30:18.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.315" endtime="20201030 18:30:18.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.353" endtime="20201030 18:30:18.639"></status>
</kw>
<msg timestamp="20201030 18:30:18.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.351" endtime="20201030 18:30:18.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019804639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.643" endtime="20201030 18:30:18.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.652" endtime="20201030 18:30:18.653"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.349" endtime="20201030 18:30:18.654"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.347" endtime="20201030 18:30:18.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:18.658" level="INFO">${RESULT} = [{'diff': 9.508299999999928e-05}, {'diff': 9.470899999999838e-05}, {'diff': 9.451300000000093e-05}, {'diff': 9.473700000000099e-05}, {'diff': 9.479100000000032e-05}, {'diff': 9.513799999999809e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:18.655" endtime="20201030 18:30:18.658"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:18.662" level="INFO">${ACCURACY} = {'diff': [9.508299999999928e-05, 9.470899999999838e-05, 9.451300000000093e-05, 9.473700000000099e-05, 9.479100000000032e-05, 9.513799999999809e-05, 9.498600000000176e-05, 9.477800000000022e-05, 9.4722...</msg>
<status status="PASS" starttime="20201030 18:30:18.659" endtime="20201030 18:30:18.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.667" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 18:30:18.666" endtime="20201030 18:30:18.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.669" level="INFO">VALUE: [9.508299999999928e-05, 9.470899999999838e-05, 9.451300000000093e-05, 9.473700000000099e-05, 9.479100000000032e-05, 9.513799999999809e-05, 9.498600000000176e-05, 9.477800000000022e-05, 9.472200000000194e-05, 9.470800000000237e-05, 9.508299999999928e-05, 9.466699999999967e-05, 9.509799999999832e-05, 9.506999999999918e-05, 9.490300000000035e-05, 9.507000000000265e-05, 9.472200000000194e-05, 9.490300000000035e-05, 9.450000000000083e-05, 9.502800000000047e-05, 9.462499999999749e-05, 9.452799999999997e-05, 9.522199999999897e-05, 9.48469999999986e-05, 9.441700000000289e-05, 9.438900000000028e-05, 9.437499999999724e-05, 9.455500000000311e-05, 9.469399999999933e-05, 9.491600000000044e-05, 9.513900000000103e-05, 9.477800000000022e-05, 9.461099999999792e-05, 9.502800000000047e-05, 9.479199999999979e-05, 9.44720000000017e-05, 9.454199999999954e-05, 9.531899999999996e-05, 9.437500000000071e-05, 9.477700000000075e-05, 9.48469999999986e-05, 9.51530000000006e-05, 9.430499999999939e-05, 9.51530000000006e-05, 9.477800000000022e-05, 9.444500000000203e-05, 9.477800000000022e-05, 9.431999999999843e-05, 9.484800000000154e-05, 9.470800000000237e-05]</msg>
<status status="PASS" starttime="20201030 18:30:18.668" endtime="20201030 18:30:18.670"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.663" endtime="20201030 18:30:18.671"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:18.674" endtime="20201030 18:30:18.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.673" endtime="20201030 18:30:18.694"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.672" endtime="20201030 18:30:18.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.313" endtime="20201030 18:30:18.695"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.312" endtime="20201030 18:30:18.695"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.704" endtime="20201030 18:30:18.724"></status>
</kw>
<msg timestamp="20201030 18:30:18.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.702" endtime="20201030 18:30:18.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:18.727" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:18.725" endtime="20201030 18:30:18.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.728" endtime="20201030 18:30:18.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.700" endtime="20201030 18:30:18.730"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.698" endtime="20201030 18:30:18.731"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:18.737" endtime="20201030 18:30:19.023"></status>
</kw>
<msg timestamp="20201030 18:30:19.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:18.735" endtime="20201030 18:30:19.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020458931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.027" endtime="20201030 18:30:19.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.035" endtime="20201030 18:30:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.733" endtime="20201030 18:30:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.731" endtime="20201030 18:30:19.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.041" level="INFO">${RESULT} = [{'diff': 9.588899999999831e-05}, {'diff': 9.594400000000058e-05}, {'diff': 9.608300000000028e-05}, {'diff': 9.581900000000046e-05}, {'diff': 9.60140000000019e-05}, {'diff': 9.613900000000203e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:19.038" endtime="20201030 18:30:19.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:19.046" level="INFO">${ACCURACY} = {'diff': [9.588899999999831e-05, 9.594400000000058e-05, 9.608300000000028e-05, 9.581900000000046e-05, 9.60140000000019e-05, 9.613900000000203e-05, 9.537500000000171e-05, 9.601399999999843e-05, 9.58339...</msg>
<status status="PASS" starttime="20201030 18:30:19.042" endtime="20201030 18:30:19.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.050" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 18:30:19.049" endtime="20201030 18:30:19.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.052" level="INFO">VALUE: [9.588899999999831e-05, 9.594400000000058e-05, 9.608300000000028e-05, 9.581900000000046e-05, 9.60140000000019e-05, 9.613900000000203e-05, 9.537500000000171e-05, 9.601399999999843e-05, 9.58339999999995e-05, 9.600000000000233e-05, 9.554199999999707e-05, 9.62080000000004e-05, 9.563900000000153e-05, 9.626400000000215e-05, 9.573599999999904e-05, 9.590300000000135e-05, 9.542999999999704e-05, 9.607000000000018e-05, 9.595799999999668e-05, 9.579200000000079e-05, 9.620899999999988e-05, 9.561200000000186e-05, 9.613900000000203e-05, 9.626300000000268e-05, 9.530500000000039e-05, 9.591700000000092e-05, 9.609700000000332e-05, 9.555600000000011e-05, 9.591699999999745e-05, 9.537500000000171e-05, 9.549999999999836e-05, 9.537500000000171e-05, 9.623599999999954e-05, 9.616700000000117e-05, 9.595799999999668e-05, 9.624999999999911e-05, 9.56660000000012e-05, 9.591700000000092e-05, 9.576400000000165e-05, 9.618100000000074e-05, 9.590299999999788e-05, 9.612500000000246e-05, 9.597300000000267e-05, 9.561200000000186e-05, 9.53880000000018e-05, 9.543000000000051e-05, 9.565200000000162e-05, 9.62080000000004e-05, 9.57079999999999e-05, 9.619400000000083e-05]</msg>
<status status="PASS" starttime="20201030 18:30:19.051" endtime="20201030 18:30:19.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.046" endtime="20201030 18:30:19.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.058" endtime="20201030 18:30:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.057" endtime="20201030 18:30:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.056" endtime="20201030 18:30:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.696" endtime="20201030 18:30:19.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:18.695" endtime="20201030 18:30:19.079"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.088" endtime="20201030 18:30:19.117"></status>
</kw>
<msg timestamp="20201030 18:30:19.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.086" endtime="20201030 18:30:19.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.118" endtime="20201030 18:30:19.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.121" endtime="20201030 18:30:19.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.083" endtime="20201030 18:30:19.123"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.081" endtime="20201030 18:30:19.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.130" endtime="20201030 18:30:19.417"></status>
</kw>
<msg timestamp="20201030 18:30:19.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.129" endtime="20201030 18:30:19.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020562458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020658875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.421" endtime="20201030 18:30:19.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.429" endtime="20201030 18:30:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.126" endtime="20201030 18:30:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.124" endtime="20201030 18:30:19.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.436" level="INFO">${RESULT} = [{'diff': 9.641700000000142e-05}, {'diff': 9.712499999999999e-05}, {'diff': 9.683300000000103e-05}, {'diff': 9.709699999999738e-05}, {'diff': 9.707000000000118e-05}, {'diff': 9.665200000000262e-05}, {...</msg>
<status status="PASS" starttime="20201030 18:30:19.432" endtime="20201030 18:30:19.436"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:19.441" level="INFO">${ACCURACY} = {'diff': [9.641700000000142e-05, 9.712499999999999e-05, 9.683300000000103e-05, 9.709699999999738e-05, 9.707000000000118e-05, 9.665200000000262e-05, 9.672299999999995e-05, 9.701399999999943e-05, 9.6389...</msg>
<status status="PASS" starttime="20201030 18:30:19.437" endtime="20201030 18:30:19.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.445" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 18:30:19.444" endtime="20201030 18:30:19.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.448" level="INFO">VALUE: [9.641700000000142e-05, 9.712499999999999e-05, 9.683300000000103e-05, 9.709699999999738e-05, 9.707000000000118e-05, 9.665200000000262e-05, 9.672299999999995e-05, 9.701399999999943e-05, 9.638900000000228e-05, 9.705499999999867e-05, 9.712499999999999e-05, 9.722200000000097e-05, 9.672200000000047e-05, 9.704200000000204e-05, 9.720900000000088e-05, 9.638899999999881e-05, 9.668100000000124e-05, 9.691599999999898e-05, 9.632000000000043e-05, 9.6721999999997e-05, 9.674999999999961e-05, 9.677699999999928e-05, 9.692999999999855e-05, 9.629199999999782e-05, 9.661099999999992e-05, 9.67920000000018e-05, 9.6334e-05, 9.643100000000099e-05, 9.713899999999956e-05, 9.697199999999725e-05, 9.68470000000006e-05, 9.666599999999873e-05, 9.706900000000171e-05, 9.65279999999985e-05, 9.683300000000103e-05, 9.72080000000014e-05, 9.726399999999968e-05, 9.693099999999802e-05, 9.66669999999982e-05, 9.630600000000086e-05, 9.706899999999824e-05, 9.719400000000183e-05, 9.709699999999738e-05, 9.67920000000018e-05, 9.690299999999888e-05, 9.68470000000006e-05, 9.676299999999971e-05, 9.688899999999931e-05, 9.691700000000192e-05, 9.636099999999967e-05]</msg>
<status status="PASS" starttime="20201030 18:30:19.446" endtime="20201030 18:30:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.442" endtime="20201030 18:30:19.453"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.457" endtime="20201030 18:30:19.476"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.455" endtime="20201030 18:30:19.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.454" endtime="20201030 18:30:19.477"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.080" endtime="20201030 18:30:19.478"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.079" endtime="20201030 18:30:19.478"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.486" endtime="20201030 18:30:19.506"></status>
</kw>
<msg timestamp="20201030 18:30:19.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.485" endtime="20201030 18:30:19.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.508" endtime="20201030 18:30:19.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.510" endtime="20201030 18:30:19.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.482" endtime="20201030 18:30:19.512"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.480" endtime="20201030 18:30:19.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.519" endtime="20201030 18:30:19.805"></status>
</kw>
<msg timestamp="20201030 18:30:19.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.517" endtime="20201030 18:30:19.809"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019634694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.810" endtime="20201030 18:30:19.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.818" endtime="20201030 18:30:19.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.515" endtime="20201030 18:30:19.820"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.513" endtime="20201030 18:30:19.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:19.825" level="INFO">${RESULT} = [{'diff': 9.776400000000018e-05}, {'diff': 9.761100000000092e-05}, {'diff': 9.779099999999985e-05}, {'diff': 9.802700000000053e-05}, {'diff': 9.809699999999838e-05}, {'diff': 9.76799999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201030 18:30:19.821" endtime="20201030 18:30:19.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:19.829" level="INFO">${ACCURACY} = {'diff': [9.776400000000018e-05, 9.761100000000092e-05, 9.779099999999985e-05, 9.802700000000053e-05, 9.809699999999838e-05, 9.76799999999993e-05, 9.81669999999997e-05, 9.787500000000074e-05, 9.783299...</msg>
<status status="PASS" starttime="20201030 18:30:19.826" endtime="20201030 18:30:19.829"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.833" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 18:30:19.832" endtime="20201030 18:30:19.834"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.836" level="INFO">VALUE: [9.776400000000018e-05, 9.761100000000092e-05, 9.779099999999985e-05, 9.802700000000053e-05, 9.809699999999838e-05, 9.76799999999993e-05, 9.81669999999997e-05, 9.787500000000074e-05, 9.783299999999856e-05, 9.783299999999856e-05, 9.76669999999992e-05, 9.78340000000015e-05, 9.74999999999969e-05, 9.795800000000215e-05, 9.751399999999993e-05, 9.806899999999924e-05, 9.797200000000172e-05, 9.761100000000092e-05, 9.806999999999871e-05, 9.761100000000092e-05, 9.8028e-05, 9.737500000000024e-05, 9.82080000000024e-05, 9.779099999999985e-05, 9.793099999999902e-05, 9.8028e-05, 9.741700000000242e-05, 9.754199999999907e-05, 9.777799999999975e-05, 9.808400000000175e-05, 9.743099999999852e-05, 9.827800000000025e-05, 9.743099999999852e-05, 9.737499999999677e-05, 9.819399999999937e-05, 9.801400000000043e-05, 9.82219999999985e-05, 9.826400000000068e-05, 9.77920000000028e-05, 9.772200000000147e-05, 9.76669999999992e-05, 9.772300000000095e-05, 9.794499999999859e-05, 9.763900000000006e-05, 9.766599999999973e-05, 9.823599999999807e-05, 9.784699999999813e-05, 9.751399999999993e-05, 9.81669999999997e-05, 9.733300000000153e-05]</msg>
<status status="PASS" starttime="20201030 18:30:19.834" endtime="20201030 18:30:19.837"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.830" endtime="20201030 18:30:19.837"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:19.841" endtime="20201030 18:30:19.860"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.839" endtime="20201030 18:30:19.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.838" endtime="20201030 18:30:19.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.479" endtime="20201030 18:30:19.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.478" endtime="20201030 18:30:19.861"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.870" endtime="20201030 18:30:19.891"></status>
</kw>
<msg timestamp="20201030 18:30:19.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.869" endtime="20201030 18:30:19.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:19.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:19.893" endtime="20201030 18:30:19.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.896" endtime="20201030 18:30:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.866" endtime="20201030 18:30:19.898"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.864" endtime="20201030 18:30:19.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:19.905" endtime="20201030 18:30:20.192"></status>
</kw>
<msg timestamp="20201030 18:30:20.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:19.904" endtime="20201030 18:30:20.195"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021542347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021641458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.196" endtime="20201030 18:30:20.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.205" endtime="20201030 18:30:20.206"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.901" endtime="20201030 18:30:20.207"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.899" endtime="20201030 18:30:20.207"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.211" level="INFO">${RESULT} = [{'diff': 9.911099999999895e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.829199999999982e-05}, {'diff': 9.869399999999987e-05}, {'diff': 9.836100000000167e-05}, {'diff': 9.877800000000075e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 18:30:20.208" endtime="20201030 18:30:20.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:20.215" level="INFO">${ACCURACY} = {'diff': [9.911099999999895e-05, 9.8721999999999e-05, 9.829199999999982e-05, 9.869399999999987e-05, 9.836100000000167e-05, 9.877800000000075e-05, 9.837499999999777e-05, 9.879200000000032e-05, 9.901399...</msg>
<status status="PASS" starttime="20201030 18:30:20.212" endtime="20201030 18:30:20.216"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.220" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 18:30:20.219" endtime="20201030 18:30:20.220"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.222" level="INFO">VALUE: [9.911099999999895e-05, 9.8721999999999e-05, 9.829199999999982e-05, 9.869399999999987e-05, 9.836100000000167e-05, 9.877800000000075e-05, 9.837499999999777e-05, 9.879200000000032e-05, 9.901399999999796e-05, 9.831899999999949e-05, 9.915200000000166e-05, 9.838900000000081e-05, 9.926400000000168e-05, 9.906900000000024e-05, 9.844399999999962e-05, 9.91939999999969e-05, 9.877800000000075e-05, 9.909799999999885e-05, 9.862499999999802e-05, 9.877700000000128e-05, 9.84999999999979e-05, 9.831899999999949e-05, 9.844399999999962e-05, 9.906900000000024e-05, 9.919400000000037e-05, 9.836100000000167e-05, 9.84999999999979e-05, 9.919499999999984e-05, 9.918100000000027e-05, 9.925000000000211e-05, 9.833299999999906e-05, 9.837499999999777e-05, 9.865300000000063e-05, 9.837499999999777e-05, 9.879200000000032e-05, 9.859699999999888e-05, 9.837500000000124e-05, 9.855500000000017e-05, 9.847199999999875e-05, 9.856899999999974e-05, 9.888899999999784e-05, 9.848599999999832e-05, 9.84860000000018e-05, 9.841600000000048e-05, 9.911100000000242e-05, 9.8721999999999e-05, 9.908299999999981e-05, 9.890300000000088e-05, 9.865300000000063e-05, 9.873700000000152e-05]</msg>
<status status="PASS" starttime="20201030 18:30:20.221" endtime="20201030 18:30:20.224"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.216" endtime="20201030 18:30:20.225"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.228" endtime="20201030 18:30:20.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.227" endtime="20201030 18:30:20.248"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.226" endtime="20201030 18:30:20.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.862" endtime="20201030 18:30:20.249"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:19.862" endtime="20201030 18:30:20.249"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.258" endtime="20201030 18:30:20.277"></status>
</kw>
<msg timestamp="20201030 18:30:20.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.256" endtime="20201030 18:30:20.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.279" endtime="20201030 18:30:20.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.281" endtime="20201030 18:30:20.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.254" endtime="20201030 18:30:20.283"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.251" endtime="20201030 18:30:20.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.290" endtime="20201030 18:30:20.576"></status>
</kw>
<msg timestamp="20201030 18:30:20.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197085, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:20.289" endtime="20201030 18:30:20.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0197085, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:20.580" endtime="20201030 18:30:20.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.588" endtime="20201030 18:30:20.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.286" endtime="20201030 18:30:20.590"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.284" endtime="20201030 18:30:20.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.594" level="INFO">${RESULT} = [{'diff': 9.974999999999914e-05}, {'diff': 0.00010002799999999853}, {'diff': 9.965300000000163e-05}, {'diff': 9.959699999999988e-05}, {'diff': 0.00010008400000000028}, {'diff': 9.968100000000077e-05},...</msg>
<status status="PASS" starttime="20201030 18:30:20.591" endtime="20201030 18:30:20.595"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:20.600" level="INFO">${ACCURACY} = {'diff': [9.974999999999914e-05, 0.00010002799999999853, 9.965300000000163e-05, 9.959699999999988e-05, 0.00010008400000000028, 9.968100000000077e-05, 0.00010013900000000256, 9.962499999999902e-05, 0.0...</msg>
<status status="PASS" starttime="20201030 18:30:20.595" endtime="20201030 18:30:20.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.604" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 18:30:20.603" endtime="20201030 18:30:20.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.606" level="INFO">VALUE: [9.974999999999914e-05, 0.00010002799999999853, 9.965300000000163e-05, 9.959699999999988e-05, 0.00010008400000000028, 9.968100000000077e-05, 0.00010013900000000256, 9.962499999999902e-05, 0.00010026299999999974, 9.990199999999894e-05, 9.937499999999877e-05, 9.943000000000105e-05, 9.961099999999945e-05, 0.00010019400000000137, 9.990299999999841e-05, 0.00010012499999999952, 9.96670000000012e-05, 9.972299999999948e-05, 9.973599999999957e-05, 9.963899999999859e-05, 9.937499999999877e-05, 9.961099999999945e-05, 9.983300000000056e-05, 9.938900000000181e-05, 9.955600000000064e-05, 9.997200000000026e-05, 9.983400000000003e-05, 9.994500000000059e-05, 9.982000000000046e-05, 9.952700000000203e-05, 9.973600000000304e-05, 9.947199999999976e-05, 0.00010008300000000081, 9.976400000000218e-05, 9.929199999999735e-05, 9.938900000000181e-05, 9.961099999999945e-05, 9.943100000000052e-05, 9.997200000000026e-05, 9.984700000000013e-05, 9.988899999999884e-05, 9.938899999999834e-05, 9.961099999999945e-05, 9.927800000000125e-05, 9.93060000000004e-05, 9.957000000000021e-05, 9.955600000000064e-05, 9.943099999999705e-05, 9.948599999999932e-05, 9.961199999999892e-05]</msg>
<status status="PASS" starttime="20201030 18:30:20.605" endtime="20201030 18:30:20.607"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.600" endtime="20201030 18:30:20.608"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.611" endtime="20201030 18:30:20.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.610" endtime="20201030 18:30:20.631"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.609" endtime="20201030 18:30:20.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.250" endtime="20201030 18:30:20.632"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.249" endtime="20201030 18:30:20.632"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.641" endtime="20201030 18:30:20.661"></status>
</kw>
<msg timestamp="20201030 18:30:20.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.639" endtime="20201030 18:30:20.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:20.663" endtime="20201030 18:30:20.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.665" endtime="20201030 18:30:20.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.637" endtime="20201030 18:30:20.667"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.635" endtime="20201030 18:30:20.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.674" endtime="20201030 18:30:20.960"></status>
</kw>
<msg timestamp="20201030 18:30:20.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.673" endtime="20201030 18:30:20.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019901319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:20.964" endtime="20201030 18:30:20.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:20.972" endtime="20201030 18:30:20.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.670" endtime="20201030 18:30:20.975"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.668" endtime="20201030 18:30:20.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:20.979" level="INFO">${RESULT} = [{'diff': 0.00010077699999999981}, {'diff': 0.00010037499999999977}, {'diff': 0.00010077800000000275}, {'diff': 0.00010047200000000076}, {'diff': 0.00010044399999999815}, {'diff': 0.000101264000000000...</msg>
<status status="PASS" starttime="20201030 18:30:20.976" endtime="20201030 18:30:20.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:20.983" level="INFO">${ACCURACY} = {'diff': [0.00010077699999999981, 0.00010037499999999977, 0.00010077800000000275, 0.00010047200000000076, 0.00010044399999999815, 0.00010126400000000021, 0.00010070799999999797, 0.00010106999999999824...</msg>
<status status="PASS" starttime="20201030 18:30:20.980" endtime="20201030 18:30:20.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.987" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 18:30:20.986" endtime="20201030 18:30:20.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:20.990" level="INFO">VALUE: [0.00010077699999999981, 0.00010037499999999977, 0.00010077800000000275, 0.00010047200000000076, 0.00010044399999999815, 0.00010126400000000021, 0.00010070799999999797, 0.00010106999999999824, 0.00010125000000000065, 0.00010113900000000009, 0.00010120799999999847, 0.00010097200000000126, 0.00010052699999999956, 0.00010095799999999822, 0.00010129199999999935, 0.00010098600000000083, 0.00010073600000000058, 0.00010122300000000098, 0.00010084799999999713, 0.00010106999999999824, 0.00010095900000000116, 0.00010088800000000037, 0.00010048600000000033, 0.00010079099999999938, 0.00010101399999999996, 0.0001004999999999999, 0.00010091699999999898, 0.0001004999999999999, 0.00010054200000000207, 0.0001010549999999992, 0.00010081900000000199, 0.00010076399999999971, 0.000100722000000001, 0.00010055500000000217, 0.00010126400000000021, 0.0001004999999999999, 0.00010099999999999693, 0.00010044500000000109, 0.00010048600000000033, 0.00010037499999999977, 0.00010133299999999859, 0.00010042999999999858, 0.00010101299999999702, 0.00010058299999999784, 0.00010083300000000156, 0.00010113900000000009, 0.00010048700000000327, 0.00010043100000000152, 0.00010045899999999719, 0.00010126399999999675]</msg>
<status status="PASS" starttime="20201030 18:30:20.989" endtime="20201030 18:30:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.984" endtime="20201030 18:30:20.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:20.995" endtime="20201030 18:30:21.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.993" endtime="20201030 18:30:21.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.992" endtime="20201030 18:30:21.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.633" endtime="20201030 18:30:21.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:20.633" endtime="20201030 18:30:21.016"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.024" endtime="20201030 18:30:21.044"></status>
</kw>
<msg timestamp="20201030 18:30:21.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.023" endtime="20201030 18:30:21.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.046" endtime="20201030 18:30:21.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.048" endtime="20201030 18:30:21.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.020" endtime="20201030 18:30:21.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.018" endtime="20201030 18:30:21.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.057" endtime="20201030 18:30:21.343"></status>
</kw>
<msg timestamp="20201030 18:30:21.346" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:21.055" endtime="20201030 18:30:21.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020975597, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 18:30:21.347" endtime="20201030 18:30:21.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.355" endtime="20201030 18:30:21.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.053" endtime="20201030 18:30:21.358"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.051" endtime="20201030 18:30:21.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.362" level="INFO">${RESULT} = [{'diff': 0.00010159699999999841}, {'diff': 0.00010184699999999866}, {'diff': 0.00010142999999999958}, {'diff': 0.00010202800000000053}, {'diff': 0.00010159699999999841}, {'diff': 0.000101666999999999...</msg>
<status status="PASS" starttime="20201030 18:30:21.359" endtime="20201030 18:30:21.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:21.366" level="INFO">${ACCURACY} = {'diff': [0.00010159699999999841, 0.00010184699999999866, 0.00010142999999999958, 0.00010202800000000053, 0.00010159699999999841, 0.00010166699999999973, 0.00010175000000000115, 0.00010222299999999851...</msg>
<status status="PASS" starttime="20201030 18:30:21.363" endtime="20201030 18:30:21.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.370" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 18:30:21.369" endtime="20201030 18:30:21.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.374" level="INFO">VALUE: [0.00010159699999999841, 0.00010184699999999866, 0.00010142999999999958, 0.00010202800000000053, 0.00010159699999999841, 0.00010166699999999973, 0.00010175000000000115, 0.00010222299999999851, 0.00010133299999999859, 0.00010144400000000262, 0.0001018610000000017, 0.0001020000000000014, 0.0001015000000000009, 0.00010205599999999967, 0.00010184699999999866, 0.00010170799999999897, 0.00010141699999999948, 0.00010143099999999905, 0.00010226299999999827, 0.00010166600000000026, 0.00010134699999999816, 0.0001020139999999975, 0.00010212500000000152, 0.00010140299999999991, 0.0001016939999999994, 0.00010213900000000109, 0.0001013749999999973, 0.0001018480000000016, 0.00010159800000000135, 0.00010188900000000084, 0.00010206900000000324, 0.00010159699999999841, 0.00010144399999999915, 0.00010163900000000059, 0.0001021809999999998, 0.00010173600000000158, 0.00010133399999999806, 0.00010219499999999937, 0.00010177800000000028, 0.00010154200000000307, 0.00010204099999999716, 0.00010215300000000066, 0.00010201400000000097, 0.0001015419999999996, 0.00010194399999999965, 0.00010194499999999912, 0.0001021809999999998, 0.00010188900000000084, 0.00010177800000000028, 0.0001015419999999996]</msg>
<status status="PASS" starttime="20201030 18:30:21.371" endtime="20201030 18:30:21.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.367" endtime="20201030 18:30:21.375"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.379" endtime="20201030 18:30:21.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.377" endtime="20201030 18:30:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.376" endtime="20201030 18:30:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.017" endtime="20201030 18:30:21.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.016" endtime="20201030 18:30:21.400"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.408" endtime="20201030 18:30:21.428"></status>
</kw>
<msg timestamp="20201030 18:30:21.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.407" endtime="20201030 18:30:21.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.431" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.429" endtime="20201030 18:30:21.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.432" endtime="20201030 18:30:21.433"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.404" endtime="20201030 18:30:21.434"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.402" endtime="20201030 18:30:21.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.441" endtime="20201030 18:30:21.725"></status>
</kw>
<msg timestamp="20201030 18:30:21.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.439" endtime="20201030 18:30:21.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019922264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020025139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.730" endtime="20201030 18:30:21.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.738" endtime="20201030 18:30:21.739"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.437" endtime="20201030 18:30:21.740"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.435" endtime="20201030 18:30:21.740"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:21.744" level="INFO">${RESULT} = [{'diff': 0.00010287500000000227}, {'diff': 0.00010307000000000024}, {'diff': 0.00010244499999999962}, {'diff': 0.00010326400000000222}, {'diff': 0.00010273600000000258}, {'diff': 0.000102764000000001...</msg>
<status status="PASS" starttime="20201030 18:30:21.741" endtime="20201030 18:30:21.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:21.751" level="INFO">${ACCURACY} = {'diff': [0.00010287500000000227, 0.00010307000000000024, 0.00010244499999999962, 0.00010326400000000222, 0.00010273600000000258, 0.00010276400000000172, 0.00010247199999999929, 0.000102416000000001, ...</msg>
<status status="PASS" starttime="20201030 18:30:21.745" endtime="20201030 18:30:21.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.756" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 18:30:21.755" endtime="20201030 18:30:21.756"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.758" level="INFO">VALUE: [0.00010287500000000227, 0.00010307000000000024, 0.00010244499999999962, 0.00010326400000000222, 0.00010273600000000258, 0.00010276400000000172, 0.00010247199999999929, 0.000102416000000001, 0.0001030420000000011, 0.00010274999999999868, 0.00010251400000000147, 0.00010261100000000245, 0.00010305499999999773, 0.00010290300000000141, 0.00010316700000000123, 0.00010297200000000326, 0.00010237500000000177, 0.00010226400000000122, 0.00010238899999999787, 0.00010295800000000022, 0.0001031940000000009, 0.00010313900000000209, 0.00010318099999999733, 0.00010268000000000083, 0.00010304100000000163, 0.00010301300000000249, 0.00010276299999999877, 0.00010244400000000015, 0.00010230499999999698, 0.00010283300000000009, 0.00010297199999999979, 0.00010227800000000078, 0.00010233399999999906, 0.00010251400000000147, 0.00010265300000000116, 0.00010316600000000176, 0.00010277699999999834, 0.00010312499999999905, 0.00010287500000000227, 0.00010313900000000209, 0.000103207999999997, 0.00010291699999999751, 0.00010294500000000012, 0.00010249999999999843, 0.00010240199999999797, 0.00010326399999999875, 0.0001023749999999983, 0.00010325000000000265, 0.00010297200000000326, 0.00010284699999999966]</msg>
<status status="PASS" starttime="20201030 18:30:21.757" endtime="20201030 18:30:21.759"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.752" endtime="20201030 18:30:21.759"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:21.763" endtime="20201030 18:30:21.782"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.762" endtime="20201030 18:30:21.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.760" endtime="20201030 18:30:21.783"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.400" endtime="20201030 18:30:21.784"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.400" endtime="20201030 18:30:21.784"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.792" endtime="20201030 18:30:21.812"></status>
</kw>
<msg timestamp="20201030 18:30:21.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.791" endtime="20201030 18:30:21.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:21.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:21.814" endtime="20201030 18:30:21.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.816" endtime="20201030 18:30:21.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.788" endtime="20201030 18:30:21.818"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.786" endtime="20201030 18:30:21.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:21.825" endtime="20201030 18:30:22.112"></status>
</kw>
<msg timestamp="20201030 18:30:22.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:21.824" endtime="20201030 18:30:22.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.116" endtime="20201030 18:30:22.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.124" endtime="20201030 18:30:22.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.821" endtime="20201030 18:30:22.126"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.819" endtime="20201030 18:30:22.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.131" level="INFO">${RESULT} = [{'diff': 0.00010415199999999972}, {'diff': 0.00010329099999999841}, {'diff': 0.00010386100000000023}, {'diff': 0.00010397200000000079}, {'diff': 0.00010376399999999925}, {'diff': 0.000103847000000000...</msg>
<status status="PASS" starttime="20201030 18:30:22.128" endtime="20201030 18:30:22.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:22.135" level="INFO">${ACCURACY} = {'diff': [0.00010415199999999972, 0.00010329099999999841, 0.00010386100000000023, 0.00010397200000000079, 0.00010376399999999925, 0.00010384700000000066, 0.00010373699999999958, 0.0001042360000000006,...</msg>
<status status="PASS" starttime="20201030 18:30:22.132" endtime="20201030 18:30:22.135"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.139" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 18:30:22.138" endtime="20201030 18:30:22.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.142" level="INFO">VALUE: [0.00010415199999999972, 0.00010329099999999841, 0.00010386100000000023, 0.00010397200000000079, 0.00010376399999999925, 0.00010384700000000066, 0.00010373699999999958, 0.0001042360000000006, 0.00010359700000000041, 0.00010395799999999775, 0.00010402799999999907, 0.00010340299999999844, 0.00010412500000000005, 0.000104207999999998, 0.0001040139999999995, 0.00010415300000000266, 0.00010344500000000062, 0.00010377799999999882, 0.0001037360000000001, 0.00010334700000000016, 0.00010420800000000147, 0.00010348600000000333, 0.0001041940000000019, 0.00010415199999999972, 0.00010369500000000087, 0.00010377800000000229, 0.00010362500000000302, 0.00010384700000000066, 0.0001041940000000019, 0.00010384700000000066, 0.00010349999999999943, 0.00010409800000000038, 0.00010411100000000048, 0.00010372200000000054, 0.00010341699999999801, 0.00010366700000000173, 0.00010426399999999975, 0.00010402799999999907, 0.00010337500000000277, 0.00010417999999999886, 0.0001041940000000019, 0.00010365299999999869, 0.00010369500000000087, 0.00010349999999999943, 0.00010398600000000036, 0.00010365300000000216, 0.00010393099999999808, 0.00010407000000000124, 0.00010384700000000066, 0.0001033610000000032]</msg>
<status status="PASS" starttime="20201030 18:30:22.140" endtime="20201030 18:30:22.142"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.136" endtime="20201030 18:30:22.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.147" endtime="20201030 18:30:22.166"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.145" endtime="20201030 18:30:22.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.144" endtime="20201030 18:30:22.167"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.785" endtime="20201030 18:30:22.168"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:21.784" endtime="20201030 18:30:22.168"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.176" endtime="20201030 18:30:22.198"></status>
</kw>
<msg timestamp="20201030 18:30:22.199" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.175" endtime="20201030 18:30:22.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.200" endtime="20201030 18:30:22.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.202" endtime="20201030 18:30:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.172" endtime="20201030 18:30:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.170" endtime="20201030 18:30:22.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.211" endtime="20201030 18:30:22.496"></status>
</kw>
<msg timestamp="20201030 18:30:22.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.210" endtime="20201030 18:30:22.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021699375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021803792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.501" endtime="20201030 18:30:22.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.509" endtime="20201030 18:30:22.510"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.207" endtime="20201030 18:30:22.511"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.205" endtime="20201030 18:30:22.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.515" level="INFO">${RESULT} = [{'diff': 0.00010441699999999901}, {'diff': 0.00010520899999999847}, {'diff': 0.0001046810000000023}, {'diff': 0.00010486100000000123}, {'diff': 0.00010452799999999957}, {'diff': 0.0001043329999999981...</msg>
<status status="PASS" starttime="20201030 18:30:22.512" endtime="20201030 18:30:22.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:22.519" level="INFO">${ACCURACY} = {'diff': [0.00010441699999999901, 0.00010520899999999847, 0.0001046810000000023, 0.00010486100000000123, 0.00010452799999999957, 0.00010433299999999812, 0.00010477799999999982, 0.00010434700000000116,...</msg>
<status status="PASS" starttime="20201030 18:30:22.516" endtime="20201030 18:30:22.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.524" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 18:30:22.523" endtime="20201030 18:30:22.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.526" level="INFO">VALUE: [0.00010441699999999901, 0.00010520899999999847, 0.0001046810000000023, 0.00010486100000000123, 0.00010452799999999957, 0.00010433299999999812, 0.00010477799999999982, 0.00010434700000000116, 0.00010483300000000209, 0.00010515300000000019, 0.00010461099999999751, 0.00010516699999999976, 0.0001051810000000028, 0.00010443099999999858, 0.00010430499999999898, 0.00010499999999999746, 0.00010433299999999812, 0.00010484699999999819, 0.00010491699999999951, 0.0001048750000000008, 0.00010468099999999883, 0.00010505499999999973, 0.00010450000000000043, 0.00010429199999999889, 0.00010465199999999675, 0.0001051940000000029, 0.00010476400000000025, 0.00010440299999999944, 0.00010431900000000202, 0.00010430600000000192, 0.00010470900000000144, 0.0001045559999999987, 0.00010447200000000129, 0.00010477699999999687, 0.00010467999999999936, 0.00010470800000000197, 0.00010502800000000007, 0.00010523599999999814, 0.00010445900000000119, 0.00010515300000000019, 0.00010443099999999858, 0.00010444499999999815, 0.00010466600000000326, 0.00010472199999999807, 0.00010512500000000105, 0.00010494400000000265, 0.00010461100000000098, 0.0001043750000000003, 0.00010508299999999887, 0.00010468099999999883]</msg>
<status status="PASS" starttime="20201030 18:30:22.525" endtime="20201030 18:30:22.528"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.520" endtime="20201030 18:30:22.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.532" endtime="20201030 18:30:22.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.530" endtime="20201030 18:30:22.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.529" endtime="20201030 18:30:22.552"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.169" endtime="20201030 18:30:22.553"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.168" endtime="20201030 18:30:22.553"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.561" endtime="20201030 18:30:22.580"></status>
</kw>
<msg timestamp="20201030 18:30:22.581" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.560" endtime="20201030 18:30:22.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.582" endtime="20201030 18:30:22.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.584" endtime="20201030 18:30:22.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.557" endtime="20201030 18:30:22.586"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.555" endtime="20201030 18:30:22.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.593" endtime="20201030 18:30:22.878"></status>
</kw>
<msg timestamp="20201030 18:30:22.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.592" endtime="20201030 18:30:22.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019641722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019747125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.882" endtime="20201030 18:30:22.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.890" endtime="20201030 18:30:22.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.589" endtime="20201030 18:30:22.892"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.587" endtime="20201030 18:30:22.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:22.896" level="INFO">${RESULT} = [{'diff': 0.00010540300000000044}, {'diff': 0.00010612499999999858}, {'diff': 0.00010597199999999932}, {'diff': 0.00010565300000000069}, {'diff': 0.0001056949999999994}, {'diff': 0.0001053890000000008...</msg>
<status status="PASS" starttime="20201030 18:30:22.893" endtime="20201030 18:30:22.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:22.901" level="INFO">${ACCURACY} = {'diff': [0.00010540300000000044, 0.00010612499999999858, 0.00010597199999999932, 0.00010565300000000069, 0.0001056949999999994, 0.00010538900000000087, 0.00010625000000000218, 0.0001053750000000013, ...</msg>
<status status="PASS" starttime="20201030 18:30:22.897" endtime="20201030 18:30:22.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.906" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 18:30:22.905" endtime="20201030 18:30:22.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.908" level="INFO">VALUE: [0.00010540300000000044, 0.00010612499999999858, 0.00010597199999999932, 0.00010565300000000069, 0.0001056949999999994, 0.00010538900000000087, 0.00010625000000000218, 0.0001053750000000013, 0.00010594400000000018, 0.00010581899999999658, 0.0001062499999999987, 0.00010593100000000008, 0.0001058889999999979, 0.00010608399999999935, 0.00010588900000000137, 0.00010531899999999955, 0.00010625000000000218, 0.00010566700000000026, 0.00010584699999999919, 0.00010536099999999826, 0.00010612500000000205, 0.00010584699999999919, 0.0001061949999999999, 0.00010594499999999965, 0.00010584799999999867, 0.00010531899999999955, 0.00010586100000000223, 0.00010597199999999932, 0.00010601399999999803, 0.0001062499999999987, 0.00010583299999999962, 0.00010630499999999751, 0.00010602800000000107, 0.00010616700000000076, 0.00010530599999999946, 0.00010565200000000122, 0.00010595799999999975, 0.00010613900000000162, 0.00010544399999999968, 0.0001057079999999995, 0.00010538900000000087, 0.00010608399999999935, 0.00010583400000000256, 0.00010537499999999783, 0.00010615200000000172, 0.00010572199999999907, 0.00010543000000000011, 0.00010594400000000018, 0.00010618000000000086, 0.0001053750000000013]</msg>
<status status="PASS" starttime="20201030 18:30:22.907" endtime="20201030 18:30:22.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.902" endtime="20201030 18:30:22.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:22.913" endtime="20201030 18:30:22.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.912" endtime="20201030 18:30:22.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.911" endtime="20201030 18:30:22.933"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.554" endtime="20201030 18:30:22.934"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.553" endtime="20201030 18:30:22.934"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.943" endtime="20201030 18:30:22.962"></status>
</kw>
<msg timestamp="20201030 18:30:22.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.941" endtime="20201030 18:30:22.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:22.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:22.964" endtime="20201030 18:30:22.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.966" endtime="20201030 18:30:22.968"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.939" endtime="20201030 18:30:22.969"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.936" endtime="20201030 18:30:22.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:22.975" endtime="20201030 18:30:23.261"></status>
</kw>
<msg timestamp="20201030 18:30:23.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:22.974" endtime="20201030 18:30:23.264"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019945708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.265" endtime="20201030 18:30:23.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.273" endtime="20201030 18:30:23.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.971" endtime="20201030 18:30:23.276"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.970" endtime="20201030 18:30:23.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.280" level="INFO">${RESULT} = [{'diff': 0.00010670899999999997}, {'diff': 0.00010637499999999883}, {'diff': 0.00010719400000000143}, {'diff': 0.00010711100000000001}, {'diff': 0.0001067080000000005}, {'diff': 0.0001070139999999990...</msg>
<status status="PASS" starttime="20201030 18:30:23.277" endtime="20201030 18:30:23.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:23.284" level="INFO">${ACCURACY} = {'diff': [0.00010670899999999997, 0.00010637499999999883, 0.00010719400000000143, 0.00010711100000000001, 0.0001067080000000005, 0.00010701399999999903, 0.00010723600000000014, 0.00010709700000000044,...</msg>
<status status="PASS" starttime="20201030 18:30:23.281" endtime="20201030 18:30:23.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.289" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 18:30:23.288" endtime="20201030 18:30:23.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.291" level="INFO">VALUE: [0.00010670899999999997, 0.00010637499999999883, 0.00010719400000000143, 0.00010711100000000001, 0.0001067080000000005, 0.00010701399999999903, 0.00010723600000000014, 0.00010709700000000044, 0.00010701399999999903, 0.00010722300000000004, 0.00010698599999999989, 0.00010698599999999989, 0.00010666599999999832, 0.00010686099999999976, 0.00010695800000000075, 0.00010713899999999915, 0.00010655500000000123, 0.00010672200000000007, 0.00010676400000000225, 0.00010708400000000035, 0.00010701399999999903, 0.00010694500000000065, 0.00010715300000000219, 0.00010693100000000108, 0.00010666699999999779, 0.00010662499999999908, 0.00010683300000000062, 0.00010673599999999964, 0.00010680599999999749, 0.00010647199999999982, 0.00010698599999999989, 0.00010630600000000046, 0.00010719399999999796, 0.00010644400000000068, 0.00010697200000000032, 0.00010669400000000093, 0.0001063889999999984, 0.00010673599999999964, 0.0001068340000000001, 0.00010670899999999997, 0.00010704199999999817, 0.00010697200000000032, 0.00010677699999999887, 0.00010699999999999946, 0.00010713899999999915, 0.00010701399999999903, 0.00010649999999999896, 0.00010679099999999844, 0.00010644500000000015, 0.00010682000000000053]</msg>
<status status="PASS" starttime="20201030 18:30:23.290" endtime="20201030 18:30:23.292"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.285" endtime="20201030 18:30:23.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.296" endtime="20201030 18:30:23.315"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.294" endtime="20201030 18:30:23.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.293" endtime="20201030 18:30:23.316"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.935" endtime="20201030 18:30:23.317"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:22.934" endtime="20201030 18:30:23.317"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.325" endtime="20201030 18:30:23.345"></status>
</kw>
<msg timestamp="20201030 18:30:23.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.324" endtime="20201030 18:30:23.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.346" endtime="20201030 18:30:23.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.349" endtime="20201030 18:30:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.321" endtime="20201030 18:30:23.351"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.319" endtime="20201030 18:30:23.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.358" endtime="20201030 18:30:23.642"></status>
</kw>
<msg timestamp="20201030 18:30:23.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.356" endtime="20201030 18:30:23.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020639125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020746458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.646" endtime="20201030 18:30:23.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.654" endtime="20201030 18:30:23.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.354" endtime="20201030 18:30:23.656"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.352" endtime="20201030 18:30:23.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:23.661" level="INFO">${RESULT} = [{'diff': 0.00010733299999999765}, {'diff': 0.00010773600000000064}, {'diff': 0.00010738900000000287}, {'diff': 0.00010780599999999849}, {'diff': 0.0001082500000000007}, {'diff': 0.0001081810000000023...</msg>
<status status="PASS" starttime="20201030 18:30:23.658" endtime="20201030 18:30:23.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:23.665" level="INFO">${ACCURACY} = {'diff': [0.00010733299999999765, 0.00010773600000000064, 0.00010738900000000287, 0.00010780599999999849, 0.0001082500000000007, 0.00010818100000000233, 0.00010812500000000058, 0.00010737499999999983,...</msg>
<status status="PASS" starttime="20201030 18:30:23.662" endtime="20201030 18:30:23.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.669" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 18:30:23.668" endtime="20201030 18:30:23.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.672" level="INFO">VALUE: [0.00010733299999999765, 0.00010773600000000064, 0.00010738900000000287, 0.00010780599999999849, 0.0001082500000000007, 0.00010818100000000233, 0.00010812500000000058, 0.00010737499999999983, 0.0001082219999999981, 0.00010791599999999957, 0.00010772200000000107, 0.00010743000000000211, 0.00010783299999999815, 0.00010791700000000251, 0.00010818099999999886, 0.00010740299999999897, 0.00010784700000000119, 0.00010734800000000017, 0.00010770799999999803, 0.00010811099999999754, 0.00010741700000000201, 0.00010816699999999929, 0.00010748600000000039, 0.00010808300000000187, 0.0001080279999999996, 0.00010763899999999965, 0.000108208999999998, 0.00010808400000000135, 0.00010738799999999993, 0.00010749999999999996, 0.00010819400000000243, 0.00010776399999999978, 0.00010791700000000251, 0.00010777799999999935, 0.0001080699999999983, 0.0001080699999999983, 0.00010784800000000067, 0.00010761099999999704, 0.00010779099999999944, 0.00010780499999999901, 0.00010819399999999896, 0.00010766699999999879, 0.00010806899999999883, 0.00010784699999999772, 0.00010768100000000183, 0.00010795900000000122, 0.00010813900000000015, 0.00010808400000000135, 0.00010767999999999889, 0.00010813900000000015]</msg>
<status status="PASS" starttime="20201030 18:30:23.670" endtime="20201030 18:30:23.673"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.666" endtime="20201030 18:30:23.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:23.678" endtime="20201030 18:30:23.697"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.676" endtime="20201030 18:30:23.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.675" endtime="20201030 18:30:23.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.318" endtime="20201030 18:30:23.698"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.317" endtime="20201030 18:30:23.698"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.707" endtime="20201030 18:30:23.726"></status>
</kw>
<msg timestamp="20201030 18:30:23.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.705" endtime="20201030 18:30:23.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:23.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:23.727" endtime="20201030 18:30:23.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.730" endtime="20201030 18:30:23.731"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.703" endtime="20201030 18:30:23.732"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.701" endtime="20201030 18:30:23.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:23.739" endtime="20201030 18:30:24.023"></status>
</kw>
<msg timestamp="20201030 18:30:24.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:23.737" endtime="20201030 18:30:24.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019808306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.027" endtime="20201030 18:30:24.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.035" endtime="20201030 18:30:24.037"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.735" endtime="20201030 18:30:24.038"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.733" endtime="20201030 18:30:24.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.042" level="INFO">${RESULT} = [{'diff': 0.00010854199999999967}, {'diff': 0.00010836100000000126}, {'diff': 0.00010875000000000121}, {'diff': 0.00010899999999999799}, {'diff': 0.00010881999999999906}, {'diff': 0.000109056000000003...</msg>
<status status="PASS" starttime="20201030 18:30:24.039" endtime="20201030 18:30:24.042"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:24.047" level="INFO">${ACCURACY} = {'diff': [0.00010854199999999967, 0.00010836100000000126, 0.00010875000000000121, 0.00010899999999999799, 0.00010881999999999906, 0.0001090560000000032, 0.00010850000000000096, 0.00010895899999999875,...</msg>
<status status="PASS" starttime="20201030 18:30:24.043" endtime="20201030 18:30:24.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.051" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 18:30:24.050" endtime="20201030 18:30:24.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.054" level="INFO">VALUE: [0.00010854199999999967, 0.00010836100000000126, 0.00010875000000000121, 0.00010899999999999799, 0.00010881999999999906, 0.0001090560000000032, 0.00010850000000000096, 0.00010895899999999875, 0.00010879199999999992, 0.00010887499999999786, 0.00010866600000000032, 0.00010923600000000214, 0.00010831899999999908, 0.00010867999999999989, 0.00010861100000000151, 0.00010877800000000035, 0.00010923600000000214, 0.00010908399999999888, 0.00010859799999999795, 0.00010872300000000154, 0.00010837500000000083, 0.00010872200000000207, 0.00010836100000000126, 0.00010827800000000332, 0.00010833299999999865, 0.00010833399999999813, 0.0001083340000000016, 0.00010913900000000115, 0.00010919499999999943, 0.00010837500000000083, 0.00010877700000000087, 0.00010844399999999921, 0.00010869399999999946, 0.00010912500000000158, 0.00010918099999999986, 0.00010836100000000126, 0.00010925000000000171, 0.0001092219999999991, 0.0001090699999999993, 0.00010897199999999885, 0.00010877700000000087, 0.00010883299999999915, 0.00010844399999999921, 0.00010884700000000219, 0.00010893099999999961, 0.00010912500000000158, 0.00010911099999999854, 0.0001088890000000009, 0.00010866600000000032, 0.00010854100000000019]</msg>
<status status="PASS" starttime="20201030 18:30:24.052" endtime="20201030 18:30:24.054"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.048" endtime="20201030 18:30:24.055"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.059" endtime="20201030 18:30:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.057" endtime="20201030 18:30:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.056" endtime="20201030 18:30:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.699" endtime="20201030 18:30:24.079"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:23.699" endtime="20201030 18:30:24.079"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.088" endtime="20201030 18:30:24.107"></status>
</kw>
<msg timestamp="20201030 18:30:24.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.086" endtime="20201030 18:30:24.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.108" endtime="20201030 18:30:24.110"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.111" endtime="20201030 18:30:24.112"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.084" endtime="20201030 18:30:24.113"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.082" endtime="20201030 18:30:24.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.120" endtime="20201030 18:30:24.406"></status>
</kw>
<msg timestamp="20201030 18:30:24.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.118" endtime="20201030 18:30:24.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019684708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019794806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.410" endtime="20201030 18:30:24.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.418" endtime="20201030 18:30:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.115" endtime="20201030 18:30:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.114" endtime="20201030 18:30:24.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.425" level="INFO">${RESULT} = [{'diff': 0.00011009800000000292}, {'diff': 0.00010967999999999742}, {'diff': 0.00011006900000000083}, {'diff': 0.0001100830000000004}, {'diff': 0.00011012500000000258}, {'diff': 0.0001095280000000011...</msg>
<status status="PASS" starttime="20201030 18:30:24.422" endtime="20201030 18:30:24.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:24.429" level="INFO">${ACCURACY} = {'diff': [0.00011009800000000292, 0.00010967999999999742, 0.00011006900000000083, 0.0001100830000000004, 0.00011012500000000258, 0.0001095280000000011, 0.00010948600000000239, 0.00010984699999999972, ...</msg>
<status status="PASS" starttime="20201030 18:30:24.426" endtime="20201030 18:30:24.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.434" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 18:30:24.433" endtime="20201030 18:30:24.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.436" level="INFO">VALUE: [0.00011009800000000292, 0.00010967999999999742, 0.00011006900000000083, 0.0001100830000000004, 0.00011012500000000258, 0.0001095280000000011, 0.00010948600000000239, 0.00010984699999999972, 0.00010997299999999932, 0.00010983399999999963, 0.00010938899999999793, 0.00010984699999999972, 0.00010961099999999904, 0.00011001400000000203, 0.0001100280000000016, 0.00011025000000000271, 0.00010954200000000067, 0.00010983399999999963, 0.00010986199999999877, 0.00010983399999999963, 0.00011006899999999736, 0.00010984699999999972, 0.00010973599999999917, 0.00010936099999999879, 0.00010983300000000015, 0.00010943100000000011, 0.00011024999999999924, 0.00010955600000000024, 0.00011008399999999988, 0.00010979100000000144, 0.00010979100000000144, 0.000109902999999998, 0.00010944400000000021, 0.00011011099999999954, 0.00010987499999999886, 0.0001095829999999999, 0.00011019500000000043, 0.00010949999999999849, 0.00011015200000000225, 0.00010979100000000144, 0.00010962500000000208, 0.00010950000000000196, 0.00010948600000000239, 0.00011006899999999736, 0.00010943100000000011, 0.00010950000000000196, 0.00010937500000000183, 0.00010970800000000003, 0.00010998599999999942, 0.00010959699999999947]</msg>
<status status="PASS" starttime="20201030 18:30:24.435" endtime="20201030 18:30:24.437"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.430" endtime="20201030 18:30:24.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.441" endtime="20201030 18:30:24.460"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.439" endtime="20201030 18:30:24.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.438" endtime="20201030 18:30:24.461"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.080" endtime="20201030 18:30:24.462"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.080" endtime="20201030 18:30:24.462"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.470" endtime="20201030 18:30:24.491"></status>
</kw>
<msg timestamp="20201030 18:30:24.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.469" endtime="20201030 18:30:24.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.492" endtime="20201030 18:30:24.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.495" endtime="20201030 18:30:24.496"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.466" endtime="20201030 18:30:24.497"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.464" endtime="20201030 18:30:24.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.504" endtime="20201030 18:30:24.789"></status>
</kw>
<msg timestamp="20201030 18:30:24.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.502" endtime="20201030 18:30:24.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020990111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021100514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.793" endtime="20201030 18:30:24.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.801" endtime="20201030 18:30:24.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.500" endtime="20201030 18:30:24.803"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.498" endtime="20201030 18:30:24.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:24.808" level="INFO">${RESULT} = [{'diff': 0.00011040300000000197}, {'diff': 0.00011126399999999981}, {'diff': 0.00011115299999999925}, {'diff': 0.00011061100000000004}, {'diff': 0.00011084700000000072}, {'diff': 0.000110944999999997...</msg>
<status status="PASS" starttime="20201030 18:30:24.804" endtime="20201030 18:30:24.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:24.812" level="INFO">${ACCURACY} = {'diff': [0.00011040300000000197, 0.00011126399999999981, 0.00011115299999999925, 0.00011061100000000004, 0.00011084700000000072, 0.00011094499999999771, 0.00011041699999999807, 0.0001104029999999985,...</msg>
<status status="PASS" starttime="20201030 18:30:24.809" endtime="20201030 18:30:24.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.816" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 18:30:24.815" endtime="20201030 18:30:24.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.819" level="INFO">VALUE: [0.00011040300000000197, 0.00011126399999999981, 0.00011115299999999925, 0.00011061100000000004, 0.00011084700000000072, 0.00011094499999999771, 0.00011041699999999807, 0.0001104029999999985, 0.00011029099999999847, 0.0001107769999999994, 0.0001103890000000024, 0.00011054200000000167, 0.00011095800000000128, 0.0001107220000000006, 0.0001108480000000002, 0.00011081900000000158, 0.00011063899999999918, 0.00011093100000000161, 0.00011081900000000158, 0.00011067999999999842, 0.00011038899999999893, 0.0001104029999999985, 0.00011043100000000111, 0.00011101399999999956, 0.0001108480000000002, 0.00011090199999999953, 0.00011062499999999961, 0.00011070800000000103, 0.000110902000000003, 0.00011108299999999793, 0.0001110419999999987, 0.00011041700000000154, 0.000110902999999999, 0.00011111100000000054, 0.00011049999999999949, 0.00011049999999999949, 0.00011113800000000021, 0.00011113899999999968, 0.00011037499999999936, 0.00011095800000000128, 0.00011066699999999832, 0.00011120800000000153, 0.00011073600000000017, 0.00011108400000000088, 0.00011072300000000007, 0.00011115199999999978, 0.00011079100000000244, 0.00011095800000000128, 0.000111209000000001, 0.000110902999999999]</msg>
<status status="PASS" starttime="20201030 18:30:24.817" endtime="20201030 18:30:24.825"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.813" endtime="20201030 18:30:24.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:24.829" endtime="20201030 18:30:24.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.827" endtime="20201030 18:30:24.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.826" endtime="20201030 18:30:24.849"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.463" endtime="20201030 18:30:24.850"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.462" endtime="20201030 18:30:24.850"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.859" endtime="20201030 18:30:24.880"></status>
</kw>
<msg timestamp="20201030 18:30:24.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.857" endtime="20201030 18:30:24.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:24.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:24.882" endtime="20201030 18:30:24.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.884" endtime="20201030 18:30:24.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.854" endtime="20201030 18:30:24.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.852" endtime="20201030 18:30:24.887"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:24.893" endtime="20201030 18:30:25.179"></status>
</kw>
<msg timestamp="20201030 18:30:25.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:24.892" endtime="20201030 18:30:25.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020718042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020829444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.183" endtime="20201030 18:30:25.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.192" endtime="20201030 18:30:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.889" endtime="20201030 18:30:25.194"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.887" endtime="20201030 18:30:25.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.199" level="INFO">${RESULT} = [{'diff': 0.00011140200000000003}, {'diff': 0.00011173600000000117}, {'diff': 0.00011188900000000043}, {'diff': 0.00011201400000000056}, {'diff': 0.00011143100000000211}, {'diff': 0.000111361000000000...</msg>
<status status="PASS" starttime="20201030 18:30:25.195" endtime="20201030 18:30:25.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:25.206" level="INFO">${ACCURACY} = {'diff': [0.00011140200000000003, 0.00011173600000000117, 0.00011188900000000043, 0.00011201400000000056, 0.00011143100000000211, 0.00011136100000000079, 0.00011144500000000168, 0.00011151400000000006...</msg>
<status status="PASS" starttime="20201030 18:30:25.200" endtime="20201030 18:30:25.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.211" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 18:30:25.210" endtime="20201030 18:30:25.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.214" level="INFO">VALUE: [0.00011140200000000003, 0.00011173600000000117, 0.00011188900000000043, 0.00011201400000000056, 0.00011143100000000211, 0.00011136100000000079, 0.00011144500000000168, 0.00011151400000000006, 0.00011161200000000052, 0.00011226400000000081, 0.0001115549999999993, 0.00011182000000000206, 0.000111903, 0.00011136099999999732, 0.00011213899999999721, 0.00011155599999999877, 0.00011195899999999828, 0.00011154099999999972, 0.00011138899999999993, 0.00011191699999999957, 0.00011206999999999884, 0.00011194399999999924, 0.00011141700000000254, 0.00011226400000000081, 0.00011166699999999932, 0.00011159700000000147, 0.00011197300000000132, 0.00011148700000000039, 0.00011161100000000104, 0.00011181900000000258, 0.00011179199999999945, 0.00011175000000000074, 0.00011200000000000099, 0.00011201400000000056, 0.00011201400000000056, 0.0001117090000000015, 0.00011186099999999782, 0.00011161100000000104, 0.00011166599999999985, 0.00011138899999999993, 0.00011202800000000013, 0.00011219399999999949, 0.00011202800000000013, 0.00011132000000000156, 0.000111903, 0.00011173700000000064, 0.00011130499999999904, 0.00011150000000000049, 0.00011169399999999899, 0.0001120969999999985]</msg>
<status status="PASS" starttime="20201030 18:30:25.213" endtime="20201030 18:30:25.215"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.207" endtime="20201030 18:30:25.215"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.219" endtime="20201030 18:30:25.238"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.218" endtime="20201030 18:30:25.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.216" endtime="20201030 18:30:25.239"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.851" endtime="20201030 18:30:25.240"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:24.850" endtime="20201030 18:30:25.240"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.248" endtime="20201030 18:30:25.269"></status>
</kw>
<msg timestamp="20201030 18:30:25.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.247" endtime="20201030 18:30:25.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.272" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.271" endtime="20201030 18:30:25.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.273" endtime="20201030 18:30:25.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.244" endtime="20201030 18:30:25.275"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.242" endtime="20201030 18:30:25.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.282" endtime="20201030 18:30:25.570"></status>
</kw>
<msg timestamp="20201030 18:30:25.573" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.281" endtime="20201030 18:30:25.573"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020491917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:25.574" endtime="20201030 18:30:25.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.582" endtime="20201030 18:30:25.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.278" endtime="20201030 18:30:25.584"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.276" endtime="20201030 18:30:25.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.589" level="INFO">${RESULT} = [{'diff': 0.00011255599999999977}, {'diff': 0.00011243100000000311}, {'diff': 0.00011309700000000297}, {'diff': 0.00011272199999999913}, {'diff': 0.00011298600000000242}, {'diff': 0.000112999999999998...</msg>
<status status="PASS" starttime="20201030 18:30:25.585" endtime="20201030 18:30:25.589"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:25.593" level="INFO">${ACCURACY} = {'diff': [0.00011255599999999977, 0.00011243100000000311, 0.00011309700000000297, 0.00011272199999999913, 0.00011298600000000242, 0.00011299999999999852, 0.00011244399999999974, 0.00011319399999999702...</msg>
<status status="PASS" starttime="20201030 18:30:25.590" endtime="20201030 18:30:25.593"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.597" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 18:30:25.596" endtime="20201030 18:30:25.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.600" level="INFO">VALUE: [0.00011255599999999977, 0.00011243100000000311, 0.00011309700000000297, 0.00011272199999999913, 0.00011298600000000242, 0.00011299999999999852, 0.00011244399999999974, 0.00011319399999999702, 0.00011252799999999716, 0.00011319499999999996, 0.00011286099999999882, 0.00011318100000000039, 0.00011324999999999877, 0.00011266599999999738, 0.00011273600000000217, 0.00011236100000000179, 0.00011236099999999832, 0.00011265300000000075, 0.00011279200000000045, 0.00011326400000000181, 0.0001124160000000006, 0.00011320800000000006, 0.00011273600000000217, 0.00011229100000000047, 0.00011291700000000057, 0.00011297199999999938, 0.00011297199999999938, 0.00011313899999999821, 0.00011245799999999931, 0.00011324999999999877, 0.00011316700000000082, 0.00011319400000000049, 0.00011244399999999974, 0.00011231899999999961, 0.00011244499999999921, 0.00011261099999999857, 0.00011295899999999928, 0.00011324999999999877, 0.00011244499999999921, 0.0001130969999999995, 0.00011326400000000181, 0.00011295799999999981, 0.000112903000000001, 0.00011277800000000088, 0.00011245800000000278, 0.00011236100000000179, 0.00011263900000000118, 0.00011240200000000103, 0.00011324999999999877, 0.00011266600000000085]</msg>
<status status="PASS" starttime="20201030 18:30:25.598" endtime="20201030 18:30:25.600"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.593" endtime="20201030 18:30:25.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.604" endtime="20201030 18:30:25.624"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.603" endtime="20201030 18:30:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.602" endtime="20201030 18:30:25.625"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.241" endtime="20201030 18:30:25.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.240" endtime="20201030 18:30:25.626"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.637" endtime="20201030 18:30:25.659"></status>
</kw>
<msg timestamp="20201030 18:30:25.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.636" endtime="20201030 18:30:25.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:25.661" endtime="20201030 18:30:25.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.664" endtime="20201030 18:30:25.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.632" endtime="20201030 18:30:25.666"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.630" endtime="20201030 18:30:25.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.673" endtime="20201030 18:30:25.959"></status>
</kw>
<msg timestamp="20201030 18:30:25.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02438425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:25.672" endtime="20201030 18:30:25.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02438425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024498361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:30:25.963" endtime="20201030 18:30:25.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:25.971" endtime="20201030 18:30:25.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.669" endtime="20201030 18:30:25.973"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.667" endtime="20201030 18:30:25.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:25.978" level="INFO">${RESULT} = [{'diff': 0.00011411100000000007}, {'diff': 0.00011366700000000132}, {'diff': 0.00011336099999999932}, {'diff': 0.00011349999999999902}, {'diff': 0.00011419500000000096}, {'diff': 0.000113568999999997...</msg>
<status status="PASS" starttime="20201030 18:30:25.975" endtime="20201030 18:30:25.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:25.982" level="INFO">${ACCURACY} = {'diff': [0.00011411100000000007, 0.00011366700000000132, 0.00011336099999999932, 0.00011349999999999902, 0.00011419500000000096, 0.0001135689999999974, 0.00011361100000000304, 0.0001134030000000015, ...</msg>
<status status="PASS" starttime="20201030 18:30:25.979" endtime="20201030 18:30:25.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.986" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 18:30:25.985" endtime="20201030 18:30:25.987"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:25.989" level="INFO">VALUE: [0.00011411100000000007, 0.00011366700000000132, 0.00011336099999999932, 0.00011349999999999902, 0.00011419500000000096, 0.0001135689999999974, 0.00011361100000000304, 0.0001134030000000015, 0.00011427799999999891, 0.00011427799999999891, 0.00011383300000000068, 0.00011365300000000175, 0.00011344500000000021, 0.00011376399999999884, 0.00011394399999999777, 0.00011372200000000013, 0.00011344400000000074, 0.00011365300000000175, 0.00011380599999999755, 0.000113597, 0.00011400000000000299, 0.00011338900000000193, 0.0001133749999999989, 0.00011404099999999875, 0.00011402799999999866, 0.00011417999999999845, 0.0001138749999999994, 0.00011366699999999785, 0.00011419400000000149, 0.00011395799999999734, 0.0001134030000000015, 0.00011426399999999934, 0.00011370800000000056, 0.00011361099999999957, 0.00011334699999999975, 0.00011341700000000107, 0.00011376399999999884, 0.00011420799999999759, 0.00011404199999999823, 0.00011348599999999945, 0.00011415300000000225, 0.00011341700000000107, 0.00011338900000000193, 0.00011426399999999934, 0.00011402699999999918, 0.00011413899999999921, 0.00011426399999999934, 0.00011383300000000068, 0.00011382000000000059, 0.00011343000000000117]</msg>
<status status="PASS" starttime="20201030 18:30:25.987" endtime="20201030 18:30:25.990"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.983" endtime="20201030 18:30:25.991"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:25.995" endtime="20201030 18:30:26.014"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.993" endtime="20201030 18:30:26.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.992" endtime="20201030 18:30:26.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.628" endtime="20201030 18:30:26.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:25.627" endtime="20201030 18:30:26.015"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.024" endtime="20201030 18:30:26.044"></status>
</kw>
<msg timestamp="20201030 18:30:26.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.022" endtime="20201030 18:30:26.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.047" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:26.045" endtime="20201030 18:30:26.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.048" endtime="20201030 18:30:26.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.020" endtime="20201030 18:30:26.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.018" endtime="20201030 18:30:26.050"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.057" endtime="20201030 18:30:26.342"></status>
</kw>
<msg timestamp="20201030 18:30:26.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.055" endtime="20201030 18:30:26.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019763611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019878208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:26.347" endtime="20201030 18:30:26.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:26.355" endtime="20201030 18:30:26.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.053" endtime="20201030 18:30:26.357"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.051" endtime="20201030 18:30:26.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:26.361" level="INFO">${RESULT} = [{'diff': 0.000114597000000001}, {'diff': 0.00011511100000000107}, {'diff': 0.00011468000000000242}, {'diff': 0.00011430499999999857}, {'diff': 0.00011476399999999984}, {'diff': 0.00011424999999999977...</msg>
<status status="PASS" starttime="20201030 18:30:26.358" endtime="20201030 18:30:26.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 18:30:26.366" level="INFO">${ACCURACY} = {'diff': [0.000114597000000001, 0.00011511100000000107, 0.00011468000000000242, 0.00011430499999999857, 0.00011476399999999984, 0.00011424999999999977, 0.00011486100000000082, 0.00011473700000000017, ...</msg>
<status status="PASS" starttime="20201030 18:30:26.362" endtime="20201030 18:30:26.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.371" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 18:30:26.370" endtime="20201030 18:30:26.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.373" level="INFO">VALUE: [0.000114597000000001, 0.00011511100000000107, 0.00011468000000000242, 0.00011430499999999857, 0.00011476399999999984, 0.00011424999999999977, 0.00011486100000000082, 0.00011473700000000017, 0.00011463800000000024, 0.00011481899999999864, 0.00011466599999999938, 0.00011452799999999916, 0.00011477799999999941, 0.00011443099999999817, 0.00011461100000000057, 0.00011520900000000153, 0.00011520899999999806, 0.0001147230000000006, 0.00011513800000000074, 0.00011455499999999882, 0.00011463899999999971, 0.00011438899999999946, 0.00011483300000000168, 0.00011497200000000138, 0.00011472199999999766, 0.0001152499999999973, 0.00011495900000000128, 0.0001143749999999999, 0.00011466599999999938, 0.00011526400000000034, 0.00011519399999999902, 0.00011468099999999842, 0.00011455499999999882, 0.00011483400000000116, 0.00011450000000000002, 0.00011483400000000116, 0.00011455600000000177, 0.00011466699999999885, 0.00011476399999999984, 0.00011445800000000131, 0.00011502799999999966, 0.00011500000000000052, 0.00011488899999999996, 0.00011444499999999774, 0.0001147230000000006, 0.00011476399999999984, 0.00011472200000000113, 0.00011512500000000064, 0.00011444400000000174, 0.00011493100000000214]</msg>
<status status="PASS" starttime="20201030 18:30:26.372" endtime="20201030 18:30:26.374"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.367" endtime="20201030 18:30:26.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.378" endtime="20201030 18:30:26.397"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.376" endtime="20201030 18:30:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.375" endtime="20201030 18:30:26.398"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.016" endtime="20201030 18:30:26.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.016" endtime="20201030 18:30:26.399"></status>
</kw>
<status status="PASS" starttime="20201030 18:29:47.891" endtime="20201030 18:30:26.399"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:26.403" endtime="20201030 18:30:26.422"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.401" endtime="20201030 18:30:26.423"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.400" endtime="20201030 18:30:26.423"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:29:44.797" endtime="20201030 18:30:26.423" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:28:55.581" endtime="20201030 18:30:26.427"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 18:30:26.480" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 18:30:26.488" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 18:30:27.594" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 18:30:26.478" endtime="20201030 18:30:27.595"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 18:30:30.598" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201030 18:30:27.596" endtime="20201030 18:30:30.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.477" endtime="20201030 18:30:30.600"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:30.604" endtime="20201030 18:30:30.864"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.602" endtime="20201030 18:30:30.865"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:30.877" endtime="20201030 18:30:33.901"></status>
</kw>
<msg timestamp="20201030 18:30:33.902" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:30.876" endtime="20201030 18:30:33.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:33.905" endtime="20201030 18:30:33.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:33.914" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:33.910" endtime="20201030 18:30:33.915"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:30.873" endtime="20201030 18:30:33.916"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:30.871" endtime="20201030 18:30:33.917"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.870" endtime="20201030 18:30:33.918"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:33.926" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:33.924" endtime="20201030 18:30:33.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.920" endtime="20201030 18:30:33.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.869" endtime="20201030 18:30:33.927"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.868" endtime="20201030 18:30:33.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.929" endtime="20201030 18:30:33.932"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.867" endtime="20201030 18:30:33.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:33.936" endtime="20201030 18:30:33.939"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:30.866" endtime="20201030 18:30:33.940"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:26.476" endtime="20201030 18:30:33.941"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:33.952" endtime="20201030 18:30:33.974"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.949" endtime="20201030 18:30:33.975"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:34.001" endtime="20201030 18:30:37.023"></status>
</kw>
<msg timestamp="20201030 18:30:37.024" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:34.000" endtime="20201030 18:30:37.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.029" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.026" endtime="20201030 18:30:37.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:37.035" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:37.031" endtime="20201030 18:30:37.036"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:33.994" endtime="20201030 18:30:37.039"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:33.988" endtime="20201030 18:30:37.040"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.986" endtime="20201030 18:30:37.041"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:37.048" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:37.047" endtime="20201030 18:30:37.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.043" endtime="20201030 18:30:37.049"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.984" endtime="20201030 18:30:37.050"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.983" endtime="20201030 18:30:37.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.052" endtime="20201030 18:30:37.055"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.980" endtime="20201030 18:30:37.056"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.977" endtime="20201030 18:30:37.057"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:33.947" endtime="20201030 18:30:37.057"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:37.074" endtime="20201030 18:30:43.199"></status>
</kw>
<msg timestamp="20201030 18:30:43.200" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:37.071" endtime="20201030 18:30:43.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.205" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.202" endtime="20201030 18:30:43.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.208" endtime="20201030 18:30:43.211"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.066" endtime="20201030 18:30:43.212"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.062" endtime="20201030 18:30:43.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.219" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 0, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:30:43.215" endtime="20201030 18:30:43.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.229" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:43.225" endtime="20201030 18:30:43.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.234" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:43.232" endtime="20201030 18:30:43.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.221" endtime="20201030 18:30:43.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.246" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:43.243" endtime="20201030 18:30:43.246"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.250" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:43.248" endtime="20201030 18:30:43.251"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.239" endtime="20201030 18:30:43.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.260" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:43.258" endtime="20201030 18:30:43.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.264" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 18:30:43.262" endtime="20201030 18:30:43.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.253" endtime="20201030 18:30:43.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.273" endtime="20201030 18:30:43.580"></status>
</kw>
<msg timestamp="20201030 18:30:43.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112339403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212365819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.272" endtime="20201030 18:30:43.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.112339403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.212365819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:43.584" endtime="20201030 18:30:43.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.592" endtime="20201030 18:30:43.594"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.269" endtime="20201030 18:30:43.595"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.267" endtime="20201030 18:30:43.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:43.599" level="INFO">${FILTERED} = [{'diff': 0.10002641599999995}, {'diff': 0.10000897199999992}, {'diff': 0.10001192999999997}, {'diff': 0.10001083300000024}, {'diff': 0.10001084700000007}, {'diff': 0.1000108329999998}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:30:43.596" endtime="20201030 18:30:43.599"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:43.603" level="INFO">${RESULT} = {'diff': [0.10002641599999995, 0.10000897199999992, 0.10001192999999997, 0.10001083300000024, 0.10001084700000007, 0.1000108329999998, 0.10001093099999991, 0.10001083400000033, 0.10001088899999999, 0....</msg>
<status status="PASS" starttime="20201030 18:30:43.600" endtime="20201030 18:30:43.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.608" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:43.607" endtime="20201030 18:30:43.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:43.610" level="INFO">VALUE: [0.10002641599999995, 0.10000897199999992, 0.10001192999999997, 0.10001083300000024, 0.10001084700000007, 0.1000108329999998, 0.10001093099999991, 0.10001083400000033, 0.10001088899999999, 0.10001079199999996, 0.10001091699999964, 0.1000109440000001, 0.10001083300000069, 0.1000108329999998, 0.10001091700000053, 0.10001091699999964, 0.10001091700000053, 0.10001084700000007, 0.10001091700000053, 0.10001091699999964, 0.1000109440000001, 0.10001081900000042, 0.10001091599999956, 0.10001093099999991, 0.1000108329999998, 0.10001093099999991, 0.10001084800000015, 0.10001084800000015, 0.10001086099999945, 0.1000108329999998, 0.10001095800000037, 0.1000108329999998, 0.10001084700000007, 0.10001084800000015, 0.10001084800000015, 0.10001092999999983, 0.10001087500000061, 0.10001087500000061, 0.10001080600000023, 0.10001084700000007, 0.10001093099999991, 0.10001084700000007, 0.10001090200000018, 0.10001088899999999, 0.10001091599999956, 0.10001086099999945, 0.10001077799999969, 0.10001091700000053, 0.10001081999999961, 0.10001091700000053, 0.100010833999999]</msg>
<status status="PASS" starttime="20201030 18:30:43.609" endtime="20201030 18:30:43.611"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.604" endtime="20201030 18:30:43.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.615" endtime="20201030 18:30:43.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.614" endtime="20201030 18:30:43.635"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.613" endtime="20201030 18:30:43.636"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:37.059" endtime="20201030 18:30:43.636"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:33.942" endtime="20201030 18:30:43.637" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:43.643" endtime="20201030 18:30:43.663"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.642" endtime="20201030 18:30:43.663"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:43.678" endtime="20201030 18:30:46.697"></status>
</kw>
<msg timestamp="20201030 18:30:46.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:43.676" endtime="20201030 18:30:46.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.698" endtime="20201030 18:30:46.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:46.703" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:46.701" endtime="20201030 18:30:46.703"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:43.673" endtime="20201030 18:30:46.704"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:43.671" endtime="20201030 18:30:46.705"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.670" endtime="20201030 18:30:46.705"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:46.709" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:46.708" endtime="20201030 18:30:46.709"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.706" endtime="20201030 18:30:46.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.669" endtime="20201030 18:30:46.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.668" endtime="20201030 18:30:46.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.711" endtime="20201030 18:30:46.712"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.666" endtime="20201030 18:30:46.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.664" endtime="20201030 18:30:46.713"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:43.640" endtime="20201030 18:30:46.714"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:46.722" endtime="20201030 18:30:52.847"></status>
</kw>
<msg timestamp="20201030 18:30:52.848" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:46.720" endtime="20201030 18:30:52.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.854" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:52.850" endtime="20201030 18:30:52.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.857" endtime="20201030 18:30:52.861"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.718" endtime="20201030 18:30:52.862"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.716" endtime="20201030 18:30:52.863"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:52.868" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 5, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:30:52.864" endtime="20201030 18:30:52.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.877" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:52.875" endtime="20201030 18:30:52.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.884" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:30:52.880" endtime="20201030 18:30:52.885"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.870" endtime="20201030 18:30:52.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.893" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:30:52.892" endtime="20201030 18:30:52.893"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.895" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:30:52.894" endtime="20201030 18:30:52.895"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.888" endtime="20201030 18:30:52.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.900" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:30:52.899" endtime="20201030 18:30:52.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:52.902" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 18:30:52.901" endtime="20201030 18:30:52.902"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.896" endtime="20201030 18:30:52.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:52.910" endtime="20201030 18:30:53.208"></status>
</kw>
<msg timestamp="20201030 18:30:53.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068588778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168669736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:52.908" endtime="20201030 18:30:53.211"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.219" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.068588778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.168669736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:30:53.212" endtime="20201030 18:30:53.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.220" endtime="20201030 18:30:53.222"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.905" endtime="20201030 18:30:53.223"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:52.904" endtime="20201030 18:30:53.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:30:53.227" level="INFO">${FILTERED} = [{'diff': 0.10008095799999994}, {'diff': 0.0999593889999999}, {'diff': 0.10000991699999995}, {'diff': 0.10001080500000015}, {'diff': 0.10001088799999991}, {'diff': 0.10001095799999993}, {'diff': 4.719...</msg>
<status status="PASS" starttime="20201030 18:30:53.224" endtime="20201030 18:30:53.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:30:53.234" level="INFO">${RESULT} = {'diff': [0.10008095799999994, 0.0999593889999999, 0.10000991699999995, 0.10001080500000015, 0.10001088799999991, 0.10001095799999993, 4.7199999997360464e-07, 0.10001130599999986, 0.10001088899999999,...</msg>
<status status="PASS" starttime="20201030 18:30:53.228" endtime="20201030 18:30:53.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.238" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:30:53.237" endtime="20201030 18:30:53.238"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:30:53.241" level="INFO">VALUE: [0.10008095799999994, 0.0999593889999999, 0.10000991699999995, 0.10001080500000015, 0.10001088799999991, 0.10001095799999993, 4.7199999997360464e-07, 0.10001130599999986, 0.10001088899999999, 0.10001091700000053, 0.10001080600000023, 0.10001094500000018, 0.10001077800000058, 0.10001090299999937, 0.10001094500000018, 0.10001079199999996, 0.10001081900000042, 0.10001081900000042, 0.10001090300000026, 0.1000109870000001, 5.420000004363601e-07, 4.73000000056345e-07, 5.419999995481817e-07, 0.10001129100000039, 0.10001091599999956, 0.10001081899999953, 0.1000108329999998, 0.10001083300000069, 0.1000108200000005, 0.10001090299999937, 0.10001090300000026, 0.10001090300000026, 0.10001090299999937, 0.10001091599999956, 0.10001086099999945, 0.10001081899999953, 0.10001087499999972, 5.419999995481817e-07, 4.73000000056345e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.419999986600033e-07]</msg>
<status status="PASS" starttime="20201030 18:30:53.239" endtime="20201030 18:30:53.241"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.235" endtime="20201030 18:30:53.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.246" endtime="20201030 18:30:53.265"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.244" endtime="20201030 18:30:53.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.243" endtime="20201030 18:30:53.266"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:46.714" endtime="20201030 18:30:53.266"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:43.638" endtime="20201030 18:30:53.267" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:30:53.274" endtime="20201030 18:30:53.293"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.272" endtime="20201030 18:30:53.294"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:53.307" endtime="20201030 18:30:56.329"></status>
</kw>
<msg timestamp="20201030 18:30:56.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:53.306" endtime="20201030 18:30:56.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.335" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.332" endtime="20201030 18:30:56.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:30:56.342" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:30:56.338" endtime="20201030 18:30:56.343"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:53.303" endtime="20201030 18:30:56.344"></status>
</kw>
<status status="FAIL" starttime="20201030 18:30:53.301" endtime="20201030 18:30:56.346"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.299" endtime="20201030 18:30:56.347"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:30:56.351" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:30:56.350" endtime="20201030 18:30:56.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.348" endtime="20201030 18:30:56.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.298" endtime="20201030 18:30:56.352"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.298" endtime="20201030 18:30:56.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.353" endtime="20201030 18:30:56.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.296" endtime="20201030 18:30:56.355"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.294" endtime="20201030 18:30:56.356"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:53.271" endtime="20201030 18:30:56.356"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:30:56.366" endtime="20201030 18:31:02.490"></status>
</kw>
<msg timestamp="20201030 18:31:02.491" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:30:56.364" endtime="20201030 18:31:02.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.497" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.493" endtime="20201030 18:31:02.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.500" endtime="20201030 18:31:02.503"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.362" endtime="20201030 18:31:02.505"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.358" endtime="20201030 18:31:02.506"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.511" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 10, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:31:02.507" endtime="20201030 18:31:02.511"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.520" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:02.518" endtime="20201030 18:31:02.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.525" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:31:02.522" endtime="20201030 18:31:02.525"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.513" endtime="20201030 18:31:02.527"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.535" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:02.533" endtime="20201030 18:31:02.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.540" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:31:02.538" endtime="20201030 18:31:02.540"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.528" endtime="20201030 18:31:02.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.550" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:31:02.548" endtime="20201030 18:31:02.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.555" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 18:31:02.552" endtime="20201030 18:31:02.555"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.543" endtime="20201030 18:31:02.557"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.569" endtime="20201030 18:31:02.868"></status>
</kw>
<msg timestamp="20201030 18:31:02.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.082112569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.182243417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.567" endtime="20201030 18:31:02.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.082112569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.182243417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:02.872" endtime="20201030 18:31:02.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.880" endtime="20201030 18:31:02.882"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.562" endtime="20201030 18:31:02.883"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.558" endtime="20201030 18:31:02.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:31:02.887" level="INFO">${FILTERED} = [{'diff': 0.10013084800000005}, {'diff': 0.10004155599999986}, {'diff': 0.09988218000000026}, {'diff': 0.10001091700000009}, {'diff': 0.10001091700000009}, {'diff': 0.1000108329999998}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:31:02.884" endtime="20201030 18:31:02.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:02.892" level="INFO">${RESULT} = {'diff': [0.10013084800000005, 0.10004155599999986, 0.09988218000000026, 0.10001091700000009, 0.10001091700000009, 0.1000108329999998, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0....</msg>
<status status="PASS" starttime="20201030 18:31:02.888" endtime="20201030 18:31:02.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.897" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:31:02.896" endtime="20201030 18:31:02.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:02.899" level="INFO">VALUE: [0.10013084800000005, 0.10004155599999986, 0.09988218000000026, 0.10001091700000009, 0.10001091700000009, 0.1000108329999998, 0.10001091700000009, 0.10001091700000009, 0.10001091700000009, 0.10001083400000033, 0.10001091599999956, 0.10001091600000045, 0.10001091600000045, 0.10001091699999964, 0.10001091700000053, 0.10001093099999991, 0.10001086199999953, 0.10001081999999961, 0.10001086099999945, 0.10001088899999999, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.420000004363601e-07, 0.10001131900000004, 0.10001093099999991, 0.10001086199999953, 0.10001083399999988, 0.10001092999999983, 0.10001086099999945, 0.1000108329999998, 0.10001091700000053, 0.1000109449999993, 0.10001086100000034, 0.1000108329999998, 0.10001084700000007, 0.10001098600000002, 0.10001080600000023, 0.10001086100000034, 0.10001084800000015, 0.10001084700000007, 0.10001092999999983, 0.10001094500000018, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201030 18:31:02.898" endtime="20201030 18:31:02.900"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.893" endtime="20201030 18:31:02.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.904" endtime="20201030 18:31:02.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.903" endtime="20201030 18:31:02.924"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.902" endtime="20201030 18:31:02.925"></status>
</kw>
<status status="PASS" starttime="20201030 18:30:56.357" endtime="20201030 18:31:02.925"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:30:53.269" endtime="20201030 18:31:02.926" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:02.932" endtime="20201030 18:31:02.952"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.931" endtime="20201030 18:31:02.952"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:02.967" endtime="20201030 18:31:05.988"></status>
</kw>
<msg timestamp="20201030 18:31:05.989" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:02.965" endtime="20201030 18:31:05.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:05.995" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:05.992" endtime="20201030 18:31:05.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:06.002" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:05.997" endtime="20201030 18:31:06.003"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:02.962" endtime="20201030 18:31:06.004"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:02.959" endtime="20201030 18:31:06.005"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.958" endtime="20201030 18:31:06.006"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:06.014" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:06.013" endtime="20201030 18:31:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.008" endtime="20201030 18:31:06.015"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.957" endtime="20201030 18:31:06.016"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.956" endtime="20201030 18:31:06.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.018" endtime="20201030 18:31:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.955" endtime="20201030 18:31:06.022"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.953" endtime="20201030 18:31:06.023"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:02.929" endtime="20201030 18:31:06.024"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:06.042" endtime="20201030 18:31:12.169"></status>
</kw>
<msg timestamp="20201030 18:31:12.170" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:06.039" endtime="20201030 18:31:12.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.176" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.172" endtime="20201030 18:31:12.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.179" endtime="20201030 18:31:12.182"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.033" endtime="20201030 18:31:12.184"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.029" endtime="20201030 18:31:12.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.190" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 15, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:31:12.186" endtime="20201030 18:31:12.191"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.199" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:12.197" endtime="20201030 18:31:12.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.204" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:31:12.202" endtime="20201030 18:31:12.205"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.192" endtime="20201030 18:31:12.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.214" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:12.212" endtime="20201030 18:31:12.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.219" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:31:12.217" endtime="20201030 18:31:12.219"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.207" endtime="20201030 18:31:12.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.229" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:31:12.227" endtime="20201030 18:31:12.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.234" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 18:31:12.232" endtime="20201030 18:31:12.235"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.222" endtime="20201030 18:31:12.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.253" endtime="20201030 18:31:12.560"></status>
</kw>
<msg timestamp="20201030 18:31:12.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101143806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.201369528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.249" endtime="20201030 18:31:12.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.101143806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.201369528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:12.564" endtime="20201030 18:31:12.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.572" endtime="20201030 18:31:12.574"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.241" endtime="20201030 18:31:12.575"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.237" endtime="20201030 18:31:12.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:31:12.580" level="INFO">${FILTERED} = [{'diff': 0.1002257219999998}, {'diff': 0.10004531900000035}, {'diff': 0.09978540299999983}, {'diff': 0.10001190299999996}, {'diff': 0.10001083300000024}, {'diff': 0.1000108049999997}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201030 18:31:12.576" endtime="20201030 18:31:12.580"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:12.587" level="INFO">${RESULT} = {'diff': [0.1002257219999998, 0.10004531900000035, 0.09978540299999983, 0.10001190299999996, 0.10001083300000024, 0.1000108049999997, 0.10001091700000009, 0.10001081899999997, 0.10001088900000044, 5.4...</msg>
<status status="PASS" starttime="20201030 18:31:12.582" endtime="20201030 18:31:12.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.594" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:31:12.592" endtime="20201030 18:31:12.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:12.598" level="INFO">VALUE: [0.1002257219999998, 0.10004531900000035, 0.09978540299999983, 0.10001190299999996, 0.10001083300000024, 0.1000108049999997, 0.10001091700000009, 0.10001081899999997, 0.10001088900000044, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.419999995481817e-07, 4.7200000086178306e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.720000017499615e-07]</msg>
<status status="PASS" starttime="20201030 18:31:12.595" endtime="20201030 18:31:12.599"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.588" endtime="20201030 18:31:12.600"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.606" endtime="20201030 18:31:12.626"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.604" endtime="20201030 18:31:12.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.602" endtime="20201030 18:31:12.627"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:06.025" endtime="20201030 18:31:12.628"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:02.927" endtime="20201030 18:31:12.628" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:12.635" endtime="20201030 18:31:12.655"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.633" endtime="20201030 18:31:12.656"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:12.669" endtime="20201030 18:31:15.693"></status>
</kw>
<msg timestamp="20201030 18:31:15.694" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:12.668" endtime="20201030 18:31:15.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.700" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.696" endtime="20201030 18:31:15.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:15.706" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:15.702" endtime="20201030 18:31:15.707"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:12.665" endtime="20201030 18:31:15.708"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:12.663" endtime="20201030 18:31:15.710"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.661" endtime="20201030 18:31:15.710"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:15.718" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:15.717" endtime="20201030 18:31:15.719"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.712" endtime="20201030 18:31:15.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.660" endtime="20201030 18:31:15.720"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.660" endtime="20201030 18:31:15.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.722" endtime="20201030 18:31:15.725"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.658" endtime="20201030 18:31:15.727"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.656" endtime="20201030 18:31:15.728"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:12.632" endtime="20201030 18:31:15.728"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:15.745" endtime="20201030 18:31:21.872"></status>
</kw>
<msg timestamp="20201030 18:31:21.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:15.743" endtime="20201030 18:31:21.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.879" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:21.875" endtime="20201030 18:31:21.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.882" endtime="20201030 18:31:21.886"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.737" endtime="20201030 18:31:21.888"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.733" endtime="20201030 18:31:21.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:21.894" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 20, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:31:21.890" endtime="20201030 18:31:21.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.906" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:21.901" endtime="20201030 18:31:21.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.909" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:31:21.908" endtime="20201030 18:31:21.909"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.896" endtime="20201030 18:31:21.910"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.914" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:21.913" endtime="20201030 18:31:21.914"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.916" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:31:21.915" endtime="20201030 18:31:21.916"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.910" endtime="20201030 18:31:21.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.921" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:31:21.920" endtime="20201030 18:31:21.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:21.923" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 18:31:21.922" endtime="20201030 18:31:21.923"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.918" endtime="20201030 18:31:21.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:21.931" endtime="20201030 18:31:22.229"></status>
</kw>
<msg timestamp="20201030 18:31:22.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10061825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.200956792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:21.929" endtime="20201030 18:31:22.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.10061825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.200956792, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 18:31:22.233" endtime="20201030 18:31:22.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.241" endtime="20201030 18:31:22.243"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.926" endtime="20201030 18:31:22.244"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:21.925" endtime="20201030 18:31:22.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:31:22.248" level="INFO">${FILTERED} = [{'diff': 0.10033854199999981}, {'diff': 0.10004965300000013}, {'diff': 0.10005147300000017}, {'diff': 0.09963161099999995}, {'diff': 0.1000108609999999}, {'diff': 0.10001077800000013}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:31:22.245" endtime="20201030 18:31:22.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:22.253" level="INFO">${RESULT} = {'diff': [0.10033854199999981, 0.10004965300000013, 0.10005147300000017, 0.09963161099999995, 0.1000108609999999, 0.10001077800000013, 0.100010916, 0.10001080600000023, 0.10001081999999961, 0.10001088...</msg>
<status status="PASS" starttime="20201030 18:31:22.249" endtime="20201030 18:31:22.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.258" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:31:22.256" endtime="20201030 18:31:22.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:22.260" level="INFO">VALUE: [0.10033854199999981, 0.10004965300000013, 0.10005147300000017, 0.09963161099999995, 0.1000108609999999, 0.10001077800000013, 0.100010916, 0.10001080600000023, 0.10001081999999961, 0.10001088899999999, 0.10001090300000026, 0.1000108329999998, 0.10001088799999991, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.280000001661733e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 0.10001129199999959, 0.10001095800000037, 0.10001077799999969, 0.1000108200000005, 0.10001090300000026, 0.10001097199999975, 5.409999994654413e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 0.10001130600000074, 0.10001090299999937, 0.10001090300000026, 0.10001090300000026, 0.10001090300000026, 0.10001090299999937, 0.10001091700000053, 0.10001083399999988, 0.10001083399999988, 0.10001083399999988, 0.10001090300000026, 0.10001090299999937, 0.10001094400000099, 0.10001080600000023]</msg>
<status status="PASS" starttime="20201030 18:31:22.259" endtime="20201030 18:31:22.261"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.254" endtime="20201030 18:31:22.261"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.265" endtime="20201030 18:31:22.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.264" endtime="20201030 18:31:22.285"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.262" endtime="20201030 18:31:22.286"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:15.730" endtime="20201030 18:31:22.286"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:12.630" endtime="20201030 18:31:22.287" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:22.293" endtime="20201030 18:31:22.313"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.292" endtime="20201030 18:31:22.313"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:22.327" endtime="20201030 18:31:25.350"></status>
</kw>
<msg timestamp="20201030 18:31:25.351" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:22.325" endtime="20201030 18:31:25.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.358" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.354" endtime="20201030 18:31:25.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 18:31:25.366" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 18:31:25.361" endtime="20201030 18:31:25.367"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.323" endtime="20201030 18:31:25.368"></status>
</kw>
<status status="FAIL" starttime="20201030 18:31:22.320" endtime="20201030 18:31:25.370"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.319" endtime="20201030 18:31:25.370"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 18:31:25.378" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 18:31:25.377" endtime="20201030 18:31:25.379"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.372" endtime="20201030 18:31:25.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.318" endtime="20201030 18:31:25.380"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.317" endtime="20201030 18:31:25.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.382" endtime="20201030 18:31:25.385"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.316" endtime="20201030 18:31:25.387"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.314" endtime="20201030 18:31:25.388"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:22.290" endtime="20201030 18:31:25.388"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:25.409" endtime="20201030 18:31:31.537"></status>
</kw>
<msg timestamp="20201030 18:31:31.538" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:25.406" endtime="20201030 18:31:31.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.543" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 18:31:31.540" endtime="20201030 18:31:31.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.546" endtime="20201030 18:31:31.550"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.400" endtime="20201030 18:31:31.551"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.393" endtime="20201030 18:31:31.552"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.558" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-count': 25, 'bg-timer-interval': 20000}</msg>
<status status="PASS" starttime="20201030 18:31:31.554" endtime="20201030 18:31:31.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.567" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:31.564" endtime="20201030 18:31:31.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.571" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 18:31:31.569" endtime="20201030 18:31:31.572"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.559" endtime="20201030 18:31:31.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.579" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 18:31:31.578" endtime="20201030 18:31:31.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.581" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 18:31:31.580" endtime="20201030 18:31:31.582"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.574" endtime="20201030 18:31:31.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.586" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 18:31:31.585" endtime="20201030 18:31:31.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.588" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 18:31:31.587" endtime="20201030 18:31:31.589"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.583" endtime="20201030 18:31:31.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.596" endtime="20201030 18:31:31.897"></status>
</kw>
<msg timestamp="20201030 18:31:31.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107471264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.207955778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.594" endtime="20201030 18:31:31.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107471264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.207955778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 18:31:31.901" endtime="20201030 18:31:31.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 18:31:31.909" endtime="20201030 18:31:31.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.592" endtime="20201030 18:31:31.911"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.590" endtime="20201030 18:31:31.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 18:31:31.916" level="INFO">${FILTERED} = [{'diff': 0.10048451400000014}, {'diff': 0.10005170900000016}, {'diff': 0.10005199999999981}, {'diff': 0.09948647200000016}, {'diff': 0.1000108329999998}, {'diff': 0.10001083300000024}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 18:31:31.912" endtime="20201030 18:31:31.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 18:31:31.921" level="INFO">${RESULT} = {'diff': [0.10048451400000014, 0.10005170900000016, 0.10005199999999981, 0.09948647200000016, 0.1000108329999998, 0.10001083300000024, 0.10001082000000006, 0.10001097199999975, 5.420000004363601e-07, ...</msg>
<status status="PASS" starttime="20201030 18:31:31.917" endtime="20201030 18:31:31.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.926" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 18:31:31.924" endtime="20201030 18:31:31.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 18:31:31.928" level="INFO">VALUE: [0.10048451400000014, 0.10005170900000016, 0.10005199999999981, 0.09948647200000016, 0.1000108329999998, 0.10001083300000024, 0.10001082000000006, 0.10001097199999975, 5.420000004363601e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 0.10001130500000066, 0.10001081900000042, 0.10001090199999929, 0.10001090200000018, 0.1000108329999998, 0.10001084700000007, 0.10001081899999953, 0.10001081899999953, 0.10001091600000045, 0.10001084700000007, 0.10001081899999953, 0.10001084700000007, 0.10001081900000042, 0.10001084700000096, 0.1000108190000013, 0.10001090199999929]</msg>
<status status="PASS" starttime="20201030 18:31:31.927" endtime="20201030 18:31:31.929"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.922" endtime="20201030 18:31:31.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 18:31:31.933" endtime="20201030 18:31:31.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.932" endtime="20201030 18:31:31.953"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:31.931" endtime="20201030 18:31:31.954"></status>
</kw>
<status status="PASS" starttime="20201030 18:31:25.390" endtime="20201030 18:31:31.954"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 18:31:22.288" endtime="20201030 18:31:31.955" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 18:30:26.436" endtime="20201030 18:31:31.961"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201030 18:27:23.010" endtime="20201030 18:31:31.995"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
