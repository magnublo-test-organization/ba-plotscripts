<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201029 12:44:03.840" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:44:07.524" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:44:07.535" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:08.730" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:44:07.522" endtime="20201029 12:44:08.731"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:11.735" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:44:08.733" endtime="20201029 12:44:11.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.520" endtime="20201029 12:44:11.737"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:11.742" endtime="20201029 12:44:11.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.739" endtime="20201029 12:44:11.986"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:11.999" endtime="20201029 12:44:15.022"></status>
</kw>
<msg timestamp="20201029 12:44:15.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:11.998" endtime="20201029 12:44:15.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.028" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.025" endtime="20201029 12:44:15.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:15.034" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:15.030" endtime="20201029 12:44:15.035"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:11.995" endtime="20201029 12:44:15.036"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:11.993" endtime="20201029 12:44:15.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.992" endtime="20201029 12:44:15.038"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:15.046" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:15.045" endtime="20201029 12:44:15.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.040" endtime="20201029 12:44:15.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.991" endtime="20201029 12:44:15.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.990" endtime="20201029 12:44:15.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.051" endtime="20201029 12:44:15.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.989" endtime="20201029 12:44:15.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.057" endtime="20201029 12:44:15.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:11.987" endtime="20201029 12:44:15.061"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:07.517" endtime="20201029 12:44:15.062"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:15.074" endtime="20201029 12:44:15.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.071" endtime="20201029 12:44:15.097"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:15.125" endtime="20201029 12:44:18.148"></status>
</kw>
<msg timestamp="20201029 12:44:18.149" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:15.122" endtime="20201029 12:44:18.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.155" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.152" endtime="20201029 12:44:18.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.161" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:18.157" endtime="20201029 12:44:18.161"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:15.116" endtime="20201029 12:44:18.163"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:15.111" endtime="20201029 12:44:18.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.108" endtime="20201029 12:44:18.165"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:18.172" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:18.171" endtime="20201029 12:44:18.173"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.167" endtime="20201029 12:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.106" endtime="20201029 12:44:18.174"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.105" endtime="20201029 12:44:18.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.176" endtime="20201029 12:44:18.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.102" endtime="20201029 12:44:18.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.099" endtime="20201029 12:44:18.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:15.069" endtime="20201029 12:44:18.181"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.197" endtime="20201029 12:44:18.208"></status>
</kw>
<msg timestamp="20201029 12:44:18.209" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.192" endtime="20201029 12:44:18.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.211" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:18.210" endtime="20201029 12:44:18.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:18.212" endtime="20201029 12:44:18.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.187" endtime="20201029 12:44:18.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.183" endtime="20201029 12:44:18.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.219" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201029 12:44:18.218" endtime="20201029 12:44:18.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.221" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201029 12:44:18.220" endtime="20201029 12:44:18.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.215" endtime="20201029 12:44:18.222"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:15.063" endtime="20201029 12:44:18.222" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:44:03.957" endtime="20201029 12:44:18.225"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:44:18.279" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:44:18.287" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:44:19.402" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:44:18.278" endtime="20201029 12:44:19.402"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:44:22.405" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:44:19.404" endtime="20201029 12:44:22.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.277" endtime="20201029 12:44:22.408"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:22.413" endtime="20201029 12:44:22.688"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.409" endtime="20201029 12:44:22.688"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:22.701" endtime="20201029 12:44:25.721"></status>
</kw>
<msg timestamp="20201029 12:44:25.722" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:22.699" endtime="20201029 12:44:25.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.728" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.725" endtime="20201029 12:44:25.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:25.734" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:25.730" endtime="20201029 12:44:25.734"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:22.697" endtime="20201029 12:44:25.736"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:22.695" endtime="20201029 12:44:25.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.693" endtime="20201029 12:44:25.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:25.745" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:25.744" endtime="20201029 12:44:25.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.739" endtime="20201029 12:44:25.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.693" endtime="20201029 12:44:25.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.692" endtime="20201029 12:44:25.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.749" endtime="20201029 12:44:25.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.691" endtime="20201029 12:44:25.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.754" endtime="20201029 12:44:25.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:22.689" endtime="20201029 12:44:25.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:18.275" endtime="20201029 12:44:25.759"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:25.772" endtime="20201029 12:44:25.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.768" endtime="20201029 12:44:25.803"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:25.834" endtime="20201029 12:44:28.856"></status>
</kw>
<msg timestamp="20201029 12:44:28.857" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:25.831" endtime="20201029 12:44:28.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.863" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.860" endtime="20201029 12:44:28.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.869" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:28.865" endtime="20201029 12:44:28.870"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:25.825" endtime="20201029 12:44:28.871"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:25.819" endtime="20201029 12:44:28.872"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.816" endtime="20201029 12:44:28.873"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:28.881" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:28.879" endtime="20201029 12:44:28.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.875" endtime="20201029 12:44:28.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.814" endtime="20201029 12:44:28.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.813" endtime="20201029 12:44:28.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.884" endtime="20201029 12:44:28.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.809" endtime="20201029 12:44:28.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.805" endtime="20201029 12:44:28.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:25.765" endtime="20201029 12:44:28.890"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.907" endtime="20201029 12:44:28.923"></status>
</kw>
<msg timestamp="20201029 12:44:28.923" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.904" endtime="20201029 12:44:28.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:28.926" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:28.924" endtime="20201029 12:44:28.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.927" endtime="20201029 12:44:28.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.899" endtime="20201029 12:44:28.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.895" endtime="20201029 12:44:28.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:28.936" endtime="20201029 12:44:29.214"></status>
</kw>
<msg timestamp="20201029 12:44:29.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:28.934" endtime="20201029 12:44:29.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.217" endtime="20201029 12:44:29.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.222" endtime="20201029 12:44:29.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.932" endtime="20201029 12:44:29.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.930" endtime="20201029 12:44:29.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.228" level="INFO">${RESULT} = [{'diff': 9.528000000091907e-06}, {'diff': 9.304999999848462e-06}, {'diff': 1.1013999999587298e-05}, {'diff': 7.23600000007707e-06}, {'diff': 6.110999999808797e-06}, {'diff': 7.429999999697401e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.226" endtime="20201029 12:44:29.228"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:29.232" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000091907e-06, 9.304999999848462e-06, 1.1013999999587298e-05, 7.23600000007707e-06, 6.110999999808797e-06, 7.429999999697401e-06, 5.55599999962908e-06, 1.1569999999849756e-05, 8.5140...</msg>
<status status="PASS" starttime="20201029 12:44:29.229" endtime="20201029 12:44:29.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.236" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:29.235" endtime="20201029 12:44:29.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.238" level="INFO">VALUE: [9.528000000091907e-06, 9.304999999848462e-06, 1.1013999999587298e-05, 7.23600000007707e-06, 6.110999999808797e-06, 7.429999999697401e-06, 5.55599999962908e-06, 1.1569999999849756e-05, 8.514000000126032e-06, 9.486000000169525e-06, 7.639000000114748e-06, 1.0540999999975043e-05, 1.065199999983335e-05, 8.153000000010735e-06, 6.930999999710252e-06, 7.861000000275453e-06, 8.763999999938932e-06, 8.069000000165971e-06, 8.388999999997537e-06, 5.556000000073169e-06, 9.305000000292551e-06, 8.554999999965673e-06, 1.1012999999948647e-05, 1.005500000017534e-05, 9.013999999751832e-06]</msg>
<status status="PASS" starttime="20201029 12:44:29.237" endtime="20201029 12:44:29.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.233" endtime="20201029 12:44:29.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.893" endtime="20201029 12:44:29.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.892" endtime="20201029 12:44:29.240"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.247" endtime="20201029 12:44:29.259"></status>
</kw>
<msg timestamp="20201029 12:44:29.260" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.246" endtime="20201029 12:44:29.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.262" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.261" endtime="20201029 12:44:29.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.263" endtime="20201029 12:44:29.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.243" endtime="20201029 12:44:29.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.242" endtime="20201029 12:44:29.267"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.273" endtime="20201029 12:44:29.574"></status>
</kw>
<msg timestamp="20201029 12:44:29.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.271" endtime="20201029 12:44:29.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126436833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126446361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.578" endtime="20201029 12:44:29.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.586" endtime="20201029 12:44:29.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.269" endtime="20201029 12:44:29.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.267" endtime="20201029 12:44:29.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.593" level="INFO">${RESULT} = [{'diff': 9.528000000091907e-06}, {'diff': 9.304999999848462e-06}, {'diff': 1.1013999999587298e-05}, {'diff': 7.23600000007707e-06}, {'diff': 6.110999999808797e-06}, {'diff': 7.429999999697401e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:29.590" endtime="20201029 12:44:29.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:29.597" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.528000000091907e-06, 9.304999999848462e-06, 1.1013999999587298e-05, 7.23600000007707e-06, 6.110999999808797e-06, 7.429999999697401e-06, 5.55599999962908e-06, 1.1569999999849756e-05, 8.5140...</msg>
<status status="PASS" starttime="20201029 12:44:29.594" endtime="20201029 12:44:29.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.601" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:29.600" endtime="20201029 12:44:29.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.604" level="INFO">VALUE: [9.528000000091907e-06, 9.304999999848462e-06, 1.1013999999587298e-05, 7.23600000007707e-06, 6.110999999808797e-06, 7.429999999697401e-06, 5.55599999962908e-06, 1.1569999999849756e-05, 8.514000000126032e-06, 9.486000000169525e-06, 7.639000000114748e-06, 1.0540999999975043e-05, 1.065199999983335e-05, 8.153000000010735e-06, 6.930999999710252e-06, 7.861000000275453e-06, 8.763999999938932e-06, 8.069000000165971e-06, 8.388999999997537e-06, 5.556000000073169e-06, 9.305000000292551e-06, 8.554999999965673e-06, 1.1012999999948647e-05, 1.005500000017534e-05, 9.013999999751832e-06, 9.222000000086439e-06, 9.110999999784042e-06, 9.444999999885795e-06, 7.625000000288651e-06, 7.972000000133761e-06, 9.387999999610486e-06, 1.0596999999723522e-05, 8.639000000254526e-06, 5.30599999981618e-06, 1.1611000000133487e-05, 9.096999999957944e-06, 6.916999999884155e-06, 9.22199999964235e-06, 9.750000000252612e-06, 1.0569000000071327e-05, 9.236000000356626e-06, 8.153000000010735e-06, 8.096999999818166e-06, 1.1292000000384661e-05, 6.7080000003549856e-06, 1.1014000000031388e-05, 8.929999999907068e-06, 8.12499999991445e-06, 7.3199999999218335e-06, 1.0193999999685843e-05]</msg>
<status status="PASS" starttime="20201029 12:44:29.603" endtime="20201029 12:44:29.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.598" endtime="20201029 12:44:29.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.240" endtime="20201029 12:44:29.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.240" endtime="20201029 12:44:29.606"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.614" endtime="20201029 12:44:29.624"></status>
</kw>
<msg timestamp="20201029 12:44:29.625" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.612" endtime="20201029 12:44:29.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.627" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.626" endtime="20201029 12:44:29.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.628" endtime="20201029 12:44:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.610" endtime="20201029 12:44:29.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.608" endtime="20201029 12:44:29.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.637" endtime="20201029 12:44:29.949"></status>
</kw>
<msg timestamp="20201029 12:44:29.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126637153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.636" endtime="20201029 12:44:29.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126637153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126647694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:29.954" endtime="20201029 12:44:29.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.964" endtime="20201029 12:44:29.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.633" endtime="20201029 12:44:29.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.631" endtime="20201029 12:44:29.967"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:29.971" level="INFO">${RESULT} = [{'diff': 1.0540999999975043e-05}, {'diff': 1.065199999983335e-05}, {'diff': 8.153000000010735e-06}, {'diff': 6.930999999710252e-06}, {'diff': 7.861000000275453e-06}, {'diff': 8.763999999938932e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:29.967" endtime="20201029 12:44:29.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:29.976" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0540999999975043e-05, 1.065199999983335e-05, 8.153000000010735e-06, 6.930999999710252e-06, 7.861000000275453e-06, 8.763999999938932e-06, 8.069000000165971e-06, 8.388999999997537e-06, 5.556...</msg>
<status status="PASS" starttime="20201029 12:44:29.972" endtime="20201029 12:44:29.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.981" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:29.979" endtime="20201029 12:44:29.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:29.984" level="INFO">VALUE: [1.0540999999975043e-05, 1.065199999983335e-05, 8.153000000010735e-06, 6.930999999710252e-06, 7.861000000275453e-06, 8.763999999938932e-06, 8.069000000165971e-06, 8.388999999997537e-06, 5.556000000073169e-06, 9.305000000292551e-06, 8.554999999965673e-06, 1.1012999999948647e-05, 1.005500000017534e-05, 9.013999999751832e-06, 9.222000000086439e-06, 9.110999999784042e-06, 9.444999999885795e-06, 7.625000000288651e-06, 7.972000000133761e-06, 9.387999999610486e-06, 1.0596999999723522e-05, 8.639000000254526e-06, 5.30599999981618e-06, 1.1611000000133487e-05, 9.096999999957944e-06, 6.916999999884155e-06, 9.22199999964235e-06, 9.750000000252612e-06, 1.0569000000071327e-05, 9.236000000356626e-06, 8.153000000010735e-06, 8.096999999818166e-06, 1.1292000000384661e-05, 6.7080000003549856e-06, 1.1014000000031388e-05, 8.929999999907068e-06, 8.12499999991445e-06, 7.3199999999218335e-06, 1.0193999999685843e-05, 7.624999999844562e-06, 1.0861999999889349e-05, 8.388999999997537e-06, 9.292000000105105e-06, 9.346999999770844e-06, 8.52799999995213e-06, 8.333000000249058e-06, 8.889000000067426e-06, 8.347000000075155e-06, 8.526999999869389e-06, 7.388999999857759e-06, 1.0722999999934757e-05, 7.985999999959859e-06, 7.68100000003713e-06, 5.792000000059971e-06, 6.999999999646178e-06, 8.8200000001315e-06, 7.180999999967241e-06, 1.2207999999791497e-05, 9.76400000007871e-06, 9.555000000105451e-06, 7.375000000031662e-06, 9.458000000073241e-06, 7.070000000108934e-06, 7.67999999995439e-06]</msg>
<status status="PASS" starttime="20201029 12:44:29.982" endtime="20201029 12:44:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.977" endtime="20201029 12:44:29.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.607" endtime="20201029 12:44:29.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.606" endtime="20201029 12:44:29.986"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:29.993" endtime="20201029 12:44:30.004"></status>
</kw>
<msg timestamp="20201029 12:44:30.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:29.992" endtime="20201029 12:44:30.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.007" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.006" endtime="20201029 12:44:30.007"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.008" endtime="20201029 12:44:30.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.989" endtime="20201029 12:44:30.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.987" endtime="20201029 12:44:30.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.017" endtime="20201029 12:44:30.336"></status>
</kw>
<msg timestamp="20201029 12:44:30.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.454585625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.454592542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.015" endtime="20201029 12:44:30.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.454585625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.454592542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.347" endtime="20201029 12:44:30.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.370" endtime="20201029 12:44:30.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.013" endtime="20201029 12:44:30.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.011" endtime="20201029 12:44:30.376"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.386" level="INFO">${RESULT} = [{'diff': 6.916999999884155e-06}, {'diff': 9.22199999964235e-06}, {'diff': 9.750000000252612e-06}, {'diff': 1.0569000000071327e-05}, {'diff': 9.236000000356626e-06}, {'diff': 8.153000000010735e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:30.378" endtime="20201029 12:44:30.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:30.397" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.916999999884155e-06, 9.22199999964235e-06, 9.750000000252612e-06, 1.0569000000071327e-05, 9.236000000356626e-06, 8.153000000010735e-06, 8.096999999818166e-06, 1.1292000000384661e-05, 6.708...</msg>
<status status="PASS" starttime="20201029 12:44:30.388" endtime="20201029 12:44:30.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.406" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:30.404" endtime="20201029 12:44:30.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.412" level="INFO">VALUE: [6.916999999884155e-06, 9.22199999964235e-06, 9.750000000252612e-06, 1.0569000000071327e-05, 9.236000000356626e-06, 8.153000000010735e-06, 8.096999999818166e-06, 1.1292000000384661e-05, 6.7080000003549856e-06, 1.1014000000031388e-05, 8.929999999907068e-06, 8.12499999991445e-06, 7.3199999999218335e-06, 1.0193999999685843e-05, 7.624999999844562e-06, 1.0861999999889349e-05, 8.388999999997537e-06, 9.292000000105105e-06, 9.346999999770844e-06, 8.52799999995213e-06, 8.333000000249058e-06, 8.889000000067426e-06, 8.347000000075155e-06, 8.526999999869389e-06, 7.388999999857759e-06, 1.0722999999934757e-05, 7.985999999959859e-06, 7.68100000003713e-06, 5.792000000059971e-06, 6.999999999646178e-06, 8.8200000001315e-06, 7.180999999967241e-06, 1.2207999999791497e-05, 9.76400000007871e-06, 9.555000000105451e-06, 7.375000000031662e-06, 9.458000000073241e-06, 7.070000000108934e-06, 7.67999999995439e-06, 1.0417000000373378e-05, 7.916000000385282e-06, 8.37500000017144e-06, 8.360999999901253e-06, 1.0722999999934757e-05, 1.0722999999934757e-05, 1.09999999997612e-05, 7.38899999941367e-06, 5.15199999995275e-06, 8.111999999727004e-06, 9.541999999918005e-06, 7.068999999582104e-06, 9.944000000317033e-06, 1.0167000000116388e-05, 1.1014000000031388e-05, 8.958999999642003e-06, 5.902999999918279e-06, 7.806000000165625e-06, 9.915999999776659e-06, 6.486000000194281e-06, 8.320000000061611e-06, 1.0570000000598156e-05, 1.1611000000577576e-05, 7.805000000082885e-06, 7.73599999970287e-06]</msg>
<status status="PASS" starttime="20201029 12:44:30.409" endtime="20201029 12:44:30.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.399" endtime="20201029 12:44:30.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.986" endtime="20201029 12:44:30.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:29.986" endtime="20201029 12:44:30.416"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.435" endtime="20201029 12:44:30.447"></status>
</kw>
<msg timestamp="20201029 12:44:30.448" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.430" endtime="20201029 12:44:30.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.450" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.449" endtime="20201029 12:44:30.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.452" endtime="20201029 12:44:30.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.424" endtime="20201029 12:44:30.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.420" endtime="20201029 12:44:30.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.461" endtime="20201029 12:44:30.779"></status>
</kw>
<msg timestamp="20201029 12:44:30.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.811035083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.811045806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.459" endtime="20201029 12:44:30.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.811035083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.811045806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.784" endtime="20201029 12:44:30.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.794" endtime="20201029 12:44:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.457" endtime="20201029 12:44:30.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.455" endtime="20201029 12:44:30.797"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:30.801" level="INFO">${RESULT} = [{'diff': 1.0722999999934757e-05}, {'diff': 7.985999999959859e-06}, {'diff': 7.68100000003713e-06}, {'diff': 5.792000000059971e-06}, {'diff': 6.999999999646178e-06}, {'diff': 8.8200000001315e-06}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:30.797" endtime="20201029 12:44:30.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:30.806" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0722999999934757e-05, 7.985999999959859e-06, 7.68100000003713e-06, 5.792000000059971e-06, 6.999999999646178e-06, 8.8200000001315e-06, 7.180999999967241e-06, 1.2207999999791497e-05, 9.76400...</msg>
<status status="PASS" starttime="20201029 12:44:30.802" endtime="20201029 12:44:30.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.814" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:30.812" endtime="20201029 12:44:30.814"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.816" level="INFO">VALUE: [1.0722999999934757e-05, 7.985999999959859e-06, 7.68100000003713e-06, 5.792000000059971e-06, 6.999999999646178e-06, 8.8200000001315e-06, 7.180999999967241e-06, 1.2207999999791497e-05, 9.76400000007871e-06, 9.555000000105451e-06, 7.375000000031662e-06, 9.458000000073241e-06, 7.070000000108934e-06, 7.67999999995439e-06, 1.0417000000373378e-05, 7.916000000385282e-06, 8.37500000017144e-06, 8.360999999901253e-06, 1.0722999999934757e-05, 1.0722999999934757e-05, 1.09999999997612e-05, 7.38899999941367e-06, 5.15199999995275e-06, 8.111999999727004e-06, 9.541999999918005e-06, 7.068999999582104e-06, 9.944000000317033e-06, 1.0167000000116388e-05, 1.1014000000031388e-05, 8.958999999642003e-06, 5.902999999918279e-06, 7.806000000165625e-06, 9.915999999776659e-06, 6.486000000194281e-06, 8.320000000061611e-06, 1.0570000000598156e-05, 1.1611000000577576e-05, 7.805000000082885e-06, 7.73599999970287e-06, 8.777000000570467e-06, 8.750000000112834e-06, 8.72199999957246e-06, 8.430000000281268e-06, 7.958000000307663e-06, 6.0969999999827e-06, 7.5129999999035135e-06, 8.87499999979724e-06, 1.1805999999836558e-05, 7.6249999994004725e-06, 1.0179999999415656e-05, 7.958999999502225e-06, 8.889000000067426e-06, 8.041000000069687e-06, 8.068999999721882e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.694000000060043e-06, 1.0471999999595027e-05, 6.667000000071255e-06, 9.570000000458379e-06, 9.055999999674214e-06, 1.1790999999483631e-05, 7.596999999748277e-06, 8.194999999489028e-06]</msg>
<status status="PASS" starttime="20201029 12:44:30.815" endtime="20201029 12:44:30.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.807" endtime="20201029 12:44:30.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.418" endtime="20201029 12:44:30.818"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.417" endtime="20201029 12:44:30.818"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.827" endtime="20201029 12:44:30.837"></status>
</kw>
<msg timestamp="20201029 12:44:30.838" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.825" endtime="20201029 12:44:30.838"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:30.840" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:30.839" endtime="20201029 12:44:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.841" endtime="20201029 12:44:30.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.822" endtime="20201029 12:44:30.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.820" endtime="20201029 12:44:30.844"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:30.850" endtime="20201029 12:44:31.175"></status>
</kw>
<msg timestamp="20201029 12:44:31.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.181412153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.181419222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:30.848" endtime="20201029 12:44:31.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.181412153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.181419222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.186" endtime="20201029 12:44:31.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.208" endtime="20201029 12:44:31.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.846" endtime="20201029 12:44:31.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.844" endtime="20201029 12:44:31.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.223" level="INFO">${RESULT} = [{'diff': 7.068999999582104e-06}, {'diff': 9.944000000317033e-06}, {'diff': 1.0167000000116388e-05}, {'diff': 1.1014000000031388e-05}, {'diff': 8.958999999642003e-06}, {'diff': 5.902999999918279e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:31.215" endtime="20201029 12:44:31.223"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:31.237" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.068999999582104e-06, 9.944000000317033e-06, 1.0167000000116388e-05, 1.1014000000031388e-05, 8.958999999642003e-06, 5.902999999918279e-06, 7.806000000165625e-06, 9.915999999776659e-06, 6.48...</msg>
<status status="PASS" starttime="20201029 12:44:31.225" endtime="20201029 12:44:31.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.246" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:31.244" endtime="20201029 12:44:31.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.252" level="INFO">VALUE: [7.068999999582104e-06, 9.944000000317033e-06, 1.0167000000116388e-05, 1.1014000000031388e-05, 8.958999999642003e-06, 5.902999999918279e-06, 7.806000000165625e-06, 9.915999999776659e-06, 6.486000000194281e-06, 8.320000000061611e-06, 1.0570000000598156e-05, 1.1611000000577576e-05, 7.805000000082885e-06, 7.73599999970287e-06, 8.777000000570467e-06, 8.750000000112834e-06, 8.72199999957246e-06, 8.430000000281268e-06, 7.958000000307663e-06, 6.0969999999827e-06, 7.5129999999035135e-06, 8.87499999979724e-06, 1.1805999999836558e-05, 7.6249999994004725e-06, 1.0179999999415656e-05, 7.958999999502225e-06, 8.889000000067426e-06, 8.041000000069687e-06, 8.068999999721882e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.694000000060043e-06, 1.0471999999595027e-05, 6.667000000071255e-06, 9.570000000458379e-06, 9.055999999674214e-06, 1.1790999999483631e-05, 7.596999999748277e-06, 8.194999999489028e-06, 1.0639000000089993e-05, 7.68000000039848e-06, 6.722000000181083e-06, 6.486000000194281e-06, 1.0888999999458804e-05, 6.8469999998654885e-06, 9.76399999963462e-06, 9.679999999789857e-06, 6.29200000012986e-06, 1.0667000000630367e-05, 1.0541999999169605e-05, 1.1111000000063598e-05, 8.153000000454824e-06, 1.0485999999865214e-05, 7.916999999579843e-06, 8.152999999566646e-06, 9.361000000041031e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 8.333000000249058e-06, 7.473000000146612e-06, 1.0264000000148599e-05, 1.0249999999878412e-05, 9.76399999963462e-06, 7.68100000048122e-06]</msg>
<status status="PASS" starttime="20201029 12:44:31.248" endtime="20201029 12:44:31.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.240" endtime="20201029 12:44:31.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.819" endtime="20201029 12:44:31.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:30.818" endtime="20201029 12:44:31.254"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.262" endtime="20201029 12:44:31.274"></status>
</kw>
<msg timestamp="20201029 12:44:31.274" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.260" endtime="20201029 12:44:31.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.277" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.275" endtime="20201029 12:44:31.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.278" endtime="20201029 12:44:31.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.257" endtime="20201029 12:44:31.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.256" endtime="20201029 12:44:31.280"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.287" endtime="20201029 12:44:31.604"></status>
</kw>
<msg timestamp="20201029 12:44:31.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.615537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.615545556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.285" endtime="20201029 12:44:31.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.615537597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.615545556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.609" endtime="20201029 12:44:31.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.619" endtime="20201029 12:44:31.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.283" endtime="20201029 12:44:31.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.281" endtime="20201029 12:44:31.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:31.626" level="INFO">${RESULT} = [{'diff': 7.958999999502225e-06}, {'diff': 8.889000000067426e-06}, {'diff': 8.041000000069687e-06}, {'diff': 8.068999999721882e-06}, {'diff': 7.5700000001788226e-06}, {'diff': 6.153000000175268e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:31.623" endtime="20201029 12:44:31.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:31.631" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.958999999502225e-06, 8.889000000067426e-06, 8.041000000069687e-06, 8.068999999721882e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.694000000060043e-06, 1.0471999999595027e-05, 6.66...</msg>
<status status="PASS" starttime="20201029 12:44:31.627" endtime="20201029 12:44:31.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.636" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:31.635" endtime="20201029 12:44:31.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.639" level="INFO">VALUE: [7.958999999502225e-06, 8.889000000067426e-06, 8.041000000069687e-06, 8.068999999721882e-06, 7.5700000001788226e-06, 6.153000000175268e-06, 9.694000000060043e-06, 1.0471999999595027e-05, 6.667000000071255e-06, 9.570000000458379e-06, 9.055999999674214e-06, 1.1790999999483631e-05, 7.596999999748277e-06, 8.194999999489028e-06, 1.0639000000089993e-05, 7.68000000039848e-06, 6.722000000181083e-06, 6.486000000194281e-06, 1.0888999999458804e-05, 6.8469999998654885e-06, 9.76399999963462e-06, 9.679999999789857e-06, 6.29200000012986e-06, 1.0667000000630367e-05, 1.0541999999169605e-05, 1.1111000000063598e-05, 8.153000000454824e-06, 1.0485999999865214e-05, 7.916999999579843e-06, 8.152999999566646e-06, 9.361000000041031e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 8.333000000249058e-06, 7.473000000146612e-06, 1.0264000000148599e-05, 1.0249999999878412e-05, 9.76399999963462e-06, 7.68100000048122e-06, 7.43000000014149e-06, 9.874999999937017e-06, 8.708999999385014e-06, 7.972999999772412e-06, 1.115199999990324e-05, 8.139000000184637e-06, 7.33300000010928e-06, 7.375000000031662e-06, 9.51300000018307e-06, 1.0542000000057783e-05, 9.861999999749571e-06, 8.43099999947583e-06, 9.276999999308089e-06, 8.165999999754092e-06, 8.37500000017144e-06, 6.19400000001491e-06, 1.2555000000524785e-05, 1.2069000000280994e-05, 6.041999999872871e-06, 9.637999999867475e-06, 8.097000000262256e-06, 9.152999999706424e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.749999999973056e-06]</msg>
<status status="PASS" starttime="20201029 12:44:31.637" endtime="20201029 12:44:31.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.633" endtime="20201029 12:44:31.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.255" endtime="20201029 12:44:31.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.254" endtime="20201029 12:44:31.640"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.649" endtime="20201029 12:44:31.659"></status>
</kw>
<msg timestamp="20201029 12:44:31.660" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.647" endtime="20201029 12:44:31.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:31.662" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:31.661" endtime="20201029 12:44:31.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.663" endtime="20201029 12:44:31.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.644" endtime="20201029 12:44:31.666"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.642" endtime="20201029 12:44:31.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:31.673" endtime="20201029 12:44:31.994"></status>
</kw>
<msg timestamp="20201029 12:44:32.002" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995681417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995692528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:31.671" endtime="20201029 12:44:32.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.995681417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.995692528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.005" endtime="20201029 12:44:32.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.027" endtime="20201029 12:44:32.031"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.669" endtime="20201029 12:44:32.032"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.667" endtime="20201029 12:44:32.033"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.042" level="INFO">${RESULT} = [{'diff': 1.1111000000063598e-05}, {'diff': 8.153000000454824e-06}, {'diff': 1.0485999999865214e-05}, {'diff': 7.916999999579843e-06}, {'diff': 8.152999999566646e-06}, {'diff': 9.361000000041031e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:32.034" endtime="20201029 12:44:32.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:32.054" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1111000000063598e-05, 8.153000000454824e-06, 1.0485999999865214e-05, 7.916999999579843e-06, 8.152999999566646e-06, 9.361000000041031e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 8.3...</msg>
<status status="PASS" starttime="20201029 12:44:32.044" endtime="20201029 12:44:32.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.063" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:32.061" endtime="20201029 12:44:32.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.066" level="INFO">VALUE: [1.1111000000063598e-05, 8.153000000454824e-06, 1.0485999999865214e-05, 7.916999999579843e-06, 8.152999999566646e-06, 9.361000000041031e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 8.333000000249058e-06, 7.473000000146612e-06, 1.0264000000148599e-05, 1.0249999999878412e-05, 9.76399999963462e-06, 7.68100000048122e-06, 7.43000000014149e-06, 9.874999999937017e-06, 8.708999999385014e-06, 7.972999999772412e-06, 1.115199999990324e-05, 8.139000000184637e-06, 7.33300000010928e-06, 7.375000000031662e-06, 9.51300000018307e-06, 1.0542000000057783e-05, 9.861999999749571e-06, 8.43099999947583e-06, 9.276999999308089e-06, 8.165999999754092e-06, 8.37500000017144e-06, 6.19400000001491e-06, 1.2555000000524785e-05, 1.2069000000280994e-05, 6.041999999872871e-06, 9.637999999867475e-06, 8.097000000262256e-06, 9.152999999706424e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.749999999973056e-06, 8.37500000017144e-06, 6.957999999279707e-06, 9.375000000311218e-06, 9.332999999500657e-06, 1.09999999997612e-05, 6.971999999549894e-06, 1.0193999999685843e-05, 9.389000000581404e-06, 1.198600000051897e-05, 8.750000000112834e-06, 1.198600000051897e-05, 9.737000000065166e-06, 1.1069000000141216e-05, 1.1070000000223956e-05, 9.375000000311218e-06, 7.5549999998258954e-06, 5.625000000009095e-06, 7.805000000082885e-06, 8.695000000003006e-06, 1.0361000000180809e-05, 8.847000000145044e-06, 8.986000000099637e-06, 8.986000000099637e-06, 9.292000000549194e-06, 7.860999999387275e-06]</msg>
<status status="PASS" starttime="20201029 12:44:32.064" endtime="20201029 12:44:32.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.056" endtime="20201029 12:44:32.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.641" endtime="20201029 12:44:32.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:31.641" endtime="20201029 12:44:32.067"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.075" endtime="20201029 12:44:32.086"></status>
</kw>
<msg timestamp="20201029 12:44:32.086" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.073" endtime="20201029 12:44:32.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.089" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.087" endtime="20201029 12:44:32.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.090" endtime="20201029 12:44:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.071" endtime="20201029 12:44:32.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.069" endtime="20201029 12:44:32.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.099" endtime="20201029 12:44:32.412"></status>
</kw>
<msg timestamp="20201029 12:44:32.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.419824236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.419832667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.097" endtime="20201029 12:44:32.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.419824236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.419832667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.417" endtime="20201029 12:44:32.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.427" endtime="20201029 12:44:32.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.095" endtime="20201029 12:44:32.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.093" endtime="20201029 12:44:32.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.434" level="INFO">${RESULT} = [{'diff': 8.43099999947583e-06}, {'diff': 9.276999999308089e-06}, {'diff': 8.165999999754092e-06}, {'diff': 8.37500000017144e-06}, {'diff': 6.19400000001491e-06}, {'diff': 1.2555000000524785e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:44:32.431" endtime="20201029 12:44:32.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:32.440" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.43099999947583e-06, 9.276999999308089e-06, 8.165999999754092e-06, 8.37500000017144e-06, 6.19400000001491e-06, 1.2555000000524785e-05, 1.2069000000280994e-05, 6.041999999872871e-06, 9.63799...</msg>
<status status="PASS" starttime="20201029 12:44:32.435" endtime="20201029 12:44:32.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.444" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:32.443" endtime="20201029 12:44:32.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.447" level="INFO">VALUE: [8.43099999947583e-06, 9.276999999308089e-06, 8.165999999754092e-06, 8.37500000017144e-06, 6.19400000001491e-06, 1.2555000000524785e-05, 1.2069000000280994e-05, 6.041999999872871e-06, 9.637999999867475e-06, 8.097000000262256e-06, 9.152999999706424e-06, 8.986000000099637e-06, 7.985999999959859e-06, 7.749999999973056e-06, 8.37500000017144e-06, 6.957999999279707e-06, 9.375000000311218e-06, 9.332999999500657e-06, 1.09999999997612e-05, 6.971999999549894e-06, 1.0193999999685843e-05, 9.389000000581404e-06, 1.198600000051897e-05, 8.750000000112834e-06, 1.198600000051897e-05, 9.737000000065166e-06, 1.1069000000141216e-05, 1.1070000000223956e-05, 9.375000000311218e-06, 7.5549999998258954e-06, 5.625000000009095e-06, 7.805000000082885e-06, 8.695000000003006e-06, 1.0361000000180809e-05, 8.847000000145044e-06, 8.986000000099637e-06, 8.986000000099637e-06, 9.292000000549194e-06, 7.860999999387275e-06, 1.0332999999640435e-05, 8.569999999430422e-06, 6.986999999902821e-06, 8.028000000770419e-06, 1.0361000000180809e-05, 8.848000000227785e-06, 6.179999999744723e-06, 9.180000000164057e-06, 6.3610000005098755e-06, 9.708999999524792e-06, 8.138999999296459e-06, 6.778000000373652e-06, 7.499999999716067e-06, 9.902999999589213e-06, 7.611000000018464e-06, 7.723000000403601e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.820000000435812e-06, 9.194999999628806e-06, 9.707999999442052e-06, 7.0970000001224776e-06, 6.180999999827463e-06, 9.792000000174994e-06, 8.666999999462632e-06]</msg>
<status status="PASS" starttime="20201029 12:44:32.445" endtime="20201029 12:44:32.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.441" endtime="20201029 12:44:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.068" endtime="20201029 12:44:32.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.067" endtime="20201029 12:44:32.448"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.456" endtime="20201029 12:44:32.467"></status>
</kw>
<msg timestamp="20201029 12:44:32.467" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.455" endtime="20201029 12:44:32.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.469" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.468" endtime="20201029 12:44:32.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.471" endtime="20201029 12:44:32.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.452" endtime="20201029 12:44:32.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.450" endtime="20201029 12:44:32.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.481" endtime="20201029 12:44:32.792"></status>
</kw>
<msg timestamp="20201029 12:44:32.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.795579694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.795589431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.479" endtime="20201029 12:44:32.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.795579694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.795589431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.797" endtime="20201029 12:44:32.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.807" endtime="20201029 12:44:32.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.475" endtime="20201029 12:44:32.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.474" endtime="20201029 12:44:32.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:32.814" level="INFO">${RESULT} = [{'diff': 9.737000000065166e-06}, {'diff': 1.1069000000141216e-05}, {'diff': 1.1070000000223956e-05}, {'diff': 9.375000000311218e-06}, {'diff': 7.5549999998258954e-06}, {'diff': 5.625000000009095e-06}...</msg>
<status status="PASS" starttime="20201029 12:44:32.810" endtime="20201029 12:44:32.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:32.819" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.737000000065166e-06, 1.1069000000141216e-05, 1.1070000000223956e-05, 9.375000000311218e-06, 7.5549999998258954e-06, 5.625000000009095e-06, 7.805000000082885e-06, 8.695000000003006e-06, 1.0...</msg>
<status status="PASS" starttime="20201029 12:44:32.815" endtime="20201029 12:44:32.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.823" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:32.822" endtime="20201029 12:44:32.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.826" level="INFO">VALUE: [9.737000000065166e-06, 1.1069000000141216e-05, 1.1070000000223956e-05, 9.375000000311218e-06, 7.5549999998258954e-06, 5.625000000009095e-06, 7.805000000082885e-06, 8.695000000003006e-06, 1.0361000000180809e-05, 8.847000000145044e-06, 8.986000000099637e-06, 8.986000000099637e-06, 9.292000000549194e-06, 7.860999999387275e-06, 1.0332999999640435e-05, 8.569999999430422e-06, 6.986999999902821e-06, 8.028000000770419e-06, 1.0361000000180809e-05, 8.848000000227785e-06, 6.179999999744723e-06, 9.180000000164057e-06, 6.3610000005098755e-06, 9.708999999524792e-06, 8.138999999296459e-06, 6.778000000373652e-06, 7.499999999716067e-06, 9.902999999589213e-06, 7.611000000018464e-06, 7.723000000403601e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.820000000435812e-06, 9.194999999628806e-06, 9.707999999442052e-06, 7.0970000001224776e-06, 6.180999999827463e-06, 9.792000000174994e-06, 8.666999999462632e-06, 1.1320000000480945e-05, 1.0542000000057783e-05, 6.944999999980439e-06, 1.0597000000167611e-05, 9.889000000207204e-06, 1.1847000000564378e-05, 1.1180999999638175e-05, 8.360999999901253e-06, 8.832999999874858e-06, 5.9580000000281075e-06, 8.333000000249058e-06, 8.417000000093822e-06, 1.0014000000779788e-05, 9.527999999647818e-06, 9.47199999945525e-06, 9.583000000645825e-06, 6.596999999608499e-06, 8.02799999988224e-06, 7.48599999944588e-06, 8.707999999302274e-06, 7.1390000000448595e-06, 8.443999999663276e-06, 9.473000000426168e-06, 7.6249999994004725e-06, 9.402999999963413e-06]</msg>
<status status="PASS" starttime="20201029 12:44:32.824" endtime="20201029 12:44:32.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.820" endtime="20201029 12:44:32.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.449" endtime="20201029 12:44:32.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.449" endtime="20201029 12:44:32.828"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.837" endtime="20201029 12:44:32.854"></status>
</kw>
<msg timestamp="20201029 12:44:32.855" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.834" endtime="20201029 12:44:32.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:32.857" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:32.856" endtime="20201029 12:44:32.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.859" endtime="20201029 12:44:32.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.832" endtime="20201029 12:44:32.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.830" endtime="20201029 12:44:32.861"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:32.868" endtime="20201029 12:44:33.177"></status>
</kw>
<msg timestamp="20201029 12:44:33.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.211387875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.211394653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:32.866" endtime="20201029 12:44:33.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.211387875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.211394653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.182" endtime="20201029 12:44:33.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.192" endtime="20201029 12:44:33.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.863" endtime="20201029 12:44:33.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.862" endtime="20201029 12:44:33.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.199" level="INFO">${RESULT} = [{'diff': 6.778000000373652e-06}, {'diff': 7.499999999716067e-06}, {'diff': 9.902999999589213e-06}, {'diff': 7.611000000018464e-06}, {'diff': 7.723000000403601e-06}, {'diff': 7.5700000001788226e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:33.196" endtime="20201029 12:44:33.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:33.205" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.778000000373652e-06, 7.499999999716067e-06, 9.902999999589213e-06, 7.611000000018464e-06, 7.723000000403601e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.820000000435812e-06, 9.19...</msg>
<status status="PASS" starttime="20201029 12:44:33.200" endtime="20201029 12:44:33.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.209" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:33.208" endtime="20201029 12:44:33.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.212" level="INFO">VALUE: [6.778000000373652e-06, 7.499999999716067e-06, 9.902999999589213e-06, 7.611000000018464e-06, 7.723000000403601e-06, 7.5700000001788226e-06, 1.0597000000167611e-05, 7.820000000435812e-06, 9.194999999628806e-06, 9.707999999442052e-06, 7.0970000001224776e-06, 6.180999999827463e-06, 9.792000000174994e-06, 8.666999999462632e-06, 1.1320000000480945e-05, 1.0542000000057783e-05, 6.944999999980439e-06, 1.0597000000167611e-05, 9.889000000207204e-06, 1.1847000000564378e-05, 1.1180999999638175e-05, 8.360999999901253e-06, 8.832999999874858e-06, 5.9580000000281075e-06, 8.333000000249058e-06, 8.417000000093822e-06, 1.0014000000779788e-05, 9.527999999647818e-06, 9.47199999945525e-06, 9.583000000645825e-06, 6.596999999608499e-06, 8.02799999988224e-06, 7.48599999944588e-06, 8.707999999302274e-06, 7.1390000000448595e-06, 8.443999999663276e-06, 9.473000000426168e-06, 7.6249999994004725e-06, 9.402999999963413e-06, 5.8340000004264425e-06, 7.3610000006496534e-06, 1.0957999999838819e-05, 7.166999999697055e-06, 7.903000000197835e-06, 8.944000000177255e-06, 8.750000000112834e-06, 1.0167000000116388e-05, 8.305999999791425e-06, 9.054999999591473e-06, 1.18469999996762e-05, 1.1027000000218834e-05, 8.709000000273193e-06, 7.917000000468022e-06, 7.945000000120217e-06, 9.042000000292205e-06, 9.999999999621423e-06, 8.679999999650079e-06, 9.069000000749838e-06, 6.513999999846476e-06, 7.555999999908636e-06, 9.193999999546065e-06, 7.985999999959859e-06, 8.736000000730826e-06, 7.916999999579843e-06]</msg>
<status status="PASS" starttime="20201029 12:44:33.210" endtime="20201029 12:44:33.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.206" endtime="20201029 12:44:33.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.829" endtime="20201029 12:44:33.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:32.828" endtime="20201029 12:44:33.213"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.221" endtime="20201029 12:44:33.232"></status>
</kw>
<msg timestamp="20201029 12:44:33.233" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.220" endtime="20201029 12:44:33.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.235" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.234" endtime="20201029 12:44:33.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.236" endtime="20201029 12:44:33.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.217" endtime="20201029 12:44:33.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.215" endtime="20201029 12:44:33.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.245" endtime="20201029 12:44:33.561"></status>
</kw>
<msg timestamp="20201029 12:44:33.565" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.584495389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.584503806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.244" endtime="20201029 12:44:33.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.584495389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.584503806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.566" endtime="20201029 12:44:33.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.576" endtime="20201029 12:44:33.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.241" endtime="20201029 12:44:33.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.239" endtime="20201029 12:44:33.578"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.583" level="INFO">${RESULT} = [{'diff': 8.417000000093822e-06}, {'diff': 1.0014000000779788e-05}, {'diff': 9.527999999647818e-06}, {'diff': 9.47199999945525e-06}, {'diff': 9.583000000645825e-06}, {'diff': 6.596999999608499e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:33.579" endtime="20201029 12:44:33.583"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:33.588" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.417000000093822e-06, 1.0014000000779788e-05, 9.527999999647818e-06, 9.47199999945525e-06, 9.583000000645825e-06, 6.596999999608499e-06, 8.02799999988224e-06, 7.48599999944588e-06, 8.707999...</msg>
<status status="PASS" starttime="20201029 12:44:33.584" endtime="20201029 12:44:33.588"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.592" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:33.591" endtime="20201029 12:44:33.592"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.595" level="INFO">VALUE: [8.417000000093822e-06, 1.0014000000779788e-05, 9.527999999647818e-06, 9.47199999945525e-06, 9.583000000645825e-06, 6.596999999608499e-06, 8.02799999988224e-06, 7.48599999944588e-06, 8.707999999302274e-06, 7.1390000000448595e-06, 8.443999999663276e-06, 9.473000000426168e-06, 7.6249999994004725e-06, 9.402999999963413e-06, 5.8340000004264425e-06, 7.3610000006496534e-06, 1.0957999999838819e-05, 7.166999999697055e-06, 7.903000000197835e-06, 8.944000000177255e-06, 8.750000000112834e-06, 1.0167000000116388e-05, 8.305999999791425e-06, 9.054999999591473e-06, 1.18469999996762e-05, 1.1027000000218834e-05, 8.709000000273193e-06, 7.917000000468022e-06, 7.945000000120217e-06, 9.042000000292205e-06, 9.999999999621423e-06, 8.679999999650079e-06, 9.069000000749838e-06, 6.513999999846476e-06, 7.555999999908636e-06, 9.193999999546065e-06, 7.985999999959859e-06, 8.736000000730826e-06, 7.916999999579843e-06, 1.2278000000698341e-05, 8.37500000017144e-06, 7.222999999889623e-06, 9.290999999578275e-06, 8.014000000500232e-06, 7.2089999996194365e-06, 5.9580000000281075e-06, 1.1070000000223956e-05, 1.0526999999704856e-05, 8.56900000023586e-06, 9.110999999784042e-06, 6.901999999975317e-06, 8.903000000337613e-06, 9.153000000594602e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.402999999823635e-06, 8.887999999984686e-06, 8.625000000428429e-06, 8.764000000383021e-06, 7.166999999697055e-06, 1.2445000000305129e-05, 7.666000000128292e-06, 9.110999999784042e-06, 8.068999999721882e-06]</msg>
<status status="PASS" starttime="20201029 12:44:33.593" endtime="20201029 12:44:33.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.589" endtime="20201029 12:44:33.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.214" endtime="20201029 12:44:33.596"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.214" endtime="20201029 12:44:33.596"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.605" endtime="20201029 12:44:33.616"></status>
</kw>
<msg timestamp="20201029 12:44:33.616" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.602" endtime="20201029 12:44:33.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.619" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.617" endtime="20201029 12:44:33.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.620" endtime="20201029 12:44:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.600" endtime="20201029 12:44:33.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.598" endtime="20201029 12:44:33.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.629" endtime="20201029 12:44:33.943"></status>
</kw>
<msg timestamp="20201029 12:44:33.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.955146556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.955157583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.627" endtime="20201029 12:44:33.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.955146556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.955157583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:33.948" endtime="20201029 12:44:33.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.958" endtime="20201029 12:44:33.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.625" endtime="20201029 12:44:33.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.623" endtime="20201029 12:44:33.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:33.964" level="INFO">${RESULT} = [{'diff': 1.1027000000218834e-05}, {'diff': 8.709000000273193e-06}, {'diff': 7.917000000468022e-06}, {'diff': 7.945000000120217e-06}, {'diff': 9.042000000292205e-06}, {'diff': 9.999999999621423e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:33.961" endtime="20201029 12:44:33.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:33.976" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1027000000218834e-05, 8.709000000273193e-06, 7.917000000468022e-06, 7.945000000120217e-06, 9.042000000292205e-06, 9.999999999621423e-06, 8.679999999650079e-06, 9.069000000749838e-06, 6.513...</msg>
<status status="PASS" starttime="20201029 12:44:33.971" endtime="20201029 12:44:33.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.980" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:33.979" endtime="20201029 12:44:33.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:33.983" level="INFO">VALUE: [1.1027000000218834e-05, 8.709000000273193e-06, 7.917000000468022e-06, 7.945000000120217e-06, 9.042000000292205e-06, 9.999999999621423e-06, 8.679999999650079e-06, 9.069000000749838e-06, 6.513999999846476e-06, 7.555999999908636e-06, 9.193999999546065e-06, 7.985999999959859e-06, 8.736000000730826e-06, 7.916999999579843e-06, 1.2278000000698341e-05, 8.37500000017144e-06, 7.222999999889623e-06, 9.290999999578275e-06, 8.014000000500232e-06, 7.2089999996194365e-06, 5.9580000000281075e-06, 1.1070000000223956e-05, 1.0526999999704856e-05, 8.56900000023586e-06, 9.110999999784042e-06, 6.901999999975317e-06, 8.903000000337613e-06, 9.153000000594602e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.402999999823635e-06, 8.887999999984686e-06, 8.625000000428429e-06, 8.764000000383021e-06, 7.166999999697055e-06, 1.2445000000305129e-05, 7.666000000128292e-06, 9.110999999784042e-06, 8.068999999721882e-06, 9.95800000058722e-06, 9.81999999982719e-06, 1.0709000000552749e-05, 7.541999999638449e-06, 7.5420000005266274e-06, 9.401999999880672e-06, 1.0249999999878412e-05, 1.105599999995377e-05, 1.1139000000603971e-05, 8.221999999946661e-06, 6.721999999292905e-06, 8.596999999888055e-06, 7.180000000772679e-06, 7.73599999970287e-06, 1.0695000000282562e-05, 1.0958000000726997e-05, 7.1519999993441274e-06, 1.1999999999900979e-05, 9.583999999840387e-06, 7.042000000012649e-06, 1.0485999999865214e-05, 8.457999999933463e-06, 1.0222000000226217e-05, 7.2779999999994516e-06, 7.082999999852291e-06]</msg>
<status status="PASS" starttime="20201029 12:44:33.981" endtime="20201029 12:44:33.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.977" endtime="20201029 12:44:33.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.597" endtime="20201029 12:44:33.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.596" endtime="20201029 12:44:33.984"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:33.992" endtime="20201029 12:44:34.003"></status>
</kw>
<msg timestamp="20201029 12:44:34.003" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:33.990" endtime="20201029 12:44:34.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.005" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.004" endtime="20201029 12:44:34.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.007" endtime="20201029 12:44:34.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.988" endtime="20201029 12:44:34.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.986" endtime="20201029 12:44:34.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.016" endtime="20201029 12:44:34.331"></status>
</kw>
<msg timestamp="20201029 12:44:34.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.328776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.328783444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.014" endtime="20201029 12:44:34.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.328776542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.328783444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.336" endtime="20201029 12:44:34.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.346" endtime="20201029 12:44:34.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.011" endtime="20201029 12:44:34.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.010" endtime="20201029 12:44:34.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.353" level="INFO">${RESULT} = [{'diff': 6.901999999975317e-06}, {'diff': 8.903000000337613e-06}, {'diff': 9.153000000594602e-06}, {'diff': 1.0000000000509601e-05}, {'diff': 9.26400000000882e-06}, {'diff': 8.402999999823635e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:34.349" endtime="20201029 12:44:34.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:34.359" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.901999999975317e-06, 8.903000000337613e-06, 9.153000000594602e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.402999999823635e-06, 8.887999999984686e-06, 8.625000000428429e-06, 8.7640...</msg>
<status status="PASS" starttime="20201029 12:44:34.354" endtime="20201029 12:44:34.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.363" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:34.362" endtime="20201029 12:44:34.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.366" level="INFO">VALUE: [6.901999999975317e-06, 8.903000000337613e-06, 9.153000000594602e-06, 1.0000000000509601e-05, 9.26400000000882e-06, 8.402999999823635e-06, 8.887999999984686e-06, 8.625000000428429e-06, 8.764000000383021e-06, 7.166999999697055e-06, 1.2445000000305129e-05, 7.666000000128292e-06, 9.110999999784042e-06, 8.068999999721882e-06, 9.95800000058722e-06, 9.81999999982719e-06, 1.0709000000552749e-05, 7.541999999638449e-06, 7.5420000005266274e-06, 9.401999999880672e-06, 1.0249999999878412e-05, 1.105599999995377e-05, 1.1139000000603971e-05, 8.221999999946661e-06, 6.721999999292905e-06, 8.596999999888055e-06, 7.180000000772679e-06, 7.73599999970287e-06, 1.0695000000282562e-05, 1.0958000000726997e-05, 7.1519999993441274e-06, 1.1999999999900979e-05, 9.583999999840387e-06, 7.042000000012649e-06, 1.0485999999865214e-05, 8.457999999933463e-06, 1.0222000000226217e-05, 7.2779999999994516e-06, 7.082999999852291e-06, 8.874999998909061e-06, 9.51400000026581e-06, 1.2124999999585384e-05, 5.361000001258276e-06, 8.958000000447441e-06, 9.888999999319026e-06, 9.055999999674214e-06, 9.833000000014636e-06, 9.999999999621423e-06, 8.722000000460639e-06, 1.0124999999305828e-05, 6.6520000014946845e-06, 1.165299999961178e-05, 1.1486000000004992e-05, 7.624999998512294e-06, 6.597000000496678e-06, 1.0319999999452989e-05, 7.860999998499096e-06, 6.750000000721457e-06, 9.361000000041031e-06, 1.1681000000152153e-05, 5.958000000916286e-06, 1.0124999999305828e-05, 9.236000000356626e-06, 1.1153000000874158e-05]</msg>
<status status="PASS" starttime="20201029 12:44:34.364" endtime="20201029 12:44:34.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.360" endtime="20201029 12:44:34.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.985" endtime="20201029 12:44:34.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:33.985" endtime="20201029 12:44:34.367"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.375" endtime="20201029 12:44:34.387"></status>
</kw>
<msg timestamp="20201029 12:44:34.388" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.373" endtime="20201029 12:44:34.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.390" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.389" endtime="20201029 12:44:34.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.391" endtime="20201029 12:44:34.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.371" endtime="20201029 12:44:34.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.369" endtime="20201029 12:44:34.394"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.400" endtime="20201029 12:44:34.712"></status>
</kw>
<msg timestamp="20201029 12:44:34.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.703231931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.703240528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.399" endtime="20201029 12:44:34.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.703231931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.703240528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.718" endtime="20201029 12:44:34.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.728" endtime="20201029 12:44:34.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.396" endtime="20201029 12:44:34.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.394" endtime="20201029 12:44:34.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:34.735" level="INFO">${RESULT} = [{'diff': 8.596999999888055e-06}, {'diff': 7.180000000772679e-06}, {'diff': 7.73599999970287e-06}, {'diff': 1.0695000000282562e-05}, {'diff': 1.0958000000726997e-05}, {'diff': 7.1519999993441274e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:34.731" endtime="20201029 12:44:34.735"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:34.740" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.596999999888055e-06, 7.180000000772679e-06, 7.73599999970287e-06, 1.0695000000282562e-05, 1.0958000000726997e-05, 7.1519999993441274e-06, 1.1999999999900979e-05, 9.583999999840387e-06, 7.0...</msg>
<status status="PASS" starttime="20201029 12:44:34.736" endtime="20201029 12:44:34.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.744" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:34.743" endtime="20201029 12:44:34.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.746" level="INFO">VALUE: [8.596999999888055e-06, 7.180000000772679e-06, 7.73599999970287e-06, 1.0695000000282562e-05, 1.0958000000726997e-05, 7.1519999993441274e-06, 1.1999999999900979e-05, 9.583999999840387e-06, 7.042000000012649e-06, 1.0485999999865214e-05, 8.457999999933463e-06, 1.0222000000226217e-05, 7.2779999999994516e-06, 7.082999999852291e-06, 8.874999998909061e-06, 9.51400000026581e-06, 1.2124999999585384e-05, 5.361000001258276e-06, 8.958000000447441e-06, 9.888999999319026e-06, 9.055999999674214e-06, 9.833000000014636e-06, 9.999999999621423e-06, 8.722000000460639e-06, 1.0124999999305828e-05, 6.6520000014946845e-06, 1.165299999961178e-05, 1.1486000000004992e-05, 7.624999998512294e-06, 6.597000000496678e-06, 1.0319999999452989e-05, 7.860999998499096e-06, 6.750000000721457e-06, 9.361000000041031e-06, 1.1681000000152153e-05, 5.958000000916286e-06, 1.0124999999305828e-05, 9.236000000356626e-06, 1.1153000000874158e-05, 7.582999998589912e-06, 7.555999999908636e-06, 9.042000000292205e-06, 7.804999999194706e-06, 6.917000000328244e-06, 7.499999998827889e-06, 7.709000000133415e-06, 6.499999999576289e-06, 1.0860999999806609e-05, 1.0471999999595027e-05, 6.305000001205485e-06, 7.693999998892309e-06, 8.97199999982945e-06, 7.457999998905507e-06, 6.180999999827463e-06, 1.0222000000226217e-05, 9.76399999963462e-06, 7.5549999998258954e-06, 7.72200000120904e-06, 1.0375000000450996e-05, 6.737000001422189e-06, 1.0361000001068987e-05, 5.999999999062311e-06, 8.263999999869043e-06, 7.263999998841086e-06]</msg>
<status status="PASS" starttime="20201029 12:44:34.745" endtime="20201029 12:44:34.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.741" endtime="20201029 12:44:34.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.368" endtime="20201029 12:44:34.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.368" endtime="20201029 12:44:34.748"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.756" endtime="20201029 12:44:34.768"></status>
</kw>
<msg timestamp="20201029 12:44:34.768" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.755" endtime="20201029 12:44:34.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:34.771" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:34.769" endtime="20201029 12:44:34.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.772" endtime="20201029 12:44:34.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.752" endtime="20201029 12:44:34.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.750" endtime="20201029 12:44:34.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:34.781" endtime="20201029 12:44:35.095"></status>
</kw>
<msg timestamp="20201029 12:44:35.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.080517417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.080524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:34.779" endtime="20201029 12:44:35.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.080517417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.080524069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.100" endtime="20201029 12:44:35.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.110" endtime="20201029 12:44:35.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.777" endtime="20201029 12:44:35.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.775" endtime="20201029 12:44:35.113"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.118" level="INFO">${RESULT} = [{'diff': 6.6520000014946845e-06}, {'diff': 1.165299999961178e-05}, {'diff': 1.1486000000004992e-05}, {'diff': 7.624999998512294e-06}, {'diff': 6.597000000496678e-06}, {'diff': 1.0319999999452989e-05}...</msg>
<status status="PASS" starttime="20201029 12:44:35.114" endtime="20201029 12:44:35.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:35.124" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.6520000014946845e-06, 1.165299999961178e-05, 1.1486000000004992e-05, 7.624999998512294e-06, 6.597000000496678e-06, 1.0319999999452989e-05, 7.860999998499096e-06, 6.750000000721457e-06, 9.3...</msg>
<status status="PASS" starttime="20201029 12:44:35.119" endtime="20201029 12:44:35.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.128" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:35.127" endtime="20201029 12:44:35.128"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.131" level="INFO">VALUE: [6.6520000014946845e-06, 1.165299999961178e-05, 1.1486000000004992e-05, 7.624999998512294e-06, 6.597000000496678e-06, 1.0319999999452989e-05, 7.860999998499096e-06, 6.750000000721457e-06, 9.361000000041031e-06, 1.1681000000152153e-05, 5.958000000916286e-06, 1.0124999999305828e-05, 9.236000000356626e-06, 1.1153000000874158e-05, 7.582999998589912e-06, 7.555999999908636e-06, 9.042000000292205e-06, 7.804999999194706e-06, 6.917000000328244e-06, 7.499999998827889e-06, 7.709000000133415e-06, 6.499999999576289e-06, 1.0860999999806609e-05, 1.0471999999595027e-05, 6.305000001205485e-06, 7.693999998892309e-06, 8.97199999982945e-06, 7.457999998905507e-06, 6.180999999827463e-06, 1.0222000000226217e-05, 9.76399999963462e-06, 7.5549999998258954e-06, 7.72200000120904e-06, 1.0375000000450996e-05, 6.737000001422189e-06, 1.0361000001068987e-05, 5.999999999062311e-06, 8.263999999869043e-06, 7.263999998841086e-06, 9.764000001410977e-06, 6.791999998867482e-06, 8.499999999855845e-06, 1.0485999998977036e-05, 7.1109999986163075e-06, 1.1776999999213444e-05, 7.318999999839093e-06, 1.0889000000346982e-05, 8.569999998542244e-06, 7.958999999502225e-06, 5.583000000086713e-06, 9.667000000490589e-06, 1.1540999999226642e-05, 9.582999998869468e-06, 9.65300000110858e-06, 8.681000000620998e-06, 9.000000000369823e-06, 1.005500000061943e-05, 8.680000000538257e-06, 7.570000001067001e-06, 1.0277999999530607e-05, 1.244399999933421e-05, 6.167000000445455e-06, 6.499999999576289e-06, 1.030600000007098e-05]</msg>
<status status="PASS" starttime="20201029 12:44:35.129" endtime="20201029 12:44:35.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.125" endtime="20201029 12:44:35.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.749" endtime="20201029 12:44:35.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:34.748" endtime="20201029 12:44:35.132"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.140" endtime="20201029 12:44:35.150"></status>
</kw>
<msg timestamp="20201029 12:44:35.150" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.138" endtime="20201029 12:44:35.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.153" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.151" endtime="20201029 12:44:35.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.154" endtime="20201029 12:44:35.155"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.136" endtime="20201029 12:44:35.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.134" endtime="20201029 12:44:35.156"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.163" endtime="20201029 12:44:35.481"></status>
</kw>
<msg timestamp="20201029 12:44:35.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.454390417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.454398111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.161" endtime="20201029 12:44:35.485"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.454390417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.454398111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.486" endtime="20201029 12:44:35.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.496" endtime="20201029 12:44:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.158" endtime="20201029 12:44:35.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.157" endtime="20201029 12:44:35.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.504" level="INFO">${RESULT} = [{'diff': 7.693999998892309e-06}, {'diff': 8.97199999982945e-06}, {'diff': 7.457999998905507e-06}, {'diff': 6.180999999827463e-06}, {'diff': 1.0222000000226217e-05}, {'diff': 9.76399999963462e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:44:35.499" endtime="20201029 12:44:35.504"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:35.508" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.693999998892309e-06, 8.97199999982945e-06, 7.457999998905507e-06, 6.180999999827463e-06, 1.0222000000226217e-05, 9.76399999963462e-06, 7.5549999998258954e-06, 7.72200000120904e-06, 1.03750...</msg>
<status status="PASS" starttime="20201029 12:44:35.505" endtime="20201029 12:44:35.509"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.512" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:35.511" endtime="20201029 12:44:35.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.515" level="INFO">VALUE: [7.693999998892309e-06, 8.97199999982945e-06, 7.457999998905507e-06, 6.180999999827463e-06, 1.0222000000226217e-05, 9.76399999963462e-06, 7.5549999998258954e-06, 7.72200000120904e-06, 1.0375000000450996e-05, 6.737000001422189e-06, 1.0361000001068987e-05, 5.999999999062311e-06, 8.263999999869043e-06, 7.263999998841086e-06, 9.764000001410977e-06, 6.791999998867482e-06, 8.499999999855845e-06, 1.0485999998977036e-05, 7.1109999986163075e-06, 1.1776999999213444e-05, 7.318999999839093e-06, 1.0889000000346982e-05, 8.569999998542244e-06, 7.958999999502225e-06, 5.583000000086713e-06, 9.667000000490589e-06, 1.1540999999226642e-05, 9.582999998869468e-06, 9.65300000110858e-06, 8.681000000620998e-06, 9.000000000369823e-06, 1.005500000061943e-05, 8.680000000538257e-06, 7.570000001067001e-06, 1.0277999999530607e-05, 1.244399999933421e-05, 6.167000000445455e-06, 6.499999999576289e-06, 1.030600000007098e-05, 7.195000000237428e-06, 7.318999999839093e-06, 7.862000000358194e-06, 1.0666999999742188e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0264000000148599e-05, 9.013999999751832e-06, 8.23599999932867e-06, 9.597000000027833e-06, 9.236000000356626e-06, 9.874999999937017e-06, 1.219500000004814e-05, 1.1611000001465754e-05, 6.722999998487467e-06, 1.0582999999897424e-05, 1.11940000007138e-05, 8.708999999385014e-06, 8.388999999553448e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.625000001316607e-06, 9.777999999016629e-06, 8.334000000331798e-06, 9.945000000399773e-06]</msg>
<status status="PASS" starttime="20201029 12:44:35.514" endtime="20201029 12:44:35.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.509" endtime="20201029 12:44:35.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.133" endtime="20201029 12:44:35.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.132" endtime="20201029 12:44:35.517"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.524" endtime="20201029 12:44:35.535"></status>
</kw>
<msg timestamp="20201029 12:44:35.535" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.523" endtime="20201029 12:44:35.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.538" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.536" endtime="20201029 12:44:35.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.539" endtime="20201029 12:44:35.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.520" endtime="20201029 12:44:35.541"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.518" endtime="20201029 12:44:35.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.549" endtime="20201029 12:44:35.877"></status>
</kw>
<msg timestamp="20201029 12:44:35.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.82500975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.825019417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:35.547" endtime="20201029 12:44:35.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.82500975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.825019417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:35.882" endtime="20201029 12:44:35.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.892" endtime="20201029 12:44:35.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.544" endtime="20201029 12:44:35.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.542" endtime="20201029 12:44:35.895"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:35.900" level="INFO">${RESULT} = [{'diff': 9.667000000490589e-06}, {'diff': 1.1540999999226642e-05}, {'diff': 9.582999998869468e-06}, {'diff': 9.65300000110858e-06}, {'diff': 8.681000000620998e-06}, {'diff': 9.000000000369823e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:44:35.896" endtime="20201029 12:44:35.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:35.905" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.667000000490589e-06, 1.1540999999226642e-05, 9.582999998869468e-06, 9.65300000110858e-06, 8.681000000620998e-06, 9.000000000369823e-06, 1.005500000061943e-05, 8.680000000538257e-06, 7.5700...</msg>
<status status="PASS" starttime="20201029 12:44:35.901" endtime="20201029 12:44:35.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.909" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:35.908" endtime="20201029 12:44:35.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.912" level="INFO">VALUE: [9.667000000490589e-06, 1.1540999999226642e-05, 9.582999998869468e-06, 9.65300000110858e-06, 8.681000000620998e-06, 9.000000000369823e-06, 1.005500000061943e-05, 8.680000000538257e-06, 7.570000001067001e-06, 1.0277999999530607e-05, 1.244399999933421e-05, 6.167000000445455e-06, 6.499999999576289e-06, 1.030600000007098e-05, 7.195000000237428e-06, 7.318999999839093e-06, 7.862000000358194e-06, 1.0666999999742188e-05, 6.7359999995630915e-06, 8.639000000698616e-06, 1.0264000000148599e-05, 9.013999999751832e-06, 8.23599999932867e-06, 9.597000000027833e-06, 9.236000000356626e-06, 9.874999999937017e-06, 1.219500000004814e-05, 1.1611000001465754e-05, 6.722999998487467e-06, 1.0582999999897424e-05, 1.11940000007138e-05, 8.708999999385014e-06, 8.388999999553448e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.625000001316607e-06, 9.777999999016629e-06, 8.334000000331798e-06, 9.945000000399773e-06, 8.750000001001013e-06, 8.875000000685418e-06, 1.0930000000186624e-05, 1.0958000000726997e-05, 6.930999999710252e-06, 8.987000001070555e-06, 1.1513999998769009e-05, 7.333000000997458e-06, 8.389000001329805e-06, 7.263999998841086e-06, 8.098000000344996e-06, 5.708999999853859e-06, 8.042000001040606e-06, 5.541000000164331e-06, 1.0193999999685843e-05, 8.749999999224656e-06, 9.097000001290212e-06, 9.278000000279008e-06, 9.999999999621423e-06, 1.1278000000558563e-05, 7.819999998659455e-06, 7.721999999432683e-06, 7.846999999117088e-06, 7.472000000063872e-06, 7.445000001382596e-06]</msg>
<status status="PASS" starttime="20201029 12:44:35.910" endtime="20201029 12:44:35.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.905" endtime="20201029 12:44:35.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.517" endtime="20201029 12:44:35.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.517" endtime="20201029 12:44:35.914"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.921" endtime="20201029 12:44:35.932"></status>
</kw>
<msg timestamp="20201029 12:44:35.932" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.920" endtime="20201029 12:44:35.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:35.935" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:35.933" endtime="20201029 12:44:35.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.936" endtime="20201029 12:44:35.937"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.917" endtime="20201029 12:44:35.938"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.916" endtime="20201029 12:44:35.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:35.945" endtime="20201029 12:44:36.261"></status>
</kw>
<msg timestamp="20201029 12:44:36.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.199374319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.199384194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:35.943" endtime="20201029 12:44:36.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.199374319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.199384194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.266" endtime="20201029 12:44:36.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.276" endtime="20201029 12:44:36.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.941" endtime="20201029 12:44:36.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.939" endtime="20201029 12:44:36.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.283" level="INFO">${RESULT} = [{'diff': 9.874999999937017e-06}, {'diff': 1.219500000004814e-05}, {'diff': 1.1611000001465754e-05}, {'diff': 6.722999998487467e-06}, {'diff': 1.0582999999897424e-05}, {'diff': 1.11940000007138e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:44:36.279" endtime="20201029 12:44:36.283"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:36.288" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.874999999937017e-06, 1.219500000004814e-05, 1.1611000001465754e-05, 6.722999998487467e-06, 1.0582999999897424e-05, 1.11940000007138e-05, 8.708999999385014e-06, 8.388999999553448e-06, 8.889...</msg>
<status status="PASS" starttime="20201029 12:44:36.284" endtime="20201029 12:44:36.288"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.292" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:36.291" endtime="20201029 12:44:36.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.295" level="INFO">VALUE: [9.874999999937017e-06, 1.219500000004814e-05, 1.1611000001465754e-05, 6.722999998487467e-06, 1.0582999999897424e-05, 1.11940000007138e-05, 8.708999999385014e-06, 8.388999999553448e-06, 8.889000000067426e-06, 1.0082999999383446e-05, 8.625000001316607e-06, 9.777999999016629e-06, 8.334000000331798e-06, 9.945000000399773e-06, 8.750000001001013e-06, 8.875000000685418e-06, 1.0930000000186624e-05, 1.0958000000726997e-05, 6.930999999710252e-06, 8.987000001070555e-06, 1.1513999998769009e-05, 7.333000000997458e-06, 8.389000001329805e-06, 7.263999998841086e-06, 8.098000000344996e-06, 5.708999999853859e-06, 8.042000001040606e-06, 5.541000000164331e-06, 1.0193999999685843e-05, 8.749999999224656e-06, 9.097000001290212e-06, 9.278000000279008e-06, 9.999999999621423e-06, 1.1278000000558563e-05, 7.819999998659455e-06, 7.721999999432683e-06, 7.846999999117088e-06, 7.472000000063872e-06, 7.445000001382596e-06, 6.374999999891884e-06, 1.0416000000290637e-05, 1.1458999999547359e-05, 8.555000000853852e-06, 7.791999999895438e-06, 1.0542000000057783e-05, 5.972000000298294e-06, 7.63899999967066e-06, 8.735999999842647e-06, 8.528000000396219e-06, 9.457999999185063e-06, 1.0874999999188617e-05, 9.5699999995702e-06, 9.389000000581404e-06, 8.693999999920266e-06, 9.277000000196267e-06, 1.0722000000740195e-05, 6.388999999273892e-06, 1.0540999999975043e-05, 9.054999999591473e-06, 9.874999999937017e-06, 8.180000000024279e-06, 6.764000000103465e-06, 1.0540999999975043e-05, 7.0270000005479005e-06]</msg>
<status status="PASS" starttime="20201029 12:44:36.293" endtime="20201029 12:44:36.295"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.289" endtime="20201029 12:44:36.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.914" endtime="20201029 12:44:36.296"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:35.914" endtime="20201029 12:44:36.296"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.304" endtime="20201029 12:44:36.317"></status>
</kw>
<msg timestamp="20201029 12:44:36.317" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.303" endtime="20201029 12:44:36.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.321" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.319" endtime="20201029 12:44:36.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.323" endtime="20201029 12:44:36.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.300" endtime="20201029 12:44:36.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.298" endtime="20201029 12:44:36.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.336" endtime="20201029 12:44:36.666"></status>
</kw>
<msg timestamp="20201029 12:44:36.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.572935208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.572940917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.334" endtime="20201029 12:44:36.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.679" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.572935208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.572940917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:36.671" endtime="20201029 12:44:36.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.681" endtime="20201029 12:44:36.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.330" endtime="20201029 12:44:36.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.328" endtime="20201029 12:44:36.683"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:36.688" level="INFO">${RESULT} = [{'diff': 5.708999999853859e-06}, {'diff': 8.042000001040606e-06}, {'diff': 5.541000000164331e-06}, {'diff': 1.0193999999685843e-05}, {'diff': 8.749999999224656e-06}, {'diff': 9.097000001290212e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:36.684" endtime="20201029 12:44:36.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:36.692" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.708999999853859e-06, 8.042000001040606e-06, 5.541000000164331e-06, 1.0193999999685843e-05, 8.749999999224656e-06, 9.097000001290212e-06, 9.278000000279008e-06, 9.999999999621423e-06, 1.127...</msg>
<status status="PASS" starttime="20201029 12:44:36.689" endtime="20201029 12:44:36.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.696" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201029 12:44:36.695" endtime="20201029 12:44:36.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:36.699" level="INFO">VALUE: [5.708999999853859e-06, 8.042000001040606e-06, 5.541000000164331e-06, 1.0193999999685843e-05, 8.749999999224656e-06, 9.097000001290212e-06, 9.278000000279008e-06, 9.999999999621423e-06, 1.1278000000558563e-05, 7.819999998659455e-06, 7.721999999432683e-06, 7.846999999117088e-06, 7.472000000063872e-06, 7.445000001382596e-06, 6.374999999891884e-06, 1.0416000000290637e-05, 1.1458999999547359e-05, 8.555000000853852e-06, 7.791999999895438e-06, 1.0542000000057783e-05, 5.972000000298294e-06, 7.63899999967066e-06, 8.735999999842647e-06, 8.528000000396219e-06, 9.457999999185063e-06, 1.0874999999188617e-05, 9.5699999995702e-06, 9.389000000581404e-06, 8.693999999920266e-06, 9.277000000196267e-06, 1.0722000000740195e-05, 6.388999999273892e-06, 1.0540999999975043e-05, 9.054999999591473e-06, 9.874999999937017e-06, 8.180000000024279e-06, 6.764000000103465e-06, 1.0540999999975043e-05, 7.0270000005479005e-06, 7.3890000003018486e-06, 1.0222000000226217e-05, 7.2779999999994516e-06, 8.334000000331798e-06, 9.110999998895863e-06, 8.097000000262256e-06, 1.1625000000847763e-05, 1.0778000000044585e-05, 6.374999999891884e-06, 7.48599999944588e-06, 1.070799999958183e-05, 1.105599999995377e-05, 7.195000000237428e-06, 8.860999999527053e-06, 6.235999999049113e-06, 9.11100000067222e-06, 9.402999999963413e-06, 8.388999999553448e-06, 8.638999998922259e-06, 1.0833000001042592e-05, 7.861000000275453e-06, 1.1319000000398205e-05, 8.37500000017144e-06, 1.1624999999071406e-05, 8.180000000024279e-06]</msg>
<status status="PASS" starttime="20201029 12:44:36.697" endtime="20201029 12:44:36.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.693" endtime="20201029 12:44:36.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.297" endtime="20201029 12:44:36.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.297" endtime="20201029 12:44:36.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:28.890" endtime="20201029 12:44:36.700"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:25.760" endtime="20201029 12:44:36.701" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:36.708" endtime="20201029 12:44:36.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.706" endtime="20201029 12:44:36.728"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:36.741" endtime="20201029 12:44:39.763"></status>
</kw>
<msg timestamp="20201029 12:44:39.764" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:36.740" endtime="20201029 12:44:39.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.769" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.766" endtime="20201029 12:44:39.769"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.775" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:39.771" endtime="20201029 12:44:39.776"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.737" endtime="20201029 12:44:39.777"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:36.735" endtime="20201029 12:44:39.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.734" endtime="20201029 12:44:39.779"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:39.787" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:39.785" endtime="20201029 12:44:39.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.781" endtime="20201029 12:44:39.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.733" endtime="20201029 12:44:39.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.732" endtime="20201029 12:44:39.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.790" endtime="20201029 12:44:39.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.730" endtime="20201029 12:44:39.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.728" endtime="20201029 12:44:39.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:36.705" endtime="20201029 12:44:39.796"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.813" endtime="20201029 12:44:39.829"></status>
</kw>
<msg timestamp="20201029 12:44:39.830" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.810" endtime="20201029 12:44:39.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:39.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:39.832" endtime="20201029 12:44:39.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.837" endtime="20201029 12:44:39.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.805" endtime="20201029 12:44:39.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.801" endtime="20201029 12:44:39.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:39.850" endtime="20201029 12:44:40.149"></status>
</kw>
<msg timestamp="20201029 12:44:40.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097192903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097194514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:39.848" endtime="20201029 12:44:40.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097192903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097194514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.154" endtime="20201029 12:44:40.161"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.162" endtime="20201029 12:44:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.845" endtime="20201029 12:44:40.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.843" endtime="20201029 12:44:40.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.168" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201029 12:44:40.165" endtime="20201029 12:44:40.169"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:40.173" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.527999999861862e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:40.169" endtime="20201029 12:44:40.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.177" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:40.176" endtime="20201029 12:44:40.177"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.180" level="INFO">VALUE: [1.6110000000679747e-06, 1.527999999861862e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.5419999996879596e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.4729999997520338e-06, 1.5559999999581464e-06, 1.5839999996103415e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.178" endtime="20201029 12:44:40.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.173" endtime="20201029 12:44:40.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.799" endtime="20201029 12:44:40.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.798" endtime="20201029 12:44:40.181"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.190" endtime="20201029 12:44:40.201"></status>
</kw>
<msg timestamp="20201029 12:44:40.201" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.187" endtime="20201029 12:44:40.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.204" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.202" endtime="20201029 12:44:40.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.205" endtime="20201029 12:44:40.206"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.185" endtime="20201029 12:44:40.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.183" endtime="20201029 12:44:40.207"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.214" endtime="20201029 12:44:40.526"></status>
</kw>
<msg timestamp="20201029 12:44:40.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097407486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097409042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.212" endtime="20201029 12:44:40.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.097407486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.097409042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:40.531" endtime="20201029 12:44:40.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.542" endtime="20201029 12:44:40.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.210" endtime="20201029 12:44:40.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.208" endtime="20201029 12:44:40.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.549" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5839999996103415e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5550000003194953e-...</msg>
<status status="PASS" starttime="20201029 12:44:40.545" endtime="20201029 12:44:40.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:40.558" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5839999996103415e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201029 12:44:40.550" endtime="20201029 12:44:40.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.567" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:40.565" endtime="20201029 12:44:40.568"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.574" level="INFO">VALUE: [1.5559999999581464e-06, 1.5839999996103415e-06, 1.5829999999716904e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5560000004022356e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5829999999716904e-06, 1.5700000002283332e-06, 1.500000000209667e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.570" endtime="20201029 12:44:40.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.560" endtime="20201029 12:44:40.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.182" endtime="20201029 12:44:40.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.181" endtime="20201029 12:44:40.577"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.595" endtime="20201029 12:44:40.612"></status>
</kw>
<msg timestamp="20201029 12:44:40.613" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.591" endtime="20201029 12:44:40.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.618" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:40.615" endtime="20201029 12:44:40.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.620" endtime="20201029 12:44:40.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.586" endtime="20201029 12:44:40.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.582" endtime="20201029 12:44:40.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.641" endtime="20201029 12:44:40.957"></status>
</kw>
<msg timestamp="20201029 12:44:40.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.462756694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.46275825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:40.637" endtime="20201029 12:44:40.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.462756694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.46275825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:44:40.962" endtime="20201029 12:44:40.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:40.972" endtime="20201029 12:44:40.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.631" endtime="20201029 12:44:40.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.627" endtime="20201029 12:44:40.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:40.979" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-0...</msg>
<status status="PASS" starttime="20201029 12:44:40.976" endtime="20201029 12:44:40.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:40.987" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:40.980" endtime="20201029 12:44:40.987"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.992" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:40.990" endtime="20201029 12:44:40.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:40.995" level="INFO">VALUE: [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5689999997015036e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.5970000002418772e-06, 1.5420000001320489e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.6119999997066259e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5689999997015036e-06, 1.569999999784244e-06, 1.500000000209667e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5550000003194953e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.527999999861862e-06, 1.5689999997015036e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5419999996879596e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06]</msg>
<status status="PASS" starttime="20201029 12:44:40.993" endtime="20201029 12:44:40.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.988" endtime="20201029 12:44:40.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.579" endtime="20201029 12:44:40.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.578" endtime="20201029 12:44:40.996"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.009" endtime="20201029 12:44:41.020"></status>
</kw>
<msg timestamp="20201029 12:44:41.020" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.007" endtime="20201029 12:44:41.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.023" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.021" endtime="20201029 12:44:41.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.024" endtime="20201029 12:44:41.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.004" endtime="20201029 12:44:41.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.002" endtime="20201029 12:44:41.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.033" endtime="20201029 12:44:41.341"></status>
</kw>
<msg timestamp="20201029 12:44:41.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.860609069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.860610611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.031" endtime="20201029 12:44:41.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.860609069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.860610611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.346" endtime="20201029 12:44:41.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.357" endtime="20201029 12:44:41.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.029" endtime="20201029 12:44:41.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.027" endtime="20201029 12:44:41.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.367" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5550000003194953e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 12:44:41.360" endtime="20201029 12:44:41.368"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:41.378" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5550000003194953e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:41.369" endtime="20201029 12:44:41.379"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.388" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:41.386" endtime="20201029 12:44:41.388"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.394" level="INFO">VALUE: [1.5419999996879596e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5550000003194953e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.596999999797788e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5129999999530241e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06]</msg>
<status status="PASS" starttime="20201029 12:44:41.390" endtime="20201029 12:44:41.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.381" endtime="20201029 12:44:41.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.997" endtime="20201029 12:44:41.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:40.997" endtime="20201029 12:44:41.397"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.416" endtime="20201029 12:44:41.431"></status>
</kw>
<msg timestamp="20201029 12:44:41.432" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.413" endtime="20201029 12:44:41.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.438" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.435" endtime="20201029 12:44:41.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.440" endtime="20201029 12:44:41.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.405" endtime="20201029 12:44:41.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.402" endtime="20201029 12:44:41.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.460" endtime="20201029 12:44:41.778"></status>
</kw>
<msg timestamp="20201029 12:44:41.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.261937819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.261939375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.457" endtime="20201029 12:44:41.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.261937819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.261939375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.783" endtime="20201029 12:44:41.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.793" endtime="20201029 12:44:41.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.451" endtime="20201029 12:44:41.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.447" endtime="20201029 12:44:41.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:41.800" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201029 12:44:41.797" endtime="20201029 12:44:41.801"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:41.806" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:41.802" endtime="20201029 12:44:41.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.811" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:41.810" endtime="20201029 12:44:41.811"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.814" level="INFO">VALUE: [1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5839999996103415e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.6389999997201699e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5970000006859664e-06]</msg>
<status status="PASS" starttime="20201029 12:44:41.812" endtime="20201029 12:44:41.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.807" endtime="20201029 12:44:41.814"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.399" endtime="20201029 12:44:41.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.398" endtime="20201029 12:44:41.815"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.823" endtime="20201029 12:44:41.834"></status>
</kw>
<msg timestamp="20201029 12:44:41.835" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.821" endtime="20201029 12:44:41.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:41.837" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:41.836" endtime="20201029 12:44:41.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.838" endtime="20201029 12:44:41.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.819" endtime="20201029 12:44:41.840"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.817" endtime="20201029 12:44:41.841"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:41.848" endtime="20201029 12:44:42.166"></status>
</kw>
<msg timestamp="20201029 12:44:42.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.659912208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.659913764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:41.846" endtime="20201029 12:44:42.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.659912208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.659913764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.173" endtime="20201029 12:44:42.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.195" endtime="20201029 12:44:42.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.843" endtime="20201029 12:44:42.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.842" endtime="20201029 12:44:42.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.210" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201029 12:44:42.203" endtime="20201029 12:44:42.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:42.223" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5829999995276012e-06,...</msg>
<status status="PASS" starttime="20201029 12:44:42.212" endtime="20201029 12:44:42.223"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.232" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:42.229" endtime="20201029 12:44:42.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.238" level="INFO">VALUE: [1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.6250000003381615e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5830000004157796e-06, 1.5830000004157796e-06, 1.527000000223211e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:44:42.235" endtime="20201029 12:44:42.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.225" endtime="20201029 12:44:42.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.816" endtime="20201029 12:44:42.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:41.815" endtime="20201029 12:44:42.242"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.258" endtime="20201029 12:44:42.273"></status>
</kw>
<msg timestamp="20201029 12:44:42.273" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.255" endtime="20201029 12:44:42.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.274" endtime="20201029 12:44:42.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.277" endtime="20201029 12:44:42.278"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.249" endtime="20201029 12:44:42.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.246" endtime="20201029 12:44:42.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.287" endtime="20201029 12:44:42.608"></status>
</kw>
<msg timestamp="20201029 12:44:42.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.056372, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.056373556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:42.284" endtime="20201029 12:44:42.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.056372, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.056373556, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:42.613" endtime="20201029 12:44:42.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.623" endtime="20201029 12:44:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.282" endtime="20201029 12:44:42.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.280" endtime="20201029 12:44:42.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:42.630" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5410000004933977e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5410000004933977e-...</msg>
<status status="PASS" starttime="20201029 12:44:42.627" endtime="20201029 12:44:42.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:42.636" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201029 12:44:42.631" endtime="20201029 12:44:42.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.640" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:42.639" endtime="20201029 12:44:42.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.643" level="INFO">VALUE: [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5839999996103415e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5419999996879596e-06]</msg>
<status status="PASS" starttime="20201029 12:44:42.642" endtime="20201029 12:44:42.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.637" endtime="20201029 12:44:42.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.243" endtime="20201029 12:44:42.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.242" endtime="20201029 12:44:42.645"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.653" endtime="20201029 12:44:42.665"></status>
</kw>
<msg timestamp="20201029 12:44:42.665" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.652" endtime="20201029 12:44:42.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:42.668" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:42.666" endtime="20201029 12:44:42.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.669" endtime="20201029 12:44:42.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.649" endtime="20201029 12:44:42.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.647" endtime="20201029 12:44:42.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:42.678" endtime="20201029 12:44:42.987"></status>
</kw>
<msg timestamp="20201029 12:44:42.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.482805625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.482807194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.676" endtime="20201029 12:44:42.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.482805625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.482807194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:42.999" endtime="20201029 12:44:43.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.021" endtime="20201029 12:44:43.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.674" endtime="20201029 12:44:43.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.672" endtime="20201029 12:44:43.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.036" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5409999996052193e-...</msg>
<status status="PASS" starttime="20201029 12:44:43.028" endtime="20201029 12:44:43.037"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:43.048" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5550000007635845e-06...</msg>
<status status="PASS" starttime="20201029 12:44:43.038" endtime="20201029 12:44:43.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.057" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:43.055" endtime="20201029 12:44:43.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.063" level="INFO">VALUE: [1.5690000001455928e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.485999999495391e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.58400000049852e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:44:43.060" endtime="20201029 12:44:43.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.050" endtime="20201029 12:44:43.065"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.645" endtime="20201029 12:44:43.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:42.645" endtime="20201029 12:44:43.067"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.083" endtime="20201029 12:44:43.096"></status>
</kw>
<msg timestamp="20201029 12:44:43.096" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.079" endtime="20201029 12:44:43.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.099" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.097" endtime="20201029 12:44:43.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.100" endtime="20201029 12:44:43.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.074" endtime="20201029 12:44:43.102"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.071" endtime="20201029 12:44:43.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.108" endtime="20201029 12:44:43.425"></status>
</kw>
<msg timestamp="20201029 12:44:43.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.866677653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.866679208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.107" endtime="20201029 12:44:43.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.866677653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.866679208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.430" endtime="20201029 12:44:43.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.440" endtime="20201029 12:44:43.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.105" endtime="20201029 12:44:43.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.103" endtime="20201029 12:44:43.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.448" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5559999999581464e-0...</msg>
<status status="PASS" starttime="20201029 12:44:43.443" endtime="20201029 12:44:43.448"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:43.453" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:43.449" endtime="20201029 12:44:43.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.457" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:43.456" endtime="20201029 12:44:43.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.459" level="INFO">VALUE: [1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5550000007635845e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5689999992574144e-06, 1.6519999999076163e-06, 1.5560000008463248e-06, 1.6390000006083483e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5699999993401548e-06]</msg>
<status status="PASS" starttime="20201029 12:44:43.458" endtime="20201029 12:44:43.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.453" endtime="20201029 12:44:43.460"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.068" endtime="20201029 12:44:43.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.067" endtime="20201029 12:44:43.461"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.468" endtime="20201029 12:44:43.480"></status>
</kw>
<msg timestamp="20201029 12:44:43.481" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.467" endtime="20201029 12:44:43.481"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.483" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.482" endtime="20201029 12:44:43.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.484" endtime="20201029 12:44:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.464" endtime="20201029 12:44:43.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.463" endtime="20201029 12:44:43.487"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.494" endtime="20201029 12:44:43.814"></status>
</kw>
<msg timestamp="20201029 12:44:43.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.287768097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.287769625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.492" endtime="20201029 12:44:43.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.287768097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.287769625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.819" endtime="20201029 12:44:43.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.829" endtime="20201029 12:44:43.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.489" endtime="20201029 12:44:43.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.487" endtime="20201029 12:44:43.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:43.836" level="INFO">${RESULT} = [{'diff': 1.5280000003059513e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5410000004933977e-0...</msg>
<status status="PASS" starttime="20201029 12:44:43.833" endtime="20201029 12:44:43.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:43.841" level="INFO">${OVERHEAD} = {'diff': [1.5280000003059513e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5559999999581464e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:43.837" endtime="20201029 12:44:43.841"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.846" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:43.844" endtime="20201029 12:44:43.846"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.849" level="INFO">VALUE: [1.5280000003059513e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5830000004157796e-06, 1.5409999996052193e-06, 1.6110000000679747e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5699999993401548e-06, 1.596999999797788e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5830000004157796e-06, 1.5699999993401548e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 12:44:43.847" endtime="20201029 12:44:43.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.842" endtime="20201029 12:44:43.849"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.461" endtime="20201029 12:44:43.850"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.461" endtime="20201029 12:44:43.850"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.858" endtime="20201029 12:44:43.869"></status>
</kw>
<msg timestamp="20201029 12:44:43.870" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.856" endtime="20201029 12:44:43.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:43.872" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:43.871" endtime="20201029 12:44:43.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.873" endtime="20201029 12:44:43.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.854" endtime="20201029 12:44:43.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.852" endtime="20201029 12:44:43.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:43.882" endtime="20201029 12:44:44.197"></status>
</kw>
<msg timestamp="20201029 12:44:44.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.661813486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.661815042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:43.881" endtime="20201029 12:44:44.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.661813486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.661815042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.203" endtime="20201029 12:44:44.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.212" endtime="20201029 12:44:44.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.878" endtime="20201029 12:44:44.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.877" endtime="20201029 12:44:44.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.220" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.58400000049852e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.527000000223211e-06}, {'diff': 1.527000000223211e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:44:44.216" endtime="20201029 12:44:44.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:44.225" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.58400000049852e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5...</msg>
<status status="PASS" starttime="20201029 12:44:44.221" endtime="20201029 12:44:44.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.229" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:44.228" endtime="20201029 12:44:44.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.232" level="INFO">VALUE: [1.5559999999581464e-06, 1.58400000049852e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.527000000223211e-06, 1.527000000223211e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5830000004157796e-06, 1.5699999993401548e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5269999993350325e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201029 12:44:44.230" endtime="20201029 12:44:44.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.226" endtime="20201029 12:44:44.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.851" endtime="20201029 12:44:44.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:43.850" endtime="20201029 12:44:44.233"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.241" endtime="20201029 12:44:44.254"></status>
</kw>
<msg timestamp="20201029 12:44:44.255" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.239" endtime="20201029 12:44:44.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.257" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.256" endtime="20201029 12:44:44.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.258" endtime="20201029 12:44:44.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.237" endtime="20201029 12:44:44.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.235" endtime="20201029 12:44:44.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.267" endtime="20201029 12:44:44.592"></status>
</kw>
<msg timestamp="20201029 12:44:44.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.042107083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.042108653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.266" endtime="20201029 12:44:44.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.042107083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.042108653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.597" endtime="20201029 12:44:44.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.608" endtime="20201029 12:44:44.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.263" endtime="20201029 12:44:44.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.261" endtime="20201029 12:44:44.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:44.615" level="INFO">${RESULT} = [{'diff': 1.5699999993401548e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5830000004157796e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201029 12:44:44.611" endtime="20201029 12:44:44.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:44.619" level="INFO">${OVERHEAD} = {'diff': [1.5699999993401548e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:44.616" endtime="20201029 12:44:44.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.623" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:44.622" endtime="20201029 12:44:44.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.626" level="INFO">VALUE: [1.5699999993401548e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06]</msg>
<status status="PASS" starttime="20201029 12:44:44.624" endtime="20201029 12:44:44.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.620" endtime="20201029 12:44:44.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.234" endtime="20201029 12:44:44.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.234" endtime="20201029 12:44:44.627"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.636" endtime="20201029 12:44:44.648"></status>
</kw>
<msg timestamp="20201029 12:44:44.649" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.634" endtime="20201029 12:44:44.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:44.651" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:44.650" endtime="20201029 12:44:44.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.653" endtime="20201029 12:44:44.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.631" endtime="20201029 12:44:44.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.629" endtime="20201029 12:44:44.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:44.661" endtime="20201029 12:44:44.986"></status>
</kw>
<msg timestamp="20201029 12:44:44.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.413541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.413542833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.660" endtime="20201029 12:44:44.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.413541278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.413542833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:44.991" endtime="20201029 12:44:45.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.001" endtime="20201029 12:44:45.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.657" endtime="20201029 12:44:45.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.656" endtime="20201029 12:44:45.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.008" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5970000006859664e-06}, {'diff': 1.5280000003059513e-06...</msg>
<status status="PASS" starttime="20201029 12:44:45.005" endtime="20201029 12:44:45.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:45.014" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1....</msg>
<status status="PASS" starttime="20201029 12:44:45.009" endtime="20201029 12:44:45.014"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.018" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:45.017" endtime="20201029 12:44:45.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.020" level="INFO">VALUE: [1.554999999875406e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5970000006859664e-06, 1.5280000003059513e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.554999999875406e-06, 1.5409999996052193e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.6250000003381615e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5839999996103415e-06]</msg>
<status status="PASS" starttime="20201029 12:44:45.019" endtime="20201029 12:44:45.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.014" endtime="20201029 12:44:45.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.628" endtime="20201029 12:44:45.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:44.628" endtime="20201029 12:44:45.022"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.029" endtime="20201029 12:44:45.042"></status>
</kw>
<msg timestamp="20201029 12:44:45.042" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.028" endtime="20201029 12:44:45.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.043" endtime="20201029 12:44:45.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.046" endtime="20201029 12:44:45.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.025" endtime="20201029 12:44:45.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.024" endtime="20201029 12:44:45.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.055" endtime="20201029 12:44:45.369"></status>
</kw>
<msg timestamp="20201029 12:44:45.373" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.799367903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.7993695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:45.053" endtime="20201029 12:44:45.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.799367903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.7993695, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:44:45.375" endtime="20201029 12:44:45.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.385" endtime="20201029 12:44:45.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.050" endtime="20201029 12:44:45.387"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.049" endtime="20201029 12:44:45.387"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.392" level="INFO">${RESULT} = [{'diff': 1.596999999797788e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5700000002283332e-06...</msg>
<status status="PASS" starttime="20201029 12:44:45.388" endtime="20201029 12:44:45.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:45.397" level="INFO">${OVERHEAD} = {'diff': [1.596999999797788e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:45.393" endtime="20201029 12:44:45.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.402" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:45.400" endtime="20201029 12:44:45.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.404" level="INFO">VALUE: [1.596999999797788e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5839999996103415e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5699999984519764e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5970000006859664e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.513999999147586e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5000000015419346e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5699999984519764e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5549999989872276e-06]</msg>
<status status="PASS" starttime="20201029 12:44:45.403" endtime="20201029 12:44:45.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.398" endtime="20201029 12:44:45.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.023" endtime="20201029 12:44:45.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.022" endtime="20201029 12:44:45.406"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.413" endtime="20201029 12:44:45.426"></status>
</kw>
<msg timestamp="20201029 12:44:45.426" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.412" endtime="20201029 12:44:45.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.429" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.427" endtime="20201029 12:44:45.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.430" endtime="20201029 12:44:45.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.409" endtime="20201029 12:44:45.432"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.408" endtime="20201029 12:44:45.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.438" endtime="20201029 12:44:45.750"></status>
</kw>
<msg timestamp="20201029 12:44:45.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.182835389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.182836889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.437" endtime="20201029 12:44:45.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.764" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.182835389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.182836889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.756" endtime="20201029 12:44:45.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.766" endtime="20201029 12:44:45.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.435" endtime="20201029 12:44:45.768"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.433" endtime="20201029 12:44:45.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:45.773" level="INFO">${RESULT} = [{'diff': 1.5000000015419346e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5420000014643165e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5549999989872276e-...</msg>
<status status="PASS" starttime="20201029 12:44:45.769" endtime="20201029 12:44:45.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:45.777" level="INFO">${OVERHEAD} = {'diff': [1.5000000015419346e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5699999984519764e-06,...</msg>
<status status="PASS" starttime="20201029 12:44:45.774" endtime="20201029 12:44:45.777"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.781" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:45.780" endtime="20201029 12:44:45.782"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.784" level="INFO">VALUE: [1.5000000015419346e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5420000014643165e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.568999998369236e-06, 1.5699999984519764e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5420000014643165e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5970000006859664e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.59799999899235e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5970000006859664e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 12:44:45.782" endtime="20201029 12:44:45.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.778" endtime="20201029 12:44:45.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.406" endtime="20201029 12:44:45.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.406" endtime="20201029 12:44:45.785"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.794" endtime="20201029 12:44:45.806"></status>
</kw>
<msg timestamp="20201029 12:44:45.807" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.792" endtime="20201029 12:44:45.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:45.809" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:45.808" endtime="20201029 12:44:45.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.810" endtime="20201029 12:44:45.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.789" endtime="20201029 12:44:45.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.787" endtime="20201029 12:44:45.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:45.819" endtime="20201029 12:44:46.128"></status>
</kw>
<msg timestamp="20201029 12:44:46.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.557164764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.557166361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:45.817" endtime="20201029 12:44:46.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.142" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.557164764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.557166361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.133" endtime="20201029 12:44:46.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.143" endtime="20201029 12:44:46.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.815" endtime="20201029 12:44:46.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.813" endtime="20201029 12:44:46.146"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.150" level="INFO">${RESULT} = [{'diff': 1.5970000006859664e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5560000008463248e-0...</msg>
<status status="PASS" starttime="20201029 12:44:46.146" endtime="20201029 12:44:46.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:46.155" level="INFO">${OVERHEAD} = {'diff': [1.5970000006859664e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, ...</msg>
<status status="PASS" starttime="20201029 12:44:46.151" endtime="20201029 12:44:46.156"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.159" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:46.158" endtime="20201029 12:44:46.160"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.162" level="INFO">VALUE: [1.5970000006859664e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5829999995276012e-06, 1.527000000223211e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5980000007687067e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5409999996052193e-06]</msg>
<status status="PASS" starttime="20201029 12:44:46.161" endtime="20201029 12:44:46.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.156" endtime="20201029 12:44:46.163"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.786" endtime="20201029 12:44:46.164"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:45.786" endtime="20201029 12:44:46.164"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.171" endtime="20201029 12:44:46.184"></status>
</kw>
<msg timestamp="20201029 12:44:46.184" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.170" endtime="20201029 12:44:46.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.186" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.185" endtime="20201029 12:44:46.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.187" endtime="20201029 12:44:46.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.167" endtime="20201029 12:44:46.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.166" endtime="20201029 12:44:46.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.197" endtime="20201029 12:44:46.511"></status>
</kw>
<msg timestamp="20201029 12:44:46.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.926567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.926569542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.195" endtime="20201029 12:44:46.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.926567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.926569542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.516" endtime="20201029 12:44:46.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.525" endtime="20201029 12:44:46.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.192" endtime="20201029 12:44:46.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.191" endtime="20201029 12:44:46.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.532" level="INFO">${RESULT} = [{'diff': 1.555999999069968e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.4860000003835694e-0...</msg>
<status status="PASS" starttime="20201029 12:44:46.529" endtime="20201029 12:44:46.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:46.538" level="INFO">${OVERHEAD} = {'diff': [1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5560000008463248e-06,...</msg>
<status status="PASS" starttime="20201029 12:44:46.533" endtime="20201029 12:44:46.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.542" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:46.541" endtime="20201029 12:44:46.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.545" level="INFO">VALUE: [1.555999999069968e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.527000000223211e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5279999985295944e-06, 1.5690000001455928e-06, 1.5699999984519764e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5410000013815761e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5699999984519764e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5829999995276012e-06, 1.5560000008463248e-06]</msg>
<status status="PASS" starttime="20201029 12:44:46.543" endtime="20201029 12:44:46.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.539" endtime="20201029 12:44:46.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.165" endtime="20201029 12:44:46.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.164" endtime="20201029 12:44:46.546"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.554" endtime="20201029 12:44:46.566"></status>
</kw>
<msg timestamp="20201029 12:44:46.566" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.552" endtime="20201029 12:44:46.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.569" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.567" endtime="20201029 12:44:46.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.570" endtime="20201029 12:44:46.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.550" endtime="20201029 12:44:46.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.548" endtime="20201029 12:44:46.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.580" endtime="20201029 12:44:46.898"></status>
</kw>
<msg timestamp="20201029 12:44:46.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.294324458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.294326, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:46.579" endtime="20201029 12:44:46.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.294324458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.294326, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:44:46.903" endtime="20201029 12:44:46.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.913" endtime="20201029 12:44:46.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.575" endtime="20201029 12:44:46.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.573" endtime="20201029 12:44:46.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:46.920" level="INFO">${RESULT} = [{'diff': 1.5419999996879596e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.513999999147586e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.555999999069968e-06}...</msg>
<status status="PASS" starttime="20201029 12:44:46.917" endtime="20201029 12:44:46.920"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:46.925" level="INFO">${OVERHEAD} = {'diff': [1.5419999996879596e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:44:46.921" endtime="20201029 12:44:46.925"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.929" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:46.928" endtime="20201029 12:44:46.929"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.932" level="INFO">VALUE: [1.5419999996879596e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5420000014643165e-06, 1.5829999995276012e-06, 1.5560000008463248e-06, 1.5279999985295944e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5699999984519764e-06, 1.5560000008463248e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.514000000923943e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5560000008463248e-06, 1.5409999996052193e-06, 1.5699999984519764e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.5969999989096095e-06, 1.5839999996103415e-06, 1.555999999069968e-06, 1.555999999069968e-06]</msg>
<status status="PASS" starttime="20201029 12:44:46.930" endtime="20201029 12:44:46.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.926" endtime="20201029 12:44:46.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.547" endtime="20201029 12:44:46.934"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.546" endtime="20201029 12:44:46.934"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.942" endtime="20201029 12:44:46.954"></status>
</kw>
<msg timestamp="20201029 12:44:46.954" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.940" endtime="20201029 12:44:46.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:46.957" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:46.955" endtime="20201029 12:44:46.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.958" endtime="20201029 12:44:46.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.938" endtime="20201029 12:44:46.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.936" endtime="20201029 12:44:46.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:46.967" endtime="20201029 12:44:47.277"></status>
</kw>
<msg timestamp="20201029 12:44:47.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.666542222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.666543778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:46.966" endtime="20201029 12:44:47.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.666542222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.666543778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:47.282" endtime="20201029 12:44:47.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.292" endtime="20201029 12:44:47.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.963" endtime="20201029 12:44:47.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.961" endtime="20201029 12:44:47.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.298" level="INFO">${RESULT} = [{'diff': 1.555999999069968e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5410000013815761e-06}, {'diff': 1.5690000001455928e-06}...</msg>
<status status="PASS" starttime="20201029 12:44:47.295" endtime="20201029 12:44:47.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:47.304" level="INFO">${OVERHEAD} = {'diff': [1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1...</msg>
<status status="PASS" starttime="20201029 12:44:47.299" endtime="20201029 12:44:47.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.308" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:47.307" endtime="20201029 12:44:47.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.311" level="INFO">VALUE: [1.555999999069968e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5410000013815761e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.5549999989872276e-06, 1.5969999989096095e-06, 1.5839999996103415e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5970000006859664e-06, 1.4860000003835694e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.568999998369236e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5839999996103415e-06, 1.4719999992252042e-06, 1.555999999069968e-06, 1.568999998369236e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5699999984519764e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5699999984519764e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201029 12:44:47.309" endtime="20201029 12:44:47.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.305" endtime="20201029 12:44:47.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.935" endtime="20201029 12:44:47.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:46.934" endtime="20201029 12:44:47.312"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.320" endtime="20201029 12:44:47.331"></status>
</kw>
<msg timestamp="20201029 12:44:47.331" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.318" endtime="20201029 12:44:47.332"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.334" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.332" endtime="20201029 12:44:47.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.335" endtime="20201029 12:44:47.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.316" endtime="20201029 12:44:47.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.314" endtime="20201029 12:44:47.338"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.344" endtime="20201029 12:44:47.666"></status>
</kw>
<msg timestamp="20201029 12:44:47.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.043881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.043883403, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 12:44:47.343" endtime="20201029 12:44:47.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 10.043881847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 10.043883403, 'source': 'DUT_IC', 'event': 'F...</msg>
<status status="PASS" starttime="20201029 12:44:47.671" endtime="20201029 12:44:47.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.681" endtime="20201029 12:44:47.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.340" endtime="20201029 12:44:47.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.338" endtime="20201029 12:44:47.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:47.688" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.555999999069968e-0...</msg>
<status status="PASS" starttime="20201029 12:44:47.684" endtime="20201029 12:44:47.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:47.693" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5550000007635845e-06,...</msg>
<status status="PASS" starttime="20201029 12:44:47.689" endtime="20201029 12:44:47.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.697" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201029 12:44:47.696" endtime="20201029 12:44:47.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:47.699" level="INFO">VALUE: [1.5560000008463248e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.5690000001455928e-06, 1.5279999985295944e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5840000013866984e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5699999984519764e-06, 1.5549999989872276e-06, 1.5699999984519764e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5550000007635845e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.6110000000679747e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5699999984519764e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.568999998369236e-06]</msg>
<status status="PASS" starttime="20201029 12:44:47.698" endtime="20201029 12:44:47.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.693" endtime="20201029 12:44:47.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.313" endtime="20201029 12:44:47.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.313" endtime="20201029 12:44:47.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:39.797" endtime="20201029 12:44:47.701"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:36.703" endtime="20201029 12:44:47.701" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:47.708" endtime="20201029 12:44:47.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.707" endtime="20201029 12:44:47.728"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:47.744" endtime="20201029 12:44:50.765"></status>
</kw>
<msg timestamp="20201029 12:44:50.766" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:47.743" endtime="20201029 12:44:50.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.769" endtime="20201029 12:44:50.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.778" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:50.774" endtime="20201029 12:44:50.778"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:47.740" endtime="20201029 12:44:50.780"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:47.738" endtime="20201029 12:44:50.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.736" endtime="20201029 12:44:50.782"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:50.789" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:50.788" endtime="20201029 12:44:50.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.783" endtime="20201029 12:44:50.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.735" endtime="20201029 12:44:50.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.735" endtime="20201029 12:44:50.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.793" endtime="20201029 12:44:50.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.731" endtime="20201029 12:44:50.797"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.729" endtime="20201029 12:44:50.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:47.706" endtime="20201029 12:44:50.798"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.816" endtime="20201029 12:44:50.839"></status>
</kw>
<msg timestamp="20201029 12:44:50.840" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.812" endtime="20201029 12:44:50.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.847" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:50.843" endtime="20201029 12:44:50.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.850" endtime="20201029 12:44:50.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.807" endtime="20201029 12:44:50.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.803" endtime="20201029 12:44:50.857"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.863" endtime="20201029 12:44:50.867"></status>
</kw>
<msg timestamp="20201029 12:44:50.868" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:44:50.859" endtime="20201029 12:44:50.869"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.879" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:44:50.876" endtime="20201029 12:44:50.880"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.887" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:44:50.882" endtime="20201029 12:44:50.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.870" endtime="20201029 12:44:50.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.899" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:44:50.897" endtime="20201029 12:44:50.900"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:50.903" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:44:50.902" endtime="20201029 12:44:50.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.891" endtime="20201029 12:44:50.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:50.910" endtime="20201029 12:44:51.205"></status>
</kw>
<msg timestamp="20201029 12:44:51.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098998403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099003361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:50.909" endtime="20201029 12:44:51.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.217" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098998403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099003361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:51.209" endtime="20201029 12:44:51.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.218" endtime="20201029 12:44:51.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.906" endtime="20201029 12:44:51.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.905" endtime="20201029 12:44:51.221"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:51.225" level="INFO">${RESULT} = [{'diff': 4.9579999998883295e-06}, {'diff': 5.082999999572735e-06}, {'diff': 5.0690000001907265e-06}, {'diff': 5.05600000000328e-06}, {'diff': 5.0690000001907265e-06}, {'diff': 5.069999999829378e-06},...</msg>
<status status="PASS" starttime="20201029 12:44:51.221" endtime="20201029 12:44:51.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:51.234" level="INFO">${OVERHEAD} = {'diff': [4.9579999998883295e-06, 5.082999999572735e-06, 5.0690000001907265e-06, 5.05600000000328e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.097000000287011e-06, 5.069999999829378e-06, 5.08...</msg>
<status status="PASS" starttime="20201029 12:44:51.226" endtime="20201029 12:44:51.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.240" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201029 12:44:51.239" endtime="20201029 12:44:51.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:51.243" level="INFO">VALUE: [4.9579999998883295e-06, 5.082999999572735e-06, 5.0690000001907265e-06, 5.05600000000328e-06, 5.0690000001907265e-06, 5.069999999829378e-06, 5.097000000287011e-06, 5.069999999829378e-06, 5.083000000016824e-06, 5.083000000016824e-06, 5.0690000001907265e-06, 5.05600000000328e-06, 5.041999999733093e-06, 5.083000000016824e-06, 5.05499999992054e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.096999999842922e-06, 5.0690000001907265e-06, 5.0690000001907265e-06, 5.083000000016824e-06, 5.0840000000995644e-06, 5.068999999746637e-06, 5.0690000001907265e-06, 5.027999999906996e-06, 5.0840000000995644e-06, 5.068999999746637e-06, 5.05600000000328e-06, 5.083000000016824e-06, 5.05499999992054e-06, 5.055000000364629e-06, 5.028000000351085e-06, 5.083000000016824e-06, 5.083000000016824e-06, 5.083000000016824e-06, 5.0840000000995644e-06, 5.069999999829378e-06, 5.070000000273467e-06, 5.083000000016824e-06, 5.082999999572735e-06, 5.0690000001907265e-06, 5.05499999992054e-06, 5.0840000000995644e-06, 5.068999999746637e-06, 5.0690000001907265e-06, 5.083000000016824e-06, 5.069999999829378e-06, 5.15300000003549e-06, 5.083000000016824e-06, 5.110999999669019e-06]</msg>
<status status="PASS" starttime="20201029 12:44:51.241" endtime="20201029 12:44:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.235" endtime="20201029 12:44:51.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:50.799" endtime="20201029 12:44:51.244"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:47.703" endtime="20201029 12:44:51.244" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:51.251" endtime="20201029 12:44:51.271"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.250" endtime="20201029 12:44:51.271"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:51.285" endtime="20201029 12:44:54.308"></status>
</kw>
<msg timestamp="20201029 12:44:54.309" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:51.283" endtime="20201029 12:44:54.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.315" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.312" endtime="20201029 12:44:54.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.322" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:54.317" endtime="20201029 12:44:54.323"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:51.280" endtime="20201029 12:44:54.324"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:51.278" endtime="20201029 12:44:54.325"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.276" endtime="20201029 12:44:54.326"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:54.334" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:54.333" endtime="20201029 12:44:54.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.328" endtime="20201029 12:44:54.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.276" endtime="20201029 12:44:54.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.275" endtime="20201029 12:44:54.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.338" endtime="20201029 12:44:54.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.274" endtime="20201029 12:44:54.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.272" endtime="20201029 12:44:54.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:51.248" endtime="20201029 12:44:54.344"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.364" endtime="20201029 12:44:54.430"></status>
</kw>
<msg timestamp="20201029 12:44:54.431" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.358" endtime="20201029 12:44:54.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.433" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.432" endtime="20201029 12:44:54.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.434" endtime="20201029 12:44:54.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.353" endtime="20201029 12:44:54.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.349" endtime="20201029 12:44:54.437"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.439" endtime="20201029 12:44:54.441"></status>
</kw>
<msg timestamp="20201029 12:44:54.441" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:44:54.438" endtime="20201029 12:44:54.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.445" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:44:54.444" endtime="20201029 12:44:54.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.447" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:44:54.446" endtime="20201029 12:44:54.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.442" endtime="20201029 12:44:54.448"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.452" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:44:54.451" endtime="20201029 12:44:54.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.454" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:44:54.453" endtime="20201029 12:44:54.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.448" endtime="20201029 12:44:54.455"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.462" endtime="20201029 12:44:54.762"></status>
</kw>
<msg timestamp="20201029 12:44:54.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105504889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105538444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.460" endtime="20201029 12:44:54.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105504889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105538444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:54.766" endtime="20201029 12:44:54.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.775" endtime="20201029 12:44:54.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.457" endtime="20201029 12:44:54.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.456" endtime="20201029 12:44:54.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:54.781" level="INFO">${RESULT} = [{'diff': 3.355499999990741e-05}, {'diff': 3.365300000002236e-05}, {'diff': 3.361100000009998e-05}, {'diff': 3.366599999976572e-05}, {'diff': 3.363900000019626e-05}, {'diff': 3.365199999993962e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:54.778" endtime="20201029 12:44:54.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:54.786" level="INFO">${OVERHEAD} = {'diff': [3.355499999990741e-05, 3.365300000002236e-05, 3.361100000009998e-05, 3.366599999976572e-05, 3.363900000019626e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.365...</msg>
<status status="PASS" starttime="20201029 12:44:54.782" endtime="20201029 12:44:54.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.791" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201029 12:44:54.790" endtime="20201029 12:44:54.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:54.794" level="INFO">VALUE: [3.355499999990741e-05, 3.365300000002236e-05, 3.361100000009998e-05, 3.366599999976572e-05, 3.363900000019626e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.3681000000118644e-05, 3.365300000002236e-05, 3.3680000000035903e-05, 3.363900000019626e-05, 3.366699999984846e-05, 3.363900000019626e-05, 3.365199999993962e-05, 3.365300000002236e-05, 3.3666000000209806e-05, 3.363899999975217e-05, 3.365300000002236e-05, 3.3667000000292546e-05, 3.363899999975217e-05, 3.366699999984846e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.366699999984846e-05, 3.365300000002236e-05, 3.365199999993962e-05, 3.365199999993962e-05, 3.366699999984846e-05, 3.359700000027388e-05, 3.3667000000292546e-05, 3.363900000019626e-05, 3.365199999993962e-05, 3.365199999993962e-05, 3.366699999984846e-05, 3.3680000000035903e-05, 3.366599999976572e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.365300000002236e-05, 3.3667000000292546e-05, 3.363900000019626e-05, 3.365300000002236e-05, 3.3679999999591814e-05, 3.365299999957827e-05, 3.3667000000292546e-05, 3.361100000009998e-05, 3.365199999993962e-05, 3.3680000000035903e-05, 3.373699999986712e-05, 3.365300000002236e-05]</msg>
<status status="PASS" starttime="20201029 12:44:54.792" endtime="20201029 12:44:54.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.787" endtime="20201029 12:44:54.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.345" endtime="20201029 12:44:54.795"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:51.246" endtime="20201029 12:44:54.796" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:54.803" endtime="20201029 12:44:54.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.801" endtime="20201029 12:44:54.823"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:54.837" endtime="20201029 12:44:57.859"></status>
</kw>
<msg timestamp="20201029 12:44:57.860" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:54.835" endtime="20201029 12:44:57.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.866" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.862" endtime="20201029 12:44:57.866"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:44:57.872" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:44:57.868" endtime="20201029 12:44:57.873"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:54.832" endtime="20201029 12:44:57.874"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:54.829" endtime="20201029 12:44:57.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.828" endtime="20201029 12:44:57.876"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:44:57.884" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:44:57.883" endtime="20201029 12:44:57.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.878" endtime="20201029 12:44:57.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.827" endtime="20201029 12:44:57.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.827" endtime="20201029 12:44:57.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.890" endtime="20201029 12:44:57.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.825" endtime="20201029 12:44:57.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.824" endtime="20201029 12:44:57.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:54.800" endtime="20201029 12:44:57.896"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:57.915" endtime="20201029 12:44:58.109"></status>
</kw>
<msg timestamp="20201029 12:44:58.110" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:57.912" endtime="20201029 12:44:58.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.113" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.111" endtime="20201029 12:44:58.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.114" endtime="20201029 12:44:58.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.906" endtime="20201029 12:44:58.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.901" endtime="20201029 12:44:58.116"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.119" endtime="20201029 12:44:58.120"></status>
</kw>
<msg timestamp="20201029 12:44:58.121" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:44:58.117" endtime="20201029 12:44:58.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.125" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:44:58.124" endtime="20201029 12:44:58.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.127" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:44:58.126" endtime="20201029 12:44:58.127"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.121" endtime="20201029 12:44:58.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.132" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:44:58.131" endtime="20201029 12:44:58.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.135" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:44:58.134" endtime="20201029 12:44:58.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.129" endtime="20201029 12:44:58.136"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.142" endtime="20201029 12:44:58.444"></status>
</kw>
<msg timestamp="20201029 12:44:58.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107246389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107310306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.141" endtime="20201029 12:44:58.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.456" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107246389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107310306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:44:58.449" endtime="20201029 12:44:58.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.457" endtime="20201029 12:44:58.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.138" endtime="20201029 12:44:58.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.136" endtime="20201029 12:44:58.460"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:44:58.465" level="INFO">${RESULT} = [{'diff': 6.391699999985789e-05}, {'diff': 6.358300000020023e-05}, {'diff': 6.359700000002633e-05}, {'diff': 6.358399999983888e-05}, {'diff': 6.354099999983376e-05}, {'diff': 6.359700000002633e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:44:58.461" endtime="20201029 12:44:58.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:44:58.469" level="INFO">${OVERHEAD} = {'diff': [6.391699999985789e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.358399999983888e-05, 6.354099999983376e-05, 6.359700000002633e-05, 6.362500000012261e-05, 6.356899999993004e-05, 6.3610...</msg>
<status status="PASS" starttime="20201029 12:44:58.466" endtime="20201029 12:44:58.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.474" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201029 12:44:58.473" endtime="20201029 12:44:58.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:44:58.477" level="INFO">VALUE: [6.391699999985789e-05, 6.358300000020023e-05, 6.359700000002633e-05, 6.358399999983888e-05, 6.354099999983376e-05, 6.359700000002633e-05, 6.362500000012261e-05, 6.356899999993004e-05, 6.361099999985242e-05, 6.358300000020023e-05, 6.359800000010907e-05, 6.358300000020023e-05, 6.361099999985242e-05, 6.358299999975614e-05, 6.35699999995687e-05, 6.358299999975614e-05, 6.357000000001278e-05, 6.359700000002633e-05, 6.358399999983888e-05, 6.357000000001278e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.363800000031006e-05, 6.357000000001278e-05, 6.358399999983888e-05, 6.358300000020023e-05, 6.356899999993004e-05, 6.361099999985242e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.359700000002633e-05, 6.359699999958224e-05, 6.357000000001278e-05, 6.358399999983888e-05, 6.358400000028297e-05, 6.357000000001278e-05, 6.356899999993004e-05, 6.356900000037413e-05, 6.358299999975614e-05, 6.359699999958224e-05, 6.359700000002633e-05, 6.356899999993004e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.359700000002633e-05, 6.35419999999165e-05, 6.359700000002633e-05, 6.358299999975614e-05, 6.359800000010907e-05, 6.363899999994871e-05]</msg>
<status status="PASS" starttime="20201029 12:44:58.475" endtime="20201029 12:44:58.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.470" endtime="20201029 12:44:58.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:57.898" endtime="20201029 12:44:58.478"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:54.797" endtime="20201029 12:44:58.479" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:44:58.486" endtime="20201029 12:44:58.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.484" endtime="20201029 12:44:58.506"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:44:58.520" endtime="20201029 12:45:01.543"></status>
</kw>
<msg timestamp="20201029 12:45:01.544" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:44:58.518" endtime="20201029 12:45:01.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.547" endtime="20201029 12:45:01.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.557" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:01.553" endtime="20201029 12:45:01.558"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:58.515" endtime="20201029 12:45:01.559"></status>
</kw>
<status status="FAIL" starttime="20201029 12:44:58.512" endtime="20201029 12:45:01.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.511" endtime="20201029 12:45:01.561"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:01.569" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:01.567" endtime="20201029 12:45:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.563" endtime="20201029 12:45:01.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.510" endtime="20201029 12:45:01.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.510" endtime="20201029 12:45:01.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.573" endtime="20201029 12:45:01.576"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.508" endtime="20201029 12:45:01.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.506" endtime="20201029 12:45:01.578"></status>
</kw>
<status status="PASS" starttime="20201029 12:44:58.483" endtime="20201029 12:45:01.579"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.598" endtime="20201029 12:45:01.618"></status>
</kw>
<msg timestamp="20201029 12:45:01.618" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.594" endtime="20201029 12:45:01.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.621" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:01.619" endtime="20201029 12:45:01.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.622" endtime="20201029 12:45:01.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.588" endtime="20201029 12:45:01.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.584" endtime="20201029 12:45:01.625"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.627" endtime="20201029 12:45:01.629"></status>
</kw>
<msg timestamp="20201029 12:45:01.629" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:01.626" endtime="20201029 12:45:01.629"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.633" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:01.632" endtime="20201029 12:45:01.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.635" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:01.635" endtime="20201029 12:45:01.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.630" endtime="20201029 12:45:01.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.640" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:01.639" endtime="20201029 12:45:01.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.643" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:01.642" endtime="20201029 12:45:01.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.637" endtime="20201029 12:45:01.644"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.652" endtime="20201029 12:45:01.947"></status>
</kw>
<msg timestamp="20201029 12:45:01.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104001986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104003278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.650" endtime="20201029 12:45:01.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104001986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104003278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:01.951" endtime="20201029 12:45:01.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:01.960" endtime="20201029 12:45:01.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.646" endtime="20201029 12:45:01.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.645" endtime="20201029 12:45:01.963"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:01.967" level="INFO">${RESULT} = [{'diff': 1.2919999998750598e-06}, {'diff': 1.2769999999662218e-06}, {'diff': 1.319000000332693e-06}, {'diff': 1.3189999998886037e-06}, {'diff': 1.2909999997923194e-06}, {'diff': 1.319999999971344e-06...</msg>
<status status="PASS" starttime="20201029 12:45:01.964" endtime="20201029 12:45:01.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:01.971" level="INFO">${OVERHEAD} = {'diff': [1.2919999998750598e-06, 1.2769999999662218e-06, 1.319000000332693e-06, 1.3189999998886037e-06, 1.2909999997923194e-06, 1.319999999971344e-06, 1.2909999997923194e-06, 1.2919999998750598e-06, ...</msg>
<status status="PASS" starttime="20201029 12:45:01.968" endtime="20201029 12:45:01.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.976" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201029 12:45:01.975" endtime="20201029 12:45:01.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:01.978" level="INFO">VALUE: [1.2919999998750598e-06, 1.2769999999662218e-06, 1.319000000332693e-06, 1.3189999998886037e-06, 1.2909999997923194e-06, 1.319999999971344e-06, 1.2909999997923194e-06, 1.2919999998750598e-06, 1.2910000002364086e-06, 1.346999999984888e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.2780000000489622e-06, 1.3050000000625062e-06, 1.2919999998750598e-06, 1.319999999971344e-06, 1.3059999997011573e-06, 1.3050000000625062e-06, 1.3060000001452465e-06, 1.3750000000811724e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.319000000332693e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.3060000001452465e-06, 1.277999999604873e-06, 1.3060000001452465e-06, 1.2919999998750598e-06, 1.2769999999662218e-06, 1.3050000000625062e-06, 1.3050000000625062e-06, 1.2919999998750598e-06, 1.2780000000489622e-06, 1.2780000000489622e-06, 1.319999999971344e-06, 1.2640000002228646e-06, 1.292000000319149e-06, 1.2919999998750598e-06, 1.3060000001452465e-06, 1.2919999998750598e-06, 1.2910000002364086e-06, 1.2769999999662218e-06, 1.2780000000489622e-06, 1.2910000002364086e-06, 1.2919999998750598e-06, 1.3050000000625062e-06, 1.2769999999662218e-06, 1.3059999997011573e-06, 1.2780000000489622e-06]</msg>
<status status="PASS" starttime="20201029 12:45:01.977" endtime="20201029 12:45:01.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.972" endtime="20201029 12:45:01.980"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.580" endtime="20201029 12:45:01.981"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:44:58.480" endtime="20201029 12:45:01.982" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:01.994" endtime="20201029 12:45:02.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.991" endtime="20201029 12:45:02.016"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:02.037" endtime="20201029 12:45:05.060"></status>
</kw>
<msg timestamp="20201029 12:45:05.061" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:02.034" endtime="20201029 12:45:05.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.066" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.063" endtime="20201029 12:45:05.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.073" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:05.069" endtime="20201029 12:45:05.073"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:02.031" endtime="20201029 12:45:05.075"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:02.026" endtime="20201029 12:45:05.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.025" endtime="20201029 12:45:05.077"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:05.085" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:05.083" endtime="20201029 12:45:05.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.079" endtime="20201029 12:45:05.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.024" endtime="20201029 12:45:05.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.022" endtime="20201029 12:45:05.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.089" endtime="20201029 12:45:05.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.020" endtime="20201029 12:45:05.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:02.017" endtime="20201029 12:45:05.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:01.989" endtime="20201029 12:45:05.095"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.114" endtime="20201029 12:45:05.187"></status>
</kw>
<msg timestamp="20201029 12:45:05.188" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.110" endtime="20201029 12:45:05.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.193" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.190" endtime="20201029 12:45:05.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.196" endtime="20201029 12:45:05.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.104" endtime="20201029 12:45:05.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.099" endtime="20201029 12:45:05.202"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.206" endtime="20201029 12:45:05.212"></status>
</kw>
<msg timestamp="20201029 12:45:05.213" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:05.203" endtime="20201029 12:45:05.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.222" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:05.219" endtime="20201029 12:45:05.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.226" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:05.224" endtime="20201029 12:45:05.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.214" endtime="20201029 12:45:05.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.237" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:05.234" endtime="20201029 12:45:05.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.241" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:05.239" endtime="20201029 12:45:05.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.229" endtime="20201029 12:45:05.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.258" endtime="20201029 12:45:05.566"></status>
</kw>
<msg timestamp="20201029 12:45:05.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.11293525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.112943583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:05.255" endtime="20201029 12:45:05.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.11293525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.112943583, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:05.571" endtime="20201029 12:45:05.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.579" endtime="20201029 12:45:05.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.249" endtime="20201029 12:45:05.581"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.245" endtime="20201029 12:45:05.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:05.586" level="INFO">${RESULT} = [{'diff': 8.332999999804969e-06}, {'diff': 8.305999999791425e-06}, {'diff': 8.360999999901253e-06}, {'diff': 8.332999999804969e-06}, {'diff': 8.290999999882587e-06}, {'diff': 8.348000000157896e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:05.582" endtime="20201029 12:45:05.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:05.591" level="INFO">${OVERHEAD} = {'diff': [8.332999999804969e-06, 8.305999999791425e-06, 8.360999999901253e-06, 8.332999999804969e-06, 8.290999999882587e-06, 8.348000000157896e-06, 8.27799999969514e-06, 8.306000000235514e-06, 8.27800...</msg>
<status status="PASS" starttime="20201029 12:45:05.587" endtime="20201029 12:45:05.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.595" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201029 12:45:05.594" endtime="20201029 12:45:05.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:05.598" level="INFO">VALUE: [8.332999999804969e-06, 8.305999999791425e-06, 8.360999999901253e-06, 8.332999999804969e-06, 8.290999999882587e-06, 8.348000000157896e-06, 8.27799999969514e-06, 8.306000000235514e-06, 8.27800000013923e-06, 8.290999999882587e-06, 8.305000000152774e-06, 8.305999999791425e-06, 8.291999999965327e-06, 8.292000000409416e-06, 8.332999999804969e-06, 8.291000000326676e-06, 8.306000000235514e-06, 8.305999999791425e-06, 8.320000000061611e-06, 8.291999999965327e-06, 8.290999999882587e-06, 8.320000000061611e-06, 8.306000000235514e-06, 8.304999999708684e-06, 8.291999999965327e-06, 8.27800000013923e-06, 8.291999999965327e-06, 8.320000000061611e-06, 8.291999999965327e-06, 8.291999999965327e-06, 8.304999999708684e-06, 8.27700000005649e-06, 8.291000000326676e-06, 8.27800000013923e-06, 8.27800000013923e-06, 8.27800000013923e-06, 8.306000000235514e-06, 8.347000000075155e-06, 8.305999999791425e-06, 8.264000000313132e-06, 8.27800000013923e-06, 8.291999999965327e-06, 8.292000000409416e-06, 8.304999999708684e-06, 8.291000000326676e-06, 8.290999999882587e-06, 8.305999999791425e-06, 8.332999999804969e-06, 8.320000000061611e-06, 8.291999999965327e-06]</msg>
<status status="PASS" starttime="20201029 12:45:05.597" endtime="20201029 12:45:05.598"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.592" endtime="20201029 12:45:05.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.096" endtime="20201029 12:45:05.599"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:01.986" endtime="20201029 12:45:05.600" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:05.607" endtime="20201029 12:45:05.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.605" endtime="20201029 12:45:05.627"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:05.650" endtime="20201029 12:45:08.671"></status>
</kw>
<msg timestamp="20201029 12:45:08.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:05.647" endtime="20201029 12:45:08.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.674" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.673" endtime="20201029 12:45:08.674"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.677" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:08.675" endtime="20201029 12:45:08.677"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:05.643" endtime="20201029 12:45:08.678"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:05.639" endtime="20201029 12:45:08.679"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.637" endtime="20201029 12:45:08.679"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:08.683" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:08.682" endtime="20201029 12:45:08.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.680" endtime="20201029 12:45:08.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.635" endtime="20201029 12:45:08.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.634" endtime="20201029 12:45:08.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.685" endtime="20201029 12:45:08.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.631" endtime="20201029 12:45:08.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.628" endtime="20201029 12:45:08.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:05.604" endtime="20201029 12:45:08.687"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.700" endtime="20201029 12:45:08.894"></status>
</kw>
<msg timestamp="20201029 12:45:08.894" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.698" endtime="20201029 12:45:08.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.897" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:08.896" endtime="20201029 12:45:08.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.898" endtime="20201029 12:45:08.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.695" endtime="20201029 12:45:08.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.690" endtime="20201029 12:45:08.901"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.903" endtime="20201029 12:45:08.905"></status>
</kw>
<msg timestamp="20201029 12:45:08.905" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201029 12:45:08.902" endtime="20201029 12:45:08.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.909" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201029 12:45:08.908" endtime="20201029 12:45:08.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.912" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201029 12:45:08.911" endtime="20201029 12:45:08.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.906" endtime="20201029 12:45:08.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.916" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201029 12:45:08.915" endtime="20201029 12:45:08.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:08.919" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201029 12:45:08.918" endtime="20201029 12:45:08.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.913" endtime="20201029 12:45:08.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:08.927" endtime="20201029 12:45:09.229"></status>
</kw>
<msg timestamp="20201029 12:45:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.087181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.08719675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:08.925" endtime="20201029 12:45:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.087181306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.08719675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:09.233" endtime="20201029 12:45:09.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.241" endtime="20201029 12:45:09.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.922" endtime="20201029 12:45:09.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.920" endtime="20201029 12:45:09.244"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:09.248" level="INFO">${RESULT} = [{'diff': 1.5443999999753544e-05}, {'diff': 1.5444000000197633e-05}, {'diff': 1.5444000000197633e-05}, {'diff': 1.545900000010647e-05}, {'diff': 1.5431000000010187e-05}, {'diff': 1.5431000000010187e-0...</msg>
<status status="PASS" starttime="20201029 12:45:09.245" endtime="20201029 12:45:09.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201029 12:45:09.253" level="INFO">${OVERHEAD} = {'diff': [1.5443999999753544e-05, 1.5444000000197633e-05, 1.5444000000197633e-05, 1.545900000010647e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5486000000120015e-05, 1.5388999999643715e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:09.249" endtime="20201029 12:45:09.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.257" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201029 12:45:09.256" endtime="20201029 12:45:09.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:09.260" level="INFO">VALUE: [1.5443999999753544e-05, 1.5444000000197633e-05, 1.5444000000197633e-05, 1.545900000010647e-05, 1.5431000000010187e-05, 1.5431000000010187e-05, 1.5486000000120015e-05, 1.5388999999643715e-05, 1.541700000018409e-05, 1.5444999999836284e-05, 1.547299999993257e-05, 1.5443999999753544e-05, 1.5444999999836284e-05, 1.5443999999753544e-05, 1.5444999999836284e-05, 1.5431000000010187e-05, 1.5458999999662382e-05, 1.547299999993257e-05, 1.545800000002373e-05, 1.5499999999946112e-05, 1.545800000002373e-05, 1.541699999974e-05, 1.5444000000197633e-05, 1.5443999999753544e-05, 1.5431000000010187e-05, 1.5445000000280373e-05, 1.5431000000010187e-05, 1.5443999999753544e-05, 1.5444000000197633e-05, 1.5471999999849828e-05, 1.5444000000197633e-05, 1.545800000002373e-05, 1.545800000002373e-05, 1.5429999999927446e-05, 1.5444000000197633e-05, 1.545800000002373e-05, 1.5444000000197633e-05, 1.536099999999152e-05, 1.5443999999753544e-05, 1.545800000002373e-05, 1.5444999999836284e-05, 1.536200000007426e-05, 1.5444999999836284e-05, 1.5444000000197633e-05, 1.5431000000010187e-05, 1.5443999999753544e-05, 1.5402999999913902e-05, 1.5401999999831162e-05, 1.5431000000010187e-05, 1.5430000000371535e-05]</msg>
<status status="PASS" starttime="20201029 12:45:09.258" endtime="20201029 12:45:09.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.254" endtime="20201029 12:45:09.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:08.688" endtime="20201029 12:45:09.261"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:05.602" endtime="20201029 12:45:09.262" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:09.268" endtime="20201029 12:45:09.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.267" endtime="20201029 12:45:09.288"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:09.301" endtime="20201029 12:45:12.323"></status>
</kw>
<msg timestamp="20201029 12:45:12.324" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:09.300" endtime="20201029 12:45:12.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.330" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:12.327" endtime="20201029 12:45:12.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.338" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:12.332" endtime="20201029 12:45:12.338"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:09.297" endtime="20201029 12:45:12.340"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:09.295" endtime="20201029 12:45:12.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.294" endtime="20201029 12:45:12.342"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:12.349" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:12.348" endtime="20201029 12:45:12.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.343" endtime="20201029 12:45:12.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.293" endtime="20201029 12:45:12.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.292" endtime="20201029 12:45:12.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:12.353" endtime="20201029 12:45:12.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.291" endtime="20201029 12:45:12.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.289" endtime="20201029 12:45:12.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:09.266" endtime="20201029 12:45:12.359"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:12.366" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:12.382" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:13.575" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:12.363" endtime="20201029 12:45:13.576"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.582" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:45:13.579" endtime="20201029 12:45:16.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:12.360" endtime="20201029 12:45:16.584"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.591" endtime="20201029 12:45:16.613"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.587" endtime="20201029 12:45:16.614"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.631" endtime="20201029 12:45:16.642"></status>
</kw>
<msg timestamp="20201029 12:45:16.643" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.628" endtime="20201029 12:45:16.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.648" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:16.645" endtime="20201029 12:45:16.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.650" endtime="20201029 12:45:16.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.622" endtime="20201029 12:45:16.655"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.618" endtime="20201029 12:45:16.656"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.669" endtime="20201029 12:45:16.963"></status>
</kw>
<msg timestamp="20201029 12:45:16.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029422306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.666" endtime="20201029 12:45:16.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029417264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029422306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:16.967" endtime="20201029 12:45:16.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:16.976" endtime="20201029 12:45:16.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.661" endtime="20201029 12:45:16.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.657" endtime="20201029 12:45:16.979"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:16.983" level="INFO">${PHILIP_RES} = [{'diff': 5.042000000000241e-06}, {'diff': 4.971999999998922e-06}, {'diff': 4.971999999998922e-06}, {'diff': 4.930000000000212e-06}, {'diff': 4.943999999999782e-06}, {'diff': 4.915999999997173e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:16.979" endtime="20201029 12:45:16.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:16.988" level="INFO">${RESULT} = {'diff': [5.042000000000241e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.915999999997173e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.9300...</msg>
<status status="PASS" starttime="20201029 12:45:16.984" endtime="20201029 12:45:16.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.992" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:16.991" endtime="20201029 12:45:16.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:16.995" level="INFO">VALUE: [5.042000000000241e-06, 4.971999999998922e-06, 4.971999999998922e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.915999999997173e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.930999999999686e-06, 4.973000000001865e-06, 4.875000000001406e-06, 4.917000000000116e-06, 4.903000000000546e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.943999999999782e-06, 4.917000000000116e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.943999999999782e-06, 4.930000000000212e-06, 4.9449999999992555e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.917000000000116e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.930999999999686e-06, 4.971999999998922e-06, 4.917000000000116e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.916000000000642e-06, 4.930000000000212e-06, 4.930000000000212e-06, 4.943999999999782e-06, 4.916000000000642e-06, 4.971999999998922e-06, 4.930999999999686e-06, 4.931000000003155e-06, 4.875000000001406e-06, 4.9449999999992555e-06]</msg>
<status status="PASS" starttime="20201029 12:45:16.993" endtime="20201029 12:45:16.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.989" endtime="20201029 12:45:16.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.615" endtime="20201029 12:45:16.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.586" endtime="20201029 12:45:16.996"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:16.999" endtime="20201029 12:45:17.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.997" endtime="20201029 12:45:17.019"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.027" endtime="20201029 12:45:17.037"></status>
</kw>
<msg timestamp="20201029 12:45:17.037" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.025" endtime="20201029 12:45:17.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.041" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.039" endtime="20201029 12:45:17.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.042" endtime="20201029 12:45:17.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.023" endtime="20201029 12:45:17.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.021" endtime="20201029 12:45:17.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.057" endtime="20201029 12:45:17.347"></status>
</kw>
<msg timestamp="20201029 12:45:17.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016601375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016610708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.055" endtime="20201029 12:45:17.351"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016601375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016610708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.352" endtime="20201029 12:45:17.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.360" endtime="20201029 12:45:17.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.049" endtime="20201029 12:45:17.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.047" endtime="20201029 12:45:17.363"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:17.367" level="INFO">${PHILIP_RES} = [{'diff': 9.332999999996788e-06}, {'diff': 9.180000000000993e-06}, {'diff': 9.235999999999273e-06}, {'diff': 9.181000000000467e-06}, {'diff': 9.167000000000897e-06}, {'diff': 9.166999999997427e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:17.364" endtime="20201029 12:45:17.367"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.371" level="INFO">${RESULT} = {'diff': [9.332999999996788e-06, 9.180000000000993e-06, 9.235999999999273e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.166999999997427e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.1669...</msg>
<status status="PASS" starttime="20201029 12:45:17.368" endtime="20201029 12:45:17.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.375" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:17.374" endtime="20201029 12:45:17.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.378" level="INFO">VALUE: [9.332999999996788e-06, 9.180000000000993e-06, 9.235999999999273e-06, 9.181000000000467e-06, 9.167000000000897e-06, 9.166999999997427e-06, 9.194000000000563e-06, 9.194000000000563e-06, 9.166999999997427e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.179999999997523e-06, 9.194000000000563e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.194000000000563e-06, 9.151999999998384e-06, 9.124999999998717e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.166000000001423e-06, 9.165999999997954e-06, 9.166000000001423e-06, 9.194000000000563e-06, 9.207999999996663e-06, 9.124999999998717e-06, 9.179999999997523e-06, 9.166000000001423e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.194000000000563e-06, 9.166000000001423e-06, 9.138999999998287e-06, 9.221999999999703e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.179999999997523e-06, 9.180000000000993e-06, 9.180000000000993e-06, 9.194000000000563e-06, 9.153000000001327e-06]</msg>
<status status="PASS" starttime="20201029 12:45:17.377" endtime="20201029 12:45:17.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.372" endtime="20201029 12:45:17.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.019" endtime="20201029 12:45:17.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.997" endtime="20201029 12:45:17.379"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.382" endtime="20201029 12:45:17.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.380" endtime="20201029 12:45:17.402"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.410" endtime="20201029 12:45:17.421"></status>
</kw>
<msg timestamp="20201029 12:45:17.422" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.408" endtime="20201029 12:45:17.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.427" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.425" endtime="20201029 12:45:17.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.430" endtime="20201029 12:45:17.433"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.406" endtime="20201029 12:45:17.434"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.404" endtime="20201029 12:45:17.435"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.448" endtime="20201029 12:45:17.743"></status>
</kw>
<msg timestamp="20201029 12:45:17.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017422306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.445" endtime="20201029 12:45:17.746"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017408167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017422306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.747" endtime="20201029 12:45:17.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.756" endtime="20201029 12:45:17.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.440" endtime="20201029 12:45:17.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.436" endtime="20201029 12:45:17.758"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:17.762" level="INFO">${PHILIP_RES} = [{'diff': 1.4138999999999818e-05}, {'diff': 1.4027999999999263e-05}, {'diff': 1.4056000000001873e-05}, {'diff': 1.402699999999979e-05}, {'diff': 1.3972000000000984e-05}, {'diff': 1.3986000000000554e-0...</msg>
<status status="PASS" starttime="20201029 12:45:17.759" endtime="20201029 12:45:17.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:17.767" level="INFO">${RESULT} = {'diff': [1.4138999999999818e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.402699999999979e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.4042000000002303e-05, 1.4041999999998833e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:17.763" endtime="20201029 12:45:17.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.771" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:17.770" endtime="20201029 12:45:17.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.774" level="INFO">VALUE: [1.4138999999999818e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.402699999999979e-05, 1.3972000000000984e-05, 1.3986000000000554e-05, 1.4042000000002303e-05, 1.4041999999998833e-05, 1.4041999999998833e-05, 1.4027000000003259e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.404099999999936e-05, 1.4041000000002829e-05, 1.4013999999999693e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4056000000001873e-05, 1.402699999999979e-05, 1.4041999999998833e-05, 1.4056000000001873e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.404099999999936e-05, 1.404099999999936e-05, 1.4041999999998833e-05, 1.4000000000000123e-05, 1.4056000000001873e-05, 1.4041999999998833e-05, 1.4013999999999693e-05, 1.4027999999999263e-05, 1.4014000000003163e-05, 1.4027999999999263e-05, 1.4041999999998833e-05, 1.4041000000002829e-05, 1.402699999999979e-05, 1.4041999999998833e-05, 1.4027999999999263e-05, 1.4042000000002303e-05, 1.4027999999999263e-05, 1.404099999999936e-05, 1.4041000000002829e-05, 1.4027999999999263e-05, 1.4055999999998403e-05, 1.4000000000000123e-05, 1.4056000000001873e-05, 1.404099999999936e-05]</msg>
<status status="PASS" starttime="20201029 12:45:17.773" endtime="20201029 12:45:17.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.767" endtime="20201029 12:45:17.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.402" endtime="20201029 12:45:17.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.380" endtime="20201029 12:45:17.776"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:17.778" endtime="20201029 12:45:17.798"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.777" endtime="20201029 12:45:17.798"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.806" endtime="20201029 12:45:17.814"></status>
</kw>
<msg timestamp="20201029 12:45:17.815" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.805" endtime="20201029 12:45:17.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:17.817" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:17.816" endtime="20201029 12:45:17.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.818" endtime="20201029 12:45:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.802" endtime="20201029 12:45:17.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.800" endtime="20201029 12:45:17.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:17.827" endtime="20201029 12:45:18.116"></status>
</kw>
<msg timestamp="20201029 12:45:18.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016631542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:17.826" endtime="20201029 12:45:18.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016631542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016651167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.121" endtime="20201029 12:45:18.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.130" endtime="20201029 12:45:18.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.823" endtime="20201029 12:45:18.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.821" endtime="20201029 12:45:18.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:18.136" level="INFO">${PHILIP_RES} = [{'diff': 1.962500000000228e-05}, {'diff': 1.9513999999998255e-05}, {'diff': 1.9499999999998685e-05}, {'diff': 1.9485999999999115e-05}, {'diff': 1.9514000000001724e-05}, {'diff': 1.9514000000001724e-0...</msg>
<status status="PASS" starttime="20201029 12:45:18.133" endtime="20201029 12:45:18.137"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.142" level="INFO">${RESULT} = {'diff': [1.962500000000228e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9514000000001724e-05, 1.9514000000001724e-05, 1.9485999999999115e-05, 1.9514000000001724e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:18.138" endtime="20201029 12:45:18.142"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.146" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:18.145" endtime="20201029 12:45:18.147"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.149" level="INFO">VALUE: [1.962500000000228e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9485999999999115e-05, 1.9514000000001724e-05, 1.9514000000001724e-05, 1.9485999999999115e-05, 1.9514000000001724e-05, 1.9500000000002154e-05, 1.9514000000001724e-05, 1.943100000000031e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.943100000000031e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9485999999999115e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 1.954099999999792e-05, 1.9514000000001724e-05, 1.9527999999997825e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9486000000002585e-05, 1.9513999999998255e-05, 1.9486000000002585e-05, 1.9499999999998685e-05, 1.9500000000002154e-05, 1.9527999999997825e-05, 1.9514000000001724e-05, 1.9499999999998685e-05, 1.9514000000001724e-05, 1.9527999999997825e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.9485999999999115e-05, 1.9527999999997825e-05, 1.9485999999999115e-05, 1.9513999999998255e-05, 1.9499999999998685e-05, 1.9499999999998685e-05, 1.9500000000002154e-05]</msg>
<status status="PASS" starttime="20201029 12:45:18.147" endtime="20201029 12:45:18.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.143" endtime="20201029 12:45:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.799" endtime="20201029 12:45:18.150"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:17.776" endtime="20201029 12:45:18.150"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.153" endtime="20201029 12:45:18.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.151" endtime="20201029 12:45:18.173"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.181" endtime="20201029 12:45:18.190"></status>
</kw>
<msg timestamp="20201029 12:45:18.191" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.180" endtime="20201029 12:45:18.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.193" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.192" endtime="20201029 12:45:18.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.195" endtime="20201029 12:45:18.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.177" endtime="20201029 12:45:18.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.175" endtime="20201029 12:45:18.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.204" endtime="20201029 12:45:18.509"></status>
</kw>
<msg timestamp="20201029 12:45:18.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017043917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.202" endtime="20201029 12:45:18.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017043917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017069625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.514" endtime="20201029 12:45:18.521"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.522" endtime="20201029 12:45:18.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.200" endtime="20201029 12:45:18.525"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.198" endtime="20201029 12:45:18.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:18.530" level="INFO">${PHILIP_RES} = [{'diff': 2.5708000000002756e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5582999999999162e-05}, {'diff': 2.5568999999999592e-05}, {'diff': 2.5582999999999162e-05}, {'diff': 2.5555999999999496e-...</msg>
<status status="PASS" starttime="20201029 12:45:18.527" endtime="20201029 12:45:18.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.534" level="INFO">${RESULT} = {'diff': [2.5708000000002756e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.5555999999999496e-05...</msg>
<status status="PASS" starttime="20201029 12:45:18.531" endtime="20201029 12:45:18.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.539" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:18.538" endtime="20201029 12:45:18.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.541" level="INFO">VALUE: [2.5708000000002756e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.5583999999998636e-05, 2.5514000000000786e-05, 2.5624999999997872e-05, 2.5569999999999066e-05, 2.5555999999999496e-05, 2.5583999999998636e-05, 2.5583999999998636e-05, 2.5570000000002535e-05, 2.5570000000002535e-05, 2.558300000000263e-05, 2.5556000000002965e-05, 2.55970000000022e-05, 2.5555999999999496e-05, 2.5582999999999162e-05, 2.5526999999997413e-05, 2.5582999999999162e-05, 2.5568999999999592e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.5582999999999162e-05, 2.5514000000000786e-05, 2.5596999999998732e-05, 2.5610999999998302e-05, 2.5610999999998302e-05, 2.5568999999999592e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.556900000000306e-05, 2.5555000000000022e-05, 2.556900000000306e-05, 2.5555999999999496e-05, 2.5555999999999496e-05, 2.55970000000022e-05, 2.5528000000000356e-05, 2.5569999999999066e-05, 2.563900000000091e-05, 2.5569999999999066e-05, 2.5583999999998636e-05, 2.5569999999999066e-05, 2.5583999999998636e-05, 2.5583999999998636e-05, 2.5583999999998636e-05]</msg>
<status status="PASS" starttime="20201029 12:45:18.540" endtime="20201029 12:45:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.535" endtime="20201029 12:45:18.542"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.173" endtime="20201029 12:45:18.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.151" endtime="20201029 12:45:18.543"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.545" endtime="20201029 12:45:18.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.544" endtime="20201029 12:45:18.565"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.574" endtime="20201029 12:45:18.585"></status>
</kw>
<msg timestamp="20201029 12:45:18.585" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.572" endtime="20201029 12:45:18.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.588" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.586" endtime="20201029 12:45:18.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.589" endtime="20201029 12:45:18.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.570" endtime="20201029 12:45:18.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.568" endtime="20201029 12:45:18.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.600" endtime="20201029 12:45:18.889"></status>
</kw>
<msg timestamp="20201029 12:45:18.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017095181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017127556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.598" endtime="20201029 12:45:18.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017095181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017127556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.893" endtime="20201029 12:45:18.901"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.902" endtime="20201029 12:45:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.595" endtime="20201029 12:45:18.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.593" endtime="20201029 12:45:18.905"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:18.909" level="INFO">${PHILIP_RES} = [{'diff': 3.2374999999997683e-05}, {'diff': 3.226399999999713e-05}, {'diff': 3.222199999999842e-05}, {'diff': 3.22640000000006e-05}, {'diff': 3.225000000000103e-05}, {'diff': 3.2263000000001124e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:45:18.905" endtime="20201029 12:45:18.909"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:18.913" level="INFO">${RESULT} = {'diff': [3.2374999999997683e-05, 3.226399999999713e-05, 3.222199999999842e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.219...</msg>
<status status="PASS" starttime="20201029 12:45:18.910" endtime="20201029 12:45:18.914"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.918" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:18.917" endtime="20201029 12:45:18.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.920" level="INFO">VALUE: [3.2374999999997683e-05, 3.226399999999713e-05, 3.222199999999842e-05, 3.22640000000006e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.219399999999928e-05, 3.231900000000287e-05, 3.225000000000103e-05, 3.222199999999842e-05, 3.2277000000000694e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.2304999999999834e-05, 3.2263000000001124e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.225000000000103e-05, 3.22640000000006e-05, 3.220799999999885e-05, 3.226399999999713e-05, 3.2262999999997655e-05, 3.2318999999999404e-05, 3.223600000000146e-05, 3.223600000000146e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.225000000000103e-05, 3.223600000000146e-05, 3.223599999999799e-05, 3.2276999999997225e-05, 3.225000000000103e-05, 3.223599999999799e-05, 3.227800000000017e-05, 3.231999999999888e-05, 3.219500000000222e-05, 3.220800000000232e-05, 3.225000000000103e-05, 3.2263000000001124e-05, 3.225000000000103e-05, 3.220899999999832e-05, 3.22640000000006e-05, 3.22640000000006e-05, 3.223599999999799e-05, 3.224999999999756e-05, 3.225000000000103e-05, 3.22640000000006e-05]</msg>
<status status="PASS" starttime="20201029 12:45:18.919" endtime="20201029 12:45:18.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.914" endtime="20201029 12:45:18.922"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.566" endtime="20201029 12:45:18.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.543" endtime="20201029 12:45:18.923"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:18.925" endtime="20201029 12:45:18.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.924" endtime="20201029 12:45:18.945"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.954" endtime="20201029 12:45:18.965"></status>
</kw>
<msg timestamp="20201029 12:45:18.966" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.952" endtime="20201029 12:45:18.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:18.968" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:18.967" endtime="20201029 12:45:18.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.970" endtime="20201029 12:45:18.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.949" endtime="20201029 12:45:18.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.947" endtime="20201029 12:45:18.973"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:18.980" endtime="20201029 12:45:19.289"></status>
</kw>
<msg timestamp="20201029 12:45:19.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017006236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:18.979" endtime="20201029 12:45:19.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017006236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017045917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.293" endtime="20201029 12:45:19.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.302" endtime="20201029 12:45:19.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.976" endtime="20201029 12:45:19.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.973" endtime="20201029 12:45:19.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:19.309" level="INFO">${PHILIP_RES} = [{'diff': 3.9680999999999744e-05}, {'diff': 3.9540999999997106e-05}, {'diff': 3.954200000000005e-05}, {'diff': 3.954200000000005e-05}, {'diff': 3.9555000000000146e-05}, {'diff': 3.9555000000000146e-05...</msg>
<status status="PASS" starttime="20201029 12:45:19.305" endtime="20201029 12:45:19.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.314" level="INFO">${RESULT} = {'diff': [3.9680999999999744e-05, 3.9540999999997106e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9555000000000146e-05, 3.9555000000000146e-05, 3.955599999999962e-05, 3.954200000000005e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:45:19.310" endtime="20201029 12:45:19.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.318" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:19.317" endtime="20201029 12:45:19.319"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.321" level="INFO">VALUE: [3.9680999999999744e-05, 3.9540999999997106e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9555000000000146e-05, 3.9555000000000146e-05, 3.955599999999962e-05, 3.954200000000005e-05, 3.9513000000001436e-05, 3.950000000000134e-05, 3.9555000000000146e-05, 3.952800000000048e-05, 3.952800000000048e-05, 3.9540999999997106e-05, 3.951399999999744e-05, 3.9597000000002325e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.950000000000134e-05, 3.948600000000177e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9541000000000576e-05, 3.9555000000000146e-05, 3.952799999999701e-05, 3.94859999999983e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9596999999998855e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9541000000000576e-05, 3.952800000000048e-05, 3.955599999999962e-05, 3.951400000000091e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9541000000000576e-05, 3.954200000000005e-05, 3.952800000000048e-05, 3.9611000000001895e-05, 3.952800000000048e-05, 3.948600000000177e-05, 3.9555000000000146e-05, 3.955599999999962e-05, 3.954200000000005e-05, 3.947199999999873e-05, 3.954200000000005e-05, 3.954200000000005e-05, 3.9541000000000576e-05]</msg>
<status status="PASS" starttime="20201029 12:45:19.319" endtime="20201029 12:45:19.321"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.315" endtime="20201029 12:45:19.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.946" endtime="20201029 12:45:19.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:18.923" endtime="20201029 12:45:19.322"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.325" endtime="20201029 12:45:19.344"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.323" endtime="20201029 12:45:19.345"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.353" endtime="20201029 12:45:19.365"></status>
</kw>
<msg timestamp="20201029 12:45:19.365" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.352" endtime="20201029 12:45:19.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.368" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.367" endtime="20201029 12:45:19.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.369" endtime="20201029 12:45:19.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.349" endtime="20201029 12:45:19.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.347" endtime="20201029 12:45:19.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.379" endtime="20201029 12:45:19.668"></status>
</kw>
<msg timestamp="20201029 12:45:19.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017068361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017115917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.377" endtime="20201029 12:45:19.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.680" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017068361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017115917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.673" endtime="20201029 12:45:19.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.681" endtime="20201029 12:45:19.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.375" endtime="20201029 12:45:19.684"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.373" endtime="20201029 12:45:19.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:19.688" level="INFO">${PHILIP_RES} = [{'diff': 4.755600000000068e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.742999999999761e-05}, {'diff': 4.741600000000151e-05}, {'diff': 4.741699999999752e-05}, {'diff': 4.7445000000000126e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:19.685" endtime="20201029 12:45:19.688"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:19.692" level="INFO">${RESULT} = {'diff': [4.755600000000068e-05, 4.7445000000000126e-05, 4.742999999999761e-05, 4.741600000000151e-05, 4.741699999999752e-05, 4.7445000000000126e-05, 4.743000000000108e-05, 4.745800000000022e-05, 4.74...</msg>
<status status="PASS" starttime="20201029 12:45:19.689" endtime="20201029 12:45:19.693"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.697" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:19.696" endtime="20201029 12:45:19.697"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.699" level="INFO">VALUE: [4.755600000000068e-05, 4.7445000000000126e-05, 4.742999999999761e-05, 4.741600000000151e-05, 4.741699999999752e-05, 4.7445000000000126e-05, 4.743000000000108e-05, 4.745800000000022e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.743000000000108e-05, 4.738899999999838e-05, 4.7431000000000556e-05, 4.7431000000000556e-05, 4.741699999999752e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.7458999999999696e-05, 4.7458999999999696e-05, 4.744400000000065e-05, 4.743000000000108e-05, 4.7431000000000556e-05, 4.7417000000000986e-05, 4.745800000000022e-05, 4.743000000000108e-05, 4.744400000000065e-05, 4.7459000000003165e-05, 4.749999999999893e-05, 4.741600000000151e-05, 4.7431000000000556e-05, 4.7445000000000126e-05, 4.741699999999752e-05, 4.744400000000065e-05, 4.743000000000108e-05, 4.7445000000000126e-05, 4.7472999999999266e-05, 4.741599999999804e-05, 4.740200000000194e-05, 4.741699999999752e-05, 4.7445000000000126e-05, 4.7431000000000556e-05, 4.747199999999979e-05, 4.7417000000000986e-05, 4.741699999999752e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.7445000000000126e-05, 4.7430999999997087e-05, 4.741600000000151e-05]</msg>
<status status="PASS" starttime="20201029 12:45:19.698" endtime="20201029 12:45:19.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.693" endtime="20201029 12:45:19.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.345" endtime="20201029 12:45:19.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.323" endtime="20201029 12:45:19.701"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:19.703" endtime="20201029 12:45:19.723"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.702" endtime="20201029 12:45:19.724"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.732" endtime="20201029 12:45:19.744"></status>
</kw>
<msg timestamp="20201029 12:45:19.744" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.730" endtime="20201029 12:45:19.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:19.747" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:19.745" endtime="20201029 12:45:19.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.748" endtime="20201029 12:45:19.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.728" endtime="20201029 12:45:19.752"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.726" endtime="20201029 12:45:19.752"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:19.759" endtime="20201029 12:45:20.045"></status>
</kw>
<msg timestamp="20201029 12:45:20.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017024819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017080875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:19.757" endtime="20201029 12:45:20.049"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017024819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017080875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.050" endtime="20201029 12:45:20.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.058" endtime="20201029 12:45:20.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.754" endtime="20201029 12:45:20.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.753" endtime="20201029 12:45:20.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:20.065" level="INFO">${PHILIP_RES} = [{'diff': 5.6055999999998773e-05}, {'diff': 5.5929999999999175e-05}, {'diff': 5.5958000000001784e-05}, {'diff': 5.594499999999822e-05}, {'diff': 5.597299999999736e-05}, {'diff': 5.5915999999999605e-05...</msg>
<status status="PASS" starttime="20201029 12:45:20.062" endtime="20201029 12:45:20.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.069" level="INFO">${RESULT} = {'diff': [5.6055999999998773e-05, 5.5929999999999175e-05, 5.5958000000001784e-05, 5.594499999999822e-05, 5.597299999999736e-05, 5.5915999999999605e-05, 5.588899999999994e-05, 5.593099999999865e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:45:20.066" endtime="20201029 12:45:20.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.074" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:20.073" endtime="20201029 12:45:20.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.076" level="INFO">VALUE: [5.6055999999998773e-05, 5.5929999999999175e-05, 5.5958000000001784e-05, 5.594499999999822e-05, 5.597299999999736e-05, 5.5915999999999605e-05, 5.588899999999994e-05, 5.593099999999865e-05, 5.5929999999999175e-05, 5.593100000000212e-05, 5.591699999999908e-05, 5.594499999999822e-05, 5.5929999999999175e-05, 5.594499999999822e-05, 5.593100000000212e-05, 5.5943999999998745e-05, 5.5929999999999175e-05, 5.5958000000001784e-05, 5.593099999999865e-05, 5.5929999999999175e-05, 5.5943999999998745e-05, 5.594499999999822e-05, 5.601300000000059e-05, 5.5943999999998745e-05, 5.5986000000000924e-05, 5.593099999999865e-05, 5.5957999999998315e-05, 5.5930000000002644e-05, 5.5943999999998745e-05, 5.593100000000212e-05, 5.5915999999999605e-05, 5.5943999999998745e-05, 5.593100000000212e-05, 5.593099999999865e-05, 5.5985999999997454e-05, 5.593100000000212e-05, 5.593099999999865e-05, 5.5944000000002214e-05, 5.5929999999999175e-05, 5.593099999999865e-05, 5.590299999999951e-05, 5.595900000000126e-05, 5.5944000000002214e-05, 5.595900000000126e-05, 5.597299999999736e-05, 5.5915999999999605e-05, 5.5957999999998315e-05, 5.595900000000126e-05, 5.588899999999994e-05, 5.5929999999999175e-05]</msg>
<status status="PASS" starttime="20201029 12:45:20.075" endtime="20201029 12:45:20.077"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.070" endtime="20201029 12:45:20.078"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.724" endtime="20201029 12:45:20.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:19.701" endtime="20201029 12:45:20.079"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.081" endtime="20201029 12:45:20.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.080" endtime="20201029 12:45:20.101"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.110" endtime="20201029 12:45:20.121"></status>
</kw>
<msg timestamp="20201029 12:45:20.121" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.108" endtime="20201029 12:45:20.121"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.129" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.122" endtime="20201029 12:45:20.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.130" endtime="20201029 12:45:20.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.105" endtime="20201029 12:45:20.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.103" endtime="20201029 12:45:20.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.140" endtime="20201029 12:45:20.426"></status>
</kw>
<msg timestamp="20201029 12:45:20.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017185042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.138" endtime="20201029 12:45:20.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017185042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.430" endtime="20201029 12:45:20.438"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.439" endtime="20201029 12:45:20.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.135" endtime="20201029 12:45:20.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.134" endtime="20201029 12:45:20.442"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:20.446" level="INFO">${PHILIP_RES} = [{'diff': 6.516700000000139e-05}, {'diff': 6.502799999999823e-05}, {'diff': 6.50280000000017e-05}, {'diff': 6.505600000000084e-05}, {'diff': 6.505500000000136e-05}, {'diff': 6.504200000000127e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:20.442" endtime="20201029 12:45:20.446"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.451" level="INFO">${RESULT} = {'diff': [6.516700000000139e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.505600000000084e-05, 6.505500000000136e-05, 6.504200000000127e-05, 6.504099999999832e-05, 6.50280000000017e-05, 6.502699...</msg>
<status status="PASS" starttime="20201029 12:45:20.447" endtime="20201029 12:45:20.451"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.455" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:20.454" endtime="20201029 12:45:20.456"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.458" level="INFO">VALUE: [6.516700000000139e-05, 6.502799999999823e-05, 6.50280000000017e-05, 6.505600000000084e-05, 6.505500000000136e-05, 6.504200000000127e-05, 6.504099999999832e-05, 6.50280000000017e-05, 6.502699999999875e-05, 6.50280000000017e-05, 6.504099999999832e-05, 6.504200000000127e-05, 6.505499999999789e-05, 6.504200000000127e-05, 6.50419999999978e-05, 6.505500000000136e-05, 6.506999999999694e-05, 6.504100000000179e-05, 6.505599999999737e-05, 6.504100000000179e-05, 6.509700000000007e-05, 6.50280000000017e-05, 6.504200000000127e-05, 6.504200000000127e-05, 6.505500000000136e-05, 6.511199999999912e-05, 6.50280000000017e-05, 6.505600000000084e-05, 6.502700000000222e-05, 6.502799999999823e-05, 6.504100000000179e-05, 6.50419999999978e-05, 6.50280000000017e-05, 6.502799999999823e-05, 6.504200000000127e-05, 6.505499999999789e-05, 6.50280000000017e-05, 6.505499999999789e-05, 6.504200000000127e-05, 6.504099999999832e-05, 6.504200000000127e-05, 6.504099999999832e-05, 6.50280000000017e-05, 6.50419999999978e-05, 6.501400000000213e-05, 6.504200000000127e-05, 6.504200000000127e-05, 6.50280000000017e-05, 6.50830000000005e-05, 6.499999999999909e-05]</msg>
<status status="PASS" starttime="20201029 12:45:20.456" endtime="20201029 12:45:20.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.452" endtime="20201029 12:45:20.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.102" endtime="20201029 12:45:20.459"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.079" endtime="20201029 12:45:20.459"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.462" endtime="20201029 12:45:20.481"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.460" endtime="20201029 12:45:20.482"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.490" endtime="20201029 12:45:20.504"></status>
</kw>
<msg timestamp="20201029 12:45:20.505" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.489" endtime="20201029 12:45:20.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.512" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.506" endtime="20201029 12:45:20.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.514" endtime="20201029 12:45:20.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.486" endtime="20201029 12:45:20.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.484" endtime="20201029 12:45:20.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.532" endtime="20201029 12:45:20.823"></status>
</kw>
<msg timestamp="20201029 12:45:20.826" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017219486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017294375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.530" endtime="20201029 12:45:20.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017219486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017294375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.827" endtime="20201029 12:45:20.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.835" endtime="20201029 12:45:20.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.525" endtime="20201029 12:45:20.838"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.520" endtime="20201029 12:45:20.839"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:20.842" level="INFO">${PHILIP_RES} = [{'diff': 7.488900000000159e-05}, {'diff': 7.47500000000019e-05}, {'diff': 7.47500000000019e-05}, {'diff': 7.477800000000104e-05}, {'diff': 7.477800000000104e-05}, {'diff': 7.47500000000019e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:20.839" endtime="20201029 12:45:20.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:20.847" level="INFO">${RESULT} = {'diff': [7.488900000000159e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.473599999...</msg>
<status status="PASS" starttime="20201029 12:45:20.843" endtime="20201029 12:45:20.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.851" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:20.850" endtime="20201029 12:45:20.851"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.853" level="INFO">VALUE: [7.488900000000159e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.473599999999886e-05, 7.472199999999929e-05, 7.477799999999757e-05, 7.48050000000007e-05, 7.474999999999843e-05, 7.473599999999886e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.469499999999962e-05, 7.480600000000018e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.473599999999886e-05, 7.476400000000147e-05, 7.474999999999843e-05, 7.4763999999998e-05, 7.474999999999843e-05, 7.473599999999886e-05, 7.473600000000233e-05, 7.474999999999843e-05, 7.473600000000233e-05, 7.47500000000019e-05, 7.476400000000147e-05, 7.48050000000007e-05, 7.476400000000147e-05, 7.47500000000019e-05, 7.469499999999962e-05, 7.48050000000007e-05, 7.477800000000104e-05, 7.47500000000019e-05, 7.47500000000019e-05, 7.473599999999886e-05, 7.4763000000002e-05, 7.477800000000104e-05, 7.477800000000104e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.474999999999843e-05, 7.4763999999998e-05]</msg>
<status status="PASS" starttime="20201029 12:45:20.852" endtime="20201029 12:45:20.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.847" endtime="20201029 12:45:20.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.483" endtime="20201029 12:45:20.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.460" endtime="20201029 12:45:20.855"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:20.857" endtime="20201029 12:45:20.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.856" endtime="20201029 12:45:20.877"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.885" endtime="20201029 12:45:20.898"></status>
</kw>
<msg timestamp="20201029 12:45:20.899" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.884" endtime="20201029 12:45:20.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:20.901" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:20.900" endtime="20201029 12:45:20.902"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.903" endtime="20201029 12:45:20.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.881" endtime="20201029 12:45:20.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.879" endtime="20201029 12:45:20.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:20.912" endtime="20201029 12:45:21.198"></status>
</kw>
<msg timestamp="20201029 12:45:21.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016605556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016690736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:20.911" endtime="20201029 12:45:21.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016605556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016690736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.202" endtime="20201029 12:45:21.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.211" endtime="20201029 12:45:21.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.908" endtime="20201029 12:45:21.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.907" endtime="20201029 12:45:21.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:21.217" level="INFO">${PHILIP_RES} = [{'diff': 8.518000000000067e-05}, {'diff': 8.506900000000012e-05}, {'diff': 8.506999999999959e-05}, {'diff': 8.508400000000263e-05}, {'diff': 8.506900000000012e-05}, {'diff': 8.511099999999883e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:21.214" endtime="20201029 12:45:21.217"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.222" level="INFO">${RESULT} = {'diff': [8.518000000000067e-05, 8.506900000000012e-05, 8.506999999999959e-05, 8.508400000000263e-05, 8.506900000000012e-05, 8.511099999999883e-05, 8.508399999999916e-05, 8.508400000000263e-05, 8.5069...</msg>
<status status="PASS" starttime="20201029 12:45:21.218" endtime="20201029 12:45:21.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.226" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:21.225" endtime="20201029 12:45:21.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.228" level="INFO">VALUE: [8.518000000000067e-05, 8.506900000000012e-05, 8.506999999999959e-05, 8.508400000000263e-05, 8.506900000000012e-05, 8.511099999999883e-05, 8.508399999999916e-05, 8.508400000000263e-05, 8.506900000000012e-05, 8.502700000000141e-05, 8.508399999999916e-05, 8.506999999999959e-05, 8.506900000000012e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.511200000000177e-05, 8.508299999999969e-05, 8.506900000000012e-05, 8.513900000000144e-05, 8.508399999999916e-05, 8.511099999999883e-05, 8.512500000000187e-05, 8.506900000000012e-05, 8.506999999999959e-05, 8.508299999999969e-05, 8.505500000000055e-05, 8.505500000000055e-05, 8.505600000000002e-05, 8.506999999999959e-05, 8.509700000000273e-05, 8.508299999999969e-05, 8.504200000000045e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.502800000000088e-05, 8.508399999999916e-05, 8.508299999999969e-05, 8.508299999999969e-05, 8.51249999999984e-05, 8.506999999999959e-05, 8.506899999999665e-05, 8.504100000000098e-05, 8.509699999999926e-05, 8.50980000000022e-05, 8.508299999999969e-05, 8.511099999999883e-05, 8.505600000000002e-05, 8.50980000000022e-05, 8.506900000000012e-05]</msg>
<status status="PASS" starttime="20201029 12:45:21.227" endtime="20201029 12:45:21.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.222" endtime="20201029 12:45:21.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.878" endtime="20201029 12:45:21.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:20.855" endtime="20201029 12:45:21.230"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:21.233" endtime="20201029 12:45:21.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.231" endtime="20201029 12:45:21.255"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.272" endtime="20201029 12:45:21.289"></status>
</kw>
<msg timestamp="20201029 12:45:21.290" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.268" endtime="20201029 12:45:21.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.295" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.292" endtime="20201029 12:45:21.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.297" endtime="20201029 12:45:21.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.263" endtime="20201029 12:45:21.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.259" endtime="20201029 12:45:21.302"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.316" endtime="20201029 12:45:21.607"></status>
</kw>
<msg timestamp="20201029 12:45:21.610" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029289056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029385181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.313" endtime="20201029 12:45:21.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.619" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029289056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.029385181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:21.612" endtime="20201029 12:45:21.619"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.620" endtime="20201029 12:45:21.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.307" endtime="20201029 12:45:21.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.304" endtime="20201029 12:45:21.622"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:21.626" level="INFO">${PHILIP_RES} = [{'diff': 9.612499999999899e-05}, {'diff': 9.599999999999886e-05}, {'diff': 9.602699999999853e-05}, {'diff': 9.604200000000104e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.600000000000233e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:45:21.623" endtime="20201029 12:45:21.627"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:21.631" level="INFO">${RESULT} = {'diff': [9.612499999999899e-05, 9.599999999999886e-05, 9.602699999999853e-05, 9.604200000000104e-05, 9.597199999999972e-05, 9.600000000000233e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.5986...</msg>
<status status="PASS" starttime="20201029 12:45:21.627" endtime="20201029 12:45:21.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.636" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:21.635" endtime="20201029 12:45:21.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.638" level="INFO">VALUE: [9.612499999999899e-05, 9.599999999999886e-05, 9.602699999999853e-05, 9.604200000000104e-05, 9.597199999999972e-05, 9.600000000000233e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.598699999999877e-05, 9.60140000000019e-05, 9.60140000000019e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.595899999999963e-05, 9.6027000000002e-05, 9.604200000000104e-05, 9.597199999999625e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.602699999999853e-05, 9.599999999999886e-05, 9.60000000000058e-05, 9.601399999999843e-05, 9.601400000000537e-05, 9.6027999999998e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.598600000000623e-05, 9.604199999999757e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.606899999999724e-05, 9.602800000000494e-05, 9.601299999999896e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.60000000000058e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.601299999999896e-05, 9.599999999999886e-05, 9.601399999999843e-05, 9.601399999999843e-05, 9.6027999999998e-05, 9.601399999999843e-05, 9.599999999999886e-05, 9.59859999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:45:21.637" endtime="20201029 12:45:21.638"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.632" endtime="20201029 12:45:21.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.256" endtime="20201029 12:45:21.639"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.231" endtime="20201029 12:45:21.639"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:21.642" endtime="20201029 12:45:21.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.640" endtime="20201029 12:45:21.662"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.670" endtime="20201029 12:45:21.685"></status>
</kw>
<msg timestamp="20201029 12:45:21.686" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.669" endtime="20201029 12:45:21.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.688" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:21.687" endtime="20201029 12:45:21.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.689" endtime="20201029 12:45:21.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.666" endtime="20201029 12:45:21.691"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.664" endtime="20201029 12:45:21.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.698" endtime="20201029 12:45:21.985"></status>
</kw>
<msg timestamp="20201029 12:45:21.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017222125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:21.697" endtime="20201029 12:45:21.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:21.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0171145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017222125, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:45:21.989" endtime="20201029 12:45:21.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:21.997" endtime="20201029 12:45:22.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.694" endtime="20201029 12:45:22.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.692" endtime="20201029 12:45:22.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:22.005" level="INFO">${PHILIP_RES} = [{'diff': 0.00010762500000000008}, {'diff': 0.00010755499999999876}, {'diff': 0.00010755499999999876}, {'diff': 0.00010754199999999867}, {'diff': 0.00010755500000000223}, {'diff': 0.000107584000000000...</msg>
<status status="PASS" starttime="20201029 12:45:22.002" endtime="20201029 12:45:22.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:22.009" level="INFO">${RESULT} = {'diff': [0.00010762500000000008, 0.00010755499999999876, 0.00010755499999999876, 0.00010754199999999867, 0.00010755500000000223, 0.00010758400000000085, 0.00010754199999999867, 0.00010754199999999867...</msg>
<status status="PASS" starttime="20201029 12:45:22.006" endtime="20201029 12:45:22.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.014" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:22.013" endtime="20201029 12:45:22.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.016" level="INFO">VALUE: [0.00010762500000000008, 0.00010755499999999876, 0.00010755499999999876, 0.00010754199999999867, 0.00010755500000000223, 0.00010758400000000085, 0.00010754199999999867, 0.00010754199999999867, 0.00010749999999999996, 0.00010754100000000266, 0.00010754199999999867, 0.00010761100000000051, 0.00010755499999999876, 0.00010759699999999747, 0.00010755500000000223, 0.0001075560000000017, 0.00010755599999999824, 0.00010756899999999833, 0.00010754200000000214, 0.00010758300000000137, 0.00010757000000000128, 0.0001075279999999991, 0.00010754099999999919, 0.00010751399999999953, 0.00010755499999999876, 0.00010754199999999867, 0.00010755599999999824, 0.00010758399999999738, 0.0001075560000000017, 0.00010755500000000223, 0.00010754199999999867, 0.00010756899999999833, 0.00010754100000000266, 0.0001075560000000017, 0.00010755499999999876, 0.0001075279999999991, 0.00010755599999999824, 0.00010751399999999953, 0.00010754200000000214, 0.00010751399999999953, 0.00010754199999999867, 0.00010755499999999876, 0.00010754100000000266, 0.00010749999999999996, 0.00010751300000000005, 0.0001075279999999991, 0.0001075560000000017, 0.00010759800000000042, 0.00010757000000000128, 0.00010752699999999962]</msg>
<status status="PASS" starttime="20201029 12:45:22.015" endtime="20201029 12:45:22.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.010" endtime="20201029 12:45:22.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.662" endtime="20201029 12:45:22.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:21.640" endtime="20201029 12:45:22.018"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.020" endtime="20201029 12:45:22.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.019" endtime="20201029 12:45:22.040"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.049" endtime="20201029 12:45:22.065"></status>
</kw>
<msg timestamp="20201029 12:45:22.066" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.047" endtime="20201029 12:45:22.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.068" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.067" endtime="20201029 12:45:22.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.069" endtime="20201029 12:45:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.045" endtime="20201029 12:45:22.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.042" endtime="20201029 12:45:22.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.079" endtime="20201029 12:45:22.364"></status>
</kw>
<msg timestamp="20201029 12:45:22.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017085319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017205125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.078" endtime="20201029 12:45:22.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017085319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017205125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.369" endtime="20201029 12:45:22.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.377" endtime="20201029 12:45:22.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.075" endtime="20201029 12:45:22.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.074" endtime="20201029 12:45:22.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:22.383" level="INFO">${PHILIP_RES} = [{'diff': 0.00011980600000000008}, {'diff': 0.00011966700000000038}, {'diff': 0.00011972199999999919}, {'diff': 0.00011970799999999962}, {'diff': 0.00011969499999999952}, {'diff': 0.000119680999999999...</msg>
<status status="PASS" starttime="20201029 12:45:22.380" endtime="20201029 12:45:22.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:22.387" level="INFO">${RESULT} = {'diff': [0.00011980600000000008, 0.00011966700000000038, 0.00011972199999999919, 0.00011970799999999962, 0.00011969499999999952, 0.00011968099999999995, 0.00011969400000000005, 0.00011968099999999995...</msg>
<status status="PASS" starttime="20201029 12:45:22.384" endtime="20201029 12:45:22.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.392" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:22.390" endtime="20201029 12:45:22.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.394" level="INFO">VALUE: [0.00011980600000000008, 0.00011966700000000038, 0.00011972199999999919, 0.00011970799999999962, 0.00011969499999999952, 0.00011968099999999995, 0.00011969400000000005, 0.00011968099999999995, 0.00011970799999999962, 0.00011968000000000048, 0.00011968099999999995, 0.00011968000000000048, 0.00011969400000000005, 0.00011968000000000048, 0.00011969400000000005, 0.00011970800000000309, 0.00011966700000000038, 0.00011969400000000005, 0.00011969499999999952, 0.00011966600000000091, 0.00011966700000000038, 0.00011974999999999833, 0.0001197089999999991, 0.00011963900000000124, 0.00011969499999999952, 0.00011966600000000091, 0.00011969499999999952, 0.00011969400000000005, 0.00011972300000000213, 0.00011969400000000005, 0.00011968099999999995, 0.00011969400000000005, 0.00011965300000000081, 0.00011969400000000005, 0.00011969499999999952, 0.00011968000000000048, 0.00011972299999999866, 0.00011968000000000048, 0.00011969499999999952, 0.00011969400000000005, 0.00011969499999999952, 0.00011968000000000048, 0.00011969499999999952, 0.00011968000000000048, 0.000119695000000003, 0.00011966599999999744, 0.00011969499999999952, 0.00011970799999999962, 0.00011968099999999995, 0.00011969400000000005]</msg>
<status status="PASS" starttime="20201029 12:45:22.393" endtime="20201029 12:45:22.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.388" endtime="20201029 12:45:22.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.041" endtime="20201029 12:45:22.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.018" endtime="20201029 12:45:22.396"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.398" endtime="20201029 12:45:22.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.397" endtime="20201029 12:45:22.419"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.427" endtime="20201029 12:45:22.443"></status>
</kw>
<msg timestamp="20201029 12:45:22.443" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.425" endtime="20201029 12:45:22.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.446" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.444" endtime="20201029 12:45:22.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.447" endtime="20201029 12:45:22.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.423" endtime="20201029 12:45:22.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.421" endtime="20201029 12:45:22.449"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.456" endtime="20201029 12:45:22.740"></status>
</kw>
<msg timestamp="20201029 12:45:22.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017177917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017310417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.454" endtime="20201029 12:45:22.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.751" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017177917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017310417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:22.744" endtime="20201029 12:45:22.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.753" endtime="20201029 12:45:22.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.452" endtime="20201029 12:45:22.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.450" endtime="20201029 12:45:22.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:22.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00013250000000000067}, {'diff': 0.00013247200000000153}, {'diff': 0.00013244500000000187}, {'diff': 0.00013242999999999935}, {'diff': 0.0001324310000000023}, {'diff': 0.0001324440000000024...</msg>
<status status="PASS" starttime="20201029 12:45:22.756" endtime="20201029 12:45:22.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:22.764" level="INFO">${RESULT} = {'diff': [0.00013250000000000067, 0.00013247200000000153, 0.00013244500000000187, 0.00013242999999999935, 0.0001324310000000023, 0.0001324440000000024, 0.000132473000000001, 0.00013245800000000196, 0....</msg>
<status status="PASS" starttime="20201029 12:45:22.760" endtime="20201029 12:45:22.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.770" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:22.769" endtime="20201029 12:45:22.770"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.773" level="INFO">VALUE: [0.00013250000000000067, 0.00013247200000000153, 0.00013244500000000187, 0.00013242999999999935, 0.0001324310000000023, 0.0001324440000000024, 0.000132473000000001, 0.00013245800000000196, 0.00013244500000000187, 0.00013242999999999935, 0.0001324310000000023, 0.00013245800000000196, 0.00013241699999999926, 0.0001324999999999972, 0.00013244399999999892, 0.0001324449999999984, 0.00013242999999999935, 0.0001324449999999984, 0.00013244399999999892, 0.0001324029999999997, 0.00013237500000000055, 0.0001324029999999997, 0.00013245800000000196, 0.00013245900000000144, 0.00013244399999999892, 0.0001324449999999984, 0.00013244399999999892, 0.00013241700000000273, 0.00013243099999999883, 0.00013236100000000098, 0.00013251400000000024, 0.0001324440000000024, 0.0001324310000000023, 0.0001324440000000024, 0.00013244500000000187, 0.00013243000000000282, 0.00013244500000000187, 0.0001324440000000024, 0.00013243099999999883, 0.00013244399999999892, 0.00013241699999999926, 0.00013244399999999892, 0.0001324449999999984, 0.00013242999999999935, 0.00013243099999999883, 0.00013244399999999892, 0.00013244399999999892, 0.0001324579999999985, 0.00013244399999999892, 0.0001324449999999984]</msg>
<status status="PASS" starttime="20201029 12:45:22.771" endtime="20201029 12:45:22.774"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.765" endtime="20201029 12:45:22.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.419" endtime="20201029 12:45:22.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.396" endtime="20201029 12:45:22.776"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:22.780" endtime="20201029 12:45:22.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.778" endtime="20201029 12:45:22.801"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.808" endtime="20201029 12:45:22.823"></status>
</kw>
<msg timestamp="20201029 12:45:22.824" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.807" endtime="20201029 12:45:22.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:22.826" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:22.825" endtime="20201029 12:45:22.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.827" endtime="20201029 12:45:22.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.804" endtime="20201029 12:45:22.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.803" endtime="20201029 12:45:22.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:22.836" endtime="20201029 12:45:23.122"></status>
</kw>
<msg timestamp="20201029 12:45:23.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01668525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016831167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:22.835" endtime="20201029 12:45:23.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01668525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016831167, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:45:23.127" endtime="20201029 12:45:23.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.135" endtime="20201029 12:45:23.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.832" endtime="20201029 12:45:23.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.830" endtime="20201029 12:45:23.137"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:23.141" level="INFO">${PHILIP_RES} = [{'diff': 0.00014591700000000235}, {'diff': 0.00014580500000000232}, {'diff': 0.00014579199999999876}, {'diff': 0.00014582000000000137}, {'diff': 0.00014580499999999885}, {'diff': 0.000145790999999999...</msg>
<status status="PASS" starttime="20201029 12:45:23.138" endtime="20201029 12:45:23.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.145" level="INFO">${RESULT} = {'diff': [0.00014591700000000235, 0.00014580500000000232, 0.00014579199999999876, 0.00014582000000000137, 0.00014580499999999885, 0.00014579099999999928, 0.0001458060000000018, 0.00014576399999999962,...</msg>
<status status="PASS" starttime="20201029 12:45:23.142" endtime="20201029 12:45:23.145"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.149" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:23.148" endtime="20201029 12:45:23.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.152" level="INFO">VALUE: [0.00014591700000000235, 0.00014580500000000232, 0.00014579199999999876, 0.00014582000000000137, 0.00014580499999999885, 0.00014579099999999928, 0.0001458060000000018, 0.00014576399999999962, 0.00014581899999999842, 0.0001458060000000018, 0.0001458060000000018, 0.00014581899999999842, 0.0001458199999999979, 0.0001458060000000018, 0.00014579199999999876, 0.00014581899999999842, 0.00014579200000000223, 0.00014580599999999833, 0.00014580499999999885, 0.00014579200000000223, 0.00014579199999999876, 0.000145832999999998, 0.00014579100000000275, 0.000145735999999997, 0.00014579199999999876, 0.00014580500000000232, 0.00014576399999999962, 0.00014577799999999919, 0.00014580500000000232, 0.0001458190000000019, 0.0001458199999999979, 0.00014579199999999876, 0.0001458190000000019, 0.00014579199999999876, 0.00014580599999999833, 0.000145832999999998, 0.00014581899999999842, 0.00014580599999999833, 0.0001458190000000019, 0.00014580499999999885, 0.0001458199999999979, 0.00014577799999999919, 0.00014580499999999885, 0.00014580599999999833, 0.0001458060000000018, 0.0001458190000000019, 0.00014579199999999876, 0.00014579199999999876, 0.0001458190000000019, 0.00014580499999999885]</msg>
<status status="PASS" starttime="20201029 12:45:23.150" endtime="20201029 12:45:23.152"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.146" endtime="20201029 12:45:23.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.801" endtime="20201029 12:45:23.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:22.777" endtime="20201029 12:45:23.154"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.156" endtime="20201029 12:45:23.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.155" endtime="20201029 12:45:23.176"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.184" endtime="20201029 12:45:23.200"></status>
</kw>
<msg timestamp="20201029 12:45:23.201" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.182" endtime="20201029 12:45:23.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.203" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.202" endtime="20201029 12:45:23.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.204" endtime="20201029 12:45:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.180" endtime="20201029 12:45:23.207"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.178" endtime="20201029 12:45:23.208"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.214" endtime="20201029 12:45:23.500"></status>
</kw>
<msg timestamp="20201029 12:45:23.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016519125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016678986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.213" endtime="20201029 12:45:23.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016519125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016678986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.504" endtime="20201029 12:45:23.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.512" endtime="20201029 12:45:23.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.210" endtime="20201029 12:45:23.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.208" endtime="20201029 12:45:23.515"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:23.519" level="INFO">${PHILIP_RES} = [{'diff': 0.00015986100000000072}, {'diff': 0.00015976399999999974}, {'diff': 0.00015975000000000017}, {'diff': 0.00015976399999999974}, {'diff': 0.00015976399999999974}, {'diff': 0.000159750000000000...</msg>
<status status="PASS" starttime="20201029 12:45:23.516" endtime="20201029 12:45:23.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.523" level="INFO">${RESULT} = {'diff': [0.00015986100000000072, 0.00015976399999999974, 0.00015975000000000017, 0.00015976399999999974, 0.00015976399999999974, 0.00015975000000000017, 0.00015975000000000017, 0.00015975000000000017...</msg>
<status status="PASS" starttime="20201029 12:45:23.520" endtime="20201029 12:45:23.523"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.527" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:23.526" endtime="20201029 12:45:23.527"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.529" level="INFO">VALUE: [0.00015986100000000072, 0.00015976399999999974, 0.00015975000000000017, 0.00015976399999999974, 0.00015976399999999974, 0.00015975000000000017, 0.00015975000000000017, 0.00015975000000000017, 0.00015976399999999974, 0.00015977800000000278, 0.00015976399999999974, 0.00015977699999999984, 0.00015977699999999984, 0.00015976300000000027, 0.00015975000000000017, 0.00015976300000000027, 0.00015981900000000202, 0.00015976300000000027, 0.0001597629999999968, 0.00015979100000000288, 0.00015980500000000245, 0.0001597499999999967, 0.0001597230000000005, 0.00015977800000000278, 0.00015976399999999974, 0.00015977800000000278, 0.00015975000000000017, 0.00015972200000000103, 0.00015976399999999974, 0.00015977800000000278, 0.0001597779999999993, 0.00015976399999999974, 0.0001597779999999993, 0.00015976399999999974, 0.0001597779999999993, 0.00015975000000000017, 0.0001597779999999993, 0.00015981999999999802, 0.0001597779999999993, 0.00015976399999999974, 0.0001597779999999993, 0.00015976399999999974, 0.00015980599999999845, 0.00015975000000000017, 0.00015981999999999802, 0.00015976399999999974, 0.00015979199999999888, 0.0001597779999999993, 0.0001597779999999993, 0.0001597779999999993]</msg>
<status status="PASS" starttime="20201029 12:45:23.528" endtime="20201029 12:45:23.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.523" endtime="20201029 12:45:23.531"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.176" endtime="20201029 12:45:23.532"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.154" endtime="20201029 12:45:23.532"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.534" endtime="20201029 12:45:23.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.533" endtime="20201029 12:45:23.554"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.562" endtime="20201029 12:45:23.581"></status>
</kw>
<msg timestamp="20201029 12:45:23.581" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.561" endtime="20201029 12:45:23.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.584" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.582" endtime="20201029 12:45:23.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.585" endtime="20201029 12:45:23.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.558" endtime="20201029 12:45:23.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.556" endtime="20201029 12:45:23.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.594" endtime="20201029 12:45:23.879"></status>
</kw>
<msg timestamp="20201029 12:45:23.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016472167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016646625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.592" endtime="20201029 12:45:23.883"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016472167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016646625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.883" endtime="20201029 12:45:23.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.891" endtime="20201029 12:45:23.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.589" endtime="20201029 12:45:23.894"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.588" endtime="20201029 12:45:23.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:23.898" level="INFO">${PHILIP_RES} = [{'diff': 0.00017445800000000233}, {'diff': 0.00017437500000000092}, {'diff': 0.00017431900000000264}, {'diff': 0.00017430500000000307}, {'diff': 0.00017434700000000178}, {'diff': 0.000174347000000001...</msg>
<status status="PASS" starttime="20201029 12:45:23.895" endtime="20201029 12:45:23.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:23.903" level="INFO">${RESULT} = {'diff': [0.00017445800000000233, 0.00017437500000000092, 0.00017431900000000264, 0.00017430500000000307, 0.00017434700000000178, 0.00017434700000000178, 0.00017437500000000092, 0.00017429100000000003...</msg>
<status status="PASS" starttime="20201029 12:45:23.899" endtime="20201029 12:45:23.903"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.907" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:23.906" endtime="20201029 12:45:23.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.909" level="INFO">VALUE: [0.00017445800000000233, 0.00017437500000000092, 0.00017431900000000264, 0.00017430500000000307, 0.00017434700000000178, 0.00017434700000000178, 0.00017437500000000092, 0.00017429100000000003, 0.0001743330000000022, 0.00017434700000000178, 0.00017433400000000168, 0.00017434700000000178, 0.00017433400000000168, 0.00017437499999999745, 0.0001743469999999983, 0.00017433299999999874, 0.0001743469999999983, 0.0001743469999999983, 0.00017431999999999864, 0.00017441699999999963, 0.00017434799999999778, 0.00017433299999999874, 0.00017434799999999778, 0.0001742500000000008, 0.00017434799999999778, 0.00017427799999999993, 0.0001743339999999982, 0.00017441699999999963, 0.00017431999999999864, 0.00017433299999999874, 0.00017434800000000125, 0.00017433299999999874, 0.00017434800000000125, 0.00017431900000000264, 0.00017433400000000168, 0.00017436100000000135, 0.00017433400000000168, 0.00017437500000000092, 0.00017436100000000135, 0.00017434700000000178, 0.00017429100000000003, 0.0001743330000000022, 0.00017434700000000178, 0.00017436100000000135, 0.00017431899999999917, 0.00017442999999999972, 0.00017433299999999874, 0.00017437499999999745, 0.00017436099999999788, 0.00017431999999999864]</msg>
<status status="PASS" starttime="20201029 12:45:23.908" endtime="20201029 12:45:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.903" endtime="20201029 12:45:23.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.555" endtime="20201029 12:45:23.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.532" endtime="20201029 12:45:23.911"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:23.913" endtime="20201029 12:45:23.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.912" endtime="20201029 12:45:23.933"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.941" endtime="20201029 12:45:23.961"></status>
</kw>
<msg timestamp="20201029 12:45:23.962" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.940" endtime="20201029 12:45:23.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:23.964" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:23.963" endtime="20201029 12:45:23.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.965" endtime="20201029 12:45:23.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.937" endtime="20201029 12:45:23.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.935" endtime="20201029 12:45:23.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:23.974" endtime="20201029 12:45:24.260"></status>
</kw>
<msg timestamp="20201029 12:45:24.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016576722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016766361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:23.973" endtime="20201029 12:45:24.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016576722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016766361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.264" endtime="20201029 12:45:24.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.272" endtime="20201029 12:45:24.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.970" endtime="20201029 12:45:24.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.968" endtime="20201029 12:45:24.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:24.280" level="INFO">${PHILIP_RES} = [{'diff': 0.00018963900000000186}, {'diff': 0.00018951400000000174}, {'diff': 0.00018952799999999784}, {'diff': 0.00018951399999999827}, {'diff': 0.00018951300000000226}, {'diff': 0.000189514000000001...</msg>
<status status="PASS" starttime="20201029 12:45:24.277" endtime="20201029 12:45:24.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.284" level="INFO">${RESULT} = {'diff': [0.00018963900000000186, 0.00018951400000000174, 0.00018952799999999784, 0.00018951399999999827, 0.00018951300000000226, 0.00018951400000000174, 0.00018952699999999836, 0.0001894999999999987,...</msg>
<status status="PASS" starttime="20201029 12:45:24.281" endtime="20201029 12:45:24.284"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.288" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:24.287" endtime="20201029 12:45:24.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.291" level="INFO">VALUE: [0.00018963900000000186, 0.00018951400000000174, 0.00018952799999999784, 0.00018951399999999827, 0.00018951300000000226, 0.00018951400000000174, 0.00018952699999999836, 0.0001894999999999987, 0.00018950000000000217, 0.0001895280000000013, 0.0001895419999999974, 0.0001895280000000013, 0.00018957000000000002, 0.00018957000000000002, 0.0001895129999999988, 0.00018951300000000226, 0.00018955500000000097, 0.00018951399999999827, 0.00018951399999999827, 0.0001894860000000026, 0.00018955600000000045, 0.00018952799999999784, 0.0001895280000000013, 0.00018951400000000174, 0.00018951399999999827, 0.0001895129999999988, 0.00018951300000000226, 0.00018951400000000174, 0.00018951399999999827, 0.00018948599999999913, 0.00018956900000000054, 0.0001895280000000013, 0.00018952799999999784, 0.0001895280000000013, 0.00018957000000000002, 0.00018951399999999827, 0.0001895830000000001, 0.0001895410000000014, 0.0001895280000000013, 0.00018951399999999827, 0.00018954200000000088, 0.0001895280000000013, 0.0001894999999999987, 0.0001895419999999974, 0.0001895280000000013, 0.00018955600000000045, 0.00018951400000000174, 0.0001894999999999987, 0.00018952799999999784, 0.0001895280000000013]</msg>
<status status="PASS" starttime="20201029 12:45:24.289" endtime="20201029 12:45:24.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.285" endtime="20201029 12:45:24.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.934" endtime="20201029 12:45:24.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:23.911" endtime="20201029 12:45:24.293"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:24.295" endtime="20201029 12:45:24.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.293" endtime="20201029 12:45:24.315"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.323" endtime="20201029 12:45:24.344"></status>
</kw>
<msg timestamp="20201029 12:45:24.344" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.322" endtime="20201029 12:45:24.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.347" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.345" endtime="20201029 12:45:24.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.348" endtime="20201029 12:45:24.350"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.319" endtime="20201029 12:45:24.351"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.317" endtime="20201029 12:45:24.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.358" endtime="20201029 12:45:24.643"></status>
</kw>
<msg timestamp="20201029 12:45:24.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017362667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.356" endtime="20201029 12:45:24.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017157236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017362667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.648" endtime="20201029 12:45:24.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.656" endtime="20201029 12:45:24.657"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.354" endtime="20201029 12:45:24.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.352" endtime="20201029 12:45:24.658"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:24.662" level="INFO">${PHILIP_RES} = [{'diff': 0.00020543099999999898}, {'diff': 0.00020527800000000318}, {'diff': 0.00020531900000000242}, {'diff': 0.00020530500000000285}, {'diff': 0.00020530499999999938}, {'diff': 0.000205305999999998...</msg>
<status status="PASS" starttime="20201029 12:45:24.659" endtime="20201029 12:45:24.663"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:24.666" level="INFO">${RESULT} = {'diff': [0.00020543099999999898, 0.00020527800000000318, 0.00020531900000000242, 0.00020530500000000285, 0.00020530499999999938, 0.00020530599999999885, 0.00020531999999999842, 0.00020530599999999885...</msg>
<status status="PASS" starttime="20201029 12:45:24.663" endtime="20201029 12:45:24.667"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.670" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:24.669" endtime="20201029 12:45:24.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.673" level="INFO">VALUE: [0.00020543099999999898, 0.00020527800000000318, 0.00020531900000000242, 0.00020530500000000285, 0.00020530499999999938, 0.00020530599999999885, 0.00020531999999999842, 0.00020530599999999885, 0.00020533299999999852, 0.00020530499999999938, 0.00020534700000000156, 0.00020530600000000232, 0.00020529199999999928, 0.00020530599999999885, 0.00020530599999999885, 0.0002053469999999981, 0.00020530499999999938, 0.000205333999999998, 0.00020530599999999885, 0.00020530599999999885, 0.00020530600000000232, 0.00020525000000000057, 0.00020530499999999938, 0.00020531899999999895, 0.00020525000000000057, 0.000205333999999998, 0.0002052779999999997, 0.0002053750000000007, 0.00020530499999999938, 0.00020536100000000113, 0.00020529199999999928, 0.0002053750000000007, 0.00020533300000000199, 0.00020530499999999938, 0.0002052779999999997, 0.00020530499999999938, 0.00020531999999999842, 0.0002053200000000019, 0.00020533300000000199, 0.0002052909999999998, 0.0002052909999999998, 0.00020531899999999895, 0.00020529199999999928, 0.00020530599999999885, 0.00020530599999999885, 0.0002053469999999981, 0.00020530499999999938, 0.00020531900000000242, 0.00020530600000000232, 0.00020530600000000232]</msg>
<status status="PASS" starttime="20201029 12:45:24.672" endtime="20201029 12:45:24.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.667" endtime="20201029 12:45:24.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.315" endtime="20201029 12:45:24.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.293" endtime="20201029 12:45:24.676"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:24.678" endtime="20201029 12:45:24.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.677" endtime="20201029 12:45:24.698"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.706" endtime="20201029 12:45:24.728"></status>
</kw>
<msg timestamp="20201029 12:45:24.728" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.705" endtime="20201029 12:45:24.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:24.731" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:24.729" endtime="20201029 12:45:24.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.732" endtime="20201029 12:45:24.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.702" endtime="20201029 12:45:24.734"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.700" endtime="20201029 12:45:24.734"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:24.741" endtime="20201029 12:45:25.027"></status>
</kw>
<msg timestamp="20201029 12:45:25.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016615097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016836931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:24.739" endtime="20201029 12:45:25.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016615097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016836931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.031" endtime="20201029 12:45:25.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.039" endtime="20201029 12:45:25.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.737" endtime="20201029 12:45:25.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.735" endtime="20201029 12:45:25.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:25.045" level="INFO">${PHILIP_RES} = [{'diff': 0.00022183400000000061}, {'diff': 0.00022173600000000016}, {'diff': 0.00022170799999999755}, {'diff': 0.00022174999999999973}, {'diff': 0.0002216660000000023}, {'diff': 0.0002217080000000010...</msg>
<status status="PASS" starttime="20201029 12:45:25.042" endtime="20201029 12:45:25.046"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.050" level="INFO">${RESULT} = {'diff': [0.00022183400000000061, 0.00022173600000000016, 0.00022170799999999755, 0.00022174999999999973, 0.0002216660000000023, 0.00022170800000000102, 0.00022169500000000092, 0.00022172300000000006,...</msg>
<status status="PASS" starttime="20201029 12:45:25.046" endtime="20201029 12:45:25.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.055" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:25.054" endtime="20201029 12:45:25.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.058" level="INFO">VALUE: [0.00022183400000000061, 0.00022173600000000016, 0.00022170799999999755, 0.00022174999999999973, 0.0002216660000000023, 0.00022170800000000102, 0.00022169500000000092, 0.00022172300000000006, 0.00022169399999999798, 0.00022172200000000059, 0.0002217090000000005, 0.00022173600000000016, 0.0002216799999999984, 0.00022170799999999755, 0.00022172300000000006, 0.00022172200000000059, 0.00022174999999999973, 0.00022169400000000145, 0.00022169500000000092, 0.00022169399999999798, 0.00022170800000000102, 0.00022169500000000092, 0.0002217090000000005, 0.00022169400000000145, 0.00022169399999999798, 0.00022170899999999702, 0.00022169400000000145, 0.00022170800000000102, 0.0002217090000000005, 0.0002217090000000005, 0.00022169399999999798, 0.00022170799999999755, 0.0002217090000000005, 0.00022166700000000178, 0.00022168000000000188, 0.00022170799999999755, 0.00022173599999999669, 0.00022166599999999884, 0.00022170800000000102, 0.00022172200000000059, 0.0002217090000000005, 0.00022172200000000059, 0.00022170799999999755, 0.00022169499999999745, 0.00022172200000000059, 0.00022169400000000145, 0.00022168100000000135, 0.0002216249999999996, 0.00022170799999999755, 0.00022170800000000102]</msg>
<status status="PASS" starttime="20201029 12:45:25.056" endtime="20201029 12:45:25.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.051" endtime="20201029 12:45:25.059"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.699" endtime="20201029 12:45:25.060"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:24.676" endtime="20201029 12:45:25.060"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.062" endtime="20201029 12:45:25.082"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.061" endtime="20201029 12:45:25.083"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.090" endtime="20201029 12:45:25.112"></status>
</kw>
<msg timestamp="20201029 12:45:25.113" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.089" endtime="20201029 12:45:25.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.115" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.114" endtime="20201029 12:45:25.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.116" endtime="20201029 12:45:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.086" endtime="20201029 12:45:25.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.084" endtime="20201029 12:45:25.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.125" endtime="20201029 12:45:25.412"></status>
</kw>
<msg timestamp="20201029 12:45:25.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016826708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.124" endtime="20201029 12:45:25.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016826708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.416" endtime="20201029 12:45:25.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.424" endtime="20201029 12:45:25.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.121" endtime="20201029 12:45:25.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.119" endtime="20201029 12:45:25.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:25.430" level="INFO">${PHILIP_RES} = [{'diff': 0.00023881899999999776}, {'diff': 0.00023869399999999763}, {'diff': 0.00023870900000000014}, {'diff': 0.00023872200000000024}, {'diff': 0.00023872200000000024}, {'diff': 0.000238694000000001...</msg>
<status status="PASS" starttime="20201029 12:45:25.427" endtime="20201029 12:45:25.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.434" level="INFO">${RESULT} = {'diff': [0.00023881899999999776, 0.00023869399999999763, 0.00023870900000000014, 0.00023872200000000024, 0.00023872200000000024, 0.0002386940000000011, 0.00023876399999999895, 0.00023870800000000067,...</msg>
<status status="PASS" starttime="20201029 12:45:25.431" endtime="20201029 12:45:25.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.439" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:25.438" endtime="20201029 12:45:25.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.441" level="INFO">VALUE: [0.00023881899999999776, 0.00023869399999999763, 0.00023870900000000014, 0.00023872200000000024, 0.00023872200000000024, 0.0002386940000000011, 0.00023876399999999895, 0.00023870800000000067, 0.0002387919999999981, 0.0002387359999999998, 0.0002387079999999972, 0.0002386949999999971, 0.00023863899999999882, 0.0002387359999999998, 0.00023869500000000057, 0.000238681000000001, 0.0002386940000000011, 0.0002386940000000011, 0.00023869500000000057, 0.00023870900000000014, 0.0002386940000000011, 0.00023870800000000067, 0.00023869399999999763, 0.00023870900000000014, 0.00023875000000000285, 0.00023872200000000024, 0.0002386940000000011, 0.0002387229999999997, 0.00023870800000000067, 0.00023870800000000067, 0.0002387229999999997, 0.00023869500000000057, 0.00023869500000000057, 0.00023872200000000024, 0.0002386940000000011, 0.00023873699999999928, 0.0002386949999999971, 0.00023870800000000067, 0.00023866699999999796, 0.00023869500000000057, 0.00023870900000000014, 0.00023868000000000153, 0.0002386940000000011, 0.00023866700000000143, 0.00023869500000000057, 0.00023870800000000067, 0.00023870800000000067, 0.0002386949999999971, 0.00023870900000000014, 0.00023870800000000067]</msg>
<status status="PASS" starttime="20201029 12:45:25.440" endtime="20201029 12:45:25.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.435" endtime="20201029 12:45:25.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.083" endtime="20201029 12:45:25.443"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.060" endtime="20201029 12:45:25.443"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.446" endtime="20201029 12:45:25.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.444" endtime="20201029 12:45:25.466"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.477" endtime="20201029 12:45:25.499"></status>
</kw>
<msg timestamp="20201029 12:45:25.500" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.475" endtime="20201029 12:45:25.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.502" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.501" endtime="20201029 12:45:25.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.504" endtime="20201029 12:45:25.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.471" endtime="20201029 12:45:25.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.468" endtime="20201029 12:45:25.508"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.517" endtime="20201029 12:45:25.816"></status>
</kw>
<msg timestamp="20201029 12:45:25.819" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.515" endtime="20201029 12:45:25.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019910403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.820" endtime="20201029 12:45:25.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.828" endtime="20201029 12:45:25.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.513" endtime="20201029 12:45:25.830"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.510" endtime="20201029 12:45:25.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:25.834" level="INFO">${PHILIP_RES} = [{'diff': 0.00025647200000000064}, {'diff': 0.0002563050000000018}, {'diff': 0.0002563199999999974}, {'diff': 0.0002563060000000013}, {'diff': 0.0002562920000000017}, {'diff': 0.0002563340000000004}, ...</msg>
<status status="PASS" starttime="20201029 12:45:25.831" endtime="20201029 12:45:25.835"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:25.838" level="INFO">${RESULT} = {'diff': [0.00025647200000000064, 0.0002563050000000018, 0.0002563199999999974, 0.0002563060000000013, 0.0002562920000000017, 0.0002563340000000004, 0.00025632000000000085, 0.00025632000000000085, 0.0...</msg>
<status status="PASS" starttime="20201029 12:45:25.835" endtime="20201029 12:45:25.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.843" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:25.842" endtime="20201029 12:45:25.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.845" level="INFO">VALUE: [0.00025647200000000064, 0.0002563050000000018, 0.0002563199999999974, 0.0002563060000000013, 0.0002562920000000017, 0.0002563340000000004, 0.00025632000000000085, 0.00025632000000000085, 0.0002563059999999978, 0.0002563060000000013, 0.00025624999999999953, 0.0002563470000000005, 0.0002563050000000018, 0.00025633300000000095, 0.00025630499999999834, 0.0002563050000000018, 0.00025633300000000095, 0.00025630499999999834, 0.0002563060000000013, 0.000256348, 0.00025629199999999824, 0.0002563060000000013, 0.00025632000000000085, 0.0002563470000000005, 0.0002563190000000014, 0.00025629199999999824, 0.0002563189999999979, 0.0002563610000000001, 0.00025630499999999834, 0.0002563050000000018, 0.0002562639999999991, 0.0002563329999999975, 0.0002563190000000014, 0.0002563340000000004, 0.00025637499999999966, 0.0002563060000000013, 0.00025637499999999966, 0.0002563199999999974, 0.0002563060000000013, 0.00025632000000000085, 0.0002563190000000014, 0.00025629099999999877, 0.00025634699999999705, 0.00025630499999999834, 0.0002562639999999991, 0.0002563330000000044, 0.00025631900000000485, 0.0002563059999999978, 0.0002563059999999978, 0.0002563059999999978]</msg>
<status status="PASS" starttime="20201029 12:45:25.844" endtime="20201029 12:45:25.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.839" endtime="20201029 12:45:25.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.466" endtime="20201029 12:45:25.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.444" endtime="20201029 12:45:25.848"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:25.850" endtime="20201029 12:45:25.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.849" endtime="20201029 12:45:25.870"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.878" endtime="20201029 12:45:25.904"></status>
</kw>
<msg timestamp="20201029 12:45:25.904" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.877" endtime="20201029 12:45:25.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:25.907" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:25.905" endtime="20201029 12:45:25.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.908" endtime="20201029 12:45:25.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.874" endtime="20201029 12:45:25.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.872" endtime="20201029 12:45:25.911"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:25.919" endtime="20201029 12:45:26.205"></status>
</kw>
<msg timestamp="20201029 12:45:26.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016668139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016942806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:25.917" endtime="20201029 12:45:26.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016668139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016942806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.209" endtime="20201029 12:45:26.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.217" endtime="20201029 12:45:26.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.914" endtime="20201029 12:45:26.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.912" endtime="20201029 12:45:26.220"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:26.224" level="INFO">${PHILIP_RES} = [{'diff': 0.00027466700000000274}, {'diff': 0.000274514}, {'diff': 0.000274514}, {'diff': 0.00027448700000000034}, {'diff': 0.0002745279999999996}, {'diff': 0.000274514}, {'diff': 0.000274514}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:45:26.221" endtime="20201029 12:45:26.224"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.229" level="INFO">${RESULT} = {'diff': [0.00027466700000000274, 0.000274514, 0.000274514, 0.00027448700000000034, 0.0002745279999999996, 0.000274514, 0.000274514, 0.00027454100000000314, 0.00027454199999999915, 0.00027455600000000...</msg>
<status status="PASS" starttime="20201029 12:45:26.225" endtime="20201029 12:45:26.229"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.233" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:26.232" endtime="20201029 12:45:26.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.236" level="INFO">VALUE: [0.00027466700000000274, 0.000274514, 0.000274514, 0.00027448700000000034, 0.0002745279999999996, 0.000274514, 0.000274514, 0.00027454100000000314, 0.00027454199999999915, 0.0002745560000000022, 0.0002745409999999997, 0.0002745279999999996, 0.00027454199999999915, 0.0002745279999999996, 0.0002745409999999997, 0.0002745409999999997, 0.00027454199999999915, 0.0002745699999999983, 0.0002745550000000027, 0.0002745279999999996, 0.000274514, 0.0002744720000000013, 0.00027447199999999783, 0.0002745689999999988, 0.0002745279999999996, 0.00027448600000000087, 0.00027448600000000087, 0.0002745409999999997, 0.00027454199999999915, 0.00027448600000000087, 0.0002745279999999996, 0.0002745270000000001, 0.0002745279999999996, 0.0002745279999999996, 0.0002745279999999996, 0.00027455499999999924, 0.00027454199999999915, 0.00027454199999999915, 0.0002745420000000026, 0.00027450000000000044, 0.00027454199999999915, 0.0002745279999999996, 0.0002745840000000013, 0.00027455499999999924, 0.0002745550000000027, 0.0002745279999999996, 0.0002745279999999996, 0.0002745409999999997, 0.0002745279999999996, 0.00027452800000000305]</msg>
<status status="PASS" starttime="20201029 12:45:26.234" endtime="20201029 12:45:26.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.230" endtime="20201029 12:45:26.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.871" endtime="20201029 12:45:26.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:25.848" endtime="20201029 12:45:26.237"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.240" endtime="20201029 12:45:26.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.238" endtime="20201029 12:45:26.260"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.268" endtime="20201029 12:45:26.293"></status>
</kw>
<msg timestamp="20201029 12:45:26.294" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.266" endtime="20201029 12:45:26.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.296" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.295" endtime="20201029 12:45:26.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.297" endtime="20201029 12:45:26.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.264" endtime="20201029 12:45:26.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.262" endtime="20201029 12:45:26.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.306" endtime="20201029 12:45:26.605"></status>
</kw>
<msg timestamp="20201029 12:45:26.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016571083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016864556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.305" endtime="20201029 12:45:26.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016571083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016864556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.610" endtime="20201029 12:45:26.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.618" endtime="20201029 12:45:26.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.302" endtime="20201029 12:45:26.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.300" endtime="20201029 12:45:26.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:26.624" level="INFO">${PHILIP_RES} = [{'diff': 0.00029347299999999896}, {'diff': 0.0002933749999999985}, {'diff': 0.0002933329999999998}, {'diff': 0.00029336099999999893}, {'diff': 0.00029338899999999807}, {'diff': 0.00029334699999999936...</msg>
<status status="PASS" starttime="20201029 12:45:26.621" endtime="20201029 12:45:26.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:26.628" level="INFO">${RESULT} = {'diff': [0.00029347299999999896, 0.0002933749999999985, 0.0002933329999999998, 0.00029336099999999893, 0.00029338899999999807, 0.00029334699999999936, 0.0002933610000000024, 0.00029336200000000187, 0...</msg>
<status status="PASS" starttime="20201029 12:45:26.625" endtime="20201029 12:45:26.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.632" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:26.631" endtime="20201029 12:45:26.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.635" level="INFO">VALUE: [0.00029347299999999896, 0.0002933749999999985, 0.0002933329999999998, 0.00029336099999999893, 0.00029338899999999807, 0.00029334699999999936, 0.0002933610000000024, 0.00029336200000000187, 0.00029334699999999936, 0.00029336099999999893, 0.00029334700000000283, 0.00029336099999999893, 0.00029340299999999764, 0.00029334699999999936, 0.00029333400000000273, 0.0002933610000000024, 0.00029334699999999936, 0.00029333399999999926, 0.00029337500000000197, 0.0002933329999999998, 0.00029333399999999926, 0.0002933749999999985, 0.00029334699999999936, 0.0002933329999999998, 0.00029334799999999883, 0.00029334699999999936, 0.00029338900000000154, 0.0002933749999999985, 0.00029336099999999893, 0.0002934170000000007, 0.00029334700000000283, 0.00029333399999999926, 0.00029336099999999893, 0.00029336099999999893, 0.0002933480000000023, 0.0002933610000000024, 0.00029334699999999936, 0.00029334699999999936, 0.0002933610000000024, 0.0002933610000000024, 0.00029336099999999893, 0.0002933619999999984, 0.00029330500000000065, 0.00029334699999999936, 0.0002933199999999997, 0.00029337500000000197, 0.0002933329999999998, 0.00029334699999999936, 0.00029336100000000587, 0.00029334699999999936]</msg>
<status status="PASS" starttime="20201029 12:45:26.633" endtime="20201029 12:45:26.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.629" endtime="20201029 12:45:26.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.260" endtime="20201029 12:45:26.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.238" endtime="20201029 12:45:26.637"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:26.639" endtime="20201029 12:45:26.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.638" endtime="20201029 12:45:26.659"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.667" endtime="20201029 12:45:26.694"></status>
</kw>
<msg timestamp="20201029 12:45:26.694" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.665" endtime="20201029 12:45:26.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:26.696" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:26.695" endtime="20201029 12:45:26.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.697" endtime="20201029 12:45:26.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.663" endtime="20201029 12:45:26.700"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.661" endtime="20201029 12:45:26.701"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:26.707" endtime="20201029 12:45:26.993"></status>
</kw>
<msg timestamp="20201029 12:45:26.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016887514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.706" endtime="20201029 12:45:26.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016574597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016887514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:26.997" endtime="20201029 12:45:27.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.005" endtime="20201029 12:45:27.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.703" endtime="20201029 12:45:27.007"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.701" endtime="20201029 12:45:27.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:27.011" level="INFO">${PHILIP_RES} = [{'diff': 0.00031291699999999936}, {'diff': 0.0003127080000000018}, {'diff': 0.00031273700000000043}, {'diff': 0.0003127219999999979}, {'diff': 0.00031277799999999967}, {'diff': 0.00031277799999999967...</msg>
<status status="PASS" starttime="20201029 12:45:27.008" endtime="20201029 12:45:27.012"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.015" level="INFO">${RESULT} = {'diff': [0.00031291699999999936, 0.0003127080000000018, 0.00031273700000000043, 0.0003127219999999979, 0.00031277799999999967, 0.00031277799999999967, 0.0003128470000000015, 0.00031279199999999924, 0...</msg>
<status status="PASS" starttime="20201029 12:45:27.012" endtime="20201029 12:45:27.016"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.020" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:27.019" endtime="20201029 12:45:27.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.022" level="INFO">VALUE: [0.00031291699999999936, 0.0003127080000000018, 0.00031273700000000043, 0.0003127219999999979, 0.00031277799999999967, 0.00031277799999999967, 0.0003128470000000015, 0.00031279199999999924, 0.0003127770000000002, 0.00031277799999999967, 0.00031279199999999924, 0.0003127640000000001, 0.00031277799999999967, 0.0003128060000000023, 0.00031279099999999976, 0.00031280499999999933, 0.00031277799999999967, 0.00031279199999999924, 0.00031279099999999976, 0.00031277799999999967, 0.0003128059999999988, 0.0003127770000000002, 0.0003128059999999988, 0.00031279199999999924, 0.0003127770000000002, 0.00031279199999999924, 0.00031279199999999924, 0.00031277799999999967, 0.00031279099999999976, 0.00031277799999999967, 0.00031279199999999924, 0.0003127770000000002, 0.0003127640000000001, 0.000312848000000001, 0.0003127640000000001, 0.0003127640000000001, 0.00031277799999999967, 0.00031277799999999967, 0.0003128189999999989, 0.0003127640000000001, 0.00031277799999999967, 0.00031279099999999976, 0.00031274999999999706, 0.00031279199999999924, 0.00031279199999999924, 0.00031279199999999924, 0.00031277799999999967, 0.0003127640000000001, 0.0003127780000000066, 0.0003128059999999988]</msg>
<status status="PASS" starttime="20201029 12:45:27.021" endtime="20201029 12:45:27.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.016" endtime="20201029 12:45:27.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.660" endtime="20201029 12:45:27.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:26.637" endtime="20201029 12:45:27.025"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.027" endtime="20201029 12:45:27.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.026" endtime="20201029 12:45:27.047"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.055" endtime="20201029 12:45:27.083"></status>
</kw>
<msg timestamp="20201029 12:45:27.084" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.053" endtime="20201029 12:45:27.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.086" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.085" endtime="20201029 12:45:27.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.088" endtime="20201029 12:45:27.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.051" endtime="20201029 12:45:27.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.049" endtime="20201029 12:45:27.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.097" endtime="20201029 12:45:27.382"></status>
</kw>
<msg timestamp="20201029 12:45:27.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016570042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.095" endtime="20201029 12:45:27.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016570042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016903056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.386" endtime="20201029 12:45:27.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.394" endtime="20201029 12:45:27.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.093" endtime="20201029 12:45:27.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.091" endtime="20201029 12:45:27.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:27.401" level="INFO">${PHILIP_RES} = [{'diff': 0.00033301399999999953}, {'diff': 0.00033284800000000017}, {'diff': 0.00033283299999999766}, {'diff': 0.00033281900000000156}, {'diff': 0.0003328189999999981}, {'diff': 0.000332805000000002}...</msg>
<status status="PASS" starttime="20201029 12:45:27.398" endtime="20201029 12:45:27.401"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.406" level="INFO">${RESULT} = {'diff': [0.00033301399999999953, 0.00033284800000000017, 0.00033283299999999766, 0.00033281900000000156, 0.0003328189999999981, 0.000332805000000002, 0.0003328470000000007, 0.00033286100000000027, 0....</msg>
<status status="PASS" starttime="20201029 12:45:27.402" endtime="20201029 12:45:27.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.410" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:27.409" endtime="20201029 12:45:27.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.412" level="INFO">VALUE: [0.00033301399999999953, 0.00033284800000000017, 0.00033283299999999766, 0.00033281900000000156, 0.0003328189999999981, 0.000332805000000002, 0.0003328470000000007, 0.00033286100000000027, 0.00033283300000000113, 0.00033283299999999766, 0.00033281999999999756, 0.00033281999999999756, 0.00033286100000000027, 0.0003328340000000006, 0.0003328340000000006, 0.00033282000000000103, 0.0003328470000000007, 0.0003327639999999993, 0.0003327919999999984, 0.0003328189999999981, 0.00033286100000000027, 0.00033283299999999766, 0.00033281900000000156, 0.000332805000000002, 0.00033281900000000156, 0.00033283300000000113, 0.00033283299999999766, 0.00033286100000000027, 0.00033284699999999723, 0.00033283299999999766, 0.0003328189999999981, 0.0003328340000000006, 0.00033282000000000103, 0.0003328340000000006, 0.00033286100000000027, 0.0003328340000000006, 0.00033284800000000017, 0.00033281999999999756, 0.00033277799999999885, 0.00033282000000000103, 0.00033283299999999766, 0.0003328189999999981, 0.00033284699999999723, 0.00033281900000000503, 0.0003328189999999981, 0.0003328330000000046, 0.00033284699999999723, 0.00033281900000000503, 0.0003328189999999981, 0.00033284699999999723]</msg>
<status status="PASS" starttime="20201029 12:45:27.411" endtime="20201029 12:45:27.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.406" endtime="20201029 12:45:27.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.048" endtime="20201029 12:45:27.414"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.025" endtime="20201029 12:45:27.414"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.416" endtime="20201029 12:45:27.436"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.415" endtime="20201029 12:45:27.436"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.444" endtime="20201029 12:45:27.472"></status>
</kw>
<msg timestamp="20201029 12:45:27.473" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.443" endtime="20201029 12:45:27.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.475" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.474" endtime="20201029 12:45:27.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.476" endtime="20201029 12:45:27.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.440" endtime="20201029 12:45:27.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.438" endtime="20201029 12:45:27.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.485" endtime="20201029 12:45:27.772"></status>
</kw>
<msg timestamp="20201029 12:45:27.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017037194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.484" endtime="20201029 12:45:27.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016683611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017037194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:27.776" endtime="20201029 12:45:27.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.784" endtime="20201029 12:45:27.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.481" endtime="20201029 12:45:27.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.479" endtime="20201029 12:45:27.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:27.791" level="INFO">${PHILIP_RES} = [{'diff': 0.0003535829999999976}, {'diff': 0.00035345800000000094}, {'diff': 0.0003534720000000005}, {'diff': 0.0003535139999999992}, {'diff': 0.00035345799999999747}, {'diff': 0.0003534720000000005},...</msg>
<status status="PASS" starttime="20201029 12:45:27.788" endtime="20201029 12:45:27.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:27.795" level="INFO">${RESULT} = {'diff': [0.0003535829999999976, 0.00035345800000000094, 0.0003534720000000005, 0.0003535139999999992, 0.00035345799999999747, 0.0003534720000000005, 0.0003534720000000005, 0.0003534720000000005, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:27.792" endtime="20201029 12:45:27.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.799" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:27.798" endtime="20201029 12:45:27.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.801" level="INFO">VALUE: [0.0003535829999999976, 0.00035345800000000094, 0.0003534720000000005, 0.0003535139999999992, 0.00035345799999999747, 0.0003534720000000005, 0.0003534720000000005, 0.0003534720000000005, 0.0003534720000000005, 0.00035349999999999965, 0.0003534860000000001, 0.00035348699999999955, 0.000353473, 0.000353473, 0.00035345800000000094, 0.0003534439999999979, 0.0003534860000000001, 0.0003534720000000005, 0.0003534860000000001, 0.00035347199999999704, 0.00035343100000000127, 0.0003534720000000005, 0.0003534309999999978, 0.0003534720000000005, 0.000353473, 0.000353473, 0.000353473, 0.00035344500000000084, 0.0003534590000000004, 0.00035341600000000223, 0.00035345800000000094, 0.00035345800000000094, 0.00035344400000000137, 0.00035347199999999704, 0.0003534439999999979, 0.00035345800000000094, 0.0003534170000000017, 0.00035345800000000094, 0.0003534720000000005, 0.00035348599999999314, 0.0003534590000000004, 0.0003534590000000004, 0.0003534590000000004, 0.0003534860000000001, 0.0003534720000000005, 0.00035341600000000223, 0.00035345800000000094, 0.00035345800000000094, 0.00035345800000000094, 0.0003534720000000005]</msg>
<status status="PASS" starttime="20201029 12:45:27.800" endtime="20201029 12:45:27.802"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.795" endtime="20201029 12:45:27.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.437" endtime="20201029 12:45:27.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.414" endtime="20201029 12:45:27.803"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:27.805" endtime="20201029 12:45:27.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.804" endtime="20201029 12:45:27.825"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.834" endtime="20201029 12:45:27.862"></status>
</kw>
<msg timestamp="20201029 12:45:27.862" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.832" endtime="20201029 12:45:27.862"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:27.865" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:27.863" endtime="20201029 12:45:27.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.866" endtime="20201029 12:45:27.868"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.829" endtime="20201029 12:45:27.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.828" endtime="20201029 12:45:27.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:27.875" endtime="20201029 12:45:28.161"></status>
</kw>
<msg timestamp="20201029 12:45:28.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017830875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:27.874" endtime="20201029 12:45:28.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017456, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017830875, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:28.165" endtime="20201029 12:45:28.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.173" endtime="20201029 12:45:28.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.871" endtime="20201029 12:45:28.176"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.870" endtime="20201029 12:45:28.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:28.180" level="INFO">${PHILIP_RES} = [{'diff': 0.0003748750000000002}, {'diff': 0.0003747080000000014}, {'diff': 0.00037472200000000094}, {'diff': 0.00037472200000000094}, {'diff': 0.0003747080000000014}, {'diff': 0.00037472200000000094}...</msg>
<status status="PASS" starttime="20201029 12:45:28.177" endtime="20201029 12:45:28.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.184" level="INFO">${RESULT} = {'diff': [0.0003748750000000002, 0.0003747080000000014, 0.00037472200000000094, 0.00037472200000000094, 0.0003747080000000014, 0.00037472200000000094, 0.00037473599999999704, 0.00037467999999999876, 0...</msg>
<status status="PASS" starttime="20201029 12:45:28.181" endtime="20201029 12:45:28.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.188" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:28.187" endtime="20201029 12:45:28.189"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.191" level="INFO">VALUE: [0.0003748750000000002, 0.0003747080000000014, 0.00037472200000000094, 0.00037472200000000094, 0.0003747080000000014, 0.00037472200000000094, 0.00037473599999999704, 0.00037467999999999876, 0.00037472200000000094, 0.00037472200000000094, 0.0003747779999999992, 0.0003746950000000013, 0.00037472200000000094, 0.0003747080000000014, 0.0003747219999999975, 0.00037470900000000085, 0.0003747230000000004, 0.000374737, 0.0003747640000000031, 0.0003747360000000005, 0.00037470900000000085, 0.0003747230000000004, 0.0003747219999999975, 0.0003747079999999979, 0.0003747080000000014, 0.00037472200000000094, 0.0003747079999999979, 0.0003747360000000005, 0.0003746940000000018, 0.00037472200000000094, 0.0003747219999999975, 0.00037472200000000094, 0.00037472200000000094, 0.00037472200000000094, 0.00037472200000000094, 0.0003747080000000014, 0.00037472200000000094, 0.0003747080000000014, 0.0003746950000000013, 0.00037477699999999975, 0.0003747359999999936, 0.00037470900000000085, 0.0003747230000000004, 0.0003747500000000001, 0.00037470900000000085, 0.00037472200000000094, 0.0003746940000000018, 0.00037472200000000094, 0.0003747360000000005, 0.0003747080000000014]</msg>
<status status="PASS" starttime="20201029 12:45:28.189" endtime="20201029 12:45:28.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.185" endtime="20201029 12:45:28.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.826" endtime="20201029 12:45:28.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:27.803" endtime="20201029 12:45:28.193"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.196" endtime="20201029 12:45:28.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.194" endtime="20201029 12:45:28.216"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.224" endtime="20201029 12:45:28.254"></status>
</kw>
<msg timestamp="20201029 12:45:28.255" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.222" endtime="20201029 12:45:28.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.257" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.256" endtime="20201029 12:45:28.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.258" endtime="20201029 12:45:28.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.219" endtime="20201029 12:45:28.261"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.218" endtime="20201029 12:45:28.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.267" endtime="20201029 12:45:28.553"></status>
</kw>
<msg timestamp="20201029 12:45:28.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016828653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.266" endtime="20201029 12:45:28.557"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016828653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017225403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.558" endtime="20201029 12:45:28.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.566" endtime="20201029 12:45:28.567"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.263" endtime="20201029 12:45:28.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.262" endtime="20201029 12:45:28.568"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:28.572" level="INFO">${PHILIP_RES} = [{'diff': 0.00039675000000000127}, {'diff': 0.00039658299999999896}, {'diff': 0.0003965689999999994}, {'diff': 0.00039659699999999853}, {'diff': 0.00039656999999999887}, {'diff': 0.0003965699999999988...</msg>
<status status="PASS" starttime="20201029 12:45:28.569" endtime="20201029 12:45:28.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.577" level="INFO">${RESULT} = {'diff': [0.00039675000000000127, 0.00039658299999999896, 0.0003965689999999994, 0.00039659699999999853, 0.00039656999999999887, 0.00039656999999999887, 0.00039659699999999853, 0.00039656900000000286,...</msg>
<status status="PASS" starttime="20201029 12:45:28.573" endtime="20201029 12:45:28.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.581" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:28.580" endtime="20201029 12:45:28.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.584" level="INFO">VALUE: [0.00039675000000000127, 0.00039658299999999896, 0.0003965689999999994, 0.00039659699999999853, 0.00039656999999999887, 0.00039656999999999887, 0.00039659699999999853, 0.00039656900000000286, 0.0003965140000000006, 0.00039654100000000025, 0.00039658299999999896, 0.000396597000000002, 0.000396597999999998, 0.00039654199999999973, 0.00039658299999999896, 0.00039658299999999896, 0.00039658299999999896, 0.0003965689999999994, 0.000396597000000002, 0.0003965559999999993, 0.00039655600000000277, 0.0003966109999999981, 0.000396597000000002, 0.00039658299999999896, 0.00039658299999999896, 0.00039658299999999896, 0.00039662500000000114, 0.0003965840000000019, 0.00039656999999999887, 0.00039658299999999896, 0.00039658299999999896, 0.000396597000000002, 0.0003965689999999994, 0.0003965689999999994, 0.0003965830000000059, 0.00039658399999999844, 0.00039658399999999844, 0.00039656999999999887, 0.0003965549999999998, 0.0003965830000000059, 0.00039659699999999853, 0.00039659699999999853, 0.00039659699999999853, 0.00039659800000000495, 0.00039656999999999887, 0.0003965559999999993, 0.0003965559999999993, 0.0003965689999999994, 0.00039658299999999896, 0.0003965549999999998]</msg>
<status status="PASS" starttime="20201029 12:45:28.582" endtime="20201029 12:45:28.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.578" endtime="20201029 12:45:28.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.216" endtime="20201029 12:45:28.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.194" endtime="20201029 12:45:28.586"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.588" endtime="20201029 12:45:28.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.586" endtime="20201029 12:45:28.608"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.616" endtime="20201029 12:45:28.648"></status>
</kw>
<msg timestamp="20201029 12:45:28.648" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.614" endtime="20201029 12:45:28.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.651" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:28.649" endtime="20201029 12:45:28.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.652" endtime="20201029 12:45:28.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.612" endtime="20201029 12:45:28.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.610" endtime="20201029 12:45:28.654"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.661" endtime="20201029 12:45:28.946"></status>
</kw>
<msg timestamp="20201029 12:45:28.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016658347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017077514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.659" endtime="20201029 12:45:28.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016658347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017077514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:28.951" endtime="20201029 12:45:28.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:28.959" endtime="20201029 12:45:28.961"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.657" endtime="20201029 12:45:28.962"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.655" endtime="20201029 12:45:28.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:28.966" level="INFO">${PHILIP_RES} = [{'diff': 0.00041916699999999807}, {'diff': 0.00041904100000000194}, {'diff': 0.00041904199999999794}, {'diff': 0.0004190139999999988}, {'diff': 0.0004190140000000023}, {'diff': 0.0004190279999999984}...</msg>
<status status="PASS" starttime="20201029 12:45:28.963" endtime="20201029 12:45:28.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:28.970" level="INFO">${RESULT} = {'diff': [0.00041916699999999807, 0.00041904100000000194, 0.00041904199999999794, 0.0004190139999999988, 0.0004190140000000023, 0.0004190279999999984, 0.0004190420000000014, 0.000419056000000001, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:28.967" endtime="20201029 12:45:28.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.975" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:28.973" endtime="20201029 12:45:28.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:28.977" level="INFO">VALUE: [0.00041916699999999807, 0.00041904100000000194, 0.00041904199999999794, 0.0004190139999999988, 0.0004190140000000023, 0.0004190279999999984, 0.0004190420000000014, 0.000419056000000001, 0.00041904099999999847, 0.00041902800000000184, 0.0004191109999999998, 0.00041904199999999794, 0.0004190550000000015, 0.0004190420000000014, 0.00041911199999999926, 0.0004190550000000015, 0.0004190420000000014, 0.00041905499999999804, 0.0004190420000000014, 0.00041904099999999847, 0.0004190279999999984, 0.0004190550000000015, 0.00041904199999999794, 0.00041904199999999794, 0.00041904100000000194, 0.00041904199999999794, 0.0004190269999999989, 0.0004190420000000014, 0.00041905499999999804, 0.0004190420000000014, 0.000419056000000001, 0.000418959, 0.00041904199999999794, 0.00041902699999999543, 0.0004190420000000014, 0.00041904100000000194, 0.00041907000000000055, 0.0004190420000000014, 0.0004190419999999945, 0.0004190419999999945, 0.0004190550000000015, 0.0004190420000000014, 0.0004190550000000015, 0.00041907000000000055, 0.000419040999999995, 0.000419056000000001, 0.0004190550000000015, 0.0004190420000000014, 0.00041895799999999705, 0.0004190550000000015]</msg>
<status status="PASS" starttime="20201029 12:45:28.976" endtime="20201029 12:45:28.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.971" endtime="20201029 12:45:28.978"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.608" endtime="20201029 12:45:28.979"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.586" endtime="20201029 12:45:28.979"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:28.981" endtime="20201029 12:45:29.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.980" endtime="20201029 12:45:29.002"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.010" endtime="20201029 12:45:29.041"></status>
</kw>
<msg timestamp="20201029 12:45:29.042" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.008" endtime="20201029 12:45:29.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.044" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.043" endtime="20201029 12:45:29.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.046" endtime="20201029 12:45:29.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.006" endtime="20201029 12:45:29.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.004" endtime="20201029 12:45:29.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.056" endtime="20201029 12:45:29.349"></status>
</kw>
<msg timestamp="20201029 12:45:29.357" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017270389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.054" endtime="20201029 12:45:29.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017270389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017712625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.359" endtime="20201029 12:45:29.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.378" endtime="20201029 12:45:29.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.052" endtime="20201029 12:45:29.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.050" endtime="20201029 12:45:29.384"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:29.393" level="INFO">${PHILIP_RES} = [{'diff': 0.00044223599999999863}, {'diff': 0.0004421249999999981}, {'diff': 0.0004421249999999981}, {'diff': 0.0004421520000000012}, {'diff': 0.00044211200000000145}, {'diff': 0.000442111000000002}, ...</msg>
<status status="PASS" starttime="20201029 12:45:29.386" endtime="20201029 12:45:29.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:29.402" level="INFO">${RESULT} = {'diff': [0.00044223599999999863, 0.0004421249999999981, 0.0004421249999999981, 0.0004421520000000012, 0.00044211200000000145, 0.000442111000000002, 0.0004420970000000024, 0.00044216700000000025, 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:29.395" endtime="20201029 12:45:29.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.411" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:29.409" endtime="20201029 12:45:29.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.417" level="INFO">VALUE: [0.00044223599999999863, 0.0004421249999999981, 0.0004421249999999981, 0.0004421520000000012, 0.00044211200000000145, 0.000442111000000002, 0.0004420970000000024, 0.00044216700000000025, 0.0004420970000000024, 0.00044206900000000326, 0.00044209699999999894, 0.0004421109999999985, 0.0004421249999999981, 0.0004421939999999999, 0.0004421249999999981, 0.000442111000000002, 0.00044220900000000243, 0.00044209699999999894, 0.00044212500000000154, 0.00044212500000000154, 0.00044212500000000154, 0.0004420970000000024, 0.0004421390000000011, 0.00044213799999999817, 0.0004421249999999981, 0.0004421249999999981, 0.00044213899999999765, 0.0004421249999999981, 0.00044212500000000154, 0.00044209699999999894, 0.00044211099999999504, 0.000442111000000002, 0.0004421119999999945, 0.00044216700000000025, 0.000442111000000002, 0.0004420550000000037, 0.000442111000000002, 0.0004421390000000011, 0.00044212500000000154, 0.0004421390000000011, 0.0004421520000000012, 0.0004421249999999946, 0.00044211200000000145, 0.0004421949999999994, 0.0004421390000000011, 0.00044205499999999676, 0.0004421390000000011, 0.00044212500000000154, 0.00044212500000000154, 0.000442111000000002]</msg>
<status status="PASS" starttime="20201029 12:45:29.414" endtime="20201029 12:45:29.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.404" endtime="20201029 12:45:29.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.002" endtime="20201029 12:45:29.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:28.979" endtime="20201029 12:45:29.423"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:29.428" endtime="20201029 12:45:29.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.425" endtime="20201029 12:45:29.449"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.457" endtime="20201029 12:45:29.492"></status>
</kw>
<msg timestamp="20201029 12:45:29.492" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.455" endtime="20201029 12:45:29.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.495" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.493" endtime="20201029 12:45:29.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.496" endtime="20201029 12:45:29.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.453" endtime="20201029 12:45:29.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.451" endtime="20201029 12:45:29.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.505" endtime="20201029 12:45:29.791"></status>
</kw>
<msg timestamp="20201029 12:45:29.794" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.503" endtime="20201029 12:45:29.795"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017552556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.795" endtime="20201029 12:45:29.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.804" endtime="20201029 12:45:29.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.501" endtime="20201029 12:45:29.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.499" endtime="20201029 12:45:29.806"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:29.810" level="INFO">${PHILIP_RES} = [{'diff': 0.0004659309999999993}, {'diff': 0.0004657919999999996}, {'diff': 0.0004658330000000023}, {'diff': 0.00046581899999999926}, {'diff': 0.00046579200000000306}, {'diff': 0.00046580500000000316}...</msg>
<status status="PASS" starttime="20201029 12:45:29.807" endtime="20201029 12:45:29.811"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:29.815" level="INFO">${RESULT} = {'diff': [0.0004659309999999993, 0.0004657919999999996, 0.0004658330000000023, 0.00046581899999999926, 0.00046579200000000306, 0.00046580500000000316, 0.00046581899999999926, 0.000465778, 0.0004658189...</msg>
<status status="PASS" starttime="20201029 12:45:29.811" endtime="20201029 12:45:29.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.820" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:29.819" endtime="20201029 12:45:29.820"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.822" level="INFO">VALUE: [0.0004659309999999993, 0.0004657919999999996, 0.0004658330000000023, 0.00046581899999999926, 0.00046579200000000306, 0.00046580500000000316, 0.00046581899999999926, 0.000465778, 0.00046581899999999926, 0.000465763999999997, 0.00046580600000000263, 0.0004658620000000009, 0.0004657919999999996, 0.00046580599999999917, 0.0004657919999999996, 0.00046580599999999917, 0.00046584700000000187, 0.00046576400000000046, 0.00046581899999999926, 0.000465778, 0.0004658049999999997, 0.00046580599999999917, 0.00046579099999999665, 0.0004657919999999996, 0.0004657910000000001, 0.0004657919999999996, 0.0004657910000000001, 0.00046580599999999917, 0.0004658049999999997, 0.00046580599999999917, 0.0004657910000000001, 0.0004657919999999996, 0.0004658049999999997, 0.00046580599999999917, 0.00046581899999999926, 0.00046580599999999917, 0.0004657910000000001, 0.0004658060000000061, 0.0004657500000000009, 0.00046580599999999917, 0.0004658479999999979, 0.0004657919999999996, 0.00046576400000000046, 0.000465778, 0.0004658049999999997, 0.0004657919999999996, 0.0004657919999999996, 0.00046580599999999917, 0.0004657910000000001, 0.00046580599999999917]</msg>
<status status="PASS" starttime="20201029 12:45:29.821" endtime="20201029 12:45:29.823"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.816" endtime="20201029 12:45:29.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.449" endtime="20201029 12:45:29.824"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.423" endtime="20201029 12:45:29.824"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:29.827" endtime="20201029 12:45:29.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.825" endtime="20201029 12:45:29.847"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.855" endtime="20201029 12:45:29.889"></status>
</kw>
<msg timestamp="20201029 12:45:29.889" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.854" endtime="20201029 12:45:29.890"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:29.892" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:29.890" endtime="20201029 12:45:29.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.893" endtime="20201029 12:45:29.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.851" endtime="20201029 12:45:29.895"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.849" endtime="20201029 12:45:29.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:29.902" endtime="20201029 12:45:30.208"></status>
</kw>
<msg timestamp="20201029 12:45:30.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017099736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:29.901" endtime="20201029 12:45:30.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.234" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017099736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017589931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.218" endtime="20201029 12:45:30.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.237" endtime="20201029 12:45:30.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.898" endtime="20201029 12:45:30.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.896" endtime="20201029 12:45:30.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:30.246" level="INFO">${PHILIP_RES} = [{'diff': 0.0004901949999999988}, {'diff': 0.0004901660000000002}, {'diff': 0.0004900969999999984}, {'diff': 0.0004900689999999992}, {'diff': 0.0004901110000000014}, {'diff': 0.0004900980000000013}, {...</msg>
<status status="PASS" starttime="20201029 12:45:30.242" endtime="20201029 12:45:30.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.250" level="INFO">${RESULT} = {'diff': [0.0004901949999999988, 0.0004901660000000002, 0.0004900969999999984, 0.0004900689999999992, 0.0004901110000000014, 0.0004900980000000013, 0.0004900690000000027, 0.0004900969999999984, 0.0004...</msg>
<status status="PASS" starttime="20201029 12:45:30.247" endtime="20201029 12:45:30.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.254" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:30.253" endtime="20201029 12:45:30.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.257" level="INFO">VALUE: [0.0004901949999999988, 0.0004901660000000002, 0.0004900969999999984, 0.0004900689999999992, 0.0004901110000000014, 0.0004900980000000013, 0.0004900690000000027, 0.0004900969999999984, 0.0004900970000000018, 0.0004900980000000013, 0.0004900969999999984, 0.0004901249999999975, 0.0004900829999999988, 0.0004900980000000013, 0.0004900700000000022, 0.0004900970000000018, 0.0004900830000000023, 0.0004900840000000017, 0.0004900559999999991, 0.0004900689999999992, 0.0004900829999999988, 0.0004900829999999988, 0.0004900839999999983, 0.0004900970000000018, 0.0004900830000000023, 0.0004901110000000014, 0.0004900980000000013, 0.0004900980000000013, 0.0004901110000000014, 0.0004901110000000014, 0.0004901110000000014, 0.0004901120000000009, 0.0004900829999999953, 0.0004900829999999953, 0.0004900829999999953, 0.0004900839999999948, 0.0004900829999999953, 0.0004900690000000027, 0.0004900970000000018, 0.0004900980000000013, 0.0004901110000000014, 0.0004900970000000018, 0.0004901110000000014, 0.0004900830000000023, 0.0004900980000000013, 0.0004900970000000018, 0.0004900830000000023, 0.0004900409999999966, 0.0004900840000000017, 0.0004900419999999961]</msg>
<status status="PASS" starttime="20201029 12:45:30.255" endtime="20201029 12:45:30.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.250" endtime="20201029 12:45:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.848" endtime="20201029 12:45:30.258"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:29.825" endtime="20201029 12:45:30.259"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.261" endtime="20201029 12:45:30.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.260" endtime="20201029 12:45:30.281"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.290" endtime="20201029 12:45:30.326"></status>
</kw>
<msg timestamp="20201029 12:45:30.327" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.288" endtime="20201029 12:45:30.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.329" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.328" endtime="20201029 12:45:30.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.330" endtime="20201029 12:45:30.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.285" endtime="20201029 12:45:30.334"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.283" endtime="20201029 12:45:30.334"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.341" endtime="20201029 12:45:30.627"></status>
</kw>
<msg timestamp="20201029 12:45:30.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017277681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017792792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.339" endtime="20201029 12:45:30.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017277681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017792792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.631" endtime="20201029 12:45:30.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.640" endtime="20201029 12:45:30.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.337" endtime="20201029 12:45:30.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.335" endtime="20201029 12:45:30.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:30.646" level="INFO">${PHILIP_RES} = [{'diff': 0.0005151110000000021}, {'diff': 0.000514971999999999}, {'diff': 0.0005149859999999985}, {'diff': 0.000514986000000002}, {'diff': 0.000514971999999999}, {'diff': 0.0005149999999999981}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:30.643" endtime="20201029 12:45:30.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:30.650" level="INFO">${RESULT} = {'diff': [0.0005151110000000021, 0.000514971999999999, 0.0005149859999999985, 0.000514986000000002, 0.000514971999999999, 0.0005149999999999981, 0.0005150420000000003, 0.0005150000000000016, 0.0005149...</msg>
<status status="PASS" starttime="20201029 12:45:30.647" endtime="20201029 12:45:30.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.655" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:30.654" endtime="20201029 12:45:30.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.657" level="INFO">VALUE: [0.0005151110000000021, 0.000514971999999999, 0.0005149859999999985, 0.000514986000000002, 0.000514971999999999, 0.0005149999999999981, 0.0005150420000000003, 0.0005150000000000016, 0.000514986999999998, 0.0005150129999999982, 0.000514986000000002, 0.000514986000000002, 0.000514971999999999, 0.000514971999999999, 0.0005149720000000024, 0.0005150420000000003, 0.0005149859999999985, 0.0005149870000000015, 0.0005150280000000007, 0.0005149859999999985, 0.000514971999999999, 0.0005149720000000024, 0.0005150420000000003, 0.0005149859999999985, 0.0005149859999999985, 0.0005149720000000024, 0.0005149859999999951, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999951, 0.0005149720000000024, 0.000514986000000002, 0.0005149859999999951, 0.0005149720000000024, 0.0005150000000000016, 0.0005149870000000015, 0.0005149730000000019, 0.0005149719999999955, 0.000514986000000002, 0.000514986000000002, 0.0005149859999999951, 0.0005149720000000024, 0.0005150000000000016, 0.0005149859999999951, 0.0005149590000000023, 0.0005149730000000019, 0.0005150000000000016, 0.000514986000000002, 0.0005149859999999951, 0.000514986000000002]</msg>
<status status="PASS" starttime="20201029 12:45:30.656" endtime="20201029 12:45:30.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.651" endtime="20201029 12:45:30.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.282" endtime="20201029 12:45:30.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.259" endtime="20201029 12:45:30.664"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:30.667" endtime="20201029 12:45:30.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.665" endtime="20201029 12:45:30.687"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.695" endtime="20201029 12:45:30.734"></status>
</kw>
<msg timestamp="20201029 12:45:30.734" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.694" endtime="20201029 12:45:30.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:30.737" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:30.735" endtime="20201029 12:45:30.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.738" endtime="20201029 12:45:30.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.691" endtime="20201029 12:45:30.740"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.689" endtime="20201029 12:45:30.741"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:30.747" endtime="20201029 12:45:31.034"></status>
</kw>
<msg timestamp="20201029 12:45:31.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017258306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017798917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:30.746" endtime="20201029 12:45:31.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017258306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017798917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.038" endtime="20201029 12:45:31.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.046" endtime="20201029 12:45:31.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.743" endtime="20201029 12:45:31.048"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.742" endtime="20201029 12:45:31.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:31.053" level="INFO">${PHILIP_RES} = [{'diff': 0.0005406109999999999}, {'diff': 0.0005405000000000028}, {'diff': 0.0005404580000000006}, {'diff': 0.0005404859999999997}, {'diff': 0.0005404300000000015}, {'diff': 0.0005405139999999989}, {...</msg>
<status status="PASS" starttime="20201029 12:45:31.050" endtime="20201029 12:45:31.053"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.058" level="INFO">${RESULT} = {'diff': [0.0005406109999999999, 0.0005405000000000028, 0.0005404580000000006, 0.0005404859999999997, 0.0005404300000000015, 0.0005405139999999989, 0.0005404590000000001, 0.0005404030000000018, 0.0005...</msg>
<status status="PASS" starttime="20201029 12:45:31.054" endtime="20201029 12:45:31.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.062" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:31.061" endtime="20201029 12:45:31.063"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.065" level="INFO">VALUE: [0.0005406109999999999, 0.0005405000000000028, 0.0005404580000000006, 0.0005404859999999997, 0.0005404300000000015, 0.0005405139999999989, 0.0005404590000000001, 0.0005404030000000018, 0.0005404859999999997, 0.0005405279999999985, 0.0005404859999999997, 0.0005404859999999997, 0.0005404999999999993, 0.0005405700000000006, 0.0005404869999999992, 0.0005404859999999997, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005404999999999993, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005405280000000019, 0.0005404170000000014, 0.0005404999999999993, 0.0005404859999999997, 0.0005404869999999992, 0.0005404859999999997, 0.0005404859999999997, 0.0005404859999999997, 0.000540541999999998, 0.0005404859999999997, 0.0005404859999999997, 0.0005404859999999997, 0.0005405559999999976, 0.0005404720000000002, 0.0005404310000000009, 0.0005404859999999997, 0.0005404859999999997, 0.0005404999999999993, 0.0005404580000000006, 0.0005404580000000006, 0.0005404999999999993, 0.0005404859999999997, 0.0005404999999999993, 0.0005404859999999997, 0.0005404859999999997, 0.0005404720000000002]</msg>
<status status="PASS" starttime="20201029 12:45:31.064" endtime="20201029 12:45:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.059" endtime="20201029 12:45:31.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.687" endtime="20201029 12:45:31.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:30.665" endtime="20201029 12:45:31.067"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.069" endtime="20201029 12:45:31.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.068" endtime="20201029 12:45:31.089"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.098" endtime="20201029 12:45:31.138"></status>
</kw>
<msg timestamp="20201029 12:45:31.139" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.096" endtime="20201029 12:45:31.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.141" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.140" endtime="20201029 12:45:31.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.143" endtime="20201029 12:45:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.094" endtime="20201029 12:45:31.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.092" endtime="20201029 12:45:31.146"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.153" endtime="20201029 12:45:31.440"></status>
</kw>
<msg timestamp="20201029 12:45:31.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017421417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.151" endtime="20201029 12:45:31.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.452" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017421417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017988167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.445" endtime="20201029 12:45:31.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.453" endtime="20201029 12:45:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.148" endtime="20201029 12:45:31.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.147" endtime="20201029 12:45:31.456"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:31.460" level="INFO">${PHILIP_RES} = [{'diff': 0.0005667499999999978}, {'diff': 0.0005666250000000012}, {'diff': 0.0005665839999999984}, {'diff': 0.000566597000000002}, {'diff': 0.0005665969999999985}, {'diff': 0.000566582999999999}, {'d...</msg>
<status status="PASS" starttime="20201029 12:45:31.457" endtime="20201029 12:45:31.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.464" level="INFO">${RESULT} = {'diff': [0.0005667499999999978, 0.0005666250000000012, 0.0005665839999999984, 0.000566597000000002, 0.0005665969999999985, 0.000566582999999999, 0.0005666119999999976, 0.0005665969999999985, 0.000566...</msg>
<status status="PASS" starttime="20201029 12:45:31.461" endtime="20201029 12:45:31.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.468" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:31.467" endtime="20201029 12:45:31.469"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.471" level="INFO">VALUE: [0.0005667499999999978, 0.0005666250000000012, 0.0005665839999999984, 0.000566597000000002, 0.0005665969999999985, 0.000566582999999999, 0.0005666119999999976, 0.0005665969999999985, 0.0005665969999999985, 0.0005665980000000015, 0.000566582999999999, 0.0005666109999999981, 0.000566582999999999, 0.0005665969999999985, 0.0005666109999999981, 0.0005666109999999981, 0.0005665839999999984, 0.000566582999999999, 0.0005665969999999985, 0.000566597999999998, 0.0005665969999999985, 0.0005665689999999994, 0.0005666109999999981, 0.000566597000000002, 0.0005665689999999959, 0.0005665830000000024, 0.0005666110000000016, 0.0005665829999999955, 0.000566597000000002, 0.0005666669999999999, 0.0005666110000000016, 0.0005666109999999946, 0.0005666110000000016, 0.0005666109999999946, 0.0005665969999999951, 0.0005666109999999946, 0.0005666109999999946, 0.0005665969999999951, 0.0005666109999999946, 0.0005666809999999994, 0.0005666109999999946, 0.0005666109999999946, 0.0005666109999999946, 0.0005666109999999946, 0.0005665829999999955, 0.0005665969999999951, 0.0005666109999999946, 0.0005666660000000004, 0.0005665969999999951, 0.000566583999999995]</msg>
<status status="PASS" starttime="20201029 12:45:31.469" endtime="20201029 12:45:31.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.465" endtime="20201029 12:45:31.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.090" endtime="20201029 12:45:31.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.067" endtime="20201029 12:45:31.473"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.475" endtime="20201029 12:45:31.495"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.474" endtime="20201029 12:45:31.495"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.504" endtime="20201029 12:45:31.544"></status>
</kw>
<msg timestamp="20201029 12:45:31.545" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.502" endtime="20201029 12:45:31.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.547" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.546" endtime="20201029 12:45:31.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.548" endtime="20201029 12:45:31.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.499" endtime="20201029 12:45:31.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.497" endtime="20201029 12:45:31.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.559" endtime="20201029 12:45:31.845"></status>
</kw>
<msg timestamp="20201029 12:45:31.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.557" endtime="20201029 12:45:31.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017086181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.849" endtime="20201029 12:45:31.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.857" endtime="20201029 12:45:31.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.554" endtime="20201029 12:45:31.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.553" endtime="20201029 12:45:31.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:31.864" level="INFO">${PHILIP_RES} = [{'diff': 0.0005934300000000024}, {'diff': 0.0005933199999999979}, {'diff': 0.0005933190000000019}, {'diff': 0.0005933060000000018}, {'diff': 0.000593332999999998}, {'diff': 0.00059325}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201029 12:45:31.861" endtime="20201029 12:45:31.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:31.868" level="INFO">${RESULT} = {'diff': [0.0005934300000000024, 0.0005933199999999979, 0.0005933190000000019, 0.0005933060000000018, 0.000593332999999998, 0.00059325, 0.0005933750000000002, 0.0005933189999999984, 0.0005933329999999...</msg>
<status status="PASS" starttime="20201029 12:45:31.865" endtime="20201029 12:45:31.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.873" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:31.871" endtime="20201029 12:45:31.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.875" level="INFO">VALUE: [0.0005934300000000024, 0.0005933199999999979, 0.0005933190000000019, 0.0005933060000000018, 0.000593332999999998, 0.00059325, 0.0005933750000000002, 0.0005933189999999984, 0.000593332999999998, 0.0005933060000000018, 0.0005933330000000014, 0.0005933339999999974, 0.0005933050000000023, 0.0005933190000000019, 0.0005933339999999974, 0.0005933330000000014, 0.00059325, 0.000593332999999998, 0.000593347999999997, 0.0005933060000000018, 0.0005933049999999988, 0.0005933059999999983, 0.000593347000000001, 0.0005933190000000019, 0.0005933060000000018, 0.0005933050000000023, 0.000593333999999994, 0.000593347000000001, 0.0005933190000000019, 0.0005933059999999948, 0.0005933610000000006, 0.0005933060000000018, 0.0005933199999999944, 0.0005933050000000023, 0.0005933200000000013, 0.0005933189999999949, 0.0005933190000000019, 0.000593347000000001, 0.0005933329999999945, 0.0005933200000000013, 0.0005933190000000019, 0.0005932639999999961, 0.0005933060000000018, 0.0005933190000000019, 0.0005932919999999953, 0.0005933190000000019, 0.0005933190000000019, 0.0005933340000000009, 0.0005933190000000019, 0.0005933200000000013]</msg>
<status status="PASS" starttime="20201029 12:45:31.874" endtime="20201029 12:45:31.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.869" endtime="20201029 12:45:31.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.496" endtime="20201029 12:45:31.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.473" endtime="20201029 12:45:31.878"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:31.880" endtime="20201029 12:45:31.900"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.879" endtime="20201029 12:45:31.900"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.909" endtime="20201029 12:45:31.950"></status>
</kw>
<msg timestamp="20201029 12:45:31.950" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.907" endtime="20201029 12:45:31.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:31.953" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:31.951" endtime="20201029 12:45:31.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.954" endtime="20201029 12:45:31.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.904" endtime="20201029 12:45:31.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.902" endtime="20201029 12:45:31.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:31.963" endtime="20201029 12:45:32.250"></status>
</kw>
<msg timestamp="20201029 12:45:32.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017048764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017669528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:31.962" endtime="20201029 12:45:32.254"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017048764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017669528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.255" endtime="20201029 12:45:32.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.263" endtime="20201029 12:45:32.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.959" endtime="20201029 12:45:32.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.957" endtime="20201029 12:45:32.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:32.269" level="INFO">${PHILIP_RES} = [{'diff': 0.0006207639999999993}, {'diff': 0.0006206389999999992}, {'diff': 0.0006206529999999988}, {'diff': 0.0006206249999999996}, {'diff': 0.0006205970000000005}, {'diff': 0.0006206249999999996}, {...</msg>
<status status="PASS" starttime="20201029 12:45:32.266" endtime="20201029 12:45:32.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.274" level="INFO">${RESULT} = {'diff': [0.0006207639999999993, 0.0006206389999999992, 0.0006206529999999988, 0.0006206249999999996, 0.0006205970000000005, 0.0006206249999999996, 0.0006206529999999988, 0.0006206110000000001, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:45:32.270" endtime="20201029 12:45:32.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.279" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:32.278" endtime="20201029 12:45:32.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.281" level="INFO">VALUE: [0.0006207639999999993, 0.0006206389999999992, 0.0006206529999999988, 0.0006206249999999996, 0.0006205970000000005, 0.0006206249999999996, 0.0006206529999999988, 0.0006206110000000001, 0.0006206529999999988, 0.0006206250000000031, 0.0006206659999999989, 0.0006206519999999993, 0.0006205970000000005, 0.000620598, 0.0006206390000000027, 0.0006206389999999992, 0.0006206530000000023, 0.0006206390000000027, 0.0006206530000000023, 0.0006206390000000027, 0.0006206390000000027, 0.0006206670000000018, 0.0006206249999999996, 0.0006207089999999971, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006206389999999992, 0.0006206379999999997, 0.0006206519999999993, 0.0006205970000000005, 0.0006206249999999996, 0.0006206529999999988, 0.0006206119999999996, 0.0006206389999999992, 0.0006206389999999992, 0.0006206389999999992, 0.0006206529999999988, 0.0006206110000000001, 0.0006206529999999988, 0.0006206389999999992, 0.0006206529999999988, 0.0006206249999999996, 0.0006206389999999992, 0.0006206389999999992, 0.0006206519999999993, 0.0006206249999999996, 0.0006206379999999997, 0.0006206379999999997, 0.0006206389999999992]</msg>
<status status="PASS" starttime="20201029 12:45:32.280" endtime="20201029 12:45:32.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.275" endtime="20201029 12:45:32.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.901" endtime="20201029 12:45:32.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:31.878" endtime="20201029 12:45:32.283"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.286" endtime="20201029 12:45:32.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.284" endtime="20201029 12:45:32.306"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.314" endtime="20201029 12:45:32.360"></status>
</kw>
<msg timestamp="20201029 12:45:32.361" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.313" endtime="20201029 12:45:32.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.366" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.363" endtime="20201029 12:45:32.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.368" endtime="20201029 12:45:32.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.310" endtime="20201029 12:45:32.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.308" endtime="20201029 12:45:32.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.388" endtime="20201029 12:45:32.684"></status>
</kw>
<msg timestamp="20201029 12:45:32.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017985611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018634319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.385" endtime="20201029 12:45:32.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017985611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018634319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.688" endtime="20201029 12:45:32.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.697" endtime="20201029 12:45:32.698"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.379" endtime="20201029 12:45:32.699"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.375" endtime="20201029 12:45:32.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:32.703" level="INFO">${PHILIP_RES} = [{'diff': 0.0006487080000000013}, {'diff': 0.0006485980000000002}, {'diff': 0.0006485980000000002}, {'diff': 0.0006485269999999994}, {'diff': 0.0006485829999999977}, {'diff': 0.0006485699999999976}, {...</msg>
<status status="PASS" starttime="20201029 12:45:32.700" endtime="20201029 12:45:32.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:32.707" level="INFO">${RESULT} = {'diff': [0.0006487080000000013, 0.0006485980000000002, 0.0006485980000000002, 0.0006485269999999994, 0.0006485829999999977, 0.0006485699999999976, 0.0006485689999999981, 0.0006485830000000012, 0.0006...</msg>
<status status="PASS" starttime="20201029 12:45:32.704" endtime="20201029 12:45:32.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.712" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:32.711" endtime="20201029 12:45:32.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.714" level="INFO">VALUE: [0.0006487080000000013, 0.0006485980000000002, 0.0006485980000000002, 0.0006485269999999994, 0.0006485829999999977, 0.0006485699999999976, 0.0006485689999999981, 0.0006485830000000012, 0.0006485700000000011, 0.0006485690000000016, 0.000648555000000002, 0.0006484860000000002, 0.0006485830000000012, 0.0006485700000000011, 0.0006485840000000007, 0.0006485830000000012, 0.0006485699999999976, 0.0006485969999999973, 0.0006485829999999977, 0.0006485829999999977, 0.0006485830000000012, 0.0006485690000000016, 0.0006485980000000002, 0.0006485830000000012, 0.0006485829999999942, 0.000648541999999995, 0.0006485409999999955, 0.0006485830000000012, 0.0006485700000000011, 0.0006485689999999947, 0.0006485830000000012, 0.0006485690000000016, 0.0006485690000000016, 0.0006485560000000015, 0.0006486389999999995, 0.0006485690000000016, 0.0006485560000000015, 0.0006485560000000015, 0.0006485140000000028, 0.0006485840000000007, 0.0006485560000000015, 0.0006485280000000024, 0.0006486389999999995, 0.0006485700000000011, 0.0006485830000000012, 0.0006485840000000007, 0.0006485830000000012, 0.0006485690000000016, 0.0006485700000000011, 0.0006485830000000012]</msg>
<status status="PASS" starttime="20201029 12:45:32.713" endtime="20201029 12:45:32.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.708" endtime="20201029 12:45:32.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.306" endtime="20201029 12:45:32.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.284" endtime="20201029 12:45:32.716"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:32.719" endtime="20201029 12:45:32.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.717" endtime="20201029 12:45:32.739"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.747" endtime="20201029 12:45:32.794"></status>
</kw>
<msg timestamp="20201029 12:45:32.794" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.746" endtime="20201029 12:45:32.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:32.800" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:32.795" endtime="20201029 12:45:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.802" endtime="20201029 12:45:32.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.743" endtime="20201029 12:45:32.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.741" endtime="20201029 12:45:32.806"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:32.817" endtime="20201029 12:45:33.106"></status>
</kw>
<msg timestamp="20201029 12:45:33.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:32.816" endtime="20201029 12:45:33.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017351167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018028403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.110" endtime="20201029 12:45:33.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.118" endtime="20201029 12:45:33.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.812" endtime="20201029 12:45:33.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.808" endtime="20201029 12:45:33.121"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:33.124" level="INFO">${PHILIP_RES} = [{'diff': 0.0006772359999999977}, {'diff': 0.0006771110000000011}, {'diff': 0.0006771110000000011}, {'diff': 0.0006771250000000006}, {'diff': 0.0006770689999999989}, {'diff': 0.0006771109999999976}, {...</msg>
<status status="PASS" starttime="20201029 12:45:33.121" endtime="20201029 12:45:33.125"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.128" level="INFO">${RESULT} = {'diff': [0.0006772359999999977, 0.0006771110000000011, 0.0006771110000000011, 0.0006771250000000006, 0.0006770689999999989, 0.0006771109999999976, 0.0006771250000000006, 0.000677098000000001, 0.00067...</msg>
<status status="PASS" starttime="20201029 12:45:33.125" endtime="20201029 12:45:33.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.133" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:33.132" endtime="20201029 12:45:33.133"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.135" level="INFO">VALUE: [0.0006772359999999977, 0.0006771110000000011, 0.0006771110000000011, 0.0006771250000000006, 0.0006770689999999989, 0.0006771109999999976, 0.0006771250000000006, 0.000677098000000001, 0.0006770970000000015, 0.000677096999999998, 0.0006771110000000011, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006771249999999972, 0.0006771109999999976, 0.0006770829999999985, 0.0006770830000000019, 0.0006771250000000006, 0.0006770830000000019, 0.0006771110000000011, 0.0006771249999999937, 0.0006771390000000002, 0.0006770840000000014, 0.0006771390000000002, 0.0006770700000000018, 0.0006770969999999946, 0.0006771110000000011, 0.0006771110000000011, 0.0006771250000000006, 0.0006771110000000011, 0.0006771110000000011, 0.0006771110000000011, 0.0006771250000000006, 0.0006770830000000019, 0.0006771250000000006, 0.0006771250000000006, 0.0006771110000000011, 0.0006771250000000006, 0.0006771110000000011, 0.0006771110000000011, 0.0006770839999999945, 0.0006771390000000002, 0.0006770970000000015, 0.0006771799999999994, 0.0006771250000000006, 0.0006771250000000006, 0.0006770560000000023, 0.0006771250000000006, 0.0006771109999999941]</msg>
<status status="PASS" starttime="20201029 12:45:33.134" endtime="20201029 12:45:33.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.129" endtime="20201029 12:45:33.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.739" endtime="20201029 12:45:33.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:32.717" endtime="20201029 12:45:33.138"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:33.140" endtime="20201029 12:45:33.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.139" endtime="20201029 12:45:33.161"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.170" endtime="20201029 12:45:33.218"></status>
</kw>
<msg timestamp="20201029 12:45:33.219" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.168" endtime="20201029 12:45:33.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.224" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.221" endtime="20201029 12:45:33.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.226" endtime="20201029 12:45:33.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.165" endtime="20201029 12:45:33.230"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.163" endtime="20201029 12:45:33.231"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.245" endtime="20201029 12:45:33.555"></status>
</kw>
<msg timestamp="20201029 12:45:33.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019167764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.242" endtime="20201029 12:45:33.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018461389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019167764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.560" endtime="20201029 12:45:33.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.568" endtime="20201029 12:45:33.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.236" endtime="20201029 12:45:33.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.233" endtime="20201029 12:45:33.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:33.575" level="INFO">${PHILIP_RES} = [{'diff': 0.0007063749999999987}, {'diff': 0.0007062639999999981}, {'diff': 0.000706235999999999}, {'diff': 0.0007062640000000016}, {'diff': 0.0007062640000000016}, {'diff': 0.0007062219999999994}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:33.572" endtime="20201029 12:45:33.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.580" level="INFO">${RESULT} = {'diff': [0.0007063749999999987, 0.0007062639999999981, 0.000706235999999999, 0.0007062640000000016, 0.0007062640000000016, 0.0007062219999999994, 0.0007062499999999985, 0.000706235999999999, 0.000706...</msg>
<status status="PASS" starttime="20201029 12:45:33.576" endtime="20201029 12:45:33.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.584" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:33.583" endtime="20201029 12:45:33.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.587" level="INFO">VALUE: [0.0007063749999999987, 0.0007062639999999981, 0.000706235999999999, 0.0007062640000000016, 0.0007062640000000016, 0.0007062219999999994, 0.0007062499999999985, 0.000706235999999999, 0.0007062499999999985, 0.0007062640000000016, 0.000706250000000002, 0.000706235999999999, 0.0007062639999999981, 0.0007062499999999985, 0.000706250000000002, 0.0007062640000000016, 0.0007062640000000016, 0.000706235999999999, 0.0007062639999999981, 0.000706235999999999, 0.0007062639999999981, 0.0007061940000000003, 0.0007062910000000047, 0.0007062219999999994, 0.0007062780000000046, 0.0007062079999999998, 0.0007062779999999977, 0.0007063049999999974, 0.0007062639999999981, 0.0007062769999999982, 0.0007062499999999985, 0.0007062919999999973, 0.0007062639999999981, 0.0007062630000000056, 0.0007062780000000046, 0.000706235999999999, 0.0007062499999999985, 0.0007062079999999998, 0.0007062499999999985, 0.000706235999999999, 0.0007062499999999985, 0.0007062219999999994, 0.0007061810000000002, 0.0007062499999999985, 0.0007062079999999998, 0.0007062500000000055, 0.0007061810000000002, 0.0007062079999999998, 0.0007062499999999985, 0.0007062639999999981]</msg>
<status status="PASS" starttime="20201029 12:45:33.585" endtime="20201029 12:45:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.581" endtime="20201029 12:45:33.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.162" endtime="20201029 12:45:33.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.138" endtime="20201029 12:45:33.589"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:33.591" endtime="20201029 12:45:33.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.590" endtime="20201029 12:45:33.611"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.620" endtime="20201029 12:45:33.667"></status>
</kw>
<msg timestamp="20201029 12:45:33.667" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.618" endtime="20201029 12:45:33.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.670" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:33.668" endtime="20201029 12:45:33.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.671" endtime="20201029 12:45:33.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.615" endtime="20201029 12:45:33.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.613" endtime="20201029 12:45:33.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.680" endtime="20201029 12:45:33.969"></status>
</kw>
<msg timestamp="20201029 12:45:33.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017114972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.679" endtime="20201029 12:45:33.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017114972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017851111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:33.973" endtime="20201029 12:45:33.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:33.982" endtime="20201029 12:45:33.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.676" endtime="20201029 12:45:33.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.674" endtime="20201029 12:45:33.984"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:33.988" level="INFO">${PHILIP_RES} = [{'diff': 0.0007361390000000002}, {'diff': 0.0007360140000000001}, {'diff': 0.0007360000000000005}, {'diff': 0.0007360279999999997}, {'diff': 0.0007360000000000005}, {'diff': 0.0007360140000000001}, {...</msg>
<status status="PASS" starttime="20201029 12:45:33.985" endtime="20201029 12:45:33.988"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:33.992" level="INFO">${RESULT} = {'diff': [0.0007361390000000002, 0.0007360140000000001, 0.0007360000000000005, 0.0007360279999999997, 0.0007360000000000005, 0.0007360140000000001, 0.0007360140000000001, 0.0007360140000000001, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:45:33.989" endtime="20201029 12:45:33.992"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.997" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:33.996" endtime="20201029 12:45:33.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:33.999" level="INFO">VALUE: [0.0007361390000000002, 0.0007360140000000001, 0.0007360000000000005, 0.0007360279999999997, 0.0007360000000000005, 0.0007360140000000001, 0.0007360140000000001, 0.0007360140000000001, 0.0007360700000000019, 0.0007360000000000005, 0.0007359440000000023, 0.0007360279999999997, 0.0007359999999999971, 0.0007360279999999997, 0.0007360279999999997, 0.000735986000000001, 0.0007359859999999975, 0.0007360419999999993, 0.0007360279999999997, 0.0007359730000000009, 0.0007360829999999985, 0.0007360140000000001, 0.0007359719999999945, 0.0007360140000000001, 0.0007360140000000001, 0.0007360279999999997, 0.0007359450000000017, 0.0007360000000000005, 0.0007360140000000001, 0.0007360000000000005, 0.0007360689999999989, 0.0007360140000000001, 0.000735986000000001, 0.0007360140000000001, 0.0007360000000000005, 0.0007360140000000001, 0.000735986000000001, 0.000735986000000001, 0.0007360279999999997, 0.0007360140000000001, 0.0007360270000000002, 0.0007360140000000001, 0.0007360140000000001, 0.0007360140000000001, 0.0007360279999999997, 0.0007360140000000001, 0.0007360140000000001, 0.0007360130000000006, 0.0007360000000000005, 0.0007360000000000005]</msg>
<status status="PASS" starttime="20201029 12:45:33.998" endtime="20201029 12:45:34.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.993" endtime="20201029 12:45:34.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.612" endtime="20201029 12:45:34.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:33.589" endtime="20201029 12:45:34.001"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.004" endtime="20201029 12:45:34.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.002" endtime="20201029 12:45:34.024"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.032" endtime="20201029 12:45:34.080"></status>
</kw>
<msg timestamp="20201029 12:45:34.080" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.031" endtime="20201029 12:45:34.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.083" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.081" endtime="20201029 12:45:34.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.084" endtime="20201029 12:45:34.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.028" endtime="20201029 12:45:34.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.026" endtime="20201029 12:45:34.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.094" endtime="20201029 12:45:34.380"></status>
</kw>
<msg timestamp="20201029 12:45:34.383" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017833764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.093" endtime="20201029 12:45:34.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017067264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017833764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.384" endtime="20201029 12:45:34.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.393" endtime="20201029 12:45:34.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.090" endtime="20201029 12:45:34.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.088" endtime="20201029 12:45:34.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:34.399" level="INFO">${PHILIP_RES} = [{'diff': 0.0007664999999999998}, {'diff': 0.0007663890000000027}, {'diff': 0.0007663610000000001}, {'diff': 0.0007664030000000023}, {'diff': 0.0007664159999999989}, {'diff': 0.0007663890000000027}, {...</msg>
<status status="PASS" starttime="20201029 12:45:34.396" endtime="20201029 12:45:34.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.404" level="INFO">${RESULT} = {'diff': [0.0007664999999999998, 0.0007663890000000027, 0.0007663610000000001, 0.0007664030000000023, 0.0007664159999999989, 0.0007663890000000027, 0.0007663619999999996, 0.0007663889999999993, 0.0007...</msg>
<status status="PASS" starttime="20201029 12:45:34.401" endtime="20201029 12:45:34.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.408" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:34.407" endtime="20201029 12:45:34.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.411" level="INFO">VALUE: [0.0007664999999999998, 0.0007663890000000027, 0.0007663610000000001, 0.0007664030000000023, 0.0007664159999999989, 0.0007663890000000027, 0.0007663619999999996, 0.0007663889999999993, 0.0007664169999999984, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007664029999999988, 0.0007663749999999997, 0.0007663749999999997, 0.0007663889999999993, 0.0007663610000000001, 0.0007663749999999962, 0.0007663749999999997, 0.0007663610000000001, 0.0007664299999999985, 0.0007663610000000001, 0.0007663889999999993, 0.0007663610000000001, 0.0007663879999999998, 0.0007663889999999993, 0.0007663749999999997, 0.0007663889999999993, 0.0007663610000000001, 0.0007663749999999997, 0.0007663889999999993, 0.0007663749999999997, 0.0007663889999999993, 0.0007663749999999997, 0.0007663889999999993, 0.0007663889999999993, 0.0007663749999999997, 0.0007663749999999997, 0.0007663749999999997, 0.0007663889999999993, 0.0007663749999999997, 0.0007663610000000001, 0.0007663749999999997, 0.0007663749999999997, 0.0007663470000000006, 0.0007662920000000017, 0.0007663610000000001, 0.0007663610000000001, 0.0007663610000000001, 0.0007663749999999997]</msg>
<status status="PASS" starttime="20201029 12:45:34.409" endtime="20201029 12:45:34.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.405" endtime="20201029 12:45:34.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.025" endtime="20201029 12:45:34.413"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.002" endtime="20201029 12:45:34.413"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.416" endtime="20201029 12:45:34.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.414" endtime="20201029 12:45:34.436"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.444" endtime="20201029 12:45:34.493"></status>
</kw>
<msg timestamp="20201029 12:45:34.493" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.443" endtime="20201029 12:45:34.494"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.496" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.494" endtime="20201029 12:45:34.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.497" endtime="20201029 12:45:34.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.440" endtime="20201029 12:45:34.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.438" endtime="20201029 12:45:34.500"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.507" endtime="20201029 12:45:34.793"></status>
</kw>
<msg timestamp="20201029 12:45:34.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016996708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017794167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.505" endtime="20201029 12:45:34.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016996708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017794167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.797" endtime="20201029 12:45:34.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.806" endtime="20201029 12:45:34.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.502" endtime="20201029 12:45:34.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.500" endtime="20201029 12:45:34.809"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:34.813" level="INFO">${PHILIP_RES} = [{'diff': 0.0007974590000000004}, {'diff': 0.0007973189999999977}, {'diff': 0.000797388999999999}, {'diff': 0.0007973470000000003}, {'diff': 0.0007973619999999994}, {'diff': 0.0007973049999999982}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:34.809" endtime="20201029 12:45:34.813"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:34.817" level="INFO">${RESULT} = {'diff': [0.0007974590000000004, 0.0007973189999999977, 0.000797388999999999, 0.0007973470000000003, 0.0007973619999999994, 0.0007973049999999982, 0.0007973470000000003, 0.000797388999999999, 0.000797...</msg>
<status status="PASS" starttime="20201029 12:45:34.814" endtime="20201029 12:45:34.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.822" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:34.821" endtime="20201029 12:45:34.822"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.825" level="INFO">VALUE: [0.0007974590000000004, 0.0007973189999999977, 0.000797388999999999, 0.0007973470000000003, 0.0007973619999999994, 0.0007973049999999982, 0.0007973470000000003, 0.000797388999999999, 0.000797278000000002, 0.0007973470000000003, 0.0007973470000000003, 0.0007973470000000003, 0.0007973749999999995, 0.0007972909999999986, 0.0007973470000000003, 0.0007973470000000003, 0.0007973340000000002, 0.0007973469999999969, 0.0007973469999999969, 0.0007973330000000042, 0.0007973200000000041, 0.0007973469999999969, 0.0007973469999999969, 0.0007973200000000041, 0.0007973480000000033, 0.0007973469999999969, 0.0007973189999999977, 0.0007973340000000037, 0.0007973340000000037, 0.0007973329999999973, 0.0007974029999999951, 0.0007973750000000029, 0.0007973340000000037, 0.0007973329999999973, 0.0007973189999999977, 0.0007973609999999964, 0.0007974030000000021, 0.0007973330000000042, 0.0007973469999999969, 0.0007973469999999969, 0.0007973340000000037, 0.0007973049999999982, 0.0007973469999999969, 0.0007974020000000026, 0.0007973340000000037, 0.0007973470000000038, 0.0007973469999999969, 0.0007973469999999969, 0.0007973340000000037, 0.0007973330000000042]</msg>
<status status="PASS" starttime="20201029 12:45:34.823" endtime="20201029 12:45:34.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.818" endtime="20201029 12:45:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.436" endtime="20201029 12:45:34.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.414" endtime="20201029 12:45:34.826"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:34.829" endtime="20201029 12:45:34.848"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.827" endtime="20201029 12:45:34.849"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.857" endtime="20201029 12:45:34.911"></status>
</kw>
<msg timestamp="20201029 12:45:34.911" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.856" endtime="20201029 12:45:34.912"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:34.914" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:34.913" endtime="20201029 12:45:34.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.915" endtime="20201029 12:45:34.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.853" endtime="20201029 12:45:34.917"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.851" endtime="20201029 12:45:34.918"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:34.924" endtime="20201029 12:45:35.213"></status>
</kw>
<msg timestamp="20201029 12:45:35.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:34.923" endtime="20201029 12:45:35.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017206389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018035431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.217" endtime="20201029 12:45:35.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.226" endtime="20201029 12:45:35.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.920" endtime="20201029 12:45:35.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.918" endtime="20201029 12:45:35.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:35.232" level="INFO">${PHILIP_RES} = [{'diff': 0.0008290420000000021}, {'diff': 0.0008289169999999985}, {'diff': 0.0008289310000000015}, {'diff': 0.0008289030000000024}, {'diff': 0.000828915999999999}, {'diff': 0.0008288879999999998}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:35.229" endtime="20201029 12:45:35.233"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.236" level="INFO">${RESULT} = {'diff': [0.0008290420000000021, 0.0008289169999999985, 0.0008289310000000015, 0.0008289030000000024, 0.000828915999999999, 0.0008288879999999998, 0.0008289579999999977, 0.0008289170000000019, 0.00082...</msg>
<status status="PASS" starttime="20201029 12:45:35.233" endtime="20201029 12:45:35.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.241" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:35.240" endtime="20201029 12:45:35.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.244" level="INFO">VALUE: [0.0008290420000000021, 0.0008289169999999985, 0.0008289310000000015, 0.0008289030000000024, 0.000828915999999999, 0.0008288879999999998, 0.0008289579999999977, 0.0008289170000000019, 0.0008289310000000015, 0.000828915999999999, 0.000828930000000002, 0.0008289029999999989, 0.0008289170000000019, 0.0008289170000000019, 0.000828915999999999, 0.0008289160000000025, 0.0008289029999999989, 0.0008289169999999985, 0.0008289169999999985, 0.0008289169999999985, 0.000828915999999999, 0.000828931000000005, 0.0008288610000000002, 0.0008289169999999985, 0.0008289870000000032, 0.000828915999999999, 0.0008289169999999985, 0.0008289030000000058, 0.0008289169999999985, 0.0008288610000000002, 0.000828915999999999, 0.0008289029999999989, 0.0008289439999999981, 0.000828930999999998, 0.0008288890000000063, 0.0008288889999999993, 0.0008289439999999981, 0.0008288749999999998, 0.000828930999999998, 0.0008289869999999963, 0.0008289860000000038, 0.0008289169999999985, 0.0008289579999999977, 0.0008289169999999985, 0.0008289730000000037, 0.0008289439999999981, 0.000828915999999999, 0.0008289440000000051, 0.0008289449999999976, 0.0008288889999999993]</msg>
<status status="PASS" starttime="20201029 12:45:35.242" endtime="20201029 12:45:35.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.237" endtime="20201029 12:45:35.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.850" endtime="20201029 12:45:35.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:34.827" endtime="20201029 12:45:35.246"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:35.248" endtime="20201029 12:45:35.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.246" endtime="20201029 12:45:35.268"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.276" endtime="20201029 12:45:35.329"></status>
</kw>
<msg timestamp="20201029 12:45:35.330" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.275" endtime="20201029 12:45:35.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.333" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.331" endtime="20201029 12:45:35.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.334" endtime="20201029 12:45:35.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.272" endtime="20201029 12:45:35.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.270" endtime="20201029 12:45:35.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.344" endtime="20201029 12:45:35.632"></status>
</kw>
<msg timestamp="20201029 12:45:35.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.342" endtime="20201029 12:45:35.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017119903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017981111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.636" endtime="20201029 12:45:35.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.644" endtime="20201029 12:45:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.340" endtime="20201029 12:45:35.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.338" endtime="20201029 12:45:35.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:35.651" level="INFO">${PHILIP_RES} = [{'diff': 0.0008612080000000022}, {'diff': 0.0008610829999999986}, {'diff': 0.0008610980000000011}, {'diff': 0.0008611110000000012}, {'diff': 0.0008610969999999982}, {'diff': 0.0008610970000000016}, {...</msg>
<status status="PASS" starttime="20201029 12:45:35.648" endtime="20201029 12:45:35.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:35.655" level="INFO">${RESULT} = {'diff': [0.0008612080000000022, 0.0008610829999999986, 0.0008610980000000011, 0.0008611110000000012, 0.0008610969999999982, 0.0008610970000000016, 0.0008610969999999982, 0.000861070000000002, 0.00086...</msg>
<status status="PASS" starttime="20201029 12:45:35.652" endtime="20201029 12:45:35.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.660" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:35.658" endtime="20201029 12:45:35.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.662" level="INFO">VALUE: [0.0008612080000000022, 0.0008610829999999986, 0.0008610980000000011, 0.0008611110000000012, 0.0008610969999999982, 0.0008610970000000016, 0.0008610969999999982, 0.000861070000000002, 0.0008610970000000016, 0.0008611250000000008, 0.0008610830000000021, 0.0008610969999999982, 0.0008610980000000011, 0.0008610969999999982, 0.0008610830000000021, 0.0008610970000000016, 0.0008610979999999976, 0.0008610969999999982, 0.000861068999999999, 0.0008611520000000039, 0.0008610969999999982, 0.0008611110000000047, 0.0008610970000000051, 0.0008610969999999982, 0.0008610829999999986, 0.0008610980000000046, 0.0008610969999999982, 0.0008610969999999982, 0.0008610970000000051, 0.0008611110000000047, 0.0008610969999999982, 0.0008610969999999982, 0.0008611390000000038, 0.0008610969999999982, 0.0008610979999999976, 0.0008611109999999977, 0.0008610969999999982, 0.0008610699999999985, 0.0008611109999999977, 0.0008610980000000046, 0.0008610969999999982, 0.0008611529999999964, 0.0008611530000000034, 0.0008611379999999974, 0.0008610979999999976, 0.0008610829999999986, 0.0008610969999999982, 0.0008610829999999986, 0.0008610979999999976, 0.0008610969999999982]</msg>
<status status="PASS" starttime="20201029 12:45:35.661" endtime="20201029 12:45:35.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.656" endtime="20201029 12:45:35.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.269" endtime="20201029 12:45:35.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.246" endtime="20201029 12:45:35.672"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:35.674" endtime="20201029 12:45:35.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.673" endtime="20201029 12:45:35.694"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.703" endtime="20201029 12:45:35.759"></status>
</kw>
<msg timestamp="20201029 12:45:35.759" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.701" endtime="20201029 12:45:35.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:35.762" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:35.760" endtime="20201029 12:45:35.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.763" endtime="20201029 12:45:35.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.698" endtime="20201029 12:45:35.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.696" endtime="20201029 12:45:35.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:35.772" endtime="20201029 12:45:36.059"></status>
</kw>
<msg timestamp="20201029 12:45:36.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017281069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:35.771" endtime="20201029 12:45:36.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017281069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018175083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.063" endtime="20201029 12:45:36.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.071" endtime="20201029 12:45:36.073"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.768" endtime="20201029 12:45:36.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.766" endtime="20201029 12:45:36.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:36.078" level="INFO">${PHILIP_RES} = [{'diff': 0.000894014000000002}, {'diff': 0.0008938890000000019}, {'diff': 0.000893917000000001}, {'diff': 0.0008939440000000007}, {'diff': 0.0008938879999999989}, {'diff': 0.000893902999999998}, {'di...</msg>
<status status="PASS" starttime="20201029 12:45:36.075" endtime="20201029 12:45:36.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.083" level="INFO">${RESULT} = {'diff': [0.000894014000000002, 0.0008938890000000019, 0.000893917000000001, 0.0008939440000000007, 0.0008938879999999989, 0.000893902999999998, 0.0008938879999999989, 0.0008938469999999997, 0.0008938...</msg>
<status status="PASS" starttime="20201029 12:45:36.079" endtime="20201029 12:45:36.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.088" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:36.087" endtime="20201029 12:45:36.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.090" level="INFO">VALUE: [0.000894014000000002, 0.0008938890000000019, 0.000893917000000001, 0.0008939440000000007, 0.0008938879999999989, 0.000893902999999998, 0.0008938879999999989, 0.0008938469999999997, 0.0008938750000000023, 0.0008938890000000019, 0.0008938880000000024, 0.0008938890000000019, 0.0008938340000000031, 0.0008938889999999984, 0.0008938749999999988, 0.0008938750000000023, 0.0008938890000000019, 0.0008938890000000019, 0.0008938890000000019, 0.0008938609999999958, 0.0008938750000000023, 0.0008938889999999949, 0.0008938610000000027, 0.0008939450000000002, 0.0008938890000000019, 0.0008938889999999949, 0.0008938750000000023, 0.0008939030000000014, 0.0008939030000000014, 0.000893917000000001, 0.0008938890000000019, 0.0008939729999999993, 0.0008938749999999954, 0.0008938890000000019, 0.0008939029999999945, 0.0008938890000000019, 0.0008938889999999949, 0.0008939310000000006, 0.0008938749999999954, 0.0008938890000000019, 0.0008938890000000019, 0.0008938750000000023, 0.0008938890000000019, 0.0008938890000000019, 0.0008939030000000014, 0.0008938879999999955, 0.0008938890000000019, 0.0008938880000000024, 0.0008938889999999949, 0.0008938880000000093]</msg>
<status status="PASS" starttime="20201029 12:45:36.089" endtime="20201029 12:45:36.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.084" endtime="20201029 12:45:36.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.695" endtime="20201029 12:45:36.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:35.672" endtime="20201029 12:45:36.092"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:36.095" endtime="20201029 12:45:36.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.093" endtime="20201029 12:45:36.115"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.123" endtime="20201029 12:45:36.181"></status>
</kw>
<msg timestamp="20201029 12:45:36.181" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.121" endtime="20201029 12:45:36.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.184" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:36.182" endtime="20201029 12:45:36.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.185" endtime="20201029 12:45:36.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.119" endtime="20201029 12:45:36.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.117" endtime="20201029 12:45:36.188"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.194" endtime="20201029 12:45:36.504"></status>
</kw>
<msg timestamp="20201029 12:45:36.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.193" endtime="20201029 12:45:36.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017091472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018018875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:36.508" endtime="20201029 12:45:36.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:36.517" endtime="20201029 12:45:36.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.190" endtime="20201029 12:45:36.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.188" endtime="20201029 12:45:36.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201029 12:45:36.524" level="INFO">${PHILIP_RES} = [{'diff': 0.0009274030000000003}, {'diff': 0.0009272630000000011}, {'diff': 0.0009272780000000001}, {'diff': 0.0009272919999999997}, {'diff': 0.0009273059999999993}, {'diff': 0.0009273200000000023}, {...</msg>
<status status="PASS" starttime="20201029 12:45:36.520" endtime="20201029 12:45:36.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:36.528" level="INFO">${RESULT} = {'diff': [0.0009274030000000003, 0.0009272630000000011, 0.0009272780000000001, 0.0009272919999999997, 0.0009273059999999993, 0.0009273200000000023, 0.0009272780000000001, 0.0009273059999999993, 0.0009...</msg>
<status status="PASS" starttime="20201029 12:45:36.525" endtime="20201029 12:45:36.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.532" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201029 12:45:36.531" endtime="20201029 12:45:36.532"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.535" level="INFO">VALUE: [0.0009274030000000003, 0.0009272630000000011, 0.0009272780000000001, 0.0009272919999999997, 0.0009273059999999993, 0.0009273200000000023, 0.0009272780000000001, 0.0009273059999999993, 0.0009272780000000001, 0.0009273049999999998, 0.0009272780000000001, 0.0009272640000000006, 0.0009272780000000001, 0.0009272919999999997, 0.0009273049999999998, 0.0009272780000000036, 0.0009273199999999954, 0.0009272910000000037, 0.0009272919999999962, 0.0009272910000000037, 0.0009272779999999967, 0.0009273059999999958, 0.0009272769999999972, 0.0009273059999999958, 0.0009272910000000037, 0.0009272919999999962, 0.0009273060000000027, 0.0009272219999999984, 0.0009272920000000032, 0.0009272499999999975, 0.0009272920000000032, 0.0009272639999999971, 0.0009272910000000037, 0.0009272920000000032, 0.0009272639999999971, 0.0009272910000000037, 0.0009272919999999962, 0.0009273050000000033, 0.0009272639999999971, 0.0009272920000000032, 0.0009272639999999971, 0.0009272920000000032, 0.0009272779999999967, 0.0009272909999999968, 0.0009272639999999971, 0.0009272909999999968, 0.0009272780000000036, 0.0009272920000000101, 0.0009272769999999902, 0.0009272780000000036]</msg>
<status status="PASS" starttime="20201029 12:45:36.533" endtime="20201029 12:45:36.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.528" endtime="20201029 12:45:36.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.115" endtime="20201029 12:45:36.536"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.092" endtime="20201029 12:45:36.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:16.585" endtime="20201029 12:45:36.537"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:09.263" endtime="20201029 12:45:36.537" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:44:18.233" endtime="20201029 12:45:36.547"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:45:36.622" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:45:36.631" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:45:37.778" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:45:36.621" endtime="20201029 12:45:37.778"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:45:40.781" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:45:37.779" endtime="20201029 12:45:40.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.620" endtime="20201029 12:45:40.784"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:40.788" endtime="20201029 12:45:41.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:40.785" endtime="20201029 12:45:41.054"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:41.067" endtime="20201029 12:45:44.089"></status>
</kw>
<msg timestamp="20201029 12:45:44.090" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:41.066" endtime="20201029 12:45:44.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.095" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.092" endtime="20201029 12:45:44.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:44.102" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:44.098" endtime="20201029 12:45:44.103"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:41.063" endtime="20201029 12:45:44.104"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:41.061" endtime="20201029 12:45:44.105"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.059" endtime="20201029 12:45:44.106"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:44.116" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:44.115" endtime="20201029 12:45:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.108" endtime="20201029 12:45:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.058" endtime="20201029 12:45:44.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.058" endtime="20201029 12:45:44.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.121" endtime="20201029 12:45:44.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.057" endtime="20201029 12:45:44.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.127" endtime="20201029 12:45:44.130"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:41.055" endtime="20201029 12:45:44.131"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:36.618" endtime="20201029 12:45:44.132"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:44.145" endtime="20201029 12:45:44.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.141" endtime="20201029 12:45:44.168"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:44.197" endtime="20201029 12:45:47.222"></status>
</kw>
<msg timestamp="20201029 12:45:47.223" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:44.194" endtime="20201029 12:45:47.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.225" endtime="20201029 12:45:47.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.235" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:45:47.231" endtime="20201029 12:45:47.235"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:44.188" endtime="20201029 12:45:47.237"></status>
</kw>
<status status="FAIL" starttime="20201029 12:45:44.183" endtime="20201029 12:45:47.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.180" endtime="20201029 12:45:47.239"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:45:47.247" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:45:47.245" endtime="20201029 12:45:47.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.241" endtime="20201029 12:45:47.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.178" endtime="20201029 12:45:47.248"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.177" endtime="20201029 12:45:47.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.251" endtime="20201029 12:45:47.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.174" endtime="20201029 12:45:47.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.170" endtime="20201029 12:45:47.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:44.139" endtime="20201029 12:45:47.257"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.289" endtime="20201029 12:45:47.315"></status>
</kw>
<msg timestamp="20201029 12:45:47.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.283" endtime="20201029 12:45:47.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.318" endtime="20201029 12:45:47.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.321" endtime="20201029 12:45:47.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.269" endtime="20201029 12:45:47.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.264" endtime="20201029 12:45:47.324"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.330" endtime="20201029 12:45:47.638"></status>
</kw>
<msg timestamp="20201029 12:45:47.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.139104833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139107806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.329" endtime="20201029 12:45:47.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.139104833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.139107806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:47.643" endtime="20201029 12:45:47.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.652" endtime="20201029 12:45:47.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.326" endtime="20201029 12:45:47.654"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.324" endtime="20201029 12:45:47.654"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:47.658" level="INFO">${RESULT} = [{'diff': 2.9729999999617007e-06}, {'diff': 3.374999999916639e-06}, {'diff': 2.6250000000338503e-06}, {'diff': 2.638999999859948e-06}, {'diff': 2.9719999998789604e-06}, {'diff': 3.304999999897973e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:47.655" endtime="20201029 12:45:47.659"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:47.663" level="INFO">${ACCURACY} = {'diff': [2.9729999999617007e-06, 3.374999999916639e-06, 2.6250000000338503e-06, 2.638999999859948e-06, 2.9719999998789604e-06, 3.304999999897973e-06, 3.0140000002454315e-06, 3.3190000001681597e-06, 2...</msg>
<status status="PASS" starttime="20201029 12:45:47.659" endtime="20201029 12:45:47.663"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.668" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201029 12:45:47.667" endtime="20201029 12:45:47.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.671" level="INFO">VALUE: [2.9729999999617007e-06, 3.374999999916639e-06, 2.6250000000338503e-06, 2.638999999859948e-06, 2.9719999998789604e-06, 3.304999999897973e-06, 3.0140000002454315e-06, 3.3190000001681597e-06, 2.958999999691514e-06, 2.6250000000338503e-06, 2.9719999998789604e-06, 2.6110000002077527e-06, 2.6250000000338503e-06, 2.6530000001301346e-06, 2.596999999937566e-06, 2.6530000001301346e-06, 2.986000000149147e-06, 2.9729999999617007e-06, 3.3190000001681597e-06, 2.9719999998789604e-06, 3.3200000002509e-06, 2.9729999999617007e-06, 2.9580000000528628e-06, 2.6109999997636635e-06, 2.9729999999617007e-06, 2.6250000000338503e-06, 3.3190000001681597e-06, 2.6110000002077527e-06, 3.3189999997240704e-06, 3.3190000001681597e-06, 2.6109999997636635e-06, 2.6250000000338503e-06, 2.9729999999617007e-06, 2.9719999998789604e-06, 2.986000000149147e-06, 3.3190000001681597e-06, 2.639000000304037e-06, 3.0139999998013423e-06, 2.9580000000528628e-06, 3.3889999997427367e-06, 3.277999999884429e-06, 2.9729999999617007e-06, 2.959000000135603e-06, 2.6250000000338503e-06, 2.6250000000338503e-06, 2.9729999999617007e-06, 3.0139999998013423e-06, 2.9720000003230496e-06, 3.3329999999942572e-06, 3.2919999997105265e-06]</msg>
<status status="PASS" starttime="20201029 12:45:47.669" endtime="20201029 12:45:47.671"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.664" endtime="20201029 12:45:47.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:47.676" endtime="20201029 12:45:47.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.674" endtime="20201029 12:45:47.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.673" endtime="20201029 12:45:47.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.260" endtime="20201029 12:45:47.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.259" endtime="20201029 12:45:47.696"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.705" endtime="20201029 12:45:47.720"></status>
</kw>
<msg timestamp="20201029 12:45:47.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.704" endtime="20201029 12:45:47.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:47.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:47.721" endtime="20201029 12:45:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.724" endtime="20201029 12:45:47.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.701" endtime="20201029 12:45:47.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.699" endtime="20201029 12:45:47.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:47.734" endtime="20201029 12:45:48.020"></status>
</kw>
<msg timestamp="20201029 12:45:48.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:47.732" endtime="20201029 12:45:48.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019778028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019782, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:45:48.024" endtime="20201029 12:45:48.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.034" endtime="20201029 12:45:48.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.729" endtime="20201029 12:45:48.037"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.727" endtime="20201029 12:45:48.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.042" level="INFO">${RESULT} = [{'diff': 3.972000000001391e-06}, {'diff': 4.3749999999974365e-06}, {'diff': 3.958999999997825e-06}, {'diff': 3.9999999999970615e-06}, {'diff': 4.361000000001336e-06}, {'diff': 4.360999999997867e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:48.039" endtime="20201029 12:45:48.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:48.048" level="INFO">${ACCURACY} = {'diff': [3.972000000001391e-06, 4.3749999999974365e-06, 3.958999999997825e-06, 3.9999999999970615e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.014000000000101e-06, 3.667000000002335e-06, 4.01...</msg>
<status status="PASS" starttime="20201029 12:45:48.043" endtime="20201029 12:45:48.048"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.052" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201029 12:45:48.051" endtime="20201029 12:45:48.053"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.055" level="INFO">VALUE: [3.972000000001391e-06, 4.3749999999974365e-06, 3.958999999997825e-06, 3.9999999999970615e-06, 4.361000000001336e-06, 4.360999999997867e-06, 4.014000000000101e-06, 3.667000000002335e-06, 4.014000000000101e-06, 3.6949999999980054e-06, 3.665999999999392e-06, 3.651999999999822e-06, 4.014000000000101e-06, 4.361000000001336e-06, 3.6660000000028614e-06, 4.347000000001766e-06, 4.361000000001336e-06, 3.638000000000252e-06, 3.653000000002765e-06, 4.3749999999974365e-06, 4.012999999997158e-06, 4.346999999998297e-06, 4.014000000000101e-06, 3.958000000001821e-06, 3.971999999997922e-06, 4.305999999999061e-06, 4.3749999999974365e-06, 4.014000000000101e-06, 4.027999999999671e-06, 4.361000000001336e-06, 4.014000000000101e-06, 3.958000000001821e-06, 4.013999999996631e-06, 4.361000000001336e-06, 4.000000000000531e-06, 4.3339999999982e-06, 3.6669999999988656e-06, 3.665999999999392e-06, 4.347000000001766e-06, 3.651999999999822e-06, 3.6529999999992957e-06, 4.014000000000101e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 4.014000000000101e-06, 4.361000000001336e-06, 3.6809999999984355e-06, 3.665999999999392e-06, 3.6529999999992957e-06, 4.027999999999671e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.054" endtime="20201029 12:45:48.055"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.049" endtime="20201029 12:45:48.056"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:48.060" endtime="20201029 12:45:48.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.058" endtime="20201029 12:45:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.057" endtime="20201029 12:45:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.697" endtime="20201029 12:45:48.081"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.697" endtime="20201029 12:45:48.082"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.095" endtime="20201029 12:45:48.110"></status>
</kw>
<msg timestamp="20201029 12:45:48.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.092" endtime="20201029 12:45:48.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.112" endtime="20201029 12:45:48.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.114" endtime="20201029 12:45:48.116"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.087" endtime="20201029 12:45:48.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.084" endtime="20201029 12:45:48.117"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.124" endtime="20201029 12:45:48.411"></status>
</kw>
<msg timestamp="20201029 12:45:48.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026070931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026075625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.123" endtime="20201029 12:45:48.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026070931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026075625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.415" endtime="20201029 12:45:48.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.424" endtime="20201029 12:45:48.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.120" endtime="20201029 12:45:48.426"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.118" endtime="20201029 12:45:48.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.430" level="INFO">${RESULT} = [{'diff': 4.694000000003001e-06}, {'diff': 4.707999999999102e-06}, {'diff': 5.375000000001906e-06}, {'diff': 5.3889999999980065e-06}, {'diff': 4.973000000001865e-06}, {'diff': 5.055999999999811e-06}, ...</msg>
<status status="PASS" starttime="20201029 12:45:48.427" endtime="20201029 12:45:48.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:48.435" level="INFO">${ACCURACY} = {'diff': [4.694000000003001e-06, 4.707999999999102e-06, 5.375000000001906e-06, 5.3889999999980065e-06, 4.973000000001865e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.416000000001142e-06, 5.417...</msg>
<status status="PASS" starttime="20201029 12:45:48.431" endtime="20201029 12:45:48.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.439" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201029 12:45:48.438" endtime="20201029 12:45:48.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.442" level="INFO">VALUE: [4.694000000003001e-06, 4.707999999999102e-06, 5.375000000001906e-06, 5.3889999999980065e-06, 4.973000000001865e-06, 5.055999999999811e-06, 5.055000000000337e-06, 5.416000000001142e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.360999999998867e-06, 4.723000000001615e-06, 4.708000000002571e-06, 4.707999999999102e-06, 5.3889999999980065e-06, 5.0839999999989505e-06, 4.709000000002045e-06, 5.389000000001476e-06, 4.708000000002571e-06, 4.735999999998242e-06, 5.401999999998103e-06, 4.707999999999102e-06, 5.417000000000616e-06, 5.3889999999980065e-06, 5.041000000000767e-06, 4.721999999998672e-06, 5.042000000000241e-06, 5.055999999999811e-06, 4.7089999999985754e-06, 5.028000000000671e-06, 4.693999999999532e-06, 4.723000000001615e-06, 5.055999999999811e-06, 5.042000000000241e-06, 5.014000000001101e-06, 5.389000000001476e-06, 5.041000000000767e-06, 5.402999999997576e-06, 5.389000000001476e-06, 5.389000000001476e-06, 5.040999999997298e-06, 4.6949999999990055e-06, 4.709000000002045e-06, 4.693999999999532e-06, 5.389000000001476e-06, 5.3889999999980065e-06, 5.041000000000767e-06, 5.055000000000337e-06, 5.430000000000712e-06, 4.693999999999532e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.440" endtime="20201029 12:45:48.442"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.436" endtime="20201029 12:45:48.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:48.447" endtime="20201029 12:45:48.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.445" endtime="20201029 12:45:48.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.444" endtime="20201029 12:45:48.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.083" endtime="20201029 12:45:48.467"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.082" endtime="20201029 12:45:48.467"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.477" endtime="20201029 12:45:48.491"></status>
</kw>
<msg timestamp="20201029 12:45:48.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.475" endtime="20201029 12:45:48.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.495" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.493" endtime="20201029 12:45:48.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.496" endtime="20201029 12:45:48.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.472" endtime="20201029 12:45:48.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.470" endtime="20201029 12:45:48.499"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.505" endtime="20201029 12:45:48.789"></status>
</kw>
<msg timestamp="20201029 12:45:48.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.504" endtime="20201029 12:45:48.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020810625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020816708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.793" endtime="20201029 12:45:48.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.802" endtime="20201029 12:45:48.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.501" endtime="20201029 12:45:48.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.499" endtime="20201029 12:45:48.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:48.808" level="INFO">${RESULT} = [{'diff': 6.083000000000477e-06}, {'diff': 6.0689999999974376e-06}, {'diff': 5.374999999998437e-06}, {'diff': 5.735999999999242e-06}, {'diff': 6.0839999999999506e-06}, {'diff': 6.1389999999987566e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:48.805" endtime="20201029 12:45:48.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:48.813" level="INFO">${ACCURACY} = {'diff': [6.083000000000477e-06, 6.0689999999974376e-06, 5.374999999998437e-06, 5.735999999999242e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 5.750000000002281e-06, 6.430000000001712e-06, 6.3...</msg>
<status status="PASS" starttime="20201029 12:45:48.810" endtime="20201029 12:45:48.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.817" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201029 12:45:48.816" endtime="20201029 12:45:48.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.820" level="INFO">VALUE: [6.083000000000477e-06, 6.0689999999974376e-06, 5.374999999998437e-06, 5.735999999999242e-06, 6.0839999999999506e-06, 6.1389999999987566e-06, 5.750000000002281e-06, 6.430000000001712e-06, 6.347000000000297e-06, 6.429999999998243e-06, 6.083000000000477e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.791000000001517e-06, 5.374999999998437e-06, 6.429999999998243e-06, 5.721999999999672e-06, 5.790999999998048e-06, 6.430999999997716e-06, 5.681000000000436e-06, 5.721999999999672e-06, 5.7229999999991454e-06, 6.430999999997716e-06, 6.430000000001712e-06, 5.721999999999672e-06, 6.097000000000047e-06, 5.735999999999242e-06, 5.736000000002711e-06, 6.069000000000907e-06, 5.7229999999991454e-06, 5.749999999998812e-06, 6.083000000000477e-06, 5.735999999999242e-06, 6.374999999999437e-06, 6.083000000000477e-06, 5.7639999999983815e-06, 6.429999999998243e-06, 5.389000000001476e-06, 5.735999999999242e-06, 6.153000000001796e-06, 6.0139999999986316e-06, 5.736000000002711e-06, 6.417000000001616e-06, 6.0979999999995205e-06, 5.735999999999242e-06, 6.097000000000047e-06, 6.097000000000047e-06, 6.083000000000477e-06]</msg>
<status status="PASS" starttime="20201029 12:45:48.819" endtime="20201029 12:45:48.821"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.814" endtime="20201029 12:45:48.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:48.826" endtime="20201029 12:45:48.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.824" endtime="20201029 12:45:48.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.823" endtime="20201029 12:45:48.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.468" endtime="20201029 12:45:48.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.468" endtime="20201029 12:45:48.846"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.856" endtime="20201029 12:45:48.871"></status>
</kw>
<msg timestamp="20201029 12:45:48.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.854" endtime="20201029 12:45:48.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:48.874" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:48.872" endtime="20201029 12:45:48.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.875" endtime="20201029 12:45:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.851" endtime="20201029 12:45:48.877"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.849" endtime="20201029 12:45:48.878"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:48.884" endtime="20201029 12:45:49.176"></status>
</kw>
<msg timestamp="20201029 12:45:49.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:48.883" endtime="20201029 12:45:49.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020324458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020331181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.180" endtime="20201029 12:45:49.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.188" endtime="20201029 12:45:49.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.880" endtime="20201029 12:45:49.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.878" endtime="20201029 12:45:49.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.195" level="INFO">${RESULT} = [{'diff': 6.7230000000001455e-06}, {'diff': 7.0980000000005206e-06}, {'diff': 6.749999999999812e-06}, {'diff': 6.430000000001712e-06}, {'diff': 6.7779999999989515e-06}, {'diff': 6.431000000001186e-06}...</msg>
<status status="PASS" starttime="20201029 12:45:49.192" endtime="20201029 12:45:49.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:49.200" level="INFO">${ACCURACY} = {'diff': [6.7230000000001455e-06, 7.0980000000005206e-06, 6.749999999999812e-06, 6.430000000001712e-06, 6.7779999999989515e-06, 6.431000000001186e-06, 7.125000000000187e-06, 7.472999999997426e-06, 7.1...</msg>
<status status="PASS" starttime="20201029 12:45:49.196" endtime="20201029 12:45:49.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.205" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201029 12:45:49.204" endtime="20201029 12:45:49.205"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.208" level="INFO">VALUE: [6.7230000000001455e-06, 7.0980000000005206e-06, 6.749999999999812e-06, 6.430000000001712e-06, 6.7779999999989515e-06, 6.431000000001186e-06, 7.125000000000187e-06, 7.472999999997426e-06, 7.124999999996717e-06, 7.125000000000187e-06, 6.820000000001131e-06, 7.514000000000132e-06, 6.430999999997716e-06, 7.458000000001852e-06, 6.749999999999812e-06, 6.7919999999985214e-06, 7.110999999997147e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.458000000001852e-06, 7.415999999999673e-06, 7.486000000000992e-06, 6.763999999999382e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.0980000000005206e-06, 7.472999999997426e-06, 7.445000000001756e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.0969999999975775e-06, 7.472000000001422e-06, 6.763999999999382e-06, 7.125000000000187e-06, 7.458000000001852e-06, 7.125000000000187e-06, 6.8329999999977575e-06, 6.763999999999382e-06, 6.778000000002421e-06, 7.457999999998383e-06, 7.4169999999991465e-06, 7.0969999999975775e-06, 6.680000000001962e-06, 6.7919999999985214e-06, 6.763999999999382e-06, 7.111000000000617e-06, 7.125000000000187e-06, 7.111000000000617e-06]</msg>
<status status="PASS" starttime="20201029 12:45:49.206" endtime="20201029 12:45:49.208"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.201" endtime="20201029 12:45:49.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:49.212" endtime="20201029 12:45:49.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.211" endtime="20201029 12:45:49.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.210" endtime="20201029 12:45:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.847" endtime="20201029 12:45:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:48.847" endtime="20201029 12:45:49.233"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.243" endtime="20201029 12:45:49.256"></status>
</kw>
<msg timestamp="20201029 12:45:49.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.241" endtime="20201029 12:45:49.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.258" endtime="20201029 12:45:49.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.260" endtime="20201029 12:45:49.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.238" endtime="20201029 12:45:49.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.236" endtime="20201029 12:45:49.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.270" endtime="20201029 12:45:49.555"></status>
</kw>
<msg timestamp="20201029 12:45:49.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.268" endtime="20201029 12:45:49.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020691264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.559" endtime="20201029 12:45:49.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.568" endtime="20201029 12:45:49.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.266" endtime="20201029 12:45:49.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.264" endtime="20201029 12:45:49.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.575" level="INFO">${RESULT} = [{'diff': 8.166999999999897e-06}, {'diff': 7.805999999999091e-06}, {'diff': 8.097999999998051e-06}, {'diff': 7.805999999999091e-06}, {'diff': 7.805999999999091e-06}, {'diff': 8.179999999999993e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:45:49.571" endtime="20201029 12:45:49.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:49.579" level="INFO">${ACCURACY} = {'diff': [8.166999999999897e-06, 7.805999999999091e-06, 8.097999999998051e-06, 7.805999999999091e-06, 7.805999999999091e-06, 8.179999999999993e-06, 8.499999999998092e-06, 7.792000000002991e-06, 7.8190...</msg>
<status status="PASS" starttime="20201029 12:45:49.576" endtime="20201029 12:45:49.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.584" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201029 12:45:49.582" endtime="20201029 12:45:49.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.586" level="INFO">VALUE: [8.166999999999897e-06, 7.805999999999091e-06, 8.097999999998051e-06, 7.805999999999091e-06, 7.805999999999091e-06, 8.179999999999993e-06, 8.499999999998092e-06, 7.792000000002991e-06, 7.819000000002657e-06, 8.471999999998953e-06, 7.430999999998716e-06, 8.153000000000327e-06, 8.499999999998092e-06, 8.500000000001562e-06, 7.458000000001852e-06, 8.193999999999563e-06, 7.458000000001852e-06, 8.499999999998092e-06, 7.819999999998661e-06, 8.152000000000853e-06, 7.805999999999091e-06, 8.151999999997384e-06, 7.846999999998328e-06, 7.804999999999618e-06, 8.485999999998523e-06, 8.500000000001562e-06, 7.832999999998758e-06, 8.153000000000327e-06, 8.500000000001562e-06, 8.167000000003366e-06, 8.139000000000757e-06, 7.486000000000992e-06, 7.402999999999577e-06, 7.750000000000812e-06, 8.139000000000757e-06, 8.139000000000757e-06, 7.750000000000812e-06, 7.819000000002657e-06, 8.222000000002172e-06, 8.152000000000853e-06, 7.805999999999091e-06, 8.153000000000327e-06, 7.819999999998661e-06, 8.472000000002422e-06, 7.861999999997371e-06, 7.804999999999618e-06, 8.166999999999897e-06, 8.138999999997287e-06, 7.804999999999618e-06, 8.153000000000327e-06]</msg>
<status status="PASS" starttime="20201029 12:45:49.585" endtime="20201029 12:45:49.587"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.580" endtime="20201029 12:45:49.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:49.591" endtime="20201029 12:45:49.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.589" endtime="20201029 12:45:49.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.588" endtime="20201029 12:45:49.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.234" endtime="20201029 12:45:49.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.234" endtime="20201029 12:45:49.612"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.621" endtime="20201029 12:45:49.636"></status>
</kw>
<msg timestamp="20201029 12:45:49.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.619" endtime="20201029 12:45:49.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:49.638" endtime="20201029 12:45:49.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.640" endtime="20201029 12:45:49.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.617" endtime="20201029 12:45:49.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.615" endtime="20201029 12:45:49.643"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.650" endtime="20201029 12:45:49.936"></status>
</kw>
<msg timestamp="20201029 12:45:49.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021318194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.648" endtime="20201029 12:45:49.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021318194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021327042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:49.940" endtime="20201029 12:45:49.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:49.949" endtime="20201029 12:45:49.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.645" endtime="20201029 12:45:49.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.644" endtime="20201029 12:45:49.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:49.955" level="INFO">${RESULT} = [{'diff': 8.84800000000227e-06}, {'diff': 9.528000000001702e-06}, {'diff': 9.471999999999953e-06}, {'diff': 8.903000000001077e-06}, {'diff': 8.471999999998953e-06}, {'diff': 9.207999999996663e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:49.952" endtime="20201029 12:45:49.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:49.960" level="INFO">${ACCURACY} = {'diff': [8.84800000000227e-06, 9.528000000001702e-06, 9.471999999999953e-06, 8.903000000001077e-06, 8.471999999998953e-06, 9.207999999996663e-06, 9.541000000001798e-06, 9.195000000000036e-06, 9.54200...</msg>
<status status="PASS" starttime="20201029 12:45:49.956" endtime="20201029 12:45:49.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.964" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201029 12:45:49.963" endtime="20201029 12:45:49.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:49.967" level="INFO">VALUE: [8.84800000000227e-06, 9.528000000001702e-06, 9.471999999999953e-06, 8.903000000001077e-06, 8.471999999998953e-06, 9.207999999996663e-06, 9.541000000001798e-06, 9.195000000000036e-06, 9.542000000001272e-06, 8.833999999999231e-06, 9.181000000000467e-06, 9.181000000000467e-06, 9.208000000000133e-06, 8.846999999999328e-06, 9.541999999997802e-06, 8.832999999999758e-06, 8.860999999998898e-06, 9.527999999998232e-06, 9.194000000000563e-06, 9.167000000000897e-06, 8.500000000001562e-06, 8.819000000000188e-06, 9.194000000000563e-06, 8.874999999998467e-06, 9.223000000002646e-06, 8.499999999998092e-06, 8.846999999999328e-06, 9.556000000000842e-06, 9.179999999997523e-06, 9.528000000001702e-06, 9.167000000000897e-06, 9.528000000001702e-06, 9.181000000000467e-06, 9.193999999997093e-06, 9.195000000000036e-06, 9.193999999997093e-06, 8.499999999998092e-06, 8.917000000000647e-06, 8.500000000001562e-06, 8.431000000003186e-06, 8.500000000001562e-06, 8.499999999998092e-06, 9.528000000001702e-06, 9.194000000000563e-06, 9.264000000001882e-06, 8.846999999999328e-06, 9.180999999996997e-06, 8.846999999999328e-06, 9.181000000000467e-06, 9.152000000001853e-06]</msg>
<status status="PASS" starttime="20201029 12:45:49.966" endtime="20201029 12:45:49.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.961" endtime="20201029 12:45:49.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:49.973" endtime="20201029 12:45:49.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.971" endtime="20201029 12:45:49.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.970" endtime="20201029 12:45:49.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.613" endtime="20201029 12:45:49.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.613" endtime="20201029 12:45:49.994"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.003" endtime="20201029 12:45:50.017"></status>
</kw>
<msg timestamp="20201029 12:45:50.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.001" endtime="20201029 12:45:50.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.018" endtime="20201029 12:45:50.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.021" endtime="20201029 12:45:50.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.998" endtime="20201029 12:45:50.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.996" endtime="20201029 12:45:50.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.030" endtime="20201029 12:45:50.315"></status>
</kw>
<msg timestamp="20201029 12:45:50.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.029" endtime="20201029 12:45:50.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.327" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019873139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019883028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.320" endtime="20201029 12:45:50.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.328" endtime="20201029 12:45:50.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.026" endtime="20201029 12:45:50.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.024" endtime="20201029 12:45:50.331"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.335" level="INFO">${RESULT} = [{'diff': 9.888999999999037e-06}, {'diff': 9.820000000000662e-06}, {'diff': 1.0570000000001412e-05}, {'diff': 1.0222000000000703e-05}, {'diff': 9.860999999999898e-06}, {'diff': 9.888999999999037e-06},...</msg>
<status status="PASS" starttime="20201029 12:45:50.332" endtime="20201029 12:45:50.335"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:50.340" level="INFO">${ACCURACY} = {'diff': [9.888999999999037e-06, 9.820000000000662e-06, 1.0570000000001412e-05, 1.0222000000000703e-05, 9.860999999999898e-06, 9.888999999999037e-06, 9.875000000002937e-06, 9.888999999999037e-06, 9.51...</msg>
<status status="PASS" starttime="20201029 12:45:50.336" endtime="20201029 12:45:50.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.345" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201029 12:45:50.344" endtime="20201029 12:45:50.345"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.347" level="INFO">VALUE: [9.888999999999037e-06, 9.820000000000662e-06, 1.0570000000001412e-05, 1.0222000000000703e-05, 9.860999999999898e-06, 9.888999999999037e-06, 9.875000000002937e-06, 9.888999999999037e-06, 9.514000000002132e-06, 9.471999999999953e-06, 1.0486000000000523e-05, 1.0249999999999843e-05, 1.0221999999997233e-05, 1.0569000000001938e-05, 1.0236000000000273e-05, 9.860999999999898e-06, 9.874999999999468e-06, 1.0568999999998469e-05, 1.0222000000000703e-05, 9.889000000002507e-06, 9.512999999999189e-06, 9.860999999999898e-06, 9.805000000001618e-06, 9.847999999999801e-06, 9.874999999999468e-06, 1.0569000000001938e-05, 1.0207999999997663e-05, 9.874999999999468e-06, 1.0236000000000273e-05, 9.527999999998232e-06, 9.916000000002173e-06, 9.888999999999037e-06, 1.0222000000000703e-05, 1.0582999999998038e-05, 9.541000000001798e-06, 9.945000000000787e-06, 9.832999999997288e-06, 9.874999999999468e-06, 1.0249999999999843e-05, 9.888999999999037e-06, 9.874999999999468e-06, 1.0236000000000273e-05, 1.0208000000001133e-05, 1.0582999999998038e-05, 1.0223000000000176e-05, 9.555000000001368e-06, 9.888999999999037e-06, 9.542000000001272e-06, 9.861000000003367e-06, 9.930000000001743e-06]</msg>
<status status="PASS" starttime="20201029 12:45:50.346" endtime="20201029 12:45:50.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.341" endtime="20201029 12:45:50.349"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.353" endtime="20201029 12:45:50.372"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.351" endtime="20201029 12:45:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.350" endtime="20201029 12:45:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.995" endtime="20201029 12:45:50.373"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:49.994" endtime="20201029 12:45:50.373"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.382" endtime="20201029 12:45:50.397"></status>
</kw>
<msg timestamp="20201029 12:45:50.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.381" endtime="20201029 12:45:50.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.398" endtime="20201029 12:45:50.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.401" endtime="20201029 12:45:50.402"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.378" endtime="20201029 12:45:50.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.376" endtime="20201029 12:45:50.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.410" endtime="20201029 12:45:50.697"></status>
</kw>
<msg timestamp="20201029 12:45:50.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.409" endtime="20201029 12:45:50.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019989306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.702" endtime="20201029 12:45:50.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.710" endtime="20201029 12:45:50.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.406" endtime="20201029 12:45:50.713"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.404" endtime="20201029 12:45:50.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:50.717" level="INFO">${RESULT} = [{'diff': 1.1263999999996943e-05}, {'diff': 1.1277999999999982e-05}, {'diff': 1.0569000000001938e-05}, {'diff': 1.1236000000001273e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.1264000000000413e-...</msg>
<status status="PASS" starttime="20201029 12:45:50.714" endtime="20201029 12:45:50.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:50.722" level="INFO">${ACCURACY} = {'diff': [1.1263999999996943e-05, 1.1277999999999982e-05, 1.0569000000001938e-05, 1.1236000000001273e-05, 1.1249999999997373e-05, 1.1264000000000413e-05, 1.0540999999999329e-05, 1.0889000000000038e-05...</msg>
<status status="PASS" starttime="20201029 12:45:50.718" endtime="20201029 12:45:50.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.726" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201029 12:45:50.725" endtime="20201029 12:45:50.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.729" level="INFO">VALUE: [1.1263999999996943e-05, 1.1277999999999982e-05, 1.0569000000001938e-05, 1.1236000000001273e-05, 1.1249999999997373e-05, 1.1264000000000413e-05, 1.0540999999999329e-05, 1.0889000000000038e-05, 1.0958999999997887e-05, 1.0875000000000468e-05, 1.0569000000001938e-05, 1.0570000000001412e-05, 1.1250000000000843e-05, 1.0568999999998469e-05, 1.1264000000000413e-05, 1.1263000000000939e-05, 1.1249999999997373e-05, 1.1237000000000746e-05, 1.1250000000000843e-05, 1.0570000000001412e-05, 1.0569999999997942e-05, 1.0945000000001787e-05, 1.0569999999997942e-05, 1.0611000000000648e-05, 1.0930999999998747e-05, 1.0584000000000982e-05, 1.1264000000000413e-05, 1.1264000000000413e-05, 1.1250000000000843e-05, 1.0916999999999177e-05, 1.0568999999998469e-05, 1.1221999999998233e-05, 1.1264000000000413e-05, 1.0916999999999177e-05, 1.0917000000002647e-05, 1.0652999999999357e-05, 1.0958999999997887e-05, 1.0916999999999177e-05, 1.0917000000002647e-05, 1.0902999999999607e-05, 1.1207999999998663e-05, 1.1250000000000843e-05, 1.0916999999999177e-05, 1.0929999999999274e-05, 1.0526999999999759e-05, 1.0597000000001078e-05, 1.0915999999999704e-05, 1.0930999999998747e-05, 1.1236000000001273e-05, 1.0916999999999177e-05]</msg>
<status status="PASS" starttime="20201029 12:45:50.727" endtime="20201029 12:45:50.730"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.723" endtime="20201029 12:45:50.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:50.734" endtime="20201029 12:45:50.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.733" endtime="20201029 12:45:50.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.731" endtime="20201029 12:45:50.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.374" endtime="20201029 12:45:50.755"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.374" endtime="20201029 12:45:50.755"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.764" endtime="20201029 12:45:50.781"></status>
</kw>
<msg timestamp="20201029 12:45:50.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.762" endtime="20201029 12:45:50.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:50.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:50.783" endtime="20201029 12:45:50.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.785" endtime="20201029 12:45:50.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.760" endtime="20201029 12:45:50.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.757" endtime="20201029 12:45:50.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:50.795" endtime="20201029 12:45:51.081"></status>
</kw>
<msg timestamp="20201029 12:45:51.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022985264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:50.793" endtime="20201029 12:45:51.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022985264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.085" endtime="20201029 12:45:51.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.094" endtime="20201029 12:45:51.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.790" endtime="20201029 12:45:51.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.788" endtime="20201029 12:45:51.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.101" level="INFO">${RESULT} = [{'diff': 1.2305999999996653e-05}, {'diff': 1.1957999999999414e-05}, {'diff': 1.2639000000001788e-05}, {'diff': 1.1596999999998608e-05}, {'diff': 1.1597000000002078e-05}, {'diff': 1.1958999999998887e-...</msg>
<status status="PASS" starttime="20201029 12:45:51.097" endtime="20201029 12:45:51.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:51.105" level="INFO">${ACCURACY} = {'diff': [1.2305999999996653e-05, 1.1957999999999414e-05, 1.2639000000001788e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1958999999998887e-05, 1.2292000000000552e-05, 1.2306000000000122e-05...</msg>
<status status="PASS" starttime="20201029 12:45:51.102" endtime="20201029 12:45:51.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.109" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201029 12:45:51.108" endtime="20201029 12:45:51.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.112" level="INFO">VALUE: [1.2305999999996653e-05, 1.1957999999999414e-05, 1.2639000000001788e-05, 1.1596999999998608e-05, 1.1597000000002078e-05, 1.1958999999998887e-05, 1.2292000000000552e-05, 1.2306000000000122e-05, 1.2374999999998498e-05, 1.1957999999999414e-05, 1.2332999999999789e-05, 1.1903000000000608e-05, 1.1971999999998983e-05, 1.1875000000001468e-05, 1.2332999999999789e-05, 1.1930999999999747e-05, 1.2306000000000122e-05, 1.2306000000000122e-05, 1.1651999999997414e-05, 1.2291000000001079e-05, 1.2639000000001788e-05, 1.1610999999998178e-05, 1.1971999999998983e-05, 1.2291000000001079e-05, 1.1612000000001121e-05, 1.2306000000000122e-05, 1.1596999999998608e-05, 1.2305000000000649e-05, 1.1596999999998608e-05, 1.1944999999999317e-05, 1.1611000000001648e-05, 1.1610999999998178e-05, 1.230499999999718e-05, 1.2291000000001079e-05, 1.1610999999998178e-05, 1.2306000000000122e-05, 1.2305000000000649e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.1695000000002537e-05, 1.1930000000000274e-05, 1.1624999999997748e-05, 1.2277999999997513e-05, 1.2291999999997083e-05, 1.1610999999998178e-05, 1.1959000000002357e-05, 1.1957999999999414e-05, 1.1957999999999414e-05, 1.230499999999718e-05, 1.2306000000000122e-05]</msg>
<status status="PASS" starttime="20201029 12:45:51.111" endtime="20201029 12:45:51.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.106" endtime="20201029 12:45:51.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.118" endtime="20201029 12:45:51.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.117" endtime="20201029 12:45:51.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.115" endtime="20201029 12:45:51.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.756" endtime="20201029 12:45:51.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:50.755" endtime="20201029 12:45:51.139"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.148" endtime="20201029 12:45:51.164"></status>
</kw>
<msg timestamp="20201029 12:45:51.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.146" endtime="20201029 12:45:51.165"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.166" endtime="20201029 12:45:51.167"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.168" endtime="20201029 12:45:51.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.144" endtime="20201029 12:45:51.170"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.142" endtime="20201029 12:45:51.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.178" endtime="20201029 12:45:51.465"></status>
</kw>
<msg timestamp="20201029 12:45:51.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.176" endtime="20201029 12:45:51.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020823306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020835986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.469" endtime="20201029 12:45:51.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.478" endtime="20201029 12:45:51.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.173" endtime="20201029 12:45:51.480"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.172" endtime="20201029 12:45:51.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.485" level="INFO">${RESULT} = [{'diff': 1.2680000000001024e-05}, {'diff': 1.3028000000001733e-05}, {'diff': 1.2708000000000164e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2681000000000497e-05}, {'diff': 1.2639000000001788e-...</msg>
<status status="PASS" starttime="20201029 12:45:51.482" endtime="20201029 12:45:51.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:51.490" level="INFO">${ACCURACY} = {'diff': [1.2680000000001024e-05, 1.3028000000001733e-05, 1.2708000000000164e-05, 1.2638999999998318e-05, 1.2681000000000497e-05, 1.2639000000001788e-05, 1.2958000000000414e-05, 1.2986000000003023e-05...</msg>
<status status="PASS" starttime="20201029 12:45:51.486" endtime="20201029 12:45:51.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.495" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201029 12:45:51.494" endtime="20201029 12:45:51.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.497" level="INFO">VALUE: [1.2680000000001024e-05, 1.3028000000001733e-05, 1.2708000000000164e-05, 1.2638999999998318e-05, 1.2681000000000497e-05, 1.2639000000001788e-05, 1.2958000000000414e-05, 1.2986000000003023e-05, 1.2999999999999123e-05, 1.2624999999998748e-05, 1.2999999999999123e-05, 1.302699999999879e-05, 1.2639000000001788e-05, 1.2999999999999123e-05, 1.2985999999999553e-05, 1.2653000000001358e-05, 1.3014000000002163e-05, 1.2666999999997458e-05, 1.2985999999999553e-05, 1.331899999999775e-05, 1.333299999999732e-05, 1.2985999999999553e-05, 1.2652999999997888e-05, 1.2985999999999553e-05, 1.2999999999999123e-05, 1.2638999999998318e-05, 1.2985999999999553e-05, 1.2639000000001788e-05, 1.3347000000000359e-05, 1.2999999999999123e-05, 1.2930000000001274e-05, 1.2667000000000928e-05, 1.3333000000000789e-05, 1.2971999999999984e-05, 1.2986000000003023e-05, 1.2973000000002927e-05, 1.2985999999999553e-05, 1.333299999999732e-05, 1.2638999999998318e-05, 1.2596999999999609e-05, 1.3333000000000789e-05, 1.2930000000001274e-05, 1.2945000000000317e-05, 1.2985999999999553e-05, 1.2639000000001788e-05, 1.2652999999997888e-05, 1.2665999999997984e-05, 1.2637999999998845e-05, 1.2985999999999553e-05, 1.331899999999775e-05]</msg>
<status status="PASS" starttime="20201029 12:45:51.496" endtime="20201029 12:45:51.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.491" endtime="20201029 12:45:51.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.503" endtime="20201029 12:45:51.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.501" endtime="20201029 12:45:51.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.500" endtime="20201029 12:45:51.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.140" endtime="20201029 12:45:51.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.139" endtime="20201029 12:45:51.523"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.533" endtime="20201029 12:45:51.547"></status>
</kw>
<msg timestamp="20201029 12:45:51.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.531" endtime="20201029 12:45:51.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.548" endtime="20201029 12:45:51.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.551" endtime="20201029 12:45:51.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.528" endtime="20201029 12:45:51.553"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.526" endtime="20201029 12:45:51.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.560" endtime="20201029 12:45:51.847"></status>
</kw>
<msg timestamp="20201029 12:45:51.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02071, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:45:51.559" endtime="20201029 12:45:51.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020695972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02071, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:45:51.852" endtime="20201029 12:45:51.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.860" endtime="20201029 12:45:51.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.556" endtime="20201029 12:45:51.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.554" endtime="20201029 12:45:51.863"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:51.867" level="INFO">${RESULT} = [{'diff': 1.4027999999999263e-05}, {'diff': 1.3749999999999873e-05}, {'diff': 1.3681000000001498e-05}, {'diff': 1.4389000000000068e-05}, {'diff': 1.3693999999998124e-05}, {'diff': 1.4000000000000123e-...</msg>
<status status="PASS" starttime="20201029 12:45:51.864" endtime="20201029 12:45:51.867"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:51.871" level="INFO">${ACCURACY} = {'diff': [1.4027999999999263e-05, 1.3749999999999873e-05, 1.3681000000001498e-05, 1.4389000000000068e-05, 1.3693999999998124e-05, 1.4000000000000123e-05, 1.4360999999997459e-05, 1.4348000000000832e-05...</msg>
<status status="PASS" starttime="20201029 12:45:51.868" endtime="20201029 12:45:51.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.876" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201029 12:45:51.875" endtime="20201029 12:45:51.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.879" level="INFO">VALUE: [1.4027999999999263e-05, 1.3749999999999873e-05, 1.3681000000001498e-05, 1.4389000000000068e-05, 1.3693999999998124e-05, 1.4000000000000123e-05, 1.4360999999997459e-05, 1.4348000000000832e-05, 1.402699999999979e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.4000000000000123e-05, 1.4361000000000929e-05, 1.3680999999998028e-05, 1.3681000000001498e-05, 1.4027999999999263e-05, 1.3986000000000554e-05, 1.4375000000000498e-05, 1.401300000000022e-05, 1.3679999999998554e-05, 1.3694000000001594e-05, 1.3665999999998985e-05, 1.3681000000001498e-05, 1.3694000000001594e-05, 1.402699999999979e-05, 1.4375000000000498e-05, 1.4014000000003163e-05, 1.3665999999998985e-05, 1.4374999999997029e-05, 1.4389000000000068e-05, 1.434699999999789e-05, 1.3667000000001928e-05, 1.4361000000000929e-05, 1.3681000000001498e-05, 1.4013999999999693e-05, 1.3679999999998554e-05, 1.3749999999999873e-05, 1.4013999999999693e-05, 1.4042000000002303e-05, 1.3709000000000637e-05, 1.4389000000000068e-05, 1.3709000000000637e-05, 1.4361000000000929e-05, 1.4360999999997459e-05, 1.4375000000000498e-05, 1.3681000000001498e-05, 1.401300000000022e-05, 1.4375000000000498e-05, 1.4375000000000498e-05, 1.3694000000001594e-05]</msg>
<status status="PASS" starttime="20201029 12:45:51.877" endtime="20201029 12:45:51.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.872" endtime="20201029 12:45:51.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:51.884" endtime="20201029 12:45:51.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.882" endtime="20201029 12:45:51.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.881" endtime="20201029 12:45:51.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.524" endtime="20201029 12:45:51.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.524" endtime="20201029 12:45:51.905"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.914" endtime="20201029 12:45:51.930"></status>
</kw>
<msg timestamp="20201029 12:45:51.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.912" endtime="20201029 12:45:51.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:51.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:51.931" endtime="20201029 12:45:51.933"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.934" endtime="20201029 12:45:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.909" endtime="20201029 12:45:51.936"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.907" endtime="20201029 12:45:51.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:51.943" endtime="20201029 12:45:52.229"></status>
</kw>
<msg timestamp="20201029 12:45:52.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021194722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:51.942" endtime="20201029 12:45:52.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021179667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021194722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.234" endtime="20201029 12:45:52.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.242" endtime="20201029 12:45:52.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.939" endtime="20201029 12:45:52.245"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.937" endtime="20201029 12:45:52.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.249" level="INFO">${RESULT} = [{'diff': 1.505499999999993e-05}, {'diff': 1.5041999999999833e-05}, {'diff': 1.505499999999993e-05}, {'diff': 1.4737000000000777e-05}, {'diff': 1.5056000000002873e-05}, {'diff': 1.4723000000001207e-05...</msg>
<status status="PASS" starttime="20201029 12:45:52.246" endtime="20201029 12:45:52.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:52.254" level="INFO">${ACCURACY} = {'diff': [1.505499999999993e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.4737000000000777e-05, 1.5056000000002873e-05, 1.4723000000001207e-05, 1.50689999999995e-05, 1.4708000000002164e-05, 1....</msg>
<status status="PASS" starttime="20201029 12:45:52.250" endtime="20201029 12:45:52.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.258" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201029 12:45:52.257" endtime="20201029 12:45:52.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.261" level="INFO">VALUE: [1.505499999999993e-05, 1.5041999999999833e-05, 1.505499999999993e-05, 1.4737000000000777e-05, 1.5056000000002873e-05, 1.4723000000001207e-05, 1.50689999999995e-05, 1.4708000000002164e-05, 1.4723000000001207e-05, 1.4736000000001304e-05, 1.505499999999993e-05, 1.538900000000107e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.4721999999998264e-05, 1.5402000000001165e-05, 1.5388000000001595e-05, 1.4723000000001207e-05, 1.5430999999999778e-05, 1.5083999999998543e-05, 1.5124999999997779e-05, 1.538900000000107e-05, 1.4722999999997738e-05, 1.504100000000036e-05, 1.4764000000000443e-05, 1.50689999999995e-05, 1.50689999999995e-05, 1.5472000000002484e-05, 1.4679999999999555e-05, 1.5388000000001595e-05, 1.4360999999997459e-05, 1.5041999999999833e-05, 1.540300000000064e-05, 1.5402000000001165e-05, 1.4707999999998694e-05, 1.504100000000036e-05, 1.540300000000064e-05, 1.4750000000000874e-05, 1.5457999999999444e-05, 1.509699999999864e-05, 1.5055999999999403e-05, 1.47629999999975e-05, 1.4721999999998264e-05, 1.4722000000001734e-05, 1.4723000000001207e-05, 1.5097000000002109e-05, 1.4707999999998694e-05, 1.4708000000002164e-05, 1.4735999999997834e-05, 1.4707999999998694e-05]</msg>
<status status="PASS" starttime="20201029 12:45:52.259" endtime="20201029 12:45:52.262"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.254" endtime="20201029 12:45:52.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.267" endtime="20201029 12:45:52.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.265" endtime="20201029 12:45:52.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.264" endtime="20201029 12:45:52.287"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.906" endtime="20201029 12:45:52.288"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:51.905" endtime="20201029 12:45:52.288"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.297" endtime="20201029 12:45:52.311"></status>
</kw>
<msg timestamp="20201029 12:45:52.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.295" endtime="20201029 12:45:52.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.313" endtime="20201029 12:45:52.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.315" endtime="20201029 12:45:52.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.292" endtime="20201029 12:45:52.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.290" endtime="20201029 12:45:52.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.324" endtime="20201029 12:45:52.611"></status>
</kw>
<msg timestamp="20201029 12:45:52.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.323" endtime="20201029 12:45:52.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019927597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019943694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.615" endtime="20201029 12:45:52.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.624" endtime="20201029 12:45:52.625"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.320" endtime="20201029 12:45:52.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.318" endtime="20201029 12:45:52.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:52.630" level="INFO">${RESULT} = [{'diff': 1.609700000000311e-05}, {'diff': 1.643100000000078e-05}, {'diff': 1.5764000000001444e-05}, {'diff': 1.5735999999998834e-05}, {'diff': 1.6430000000001305e-05}, {'diff': 1.6458000000000444e-05...</msg>
<status status="PASS" starttime="20201029 12:45:52.627" endtime="20201029 12:45:52.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:52.636" level="INFO">${ACCURACY} = {'diff': [1.609700000000311e-05, 1.643100000000078e-05, 1.5764000000001444e-05, 1.5735999999998834e-05, 1.6430000000001305e-05, 1.6458000000000444e-05, 1.5750000000001874e-05, 1.6445000000000348e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:52.631" endtime="20201029 12:45:52.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.640" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201029 12:45:52.639" endtime="20201029 12:45:52.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.643" level="INFO">VALUE: [1.609700000000311e-05, 1.643100000000078e-05, 1.5764000000001444e-05, 1.5735999999998834e-05, 1.6430000000001305e-05, 1.6458000000000444e-05, 1.5750000000001874e-05, 1.6445000000000348e-05, 1.5749999999998404e-05, 1.605500000000093e-05, 1.6083999999999543e-05, 1.6429999999997835e-05, 1.5763999999997974e-05, 1.5792000000000583e-05, 1.6445000000000348e-05, 1.6445000000000348e-05, 1.641700000000121e-05, 1.5430999999999778e-05, 1.5819999999999723e-05, 1.643100000000078e-05, 1.566700000000046e-05, 1.611100000000268e-05, 1.6458000000000444e-05, 1.6097999999999113e-05, 1.637499999999903e-05, 1.5749999999998404e-05, 1.605500000000093e-05, 1.5735999999998834e-05, 1.609699999999964e-05, 1.5749999999998404e-05, 1.5750000000001874e-05, 1.611099999999921e-05, 1.611099999999921e-05, 1.6097999999999113e-05, 1.5764000000001444e-05, 1.5749999999998404e-05, 1.5681000000000028e-05, 1.5749999999998404e-05, 1.609699999999964e-05, 1.576300000000197e-05, 1.5778000000001013e-05, 1.609699999999964e-05, 1.5764000000001444e-05, 1.5402000000001165e-05, 1.5750000000001874e-05, 1.5707999999999694e-05, 1.609700000000311e-05, 1.611099999999921e-05, 1.5402000000001165e-05, 1.6042000000000833e-05]</msg>
<status status="PASS" starttime="20201029 12:45:52.641" endtime="20201029 12:45:52.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.637" endtime="20201029 12:45:52.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:52.654" endtime="20201029 12:45:52.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.652" endtime="20201029 12:45:52.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.651" endtime="20201029 12:45:52.674"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.289" endtime="20201029 12:45:52.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.288" endtime="20201029 12:45:52.675"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.684" endtime="20201029 12:45:52.700"></status>
</kw>
<msg timestamp="20201029 12:45:52.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.682" endtime="20201029 12:45:52.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:52.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:52.702" endtime="20201029 12:45:52.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.704" endtime="20201029 12:45:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.679" endtime="20201029 12:45:52.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.677" endtime="20201029 12:45:52.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:52.714" endtime="20201029 12:45:53.001"></status>
</kw>
<msg timestamp="20201029 12:45:53.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:52.712" endtime="20201029 12:45:53.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020847417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020864194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.005" endtime="20201029 12:45:53.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.020" endtime="20201029 12:45:53.023"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.709" endtime="20201029 12:45:53.024"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.707" endtime="20201029 12:45:53.026"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.033" level="INFO">${RESULT} = [{'diff': 1.677699999999907e-05}, {'diff': 1.713899999999935e-05}, {'diff': 1.679099999999864e-05}, {'diff': 1.6764000000002444e-05}, {'diff': 1.683299999999735e-05}, {'diff': 1.7459000000000918e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:53.027" endtime="20201029 12:45:53.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:53.041" level="INFO">${ACCURACY} = {'diff': [1.677699999999907e-05, 1.713899999999935e-05, 1.679099999999864e-05, 1.6764000000002444e-05, 1.683299999999735e-05, 1.7459000000000918e-05, 1.677699999999907e-05, 1.7527999999999294e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 12:45:53.035" endtime="20201029 12:45:53.041"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.048" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201029 12:45:53.046" endtime="20201029 12:45:53.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.050" level="INFO">VALUE: [1.677699999999907e-05, 1.713899999999935e-05, 1.679099999999864e-05, 1.6764000000002444e-05, 1.683299999999735e-05, 1.7459000000000918e-05, 1.677699999999907e-05, 1.7527999999999294e-05, 1.7458000000001445e-05, 1.7541999999998864e-05, 1.7457999999997975e-05, 1.6764000000002444e-05, 1.713900000000282e-05, 1.712499999999978e-05, 1.677699999999907e-05, 1.6791999999998114e-05, 1.712499999999978e-05, 1.6736000000003304e-05, 1.6763999999998974e-05, 1.679100000000211e-05, 1.6750000000002874e-05, 1.6778000000002014e-05, 1.6792000000001583e-05, 1.7486000000000584e-05, 1.6764000000002444e-05, 1.677699999999907e-05, 1.7486000000000584e-05, 1.6792000000001583e-05, 1.6777999999998544e-05, 1.708300000000107e-05, 1.6749999999999404e-05, 1.6805999999997684e-05, 1.6763999999998974e-05, 1.6444000000000875e-05, 1.715299999999892e-05, 1.713899999999935e-05, 1.6708000000000695e-05, 1.6806000000001153e-05, 1.6806000000001153e-05, 1.713899999999935e-05, 1.712499999999978e-05, 1.6791999999998114e-05, 1.6749999999999404e-05, 1.7111999999999683e-05, 1.7473000000000488e-05, 1.6777999999998544e-05, 1.6778000000002014e-05, 1.715299999999892e-05, 1.7500000000000154e-05, 1.712499999999978e-05]</msg>
<status status="PASS" starttime="20201029 12:45:53.049" endtime="20201029 12:45:53.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.043" endtime="20201029 12:45:53.052"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.055" endtime="20201029 12:45:53.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.054" endtime="20201029 12:45:53.075"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.053" endtime="20201029 12:45:53.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.676" endtime="20201029 12:45:53.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:52.675" endtime="20201029 12:45:53.076"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.085" endtime="20201029 12:45:53.101"></status>
</kw>
<msg timestamp="20201029 12:45:53.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.084" endtime="20201029 12:45:53.102"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.103" endtime="20201029 12:45:53.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.105" endtime="20201029 12:45:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.081" endtime="20201029 12:45:53.107"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.079" endtime="20201029 12:45:53.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.115" endtime="20201029 12:45:53.406"></status>
</kw>
<msg timestamp="20201029 12:45:53.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.113" endtime="20201029 12:45:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021136542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021154708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.410" endtime="20201029 12:45:53.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.418" endtime="20201029 12:45:53.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.110" endtime="20201029 12:45:53.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.108" endtime="20201029 12:45:53.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.425" level="INFO">${RESULT} = [{'diff': 1.8166000000000015e-05}, {'diff': 1.8179999999999585e-05}, {'diff': 1.813900000000035e-05}, {'diff': 1.8152000000000446e-05}, {'diff': 1.815299999999992e-05}, {'diff': 1.7486000000000584e-05...</msg>
<status status="PASS" starttime="20201029 12:45:53.422" endtime="20201029 12:45:53.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:53.429" level="INFO">${ACCURACY} = {'diff': [1.8166000000000015e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.7486000000000584e-05, 1.7778000000003014e-05, 1.8179999999999585e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:53.426" endtime="20201029 12:45:53.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.434" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201029 12:45:53.433" endtime="20201029 12:45:53.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.436" level="INFO">VALUE: [1.8166000000000015e-05, 1.8179999999999585e-05, 1.813900000000035e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.7486000000000584e-05, 1.7778000000003014e-05, 1.8179999999999585e-05, 1.781899999999878e-05, 1.7500000000000154e-05, 1.8528000000000294e-05, 1.8179999999999585e-05, 1.7486000000000584e-05, 1.8097999999997644e-05, 1.7541999999998864e-05, 1.7820000000001723e-05, 1.8152000000000446e-05, 1.815299999999992e-05, 1.790299999999967e-05, 1.819499999999863e-05, 1.7472000000001014e-05, 1.7500000000000154e-05, 1.8528000000000294e-05, 1.8207999999998725e-05, 1.8486000000001584e-05, 1.7805999999998684e-05, 1.783300000000182e-05, 1.7833999999997824e-05, 1.8485999999998115e-05, 1.851300000000125e-05, 1.780499999999921e-05, 1.780500000000268e-05, 1.7848000000000863e-05, 1.8151999999996976e-05, 1.780499999999921e-05, 1.818099999999906e-05, 1.819499999999863e-05, 1.7834000000001293e-05, 1.8514000000000724e-05, 1.7457999999997975e-05, 1.7806000000002153e-05, 1.783299999999835e-05, 1.781900000000225e-05, 1.8514000000000724e-05, 1.744499999999788e-05, 1.7834000000001293e-05, 1.784699999999792e-05, 1.7847999999997394e-05, 1.7820000000001723e-05, 1.747299999999702e-05]</msg>
<status status="PASS" starttime="20201029 12:45:53.435" endtime="20201029 12:45:53.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.430" endtime="20201029 12:45:53.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.442" endtime="20201029 12:45:53.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.440" endtime="20201029 12:45:53.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.439" endtime="20201029 12:45:53.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.077" endtime="20201029 12:45:53.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.077" endtime="20201029 12:45:53.463"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.471" endtime="20201029 12:45:53.487"></status>
</kw>
<msg timestamp="20201029 12:45:53.487" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.470" endtime="20201029 12:45:53.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.488" endtime="20201029 12:45:53.490"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.491" endtime="20201029 12:45:53.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.467" endtime="20201029 12:45:53.493"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.465" endtime="20201029 12:45:53.493"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.500" endtime="20201029 12:45:53.801"></status>
</kw>
<msg timestamp="20201029 12:45:53.805" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.498" endtime="20201029 12:45:53.805"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019489986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.806" endtime="20201029 12:45:53.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.814" endtime="20201029 12:45:53.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.496" endtime="20201029 12:45:53.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.494" endtime="20201029 12:45:53.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:53.820" level="INFO">${RESULT} = [{'diff': 1.8499999999997685e-05}, {'diff': 1.8514000000000724e-05}, {'diff': 1.886100000000196e-05}, {'diff': 1.919499999999963e-05}, {'diff': 1.954100000000139e-05}, {'diff': 1.9263999999998005e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:53.817" endtime="20201029 12:45:53.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:53.825" level="INFO">${ACCURACY} = {'diff': [1.8499999999997685e-05, 1.8514000000000724e-05, 1.886100000000196e-05, 1.919499999999963e-05, 1.954100000000139e-05, 1.9263999999998005e-05, 1.851300000000125e-05, 1.893099999999981e-05, 1.8...</msg>
<status status="PASS" starttime="20201029 12:45:53.821" endtime="20201029 12:45:53.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.830" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201029 12:45:53.829" endtime="20201029 12:45:53.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.832" level="INFO">VALUE: [1.8499999999997685e-05, 1.8514000000000724e-05, 1.886100000000196e-05, 1.919499999999963e-05, 1.954100000000139e-05, 1.9263999999998005e-05, 1.851300000000125e-05, 1.893099999999981e-05, 1.886099999999849e-05, 1.8862000000001433e-05, 1.954100000000139e-05, 1.8848000000001863e-05, 1.884699999999892e-05, 1.886099999999849e-05, 1.852700000000082e-05, 1.886099999999849e-05, 1.883299999999935e-05, 1.91950000000031e-05, 1.887500000000153e-05, 1.886100000000196e-05, 1.886099999999849e-05, 1.8834000000002293e-05, 1.8499999999997685e-05, 1.9194000000000155e-05, 1.8514000000000724e-05, 1.915300000000092e-05, 1.918100000000006e-05, 1.8847999999998394e-05, 1.852700000000082e-05, 1.962499999999881e-05, 1.887500000000153e-05, 1.886099999999849e-05, 1.8500000000001154e-05, 1.9263000000002e-05, 1.887500000000153e-05, 1.887499999999806e-05, 1.9556000000000434e-05, 1.8583999999998574e-05, 1.9207999999999725e-05, 1.8500000000001154e-05, 1.8471999999998545e-05, 1.913899999999788e-05, 1.92089999999992e-05, 1.887500000000153e-05, 1.9194000000000155e-05, 1.9208000000003195e-05, 1.852700000000082e-05, 1.8848000000001863e-05, 1.9194000000000155e-05, 1.886099999999849e-05]</msg>
<status status="PASS" starttime="20201029 12:45:53.831" endtime="20201029 12:45:53.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.826" endtime="20201029 12:45:53.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:53.837" endtime="20201029 12:45:53.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.836" endtime="20201029 12:45:53.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.835" endtime="20201029 12:45:53.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.463" endtime="20201029 12:45:53.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.463" endtime="20201029 12:45:53.858"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.867" endtime="20201029 12:45:53.881"></status>
</kw>
<msg timestamp="20201029 12:45:53.882" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.865" endtime="20201029 12:45:53.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:53.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:53.883" endtime="20201029 12:45:53.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.885" endtime="20201029 12:45:53.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.863" endtime="20201029 12:45:53.887"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.860" endtime="20201029 12:45:53.888"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:53.894" endtime="20201029 12:45:54.180"></status>
</kw>
<msg timestamp="20201029 12:45:54.183" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:53.892" endtime="20201029 12:45:54.183"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019363208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.184" endtime="20201029 12:45:54.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.193" endtime="20201029 12:45:54.194"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.890" endtime="20201029 12:45:54.195"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.888" endtime="20201029 12:45:54.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.199" level="INFO">${RESULT} = [{'diff': 2.056900000000153e-05}, {'diff': 1.961100000000271e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 1.990300000000167e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:54.196" endtime="20201029 12:45:54.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:54.203" level="INFO">${ACCURACY} = {'diff': [2.056900000000153e-05, 1.961100000000271e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 1.990300000000167e-05, 2.0235999999999865e-05, 2.0208000000000725e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:45:54.200" endtime="20201029 12:45:54.203"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.208" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201029 12:45:54.207" endtime="20201029 12:45:54.208"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.210" level="INFO">VALUE: [2.056900000000153e-05, 1.961100000000271e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 1.990300000000167e-05, 2.0235999999999865e-05, 2.0208000000000725e-05, 1.952700000000182e-05, 1.955500000000096e-05, 1.9887999999999156e-05, 2.0235999999999865e-05, 2.058299999999763e-05, 2.0306000000001184e-05, 2.0249999999999435e-05, 1.991700000000124e-05, 1.9958000000000475e-05, 2.0651999999999476e-05, 1.98890000000021e-05, 2.018100000000106e-05, 1.9556000000000434e-05, 2.05830000000011e-05, 1.987499999999906e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 1.990300000000167e-05, 2.059700000000067e-05, 2.0249999999999435e-05, 1.986099999999949e-05, 1.9556000000000434e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 2.0207999999997256e-05, 2.0235999999999865e-05, 2.058299999999763e-05, 2.0278000000002044e-05, 1.988899999999863e-05, 1.988899999999863e-05, 2.0235999999999865e-05, 2.0222000000000295e-05, 2.0166000000002016e-05, 2.0263999999999005e-05, 2.05830000000011e-05, 2.0249999999999435e-05, 2.0249999999999435e-05, 2.016699999999802e-05, 1.991700000000124e-05, 2.0249999999999435e-05, 1.9542000000000864e-05, 2.030499999999824e-05]</msg>
<status status="PASS" starttime="20201029 12:45:54.209" endtime="20201029 12:45:54.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.204" endtime="20201029 12:45:54.211"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.215" endtime="20201029 12:45:54.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.213" endtime="20201029 12:45:54.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.212" endtime="20201029 12:45:54.235"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.859" endtime="20201029 12:45:54.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:53.858" endtime="20201029 12:45:54.236"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.244" endtime="20201029 12:45:54.262"></status>
</kw>
<msg timestamp="20201029 12:45:54.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.243" endtime="20201029 12:45:54.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.263" endtime="20201029 12:45:54.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.266" endtime="20201029 12:45:54.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.240" endtime="20201029 12:45:54.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.238" endtime="20201029 12:45:54.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.275" endtime="20201029 12:45:54.560"></status>
</kw>
<msg timestamp="20201029 12:45:54.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.273" endtime="20201029 12:45:54.563"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022510847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.564" endtime="20201029 12:45:54.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.572" endtime="20201029 12:45:54.574"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.271" endtime="20201029 12:45:54.575"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.269" endtime="20201029 12:45:54.575"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.579" level="INFO">${RESULT} = [{'diff': 2.1305999999998715e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.062499999999981e-05}, {'diff': 2.0569999999997535e-05}, {'diff': 2.12090000000012e-05}, {'diff': 2.1277999999999575e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:54.576" endtime="20201029 12:45:54.579"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:54.583" level="INFO">${ACCURACY} = {'diff': [2.1305999999998715e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.0569999999997535e-05, 2.12090000000012e-05, 2.1277999999999575e-05, 2.0513999999999255e-05, 2.0929999999998866e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:45:54.580" endtime="20201029 12:45:54.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.588" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201029 12:45:54.587" endtime="20201029 12:45:54.588"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.590" level="INFO">VALUE: [2.1305999999998715e-05, 2.062499999999981e-05, 2.062499999999981e-05, 2.0569999999997535e-05, 2.12090000000012e-05, 2.1277999999999575e-05, 2.0513999999999255e-05, 2.0929999999998866e-05, 2.130499999999924e-05, 2.1264000000000005e-05, 2.1277999999999575e-05, 2.1292000000002614e-05, 2.0541999999998395e-05, 2.0930000000002336e-05, 2.093100000000181e-05, 2.095900000000095e-05, 2.059700000000067e-05, 2.0915999999999296e-05, 2.056900000000153e-05, 2.0583999999997105e-05, 2.162500000000081e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.129099999999967e-05, 2.058299999999763e-05, 2.0943999999998436e-05, 2.1264000000000005e-05, 2.058299999999763e-05, 2.1264000000000005e-05, 2.0929999999998866e-05, 2.087500000000006e-05, 2.1264000000000005e-05, 2.059700000000067e-05, 2.1277999999999575e-05, 2.130499999999924e-05, 2.1277999999999575e-05, 2.09029999999992e-05, 2.0943999999998436e-05, 2.0542000000001864e-05, 2.091699999999877e-05, 2.0584000000000574e-05, 2.1277999999999575e-05, 2.094500000000138e-05, 2.088899999999963e-05, 2.1264000000000005e-05, 2.12770000000001e-05, 2.0929999999998866e-05, 2.0930000000002336e-05, 2.1277999999999575e-05, 2.0915999999999296e-05]</msg>
<status status="PASS" starttime="20201029 12:45:54.589" endtime="20201029 12:45:54.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.584" endtime="20201029 12:45:54.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.596" endtime="20201029 12:45:54.615"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.594" endtime="20201029 12:45:54.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.593" endtime="20201029 12:45:54.616"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.237" endtime="20201029 12:45:54.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.236" endtime="20201029 12:45:54.617"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.626" endtime="20201029 12:45:54.642"></status>
</kw>
<msg timestamp="20201029 12:45:54.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.624" endtime="20201029 12:45:54.642"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.645" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:54.643" endtime="20201029 12:45:54.645"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.646" endtime="20201029 12:45:54.647"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.622" endtime="20201029 12:45:54.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.619" endtime="20201029 12:45:54.648"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.654" endtime="20201029 12:45:54.939"></status>
</kw>
<msg timestamp="20201029 12:45:54.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020700431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.653" endtime="20201029 12:45:54.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020700431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020722736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:54.945" endtime="20201029 12:45:54.954"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:54.955" endtime="20201029 12:45:54.956"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.650" endtime="20201029 12:45:54.957"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.649" endtime="20201029 12:45:54.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:54.961" level="INFO">${RESULT} = [{'diff': 2.230500000000024e-05}, {'diff': 2.162500000000081e-05}, {'diff': 2.1985999999998146e-05}, {'diff': 2.161100000000124e-05}, {'diff': 2.2320000000002754e-05}, {'diff': 2.231899999999981e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:54.958" endtime="20201029 12:45:54.961"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:54.966" level="INFO">${ACCURACY} = {'diff': [2.230500000000024e-05, 2.162500000000081e-05, 2.1985999999998146e-05, 2.161100000000124e-05, 2.2320000000002754e-05, 2.231899999999981e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.22...</msg>
<status status="PASS" starttime="20201029 12:45:54.962" endtime="20201029 12:45:54.966"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.971" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201029 12:45:54.970" endtime="20201029 12:45:54.971"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:54.973" level="INFO">VALUE: [2.230500000000024e-05, 2.162500000000081e-05, 2.1985999999998146e-05, 2.161100000000124e-05, 2.2320000000002754e-05, 2.231899999999981e-05, 2.159700000000167e-05, 2.161100000000124e-05, 2.2236000000001865e-05, 2.1972000000002045e-05, 2.162500000000081e-05, 2.194499999999891e-05, 2.1957999999999006e-05, 2.2319999999999285e-05, 2.2305999999999715e-05, 2.2292000000000145e-05, 2.162500000000081e-05, 2.226300000000153e-05, 2.162500000000081e-05, 2.2292000000000145e-05, 2.1986000000001615e-05, 2.162499999999734e-05, 2.230500000000024e-05, 2.161100000000124e-05, 2.231899999999981e-05, 2.161100000000124e-05, 2.1971999999998576e-05, 2.2319999999999285e-05, 2.1666000000000046e-05, 2.1985999999998146e-05, 2.15969999999982e-05, 2.1972000000002045e-05, 2.231899999999981e-05, 2.1971999999998576e-05, 2.161100000000124e-05, 2.1957999999999006e-05, 2.229100000000067e-05, 2.1958000000002476e-05, 2.161100000000124e-05, 2.1916000000000296e-05, 2.230500000000024e-05, 2.195899999999848e-05, 2.1612000000000714e-05, 2.1957999999999006e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.162500000000081e-05, 2.2319999999999285e-05, 2.1971999999998576e-05, 2.1943999999999436e-05]</msg>
<status status="PASS" starttime="20201029 12:45:54.972" endtime="20201029 12:45:54.974"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.967" endtime="20201029 12:45:54.975"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:54.978" endtime="20201029 12:45:54.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.977" endtime="20201029 12:45:54.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.975" endtime="20201029 12:45:54.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.618" endtime="20201029 12:45:54.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.617" endtime="20201029 12:45:54.999"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.008" endtime="20201029 12:45:55.022"></status>
</kw>
<msg timestamp="20201029 12:45:55.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.006" endtime="20201029 12:45:55.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.024" endtime="20201029 12:45:55.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.026" endtime="20201029 12:45:55.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.004" endtime="20201029 12:45:55.028"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.001" endtime="20201029 12:45:55.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.035" endtime="20201029 12:45:55.323"></status>
</kw>
<msg timestamp="20201029 12:45:55.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.034" endtime="20201029 12:45:55.326"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.334" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019517653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019540653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.327" endtime="20201029 12:45:55.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.335" endtime="20201029 12:45:55.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.031" endtime="20201029 12:45:55.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.029" endtime="20201029 12:45:55.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.342" level="INFO">${RESULT} = [{'diff': 2.3000000000002185e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.269499999999966e-05}, {'diff': 2.262500000000181e-05}, {'diff': 2.27090000000027e-05}, {'diff': 2.3333999999999855e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:55.339" endtime="20201029 12:45:55.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:55.346" level="INFO">${ACCURACY} = {'diff': [2.3000000000002185e-05, 2.2999999999998716e-05, 2.269499999999966e-05, 2.262500000000181e-05, 2.27090000000027e-05, 2.3333999999999855e-05, 2.2971999999999576e-05, 2.2666000000001046e-05, 2....</msg>
<status status="PASS" starttime="20201029 12:45:55.343" endtime="20201029 12:45:55.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.350" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201029 12:45:55.349" endtime="20201029 12:45:55.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.353" level="INFO">VALUE: [2.3000000000002185e-05, 2.2999999999998716e-05, 2.269499999999966e-05, 2.262500000000181e-05, 2.27090000000027e-05, 2.3333999999999855e-05, 2.2971999999999576e-05, 2.2666000000001046e-05, 2.2735999999998896e-05, 2.336099999999952e-05, 2.2972000000003046e-05, 2.2944000000000436e-05, 2.2958000000000006e-05, 2.3014000000001755e-05, 2.334699999999995e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.2999999999998716e-05, 2.269499999999966e-05, 2.334699999999995e-05, 2.336100000000299e-05, 2.2999999999998716e-05, 2.336099999999952e-05, 2.330500000000124e-05, 2.336099999999952e-05, 2.3000000000002185e-05, 2.266700000000052e-05, 2.337499999999909e-05, 2.3332999999996912e-05, 2.2666000000001046e-05, 2.266700000000052e-05, 2.3013999999998286e-05, 2.265299999999748e-05, 2.3000000000002185e-05, 2.3347999999999425e-05, 2.2999999999998716e-05, 2.333300000000038e-05, 2.263900000000138e-05, 2.2971999999999576e-05, 2.265300000000095e-05, 2.266700000000052e-05, 2.3292000000001145e-05, 2.334699999999995e-05, 2.333300000000038e-05, 2.336099999999952e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.265300000000095e-05, 2.3056000000000465e-05, 2.265300000000095e-05]</msg>
<status status="PASS" starttime="20201029 12:45:55.351" endtime="20201029 12:45:55.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.347" endtime="20201029 12:45:55.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.358" endtime="20201029 12:45:55.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.356" endtime="20201029 12:45:55.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.355" endtime="20201029 12:45:55.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.000" endtime="20201029 12:45:55.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:54.999" endtime="20201029 12:45:55.378"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.387" endtime="20201029 12:45:55.404"></status>
</kw>
<msg timestamp="20201029 12:45:55.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.386" endtime="20201029 12:45:55.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.405" endtime="20201029 12:45:55.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.407" endtime="20201029 12:45:55.409"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.383" endtime="20201029 12:45:55.410"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.381" endtime="20201029 12:45:55.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.416" endtime="20201029 12:45:55.701"></status>
</kw>
<msg timestamp="20201029 12:45:55.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.415" endtime="20201029 12:45:55.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020939097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020962778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.705" endtime="20201029 12:45:55.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.714" endtime="20201029 12:45:55.715"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.412" endtime="20201029 12:45:55.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.411" endtime="20201029 12:45:55.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:55.720" level="INFO">${RESULT} = [{'diff': 2.368100000000109e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.4041999999998426e-05}, {'diff': 2.3958000000001006e-05}, {'diff': 2.437500000000009e-05}, {'diff': 2.3763999999999036e-05...</msg>
<status status="PASS" starttime="20201029 12:45:55.717" endtime="20201029 12:45:55.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:55.724" level="INFO">${ACCURACY} = {'diff': [2.368100000000109e-05, 2.3958000000001006e-05, 2.4041999999998426e-05, 2.3958000000001006e-05, 2.437500000000009e-05, 2.3763999999999036e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 12:45:55.721" endtime="20201029 12:45:55.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.729" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201029 12:45:55.728" endtime="20201029 12:45:55.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.731" level="INFO">VALUE: [2.368100000000109e-05, 2.3958000000001006e-05, 2.4041999999998426e-05, 2.3958000000001006e-05, 2.437500000000009e-05, 2.3763999999999036e-05, 2.438899999999966e-05, 2.44169999999988e-05, 2.4054999999998522e-05, 2.4027999999998856e-05, 2.3694000000001186e-05, 2.437500000000009e-05, 2.4070000000001035e-05, 2.369500000000066e-05, 2.4040999999998952e-05, 2.3666000000002047e-05, 2.3722000000000326e-05, 2.4040999999998952e-05, 2.4054999999998522e-05, 2.3693999999997717e-05, 2.4028000000002325e-05, 2.3680000000001616e-05, 2.3708000000000756e-05, 2.3693999999997717e-05, 2.362499999999934e-05, 2.437500000000009e-05, 2.438900000000313e-05, 2.3693999999997717e-05, 2.437500000000009e-05, 2.369500000000066e-05, 2.3680000000001616e-05, 2.4042000000001895e-05, 2.369500000000066e-05, 2.3708000000000756e-05, 2.4388000000000187e-05, 2.438899999999966e-05, 2.404100000000242e-05, 2.3749999999999466e-05, 2.3708000000000756e-05, 2.3680000000001616e-05, 2.3694000000001186e-05, 2.368099999999762e-05, 2.3693999999997717e-05, 2.4027999999998856e-05, 2.368100000000109e-05, 2.4056000000001465e-05, 2.437500000000009e-05, 2.369500000000066e-05, 2.363900000000238e-05, 2.4042000000001895e-05]</msg>
<status status="PASS" starttime="20201029 12:45:55.730" endtime="20201029 12:45:55.733"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.725" endtime="20201029 12:45:55.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:55.737" endtime="20201029 12:45:55.756"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.736" endtime="20201029 12:45:55.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.734" endtime="20201029 12:45:55.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.379" endtime="20201029 12:45:55.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.379" endtime="20201029 12:45:55.758"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.766" endtime="20201029 12:45:55.781"></status>
</kw>
<msg timestamp="20201029 12:45:55.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.765" endtime="20201029 12:45:55.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:55.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:55.783" endtime="20201029 12:45:55.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.785" endtime="20201029 12:45:55.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.762" endtime="20201029 12:45:55.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.760" endtime="20201029 12:45:55.788"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:55.794" endtime="20201029 12:45:56.081"></status>
</kw>
<msg timestamp="20201029 12:45:56.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019431389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:55.793" endtime="20201029 12:45:56.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.092" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019406667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019431389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.085" endtime="20201029 12:45:56.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.093" endtime="20201029 12:45:56.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.790" endtime="20201029 12:45:56.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.788" endtime="20201029 12:45:56.096"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.100" level="INFO">${RESULT} = [{'diff': 2.4722000000001326e-05}, {'diff': 2.54169999999998e-05}, {'diff': 2.4764000000000036e-05}, {'diff': 2.438899999999966e-05}, {'diff': 2.5000000000000716e-05}, {'diff': 2.4736000000000896e-05}...</msg>
<status status="PASS" starttime="20201029 12:45:56.097" endtime="20201029 12:45:56.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:56.105" level="INFO">${ACCURACY} = {'diff': [2.4722000000001326e-05, 2.54169999999998e-05, 2.4764000000000036e-05, 2.438899999999966e-05, 2.5000000000000716e-05, 2.4736000000000896e-05, 2.5402000000000757e-05, 2.4707999999998287e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:45:56.101" endtime="20201029 12:45:56.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.109" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201029 12:45:56.108" endtime="20201029 12:45:56.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.112" level="INFO">VALUE: [2.4722000000001326e-05, 2.54169999999998e-05, 2.4764000000000036e-05, 2.438899999999966e-05, 2.5000000000000716e-05, 2.4736000000000896e-05, 2.5402000000000757e-05, 2.4707999999998287e-05, 2.4388000000000187e-05, 2.5070000000002035e-05, 2.5401999999997288e-05, 2.5416000000000327e-05, 2.47230000000008e-05, 2.50970000000017e-05, 2.50970000000017e-05, 2.468100000000209e-05, 2.54169999999998e-05, 2.4750000000000466e-05, 2.437500000000009e-05, 2.470899999999776e-05, 2.5069999999998566e-05, 2.473700000000037e-05, 2.4721999999997857e-05, 2.4722000000001326e-05, 2.4721999999997857e-05, 2.540300000000023e-05, 2.5097999999997705e-05, 2.5068999999999092e-05, 2.5096999999998232e-05, 2.506900000000256e-05, 2.5430000000003367e-05, 2.4735999999997427e-05, 2.5068999999999092e-05, 2.5485999999998177e-05, 2.5415999999996858e-05, 2.4735999999997427e-05, 2.5040999999999952e-05, 2.5082999999998662e-05, 2.4722000000001326e-05, 2.470900000000123e-05, 2.5054999999999522e-05, 2.473700000000037e-05, 2.4722000000001326e-05, 2.54169999999998e-05, 2.5069999999998566e-05, 2.54169999999998e-05, 2.5068999999999092e-05, 2.54169999999998e-05, 2.4736000000000896e-05, 2.5429999999999897e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.110" endtime="20201029 12:45:56.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.106" endtime="20201029 12:45:56.113"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.117" endtime="20201029 12:45:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.115" endtime="20201029 12:45:56.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.114" endtime="20201029 12:45:56.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.759" endtime="20201029 12:45:56.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:55.758" endtime="20201029 12:45:56.137"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.146" endtime="20201029 12:45:56.161"></status>
</kw>
<msg timestamp="20201029 12:45:56.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.144" endtime="20201029 12:45:56.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.163" endtime="20201029 12:45:56.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.165" endtime="20201029 12:45:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.142" endtime="20201029 12:45:56.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.140" endtime="20201029 12:45:56.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.174" endtime="20201029 12:45:56.463"></status>
</kw>
<msg timestamp="20201029 12:45:56.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019460653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.173" endtime="20201029 12:45:56.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019434194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019460653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.467" endtime="20201029 12:45:56.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.476" endtime="20201029 12:45:56.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.170" endtime="20201029 12:45:56.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.168" endtime="20201029 12:45:56.478"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.482" level="INFO">${RESULT} = [{'diff': 2.645900000000298e-05}, {'diff': 2.6110999999998802e-05}, {'diff': 2.6110999999998802e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.645899999999951e-05}, {'diff': 2.5750000000001466e-05...</msg>
<status status="PASS" starttime="20201029 12:45:56.479" endtime="20201029 12:45:56.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:56.486" level="INFO">${ACCURACY} = {'diff': [2.645900000000298e-05, 2.6110999999998802e-05, 2.6110999999998802e-05, 2.5764000000001036e-05, 2.645899999999951e-05, 2.5750000000001466e-05, 2.5791000000000702e-05, 2.5750000000001466e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:56.483" endtime="20201029 12:45:56.487"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.491" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201029 12:45:56.490" endtime="20201029 12:45:56.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.493" level="INFO">VALUE: [2.645900000000298e-05, 2.6110999999998802e-05, 2.6110999999998802e-05, 2.5764000000001036e-05, 2.645899999999951e-05, 2.5750000000001466e-05, 2.5791000000000702e-05, 2.5750000000001466e-05, 2.54169999999998e-05, 2.6096999999999232e-05, 2.645899999999951e-05, 2.645900000000298e-05, 2.5846999999998982e-05, 2.5764000000001036e-05, 2.5736000000001896e-05, 2.644499999999994e-05, 2.5416000000000327e-05, 2.5749999999997997e-05, 2.6458000000000037e-05, 2.6110999999998802e-05, 2.6458000000000037e-05, 2.5416000000000327e-05, 2.5778000000000606e-05, 2.5750000000001466e-05, 2.6110999999998802e-05, 2.611100000000227e-05, 2.644499999999994e-05, 2.5764000000001036e-05, 2.5764000000001036e-05, 2.570899999999876e-05, 2.644499999999994e-05, 2.611100000000227e-05, 2.6110999999998802e-05, 2.5846999999998982e-05, 2.5778000000000606e-05, 2.6458000000000037e-05, 2.543099999999937e-05, 2.5777000000001132e-05, 2.6110999999998802e-05, 2.5749999999997997e-05, 2.611100000000227e-05, 2.54169999999998e-05, 2.611100000000227e-05, 2.6096999999999232e-05, 2.6471999999999607e-05, 2.6110999999998802e-05, 2.5763000000001562e-05, 2.6124999999998372e-05, 2.6110999999998802e-05, 2.6124999999998372e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.492" endtime="20201029 12:45:56.494"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.487" endtime="20201029 12:45:56.495"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.498" endtime="20201029 12:45:56.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.497" endtime="20201029 12:45:56.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.496" endtime="20201029 12:45:56.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.138" endtime="20201029 12:45:56.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.138" endtime="20201029 12:45:56.519"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.527" endtime="20201029 12:45:56.543"></status>
</kw>
<msg timestamp="20201029 12:45:56.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.526" endtime="20201029 12:45:56.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.544" endtime="20201029 12:45:56.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.547" endtime="20201029 12:45:56.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.523" endtime="20201029 12:45:56.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.521" endtime="20201029 12:45:56.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.556" endtime="20201029 12:45:56.843"></status>
</kw>
<msg timestamp="20201029 12:45:56.846" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.554" endtime="20201029 12:45:56.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020228514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020255306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.847" endtime="20201029 12:45:56.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.855" endtime="20201029 12:45:56.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.552" endtime="20201029 12:45:56.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.550" endtime="20201029 12:45:56.858"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:56.862" level="INFO">${RESULT} = [{'diff': 2.6792000000001176e-05}, {'diff': 2.6861999999999026e-05}, {'diff': 2.6820000000000316e-05}, {'diff': 2.7124999999999372e-05}, {'diff': 2.645899999999951e-05}, {'diff': 2.6792000000001176e-0...</msg>
<status status="PASS" starttime="20201029 12:45:56.859" endtime="20201029 12:45:56.862"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:56.866" level="INFO">${ACCURACY} = {'diff': [2.6792000000001176e-05, 2.6861999999999026e-05, 2.6820000000000316e-05, 2.7124999999999372e-05, 2.645899999999951e-05, 2.6792000000001176e-05, 2.6778000000001606e-05, 2.7138999999998942e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:56.863" endtime="20201029 12:45:56.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.870" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201029 12:45:56.869" endtime="20201029 12:45:56.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.873" level="INFO">VALUE: [2.6792000000001176e-05, 2.6861999999999026e-05, 2.6820000000000316e-05, 2.7124999999999372e-05, 2.645899999999951e-05, 2.6792000000001176e-05, 2.6778000000001606e-05, 2.7138999999998942e-05, 2.715300000000198e-05, 2.715299999999851e-05, 2.644499999999994e-05, 2.6443999999996998e-05, 2.6749999999998997e-05, 2.7486000000000177e-05, 2.744500000000094e-05, 2.715300000000198e-05, 2.7180000000001647e-05, 2.715299999999851e-05, 2.6763999999998567e-05, 2.7138999999998942e-05, 2.7499999999999747e-05, 2.6805000000001272e-05, 2.7165999999998608e-05, 2.6778000000001606e-05, 2.6485999999999177e-05, 2.688900000000216e-05, 2.6791999999997707e-05, 2.6805000000001272e-05, 2.716700000000155e-05, 2.6805000000001272e-05, 2.6820000000000316e-05, 2.6749999999998997e-05, 2.716700000000155e-05, 2.7499999999999747e-05, 2.6806000000000746e-05, 2.747300000000008e-05, 2.6804999999997803e-05, 2.6777000000002132e-05, 2.7485999999996708e-05, 2.6806000000000746e-05, 2.6790999999998233e-05, 2.6819000000000842e-05, 2.6778000000001606e-05, 2.7138999999998942e-05, 2.6499999999998747e-05, 2.7138999999998942e-05, 2.6791999999997707e-05, 2.6790999999998233e-05, 2.7138999999998942e-05, 2.6790999999998233e-05]</msg>
<status status="PASS" starttime="20201029 12:45:56.871" endtime="20201029 12:45:56.874"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.867" endtime="20201029 12:45:56.875"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:56.879" endtime="20201029 12:45:56.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.877" endtime="20201029 12:45:56.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.876" endtime="20201029 12:45:56.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.520" endtime="20201029 12:45:56.899"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.519" endtime="20201029 12:45:56.899"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.908" endtime="20201029 12:45:56.923"></status>
</kw>
<msg timestamp="20201029 12:45:56.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.906" endtime="20201029 12:45:56.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:56.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:56.925" endtime="20201029 12:45:56.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.927" endtime="20201029 12:45:56.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.904" endtime="20201029 12:45:56.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.902" endtime="20201029 12:45:56.929"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:56.936" endtime="20201029 12:45:57.223"></status>
</kw>
<msg timestamp="20201029 12:45:57.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:56.934" endtime="20201029 12:45:57.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019642542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019670042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.227" endtime="20201029 12:45:57.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.237" endtime="20201029 12:45:57.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.932" endtime="20201029 12:45:57.240"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.930" endtime="20201029 12:45:57.240"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.244" level="INFO">${RESULT} = [{'diff': 2.7499999999999747e-05}, {'diff': 2.818100000000212e-05}, {'diff': 2.7860999999997083e-05}, {'diff': 2.8193999999998748e-05}, {'diff': 2.7485999999996708e-05}, {'diff': 2.8472000000001607e-0...</msg>
<status status="PASS" starttime="20201029 12:45:57.241" endtime="20201029 12:45:57.244"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:57.249" level="INFO">${ACCURACY} = {'diff': [2.7499999999999747e-05, 2.818100000000212e-05, 2.7860999999997083e-05, 2.8193999999998748e-05, 2.7485999999996708e-05, 2.8472000000001607e-05, 2.8514000000000317e-05, 2.7471999999997138e-05,...</msg>
<status status="PASS" starttime="20201029 12:45:57.245" endtime="20201029 12:45:57.249"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.254" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201029 12:45:57.253" endtime="20201029 12:45:57.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.256" level="INFO">VALUE: [2.7499999999999747e-05, 2.818100000000212e-05, 2.7860999999997083e-05, 2.8193999999998748e-05, 2.7485999999996708e-05, 2.8472000000001607e-05, 2.8514000000000317e-05, 2.7471999999997138e-05, 2.8165999999999608e-05, 2.819500000000169e-05, 2.818099999999865e-05, 2.747300000000008e-05, 2.7833000000001412e-05, 2.7846999999997513e-05, 2.818100000000212e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.819500000000169e-05, 2.816699999999908e-05, 2.818099999999865e-05, 2.8180000000002647e-05, 2.8194000000002217e-05, 2.7820000000001316e-05, 2.816699999999908e-05, 2.7846999999997513e-05, 2.7818999999998373e-05, 2.8179999999999178e-05, 2.818100000000212e-05, 2.8179999999999178e-05, 2.8499999999997278e-05, 2.7833000000001412e-05, 2.7834000000000886e-05, 2.816699999999908e-05, 2.820900000000126e-05, 2.7486000000000177e-05, 2.7861000000000552e-05, 2.819500000000169e-05, 2.819500000000169e-05, 2.8541999999999457e-05, 2.7834000000000886e-05, 2.8179999999999178e-05, 2.7458000000001037e-05, 2.7499999999999747e-05, 2.7832999999997943e-05, 2.8513999999996847e-05, 2.819499999999822e-05, 2.8110999999997333e-05, 2.816700000000255e-05, 2.8111000000000802e-05, 2.8527999999999887e-05]</msg>
<status status="PASS" starttime="20201029 12:45:57.255" endtime="20201029 12:45:57.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.250" endtime="20201029 12:45:57.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.261" endtime="20201029 12:45:57.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.259" endtime="20201029 12:45:57.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.258" endtime="20201029 12:45:57.281"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.900" endtime="20201029 12:45:57.282"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:56.900" endtime="20201029 12:45:57.282"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.291" endtime="20201029 12:45:57.306"></status>
</kw>
<msg timestamp="20201029 12:45:57.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.289" endtime="20201029 12:45:57.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.307" endtime="20201029 12:45:57.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.310" endtime="20201029 12:45:57.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.286" endtime="20201029 12:45:57.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.284" endtime="20201029 12:45:57.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.319" endtime="20201029 12:45:57.606"></status>
</kw>
<msg timestamp="20201029 12:45:57.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.317" endtime="20201029 12:45:57.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019834944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019864153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.610" endtime="20201029 12:45:57.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.619" endtime="20201029 12:45:57.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.315" endtime="20201029 12:45:57.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.313" endtime="20201029 12:45:57.621"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:57.625" level="INFO">${RESULT} = [{'diff': 2.920899999999879e-05}, {'diff': 2.922299999999836e-05}, {'diff': 2.9556000000000027e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.8861000000001552e-05}, {'diff': 2.8833000000002412e-05...</msg>
<status status="PASS" starttime="20201029 12:45:57.622" endtime="20201029 12:45:57.625"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:57.629" level="INFO">${ACCURACY} = {'diff': [2.920899999999879e-05, 2.922299999999836e-05, 2.9556000000000027e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.8833000000002412e-05, 2.8875000000001122e-05, 2.9569999999999597e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:57.626" endtime="20201029 12:45:57.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.634" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201029 12:45:57.633" endtime="20201029 12:45:57.634"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.636" level="INFO">VALUE: [2.920899999999879e-05, 2.922299999999836e-05, 2.9556000000000027e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.8833000000002412e-05, 2.8875000000001122e-05, 2.9569999999999597e-05, 2.8861000000001552e-05, 2.8500000000000747e-05, 2.8514000000000317e-05, 2.9167000000000082e-05, 2.8875000000001122e-05, 2.9221999999998888e-05, 2.8861000000001552e-05, 2.9235999999998458e-05, 2.9596999999999263e-05, 2.9221999999998888e-05, 2.9222000000002357e-05, 2.8861000000001552e-05, 2.8889000000000692e-05, 2.9221999999998888e-05, 2.920899999999879e-05, 2.9249999999998028e-05, 2.8889000000000692e-05, 2.9249999999998028e-05, 2.9221999999998888e-05, 2.8889000000000692e-05, 2.920899999999879e-05, 2.9222000000002357e-05, 2.9249999999998028e-05, 2.9235999999998458e-05, 2.8875000000001122e-05, 2.9249999999998028e-05, 2.9222000000002357e-05, 2.8875000000001122e-05, 2.8861000000001552e-05, 2.8875000000001122e-05, 2.8804999999999803e-05, 2.8582999999998693e-05, 2.9569000000000123e-05, 2.8860999999998083e-05, 2.9207999999999318e-05, 2.9250000000001497e-05, 2.8526999999996944e-05, 2.8875000000001122e-05, 2.9207999999999318e-05, 2.8861000000001552e-05, 2.8874999999997653e-05, 2.8542000000002926e-05]</msg>
<status status="PASS" starttime="20201029 12:45:57.635" endtime="20201029 12:45:57.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.630" endtime="20201029 12:45:57.638"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:57.641" endtime="20201029 12:45:57.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.640" endtime="20201029 12:45:57.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.639" endtime="20201029 12:45:57.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.283" endtime="20201029 12:45:57.662"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.282" endtime="20201029 12:45:57.662"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.672" endtime="20201029 12:45:57.690"></status>
</kw>
<msg timestamp="20201029 12:45:57.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.670" endtime="20201029 12:45:57.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:57.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:57.692" endtime="20201029 12:45:57.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.694" endtime="20201029 12:45:57.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.667" endtime="20201029 12:45:57.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.665" endtime="20201029 12:45:57.697"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:57.703" endtime="20201029 12:45:57.989"></status>
</kw>
<msg timestamp="20201029 12:45:57.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.702" endtime="20201029 12:45:57.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023767528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023797778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:57.993" endtime="20201029 12:45:58.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.002" endtime="20201029 12:45:58.003"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.699" endtime="20201029 12:45:58.004"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.697" endtime="20201029 12:45:58.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.008" level="INFO">${RESULT} = [{'diff': 3.0249999999999028e-05}, {'diff': 2.9903000000001262e-05}, {'diff': 3.0249999999999028e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.0235999999999458e-05}, {'diff': 3.0263999999998598e-0...</msg>
<status status="PASS" starttime="20201029 12:45:58.005" endtime="20201029 12:45:58.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:58.012" level="INFO">${ACCURACY} = {'diff': [3.0249999999999028e-05, 2.9903000000001262e-05, 3.0249999999999028e-05, 3.061099999999983e-05, 3.0235999999999458e-05, 3.0263999999998598e-05, 2.997299999999911e-05, 2.9556000000000027e-05, ...</msg>
<status status="PASS" starttime="20201029 12:45:58.009" endtime="20201029 12:45:58.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.017" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201029 12:45:58.016" endtime="20201029 12:45:58.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.019" level="INFO">VALUE: [3.0249999999999028e-05, 2.9903000000001262e-05, 3.0249999999999028e-05, 3.061099999999983e-05, 3.0235999999999458e-05, 3.0263999999998598e-05, 2.997299999999911e-05, 2.9556000000000027e-05, 3.0264000000002067e-05, 2.9555000000000553e-05, 3.019500000000022e-05, 3.0235999999999458e-05, 2.9569999999999597e-05, 3.0249999999999028e-05, 2.9916000000001358e-05, 2.9903000000001262e-05, 3.0235999999999458e-05, 3.0264000000002067e-05, 3.0249999999999028e-05, 2.9917000000000832e-05, 2.9582999999999693e-05, 2.994499999999997e-05, 3.0263999999998598e-05, 2.9569000000000123e-05, 3.0250000000002497e-05, 2.9931000000000402e-05, 3.059700000000026e-05, 2.9903000000001262e-05, 2.9916999999997362e-05, 3.0235999999999458e-05, 2.9582999999999693e-05, 2.9555000000000553e-05, 3.0250000000002497e-05, 3.0249999999999028e-05, 2.9902000000001788e-05, 2.9596999999999263e-05, 2.9889000000001692e-05, 2.9903000000001262e-05, 3.059700000000026e-05, 3.0249999999999028e-05, 2.9903000000001262e-05, 3.059700000000026e-05, 3.0235999999999458e-05, 2.9569000000000123e-05, 2.9542000000000457e-05, 2.9569000000000123e-05, 2.9917000000000832e-05, 2.990199999999832e-05, 2.9569000000000123e-05, 2.9554999999997084e-05]</msg>
<status status="PASS" starttime="20201029 12:45:58.018" endtime="20201029 12:45:58.025"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.013" endtime="20201029 12:45:58.026"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.029" endtime="20201029 12:45:58.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.028" endtime="20201029 12:45:58.049"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.027" endtime="20201029 12:45:58.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.663" endtime="20201029 12:45:58.050"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:57.663" endtime="20201029 12:45:58.050"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.058" endtime="20201029 12:45:58.074"></status>
</kw>
<msg timestamp="20201029 12:45:58.075" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.057" endtime="20201029 12:45:58.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.077" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.076" endtime="20201029 12:45:58.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.078" endtime="20201029 12:45:58.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.054" endtime="20201029 12:45:58.080"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.052" endtime="20201029 12:45:58.081"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.087" endtime="20201029 12:45:58.373"></status>
</kw>
<msg timestamp="20201029 12:45:58.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.086" endtime="20201029 12:45:58.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.385" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019859167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019889736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.378" endtime="20201029 12:45:58.385"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.386" endtime="20201029 12:45:58.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.083" endtime="20201029 12:45:58.388"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.081" endtime="20201029 12:45:58.389"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.393" level="INFO">${RESULT} = [{'diff': 3.056900000000112e-05}, {'diff': 3.094399999999803e-05}, {'diff': 3.093099999999793e-05}, {'diff': 3.061099999999983e-05}, {'diff': 3.09310000000014e-05}, {'diff': 3.058300000000069e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:58.389" endtime="20201029 12:45:58.393"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:58.398" level="INFO">${ACCURACY} = {'diff': [3.056900000000112e-05, 3.094399999999803e-05, 3.093099999999793e-05, 3.061099999999983e-05, 3.09310000000014e-05, 3.058300000000069e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.12919...</msg>
<status status="PASS" starttime="20201029 12:45:58.394" endtime="20201029 12:45:58.398"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.402" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201029 12:45:58.401" endtime="20201029 12:45:58.403"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.405" level="INFO">VALUE: [3.056900000000112e-05, 3.094399999999803e-05, 3.093099999999793e-05, 3.061099999999983e-05, 3.09310000000014e-05, 3.058300000000069e-05, 3.127799999999917e-05, 3.129199999999874e-05, 3.129199999999874e-05, 3.061099999999983e-05, 3.092999999999846e-05, 3.058300000000069e-05, 3.09440000000015e-05, 3.059700000000026e-05, 3.131900000000187e-05, 3.061099999999983e-05, 3.1276999999999694e-05, 3.127800000000264e-05, 3.12639999999996e-05, 3.166599999999964e-05, 3.059700000000026e-05, 3.1290999999999264e-05, 3.061099999999983e-05, 3.129199999999874e-05, 3.055500000000155e-05, 3.097200000000064e-05, 3.095800000000107e-05, 3.134700000000101e-05, 3.09440000000015e-05, 3.091699999999836e-05, 3.093099999999793e-05, 3.06249999999994e-05, 3.094500000000097e-05, 3.06249999999994e-05, 3.09440000000015e-05, 3.097200000000064e-05, 3.094500000000097e-05, 3.059700000000026e-05, 3.1290999999999264e-05, 3.129100000000273e-05, 3.059700000000026e-05, 3.129100000000273e-05, 3.087499999999965e-05, 3.095899999999707e-05, 3.094500000000097e-05, 3.059700000000026e-05, 3.123600000000046e-05, 3.09449999999975e-05, 3.131999999999788e-05, 3.1276999999999694e-05]</msg>
<status status="PASS" starttime="20201029 12:45:58.403" endtime="20201029 12:45:58.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.399" endtime="20201029 12:45:58.406"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.409" endtime="20201029 12:45:58.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.408" endtime="20201029 12:45:58.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.407" endtime="20201029 12:45:58.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.051" endtime="20201029 12:45:58.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.050" endtime="20201029 12:45:58.430"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.439" endtime="20201029 12:45:58.455"></status>
</kw>
<msg timestamp="20201029 12:45:58.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.437" endtime="20201029 12:45:58.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.457" endtime="20201029 12:45:58.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.459" endtime="20201029 12:45:58.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.435" endtime="20201029 12:45:58.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.433" endtime="20201029 12:45:58.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.468" endtime="20201029 12:45:58.755"></status>
</kw>
<msg timestamp="20201029 12:45:58.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.467" endtime="20201029 12:45:58.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020140083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020174917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.759" endtime="20201029 12:45:58.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.767" endtime="20201029 12:45:58.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.464" endtime="20201029 12:45:58.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.462" endtime="20201029 12:45:58.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:58.774" level="INFO">${RESULT} = [{'diff': 3.483400000000095e-05}, {'diff': 3.49580000000016e-05}, {'diff': 3.509800000000077e-05}, {'diff': 3.463800000000003e-05}, {'diff': 3.476399999999963e-05}, {'diff': 3.519399999999881e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:45:58.770" endtime="20201029 12:45:58.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:58.778" level="INFO">${ACCURACY} = {'diff': [3.483400000000095e-05, 3.49580000000016e-05, 3.509800000000077e-05, 3.463800000000003e-05, 3.476399999999963e-05, 3.519399999999881e-05, 3.548600000000124e-05, 3.4583000000001224e-05, 3.5084...</msg>
<status status="PASS" starttime="20201029 12:45:58.775" endtime="20201029 12:45:58.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.782" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201029 12:45:58.781" endtime="20201029 12:45:58.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.785" level="INFO">VALUE: [3.483400000000095e-05, 3.49580000000016e-05, 3.509800000000077e-05, 3.463800000000003e-05, 3.476399999999963e-05, 3.519399999999881e-05, 3.548600000000124e-05, 3.4583000000001224e-05, 3.50840000000012e-05, 3.5125000000000434e-05, 3.5082999999998254e-05, 3.504199999999902e-05, 3.561200000000084e-05, 3.4583000000001224e-05, 3.52779999999997e-05, 3.5166999999999143e-05, 3.49719999999977e-05, 3.545799999999863e-05, 3.473600000000049e-05, 3.469500000000125e-05, 3.4638999999999504e-05, 3.475000000000006e-05, 3.504199999999902e-05, 3.5361000000001114e-05, 3.4652999999999073e-05, 3.5152999999999573e-05, 3.476399999999963e-05, 3.5375000000000684e-05, 3.498600000000074e-05, 3.4833000000001474e-05, 3.466600000000264e-05, 3.4875000000000184e-05, 3.519400000000228e-05, 3.5290999999999795e-05, 3.4888999999999754e-05, 3.502799999999945e-05, 3.549999999999734e-05, 3.5360999999997644e-05, 3.543100000000243e-05, 3.520800000000185e-05, 3.5583000000002224e-05, 3.49719999999977e-05, 3.4638999999999504e-05, 3.4638999999999504e-05, 3.504199999999902e-05, 3.454199999999852e-05, 3.547300000000114e-05, 3.508399999999773e-05, 3.545900000000157e-05, 3.490300000000279e-05]</msg>
<status status="PASS" starttime="20201029 12:45:58.783" endtime="20201029 12:45:58.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.779" endtime="20201029 12:45:58.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:58.790" endtime="20201029 12:45:58.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.788" endtime="20201029 12:45:58.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.787" endtime="20201029 12:45:58.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.431" endtime="20201029 12:45:58.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.431" endtime="20201029 12:45:58.810"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.819" endtime="20201029 12:45:58.836"></status>
</kw>
<msg timestamp="20201029 12:45:58.837" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.817" endtime="20201029 12:45:58.837"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:58.839" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:58.838" endtime="20201029 12:45:58.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.841" endtime="20201029 12:45:58.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.815" endtime="20201029 12:45:58.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.813" endtime="20201029 12:45:58.843"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:58.850" endtime="20201029 12:45:59.134"></status>
</kw>
<msg timestamp="20201029 12:45:59.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:58.848" endtime="20201029 12:45:59.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020921625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020957306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.138" endtime="20201029 12:45:59.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.147" endtime="20201029 12:45:59.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.845" endtime="20201029 12:45:59.149"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.844" endtime="20201029 12:45:59.149"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.153" level="INFO">${RESULT} = [{'diff': 3.568099999999921e-05}, {'diff': 3.6026999999997505e-05}, {'diff': 3.594399999999956e-05}, {'diff': 3.620799999999938e-05}, {'diff': 3.6374999999998214e-05}, {'diff': 3.623600000000199e-05},...</msg>
<status status="PASS" starttime="20201029 12:45:59.150" endtime="20201029 12:45:59.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:59.158" level="INFO">${ACCURACY} = {'diff': [3.568099999999921e-05, 3.6026999999997505e-05, 3.594399999999956e-05, 3.620799999999938e-05, 3.6374999999998214e-05, 3.623600000000199e-05, 3.570800000000235e-05, 3.591599999999695e-05, 3.58...</msg>
<status status="PASS" starttime="20201029 12:45:59.155" endtime="20201029 12:45:59.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.162" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201029 12:45:59.161" endtime="20201029 12:45:59.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.164" level="INFO">VALUE: [3.568099999999921e-05, 3.6026999999997505e-05, 3.594399999999956e-05, 3.620799999999938e-05, 3.6374999999998214e-05, 3.623600000000199e-05, 3.570800000000235e-05, 3.591599999999695e-05, 3.5847000000002044e-05, 3.6305000000000365e-05, 3.592999999999999e-05, 3.5625000000000934e-05, 3.5597000000001794e-05, 3.5846999999998574e-05, 3.554199999999952e-05, 3.59580000000026e-05, 3.595799999999913e-05, 3.649999999999834e-05, 3.627799999999723e-05, 3.64719999999992e-05, 3.599999999999784e-05, 3.5804999999999865e-05, 3.622299999999842e-05, 3.6124999999997964e-05, 3.5639000000000504e-05, 3.5804999999999865e-05, 3.5541000000000045e-05, 3.64580000000031e-05, 3.572199999999845e-05, 3.616600000000067e-05, 3.5818999999999435e-05, 3.570799999999888e-05, 3.5653000000000074e-05, 3.6305000000000365e-05, 3.5889000000000754e-05, 3.5860999999998144e-05, 3.5832999999999005e-05, 3.593099999999946e-05, 3.59719999999987e-05, 3.5597000000001794e-05, 3.647300000000214e-05, 3.59450000000025e-05, 3.6096999999998824e-05, 3.580599999999934e-05, 3.607000000000263e-05, 3.6167000000000143e-05, 3.606999999999916e-05, 3.64589999999991e-05, 3.582000000000238e-05, 3.5554999999999615e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.163" endtime="20201029 12:45:59.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.158" endtime="20201029 12:45:59.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.170" endtime="20201029 12:45:59.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.169" endtime="20201029 12:45:59.190"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.168" endtime="20201029 12:45:59.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.811" endtime="20201029 12:45:59.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:58.811" endtime="20201029 12:45:59.191"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.200" endtime="20201029 12:45:59.215"></status>
</kw>
<msg timestamp="20201029 12:45:59.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.198" endtime="20201029 12:45:59.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.216" endtime="20201029 12:45:59.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.218" endtime="20201029 12:45:59.220"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.196" endtime="20201029 12:45:59.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.194" endtime="20201029 12:45:59.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.228" endtime="20201029 12:45:59.513"></status>
</kw>
<msg timestamp="20201029 12:45:59.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.226" endtime="20201029 12:45:59.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019344653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019381306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.517" endtime="20201029 12:45:59.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.525" endtime="20201029 12:45:59.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.224" endtime="20201029 12:45:59.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.222" endtime="20201029 12:45:59.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.532" level="INFO">${RESULT} = [{'diff': 3.6653000000001074e-05}, {'diff': 3.668000000000074e-05}, {'diff': 3.694400000000056e-05}, {'diff': 3.6874999999998714e-05}, {'diff': 3.7402999999998354e-05}, {'diff': 3.6917000000000894e-05...</msg>
<status status="PASS" starttime="20201029 12:45:59.529" endtime="20201029 12:45:59.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:59.537" level="INFO">${ACCURACY} = {'diff': [3.6653000000001074e-05, 3.668000000000074e-05, 3.694400000000056e-05, 3.6874999999998714e-05, 3.7402999999998354e-05, 3.6917000000000894e-05, 3.701399999999841e-05, 3.673600000000249e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:45:59.533" endtime="20201029 12:45:59.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.542" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201029 12:45:59.540" endtime="20201029 12:45:59.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.544" level="INFO">VALUE: [3.6653000000001074e-05, 3.668000000000074e-05, 3.694400000000056e-05, 3.6874999999998714e-05, 3.7402999999998354e-05, 3.6917000000000894e-05, 3.701399999999841e-05, 3.673600000000249e-05, 3.752799999999848e-05, 3.6666999999997174e-05, 3.705600000000059e-05, 3.670799999999988e-05, 3.7388999999998784e-05, 3.70979999999993e-05, 3.695800000000013e-05, 3.7430999999997494e-05, 3.7388999999998784e-05, 3.7430999999997494e-05, 3.680600000000034e-05, 3.7138999999998534e-05, 3.654200000000052e-05, 3.670900000000282e-05, 3.6582999999999755e-05, 3.750000000000281e-05, 3.668000000000074e-05, 3.7318999999997465e-05, 3.7055000000001115e-05, 3.6819000000000435e-05, 3.745799999999716e-05, 3.7083000000000255e-05, 3.6860999999999144e-05, 3.6554999999997145e-05, 3.695800000000013e-05, 3.7153000000001574e-05, 3.722199999999995e-05, 3.669400000000031e-05, 3.6667000000000644e-05, 3.7403000000001824e-05, 3.705600000000059e-05, 3.670800000000335e-05, 3.6917000000000894e-05, 3.702799999999798e-05, 3.7124999999998964e-05, 3.7360999999999644e-05, 3.6931000000000463e-05, 3.7068999999997215e-05, 3.675000000000206e-05, 3.707000000000016e-05, 3.749999999999934e-05, 3.7276999999998756e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.543" endtime="20201029 12:45:59.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.538" endtime="20201029 12:45:59.545"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.549" endtime="20201029 12:45:59.568"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.548" endtime="20201029 12:45:59.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.546" endtime="20201029 12:45:59.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.192" endtime="20201029 12:45:59.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.191" endtime="20201029 12:45:59.570"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.578" endtime="20201029 12:45:59.595"></status>
</kw>
<msg timestamp="20201029 12:45:59.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.577" endtime="20201029 12:45:59.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.596" endtime="20201029 12:45:59.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.599" endtime="20201029 12:45:59.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.574" endtime="20201029 12:45:59.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.572" endtime="20201029 12:45:59.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.608" endtime="20201029 12:45:59.894"></status>
</kw>
<msg timestamp="20201029 12:45:59.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.606" endtime="20201029 12:45:59.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020193264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020231583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.898" endtime="20201029 12:45:59.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.907" endtime="20201029 12:45:59.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.604" endtime="20201029 12:45:59.909"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.602" endtime="20201029 12:45:59.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:45:59.913" level="INFO">${RESULT} = [{'diff': 3.8319000000001935e-05}, {'diff': 3.7833000000001005e-05}, {'diff': 3.7917000000001894e-05}, {'diff': 3.8374999999996745e-05}, {'diff': 3.79720000000007e-05}, {'diff': 3.8138999999999534e-05...</msg>
<status status="PASS" starttime="20201029 12:45:59.910" endtime="20201029 12:45:59.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:45:59.917" level="INFO">${ACCURACY} = {'diff': [3.8319000000001935e-05, 3.7833000000001005e-05, 3.7917000000001894e-05, 3.8374999999996745e-05, 3.79720000000007e-05, 3.8138999999999534e-05, 3.820799999999791e-05, 3.823600000000052e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:45:59.914" endtime="20201029 12:45:59.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.922" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201029 12:45:59.921" endtime="20201029 12:45:59.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.924" level="INFO">VALUE: [3.8319000000001935e-05, 3.7833000000001005e-05, 3.7917000000001894e-05, 3.8374999999996745e-05, 3.79720000000007e-05, 3.8138999999999534e-05, 3.820799999999791e-05, 3.823600000000052e-05, 3.794399999999809e-05, 3.7874999999999714e-05, 3.801399999999941e-05, 3.804200000000202e-05, 3.806999999999769e-05, 3.7638999999999034e-05, 3.851399999999991e-05, 3.822300000000042e-05, 3.8208999999997384e-05, 3.799999999999984e-05, 3.811199999999987e-05, 3.82919999999988e-05, 3.784800000000005e-05, 3.842999999999902e-05, 3.7804999999998395e-05, 3.8388999999999784e-05, 3.79720000000007e-05, 3.7832999999997535e-05, 3.768000000000174e-05, 3.8332999999998035e-05, 3.783400000000048e-05, 3.769399999999784e-05, 3.805599999999812e-05, 3.756999999999719e-05, 3.7638999999999034e-05, 3.777799999999873e-05, 3.779200000000177e-05, 3.7846999999997105e-05, 3.8209000000000853e-05, 3.7888999999999284e-05, 3.827799999999923e-05, 3.77919999999983e-05, 3.8194999999997814e-05, 3.757000000000066e-05, 3.801399999999941e-05, 3.8026999999999506e-05, 3.825000000000009e-05, 3.815199999999963e-05, 3.7861000000000145e-05, 3.8375000000000214e-05, 3.845800000000163e-05, 3.7833000000001005e-05]</msg>
<status status="PASS" starttime="20201029 12:45:59.923" endtime="20201029 12:45:59.925"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.918" endtime="20201029 12:45:59.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:45:59.929" endtime="20201029 12:45:59.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.928" endtime="20201029 12:45:59.949"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.927" endtime="20201029 12:45:59.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.571" endtime="20201029 12:45:59.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.570" endtime="20201029 12:45:59.950"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.958" endtime="20201029 12:45:59.976"></status>
</kw>
<msg timestamp="20201029 12:45:59.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.957" endtime="20201029 12:45:59.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:45:59.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:45:59.978" endtime="20201029 12:45:59.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.980" endtime="20201029 12:45:59.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.954" endtime="20201029 12:45:59.982"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.952" endtime="20201029 12:45:59.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:45:59.989" endtime="20201029 12:46:00.275"></status>
</kw>
<msg timestamp="20201029 12:46:00.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021182139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:45:59.987" endtime="20201029 12:46:00.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021182139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021220708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.279" endtime="20201029 12:46:00.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.287" endtime="20201029 12:46:00.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.985" endtime="20201029 12:46:00.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.983" endtime="20201029 12:46:00.290"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.294" level="INFO">${RESULT} = [{'diff': 3.8569000000002185e-05}, {'diff': 3.9263000000001186e-05}, {'diff': 3.951400000000091e-05}, {'diff': 3.920799999999891e-05}, {'diff': 3.900000000000084e-05}, {'diff': 3.8625000000000465e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:00.290" endtime="20201029 12:46:00.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:00.298" level="INFO">${ACCURACY} = {'diff': [3.8569000000002185e-05, 3.9263000000001186e-05, 3.951400000000091e-05, 3.920799999999891e-05, 3.900000000000084e-05, 3.8625000000000465e-05, 3.8639000000000034e-05, 3.9153000000000104e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:46:00.295" endtime="20201029 12:46:00.298"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.302" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201029 12:46:00.301" endtime="20201029 12:46:00.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.305" level="INFO">VALUE: [3.8569000000002185e-05, 3.9263000000001186e-05, 3.951400000000091e-05, 3.920799999999891e-05, 3.900000000000084e-05, 3.8625000000000465e-05, 3.8639000000000034e-05, 3.9153000000000104e-05, 3.8931000000002464e-05, 3.877799999999973e-05, 3.8819000000002435e-05, 3.8875000000000715e-05, 3.9416999999999924e-05, 3.9416999999999924e-05, 3.923599999999805e-05, 3.9083000000002255e-05, 3.857000000000166e-05, 3.9389000000000784e-05, 3.8958999999998134e-05, 3.8666999999999174e-05, 3.9374999999997745e-05, 3.8625000000000465e-05, 3.8568999999998715e-05, 3.8554999999999146e-05, 3.8804999999999396e-05, 3.8639000000000034e-05, 3.8847000000001575e-05, 3.900000000000084e-05, 3.908400000000173e-05, 3.880599999999887e-05, 3.8861000000001145e-05, 3.8639000000000034e-05, 3.9124999999997495e-05, 3.945799999999916e-05, 3.923599999999805e-05, 3.9180999999999244e-05, 3.9082999999998785e-05, 3.908399999999826e-05, 3.8875000000000715e-05, 3.938800000000131e-05, 3.858399999999776e-05, 3.8875000000000715e-05, 3.8625000000000465e-05, 3.9304999999999896e-05, 3.9110999999997925e-05, 3.8875000000000715e-05, 3.923599999999805e-05, 3.8583000000001755e-05, 3.92919999999998e-05, 3.922200000000195e-05]</msg>
<status status="PASS" starttime="20201029 12:46:00.303" endtime="20201029 12:46:00.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.299" endtime="20201029 12:46:00.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.310" endtime="20201029 12:46:00.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.309" endtime="20201029 12:46:00.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.308" endtime="20201029 12:46:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.951" endtime="20201029 12:46:00.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:59.950" endtime="20201029 12:46:00.331"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.340" endtime="20201029 12:46:00.357"></status>
</kw>
<msg timestamp="20201029 12:46:00.357" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.338" endtime="20201029 12:46:00.357"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.360" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.358" endtime="20201029 12:46:00.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.361" endtime="20201029 12:46:00.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.336" endtime="20201029 12:46:00.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.334" endtime="20201029 12:46:00.363"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.370" endtime="20201029 12:46:00.655"></status>
</kw>
<msg timestamp="20201029 12:46:00.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.368" endtime="20201029 12:46:00.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020297931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020337917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.659" endtime="20201029 12:46:00.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.668" endtime="20201029 12:46:00.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.366" endtime="20201029 12:46:00.670"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.364" endtime="20201029 12:46:00.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:00.674" level="INFO">${RESULT} = [{'diff': 3.99859999999988e-05}, {'diff': 4.047199999999973e-05}, {'diff': 4.0458999999999634e-05}, {'diff': 4.0389000000001785e-05}, {'diff': 4.0167000000000674e-05}, {'diff': 4.034799999999908e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:00.671" endtime="20201029 12:46:00.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:00.679" level="INFO">${ACCURACY} = {'diff': [3.99859999999988e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.0389000000001785e-05, 4.0167000000000674e-05, 4.034799999999908e-05, 3.9667000000000174e-05, 3.9818999999999966e-05, 3....</msg>
<status status="PASS" starttime="20201029 12:46:00.675" endtime="20201029 12:46:00.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.684" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201029 12:46:00.683" endtime="20201029 12:46:00.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.686" level="INFO">VALUE: [3.99859999999988e-05, 4.047199999999973e-05, 4.0458999999999634e-05, 4.0389000000001785e-05, 4.0167000000000674e-05, 4.034799999999908e-05, 3.9667000000000174e-05, 3.9818999999999966e-05, 3.973600000000202e-05, 4.019400000000034e-05, 3.96660000000007e-05, 3.9555000000000146e-05, 3.9540999999997106e-05, 4.040200000000188e-05, 4.040199999999841e-05, 4.023600000000252e-05, 4.0055000000000646e-05, 3.9624999999997995e-05, 4.020799999999991e-05, 3.958399999999876e-05, 4.03059999999969e-05, 3.9569000000003185e-05, 4.023599999999905e-05, 3.9944999999999564e-05, 3.980599999999987e-05, 3.981999999999944e-05, 3.954200000000005e-05, 3.9972999999998704e-05, 3.9723000000001923e-05, 4.0374999999998745e-05, 4.009799999999883e-05, 4.0082999999999785e-05, 3.96660000000007e-05, 3.99859999999988e-05, 4.050000000000234e-05, 3.994400000000009e-05, 4.045800000000016e-05, 4.0153000000001104e-05, 4.0346999999999605e-05, 3.9846999999999105e-05, 4.045800000000016e-05, 4.0431000000000494e-05, 4.02920000000008e-05, 3.99859999999988e-05, 4.0139000000001535e-05, 4.006999999999969e-05, 3.997199999999923e-05, 3.9889000000001285e-05, 4.02920000000008e-05, 4.034799999999908e-05]</msg>
<status status="PASS" starttime="20201029 12:46:00.685" endtime="20201029 12:46:00.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.680" endtime="20201029 12:46:00.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:00.691" endtime="20201029 12:46:00.710"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.689" endtime="20201029 12:46:00.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.688" endtime="20201029 12:46:00.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.332" endtime="20201029 12:46:00.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.332" endtime="20201029 12:46:00.712"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.721" endtime="20201029 12:46:00.737"></status>
</kw>
<msg timestamp="20201029 12:46:00.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.719" endtime="20201029 12:46:00.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:00.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:00.739" endtime="20201029 12:46:00.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.741" endtime="20201029 12:46:00.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.717" endtime="20201029 12:46:00.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.715" endtime="20201029 12:46:00.744"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:00.750" endtime="20201029 12:46:01.037"></status>
</kw>
<msg timestamp="20201029 12:46:01.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:00.749" endtime="20201029 12:46:01.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.049" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019858569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019900111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.042" endtime="20201029 12:46:01.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.051" endtime="20201029 12:46:01.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.746" endtime="20201029 12:46:01.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.745" endtime="20201029 12:46:01.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.060" level="INFO">${RESULT} = [{'diff': 4.154200000000205e-05}, {'diff': 4.08059999999974e-05}, {'diff': 4.101399999999894e-05}, {'diff': 4.107000000000069e-05}, {'diff': 4.122200000000048e-05}, {'diff': 4.0610999999999425e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:01.055" endtime="20201029 12:46:01.060"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:01.065" level="INFO">${ACCURACY} = {'diff': [4.154200000000205e-05, 4.08059999999974e-05, 4.101399999999894e-05, 4.107000000000069e-05, 4.122200000000048e-05, 4.0610999999999425e-05, 4.097200000000023e-05, 4.124999999999962e-05, 4.1459...</msg>
<status status="PASS" starttime="20201029 12:46:01.061" endtime="20201029 12:46:01.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.071" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201029 12:46:01.070" endtime="20201029 12:46:01.072"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.074" level="INFO">VALUE: [4.154200000000205e-05, 4.08059999999974e-05, 4.101399999999894e-05, 4.107000000000069e-05, 4.122200000000048e-05, 4.0610999999999425e-05, 4.097200000000023e-05, 4.124999999999962e-05, 4.1459000000000634e-05, 4.1209000000000384e-05, 4.1459000000000634e-05, 4.149999999999987e-05, 4.052800000000148e-05, 4.1512999999999967e-05, 4.104200000000155e-05, 4.1068999999997746e-05, 4.0583000000000286e-05, 4.0791000000001826e-05, 4.115199999999916e-05, 4.1305000000001896e-05, 4.1374999999999745e-05, 4.127800000000223e-05, 4.0555000000001146e-05, 4.0554999999997676e-05, 4.123600000000005e-05, 4.073599999999955e-05, 4.1096999999996886e-05, 4.1055000000001646e-05, 4.055600000000062e-05, 4.076400000000216e-05, 4.105599999999765e-05, 4.13059999999979e-05, 4.0708999999999884e-05, 4.1222999999999954e-05, 4.069399999999737e-05, 4.095800000000066e-05, 4.1013000000002936e-05, 4.1540999999999106e-05, 4.0583000000000286e-05, 4.0819000000000966e-05, 4.1152999999998635e-05, 4.09859999999998e-05, 4.1152999999998635e-05, 4.0695000000000314e-05, 4.0610999999999425e-05, 4.080600000000087e-05, 4.099999999999937e-05, 4.080600000000087e-05, 4.055600000000062e-05, 4.1167000000001674e-05]</msg>
<status status="PASS" starttime="20201029 12:46:01.072" endtime="20201029 12:46:01.076"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.066" endtime="20201029 12:46:01.077"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.083" endtime="20201029 12:46:01.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.080" endtime="20201029 12:46:01.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.078" endtime="20201029 12:46:01.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.713" endtime="20201029 12:46:01.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:00.712" endtime="20201029 12:46:01.104"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.116" endtime="20201029 12:46:01.135"></status>
</kw>
<msg timestamp="20201029 12:46:01.135" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.114" endtime="20201029 12:46:01.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.136" endtime="20201029 12:46:01.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.139" endtime="20201029 12:46:01.140"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.110" endtime="20201029 12:46:01.141"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.108" endtime="20201029 12:46:01.141"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.148" endtime="20201029 12:46:01.433"></status>
</kw>
<msg timestamp="20201029 12:46:01.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025806444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025848903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.146" endtime="20201029 12:46:01.436"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025806444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025848903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.437" endtime="20201029 12:46:01.445"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.446" endtime="20201029 12:46:01.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.144" endtime="20201029 12:46:01.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.142" endtime="20201029 12:46:01.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.452" level="INFO">${RESULT} = [{'diff': 4.2458999999998165e-05}, {'diff': 4.173600000000055e-05}, {'diff': 4.1709000000000884e-05}, {'diff': 4.1973000000000704e-05}, {'diff': 4.2473000000001204e-05}, {'diff': 4.2417000000002925e-0...</msg>
<status status="PASS" starttime="20201029 12:46:01.449" endtime="20201029 12:46:01.453"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:01.456" level="INFO">${ACCURACY} = {'diff': [4.2458999999998165e-05, 4.173600000000055e-05, 4.1709000000000884e-05, 4.1973000000000704e-05, 4.2473000000001204e-05, 4.2417000000002925e-05, 4.2055000000002646e-05, 4.223600000000105e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:01.453" endtime="20201029 12:46:01.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.461" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201029 12:46:01.460" endtime="20201029 12:46:01.461"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.463" level="INFO">VALUE: [4.2458999999998165e-05, 4.173600000000055e-05, 4.1709000000000884e-05, 4.1973000000000704e-05, 4.2473000000001204e-05, 4.2417000000002925e-05, 4.2055000000002646e-05, 4.223600000000105e-05, 4.175000000000012e-05, 4.1861000000000675e-05, 4.248599999999783e-05, 4.24999999999974e-05, 4.2040999999999606e-05, 4.170800000000141e-05, 4.247199999999826e-05, 4.2361000000001175e-05, 4.1930999999998525e-05, 4.251399999999697e-05, 4.16119999999999e-05, 4.204200000000255e-05, 4.2180999999998775e-05, 4.250000000000087e-05, 4.1861000000000675e-05, 4.2167000000002675e-05, 4.2139000000000065e-05, 4.2223000000000954e-05, 4.251300000000097e-05, 4.1569000000001716e-05, 4.1666999999998705e-05, 4.2125000000000495e-05, 4.2097000000001356e-05, 4.227799999999976e-05, 4.1568999999998246e-05, 4.220799999999844e-05, 4.1847000000001106e-05, 4.2318999999998996e-05, 4.175000000000012e-05, 4.2402999999999885e-05, 4.17920000000023e-05, 4.170800000000141e-05, 4.172200000000098e-05, 4.1652999999999135e-05, 4.1694999999997845e-05, 4.191599999999948e-05, 4.17920000000023e-05, 4.2124999999997026e-05, 4.1709000000000884e-05, 4.2472999999997735e-05, 4.1818999999998496e-05, 4.16660000000027e-05]</msg>
<status status="PASS" starttime="20201029 12:46:01.462" endtime="20201029 12:46:01.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.457" endtime="20201029 12:46:01.465"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.469" endtime="20201029 12:46:01.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.467" endtime="20201029 12:46:01.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.466" endtime="20201029 12:46:01.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.106" endtime="20201029 12:46:01.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.105" endtime="20201029 12:46:01.490"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.498" endtime="20201029 12:46:01.515"></status>
</kw>
<msg timestamp="20201029 12:46:01.516" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.497" endtime="20201029 12:46:01.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.518" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.517" endtime="20201029 12:46:01.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.519" endtime="20201029 12:46:01.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.494" endtime="20201029 12:46:01.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.492" endtime="20201029 12:46:01.522"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.528" endtime="20201029 12:46:01.814"></status>
</kw>
<msg timestamp="20201029 12:46:01.817" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.527" endtime="20201029 12:46:01.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.825" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020201667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020244222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.818" endtime="20201029 12:46:01.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.826" endtime="20201029 12:46:01.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.524" endtime="20201029 12:46:01.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.522" endtime="20201029 12:46:01.829"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:01.833" level="INFO">${RESULT} = [{'diff': 4.2554999999999676e-05}, {'diff': 4.2916999999999955e-05}, {'diff': 4.3082999999999316e-05}, {'diff': 4.320800000000291e-05}, {'diff': 4.319399999999987e-05}, {'diff': 4.2818999999999496e-05...</msg>
<status status="PASS" starttime="20201029 12:46:01.829" endtime="20201029 12:46:01.833"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:01.838" level="INFO">${ACCURACY} = {'diff': [4.2554999999999676e-05, 4.2916999999999955e-05, 4.3082999999999316e-05, 4.320800000000291e-05, 4.319399999999987e-05, 4.2818999999999496e-05, 4.304200000000008e-05, 4.322199999999901e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:01.834" endtime="20201029 12:46:01.838"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.842" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201029 12:46:01.841" endtime="20201029 12:46:01.843"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.845" level="INFO">VALUE: [4.2554999999999676e-05, 4.2916999999999955e-05, 4.3082999999999316e-05, 4.320800000000291e-05, 4.319399999999987e-05, 4.2818999999999496e-05, 4.304200000000008e-05, 4.322199999999901e-05, 4.2889000000000815e-05, 4.256999999999872e-05, 4.2875000000001245e-05, 4.351399999999797e-05, 4.3082999999999316e-05, 4.2861000000001676e-05, 4.305599999999965e-05, 4.345799999999969e-05, 4.266600000000023e-05, 4.302800000000051e-05, 4.295799999999919e-05, 4.3332999999999566e-05, 4.3096999999998886e-05, 4.323600000000205e-05, 4.316600000000073e-05, 4.343000000000055e-05, 4.2973000000001704e-05, 4.2653000000000135e-05, 4.279199999999983e-05, 4.329200000000033e-05, 4.3431000000000025e-05, 4.3347000000002606e-05, 4.2875000000001245e-05, 4.298599999999833e-05, 4.282000000000244e-05, 4.254199999999958e-05, 4.3388999999997846e-05, 4.3125000000001495e-05, 4.2555000000003146e-05, 4.320800000000291e-05, 4.275000000000112e-05, 4.269399999999937e-05, 4.3318999999999996e-05, 4.315199999999769e-05, 4.3388999999997846e-05, 4.2903000000000385e-05, 4.3318999999999996e-05, 4.323600000000205e-05, 4.33059999999999e-05, 4.3431000000000025e-05, 4.323600000000205e-05, 4.2653000000000135e-05]</msg>
<status status="PASS" starttime="20201029 12:46:01.843" endtime="20201029 12:46:01.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.839" endtime="20201029 12:46:01.846"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:01.850" endtime="20201029 12:46:01.869"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.848" endtime="20201029 12:46:01.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.847" endtime="20201029 12:46:01.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.491" endtime="20201029 12:46:01.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.490" endtime="20201029 12:46:01.870"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.879" endtime="20201029 12:46:01.896"></status>
</kw>
<msg timestamp="20201029 12:46:01.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.877" endtime="20201029 12:46:01.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:01.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:01.898" endtime="20201029 12:46:01.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.900" endtime="20201029 12:46:01.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.875" endtime="20201029 12:46:01.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.873" endtime="20201029 12:46:01.903"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:01.909" endtime="20201029 12:46:02.196"></status>
</kw>
<msg timestamp="20201029 12:46:02.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:01.908" endtime="20201029 12:46:02.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020046569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020090306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.200" endtime="20201029 12:46:02.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.208" endtime="20201029 12:46:02.210"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.905" endtime="20201029 12:46:02.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.903" endtime="20201029 12:46:02.211"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.215" level="INFO">${RESULT} = [{'diff': 4.3736999999998555e-05}, {'diff': 4.3638999999998096e-05}, {'diff': 4.3819000000000496e-05}, {'diff': 4.373599999999908e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.395800000000019e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:02.212" endtime="20201029 12:46:02.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:02.219" level="INFO">${ACCURACY} = {'diff': [4.3736999999998555e-05, 4.3638999999998096e-05, 4.3819000000000496e-05, 4.373599999999908e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3638999999998096e-05, 4.39999999999989e-05, 4.4...</msg>
<status status="PASS" starttime="20201029 12:46:02.216" endtime="20201029 12:46:02.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.224" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201029 12:46:02.223" endtime="20201029 12:46:02.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.226" level="INFO">VALUE: [4.3736999999998555e-05, 4.3638999999998096e-05, 4.3819000000000496e-05, 4.373599999999908e-05, 4.397199999999976e-05, 4.395800000000019e-05, 4.3638999999998096e-05, 4.39999999999989e-05, 4.4166999999997736e-05, 4.4096999999999886e-05, 4.445799999999722e-05, 4.3681000000000275e-05, 4.3624999999998526e-05, 4.379200000000083e-05, 4.355600000000015e-05, 4.4194999999996876e-05, 4.432000000000047e-05, 4.4153000000001635e-05, 4.365199999999819e-05, 4.4125000000002496e-05, 4.3833000000000066e-05, 4.395800000000019e-05, 4.3667000000000705e-05, 4.405499999999771e-05, 4.370799999999994e-05, 4.4361000000003176e-05, 4.3819000000000496e-05, 4.36800000000008e-05, 4.441599999999851e-05, 4.420799999999697e-05, 4.377800000000126e-05, 4.4166999999997736e-05, 4.425000000000262e-05, 4.427799999999829e-05, 4.4167000000001205e-05, 4.4389000000002315e-05, 4.433400000000004e-05, 4.3903000000001385e-05, 4.448599999999983e-05, 4.3874999999998776e-05, 4.402800000000151e-05, 4.427699999999882e-05, 4.3874999999998776e-05, 4.420800000000044e-05, 4.3555000000000677e-05, 4.4096999999999886e-05, 4.352699999999807e-05, 4.417999999999783e-05, 4.4152999999998166e-05, 4.445800000000069e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.225" endtime="20201029 12:46:02.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.220" endtime="20201029 12:46:02.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.231" endtime="20201029 12:46:02.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.230" endtime="20201029 12:46:02.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.228" endtime="20201029 12:46:02.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.871" endtime="20201029 12:46:02.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:01.871" endtime="20201029 12:46:02.252"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.260" endtime="20201029 12:46:02.278"></status>
</kw>
<msg timestamp="20201029 12:46:02.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.259" endtime="20201029 12:46:02.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.279" endtime="20201029 12:46:02.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.282" endtime="20201029 12:46:02.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.256" endtime="20201029 12:46:02.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.254" endtime="20201029 12:46:02.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.291" endtime="20201029 12:46:02.577"></status>
</kw>
<msg timestamp="20201029 12:46:02.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.289" endtime="20201029 12:46:02.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021074931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.581" endtime="20201029 12:46:02.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.589" endtime="20201029 12:46:02.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.287" endtime="20201029 12:46:02.591"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.285" endtime="20201029 12:46:02.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.596" level="INFO">${RESULT} = [{'diff': 4.4610999999999956e-05}, {'diff': 4.51800000000023e-05}, {'diff': 4.525000000000015e-05}, {'diff': 4.554099999999964e-05}, {'diff': 4.5487000000000305e-05}, {'diff': 4.4569000000001247e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:02.593" endtime="20201029 12:46:02.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:02.600" level="INFO">${ACCURACY} = {'diff': [4.4610999999999956e-05, 4.51800000000023e-05, 4.525000000000015e-05, 4.554099999999964e-05, 4.5487000000000305e-05, 4.4569000000001247e-05, 4.502699999999957e-05, 4.476300000000322e-05, 4.47...</msg>
<status status="PASS" starttime="20201029 12:46:02.597" endtime="20201029 12:46:02.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.604" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201029 12:46:02.603" endtime="20201029 12:46:02.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.607" level="INFO">VALUE: [4.4610999999999956e-05, 4.51800000000023e-05, 4.525000000000015e-05, 4.554099999999964e-05, 4.5487000000000305e-05, 4.4569000000001247e-05, 4.502699999999957e-05, 4.476300000000322e-05, 4.479099999999889e-05, 4.5111000000000456e-05, 4.5445000000001595e-05, 4.509699999999742e-05, 4.4652999999998666e-05, 4.5138999999999596e-05, 4.544399999999865e-05, 4.4902999999998916e-05, 4.551399999999997e-05, 4.4945000000001095e-05, 4.5319999999998e-05, 4.473600000000008e-05, 4.4666999999998236e-05, 4.4583000000000816e-05, 4.504199999999861e-05, 4.4666999999998236e-05, 4.545800000000169e-05, 4.473600000000008e-05, 4.472200000000051e-05, 4.495799999999772e-05, 4.491599999999901e-05, 4.530499999999896e-05, 4.497200000000076e-05, 4.526399999999972e-05, 4.472200000000051e-05, 4.554199999999911e-05, 4.48199999999975e-05, 4.473600000000008e-05, 4.472200000000051e-05, 4.5125000000000026e-05, 4.4888999999999346e-05, 4.5361000000000706e-05, 4.5209000000000915e-05, 4.548600000000083e-05, 4.476399999999922e-05, 4.463799999999962e-05, 4.456999999999725e-05, 4.511099999999699e-05, 4.5138999999999596e-05, 4.515199999999969e-05, 4.55000000000004e-05, 4.5444999999998126e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.605" endtime="20201029 12:46:02.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.601" endtime="20201029 12:46:02.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.613" endtime="20201029 12:46:02.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.611" endtime="20201029 12:46:02.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.610" endtime="20201029 12:46:02.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.253" endtime="20201029 12:46:02.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.252" endtime="20201029 12:46:02.633"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.642" endtime="20201029 12:46:02.659"></status>
</kw>
<msg timestamp="20201029 12:46:02.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.640" endtime="20201029 12:46:02.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:02.660" endtime="20201029 12:46:02.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.663" endtime="20201029 12:46:02.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.638" endtime="20201029 12:46:02.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.636" endtime="20201029 12:46:02.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.672" endtime="20201029 12:46:02.958"></status>
</kw>
<msg timestamp="20201029 12:46:02.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.670" endtime="20201029 12:46:02.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:02.962" endtime="20201029 12:46:02.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:02.970" endtime="20201029 12:46:02.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.668" endtime="20201029 12:46:02.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.666" endtime="20201029 12:46:02.973"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:02.977" level="INFO">${RESULT} = [{'diff': 4.623599999999811e-05}, {'diff': 4.620800000000244e-05}, {'diff': 4.654200000000011e-05}, {'diff': 4.604199999999961e-05}, {'diff': 4.655599999999968e-05}, {'diff': 4.5889000000000346e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:02.973" endtime="20201029 12:46:02.977"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:02.982" level="INFO">${ACCURACY} = {'diff': [4.623599999999811e-05, 4.620800000000244e-05, 4.654200000000011e-05, 4.604199999999961e-05, 4.655599999999968e-05, 4.5889000000000346e-05, 4.6223000000001485e-05, 4.60000000000009e-05, 4.583...</msg>
<status status="PASS" starttime="20201029 12:46:02.978" endtime="20201029 12:46:02.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.986" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201029 12:46:02.985" endtime="20201029 12:46:02.986"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:02.988" level="INFO">VALUE: [4.623599999999811e-05, 4.620800000000244e-05, 4.654200000000011e-05, 4.604199999999961e-05, 4.655599999999968e-05, 4.5889000000000346e-05, 4.6223000000001485e-05, 4.60000000000009e-05, 4.5833000000002067e-05, 4.5708999999997946e-05, 4.626299999999778e-05, 4.590200000000044e-05, 4.645799999999922e-05, 4.56939999999989e-05, 4.595800000000219e-05, 4.61939999999994e-05, 4.567999999999933e-05, 4.595799999999872e-05, 4.5597000000001386e-05, 4.651400000000097e-05, 4.6166999999999736e-05, 4.597200000000176e-05, 4.6375000000001276e-05, 4.5709000000001415e-05, 4.612499999999756e-05, 4.556999999999825e-05, 4.604199999999961e-05, 4.5973000000001235e-05, 4.5709000000001415e-05, 4.6166999999999736e-05, 4.644399999999965e-05, 4.61939999999994e-05, 4.599999999999743e-05, 4.6153000000000166e-05, 4.574999999999718e-05, 4.645799999999922e-05, 4.6125000000001026e-05, 4.579199999999936e-05, 4.5666999999999236e-05, 4.631899999999953e-05, 4.591600000000001e-05, 4.5694999999998376e-05, 4.629199999999986e-05, 4.615200000000069e-05, 4.624999999999768e-05, 4.611200000000093e-05, 4.6180999999999306e-05, 4.608400000000179e-05, 4.577700000000032e-05, 4.617999999999983e-05]</msg>
<status status="PASS" starttime="20201029 12:46:02.987" endtime="20201029 12:46:02.989"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.982" endtime="20201029 12:46:02.990"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:02.993" endtime="20201029 12:46:03.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.992" endtime="20201029 12:46:03.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.991" endtime="20201029 12:46:03.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.634" endtime="20201029 12:46:03.014"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:02.634" endtime="20201029 12:46:03.014"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.023" endtime="20201029 12:46:03.040"></status>
</kw>
<msg timestamp="20201029 12:46:03.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.021" endtime="20201029 12:46:03.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.041" endtime="20201029 12:46:03.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.044" endtime="20201029 12:46:03.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.019" endtime="20201029 12:46:03.046"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.017" endtime="20201029 12:46:03.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.053" endtime="20201029 12:46:03.342"></status>
</kw>
<msg timestamp="20201029 12:46:03.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.052" endtime="20201029 12:46:03.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020508667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020555861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.346" endtime="20201029 12:46:03.354"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.355" endtime="20201029 12:46:03.356"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.049" endtime="20201029 12:46:03.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.047" endtime="20201029 12:46:03.357"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.361" level="INFO">${RESULT} = [{'diff': 4.71940000000004e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.730500000000096e-05}, {'diff': 4.741599999999804e-05}, {'diff': 4.723599999999911e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:03.358" endtime="20201029 12:46:03.361"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:03.365" level="INFO">${ACCURACY} = {'diff': [4.71940000000004e-05, 4.7153000000001166e-05, 4.734699999999967e-05, 4.730500000000096e-05, 4.741599999999804e-05, 4.723599999999911e-05, 4.68329999999996e-05, 4.7431000000000556e-05, 4.6694...</msg>
<status status="PASS" starttime="20201029 12:46:03.362" endtime="20201029 12:46:03.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.370" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201029 12:46:03.369" endtime="20201029 12:46:03.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.373" level="INFO">VALUE: [4.71940000000004e-05, 4.7153000000001166e-05, 4.734699999999967e-05, 4.730500000000096e-05, 4.741599999999804e-05, 4.723599999999911e-05, 4.68329999999996e-05, 4.7431000000000556e-05, 4.6694999999999376e-05, 4.748599999999936e-05, 4.697200000000276e-05, 4.6861000000002206e-05, 4.704200000000061e-05, 4.754200000000111e-05, 4.708399999999932e-05, 4.68199999999995e-05, 4.701400000000147e-05, 4.699999999999843e-05, 4.730600000000043e-05, 4.759699999999992e-05, 4.729199999999739e-05, 4.73330000000001e-05, 4.672199999999904e-05, 4.734699999999967e-05, 4.730500000000096e-05, 4.740299999999795e-05, 4.705500000000071e-05, 4.6639000000001096e-05, 4.720799999999997e-05, 4.73330000000001e-05, 4.70000000000019e-05, 4.6694999999999376e-05, 4.663899999999763e-05, 4.677800000000079e-05, 4.68199999999995e-05, 4.723599999999911e-05, 4.749999999999893e-05, 4.6986999999998336e-05, 4.672199999999904e-05, 4.724999999999868e-05, 4.694400000000015e-05, 4.698599999999886e-05, 4.718000000000083e-05, 4.663899999999763e-05, 4.747199999999979e-05, 4.726400000000172e-05, 4.7375000000002276e-05, 4.65000000000014e-05, 4.697199999999929e-05, 4.73330000000001e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.371" endtime="20201029 12:46:03.374"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.366" endtime="20201029 12:46:03.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.378" endtime="20201029 12:46:03.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.377" endtime="20201029 12:46:03.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.375" endtime="20201029 12:46:03.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.015" endtime="20201029 12:46:03.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.015" endtime="20201029 12:46:03.399"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.407" endtime="20201029 12:46:03.425"></status>
</kw>
<msg timestamp="20201029 12:46:03.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.406" endtime="20201029 12:46:03.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.426" endtime="20201029 12:46:03.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.429" endtime="20201029 12:46:03.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.403" endtime="20201029 12:46:03.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.401" endtime="20201029 12:46:03.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.438" endtime="20201029 12:46:03.724"></status>
</kw>
<msg timestamp="20201029 12:46:03.727" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.436" endtime="20201029 12:46:03.727"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021071694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021119819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.728" endtime="20201029 12:46:03.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.736" endtime="20201029 12:46:03.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.434" endtime="20201029 12:46:03.738"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.432" endtime="20201029 12:46:03.739"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:03.743" level="INFO">${RESULT} = [{'diff': 4.8125000000003026e-05}, {'diff': 4.798599999999986e-05}, {'diff': 4.844399999999818e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.820800000000097e-05}, {'diff': 4.772200000000004e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:03.740" endtime="20201029 12:46:03.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:03.747" level="INFO">${ACCURACY} = {'diff': [4.8125000000003026e-05, 4.798599999999986e-05, 4.844399999999818e-05, 4.852799999999907e-05, 4.820800000000097e-05, 4.772200000000004e-05, 4.820800000000097e-05, 4.76940000000009e-05, 4.7847...</msg>
<status status="PASS" starttime="20201029 12:46:03.744" endtime="20201029 12:46:03.748"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.752" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201029 12:46:03.751" endtime="20201029 12:46:03.753"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.755" level="INFO">VALUE: [4.8125000000003026e-05, 4.798599999999986e-05, 4.844399999999818e-05, 4.852799999999907e-05, 4.820800000000097e-05, 4.772200000000004e-05, 4.820800000000097e-05, 4.76940000000009e-05, 4.784700000000017e-05, 4.820800000000097e-05, 4.748599999999936e-05, 4.805600000000118e-05, 4.8195000000000876e-05, 4.772200000000004e-05, 4.81529999999987e-05, 4.807000000000075e-05, 4.843099999999809e-05, 4.759799999999939e-05, 4.804199999999814e-05, 4.807000000000075e-05, 4.790299999999845e-05, 4.806899999999781e-05, 4.842999999999861e-05, 4.784700000000017e-05, 4.774999999999918e-05, 4.813899999999913e-05, 4.784700000000017e-05, 4.777800000000179e-05, 4.7861000000003207e-05, 4.777800000000179e-05, 4.7653000000001666e-05, 4.852800000000254e-05, 4.811099999999999e-05, 4.7681000000000806e-05, 4.7917000000001486e-05, 4.802700000000257e-05, 4.831899999999806e-05, 4.780600000000093e-05, 4.83330000000011e-05, 4.756900000000078e-05, 4.851300000000003e-05, 4.823600000000011e-05, 4.781900000000103e-05, 4.80269999999991e-05, 4.85139999999995e-05, 4.756900000000078e-05, 4.816699999999827e-05, 4.844399999999818e-05, 4.81940000000014e-05, 4.761199999999896e-05]</msg>
<status status="PASS" starttime="20201029 12:46:03.753" endtime="20201029 12:46:03.757"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.748" endtime="20201029 12:46:03.757"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:03.761" endtime="20201029 12:46:03.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.760" endtime="20201029 12:46:03.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.758" endtime="20201029 12:46:03.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.400" endtime="20201029 12:46:03.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.399" endtime="20201029 12:46:03.782"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.790" endtime="20201029 12:46:03.806"></status>
</kw>
<msg timestamp="20201029 12:46:03.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.789" endtime="20201029 12:46:03.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:03.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:03.807" endtime="20201029 12:46:03.809"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.810" endtime="20201029 12:46:03.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.786" endtime="20201029 12:46:03.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.784" endtime="20201029 12:46:03.812"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:03.819" endtime="20201029 12:46:04.103"></status>
</kw>
<msg timestamp="20201029 12:46:04.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:03.817" endtime="20201029 12:46:04.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019459792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019508444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.108" endtime="20201029 12:46:04.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.116" endtime="20201029 12:46:04.117"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.815" endtime="20201029 12:46:04.118"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.813" endtime="20201029 12:46:04.118"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.122" level="INFO">${RESULT} = [{'diff': 4.865199999999972e-05}, {'diff': 4.944399999999918e-05}, {'diff': 4.854099999999917e-05}, {'diff': 4.881899999999856e-05}, {'diff': 4.911099999999752e-05}, {'diff': 4.86529999999992e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:04.119" endtime="20201029 12:46:04.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:04.127" level="INFO">${ACCURACY} = {'diff': [4.865199999999972e-05, 4.944399999999918e-05, 4.854099999999917e-05, 4.881899999999856e-05, 4.911099999999752e-05, 4.86529999999992e-05, 4.948600000000136e-05, 4.943000000000308e-05, 4.89729...</msg>
<status status="PASS" starttime="20201029 12:46:04.123" endtime="20201029 12:46:04.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.132" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201029 12:46:04.131" endtime="20201029 12:46:04.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.134" level="INFO">VALUE: [4.865199999999972e-05, 4.944399999999918e-05, 4.854099999999917e-05, 4.881899999999856e-05, 4.911099999999752e-05, 4.86529999999992e-05, 4.948600000000136e-05, 4.943000000000308e-05, 4.8972999999997296e-05, 4.893099999999859e-05, 4.95140000000005e-05, 4.888899999999988e-05, 4.942999999999961e-05, 4.90270000000001e-05, 4.861100000000049e-05, 4.9417000000002986e-05, 4.88880000000004e-05, 4.894400000000215e-05, 4.947200000000179e-05, 4.872200000000104e-05, 4.881900000000203e-05, 4.892999999999911e-05, 4.894400000000215e-05, 4.855500000000221e-05, 4.897199999999782e-05, 4.883299999999813e-05, 4.92079999999985e-05, 4.855599999999821e-05, 4.886100000000074e-05, 4.872200000000104e-05, 4.9445000000002126e-05, 4.8653000000002666e-05, 4.888899999999988e-05, 4.944499999999866e-05, 4.9153000000003166e-05, 4.893099999999859e-05, 4.8945000000001626e-05, 4.858299999999788e-05, 4.947199999999832e-05, 4.936100000000124e-05, 4.8707999999998e-05, 4.942999999999961e-05, 4.929199999999939e-05, 4.92079999999985e-05, 4.883299999999813e-05, 4.873600000000061e-05, 4.862500000000006e-05, 4.931900000000253e-05, 4.900000000000043e-05, 4.894499999999816e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.133" endtime="20201029 12:46:04.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.128" endtime="20201029 12:46:04.135"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.139" endtime="20201029 12:46:04.158"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.137" endtime="20201029 12:46:04.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.136" endtime="20201029 12:46:04.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.783" endtime="20201029 12:46:04.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:03.782" endtime="20201029 12:46:04.160"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.168" endtime="20201029 12:46:04.186"></status>
</kw>
<msg timestamp="20201029 12:46:04.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.167" endtime="20201029 12:46:04.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.187" endtime="20201029 12:46:04.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.190" endtime="20201029 12:46:04.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.164" endtime="20201029 12:46:04.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.162" endtime="20201029 12:46:04.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.199" endtime="20201029 12:46:04.484"></status>
</kw>
<msg timestamp="20201029 12:46:04.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.197" endtime="20201029 12:46:04.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019996819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020047208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.488" endtime="20201029 12:46:04.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.496" endtime="20201029 12:46:04.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.195" endtime="20201029 12:46:04.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.193" endtime="20201029 12:46:04.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.503" level="INFO">${RESULT} = [{'diff': 5.038900000000138e-05}, {'diff': 4.979100000000042e-05}, {'diff': 4.972200000000204e-05}, {'diff': 4.98469999999987e-05}, {'diff': 4.986099999999827e-05}, {'diff': 5.030599999999996e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:04.500" endtime="20201029 12:46:04.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:04.507" level="INFO">${ACCURACY} = {'diff': [5.038900000000138e-05, 4.979100000000042e-05, 4.972200000000204e-05, 4.98469999999987e-05, 4.986099999999827e-05, 5.030599999999996e-05, 4.969399999999943e-05, 5.008299999999938e-05, 4.99589...</msg>
<status status="PASS" starttime="20201029 12:46:04.504" endtime="20201029 12:46:04.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.512" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201029 12:46:04.510" endtime="20201029 12:46:04.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.514" level="INFO">VALUE: [5.038900000000138e-05, 4.979100000000042e-05, 4.972200000000204e-05, 4.98469999999987e-05, 4.986099999999827e-05, 5.030599999999996e-05, 4.969399999999943e-05, 5.008299999999938e-05, 4.995899999999873e-05, 4.969499999999891e-05, 4.975000000000118e-05, 4.96530000000002e-05, 4.9723000000001516e-05, 4.952800000000007e-05, 4.958399999999835e-05, 5.001399999999753e-05, 5.026300000000178e-05, 4.966600000000029e-05, 5.018000000000036e-05, 4.984700000000217e-05, 4.956899999999931e-05, 5.008300000000285e-05, 4.997199999999882e-05, 4.956899999999931e-05, 5.0014000000001e-05, 4.958299999999888e-05, 4.963900000000063e-05, 4.979199999999989e-05, 4.9987000000001336e-05, 5.047199999999932e-05, 5.034799999999867e-05, 5.031999999999953e-05, 5.008400000000232e-05, 4.9987000000001336e-05, 4.972200000000204e-05, 4.991600000000054e-05, 5.0388000000001903e-05, 5.018000000000036e-05, 5.05140000000015e-05, 4.98469999999987e-05, 5.029100000000092e-05, 4.995799999999925e-05, 5.019399999999993e-05, 5.001399999999753e-05, 5.047199999999932e-05, 5.036099999999877e-05, 5.045799999999975e-05, 4.98339999999986e-05, 4.987500000000131e-05, 4.977800000000032e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.513" endtime="20201029 12:46:04.515"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.508" endtime="20201029 12:46:04.515"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.519" endtime="20201029 12:46:04.538"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.517" endtime="20201029 12:46:04.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.516" endtime="20201029 12:46:04.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.161" endtime="20201029 12:46:04.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.160" endtime="20201029 12:46:04.540"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.550" endtime="20201029 12:46:04.571"></status>
</kw>
<msg timestamp="20201029 12:46:04.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.548" endtime="20201029 12:46:04.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.574" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.572" endtime="20201029 12:46:04.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.575" endtime="20201029 12:46:04.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.545" endtime="20201029 12:46:04.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.543" endtime="20201029 12:46:04.578"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.584" endtime="20201029 12:46:04.870"></status>
</kw>
<msg timestamp="20201029 12:46:04.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026057111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.583" endtime="20201029 12:46:04.874"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026057111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026107903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.875" endtime="20201029 12:46:04.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.883" endtime="20201029 12:46:04.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.580" endtime="20201029 12:46:04.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.578" endtime="20201029 12:46:04.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:04.889" level="INFO">${RESULT} = [{'diff': 5.079199999999742e-05}, {'diff': 5.12080000000005e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.068100000000034e-05}, {'diff': 5.068100000000034e-05}, {'diff': 5.094500000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:04.886" endtime="20201029 12:46:04.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:04.894" level="INFO">${ACCURACY} = {'diff': [5.079199999999742e-05, 5.12080000000005e-05, 5.148599999999989e-05, 5.068100000000034e-05, 5.068100000000034e-05, 5.094500000000016e-05, 5.126399999999878e-05, 5.086199999999874e-05, 5.14999...</msg>
<status status="PASS" starttime="20201029 12:46:04.890" endtime="20201029 12:46:04.894"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.898" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201029 12:46:04.897" endtime="20201029 12:46:04.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.900" level="INFO">VALUE: [5.079199999999742e-05, 5.12080000000005e-05, 5.148599999999989e-05, 5.068100000000034e-05, 5.068100000000034e-05, 5.094500000000016e-05, 5.126399999999878e-05, 5.086199999999874e-05, 5.149999999999946e-05, 5.0901999999998504e-05, 5.141699999999805e-05, 5.054100000000117e-05, 5.105500000000124e-05, 5.106900000000081e-05, 5.083300000000013e-05, 5.157000000000078e-05, 5.113900000000213e-05, 5.124999999999921e-05, 5.094500000000016e-05, 5.127800000000182e-05, 5.101399999999853e-05, 5.054200000000064e-05, 5.107000000000028e-05, 5.080499999999752e-05, 5.101399999999853e-05, 5.090300000000145e-05, 5.066600000000129e-05, 5.077699999999838e-05, 5.1401999999999004e-05, 5.130499999999802e-05, 5.058299999999988e-05, 5.0943999999997214e-05, 5.098599999999939e-05, 5.107000000000028e-05, 5.108300000000038e-05, 5.095800000000025e-05, 5.118099999999737e-05, 5.08469999999997e-05, 5.076399999999828e-05, 5.119499999999694e-05, 5.08339999999996e-05, 5.094500000000016e-05, 5.10279999999981e-05, 5.112500000000256e-05, 5.11669999999978e-05, 5.080500000000099e-05, 5.138899999999891e-05, 5.0651999999998254e-05, 5.129099999999845e-05, 5.094400000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:46:04.899" endtime="20201029 12:46:04.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.894" endtime="20201029 12:46:04.903"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:04.906" endtime="20201029 12:46:04.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.905" endtime="20201029 12:46:04.926"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.904" endtime="20201029 12:46:04.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.541" endtime="20201029 12:46:04.927"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.540" endtime="20201029 12:46:04.927"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.936" endtime="20201029 12:46:04.952"></status>
</kw>
<msg timestamp="20201029 12:46:04.952" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.934" endtime="20201029 12:46:04.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:04.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:04.954" endtime="20201029 12:46:04.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.956" endtime="20201029 12:46:04.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.932" endtime="20201029 12:46:04.958"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.929" endtime="20201029 12:46:04.958"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:04.965" endtime="20201029 12:46:05.251"></status>
</kw>
<msg timestamp="20201029 12:46:05.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:04.963" endtime="20201029 12:46:05.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019642153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:05.256" endtime="20201029 12:46:05.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.264" endtime="20201029 12:46:05.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.961" endtime="20201029 12:46:05.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.959" endtime="20201029 12:46:05.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.270" level="INFO">${RESULT} = [{'diff': 5.230599999999849e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.245899999999776e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.250000000000046e-05}, {'diff': 5.226300000000031e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:05.267" endtime="20201029 12:46:05.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:05.275" level="INFO">${ACCURACY} = {'diff': [5.230599999999849e-05, 5.250000000000046e-05, 5.245899999999776e-05, 5.225000000000021e-05, 5.250000000000046e-05, 5.226300000000031e-05, 5.212500000000009e-05, 5.1708000000001e-05, 5.174999...</msg>
<status status="PASS" starttime="20201029 12:46:05.271" endtime="20201029 12:46:05.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.280" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201029 12:46:05.279" endtime="20201029 12:46:05.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.282" level="INFO">VALUE: [5.230599999999849e-05, 5.250000000000046e-05, 5.245899999999776e-05, 5.225000000000021e-05, 5.250000000000046e-05, 5.226300000000031e-05, 5.212500000000009e-05, 5.1708000000001e-05, 5.174999999999971e-05, 5.209700000000095e-05, 5.2165999999999324e-05, 5.176399999999928e-05, 5.208300000000138e-05, 5.159700000000045e-05, 5.231900000000206e-05, 5.243100000000209e-05, 5.213899999999966e-05, 5.233300000000163e-05, 5.229199999999892e-05, 5.212500000000009e-05, 5.237500000000034e-05, 5.1708000000001e-05, 5.248600000000089e-05, 5.2457999999998284e-05, 5.2415999999999574e-05, 5.233299999999816e-05, 5.237500000000034e-05, 5.179100000000242e-05, 5.22080000000015e-05, 5.243099999999862e-05, 5.2193999999998464e-05, 5.172200000000057e-05, 5.177800000000232e-05, 5.201399999999953e-05, 5.20279999999991e-05, 5.155600000000121e-05, 5.168000000000186e-05, 5.205599999999824e-05, 5.238899999999991e-05, 5.170900000000048e-05, 5.177799999999885e-05, 5.251299999999709e-05, 5.250000000000046e-05, 5.2138000000000184e-05, 5.158299999999741e-05, 5.240300000000295e-05, 5.250000000000046e-05, 5.229199999999892e-05, 5.16530000000022e-05, 5.250000000000046e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.281" endtime="20201029 12:46:05.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.276" endtime="20201029 12:46:05.284"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.287" endtime="20201029 12:46:05.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.286" endtime="20201029 12:46:05.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.284" endtime="20201029 12:46:05.307"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.928" endtime="20201029 12:46:05.308"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:04.927" endtime="20201029 12:46:05.308"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.316" endtime="20201029 12:46:05.333"></status>
</kw>
<msg timestamp="20201029 12:46:05.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.315" endtime="20201029 12:46:05.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.334" endtime="20201029 12:46:05.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.337" endtime="20201029 12:46:05.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.312" endtime="20201029 12:46:05.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.310" endtime="20201029 12:46:05.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.346" endtime="20201029 12:46:05.632"></status>
</kw>
<msg timestamp="20201029 12:46:05.635" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:05.344" endtime="20201029 12:46:05.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.643" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019685083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01973775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:05.636" endtime="20201029 12:46:05.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.644" endtime="20201029 12:46:05.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.342" endtime="20201029 12:46:05.646"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.340" endtime="20201029 12:46:05.647"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:05.651" level="INFO">${RESULT} = [{'diff': 5.26669999999993e-05}, {'diff': 5.33609999999983e-05}, {'diff': 5.330599999999949e-05}, {'diff': 5.338900000000091e-05}, {'diff': 5.326400000000078e-05}, {'diff': 5.33609999999983e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:05.648" endtime="20201029 12:46:05.651"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:05.655" level="INFO">${ACCURACY} = {'diff': [5.26669999999993e-05, 5.33609999999983e-05, 5.330599999999949e-05, 5.338900000000091e-05, 5.326400000000078e-05, 5.33609999999983e-05, 5.262500000000059e-05, 5.2888000000000934e-05, 5.266699...</msg>
<status status="PASS" starttime="20201029 12:46:05.652" endtime="20201029 12:46:05.655"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.659" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201029 12:46:05.658" endtime="20201029 12:46:05.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.662" level="INFO">VALUE: [5.26669999999993e-05, 5.33609999999983e-05, 5.330599999999949e-05, 5.338900000000091e-05, 5.326400000000078e-05, 5.33609999999983e-05, 5.262500000000059e-05, 5.2888000000000934e-05, 5.26669999999993e-05, 5.3443999999999714e-05, 5.262500000000059e-05, 5.325000000000121e-05, 5.3430000000000144e-05, 5.300000000000096e-05, 5.329199999999992e-05, 5.256899999999884e-05, 5.259699999999798e-05, 5.268099999999887e-05, 5.280599999999899e-05, 5.304199999999967e-05, 5.337499999999787e-05, 5.2735999999997674e-05, 5.31669999999998e-05, 5.3277999999996883e-05, 5.313900000000066e-05, 5.297200000000182e-05, 5.283300000000213e-05, 5.304099999999673e-05, 5.2665999999999824e-05, 5.3166000000000324e-05, 5.268099999999887e-05, 5.2721999999998104e-05, 5.333300000000263e-05, 5.256900000000231e-05, 5.333299999999916e-05, 5.350000000000146e-05, 5.262500000000059e-05, 5.32080000000025e-05, 5.326400000000078e-05, 5.323600000000164e-05, 5.304199999999967e-05, 5.294500000000216e-05, 5.256900000000231e-05, 5.2916000000000074e-05, 5.315300000000023e-05, 5.280500000000299e-05, 5.330500000000002e-05, 5.287500000000084e-05, 5.354099999999723e-05, 5.319400000000293e-05]</msg>
<status status="PASS" starttime="20201029 12:46:05.661" endtime="20201029 12:46:05.663"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.656" endtime="20201029 12:46:05.663"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:05.667" endtime="20201029 12:46:05.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.665" endtime="20201029 12:46:05.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.664" endtime="20201029 12:46:05.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.309" endtime="20201029 12:46:05.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.308" endtime="20201029 12:46:05.688"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.696" endtime="20201029 12:46:05.714"></status>
</kw>
<msg timestamp="20201029 12:46:05.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.695" endtime="20201029 12:46:05.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:05.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:05.715" endtime="20201029 12:46:05.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.718" endtime="20201029 12:46:05.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.692" endtime="20201029 12:46:05.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.690" endtime="20201029 12:46:05.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:05.727" endtime="20201029 12:46:06.013"></status>
</kw>
<msg timestamp="20201029 12:46:06.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:05.725" endtime="20201029 12:46:06.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020614347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020668, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:06.017" endtime="20201029 12:46:06.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.025" endtime="20201029 12:46:06.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.723" endtime="20201029 12:46:06.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.721" endtime="20201029 12:46:06.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.032" level="INFO">${RESULT} = [{'diff': 5.365299999999726e-05}, {'diff': 5.406900000000034e-05}, {'diff': 5.415300000000123e-05}, {'diff': 5.362499999999812e-05}, {'diff': 5.387499999999837e-05}, {'diff': 5.45280000000016e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:06.028" endtime="20201029 12:46:06.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:06.036" level="INFO">${ACCURACY} = {'diff': [5.365299999999726e-05, 5.406900000000034e-05, 5.415300000000123e-05, 5.362499999999812e-05, 5.387499999999837e-05, 5.45280000000016e-05, 5.4208000000000034e-05, 5.355500000000027e-05, 5.3555...</msg>
<status status="PASS" starttime="20201029 12:46:06.033" endtime="20201029 12:46:06.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.040" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201029 12:46:06.039" endtime="20201029 12:46:06.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.043" level="INFO">VALUE: [5.365299999999726e-05, 5.406900000000034e-05, 5.415300000000123e-05, 5.362499999999812e-05, 5.387499999999837e-05, 5.45280000000016e-05, 5.4208000000000034e-05, 5.355500000000027e-05, 5.355599999999974e-05, 5.4263999999998314e-05, 5.412499999999862e-05, 5.444500000000019e-05, 5.379200000000042e-05, 5.445899999999976e-05, 5.404200000000067e-05, 5.4541999999997703e-05, 5.402700000000163e-05, 5.384800000000217e-05, 5.4444000000000714e-05, 5.411099999999905e-05, 5.3666000000000824e-05, 5.3680000000000394e-05, 5.3930000000000644e-05, 5.390300000000098e-05, 5.3957999999999784e-05, 5.36670000000003e-05, 5.3749999999998244e-05, 5.420899999999951e-05, 5.43609999999993e-05, 5.408400000000285e-05, 5.380599999999999e-05, 5.445899999999976e-05, 5.445899999999976e-05, 5.437499999999887e-05, 5.38479999999987e-05, 5.4499999999998994e-05, 5.3651999999997785e-05, 5.3916000000001074e-05, 5.450000000000246e-05, 5.3930000000000644e-05, 5.3693999999999964e-05, 5.356899999999984e-05, 5.409699999999948e-05, 5.377800000000085e-05, 5.4208000000000034e-05, 5.388900000000141e-05, 5.408299999999991e-05, 5.406999999999981e-05, 5.376400000000128e-05, 5.3915999999997605e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.041" endtime="20201029 12:46:06.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.036" endtime="20201029 12:46:06.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.048" endtime="20201029 12:46:06.068"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.047" endtime="20201029 12:46:06.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.046" endtime="20201029 12:46:06.069"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.688" endtime="20201029 12:46:06.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:05.688" endtime="20201029 12:46:06.070"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.079" endtime="20201029 12:46:06.095"></status>
</kw>
<msg timestamp="20201029 12:46:06.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.077" endtime="20201029 12:46:06.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.098" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.097" endtime="20201029 12:46:06.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.099" endtime="20201029 12:46:06.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.075" endtime="20201029 12:46:06.101"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.073" endtime="20201029 12:46:06.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.108" endtime="20201029 12:46:06.393"></status>
</kw>
<msg timestamp="20201029 12:46:06.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.107" endtime="20201029 12:46:06.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021026472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021081708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.398" endtime="20201029 12:46:06.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.406" endtime="20201029 12:46:06.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.104" endtime="20201029 12:46:06.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.102" endtime="20201029 12:46:06.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.413" level="INFO">${RESULT} = [{'diff': 5.5236000000000174e-05}, {'diff': 5.502700000000263e-05}, {'diff': 5.529099999999898e-05}, {'diff': 5.4930000000001644e-05}, {'diff': 5.4665999999998355e-05}, {'diff': 5.479099999999848e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:06.409" endtime="20201029 12:46:06.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:06.418" level="INFO">${ACCURACY} = {'diff': [5.5236000000000174e-05, 5.502700000000263e-05, 5.529099999999898e-05, 5.4930000000001644e-05, 5.4665999999998355e-05, 5.479099999999848e-05, 5.5013999999999064e-05, 5.479200000000142e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:06.414" endtime="20201029 12:46:06.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.422" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201029 12:46:06.421" endtime="20201029 12:46:06.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.425" level="INFO">VALUE: [5.5236000000000174e-05, 5.502700000000263e-05, 5.529099999999898e-05, 5.4930000000001644e-05, 5.4665999999998355e-05, 5.479099999999848e-05, 5.5013999999999064e-05, 5.479200000000142e-05, 5.5499999999999994e-05, 5.505600000000124e-05, 5.458399999999988e-05, 5.490300000000198e-05, 5.491700000000155e-05, 5.519500000000094e-05, 5.5415999999999105e-05, 5.552699999999966e-05, 5.4916000000002074e-05, 5.5151999999999285e-05, 5.5151999999999285e-05, 5.541700000000205e-05, 5.531899999999812e-05, 5.541699999999858e-05, 5.508299999999744e-05, 5.459699999999998e-05, 5.4694000000000964e-05, 5.4499999999998994e-05, 5.459699999999998e-05, 5.466699999999783e-05, 5.522300000000008e-05, 5.507000000000081e-05, 5.534799999999673e-05, 5.4735999999999674e-05, 5.4735999999999674e-05, 5.5013999999999064e-05, 5.5194000000001464e-05, 5.5208000000001034e-05, 5.5236000000000174e-05, 5.461100000000302e-05, 5.5027999999998634e-05, 5.538899999999944e-05, 5.5486000000000424e-05, 5.5222000000000604e-05, 5.5221999999997134e-05, 5.5249999999999744e-05, 5.534699999999726e-05, 5.487499999999937e-05, 5.481999999999709e-05, 5.481900000000109e-05, 5.4999999999999494e-05, 5.515299999999876e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.423" endtime="20201029 12:46:06.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.418" endtime="20201029 12:46:06.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.429" endtime="20201029 12:46:06.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.428" endtime="20201029 12:46:06.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.427" endtime="20201029 12:46:06.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.071" endtime="20201029 12:46:06.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.070" endtime="20201029 12:46:06.450"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.459" endtime="20201029 12:46:06.476"></status>
</kw>
<msg timestamp="20201029 12:46:06.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.457" endtime="20201029 12:46:06.477"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.477" endtime="20201029 12:46:06.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.480" endtime="20201029 12:46:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.455" endtime="20201029 12:46:06.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.453" endtime="20201029 12:46:06.483"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.489" endtime="20201029 12:46:06.776"></status>
</kw>
<msg timestamp="20201029 12:46:06.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.487" endtime="20201029 12:46:06.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020071236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020127389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.780" endtime="20201029 12:46:06.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.788" endtime="20201029 12:46:06.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.485" endtime="20201029 12:46:06.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.483" endtime="20201029 12:46:06.791"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:06.795" level="INFO">${RESULT} = [{'diff': 5.615299999999976e-05}, {'diff': 5.583400000000113e-05}, {'diff': 5.620899999999804e-05}, {'diff': 5.597300000000083e-05}, {'diff': 5.6152000000000285e-05}, {'diff': 5.606899999999887e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:06.792" endtime="20201029 12:46:06.796"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:06.800" level="INFO">${ACCURACY} = {'diff': [5.615299999999976e-05, 5.583400000000113e-05, 5.620899999999804e-05, 5.597300000000083e-05, 5.6152000000000285e-05, 5.606899999999887e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.63...</msg>
<status status="PASS" starttime="20201029 12:46:06.796" endtime="20201029 12:46:06.800"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.804" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201029 12:46:06.803" endtime="20201029 12:46:06.805"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.807" level="INFO">VALUE: [5.615299999999976e-05, 5.583400000000113e-05, 5.620899999999804e-05, 5.597300000000083e-05, 5.6152000000000285e-05, 5.606899999999887e-05, 5.587500000000037e-05, 5.6207999999998565e-05, 5.630499999999955e-05, 5.631899999999912e-05, 5.638900000000044e-05, 5.588899999999994e-05, 5.6027999999999634e-05, 5.583300000000166e-05, 5.5791999999998954e-05, 5.615299999999976e-05, 5.56809999999984e-05, 5.581999999999809e-05, 5.563899999999969e-05, 5.6277999999999884e-05, 5.615299999999976e-05, 5.640300000000001e-05, 5.6000000000000494e-05, 5.580499999999905e-05, 5.630499999999955e-05, 5.651300000000109e-05, 5.580499999999905e-05, 5.579099999999948e-05, 5.5791999999998954e-05, 5.60549999999993e-05, 5.6193999999998995e-05, 5.561100000000055e-05, 5.583300000000166e-05, 5.56670000000023e-05, 5.6514000000000564e-05, 5.6222000000001604e-05, 5.570899999999754e-05, 5.5694000000001964e-05, 5.572300000000058e-05, 5.562500000000012e-05, 5.620900000000151e-05, 5.6193999999998995e-05, 5.580499999999905e-05, 5.629099999999998e-05, 5.5708000000001534e-05, 5.6443999999999245e-05, 5.5541999999998704e-05, 5.6500000000000994e-05, 5.634699999999826e-05, 5.56670000000023e-05]</msg>
<status status="PASS" starttime="20201029 12:46:06.806" endtime="20201029 12:46:06.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.801" endtime="20201029 12:46:06.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:06.812" endtime="20201029 12:46:06.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.810" endtime="20201029 12:46:06.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.809" endtime="20201029 12:46:06.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.451" endtime="20201029 12:46:06.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.451" endtime="20201029 12:46:06.833"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.841" endtime="20201029 12:46:06.860"></status>
</kw>
<msg timestamp="20201029 12:46:06.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.840" endtime="20201029 12:46:06.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:06.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:06.861" endtime="20201029 12:46:06.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.864" endtime="20201029 12:46:06.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.837" endtime="20201029 12:46:06.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.835" endtime="20201029 12:46:06.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:06.873" endtime="20201029 12:46:07.157"></status>
</kw>
<msg timestamp="20201029 12:46:07.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:06.871" endtime="20201029 12:46:07.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020309861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020367431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.162" endtime="20201029 12:46:07.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.170" endtime="20201029 12:46:07.171"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.868" endtime="20201029 12:46:07.172"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.867" endtime="20201029 12:46:07.172"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.176" level="INFO">${RESULT} = [{'diff': 5.7569999999999844e-05}, {'diff': 5.6736000000001674e-05}, {'diff': 5.6652000000000785e-05}, {'diff': 5.693099999999965e-05}, {'diff': 5.705499999999683e-05}, {'diff': 5.6652000000000785e-05...</msg>
<status status="PASS" starttime="20201029 12:46:07.173" endtime="20201029 12:46:07.176"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:07.180" level="INFO">${ACCURACY} = {'diff': [5.7569999999999844e-05, 5.6736000000001674e-05, 5.6652000000000785e-05, 5.693099999999965e-05, 5.705499999999683e-05, 5.6652000000000785e-05, 5.681899999999962e-05, 5.7277999999997414e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:46:07.177" endtime="20201029 12:46:07.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.185" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201029 12:46:07.184" endtime="20201029 12:46:07.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.187" level="INFO">VALUE: [5.7569999999999844e-05, 5.6736000000001674e-05, 5.6652000000000785e-05, 5.693099999999965e-05, 5.705499999999683e-05, 5.6652000000000785e-05, 5.681899999999962e-05, 5.7277999999997414e-05, 5.712500000000162e-05, 5.659699999999851e-05, 5.7471999999999385e-05, 5.691700000000008e-05, 5.6555999999999274e-05, 5.66809999999994e-05, 5.715300000000076e-05, 5.726300000000184e-05, 5.7249999999998274e-05, 5.663900000000069e-05, 5.693099999999965e-05, 5.673700000000115e-05, 5.6721999999998635e-05, 5.7500000000001994e-05, 5.7263999999997844e-05, 5.704100000000073e-05, 5.7485999999998955e-05, 5.665300000000026e-05, 5.688899999999747e-05, 5.7069999999999343e-05, 5.743100000000015e-05, 5.7235999999998705e-05, 5.7528000000001134e-05, 5.695899999999879e-05, 5.7221999999999135e-05, 5.743100000000015e-05, 5.7028000000000634e-05, 5.722299999999861e-05, 5.7500000000001994e-05, 5.686099999999833e-05, 5.733299999999969e-05, 5.729099999999751e-05, 5.7000000000001494e-05, 5.73610000000023e-05, 5.713900000000119e-05, 5.7485999999998955e-05, 5.6791999999999954e-05, 5.665300000000026e-05, 5.729100000000098e-05, 5.7499999999998525e-05, 5.738899999999797e-05, 5.688900000000094e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.186" endtime="20201029 12:46:07.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.181" endtime="20201029 12:46:07.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.193" endtime="20201029 12:46:07.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.192" endtime="20201029 12:46:07.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.190" endtime="20201029 12:46:07.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.834" endtime="20201029 12:46:07.215"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:06.833" endtime="20201029 12:46:07.215"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.229" endtime="20201029 12:46:07.247"></status>
</kw>
<msg timestamp="20201029 12:46:07.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.226" endtime="20201029 12:46:07.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.248" endtime="20201029 12:46:07.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.251" endtime="20201029 12:46:07.252"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.222" endtime="20201029 12:46:07.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.219" endtime="20201029 12:46:07.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.260" endtime="20201029 12:46:07.545"></status>
</kw>
<msg timestamp="20201029 12:46:07.548" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026322486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026380722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.258" endtime="20201029 12:46:07.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.556" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.026322486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.026380722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.549" endtime="20201029 12:46:07.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.558" endtime="20201029 12:46:07.559"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.256" endtime="20201029 12:46:07.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.254" endtime="20201029 12:46:07.560"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.564" level="INFO">${RESULT} = [{'diff': 5.8235999999999705e-05}, {'diff': 5.788900000000194e-05}, {'diff': 5.7778000000001384e-05}, {'diff': 5.8013999999998594e-05}, {'diff': 5.816699999999786e-05}, {'diff': 5.766700000000083e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:07.561" endtime="20201029 12:46:07.564"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:07.569" level="INFO">${ACCURACY} = {'diff': [5.8235999999999705e-05, 5.788900000000194e-05, 5.7778000000001384e-05, 5.8013999999998594e-05, 5.816699999999786e-05, 5.766700000000083e-05, 5.8222000000000135e-05, 5.791699999999761e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:07.565" endtime="20201029 12:46:07.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.574" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201029 12:46:07.573" endtime="20201029 12:46:07.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.576" level="INFO">VALUE: [5.8235999999999705e-05, 5.788900000000194e-05, 5.7778000000001384e-05, 5.8013999999998594e-05, 5.816699999999786e-05, 5.766700000000083e-05, 5.8222000000000135e-05, 5.791699999999761e-05, 5.8499999999999525e-05, 5.8208000000000565e-05, 5.8013999999998594e-05, 5.845900000000029e-05, 5.795899999999979e-05, 5.8138000000002715e-05, 5.784699999999976e-05, 5.836099999999983e-05, 5.7971999999999885e-05, 5.7694000000000495e-05, 5.8292000000001454e-05, 5.808300000000044e-05, 5.763899999999822e-05, 5.8264000000002314e-05, 5.8513999999999095e-05, 5.844500000000072e-05, 5.7777999999997914e-05, 5.8334000000000163e-05, 5.820900000000004e-05, 5.7999999999999025e-05, 5.8042000000001204e-05, 5.7930000000001175e-05, 5.8472000000000385e-05, 5.8194000000000995e-05, 5.781900000000062e-05, 5.804100000000173e-05, 5.8443999999997776e-05, 5.8056000000000774e-05, 5.7694000000000495e-05, 5.7721999999999635e-05, 5.7763999999998344e-05, 5.76810000000004e-05, 5.790300000000151e-05, 5.809700000000001e-05, 5.7792000000000954e-05, 5.8249999999999275e-05, 5.8152000000002285e-05, 5.8249999999999275e-05, 5.812499999999915e-05, 5.7958000000000315e-05, 5.8166000000001855e-05, 5.783300000000019e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.575" endtime="20201029 12:46:07.577"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.570" endtime="20201029 12:46:07.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.581" endtime="20201029 12:46:07.600"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.579" endtime="20201029 12:46:07.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.578" endtime="20201029 12:46:07.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.216" endtime="20201029 12:46:07.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.216" endtime="20201029 12:46:07.602"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.610" endtime="20201029 12:46:07.628"></status>
</kw>
<msg timestamp="20201029 12:46:07.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.609" endtime="20201029 12:46:07.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.629" endtime="20201029 12:46:07.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.632" endtime="20201029 12:46:07.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.606" endtime="20201029 12:46:07.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.604" endtime="20201029 12:46:07.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.640" endtime="20201029 12:46:07.928"></status>
</kw>
<msg timestamp="20201029 12:46:07.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.639" endtime="20201029 12:46:07.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019569069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019627958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:07.932" endtime="20201029 12:46:07.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.940" endtime="20201029 12:46:07.942"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.637" endtime="20201029 12:46:07.943"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.635" endtime="20201029 12:46:07.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:07.947" level="INFO">${RESULT} = [{'diff': 5.888899999999947e-05}, {'diff': 5.8958000000001315e-05}, {'diff': 5.8652000000002785e-05}, {'diff': 5.9028000000002634e-05}, {'diff': 5.9235999999997235e-05}, {'diff': 5.9458000000001815e-0...</msg>
<status status="PASS" starttime="20201029 12:46:07.944" endtime="20201029 12:46:07.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:07.951" level="INFO">${ACCURACY} = {'diff': [5.888899999999947e-05, 5.8958000000001315e-05, 5.8652000000002785e-05, 5.9028000000002634e-05, 5.9235999999997235e-05, 5.9458000000001815e-05, 5.881899999999815e-05, 5.888899999999947e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:46:07.948" endtime="20201029 12:46:07.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.956" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201029 12:46:07.955" endtime="20201029 12:46:07.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:07.958" level="INFO">VALUE: [5.888899999999947e-05, 5.8958000000001315e-05, 5.8652000000002785e-05, 5.9028000000002634e-05, 5.9235999999997235e-05, 5.9458000000001815e-05, 5.881899999999815e-05, 5.888899999999947e-05, 5.8722000000000635e-05, 5.8958000000001315e-05, 5.912500000000015e-05, 5.9056000000001774e-05, 5.8749999999999775e-05, 5.9319999999998124e-05, 5.8805999999998054e-05, 5.9263999999999845e-05, 5.8929999999998706e-05, 5.9443999999998776e-05, 5.920900000000104e-05, 5.93750000000004e-05, 5.9083999999997444e-05, 5.9207999999998095e-05, 5.940299999999954e-05, 5.913899999999972e-05, 5.862499999999965e-05, 5.933299999999822e-05, 5.9305999999998554e-05, 5.8721999999997165e-05, 5.872300000000011e-05, 5.8848000000000233e-05, 5.911100000000058e-05, 5.9387999999997027e-05, 5.861100000000008e-05, 5.8944000000001745e-05, 5.930500000000255e-05, 5.9500000000000525e-05, 5.883299999999772e-05, 5.8944000000001745e-05, 5.890300000000251e-05, 5.8777999999998914e-05, 5.888899999999947e-05, 5.9069999999997874e-05, 5.8806000000001524e-05, 5.897300000000036e-05, 5.9221999999997665e-05, 5.8848000000000233e-05, 5.9221999999997665e-05, 5.898699999999993e-05, 5.912500000000015e-05, 5.862499999999965e-05]</msg>
<status status="PASS" starttime="20201029 12:46:07.957" endtime="20201029 12:46:07.959"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.952" endtime="20201029 12:46:07.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:07.963" endtime="20201029 12:46:07.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.962" endtime="20201029 12:46:07.983"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.961" endtime="20201029 12:46:07.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.603" endtime="20201029 12:46:07.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.602" endtime="20201029 12:46:07.984"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:07.993" endtime="20201029 12:46:08.013"></status>
</kw>
<msg timestamp="20201029 12:46:08.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:07.991" endtime="20201029 12:46:08.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.015" endtime="20201029 12:46:08.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.017" endtime="20201029 12:46:08.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.988" endtime="20201029 12:46:08.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.986" endtime="20201029 12:46:08.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.026" endtime="20201029 12:46:08.312"></status>
</kw>
<msg timestamp="20201029 12:46:08.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.025" endtime="20201029 12:46:08.315"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.323" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023630931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023691333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.316" endtime="20201029 12:46:08.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.324" endtime="20201029 12:46:08.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.022" endtime="20201029 12:46:08.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.020" endtime="20201029 12:46:08.327"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.331" level="INFO">${RESULT} = [{'diff': 6.0401999999997597e-05}, {'diff': 5.9735999999997735e-05}, {'diff': 6.0000000000001025e-05}, {'diff': 6.0528000000000665e-05}, {'diff': 5.988900000000047e-05}, {'diff': 5.9777999999999915e-0...</msg>
<status status="PASS" starttime="20201029 12:46:08.327" endtime="20201029 12:46:08.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:08.335" level="INFO">${ACCURACY} = {'diff': [6.0401999999997597e-05, 5.9735999999997735e-05, 6.0000000000001025e-05, 6.0528000000000665e-05, 5.988900000000047e-05, 5.9777999999999915e-05, 6.011099999999811e-05, 6.0333999999998694e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:08.332" endtime="20201029 12:46:08.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.339" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201029 12:46:08.338" endtime="20201029 12:46:08.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.342" level="INFO">VALUE: [6.0401999999997597e-05, 5.9735999999997735e-05, 6.0000000000001025e-05, 6.0528000000000665e-05, 5.988900000000047e-05, 5.9777999999999915e-05, 6.011099999999811e-05, 6.0333999999998694e-05, 6.036100000000183e-05, 6.043099999999968e-05, 5.962499999999718e-05, 5.9791999999999484e-05, 5.968099999999893e-05, 6.0528000000000665e-05, 5.979100000000001e-05, 6.0194000000002995e-05, 5.9957999999998846e-05, 5.988900000000047e-05, 6.008299999999897e-05, 6.0028000000000165e-05, 5.962500000000065e-05, 6.034700000000226e-05, 6.041700000000011e-05, 6.0264000000000845e-05, 5.993099999999918e-05, 5.966699999999936e-05, 6.0083999999998444e-05, 6.0291999999999984e-05, 5.973700000000068e-05, 5.9721999999998165e-05, 5.983299999999872e-05, 5.9722000000001635e-05, 5.9679999999999456e-05, 6.036100000000183e-05, 5.979100000000001e-05, 6.0222000000002135e-05, 5.9957999999998846e-05, 6.0014000000000595e-05, 6.0028000000000165e-05, 5.9750000000000775e-05, 6.0070000000002344e-05, 5.9736000000001205e-05, 6.022299999999814e-05, 5.9943999999999276e-05, 5.995899999999832e-05, 6.02629999999979e-05, 6.0152000000000816e-05, 6.012499999999768e-05, 6.0416000000000636e-05, 6.0471999999998916e-05]</msg>
<status status="PASS" starttime="20201029 12:46:08.340" endtime="20201029 12:46:08.343"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.336" endtime="20201029 12:46:08.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.347" endtime="20201029 12:46:08.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.346" endtime="20201029 12:46:08.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.345" endtime="20201029 12:46:08.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.985" endtime="20201029 12:46:08.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:07.984" endtime="20201029 12:46:08.368"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.377" endtime="20201029 12:46:08.394"></status>
</kw>
<msg timestamp="20201029 12:46:08.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.375" endtime="20201029 12:46:08.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.397" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.396" endtime="20201029 12:46:08.397"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.398" endtime="20201029 12:46:08.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.373" endtime="20201029 12:46:08.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.370" endtime="20201029 12:46:08.401"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.407" endtime="20201029 12:46:08.692"></status>
</kw>
<msg timestamp="20201029 12:46:08.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02040275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:08.406" endtime="20201029 12:46:08.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02040275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:08.697" endtime="20201029 12:46:08.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.705" endtime="20201029 12:46:08.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.403" endtime="20201029 12:46:08.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.401" endtime="20201029 12:46:08.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:08.711" level="INFO">${RESULT} = [{'diff': 6.063900000000122e-05}, {'diff': 6.12080000000001e-05}, {'diff': 6.0792000000000485e-05}, {'diff': 6.061100000000208e-05}, {'diff': 6.122299999999914e-05}, {'diff': 6.0985999999998985e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:08.708" endtime="20201029 12:46:08.712"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:08.716" level="INFO">${ACCURACY} = {'diff': [6.063900000000122e-05, 6.12080000000001e-05, 6.0792000000000485e-05, 6.061100000000208e-05, 6.122299999999914e-05, 6.0985999999998985e-05, 6.147299999999939e-05, 6.141700000000111e-05, 6.151...</msg>
<status status="PASS" starttime="20201029 12:46:08.712" endtime="20201029 12:46:08.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.721" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201029 12:46:08.720" endtime="20201029 12:46:08.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.723" level="INFO">VALUE: [6.063900000000122e-05, 6.12080000000001e-05, 6.0792000000000485e-05, 6.061100000000208e-05, 6.122299999999914e-05, 6.0985999999998985e-05, 6.147299999999939e-05, 6.141700000000111e-05, 6.15140000000021e-05, 6.145899999999982e-05, 6.106899999999693e-05, 6.05689999999999e-05, 6.14300000000012e-05, 6.113899999999825e-05, 6.134699999999979e-05, 6.15140000000021e-05, 6.0707999999999596e-05, 6.0971999999999416e-05, 6.065300000000079e-05, 6.126399999999838e-05, 6.104200000000073e-05, 6.108299999999997e-05, 6.0792000000000485e-05, 6.0957999999999846e-05, 6.0819999999999624e-05, 6.129100000000151e-05, 6.142999999999774e-05, 6.10690000000004e-05, 6.13889999999985e-05, 6.086100000000233e-05, 6.086099999999886e-05, 6.136099999999936e-05, 6.062500000000165e-05, 6.104200000000073e-05, 6.141700000000111e-05, 6.0833999999999194e-05, 6.148599999999949e-05, 6.13339999999997e-05, 6.1195e-05, 6.136199999999883e-05, 6.066700000000036e-05, 6.133300000000022e-05, 6.145800000000035e-05, 6.115200000000182e-05, 6.140299999999807e-05, 6.122199999999967e-05, 6.151399999999863e-05, 6.0680000000000456e-05, 6.0735999999998735e-05, 6.0957999999999846e-05]</msg>
<status status="PASS" starttime="20201029 12:46:08.722" endtime="20201029 12:46:08.729"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.717" endtime="20201029 12:46:08.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:08.733" endtime="20201029 12:46:08.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.732" endtime="20201029 12:46:08.753"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.730" endtime="20201029 12:46:08.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.369" endtime="20201029 12:46:08.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.368" endtime="20201029 12:46:08.754"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.763" endtime="20201029 12:46:08.779"></status>
</kw>
<msg timestamp="20201029 12:46:08.779" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.761" endtime="20201029 12:46:08.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:08.782" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:08.780" endtime="20201029 12:46:08.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.783" endtime="20201029 12:46:08.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.758" endtime="20201029 12:46:08.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.756" endtime="20201029 12:46:08.785"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:08.792" endtime="20201029 12:46:09.079"></status>
</kw>
<msg timestamp="20201029 12:46:09.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:08.790" endtime="20201029 12:46:09.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.083" endtime="20201029 12:46:09.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.091" endtime="20201029 12:46:09.093"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.788" endtime="20201029 12:46:09.094"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.786" endtime="20201029 12:46:09.094"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.098" level="INFO">${RESULT} = [{'diff': 6.199999999999956e-05}, {'diff': 6.170799999999713e-05}, {'diff': 6.227799999999895e-05}, {'diff': 6.252800000000266e-05}, {'diff': 6.240300000000254e-05}, {'diff': 6.17499999999993e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:09.095" endtime="20201029 12:46:09.098"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:09.102" level="INFO">${ACCURACY} = {'diff': [6.199999999999956e-05, 6.170799999999713e-05, 6.227799999999895e-05, 6.252800000000266e-05, 6.240300000000254e-05, 6.17499999999993e-05, 6.158399999999994e-05, 6.165300000000179e-05, 6.17220...</msg>
<status status="PASS" starttime="20201029 12:46:09.099" endtime="20201029 12:46:09.102"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.106" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201029 12:46:09.105" endtime="20201029 12:46:09.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.109" level="INFO">VALUE: [6.199999999999956e-05, 6.170799999999713e-05, 6.227799999999895e-05, 6.252800000000266e-05, 6.240300000000254e-05, 6.17499999999993e-05, 6.158399999999994e-05, 6.165300000000179e-05, 6.172200000000017e-05, 6.20690000000014e-05, 6.250000000000006e-05, 6.20279999999987e-05, 6.168000000000146e-05, 6.241700000000211e-05, 6.22080000000011e-05, 6.173599999999974e-05, 6.213899999999925e-05, 6.198599999999999e-05, 6.250000000000006e-05, 6.22499999999998e-05, 6.172299999999964e-05, 6.17499999999993e-05, 6.208400000000044e-05, 6.215199999999935e-05, 6.23889999999995e-05, 6.17080000000006e-05, 6.190300000000204e-05, 6.226399999999938e-05, 6.22499999999998e-05, 6.248600000000049e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.173599999999974e-05, 6.16950000000005e-05, 6.215299999999882e-05, 6.15560000000008e-05, 6.198700000000293e-05, 6.245799999999788e-05, 6.229099999999904e-05, 6.197199999999695e-05, 6.186099999999986e-05, 6.22080000000011e-05, 6.237499999999993e-05, 6.248600000000049e-05, 6.23889999999995e-05, 6.193100000000118e-05, 6.226399999999938e-05, 6.229199999999852e-05, 6.176399999999888e-05, 6.180600000000105e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.107" endtime="20201029 12:46:09.110"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.103" endtime="20201029 12:46:09.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.114" endtime="20201029 12:46:09.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.112" endtime="20201029 12:46:09.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.111" endtime="20201029 12:46:09.134"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.755" endtime="20201029 12:46:09.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:08.754" endtime="20201029 12:46:09.135"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.143" endtime="20201029 12:46:09.162"></status>
</kw>
<msg timestamp="20201029 12:46:09.162" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.142" endtime="20201029 12:46:09.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.163" endtime="20201029 12:46:09.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.166" endtime="20201029 12:46:09.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.139" endtime="20201029 12:46:09.168"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.137" endtime="20201029 12:46:09.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.175" endtime="20201029 12:46:09.461"></status>
</kw>
<msg timestamp="20201029 12:46:09.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.173" endtime="20201029 12:46:09.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020393222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.465" endtime="20201029 12:46:09.472"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.473" endtime="20201029 12:46:09.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.171" endtime="20201029 12:46:09.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.169" endtime="20201029 12:46:09.476"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.480" level="INFO">${RESULT} = [{'diff': 6.294500000000175e-05}, {'diff': 6.345899999999835e-05}, {'diff': 6.304199999999927e-05}, {'diff': 6.32219999999982e-05}, {'diff': 6.262500000000018e-05}, {'diff': 6.315200000000035e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:09.477" endtime="20201029 12:46:09.480"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:09.484" level="INFO">${ACCURACY} = {'diff': [6.294500000000175e-05, 6.345899999999835e-05, 6.304199999999927e-05, 6.32219999999982e-05, 6.262500000000018e-05, 6.315200000000035e-05, 6.283299999999825e-05, 6.336100000000136e-05, 6.30550...</msg>
<status status="PASS" starttime="20201029 12:46:09.481" endtime="20201029 12:46:09.484"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.488" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201029 12:46:09.487" endtime="20201029 12:46:09.488"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.491" level="INFO">VALUE: [6.294500000000175e-05, 6.345899999999835e-05, 6.304199999999927e-05, 6.32219999999982e-05, 6.262500000000018e-05, 6.315200000000035e-05, 6.283299999999825e-05, 6.336100000000136e-05, 6.305500000000283e-05, 6.295799999999838e-05, 6.287500000000043e-05, 6.280499999999911e-05, 6.248600000000049e-05, 6.259700000000104e-05, 6.347299999999792e-05, 6.338899999999703e-05, 6.340300000000007e-05, 6.329199999999952e-05, 6.33340000000017e-05, 6.298700000000046e-05, 6.280499999999911e-05, 6.341600000000017e-05, 6.312500000000068e-05, 6.287500000000043e-05, 6.322200000000167e-05, 6.347200000000192e-05, 6.295800000000185e-05, 6.316700000000286e-05, 6.329199999999952e-05, 6.263899999999975e-05, 6.30699999999984e-05, 6.268099999999846e-05, 6.265300000000279e-05, 6.350000000000106e-05, 6.341600000000017e-05, 6.313800000000078e-05, 6.322200000000167e-05, 6.330499999999961e-05, 6.25690000000019e-05, 6.308300000000197e-05, 6.268100000000193e-05, 6.255499999999886e-05, 6.276399999999988e-05, 6.315299999999982e-05, 6.35280000000002e-05, 6.266699999999889e-05, 6.294500000000175e-05, 6.334800000000126e-05, 6.272299999999717e-05, 6.344499999999878e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.489" endtime="20201029 12:46:09.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.485" endtime="20201029 12:46:09.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.496" endtime="20201029 12:46:09.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.495" endtime="20201029 12:46:09.516"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.494" endtime="20201029 12:46:09.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.136" endtime="20201029 12:46:09.517"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.135" endtime="20201029 12:46:09.517"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.526" endtime="20201029 12:46:09.543"></status>
</kw>
<msg timestamp="20201029 12:46:09.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.524" endtime="20201029 12:46:09.544"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.546" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.545" endtime="20201029 12:46:09.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.547" endtime="20201029 12:46:09.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.522" endtime="20201029 12:46:09.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.520" endtime="20201029 12:46:09.550"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.556" endtime="20201029 12:46:09.841"></status>
</kw>
<msg timestamp="20201029 12:46:09.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.554" endtime="20201029 12:46:09.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019458417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019522056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.845" endtime="20201029 12:46:09.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.853" endtime="20201029 12:46:09.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.552" endtime="20201029 12:46:09.856"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.550" endtime="20201029 12:46:09.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:09.860" level="INFO">${RESULT} = [{'diff': 6.363900000000075e-05}, {'diff': 6.415200000000135e-05}, {'diff': 6.437500000000193e-05}, {'diff': 6.388799999999806e-05}, {'diff': 6.413900000000125e-05}, {'diff': 6.437499999999846e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:09.857" endtime="20201029 12:46:09.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:09.865" level="INFO">${ACCURACY} = {'diff': [6.363900000000075e-05, 6.415200000000135e-05, 6.437500000000193e-05, 6.388799999999806e-05, 6.413900000000125e-05, 6.437499999999846e-05, 6.43890000000015e-05, 6.40829999999995e-05, 6.450000...</msg>
<status status="PASS" starttime="20201029 12:46:09.861" endtime="20201029 12:46:09.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.870" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201029 12:46:09.869" endtime="20201029 12:46:09.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.872" level="INFO">VALUE: [6.363900000000075e-05, 6.415200000000135e-05, 6.437500000000193e-05, 6.388799999999806e-05, 6.413900000000125e-05, 6.437499999999846e-05, 6.43890000000015e-05, 6.40829999999995e-05, 6.450000000000206e-05, 6.408399999999898e-05, 6.395800000000285e-05, 6.413900000000125e-05, 6.372200000000217e-05, 6.369499999999903e-05, 6.357000000000237e-05, 6.391700000000014e-05, 6.445799999999988e-05, 6.408400000000244e-05, 6.447199999999945e-05, 6.44440000000003e-05, 6.434699999999932e-05, 6.354100000000029e-05, 6.412499999999821e-05, 6.418000000000049e-05, 6.3889000000001e-05, 6.420799999999963e-05, 6.374999999999784e-05, 6.437499999999846e-05, 6.415299999999735e-05, 6.413900000000125e-05, 6.429199999999705e-05, 6.424999999999834e-05, 6.386099999999839e-05, 6.433299999999975e-05, 6.352700000000072e-05, 6.441600000000117e-05, 6.415300000000082e-05, 6.43890000000015e-05, 6.40829999999995e-05, 6.427800000000095e-05, 6.43890000000015e-05, 6.430600000000009e-05, 6.448600000000249e-05, 6.386099999999839e-05, 6.451399999999816e-05, 6.380599999999959e-05, 6.356899999999943e-05, 6.433299999999975e-05, 6.386100000000186e-05, 6.409699999999907e-05]</msg>
<status status="PASS" starttime="20201029 12:46:09.871" endtime="20201029 12:46:09.873"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.866" endtime="20201029 12:46:09.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:09.877" endtime="20201029 12:46:09.896"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.875" endtime="20201029 12:46:09.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.874" endtime="20201029 12:46:09.897"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.518" endtime="20201029 12:46:09.898"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.517" endtime="20201029 12:46:09.898"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.906" endtime="20201029 12:46:09.924"></status>
</kw>
<msg timestamp="20201029 12:46:09.924" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.905" endtime="20201029 12:46:09.925"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:09.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:09.925" endtime="20201029 12:46:09.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.928" endtime="20201029 12:46:09.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.902" endtime="20201029 12:46:09.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.900" endtime="20201029 12:46:09.930"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:09.937" endtime="20201029 12:46:10.224"></status>
</kw>
<msg timestamp="20201029 12:46:10.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:09.935" endtime="20201029 12:46:10.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019502056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.228" endtime="20201029 12:46:10.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.237" endtime="20201029 12:46:10.238"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.933" endtime="20201029 12:46:10.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.931" endtime="20201029 12:46:10.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.243" level="INFO">${RESULT} = [{'diff': 6.474999999999884e-05}, {'diff': 6.463899999999828e-05}, {'diff': 6.481900000000068e-05}, {'diff': 6.551299999999968e-05}, {'diff': 6.52639999999989e-05}, {'diff': 6.473599999999927e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:10.240" endtime="20201029 12:46:10.243"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:10.247" level="INFO">${ACCURACY} = {'diff': [6.474999999999884e-05, 6.463899999999828e-05, 6.481900000000068e-05, 6.551299999999968e-05, 6.52639999999989e-05, 6.473599999999927e-05, 6.52090000000001e-05, 6.53890000000025e-05, 6.5389000...</msg>
<status status="PASS" starttime="20201029 12:46:10.244" endtime="20201029 12:46:10.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.252" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201029 12:46:10.251" endtime="20201029 12:46:10.252"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.254" level="INFO">VALUE: [6.474999999999884e-05, 6.463899999999828e-05, 6.481900000000068e-05, 6.551299999999968e-05, 6.52639999999989e-05, 6.473599999999927e-05, 6.52090000000001e-05, 6.53890000000025e-05, 6.53890000000025e-05, 6.493100000000071e-05, 6.549999999999959e-05, 6.545900000000035e-05, 6.455600000000034e-05, 6.484700000000329e-05, 6.532000000000066e-05, 6.454200000000077e-05, 6.544399999999784e-05, 6.513899999999878e-05, 6.47639999999984e-05, 6.47219999999997e-05, 6.50280000000017e-05, 6.493000000000124e-05, 6.505500000000136e-05, 6.493099999999724e-05, 6.529199999999805e-05, 6.488899999999853e-05, 6.477799999999798e-05, 6.502799999999823e-05, 6.53479999999998e-05, 6.548600000000002e-05, 6.479200000000102e-05, 6.508399999999998e-05, 6.47219999999997e-05, 6.463799999999881e-05, 6.533300000000075e-05, 6.493000000000124e-05, 6.524999999999934e-05, 6.548600000000002e-05, 6.4583e-05, 6.487499999999896e-05, 6.45699999999999e-05, 6.455600000000034e-05, 6.47639999999984e-05, 6.479200000000102e-05, 6.52500000000028e-05, 6.480500000000111e-05, 6.497199999999995e-05, 6.477700000000197e-05, 6.512500000000268e-05, 6.505499999999789e-05]</msg>
<status status="PASS" starttime="20201029 12:46:10.253" endtime="20201029 12:46:10.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.248" endtime="20201029 12:46:10.255"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.259" endtime="20201029 12:46:10.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.258" endtime="20201029 12:46:10.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.256" endtime="20201029 12:46:10.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.899" endtime="20201029 12:46:10.280"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:09.898" endtime="20201029 12:46:10.280"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.289" endtime="20201029 12:46:10.306"></status>
</kw>
<msg timestamp="20201029 12:46:10.307" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.287" endtime="20201029 12:46:10.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.308" endtime="20201029 12:46:10.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.310" endtime="20201029 12:46:10.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.285" endtime="20201029 12:46:10.312"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.282" endtime="20201029 12:46:10.313"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.319" endtime="20201029 12:46:10.605"></status>
</kw>
<msg timestamp="20201029 12:46:10.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020846625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.318" endtime="20201029 12:46:10.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.616" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020781042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020846625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.609" endtime="20201029 12:46:10.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.617" endtime="20201029 12:46:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.315" endtime="20201029 12:46:10.619"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.314" endtime="20201029 12:46:10.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:10.624" level="INFO">${RESULT} = [{'diff': 6.5583000000001e-05}, {'diff': 6.600000000000009e-05}, {'diff': 6.582000000000116e-05}, {'diff': 6.644499999999831e-05}, {'diff': 6.594500000000128e-05}, {'diff': 6.604200000000227e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:10.621" endtime="20201029 12:46:10.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:10.628" level="INFO">${ACCURACY} = {'diff': [6.5583000000001e-05, 6.600000000000009e-05, 6.582000000000116e-05, 6.644499999999831e-05, 6.594500000000128e-05, 6.604200000000227e-05, 6.568099999999799e-05, 6.59440000000018e-05, 6.5694000...</msg>
<status status="PASS" starttime="20201029 12:46:10.625" endtime="20201029 12:46:10.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.632" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201029 12:46:10.631" endtime="20201029 12:46:10.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.635" level="INFO">VALUE: [6.5583000000001e-05, 6.600000000000009e-05, 6.582000000000116e-05, 6.644499999999831e-05, 6.594500000000128e-05, 6.604200000000227e-05, 6.568099999999799e-05, 6.59440000000018e-05, 6.569400000000156e-05, 6.561100000000014e-05, 6.642999999999927e-05, 6.625000000000034e-05, 6.577800000000245e-05, 6.619500000000153e-05, 6.559700000000057e-05, 6.580500000000211e-05, 6.595799999999791e-05, 6.565299999999885e-05, 6.57090000000006e-05, 6.613900000000325e-05, 6.58480000000003e-05, 6.580599999999812e-05, 6.558400000000048e-05, 6.615199999999988e-05, 6.558299999999753e-05, 6.574999999999984e-05, 6.570800000000113e-05, 6.59029999999991e-05, 6.613899999999978e-05, 6.562499999999971e-05, 6.647199999999798e-05, 6.609700000000107e-05, 6.5889000000003e-05, 6.616699999999892e-05, 6.64029999999996e-05, 6.629199999999905e-05, 6.605500000000236e-05, 6.593099999999824e-05, 6.617999999999902e-05, 6.616599999999945e-05, 6.566600000000242e-05, 6.588899999999953e-05, 6.612500000000021e-05, 6.64029999999996e-05, 6.584700000000082e-05, 6.561100000000014e-05, 6.629199999999905e-05, 6.62639999999999e-05, 6.634700000000132e-05, 6.566700000000189e-05]</msg>
<status status="PASS" starttime="20201029 12:46:10.633" endtime="20201029 12:46:10.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.629" endtime="20201029 12:46:10.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:10.641" endtime="20201029 12:46:10.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.639" endtime="20201029 12:46:10.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.638" endtime="20201029 12:46:10.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.281" endtime="20201029 12:46:10.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.280" endtime="20201029 12:46:10.661"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.670" endtime="20201029 12:46:10.687"></status>
</kw>
<msg timestamp="20201029 12:46:10.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.669" endtime="20201029 12:46:10.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:10.689" endtime="20201029 12:46:10.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.691" endtime="20201029 12:46:10.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.666" endtime="20201029 12:46:10.693"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.664" endtime="20201029 12:46:10.694"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.700" endtime="20201029 12:46:10.985"></status>
</kw>
<msg timestamp="20201029 12:46:10.989" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.698" endtime="20201029 12:46:10.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:10.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020139153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:10.990" endtime="20201029 12:46:10.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:10.998" endtime="20201029 12:46:10.999"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.696" endtime="20201029 12:46:11.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.694" endtime="20201029 12:46:11.001"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.004" level="INFO">${RESULT} = [{'diff': 6.667999999999952e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.65969999999981e-05}, {'diff': 6.72640000000009e-05}, {'diff': 6.69030000000001e-05}, {'diff': 6.665299999999985e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:11.001" endtime="20201029 12:46:11.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:11.009" level="INFO">${ACCURACY} = {'diff': [6.667999999999952e-05, 6.688900000000053e-05, 6.65969999999981e-05, 6.72640000000009e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.683299999999878e-05, 6.691699999999967e-05, 6.6681000...</msg>
<status status="PASS" starttime="20201029 12:46:11.005" endtime="20201029 12:46:11.009"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.014" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201029 12:46:11.013" endtime="20201029 12:46:11.014"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.016" level="INFO">VALUE: [6.667999999999952e-05, 6.688900000000053e-05, 6.65969999999981e-05, 6.72640000000009e-05, 6.69030000000001e-05, 6.665299999999985e-05, 6.683299999999878e-05, 6.691699999999967e-05, 6.668100000000246e-05, 6.663900000000028e-05, 6.720899999999863e-05, 6.738900000000103e-05, 6.719499999999906e-05, 6.701400000000066e-05, 6.70969999999986e-05, 6.683299999999878e-05, 6.67770000000005e-05, 6.700000000000109e-05, 6.663900000000028e-05, 6.725000000000134e-05, 6.70969999999986e-05, 6.716600000000045e-05, 6.687500000000096e-05, 6.75420000000003e-05, 6.6583999999998e-05, 6.683400000000173e-05, 6.70419999999998e-05, 6.745799999999941e-05, 6.719399999999959e-05, 6.692999999999977e-05, 6.72359999999983e-05, 6.69030000000001e-05, 6.688899999999706e-05, 6.681899999999921e-05, 6.745800000000288e-05, 6.662499999999724e-05, 6.738899999999756e-05, 6.708400000000198e-05, 6.691699999999967e-05, 6.663900000000028e-05, 6.749999999999812e-05, 6.667999999999952e-05, 6.668000000000299e-05, 6.661100000000114e-05, 6.662500000000071e-05, 6.712499999999774e-05, 6.737499999999799e-05, 6.737499999999799e-05, 6.715300000000035e-05, 6.709700000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:46:11.015" endtime="20201029 12:46:11.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.010" endtime="20201029 12:46:11.018"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.022" endtime="20201029 12:46:11.041"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.020" endtime="20201029 12:46:11.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.019" endtime="20201029 12:46:11.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.662" endtime="20201029 12:46:11.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:10.662" endtime="20201029 12:46:11.042"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.051" endtime="20201029 12:46:11.068"></status>
</kw>
<msg timestamp="20201029 12:46:11.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.049" endtime="20201029 12:46:11.069"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.070" endtime="20201029 12:46:11.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.072" endtime="20201029 12:46:11.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.047" endtime="20201029 12:46:11.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.045" endtime="20201029 12:46:11.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.081" endtime="20201029 12:46:11.367"></status>
</kw>
<msg timestamp="20201029 12:46:11.370" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.079" endtime="20201029 12:46:11.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019974472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020042236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.371" endtime="20201029 12:46:11.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.379" endtime="20201029 12:46:11.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.077" endtime="20201029 12:46:11.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.075" endtime="20201029 12:46:11.382"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.386" level="INFO">${RESULT} = [{'diff': 6.77640000000014e-05}, {'diff': 6.818100000000049e-05}, {'diff': 6.758299999999953e-05}, {'diff': 6.770799999999966e-05}, {'diff': 6.798600000000252e-05}, {'diff': 6.848599999999955e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:11.383" endtime="20201029 12:46:11.386"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:11.390" level="INFO">${ACCURACY} = {'diff': [6.77640000000014e-05, 6.818100000000049e-05, 6.758299999999953e-05, 6.770799999999966e-05, 6.798600000000252e-05, 6.848599999999955e-05, 6.797300000000242e-05, 6.85420000000013e-05, 6.797199...</msg>
<status status="PASS" starttime="20201029 12:46:11.387" endtime="20201029 12:46:11.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.394" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201029 12:46:11.393" endtime="20201029 12:46:11.395"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.397" level="INFO">VALUE: [6.77640000000014e-05, 6.818100000000049e-05, 6.758299999999953e-05, 6.770799999999966e-05, 6.798600000000252e-05, 6.848599999999955e-05, 6.797300000000242e-05, 6.85420000000013e-05, 6.797199999999948e-05, 6.766599999999748e-05, 6.779100000000107e-05, 6.770799999999966e-05, 6.845800000000041e-05, 6.813899999999831e-05, 6.848599999999955e-05, 6.769400000000009e-05, 6.813900000000178e-05, 6.813899999999831e-05, 6.82359999999993e-05, 6.832000000000019e-05, 6.80420000000008e-05, 6.791700000000067e-05, 6.834799999999933e-05, 6.808300000000003e-05, 6.822199999999973e-05, 6.77359999999988e-05, 6.770799999999966e-05, 6.819400000000059e-05, 6.783299999999978e-05, 6.797199999999948e-05, 6.765299999999738e-05, 6.826399999999844e-05, 6.784699999999935e-05, 6.80420000000008e-05, 6.85420000000013e-05, 6.826299999999896e-05, 6.802700000000175e-05, 6.818000000000102e-05, 6.822199999999973e-05, 6.806900000000046e-05, 6.77640000000014e-05, 6.802800000000123e-05, 6.762499999999824e-05, 6.811099999999917e-05, 6.822199999999973e-05, 6.808300000000003e-05, 6.813899999999831e-05, 6.829200000000105e-05, 6.840299999999813e-05, 6.7583999999999e-05]</msg>
<status status="PASS" starttime="20201029 12:46:11.395" endtime="20201029 12:46:11.397"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.391" endtime="20201029 12:46:11.398"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.402" endtime="20201029 12:46:11.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.400" endtime="20201029 12:46:11.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.399" endtime="20201029 12:46:11.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.043" endtime="20201029 12:46:11.422"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.043" endtime="20201029 12:46:11.423"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.431" endtime="20201029 12:46:11.452"></status>
</kw>
<msg timestamp="20201029 12:46:11.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.430" endtime="20201029 12:46:11.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.453" endtime="20201029 12:46:11.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.456" endtime="20201029 12:46:11.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.427" endtime="20201029 12:46:11.458"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.425" endtime="20201029 12:46:11.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.465" endtime="20201029 12:46:11.750"></status>
</kw>
<msg timestamp="20201029 12:46:11.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.463" endtime="20201029 12:46:11.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022670875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022739514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.755" endtime="20201029 12:46:11.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.763" endtime="20201029 12:46:11.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.461" endtime="20201029 12:46:11.765"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.459" endtime="20201029 12:46:11.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:11.770" level="INFO">${RESULT} = [{'diff': 6.863899999999881e-05}, {'diff': 6.865299999999838e-05}, {'diff': 6.887499999999949e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.874999999999937e-05}, {'diff': 6.863899999999881e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:11.766" endtime="20201029 12:46:11.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:11.774" level="INFO">${ACCURACY} = {'diff': [6.863899999999881e-05, 6.865299999999838e-05, 6.887499999999949e-05, 6.933300000000128e-05, 6.874999999999937e-05, 6.863899999999881e-05, 6.92360000000003e-05, 6.857000000000044e-05, 6.90410...</msg>
<status status="PASS" starttime="20201029 12:46:11.770" endtime="20201029 12:46:11.774"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.778" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201029 12:46:11.777" endtime="20201029 12:46:11.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.781" level="INFO">VALUE: [6.863899999999881e-05, 6.865299999999838e-05, 6.887499999999949e-05, 6.933300000000128e-05, 6.874999999999937e-05, 6.863899999999881e-05, 6.92360000000003e-05, 6.857000000000044e-05, 6.904100000000232e-05, 6.941599999999923e-05, 6.874999999999937e-05, 6.868099999999752e-05, 6.901400000000266e-05, 6.913900000000278e-05, 6.916699999999845e-05, 6.95420000000023e-05, 6.886099999999992e-05, 6.908300000000103e-05, 6.940199999999966e-05, 6.909800000000008e-05, 6.919500000000106e-05, 6.907000000000094e-05, 6.937499999999999e-05, 6.941599999999923e-05, 6.941599999999923e-05, 6.872200000000023e-05, 6.875000000000284e-05, 6.879200000000155e-05, 6.85970000000001e-05, 6.859699999999663e-05, 6.868100000000099e-05, 6.936100000000042e-05, 6.898600000000005e-05, 6.951399999999969e-05, 6.872200000000023e-05, 6.922299999999673e-05, 6.952799999999926e-05, 6.883300000000078e-05, 6.898600000000005e-05, 6.877800000000198e-05, 6.905500000000189e-05, 6.947200000000098e-05, 6.913899999999931e-05, 6.85970000000001e-05, 6.932000000000119e-05, 6.887499999999949e-05, 6.861099999999967e-05, 6.897299999999995e-05, 6.89169999999982e-05, 6.945800000000141e-05]</msg>
<status status="PASS" starttime="20201029 12:46:11.779" endtime="20201029 12:46:11.782"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.774" endtime="20201029 12:46:11.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:11.786" endtime="20201029 12:46:11.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.785" endtime="20201029 12:46:11.806"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.784" endtime="20201029 12:46:11.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.424" endtime="20201029 12:46:11.807"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.423" endtime="20201029 12:46:11.807"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.816" endtime="20201029 12:46:11.833"></status>
</kw>
<msg timestamp="20201029 12:46:11.834" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.814" endtime="20201029 12:46:11.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:11.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:11.835" endtime="20201029 12:46:11.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.837" endtime="20201029 12:46:11.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.811" endtime="20201029 12:46:11.839"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.809" endtime="20201029 12:46:11.839"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:11.846" endtime="20201029 12:46:12.133"></status>
</kw>
<msg timestamp="20201029 12:46:12.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:11.844" endtime="20201029 12:46:12.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019604111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.137" endtime="20201029 12:46:12.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.145" endtime="20201029 12:46:12.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.842" endtime="20201029 12:46:12.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.840" endtime="20201029 12:46:12.148"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.152" level="INFO">${RESULT} = [{'diff': 7.048600000000155e-05}, {'diff': 7.043099999999927e-05}, {'diff': 7.000000000000062e-05}, {'diff': 6.993099999999877e-05}, {'diff': 6.968100000000199e-05}, {'diff': 7.023599999999783e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:12.149" endtime="20201029 12:46:12.152"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:12.157" level="INFO">${ACCURACY} = {'diff': [7.048600000000155e-05, 7.043099999999927e-05, 7.000000000000062e-05, 6.993099999999877e-05, 6.968100000000199e-05, 7.023599999999783e-05, 7.015299999999988e-05, 6.988900000000006e-05, 7.0221...</msg>
<status status="PASS" starttime="20201029 12:46:12.153" endtime="20201029 12:46:12.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.161" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201029 12:46:12.160" endtime="20201029 12:46:12.162"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.164" level="INFO">VALUE: [7.048600000000155e-05, 7.043099999999927e-05, 7.000000000000062e-05, 6.993099999999877e-05, 6.968100000000199e-05, 7.023599999999783e-05, 7.015299999999988e-05, 6.988900000000006e-05, 7.022199999999826e-05, 6.990200000000016e-05, 7.054100000000035e-05, 6.981900000000221e-05, 7.020800000000216e-05, 6.988900000000006e-05, 6.955499999999892e-05, 6.995800000000191e-05, 7.004199999999933e-05, 6.97360000000008e-05, 7.038900000000056e-05, 7.033400000000176e-05, 7.032000000000219e-05, 6.981999999999822e-05, 6.998600000000105e-05, 7.02910000000001e-05, 7.023599999999783e-05, 7.002799999999976e-05, 7.044399999999937e-05, 7.015299999999988e-05, 7.004199999999933e-05, 6.965299999999938e-05, 7.050000000000112e-05, 6.97360000000008e-05, 7.001400000000019e-05, 6.980600000000212e-05, 6.97360000000008e-05, 7.022299999999773e-05, 6.957000000000144e-05, 7.027700000000053e-05, 7.040300000000013e-05, 7.041600000000023e-05, 7.034699999999838e-05, 6.96109999999972e-05, 7.043099999999927e-05, 7.013900000000031e-05, 6.97360000000008e-05, 6.963899999999981e-05, 7.027800000000001e-05, 7.036100000000142e-05, 6.966700000000242e-05, 7.020799999999869e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.162" endtime="20201029 12:46:12.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.158" endtime="20201029 12:46:12.165"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.169" endtime="20201029 12:46:12.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.167" endtime="20201029 12:46:12.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.166" endtime="20201029 12:46:12.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.808" endtime="20201029 12:46:12.189"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:11.807" endtime="20201029 12:46:12.190"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.198" endtime="20201029 12:46:12.215"></status>
</kw>
<msg timestamp="20201029 12:46:12.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.197" endtime="20201029 12:46:12.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.217" endtime="20201029 12:46:12.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.219" endtime="20201029 12:46:12.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.194" endtime="20201029 12:46:12.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.192" endtime="20201029 12:46:12.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.228" endtime="20201029 12:46:12.515"></status>
</kw>
<msg timestamp="20201029 12:46:12.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.227" endtime="20201029 12:46:12.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019709292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019780639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.520" endtime="20201029 12:46:12.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.528" endtime="20201029 12:46:12.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.224" endtime="20201029 12:46:12.530"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.222" endtime="20201029 12:46:12.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.535" level="INFO">${RESULT} = [{'diff': 7.134699999999938e-05}, {'diff': 7.070799999999919e-05}, {'diff': 7.075000000000137e-05}, {'diff': 7.098600000000205e-05}, {'diff': 7.063900000000081e-05}, {'diff': 7.080500000000017e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:12.532" endtime="20201029 12:46:12.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:12.539" level="INFO">${ACCURACY} = {'diff': [7.134699999999938e-05, 7.070799999999919e-05, 7.075000000000137e-05, 7.098600000000205e-05, 7.063900000000081e-05, 7.080500000000017e-05, 7.065199999999744e-05, 7.115300000000088e-05, 7.0888...</msg>
<status status="PASS" starttime="20201029 12:46:12.536" endtime="20201029 12:46:12.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.543" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201029 12:46:12.542" endtime="20201029 12:46:12.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.546" level="INFO">VALUE: [7.134699999999938e-05, 7.070799999999919e-05, 7.075000000000137e-05, 7.098600000000205e-05, 7.063900000000081e-05, 7.080500000000017e-05, 7.065199999999744e-05, 7.115300000000088e-05, 7.088899999999759e-05, 7.084699999999888e-05, 7.055499999999992e-05, 7.056900000000296e-05, 7.108299999999956e-05, 7.151400000000169e-05, 7.094399999999987e-05, 7.100000000000162e-05, 7.129200000000058e-05, 7.09170000000002e-05, 7.088900000000106e-05, 7.063799999999787e-05, 7.075000000000137e-05, 7.147199999999951e-05, 7.118000000000055e-05, 7.145799999999994e-05, 7.126400000000144e-05, 7.108299999999956e-05, 7.145799999999994e-05, 7.131999999999972e-05, 7.099999999999815e-05, 7.084699999999888e-05, 7.113899999999784e-05, 7.088900000000106e-05, 7.123599999999883e-05, 7.122200000000273e-05, 7.058399999999854e-05, 7.127800000000101e-05, 7.07499999999979e-05, 7.142999999999733e-05, 7.080500000000017e-05, 7.120799999999969e-05, 7.119400000000012e-05, 7.138900000000156e-05, 7.075000000000137e-05, 7.108300000000303e-05, 7.112500000000174e-05, 7.075000000000137e-05, 7.115300000000088e-05, 7.094399999999987e-05, 7.086099999999845e-05, 7.066600000000048e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.544" endtime="20201029 12:46:12.546"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.539" endtime="20201029 12:46:12.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.551" endtime="20201029 12:46:12.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.549" endtime="20201029 12:46:12.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.548" endtime="20201029 12:46:12.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.190" endtime="20201029 12:46:12.571"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.190" endtime="20201029 12:46:12.571"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.580" endtime="20201029 12:46:12.598"></status>
</kw>
<msg timestamp="20201029 12:46:12.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.578" endtime="20201029 12:46:12.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.600" endtime="20201029 12:46:12.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.602" endtime="20201029 12:46:12.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.576" endtime="20201029 12:46:12.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.574" endtime="20201029 12:46:12.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.611" endtime="20201029 12:46:12.897"></status>
</kw>
<msg timestamp="20201029 12:46:12.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.610" endtime="20201029 12:46:12.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020318431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020390861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.901" endtime="20201029 12:46:12.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.909" endtime="20201029 12:46:12.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.607" endtime="20201029 12:46:12.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.606" endtime="20201029 12:46:12.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:12.916" level="INFO">${RESULT} = [{'diff': 7.242999999999833e-05}, {'diff': 7.190299999999816e-05}, {'diff': 7.159699999999963e-05}, {'diff': 7.204200000000133e-05}, {'diff': 7.159699999999963e-05}, {'diff': 7.222200000000026e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:12.913" endtime="20201029 12:46:12.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:12.920" level="INFO">${ACCURACY} = {'diff': [7.242999999999833e-05, 7.190299999999816e-05, 7.159699999999963e-05, 7.204200000000133e-05, 7.159699999999963e-05, 7.222200000000026e-05, 7.24309999999978e-05, 7.177700000000203e-05, 7.20420...</msg>
<status status="PASS" starttime="20201029 12:46:12.917" endtime="20201029 12:46:12.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.925" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201029 12:46:12.924" endtime="20201029 12:46:12.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.927" level="INFO">VALUE: [7.242999999999833e-05, 7.190299999999816e-05, 7.159699999999963e-05, 7.204200000000133e-05, 7.159699999999963e-05, 7.222200000000026e-05, 7.24309999999978e-05, 7.177700000000203e-05, 7.204200000000133e-05, 7.155500000000092e-05, 7.229099999999863e-05, 7.24309999999978e-05, 7.233300000000081e-05, 7.229199999999811e-05, 7.222200000000026e-05, 7.190299999999816e-05, 7.247200000000051e-05, 7.218099999999755e-05, 7.168100000000052e-05, 7.236199999999943e-05, 7.188899999999859e-05, 7.195800000000044e-05, 7.248600000000008e-05, 7.173599999999933e-05, 7.204099999999838e-05, 7.202800000000176e-05, 7.191599999999826e-05, 7.231900000000124e-05, 7.244500000000084e-05, 7.247200000000051e-05, 7.168100000000052e-05, 7.213900000000231e-05, 7.218100000000102e-05, 7.187499999999902e-05, 7.173700000000227e-05, 7.205499999999795e-05, 7.173599999999933e-05, 7.216600000000198e-05, 7.230500000000167e-05, 7.220800000000069e-05, 7.17360000000028e-05, 7.254199999999836e-05, 7.248600000000008e-05, 7.208400000000004e-05, 7.175000000000237e-05, 7.179199999999761e-05, 7.208400000000004e-05, 7.258300000000106e-05, 7.170899999999966e-05, 7.255500000000192e-05]</msg>
<status status="PASS" starttime="20201029 12:46:12.926" endtime="20201029 12:46:12.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.921" endtime="20201029 12:46:12.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:12.933" endtime="20201029 12:46:12.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.931" endtime="20201029 12:46:12.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.930" endtime="20201029 12:46:12.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.572" endtime="20201029 12:46:12.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.572" endtime="20201029 12:46:12.954"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.962" endtime="20201029 12:46:12.980"></status>
</kw>
<msg timestamp="20201029 12:46:12.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.961" endtime="20201029 12:46:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:12.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:12.981" endtime="20201029 12:46:12.983"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.984" endtime="20201029 12:46:12.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.958" endtime="20201029 12:46:12.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.956" endtime="20201029 12:46:12.986"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:12.993" endtime="20201029 12:46:13.279"></status>
</kw>
<msg timestamp="20201029 12:46:13.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019334819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:12.991" endtime="20201029 12:46:13.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019334819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019408292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.284" endtime="20201029 12:46:13.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.292" endtime="20201029 12:46:13.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.989" endtime="20201029 12:46:13.294"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.987" endtime="20201029 12:46:13.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.298" level="INFO">${RESULT} = [{'diff': 7.347300000000098e-05}, {'diff': 7.30560000000019e-05}, {'diff': 7.316699999999898e-05}, {'diff': 7.25690000000015e-05}, {'diff': 7.281900000000174e-05}, {'diff': 7.333299999999834e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:13.295" endtime="20201029 12:46:13.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:13.303" level="INFO">${ACCURACY} = {'diff': [7.347300000000098e-05, 7.30560000000019e-05, 7.316699999999898e-05, 7.25690000000015e-05, 7.281900000000174e-05, 7.333299999999834e-05, 7.273600000000033e-05, 7.334700000000138e-05, 7.336100...</msg>
<status status="PASS" starttime="20201029 12:46:13.299" endtime="20201029 12:46:13.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.308" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201029 12:46:13.307" endtime="20201029 12:46:13.308"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.310" level="INFO">VALUE: [7.347300000000098e-05, 7.30560000000019e-05, 7.316699999999898e-05, 7.25690000000015e-05, 7.281900000000174e-05, 7.333299999999834e-05, 7.273600000000033e-05, 7.334700000000138e-05, 7.336100000000095e-05, 7.290299999999916e-05, 7.29170000000022e-05, 7.280599999999818e-05, 7.291599999999926e-05, 7.340299999999966e-05, 7.331900000000224e-05, 7.31249999999968e-05, 7.29439999999984e-05, 7.327799999999954e-05, 7.304100000000285e-05, 7.272200000000076e-05, 7.258300000000106e-05, 7.279200000000208e-05, 7.337500000000052e-05, 7.320800000000169e-05, 7.341699999999923e-05, 7.300000000000015e-05, 7.26110000000002e-05, 7.313899999999984e-05, 7.31110000000007e-05, 7.319399999999865e-05, 7.256899999999802e-05, 7.280500000000217e-05, 7.269399999999815e-05, 7.341599999999976e-05, 7.255500000000192e-05, 7.309800000000061e-05, 7.276399999999947e-05, 7.287500000000002e-05, 7.300000000000015e-05, 7.268100000000152e-05, 7.291699999999873e-05, 7.337500000000052e-05, 7.350000000000065e-05, 7.284699999999741e-05, 7.301399999999972e-05, 7.273600000000033e-05, 7.270800000000119e-05, 7.316699999999898e-05, 7.272200000000076e-05, 7.308300000000156e-05]</msg>
<status status="PASS" starttime="20201029 12:46:13.309" endtime="20201029 12:46:13.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.304" endtime="20201029 12:46:13.312"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.315" endtime="20201029 12:46:13.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.314" endtime="20201029 12:46:13.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.312" endtime="20201029 12:46:13.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.955" endtime="20201029 12:46:13.336"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:12.954" endtime="20201029 12:46:13.336"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.344" endtime="20201029 12:46:13.361"></status>
</kw>
<msg timestamp="20201029 12:46:13.362" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.343" endtime="20201029 12:46:13.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.363" endtime="20201029 12:46:13.365"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.365" endtime="20201029 12:46:13.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.340" endtime="20201029 12:46:13.367"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.338" endtime="20201029 12:46:13.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.374" endtime="20201029 12:46:13.661"></status>
</kw>
<msg timestamp="20201029 12:46:13.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.373" endtime="20201029 12:46:13.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.673" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019545764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019620278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.666" endtime="20201029 12:46:13.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.674" endtime="20201029 12:46:13.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.370" endtime="20201029 12:46:13.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.369" endtime="20201029 12:46:13.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:13.680" level="INFO">${RESULT} = [{'diff': 7.451400000000122e-05}, {'diff': 7.383400000000179e-05}, {'diff': 7.357000000000197e-05}, {'diff': 7.422300000000173e-05}, {'diff': 7.419399999999965e-05}, {'diff': 7.384699999999841e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:13.677" endtime="20201029 12:46:13.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:13.684" level="INFO">${ACCURACY} = {'diff': [7.451400000000122e-05, 7.383400000000179e-05, 7.357000000000197e-05, 7.422300000000173e-05, 7.419399999999965e-05, 7.384699999999841e-05, 7.408300000000256e-05, 7.397200000000201e-05, 7.3707...</msg>
<status status="PASS" starttime="20201029 12:46:13.681" endtime="20201029 12:46:13.685"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.689" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201029 12:46:13.688" endtime="20201029 12:46:13.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.691" level="INFO">VALUE: [7.451400000000122e-05, 7.383400000000179e-05, 7.357000000000197e-05, 7.422300000000173e-05, 7.419399999999965e-05, 7.384699999999841e-05, 7.408300000000256e-05, 7.397200000000201e-05, 7.370799999999872e-05, 7.44029999999972e-05, 7.447200000000251e-05, 7.387500000000102e-05, 7.402800000000029e-05, 7.373600000000133e-05, 7.398599999999811e-05, 7.370900000000166e-05, 7.42370000000013e-05, 7.423599999999836e-05, 7.386100000000145e-05, 7.363900000000034e-05, 7.401400000000072e-05, 7.423599999999836e-05, 7.451400000000122e-05, 7.433299999999934e-05, 7.370899999999819e-05, 7.381999999999875e-05, 7.380600000000265e-05, 7.397199999999854e-05, 7.415299999999694e-05, 7.433399999999882e-05, 7.420799999999922e-05, 7.387500000000102e-05, 7.397199999999854e-05, 7.359700000000163e-05, 7.437500000000152e-05, 7.365299999999991e-05, 7.420799999999922e-05, 7.401400000000072e-05, 7.443000000000033e-05, 7.402800000000029e-05, 7.448600000000208e-05, 7.379100000000013e-05, 7.387500000000102e-05, 7.419399999999965e-05, 7.447199999999904e-05, 7.377800000000004e-05, 7.391699999999973e-05, 7.376400000000047e-05, 7.39439999999994e-05, 7.397199999999854e-05]</msg>
<status status="PASS" starttime="20201029 12:46:13.690" endtime="20201029 12:46:13.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.685" endtime="20201029 12:46:13.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:13.696" endtime="20201029 12:46:13.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.695" endtime="20201029 12:46:13.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.694" endtime="20201029 12:46:13.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.337" endtime="20201029 12:46:13.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.336" endtime="20201029 12:46:13.717"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.726" endtime="20201029 12:46:13.744"></status>
</kw>
<msg timestamp="20201029 12:46:13.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.724" endtime="20201029 12:46:13.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:13.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:13.745" endtime="20201029 12:46:13.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.748" endtime="20201029 12:46:13.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.722" endtime="20201029 12:46:13.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.720" endtime="20201029 12:46:13.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:13.757" endtime="20201029 12:46:14.043"></status>
</kw>
<msg timestamp="20201029 12:46:14.046" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:13.756" endtime="20201029 12:46:14.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020370069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020445069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.047" endtime="20201029 12:46:14.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.055" endtime="20201029 12:46:14.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.753" endtime="20201029 12:46:14.057"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.751" endtime="20201029 12:46:14.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.062" level="INFO">${RESULT} = [{'diff': 7.499999999999868e-05}, {'diff': 7.454200000000036e-05}, {'diff': 7.48050000000007e-05}, {'diff': 7.552800000000179e-05}, {'diff': 7.54440000000009e-05}, {'diff': 7.524999999999893e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:14.059" endtime="20201029 12:46:14.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:14.066" level="INFO">${ACCURACY} = {'diff': [7.499999999999868e-05, 7.454200000000036e-05, 7.48050000000007e-05, 7.552800000000179e-05, 7.54440000000009e-05, 7.524999999999893e-05, 7.533300000000034e-05, 7.458399999999907e-05, 7.455599...</msg>
<status status="PASS" starttime="20201029 12:46:14.063" endtime="20201029 12:46:14.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.070" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201029 12:46:14.069" endtime="20201029 12:46:14.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.073" level="INFO">VALUE: [7.499999999999868e-05, 7.454200000000036e-05, 7.48050000000007e-05, 7.552800000000179e-05, 7.54440000000009e-05, 7.524999999999893e-05, 7.533300000000034e-05, 7.458399999999907e-05, 7.455599999999993e-05, 7.466700000000048e-05, 7.504200000000086e-05, 7.46249999999983e-05, 7.479200000000061e-05, 7.46379999999984e-05, 7.531900000000077e-05, 7.515299999999794e-05, 7.495899999999944e-05, 7.529200000000111e-05, 7.45829999999996e-05, 7.53890000000021e-05, 7.454200000000036e-05, 7.481999999999975e-05, 7.509699999999966e-05, 7.544500000000037e-05, 7.49029999999977e-05, 7.538899999999862e-05, 7.497199999999954e-05, 7.524999999999893e-05, 7.527800000000154e-05, 7.522199999999979e-05, 7.541600000000176e-05, 7.469400000000015e-05, 7.54029999999982e-05, 7.477800000000104e-05, 7.4763999999998e-05, 7.516700000000098e-05, 7.488799999999865e-05, 7.536200000000243e-05, 7.463800000000187e-05, 7.501299999999878e-05, 7.493000000000083e-05, 7.547200000000004e-05, 7.470799999999972e-05, 7.520800000000022e-05, 7.498600000000258e-05, 7.530600000000068e-05, 7.468100000000005e-05, 7.527799999999807e-05, 7.551399999999875e-05, 7.470899999999919e-05]</msg>
<status status="PASS" starttime="20201029 12:46:14.071" endtime="20201029 12:46:14.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.067" endtime="20201029 12:46:14.080"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.084" endtime="20201029 12:46:14.103"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.082" endtime="20201029 12:46:14.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.081" endtime="20201029 12:46:14.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.718" endtime="20201029 12:46:14.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:13.717" endtime="20201029 12:46:14.104"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.113" endtime="20201029 12:46:14.131"></status>
</kw>
<msg timestamp="20201029 12:46:14.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.112" endtime="20201029 12:46:14.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.132" endtime="20201029 12:46:14.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.135" endtime="20201029 12:46:14.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.109" endtime="20201029 12:46:14.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.107" endtime="20201029 12:46:14.137"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.144" endtime="20201029 12:46:14.430"></status>
</kw>
<msg timestamp="20201029 12:46:14.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:14.142" endtime="20201029 12:46:14.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019484194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01956, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201029 12:46:14.434" endtime="20201029 12:46:14.441"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.442" endtime="20201029 12:46:14.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.140" endtime="20201029 12:46:14.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.138" endtime="20201029 12:46:14.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.449" level="INFO">${RESULT} = [{'diff': 7.580600000000118e-05}, {'diff': 7.618099999999808e-05}, {'diff': 7.629199999999864e-05}, {'diff': 7.647199999999757e-05}, {'diff': 7.605599999999796e-05}, {'diff': 7.617999999999861e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:14.445" endtime="20201029 12:46:14.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:14.454" level="INFO">${ACCURACY} = {'diff': [7.580600000000118e-05, 7.618099999999808e-05, 7.629199999999864e-05, 7.647199999999757e-05, 7.605599999999796e-05, 7.617999999999861e-05, 7.587499999999955e-05, 7.62769999999996e-05, 7.56530...</msg>
<status status="PASS" starttime="20201029 12:46:14.450" endtime="20201029 12:46:14.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.458" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201029 12:46:14.457" endtime="20201029 12:46:14.458"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.460" level="INFO">VALUE: [7.580600000000118e-05, 7.618099999999808e-05, 7.629199999999864e-05, 7.647199999999757e-05, 7.605599999999796e-05, 7.617999999999861e-05, 7.587499999999955e-05, 7.62769999999996e-05, 7.565300000000191e-05, 7.640199999999972e-05, 7.605500000000195e-05, 7.566700000000148e-05, 7.573599999999986e-05, 7.62639999999995e-05, 7.569500000000062e-05, 7.654199999999889e-05, 7.622200000000079e-05, 7.563900000000234e-05, 7.612500000000327e-05, 7.626300000000003e-05, 7.566599999999854e-05, 7.619399999999818e-05, 7.602799999999882e-05, 7.616600000000251e-05, 7.617999999999861e-05, 7.55969999999967e-05, 7.583299999999737e-05, 7.55830000000006e-05, 7.652799999999932e-05, 7.644500000000137e-05, 7.623600000000036e-05, 7.580600000000118e-05, 7.643000000000233e-05, 7.57500000000029e-05, 7.58050000000017e-05, 7.637500000000005e-05, 7.581900000000127e-05, 7.640300000000266e-05, 7.591699999999826e-05, 7.627799999999907e-05, 7.616700000000198e-05, 7.566699999999801e-05, 7.626400000000297e-05, 7.634800000000039e-05, 7.599999999999968e-05, 7.650000000000018e-05, 7.597200000000054e-05, 7.595800000000097e-05, 7.595800000000097e-05, 7.631900000000177e-05]</msg>
<status status="PASS" starttime="20201029 12:46:14.459" endtime="20201029 12:46:14.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.455" endtime="20201029 12:46:14.462"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.466" endtime="20201029 12:46:14.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.464" endtime="20201029 12:46:14.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.463" endtime="20201029 12:46:14.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.105" endtime="20201029 12:46:14.486"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.105" endtime="20201029 12:46:14.486"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.495" endtime="20201029 12:46:14.513"></status>
</kw>
<msg timestamp="20201029 12:46:14.513" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.493" endtime="20201029 12:46:14.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.515" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.514" endtime="20201029 12:46:14.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.517" endtime="20201029 12:46:14.518"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.491" endtime="20201029 12:46:14.519"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.489" endtime="20201029 12:46:14.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.525" endtime="20201029 12:46:14.812"></status>
</kw>
<msg timestamp="20201029 12:46:14.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.524" endtime="20201029 12:46:14.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019949403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:14.816" endtime="20201029 12:46:14.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.824" endtime="20201029 12:46:14.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.521" endtime="20201029 12:46:14.826"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.520" endtime="20201029 12:46:14.827"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:14.831" level="INFO">${RESULT} = [{'diff': 7.711100000000123e-05}, {'diff': 7.722199999999832e-05}, {'diff': 7.720899999999822e-05}, {'diff': 7.750000000000118e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.715200000000047e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:14.828" endtime="20201029 12:46:14.831"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:14.835" level="INFO">${ACCURACY} = {'diff': [7.711100000000123e-05, 7.722199999999832e-05, 7.720899999999822e-05, 7.750000000000118e-05, 7.72640000000005e-05, 7.715200000000047e-05, 7.715200000000047e-05, 7.666599999999954e-05, 7.74299...</msg>
<status status="PASS" starttime="20201029 12:46:14.832" endtime="20201029 12:46:14.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.839" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201029 12:46:14.838" endtime="20201029 12:46:14.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.842" level="INFO">VALUE: [7.711100000000123e-05, 7.722199999999832e-05, 7.720899999999822e-05, 7.750000000000118e-05, 7.72640000000005e-05, 7.715200000000047e-05, 7.715200000000047e-05, 7.666599999999954e-05, 7.742999999999986e-05, 7.688900000000012e-05, 7.722199999999832e-05, 7.656900000000202e-05, 7.72640000000005e-05, 7.682000000000175e-05, 7.745899999999847e-05, 7.724999999999746e-05, 7.705599999999896e-05, 7.662499999999683e-05, 7.690200000000022e-05, 7.733300000000234e-05, 7.706899999999905e-05, 7.661100000000073e-05, 7.700000000000068e-05, 7.688900000000012e-05, 7.65700000000015e-05, 7.704199999999939e-05, 7.747300000000151e-05, 7.718100000000255e-05, 7.727800000000007e-05, 7.68189999999988e-05, 7.713900000000037e-05, 7.715200000000047e-05, 7.733299999999887e-05, 7.680499999999923e-05, 7.704199999999939e-05, 7.667999999999911e-05, 7.683300000000184e-05, 7.672199999999782e-05, 7.713900000000037e-05, 7.691700000000273e-05, 7.69310000000023e-05, 7.720800000000222e-05, 7.694500000000187e-05, 7.658299999999812e-05, 7.708299999999862e-05, 7.748599999999814e-05, 7.750000000000118e-05, 7.751400000000075e-05, 7.700000000000068e-05, 7.652799999999932e-05]</msg>
<status status="PASS" starttime="20201029 12:46:14.840" endtime="20201029 12:46:14.843"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.836" endtime="20201029 12:46:14.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:14.847" endtime="20201029 12:46:14.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.845" endtime="20201029 12:46:14.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.844" endtime="20201029 12:46:14.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.487" endtime="20201029 12:46:14.867"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.487" endtime="20201029 12:46:14.867"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.876" endtime="20201029 12:46:14.897"></status>
</kw>
<msg timestamp="20201029 12:46:14.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.875" endtime="20201029 12:46:14.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:14.900" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:14.898" endtime="20201029 12:46:14.900"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.901" endtime="20201029 12:46:14.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.872" endtime="20201029 12:46:14.904"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.870" endtime="20201029 12:46:14.904"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:14.911" endtime="20201029 12:46:15.197"></status>
</kw>
<msg timestamp="20201029 12:46:15.200" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:14.909" endtime="20201029 12:46:15.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022712, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022790167, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:15.202" endtime="20201029 12:46:15.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.210" endtime="20201029 12:46:15.211"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.907" endtime="20201029 12:46:15.212"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.905" endtime="20201029 12:46:15.212"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.216" level="INFO">${RESULT} = [{'diff': 7.816700000000051e-05}, {'diff': 7.823599999999889e-05}, {'diff': 7.820899999999922e-05}, {'diff': 7.761199999999774e-05}, {'diff': 7.798600000000211e-05}, {'diff': 7.788799999999818e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:15.213" endtime="20201029 12:46:15.216"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:15.220" level="INFO">${ACCURACY} = {'diff': [7.816700000000051e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.761199999999774e-05, 7.798600000000211e-05, 7.788799999999818e-05, 7.770799999999925e-05, 7.837499999999858e-05, 7.8083...</msg>
<status status="PASS" starttime="20201029 12:46:15.217" endtime="20201029 12:46:15.221"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.225" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201029 12:46:15.224" endtime="20201029 12:46:15.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.227" level="INFO">VALUE: [7.816700000000051e-05, 7.823599999999889e-05, 7.820899999999922e-05, 7.761199999999774e-05, 7.798600000000211e-05, 7.788799999999818e-05, 7.770799999999925e-05, 7.837499999999858e-05, 7.80830000000031e-05, 7.76389999999974e-05, 7.76250000000013e-05, 7.770799999999925e-05, 7.820899999999922e-05, 7.855600000000046e-05, 7.766700000000001e-05, 7.825000000000193e-05, 7.797199999999907e-05, 7.788799999999818e-05, 7.8151999999998e-05, 7.82909999999977e-05, 7.847199999999957e-05, 7.833299999999987e-05, 7.765300000000044e-05, 7.837499999999858e-05, 7.787500000000155e-05, 7.763900000000087e-05, 7.768099999999958e-05, 7.784800000000189e-05, 7.793000000000036e-05, 7.76389999999974e-05, 7.837499999999858e-05, 7.841600000000129e-05, 7.798599999999864e-05, 7.783299999999937e-05, 7.820799999999975e-05, 7.811099999999876e-05, 7.851399999999828e-05, 7.795900000000244e-05, 7.779200000000014e-05, 7.798600000000211e-05, 7.851399999999828e-05, 7.772300000000176e-05, 7.82640000000015e-05, 7.848599999999914e-05, 7.824999999999846e-05, 7.813900000000137e-05, 7.797199999999907e-05, 7.79579999999995e-05, 7.829200000000064e-05, 7.823599999999889e-05]</msg>
<status status="PASS" starttime="20201029 12:46:15.226" endtime="20201029 12:46:15.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.221" endtime="20201029 12:46:15.229"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.233" endtime="20201029 12:46:15.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.232" endtime="20201029 12:46:15.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.230" endtime="20201029 12:46:15.253"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.868" endtime="20201029 12:46:15.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:14.868" endtime="20201029 12:46:15.254"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.262" endtime="20201029 12:46:15.280"></status>
</kw>
<msg timestamp="20201029 12:46:15.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.261" endtime="20201029 12:46:15.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.282" endtime="20201029 12:46:15.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.284" endtime="20201029 12:46:15.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.258" endtime="20201029 12:46:15.286"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.256" endtime="20201029 12:46:15.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.293" endtime="20201029 12:46:15.580"></status>
</kw>
<msg timestamp="20201029 12:46:15.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:15.292" endtime="20201029 12:46:15.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582222, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:15.585" endtime="20201029 12:46:15.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.593" endtime="20201029 12:46:15.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.289" endtime="20201029 12:46:15.595"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.287" endtime="20201029 12:46:15.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.600" level="INFO">${RESULT} = [{'diff': 7.922200000000032e-05}, {'diff': 7.86389999999984e-05}, {'diff': 7.872199999999982e-05}, {'diff': 7.866599999999807e-05}, {'diff': 7.855600000000046e-05}, {'diff': 7.929199999999817e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:15.596" endtime="20201029 12:46:15.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:15.605" level="INFO">${ACCURACY} = {'diff': [7.922200000000032e-05, 7.86389999999984e-05, 7.872199999999982e-05, 7.866599999999807e-05, 7.855600000000046e-05, 7.929199999999817e-05, 7.870800000000025e-05, 7.90970000000002e-05, 7.908400...</msg>
<status status="PASS" starttime="20201029 12:46:15.601" endtime="20201029 12:46:15.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.609" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201029 12:46:15.608" endtime="20201029 12:46:15.609"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.612" level="INFO">VALUE: [7.922200000000032e-05, 7.86389999999984e-05, 7.872199999999982e-05, 7.866599999999807e-05, 7.855600000000046e-05, 7.929199999999817e-05, 7.870800000000025e-05, 7.90970000000002e-05, 7.90840000000001e-05, 7.949999999999971e-05, 7.905599999999749e-05, 7.895899999999997e-05, 7.873599999999939e-05, 7.899999999999921e-05, 7.913900000000237e-05, 7.922200000000032e-05, 7.938899999999915e-05, 7.936100000000001e-05, 7.89580000000005e-05, 7.86250000000023e-05, 7.882000000000028e-05, 7.930600000000121e-05, 7.86389999999984e-05, 7.948699999999961e-05, 7.868100000000058e-05, 7.933300000000088e-05, 7.894400000000093e-05, 7.901399999999878e-05, 7.917999999999814e-05, 7.876399999999853e-05, 7.904199999999792e-05, 7.902800000000182e-05, 7.879200000000114e-05, 7.909799999999967e-05, 7.899999999999921e-05, 7.938899999999915e-05, 7.945900000000047e-05, 7.92909999999987e-05, 7.870800000000025e-05, 7.868000000000111e-05, 7.869400000000068e-05, 7.8764000000002e-05, 7.897200000000007e-05, 7.898599999999964e-05, 7.94450000000009e-05, 7.92229999999998e-05, 7.898599999999964e-05, 7.945900000000047e-05, 7.954099999999895e-05, 7.890199999999875e-05]</msg>
<status status="PASS" starttime="20201029 12:46:15.610" endtime="20201029 12:46:15.612"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.605" endtime="20201029 12:46:15.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.616" endtime="20201029 12:46:15.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.615" endtime="20201029 12:46:15.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.614" endtime="20201029 12:46:15.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.255" endtime="20201029 12:46:15.637"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.254" endtime="20201029 12:46:15.637"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.646" endtime="20201029 12:46:15.663"></status>
</kw>
<msg timestamp="20201029 12:46:15.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.644" endtime="20201029 12:46:15.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:15.665" endtime="20201029 12:46:15.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.667" endtime="20201029 12:46:15.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.642" endtime="20201029 12:46:15.669"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.640" endtime="20201029 12:46:15.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.676" endtime="20201029 12:46:15.963"></status>
</kw>
<msg timestamp="20201029 12:46:15.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.675" endtime="20201029 12:46:15.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019322194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019402472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:15.967" endtime="20201029 12:46:15.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:15.975" endtime="20201029 12:46:15.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.672" endtime="20201029 12:46:15.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.670" endtime="20201029 12:46:15.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:15.982" level="INFO">${RESULT} = [{'diff': 8.02779999999996e-05}, {'diff': 8.040299999999972e-05}, {'diff': 8.051400000000028e-05}, {'diff': 8.045799999999853e-05}, {'diff': 7.979100000000267e-05}, {'diff': 8.005500000000249e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:15.979" endtime="20201029 12:46:15.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:15.986" level="INFO">${ACCURACY} = {'diff': [8.02779999999996e-05, 8.040299999999972e-05, 8.051400000000028e-05, 8.045799999999853e-05, 7.979100000000267e-05, 8.005500000000249e-05, 8.008299999999816e-05, 8.016699999999904e-05, 8.03890...</msg>
<status status="PASS" starttime="20201029 12:46:15.983" endtime="20201029 12:46:15.986"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.990" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201029 12:46:15.989" endtime="20201029 12:46:15.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:15.993" level="INFO">VALUE: [8.02779999999996e-05, 8.040299999999972e-05, 8.051400000000028e-05, 8.045799999999853e-05, 7.979100000000267e-05, 8.005500000000249e-05, 8.008299999999816e-05, 8.016699999999904e-05, 8.038900000000015e-05, 8.020799999999828e-05, 7.963900000000287e-05, 7.995900000000097e-05, 7.979100000000267e-05, 8.018099999999861e-05, 7.99169999999988e-05, 8.004199999999892e-05, 7.962499999999983e-05, 8.005500000000249e-05, 8.022200000000132e-05, 7.965299999999897e-05, 7.97779999999991e-05, 7.972200000000082e-05, 8.034699999999798e-05, 7.984699999999748e-05, 8.030599999999874e-05, 7.955600000000146e-05, 8.032000000000178e-05, 7.973699999999986e-05, 8.0152e-05, 8.016599999999957e-05, 7.987500000000008e-05, 7.98329999999979e-05, 8.047200000000157e-05, 7.987500000000008e-05, 8.043099999999886e-05, 8.045900000000147e-05, 8.002799999999935e-05, 8.0458999999998e-05, 8.020900000000122e-05, 7.983300000000138e-05, 7.990199999999975e-05, 8.012499999999687e-05, 8.038900000000015e-05, 7.987500000000008e-05, 7.99719999999976e-05, 8.045799999999853e-05, 7.972200000000082e-05, 7.962499999999983e-05, 8.005600000000196e-05, 7.959800000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:46:15.991" endtime="20201029 12:46:15.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.987" endtime="20201029 12:46:15.994"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:15.998" endtime="20201029 12:46:16.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.996" endtime="20201029 12:46:16.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.995" endtime="20201029 12:46:16.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.638" endtime="20201029 12:46:16.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:15.637" endtime="20201029 12:46:16.019"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.027" endtime="20201029 12:46:16.045"></status>
</kw>
<msg timestamp="20201029 12:46:16.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.026" endtime="20201029 12:46:16.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.046" endtime="20201029 12:46:16.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.049" endtime="20201029 12:46:16.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.023" endtime="20201029 12:46:16.051"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.021" endtime="20201029 12:46:16.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.058" endtime="20201029 12:46:16.345"></status>
</kw>
<msg timestamp="20201029 12:46:16.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020581208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.056" endtime="20201029 12:46:16.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020581208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020662764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.349" endtime="20201029 12:46:16.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.357" endtime="20201029 12:46:16.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.054" endtime="20201029 12:46:16.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.052" endtime="20201029 12:46:16.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.364" level="INFO">${RESULT} = [{'diff': 8.155599999999999e-05}, {'diff': 8.137500000000158e-05}, {'diff': 8.122299999999832e-05}, {'diff': 8.105599999999949e-05}, {'diff': 8.106999999999906e-05}, {'diff': 8.088800000000118e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:16.361" endtime="20201029 12:46:16.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:16.368" level="INFO">${ACCURACY} = {'diff': [8.155599999999999e-05, 8.137500000000158e-05, 8.122299999999832e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.088800000000118e-05, 8.06390000000004e-05, 8.091600000000032e-05, 8.11109...</msg>
<status status="PASS" starttime="20201029 12:46:16.365" endtime="20201029 12:46:16.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.372" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201029 12:46:16.371" endtime="20201029 12:46:16.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.375" level="INFO">VALUE: [8.155599999999999e-05, 8.137500000000158e-05, 8.122299999999832e-05, 8.105599999999949e-05, 8.106999999999906e-05, 8.088800000000118e-05, 8.06390000000004e-05, 8.091600000000032e-05, 8.11109999999983e-05, 8.08190000000028e-05, 8.151400000000128e-05, 8.06390000000004e-05, 8.119499999999918e-05, 8.086099999999805e-05, 8.070900000000172e-05, 8.09169999999998e-05, 8.10979999999982e-05, 8.143099999999986e-05, 8.070799999999878e-05, 8.084700000000195e-05, 8.11390000000009e-05, 8.055499999999952e-05, 8.151400000000128e-05, 8.07780000000001e-05, 8.088900000000065e-05, 8.125000000000146e-05, 8.08329999999989e-05, 8.095900000000197e-05, 8.124999999999799e-05, 8.095900000000197e-05, 8.065299999999997e-05, 8.129099999999723e-05, 8.075000000000096e-05, 8.101399999999731e-05, 8.145799999999953e-05, 8.11390000000009e-05, 8.094399999999946e-05, 8.118099999999961e-05, 8.08329999999989e-05, 8.116700000000004e-05, 8.08190000000028e-05, 8.062499999999737e-05, 8.13329999999994e-05, 8.09580000000025e-05, 8.061100000000126e-05, 8.108299999999916e-05, 8.086100000000151e-05, 8.120800000000275e-05, 8.088900000000065e-05, 8.098599999999817e-05]</msg>
<status status="PASS" starttime="20201029 12:46:16.373" endtime="20201029 12:46:16.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.369" endtime="20201029 12:46:16.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.381" endtime="20201029 12:46:16.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.379" endtime="20201029 12:46:16.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.378" endtime="20201029 12:46:16.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.019" endtime="20201029 12:46:16.401"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.019" endtime="20201029 12:46:16.402"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.410" endtime="20201029 12:46:16.429"></status>
</kw>
<msg timestamp="20201029 12:46:16.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.408" endtime="20201029 12:46:16.430"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.431" endtime="20201029 12:46:16.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.433" endtime="20201029 12:46:16.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.406" endtime="20201029 12:46:16.435"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.404" endtime="20201029 12:46:16.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.442" endtime="20201029 12:46:16.728"></status>
</kw>
<msg timestamp="20201029 12:46:16.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.441" endtime="20201029 12:46:16.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019556681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.732" endtime="20201029 12:46:16.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.740" endtime="20201029 12:46:16.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.438" endtime="20201029 12:46:16.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.436" endtime="20201029 12:46:16.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:16.747" level="INFO">${RESULT} = [{'diff': 8.194499999999993e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.183399999999938e-05}, {'diff': 8.165300000000097e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:16.744" endtime="20201029 12:46:16.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:16.752" level="INFO">${ACCURACY} = {'diff': [8.194499999999993e-05, 8.170799999999978e-05, 8.238899999999869e-05, 8.238899999999869e-05, 8.183399999999938e-05, 8.165300000000097e-05, 8.237499999999912e-05, 8.206900000000059e-05, 8.2026...</msg>
<status status="PASS" starttime="20201029 12:46:16.748" endtime="20201029 12:46:16.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.756" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201029 12:46:16.755" endtime="20201029 12:46:16.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.759" level="INFO">VALUE: [8.194499999999993e-05, 8.170799999999978e-05, 8.238899999999869e-05, 8.238899999999869e-05, 8.183399999999938e-05, 8.165300000000097e-05, 8.237499999999912e-05, 8.206900000000059e-05, 8.20269999999984e-05, 8.188899999999819e-05, 8.237499999999912e-05, 8.201399999999831e-05, 8.155599999999999e-05, 8.190300000000122e-05, 8.170899999999925e-05, 8.169499999999968e-05, 8.19589999999995e-05, 8.2152999999998e-05, 8.209800000000267e-05, 8.176399999999806e-05, 8.173599999999892e-05, 8.209699999999973e-05, 8.219400000000071e-05, 8.227799999999813e-05, 8.179200000000067e-05, 8.224999999999899e-05, 8.222199999999985e-05, 8.2459e-05, 8.223599999999942e-05, 8.230600000000074e-05, 8.199999999999874e-05, 8.227700000000213e-05, 8.156900000000009e-05, 8.220800000000028e-05, 8.243000000000139e-05, 8.21109999999993e-05, 8.187500000000208e-05, 8.162500000000183e-05, 8.166700000000054e-05, 8.244500000000043e-05, 8.222199999999985e-05, 8.252800000000185e-05, 8.240299999999826e-05, 8.224999999999899e-05, 8.174999999999849e-05, 8.187500000000208e-05, 8.208300000000016e-05, 8.154200000000042e-05, 8.251400000000228e-05, 8.211100000000277e-05]</msg>
<status status="PASS" starttime="20201029 12:46:16.757" endtime="20201029 12:46:16.760"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.753" endtime="20201029 12:46:16.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:16.764" endtime="20201029 12:46:16.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.762" endtime="20201029 12:46:16.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.761" endtime="20201029 12:46:16.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.402" endtime="20201029 12:46:16.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.402" endtime="20201029 12:46:16.785"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.793" endtime="20201029 12:46:16.811"></status>
</kw>
<msg timestamp="20201029 12:46:16.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.792" endtime="20201029 12:46:16.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:16.814" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:16.813" endtime="20201029 12:46:16.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.815" endtime="20201029 12:46:16.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.789" endtime="20201029 12:46:16.817"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.787" endtime="20201029 12:46:16.818"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:16.824" endtime="20201029 12:46:17.111"></status>
</kw>
<msg timestamp="20201029 12:46:17.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:16.823" endtime="20201029 12:46:17.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019492056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019574792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.115" endtime="20201029 12:46:17.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.123" endtime="20201029 12:46:17.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.820" endtime="20201029 12:46:17.126"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.819" endtime="20201029 12:46:17.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.130" level="INFO">${RESULT} = [{'diff': 8.273599999999992e-05}, {'diff': 8.291699999999833e-05}, {'diff': 8.270800000000078e-05}, {'diff': 8.287499999999962e-05}, {'diff': 8.331899999999837e-05}, {'diff': 8.317999999999867e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:17.127" endtime="20201029 12:46:17.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:17.134" level="INFO">${ACCURACY} = {'diff': [8.273599999999992e-05, 8.291699999999833e-05, 8.270800000000078e-05, 8.287499999999962e-05, 8.331899999999837e-05, 8.317999999999867e-05, 8.345799999999806e-05, 8.259700000000023e-05, 8.2846...</msg>
<status status="PASS" starttime="20201029 12:46:17.131" endtime="20201029 12:46:17.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.138" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201029 12:46:17.137" endtime="20201029 12:46:17.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.141" level="INFO">VALUE: [8.273599999999992e-05, 8.291699999999833e-05, 8.270800000000078e-05, 8.287499999999962e-05, 8.331899999999837e-05, 8.317999999999867e-05, 8.345799999999806e-05, 8.259700000000023e-05, 8.2846999999997e-05, 8.255600000000099e-05, 8.326399999999956e-05, 8.301399999999931e-05, 8.333299999999794e-05, 8.337500000000012e-05, 8.351399999999981e-05, 8.344400000000196e-05, 8.255600000000099e-05, 8.334700000000098e-05, 8.269400000000121e-05, 8.295799999999756e-05, 8.29170000000018e-05, 8.273599999999992e-05, 8.308400000000063e-05, 8.318099999999815e-05, 8.333399999999741e-05, 8.284700000000048e-05, 8.280500000000177e-05, 8.262499999999937e-05, 8.276399999999906e-05, 8.333299999999794e-05, 8.270900000000025e-05, 8.320799999999781e-05, 8.255599999999752e-05, 8.258300000000066e-05, 8.3459000000001e-05, 8.3152999999999e-05, 8.287499999999962e-05, 8.316699999999858e-05, 8.262499999999937e-05, 8.258300000000066e-05, 8.337500000000012e-05, 8.297199999999713e-05, 8.27780000000021e-05, 8.327799999999913e-05, 8.272299999999982e-05, 8.315199999999953e-05, 8.329099999999923e-05, 8.344499999999797e-05, 8.266699999999808e-05, 8.317999999999867e-05]</msg>
<status status="PASS" starttime="20201029 12:46:17.139" endtime="20201029 12:46:17.142"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.135" endtime="20201029 12:46:17.142"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.146" endtime="20201029 12:46:17.165"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.144" endtime="20201029 12:46:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.143" endtime="20201029 12:46:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.785" endtime="20201029 12:46:17.166"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:16.785" endtime="20201029 12:46:17.167"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.175" endtime="20201029 12:46:17.195"></status>
</kw>
<msg timestamp="20201029 12:46:17.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.174" endtime="20201029 12:46:17.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.197" endtime="20201029 12:46:17.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.199" endtime="20201029 12:46:17.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.171" endtime="20201029 12:46:17.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.169" endtime="20201029 12:46:17.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.208" endtime="20201029 12:46:17.494"></status>
</kw>
<msg timestamp="20201029 12:46:17.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.207" endtime="20201029 12:46:17.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020364319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.498" endtime="20201029 12:46:17.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.507" endtime="20201029 12:46:17.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.204" endtime="20201029 12:46:17.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.202" endtime="20201029 12:46:17.509"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.513" level="INFO">${RESULT} = [{'diff': 8.447300000000157e-05}, {'diff': 8.43049999999998e-05}, {'diff': 8.416699999999958e-05}, {'diff': 8.426399999999709e-05}, {'diff': 8.398600000000117e-05}, {'diff': 8.390200000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:17.510" endtime="20201029 12:46:17.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:17.517" level="INFO">${ACCURACY} = {'diff': [8.447300000000157e-05, 8.43049999999998e-05, 8.416699999999958e-05, 8.426399999999709e-05, 8.398600000000117e-05, 8.390200000000028e-05, 8.387500000000062e-05, 8.373599999999745e-05, 8.39450...</msg>
<status status="PASS" starttime="20201029 12:46:17.514" endtime="20201029 12:46:17.518"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.522" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201029 12:46:17.521" endtime="20201029 12:46:17.522"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.524" level="INFO">VALUE: [8.447300000000157e-05, 8.43049999999998e-05, 8.416699999999958e-05, 8.426399999999709e-05, 8.398600000000117e-05, 8.390200000000028e-05, 8.387500000000062e-05, 8.373599999999745e-05, 8.394500000000193e-05, 8.362500000000037e-05, 8.451400000000081e-05, 8.454199999999995e-05, 8.434800000000145e-05, 8.359699999999776e-05, 8.423599999999795e-05, 8.355500000000252e-05, 8.388900000000019e-05, 8.386099999999758e-05, 8.405499999999955e-05, 8.437500000000112e-05, 8.412500000000087e-05, 8.3846999999998e-05, 8.420799999999881e-05, 8.368099999999865e-05, 8.373600000000092e-05, 8.38049999999993e-05, 8.420799999999881e-05, 8.368100000000211e-05, 8.425000000000099e-05, 8.437500000000112e-05, 8.36659999999996e-05, 8.444399999999949e-05, 8.375000000000049e-05, 8.402799999999988e-05, 8.401400000000031e-05, 8.376400000000006e-05, 8.419500000000218e-05, 8.391599999999985e-05, 8.373600000000092e-05, 8.370800000000178e-05, 8.417999999999967e-05, 8.419499999999872e-05, 8.454199999999995e-05, 8.380599999999877e-05, 8.3846999999998e-05, 8.454199999999995e-05, 8.420900000000175e-05, 8.433299999999894e-05, 8.351399999999981e-05, 8.386200000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:46:17.523" endtime="20201029 12:46:17.526"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.518" endtime="20201029 12:46:17.526"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.530" endtime="20201029 12:46:17.549"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.529" endtime="20201029 12:46:17.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.527" endtime="20201029 12:46:17.550"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.167" endtime="20201029 12:46:17.551"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.167" endtime="20201029 12:46:17.551"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.560" endtime="20201029 12:46:17.577"></status>
</kw>
<msg timestamp="20201029 12:46:17.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.558" endtime="20201029 12:46:17.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.579" endtime="20201029 12:46:17.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.581" endtime="20201029 12:46:17.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.555" endtime="20201029 12:46:17.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.553" endtime="20201029 12:46:17.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.590" endtime="20201029 12:46:17.876"></status>
</kw>
<msg timestamp="20201029 12:46:17.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.589" endtime="20201029 12:46:17.879"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019750889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.880" endtime="20201029 12:46:17.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.888" endtime="20201029 12:46:17.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.586" endtime="20201029 12:46:17.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.585" endtime="20201029 12:46:17.891"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:17.895" level="INFO">${RESULT} = [{'diff': 8.519499999999972e-05}, {'diff': 8.47920000000002e-05}, {'diff': 8.469499999999922e-05}, {'diff': 8.458399999999866e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.525000000000199e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:17.892" endtime="20201029 12:46:17.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:17.900" level="INFO">${ACCURACY} = {'diff': [8.519499999999972e-05, 8.47920000000002e-05, 8.469499999999922e-05, 8.458399999999866e-05, 8.487499999999815e-05, 8.525000000000199e-05, 8.54859999999992e-05, 8.508299999999969e-05, 8.529100...</msg>
<status status="PASS" starttime="20201029 12:46:17.896" endtime="20201029 12:46:17.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.904" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201029 12:46:17.903" endtime="20201029 12:46:17.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.907" level="INFO">VALUE: [8.519499999999972e-05, 8.47920000000002e-05, 8.469499999999922e-05, 8.458399999999866e-05, 8.487499999999815e-05, 8.525000000000199e-05, 8.54859999999992e-05, 8.508299999999969e-05, 8.529100000000123e-05, 8.545800000000006e-05, 8.555600000000052e-05, 8.456999999999909e-05, 8.476399999999759e-05, 8.468099999999965e-05, 8.47370000000014e-05, 8.5153000000001e-05, 8.479199999999673e-05, 8.477700000000116e-05, 8.46110000000018e-05, 8.465299999999704e-05, 8.472199999999888e-05, 8.502800000000088e-05, 8.541700000000083e-05, 8.454199999999995e-05, 8.46110000000018e-05, 8.483400000000238e-05, 8.500000000000174e-05, 8.498699999999818e-05, 8.512500000000187e-05, 8.468000000000017e-05, 8.458299999999919e-05, 8.523599999999895e-05, 8.513900000000144e-05, 8.544400000000049e-05, 8.506999999999959e-05, 8.548600000000267e-05, 8.483399999999891e-05, 8.515199999999806e-05, 8.472300000000182e-05, 8.506999999999959e-05, 8.54859999999992e-05, 8.472199999999888e-05, 8.473600000000192e-05, 8.488899999999772e-05, 8.497199999999913e-05, 8.522199999999938e-05, 8.512500000000187e-05, 8.508399999999916e-05, 8.533400000000288e-05, 8.522299999999886e-05]</msg>
<status status="PASS" starttime="20201029 12:46:17.906" endtime="20201029 12:46:17.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.901" endtime="20201029 12:46:17.908"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:17.912" endtime="20201029 12:46:17.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.910" endtime="20201029 12:46:17.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.909" endtime="20201029 12:46:17.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.552" endtime="20201029 12:46:17.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.551" endtime="20201029 12:46:17.933"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.941" endtime="20201029 12:46:17.961"></status>
</kw>
<msg timestamp="20201029 12:46:17.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.940" endtime="20201029 12:46:17.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:17.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:17.963" endtime="20201029 12:46:17.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.965" endtime="20201029 12:46:17.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.937" endtime="20201029 12:46:17.967"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.935" endtime="20201029 12:46:17.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:17.974" endtime="20201029 12:46:18.261"></status>
</kw>
<msg timestamp="20201029 12:46:18.264" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:17.973" endtime="20201029 12:46:18.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020499125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020585417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.265" endtime="20201029 12:46:18.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.274" endtime="20201029 12:46:18.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.970" endtime="20201029 12:46:18.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.968" endtime="20201029 12:46:18.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.280" level="INFO">${RESULT} = [{'diff': 8.62920000000017e-05}, {'diff': 8.54729999999991e-05}, {'diff': 8.576399999999859e-05}, {'diff': 8.573599999999945e-05}, {'diff': 8.629100000000223e-05}, {'diff': 8.562500000000237e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:18.277" endtime="20201029 12:46:18.280"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:18.284" level="INFO">${ACCURACY} = {'diff': [8.62920000000017e-05, 8.54729999999991e-05, 8.576399999999859e-05, 8.573599999999945e-05, 8.629100000000223e-05, 8.562500000000237e-05, 8.620800000000081e-05, 8.64310000000014e-05, 8.5958000...</msg>
<status status="PASS" starttime="20201029 12:46:18.281" endtime="20201029 12:46:18.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.289" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201029 12:46:18.288" endtime="20201029 12:46:18.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.291" level="INFO">VALUE: [8.62920000000017e-05, 8.54729999999991e-05, 8.576399999999859e-05, 8.573599999999945e-05, 8.629100000000223e-05, 8.562500000000237e-05, 8.620800000000081e-05, 8.64310000000014e-05, 8.595800000000056e-05, 8.591700000000133e-05, 8.6153000000002e-05, 8.583299999999697e-05, 8.634799999999998e-05, 8.566599999999813e-05, 8.647200000000063e-05, 8.633300000000094e-05, 8.597200000000013e-05, 8.56669999999976e-05, 8.615299999999854e-05, 8.556900000000062e-05, 8.611099999999983e-05, 8.61669999999981e-05, 8.563900000000194e-05, 8.654200000000195e-05, 8.608400000000016e-05, 8.638799999999974e-05, 8.637499999999965e-05, 8.570800000000031e-05, 8.616599999999863e-05, 8.64860000000002e-05, 8.57370000000024e-05, 8.619499999999725e-05, 8.561099999999933e-05, 8.59859999999997e-05, 8.651399999999934e-05, 8.568100000000065e-05, 8.616599999999863e-05, 8.640199999999931e-05, 8.615200000000253e-05, 8.615299999999854e-05, 8.602799999999841e-05, 8.636100000000008e-05, 8.583300000000044e-05, 8.577799999999816e-05, 8.602799999999841e-05, 8.625000000000299e-05, 8.608400000000016e-05, 8.647200000000063e-05, 8.631900000000137e-05, 8.608300000000069e-05]</msg>
<status status="PASS" starttime="20201029 12:46:18.290" endtime="20201029 12:46:18.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.285" endtime="20201029 12:46:18.292"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.296" endtime="20201029 12:46:18.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.295" endtime="20201029 12:46:18.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.293" endtime="20201029 12:46:18.316"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.933" endtime="20201029 12:46:18.317"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:17.933" endtime="20201029 12:46:18.317"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.326" endtime="20201029 12:46:18.347"></status>
</kw>
<msg timestamp="20201029 12:46:18.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.324" endtime="20201029 12:46:18.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.350" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.348" endtime="20201029 12:46:18.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.351" endtime="20201029 12:46:18.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.322" endtime="20201029 12:46:18.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.319" endtime="20201029 12:46:18.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.360" endtime="20201029 12:46:18.645"></status>
</kw>
<msg timestamp="20201029 12:46:18.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.358" endtime="20201029 12:46:18.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023113764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023200306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.649" endtime="20201029 12:46:18.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.658" endtime="20201029 12:46:18.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.356" endtime="20201029 12:46:18.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.354" endtime="20201029 12:46:18.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:18.664" level="INFO">${RESULT} = [{'diff': 8.654200000000195e-05}, {'diff': 8.74860000000012e-05}, {'diff': 8.673600000000045e-05}, {'diff': 8.73189999999989e-05}, {'diff': 8.691599999999938e-05}, {'diff': 8.695799999999809e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:18.661" endtime="20201029 12:46:18.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:18.668" level="INFO">${ACCURACY} = {'diff': [8.654200000000195e-05, 8.74860000000012e-05, 8.673600000000045e-05, 8.73189999999989e-05, 8.691599999999938e-05, 8.695799999999809e-05, 8.66669999999986e-05, 8.679199999999873e-05, 8.6973000...</msg>
<status status="PASS" starttime="20201029 12:46:18.665" endtime="20201029 12:46:18.669"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.673" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201029 12:46:18.672" endtime="20201029 12:46:18.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.675" level="INFO">VALUE: [8.654200000000195e-05, 8.74860000000012e-05, 8.673600000000045e-05, 8.73189999999989e-05, 8.691599999999938e-05, 8.695799999999809e-05, 8.66669999999986e-05, 8.679199999999873e-05, 8.69730000000006e-05, 8.73059999999988e-05, 8.737500000000065e-05, 8.666599999999913e-05, 8.702699999999994e-05, 8.676399999999959e-05, 8.700000000000027e-05, 8.704099999999951e-05, 8.695899999999757e-05, 8.745799999999859e-05, 8.725000000000052e-05, 8.676399999999959e-05, 8.704199999999898e-05, 8.716700000000258e-05, 8.681999999999787e-05, 8.74310000000024e-05, 8.686100000000058e-05, 8.688899999999972e-05, 8.730600000000227e-05, 8.700000000000027e-05, 8.676399999999959e-05, 8.713899999999997e-05, 8.690299999999929e-05, 8.752799999999991e-05, 8.677799999999916e-05, 8.672300000000036e-05, 8.688899999999972e-05, 8.73189999999989e-05, 8.670800000000131e-05, 8.666599999999913e-05, 8.672200000000088e-05, 8.66669999999986e-05, 8.734699999999804e-05, 8.704199999999898e-05, 8.733399999999794e-05, 8.719499999999825e-05, 8.690299999999929e-05, 8.687500000000015e-05, 8.716599999999963e-05, 8.705599999999855e-05, 8.708300000000169e-05, 8.725000000000052e-05]</msg>
<status status="PASS" starttime="20201029 12:46:18.674" endtime="20201029 12:46:18.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.669" endtime="20201029 12:46:18.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:18.681" endtime="20201029 12:46:18.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.680" endtime="20201029 12:46:18.701"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.679" endtime="20201029 12:46:18.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.318" endtime="20201029 12:46:18.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.317" endtime="20201029 12:46:18.702"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.711" endtime="20201029 12:46:18.730"></status>
</kw>
<msg timestamp="20201029 12:46:18.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.709" endtime="20201029 12:46:18.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:18.733" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:18.732" endtime="20201029 12:46:18.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.734" endtime="20201029 12:46:18.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.707" endtime="20201029 12:46:18.736"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.704" endtime="20201029 12:46:18.737"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:18.743" endtime="20201029 12:46:19.030"></status>
</kw>
<msg timestamp="20201029 12:46:19.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:18.742" endtime="20201029 12:46:19.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020062069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020150264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.034" endtime="20201029 12:46:19.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.042" endtime="20201029 12:46:19.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.739" endtime="20201029 12:46:19.045"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.737" endtime="20201029 12:46:19.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.049" level="INFO">${RESULT} = [{'diff': 8.819500000000272e-05}, {'diff': 8.840299999999732e-05}, {'diff': 8.791699999999986e-05}, {'diff': 8.833399999999894e-05}, {'diff': 8.795899999999857e-05}, {'diff': 8.76120000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:19.046" endtime="20201029 12:46:19.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.054" level="INFO">${ACCURACY} = {'diff': [8.819500000000272e-05, 8.840299999999732e-05, 8.791699999999986e-05, 8.833399999999894e-05, 8.795899999999857e-05, 8.76120000000008e-05, 8.79730000000016e-05, 8.820899999999882e-05, 8.830500...</msg>
<status status="PASS" starttime="20201029 12:46:19.050" endtime="20201029 12:46:19.055"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.059" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.058" endtime="20201029 12:46:19.059"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.062" level="INFO">VALUE: [8.819500000000272e-05, 8.840299999999732e-05, 8.791699999999986e-05, 8.833399999999894e-05, 8.795899999999857e-05, 8.76120000000008e-05, 8.79730000000016e-05, 8.820899999999882e-05, 8.830500000000033e-05, 8.770799999999884e-05, 8.81800000000002e-05, 8.798599999999823e-05, 8.78059999999993e-05, 8.829200000000023e-05, 8.781999999999887e-05, 8.797199999999866e-05, 8.815300000000054e-05, 8.793099999999943e-05, 8.791699999999986e-05, 8.802700000000094e-05, 8.765300000000004e-05, 8.838900000000122e-05, 8.848599999999873e-05, 8.772299999999789e-05, 8.788900000000072e-05, 8.81250000000014e-05, 8.769499999999875e-05, 8.851399999999787e-05, 8.768099999999918e-05, 8.855499999999711e-05, 8.837500000000165e-05, 8.827700000000119e-05, 8.826400000000109e-05, 8.765300000000004e-05, 8.825000000000152e-05, 8.819399999999977e-05, 8.827800000000066e-05, 8.763900000000047e-05, 8.822200000000238e-05, 8.851400000000134e-05, 8.832000000000284e-05, 8.81670000000001e-05, 8.773599999999798e-05, 8.81800000000002e-05, 8.776400000000059e-05, 8.845799999999959e-05, 8.847200000000263e-05, 8.78189999999994e-05, 8.78059999999993e-05, 8.843099999999993e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.060" endtime="20201029 12:46:19.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.055" endtime="20201029 12:46:19.063"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.067" endtime="20201029 12:46:19.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.065" endtime="20201029 12:46:19.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.064" endtime="20201029 12:46:19.087"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.703" endtime="20201029 12:46:19.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:18.702" endtime="20201029 12:46:19.088"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.097" endtime="20201029 12:46:19.115"></status>
</kw>
<msg timestamp="20201029 12:46:19.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.095" endtime="20201029 12:46:19.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.117" endtime="20201029 12:46:19.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.119" endtime="20201029 12:46:19.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.092" endtime="20201029 12:46:19.122"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.090" endtime="20201029 12:46:19.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.129" endtime="20201029 12:46:19.434"></status>
</kw>
<msg timestamp="20201029 12:46:19.437" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.127" endtime="20201029 12:46:19.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.446" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019970986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020060042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.439" endtime="20201029 12:46:19.446"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.447" endtime="20201029 12:46:19.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.124" endtime="20201029 12:46:19.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.123" endtime="20201029 12:46:19.450"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.454" level="INFO">${RESULT} = [{'diff': 8.905600000000055e-05}, {'diff': 8.901399999999837e-05}, {'diff': 8.880500000000083e-05}, {'diff': 8.947200000000016e-05}, {'diff': 8.9332999999997e-05}, {'diff': 8.93190000000009e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:19.451" endtime="20201029 12:46:19.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.458" level="INFO">${ACCURACY} = {'diff': [8.905600000000055e-05, 8.901399999999837e-05, 8.880500000000083e-05, 8.947200000000016e-05, 8.9332999999997e-05, 8.93190000000009e-05, 8.873599999999898e-05, 8.876399999999812e-05, 8.8723000...</msg>
<status status="PASS" starttime="20201029 12:46:19.455" endtime="20201029 12:46:19.458"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.463" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.462" endtime="20201029 12:46:19.463"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.465" level="INFO">VALUE: [8.905600000000055e-05, 8.901399999999837e-05, 8.880500000000083e-05, 8.947200000000016e-05, 8.9332999999997e-05, 8.93190000000009e-05, 8.873599999999898e-05, 8.876399999999812e-05, 8.872300000000236e-05, 8.943100000000093e-05, 8.916699999999764e-05, 8.948599999999973e-05, 8.887500000000215e-05, 8.923699999999896e-05, 8.909699999999979e-05, 8.870799999999984e-05, 8.904100000000151e-05, 8.88060000000003e-05, 8.923599999999948e-05, 8.873599999999898e-05, 8.858299999999972e-05, 8.905600000000055e-05, 8.89869999999987e-05, 8.911199999999883e-05, 8.854200000000048e-05, 8.90129999999989e-05, 8.891600000000138e-05, 8.913900000000197e-05, 8.941699999999789e-05, 8.858299999999972e-05, 8.920800000000034e-05, 8.945900000000007e-05, 8.945900000000007e-05, 8.895900000000304e-05, 8.897199999999966e-05, 8.934700000000004e-05, 8.894400000000052e-05, 8.938899999999875e-05, 8.924999999999905e-05, 8.89999999999988e-05, 8.920899999999982e-05, 8.945900000000007e-05, 8.866600000000113e-05, 8.905600000000055e-05, 8.93060000000008e-05, 8.870899999999932e-05, 8.863799999999852e-05, 8.905500000000108e-05, 8.923599999999948e-05, 8.906899999999718e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.464" endtime="20201029 12:46:19.466"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.459" endtime="20201029 12:46:19.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.471" endtime="20201029 12:46:19.490"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.469" endtime="20201029 12:46:19.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.468" endtime="20201029 12:46:19.491"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.089" endtime="20201029 12:46:19.492"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.088" endtime="20201029 12:46:19.492"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.501" endtime="20201029 12:46:19.522"></status>
</kw>
<msg timestamp="20201029 12:46:19.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.499" endtime="20201029 12:46:19.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.523" endtime="20201029 12:46:19.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.526" endtime="20201029 12:46:19.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.496" endtime="20201029 12:46:19.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.494" endtime="20201029 12:46:19.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.535" endtime="20201029 12:46:19.821"></status>
</kw>
<msg timestamp="20201029 12:46:19.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.534" endtime="20201029 12:46:19.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021827208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021917708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.825" endtime="20201029 12:46:19.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.834" endtime="20201029 12:46:19.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.531" endtime="20201029 12:46:19.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.529" endtime="20201029 12:46:19.837"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:19.841" level="INFO">${RESULT} = [{'diff': 9.05000000000003e-05}, {'diff': 9.020800000000134e-05}, {'diff': 8.98190000000014e-05}, {'diff': 8.965300000000204e-05}, {'diff': 8.974999999999955e-05}, {'diff': 9.026399999999962e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:19.837" endtime="20201029 12:46:19.841"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:19.845" level="INFO">${ACCURACY} = {'diff': [9.05000000000003e-05, 9.020800000000134e-05, 8.98190000000014e-05, 8.965300000000204e-05, 8.974999999999955e-05, 9.026399999999962e-05, 9.034800000000051e-05, 8.988799999999977e-05, 8.998699...</msg>
<status status="PASS" starttime="20201029 12:46:19.842" endtime="20201029 12:46:19.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.849" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201029 12:46:19.848" endtime="20201029 12:46:19.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.852" level="INFO">VALUE: [9.05000000000003e-05, 9.020800000000134e-05, 8.98190000000014e-05, 8.965300000000204e-05, 8.974999999999955e-05, 9.026399999999962e-05, 9.034800000000051e-05, 8.988799999999977e-05, 8.99869999999997e-05, 9.042999999999898e-05, 9.017999999999873e-05, 9.026399999999962e-05, 8.988899999999925e-05, 8.993000000000195e-05, 8.98060000000013e-05, 8.987499999999968e-05, 9.009700000000079e-05, 8.979199999999826e-05, 8.976399999999912e-05, 8.993100000000143e-05, 8.976399999999912e-05, 9.038800000000027e-05, 9.009699999999732e-05, 8.965299999999857e-05, 9.01939999999983e-05, 9.022200000000091e-05, 8.994499999999753e-05, 8.976399999999912e-05, 9.036100000000061e-05, 8.958400000000019e-05, 9.008400000000069e-05, 8.96670000000016e-05, 8.998599999999676e-05, 9.025000000000005e-05, 9.01389999999995e-05, 9.004099999999904e-05, 8.959700000000029e-05, 8.99999999999998e-05, 9.009700000000079e-05, 9.009799999999679e-05, 9.00129999999999e-05, 9.022300000000039e-05, 8.99999999999998e-05, 8.986100000000011e-05, 9.031899999999843e-05, 9.015299999999907e-05, 9.026400000000309e-05, 8.980499999999836e-05, 9.033300000000147e-05, 9.03060000000018e-05]</msg>
<status status="PASS" starttime="20201029 12:46:19.851" endtime="20201029 12:46:19.854"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.846" endtime="20201029 12:46:19.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:19.858" endtime="20201029 12:46:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.857" endtime="20201029 12:46:19.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.855" endtime="20201029 12:46:19.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.493" endtime="20201029 12:46:19.879"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.492" endtime="20201029 12:46:19.879"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.888" endtime="20201029 12:46:19.906"></status>
</kw>
<msg timestamp="20201029 12:46:19.907" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.886" endtime="20201029 12:46:19.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:19.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:19.908" endtime="20201029 12:46:19.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.911" endtime="20201029 12:46:19.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.884" endtime="20201029 12:46:19.913"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.882" endtime="20201029 12:46:19.913"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:19.920" endtime="20201029 12:46:20.206"></status>
</kw>
<msg timestamp="20201029 12:46:20.209" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:19.919" endtime="20201029 12:46:20.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019924028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020014833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.211" endtime="20201029 12:46:20.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.219" endtime="20201029 12:46:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.916" endtime="20201029 12:46:20.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.914" endtime="20201029 12:46:20.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.226" level="INFO">${RESULT} = [{'diff': 9.080499999999936e-05}, {'diff': 9.106899999999918e-05}, {'diff': 9.116600000000016e-05}, {'diff': 9.076400000000012e-05}, {'diff': 9.105599999999908e-05}, {'diff': 9.090299999999982e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:20.223" endtime="20201029 12:46:20.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.231" level="INFO">${ACCURACY} = {'diff': [9.080499999999936e-05, 9.106899999999918e-05, 9.116600000000016e-05, 9.076400000000012e-05, 9.105599999999908e-05, 9.090299999999982e-05, 9.083300000000197e-05, 9.125000000000105e-05, 9.1487...</msg>
<status status="PASS" starttime="20201029 12:46:20.227" endtime="20201029 12:46:20.231"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.236" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.235" endtime="20201029 12:46:20.236"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.238" level="INFO">VALUE: [9.080499999999936e-05, 9.106899999999918e-05, 9.116600000000016e-05, 9.076400000000012e-05, 9.105599999999908e-05, 9.090299999999982e-05, 9.083300000000197e-05, 9.125000000000105e-05, 9.14870000000012e-05, 9.098599999999776e-05, 9.102799999999994e-05, 9.13060000000028e-05, 9.109699999999832e-05, 9.148599999999826e-05, 9.087500000000068e-05, 9.108300000000222e-05, 9.143099999999946e-05, 9.101400000000037e-05, 9.088900000000025e-05, 9.137499999999771e-05, 9.06520000000001e-05, 9.11520000000006e-05, 9.109799999999779e-05, 9.126400000000062e-05, 9.120799999999887e-05, 9.14719999999987e-05, 9.091699999999939e-05, 9.159800000000176e-05, 9.098600000000123e-05, 9.104199999999951e-05, 9.138900000000075e-05, 9.055599999999858e-05, 9.149999999999783e-05, 9.069400000000227e-05, 9.087500000000068e-05, 9.090200000000034e-05, 9.109699999999832e-05, 9.090299999999982e-05, 9.079199999999926e-05, 9.061100000000086e-05, 9.105599999999908e-05, 9.154200000000001e-05, 9.126400000000062e-05, 9.102799999999994e-05, 9.117999999999973e-05, 9.130499999999986e-05, 9.117999999999973e-05, 9.088900000000025e-05, 9.057000000000162e-05, 9.138900000000075e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.237" endtime="20201029 12:46:20.239"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.232" endtime="20201029 12:46:20.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.244" endtime="20201029 12:46:20.263"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.242" endtime="20201029 12:46:20.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.241" endtime="20201029 12:46:20.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.880" endtime="20201029 12:46:20.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:19.879" endtime="20201029 12:46:20.264"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.273" endtime="20201029 12:46:20.292"></status>
</kw>
<msg timestamp="20201029 12:46:20.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.272" endtime="20201029 12:46:20.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.294" endtime="20201029 12:46:20.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.297" endtime="20201029 12:46:20.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.269" endtime="20201029 12:46:20.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.267" endtime="20201029 12:46:20.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.306" endtime="20201029 12:46:20.594"></status>
</kw>
<msg timestamp="20201029 12:46:20.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.304" endtime="20201029 12:46:20.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020015708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.598" endtime="20201029 12:46:20.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.607" endtime="20201029 12:46:20.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.302" endtime="20201029 12:46:20.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.300" endtime="20201029 12:46:20.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:20.614" level="INFO">${RESULT} = [{'diff': 9.212499999999846e-05}, {'diff': 9.25139999999984e-05}, {'diff': 9.222199999999944e-05}, {'diff': 9.254200000000101e-05}, {'diff': 9.18329999999995e-05}, {'diff': 9.204200000000051e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:20.610" endtime="20201029 12:46:20.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:20.618" level="INFO">${ACCURACY} = {'diff': [9.212499999999846e-05, 9.25139999999984e-05, 9.222199999999944e-05, 9.254200000000101e-05, 9.18329999999995e-05, 9.204200000000051e-05, 9.174999999999808e-05, 9.187500000000168e-05, 9.224999...</msg>
<status status="PASS" starttime="20201029 12:46:20.615" endtime="20201029 12:46:20.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.623" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201029 12:46:20.622" endtime="20201029 12:46:20.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.625" level="INFO">VALUE: [9.212499999999846e-05, 9.25139999999984e-05, 9.222199999999944e-05, 9.254200000000101e-05, 9.18329999999995e-05, 9.204200000000051e-05, 9.174999999999808e-05, 9.187500000000168e-05, 9.224999999999858e-05, 9.158400000000219e-05, 9.213799999999855e-05, 9.198599999999876e-05, 9.237499999999871e-05, 9.204100000000104e-05, 9.175000000000155e-05, 9.218100000000021e-05, 9.247299999999917e-05, 9.244500000000003e-05, 9.244500000000003e-05, 9.170899999999885e-05, 9.197299999999867e-05, 9.21659999999977e-05, 9.211100000000236e-05, 9.1639000000001e-05, 9.188900000000125e-05, 9.224999999999858e-05, 9.180599999999983e-05, 9.170899999999885e-05, 9.223600000000248e-05, 9.190300000000082e-05, 9.168099999999971e-05, 9.226299999999868e-05, 9.158300000000272e-05, 9.216700000000064e-05, 9.166600000000066e-05, 9.195799999999962e-05, 9.248699999999874e-05, 9.205600000000008e-05, 9.234699999999957e-05, 9.193099999999996e-05, 9.229200000000076e-05, 9.238899999999828e-05, 9.165300000000057e-05, 9.238800000000227e-05, 9.168000000000023e-05, 9.216699999999717e-05, 9.208299999999975e-05, 9.191700000000039e-05, 9.243100000000046e-05, 9.251400000000187e-05]</msg>
<status status="PASS" starttime="20201029 12:46:20.624" endtime="20201029 12:46:20.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.619" endtime="20201029 12:46:20.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:20.630" endtime="20201029 12:46:20.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.629" endtime="20201029 12:46:20.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.628" endtime="20201029 12:46:20.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.265" endtime="20201029 12:46:20.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.265" endtime="20201029 12:46:20.651"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.660" endtime="20201029 12:46:20.680"></status>
</kw>
<msg timestamp="20201029 12:46:20.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.659" endtime="20201029 12:46:20.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:20.682" endtime="20201029 12:46:20.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.684" endtime="20201029 12:46:20.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.656" endtime="20201029 12:46:20.687"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.654" endtime="20201029 12:46:20.687"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.694" endtime="20201029 12:46:20.980"></status>
</kw>
<msg timestamp="20201029 12:46:20.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020970347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.692" endtime="20201029 12:46:20.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:20.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020970347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021063208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:20.985" endtime="20201029 12:46:20.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:20.994" endtime="20201029 12:46:20.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.689" endtime="20201029 12:46:20.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.688" endtime="20201029 12:46:20.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.001" level="INFO">${RESULT} = [{'diff': 9.286099999999964e-05}, {'diff': 9.312499999999946e-05}, {'diff': 9.322200000000044e-05}, {'diff': 9.341599999999894e-05}, {'diff': 9.275000000000255e-05}, {'diff': 9.337500000000318e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:20.998" endtime="20201029 12:46:21.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.006" level="INFO">${ACCURACY} = {'diff': [9.286099999999964e-05, 9.312499999999946e-05, 9.322200000000044e-05, 9.341599999999894e-05, 9.275000000000255e-05, 9.337500000000318e-05, 9.337499999999971e-05, 9.313899999999903e-05, 9.3110...</msg>
<status status="PASS" starttime="20201029 12:46:21.002" endtime="20201029 12:46:21.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.010" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.009" endtime="20201029 12:46:21.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.013" level="INFO">VALUE: [9.286099999999964e-05, 9.312499999999946e-05, 9.322200000000044e-05, 9.341599999999894e-05, 9.275000000000255e-05, 9.337500000000318e-05, 9.337499999999971e-05, 9.313899999999903e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.290299999999835e-05, 9.305499999999814e-05, 9.333299999999753e-05, 9.329099999999882e-05, 9.323600000000001e-05, 9.284700000000007e-05, 9.330499999999839e-05, 9.292999999999801e-05, 9.269500000000028e-05, 9.349999999999983e-05, 9.288800000000277e-05, 9.295800000000062e-05, 9.31390000000025e-05, 9.281900000000093e-05, 9.262499999999896e-05, 9.31390000000025e-05, 9.323600000000001e-05, 9.322200000000044e-05, 9.291700000000139e-05, 9.341599999999894e-05, 9.320900000000035e-05, 9.338900000000275e-05, 9.322199999999697e-05, 9.29720000000002e-05, 9.28330000000005e-05, 9.263899999999853e-05, 9.306899999999771e-05, 9.279200000000126e-05, 9.348600000000026e-05, 9.341700000000189e-05, 9.277799999999822e-05, 9.34870000000032e-05, 9.311099999999989e-05, 9.262499999999896e-05, 9.354099999999907e-05, 9.280600000000083e-05, 9.313899999999903e-05, 9.324999999999958e-05, 9.336100000000014e-05, 9.343100000000146e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.012" endtime="20201029 12:46:21.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.007" endtime="20201029 12:46:21.015"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.019" endtime="20201029 12:46:21.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.017" endtime="20201029 12:46:21.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.016" endtime="20201029 12:46:21.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.652" endtime="20201029 12:46:21.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:20.652" endtime="20201029 12:46:21.040"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.049" endtime="20201029 12:46:21.068"></status>
</kw>
<msg timestamp="20201029 12:46:21.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.047" endtime="20201029 12:46:21.068"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.069" endtime="20201029 12:46:21.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.072" endtime="20201029 12:46:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.045" endtime="20201029 12:46:21.074"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.043" endtime="20201029 12:46:21.075"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.081" endtime="20201029 12:46:21.367"></status>
</kw>
<msg timestamp="20201029 12:46:21.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.080" endtime="20201029 12:46:21.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.379" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019990097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020083889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.372" endtime="20201029 12:46:21.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.380" endtime="20201029 12:46:21.382"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.077" endtime="20201029 12:46:21.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.075" endtime="20201029 12:46:21.383"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.387" level="INFO">${RESULT} = [{'diff': 9.379200000000226e-05}, {'diff': 9.395899999999763e-05}, {'diff': 9.366699999999867e-05}, {'diff': 9.422300000000092e-05}, {'diff': 9.397300000000067e-05}, {'diff': 9.406900000000218e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:21.384" endtime="20201029 12:46:21.387"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.392" level="INFO">${ACCURACY} = {'diff': [9.379200000000226e-05, 9.395899999999763e-05, 9.366699999999867e-05, 9.422300000000092e-05, 9.397300000000067e-05, 9.406900000000218e-05, 9.372199999999747e-05, 9.411100000000089e-05, 9.4194...</msg>
<status status="PASS" starttime="20201029 12:46:21.388" endtime="20201029 12:46:21.393"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.397" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.396" endtime="20201029 12:46:21.397"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.400" level="INFO">VALUE: [9.379200000000226e-05, 9.395899999999763e-05, 9.366699999999867e-05, 9.422300000000092e-05, 9.397300000000067e-05, 9.406900000000218e-05, 9.372199999999747e-05, 9.411100000000089e-05, 9.41940000000023e-05, 9.440299999999985e-05, 9.365300000000257e-05, 9.423599999999754e-05, 9.418099999999874e-05, 9.45140000000004e-05, 9.408399999999775e-05, 9.451300000000093e-05, 9.42079999999984e-05, 9.437499999999724e-05, 9.377799999999922e-05, 9.445800000000212e-05, 9.391699999999892e-05, 9.45140000000004e-05, 9.443099999999899e-05, 9.430599999999886e-05, 9.427799999999972e-05, 9.429099999999982e-05, 9.38200000000014e-05, 9.394399999999858e-05, 9.355499999999864e-05, 9.433299999999853e-05, 9.388899999999978e-05, 9.438900000000028e-05, 9.393099999999849e-05, 9.361100000000039e-05, 9.40139999999999e-05, 9.373600000000051e-05, 9.369500000000128e-05, 9.442999999999951e-05, 9.452799999999997e-05, 9.433299999999853e-05, 9.425000000000058e-05, 9.39720000000012e-05, 9.411100000000089e-05, 9.411099999999742e-05, 9.362499999999996e-05, 9.422300000000092e-05, 9.366700000000214e-05, 9.416699999999917e-05, 9.41529999999996e-05, 9.427700000000025e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.398" endtime="20201029 12:46:21.400"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.393" endtime="20201029 12:46:21.401"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.405" endtime="20201029 12:46:21.424"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.403" endtime="20201029 12:46:21.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.402" endtime="20201029 12:46:21.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.041" endtime="20201029 12:46:21.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.040" endtime="20201029 12:46:21.426"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.435" endtime="20201029 12:46:21.455"></status>
</kw>
<msg timestamp="20201029 12:46:21.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.433" endtime="20201029 12:46:21.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.457" endtime="20201029 12:46:21.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.459" endtime="20201029 12:46:21.461"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.430" endtime="20201029 12:46:21.462"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.428" endtime="20201029 12:46:21.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.469" endtime="20201029 12:46:21.756"></status>
</kw>
<msg timestamp="20201029 12:46:21.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.467" endtime="20201029 12:46:21.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020967681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021062833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:21.760" endtime="20201029 12:46:21.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.769" endtime="20201029 12:46:21.770"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.464" endtime="20201029 12:46:21.771"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.463" endtime="20201029 12:46:21.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:21.775" level="INFO">${RESULT} = [{'diff': 9.515200000000112e-05}, {'diff': 9.463900000000053e-05}, {'diff': 9.488900000000078e-05}, {'diff': 9.52079999999994e-05}, {'diff': 9.480599999999936e-05}, {'diff': 9.512500000000146e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:21.772" endtime="20201029 12:46:21.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:21.780" level="INFO">${ACCURACY} = {'diff': [9.515200000000112e-05, 9.463900000000053e-05, 9.488900000000078e-05, 9.52079999999994e-05, 9.480599999999936e-05, 9.512500000000146e-05, 9.499999999999786e-05, 9.477800000000022e-05, 9.52219...</msg>
<status status="PASS" starttime="20201029 12:46:21.776" endtime="20201029 12:46:21.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.784" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201029 12:46:21.783" endtime="20201029 12:46:21.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.787" level="INFO">VALUE: [9.515200000000112e-05, 9.463900000000053e-05, 9.488900000000078e-05, 9.52079999999994e-05, 9.480599999999936e-05, 9.512500000000146e-05, 9.499999999999786e-05, 9.477800000000022e-05, 9.522199999999897e-05, 9.463800000000105e-05, 9.462500000000096e-05, 9.494399999999958e-05, 9.509699999999885e-05, 9.466699999999967e-05, 9.499999999999786e-05, 9.508299999999928e-05, 9.516700000000017e-05, 9.49019999999974e-05, 9.506999999999918e-05, 9.531999999999943e-05, 9.462500000000096e-05, 9.509699999999885e-05, 9.523600000000201e-05, 9.522199999999897e-05, 9.49590000000021e-05, 9.48469999999986e-05, 9.52079999999994e-05, 9.483299999999903e-05, 9.497199999999872e-05, 9.456999999999868e-05, 9.519399999999983e-05, 9.49019999999974e-05, 9.522199999999897e-05, 9.470800000000237e-05, 9.519399999999983e-05, 9.531899999999996e-05, 9.547199999999922e-05, 9.550000000000183e-05, 9.512499999999799e-05, 9.516700000000017e-05, 9.513900000000103e-05, 9.488899999999731e-05, 9.511100000000189e-05, 9.488900000000078e-05, 9.469500000000228e-05, 9.470900000000185e-05, 9.500000000000133e-05, 9.537499999999824e-05, 9.53469999999991e-05, 9.524999999999811e-05]</msg>
<status status="PASS" starttime="20201029 12:46:21.785" endtime="20201029 12:46:21.788"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.780" endtime="20201029 12:46:21.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:21.792" endtime="20201029 12:46:21.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.790" endtime="20201029 12:46:21.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.789" endtime="20201029 12:46:21.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.426" endtime="20201029 12:46:21.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.426" endtime="20201029 12:46:21.813"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.822" endtime="20201029 12:46:21.845"></status>
</kw>
<msg timestamp="20201029 12:46:21.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.820" endtime="20201029 12:46:21.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:21.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:21.847" endtime="20201029 12:46:21.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.849" endtime="20201029 12:46:21.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.818" endtime="20201029 12:46:21.851"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.815" endtime="20201029 12:46:21.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:21.858" endtime="20201029 12:46:22.145"></status>
</kw>
<msg timestamp="20201029 12:46:22.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:21.857" endtime="20201029 12:46:22.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023324569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023421, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:22.149" endtime="20201029 12:46:22.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.157" endtime="20201029 12:46:22.159"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.854" endtime="20201029 12:46:22.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.853" endtime="20201029 12:46:22.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.164" level="INFO">${RESULT} = [{'diff': 9.643100000000099e-05}, {'diff': 9.58469999999996e-05}, {'diff': 9.618100000000074e-05}, {'diff': 9.645900000000013e-05}, {'diff': 9.630500000000139e-05}, {'diff': 9.641600000000194e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:22.161" endtime="20201029 12:46:22.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.169" level="INFO">${ACCURACY} = {'diff': [9.643100000000099e-05, 9.58469999999996e-05, 9.618100000000074e-05, 9.645900000000013e-05, 9.630500000000139e-05, 9.641600000000194e-05, 9.562500000000196e-05, 9.609699999999985e-05, 9.61800...</msg>
<status status="PASS" starttime="20201029 12:46:22.165" endtime="20201029 12:46:22.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.173" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.172" endtime="20201029 12:46:22.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.176" level="INFO">VALUE: [9.643100000000099e-05, 9.58469999999996e-05, 9.618100000000074e-05, 9.645900000000013e-05, 9.630500000000139e-05, 9.641600000000194e-05, 9.562500000000196e-05, 9.609699999999985e-05, 9.618000000000126e-05, 9.625000000000258e-05, 9.57079999999999e-05, 9.62080000000004e-05, 9.622199999999997e-05, 9.58059999999969e-05, 9.55279999999975e-05, 9.593000000000101e-05, 9.608300000000028e-05, 9.605499999999767e-05, 9.627699999999878e-05, 9.609699999999985e-05, 9.65279999999985e-05, 9.593100000000049e-05, 9.611099999999942e-05, 9.594500000000006e-05, 9.65140000000024e-05, 9.591700000000092e-05, 9.606899999999724e-05, 9.59859999999993e-05, 9.573599999999904e-05, 9.613899999999856e-05, 9.655500000000164e-05, 9.608300000000028e-05, 9.644500000000056e-05, 9.609699999999985e-05, 9.563899999999806e-05, 9.64859999999998e-05, 9.62920000000013e-05, 9.558299999999978e-05, 9.595800000000015e-05, 9.56660000000012e-05, 9.594500000000006e-05, 9.615299999999813e-05, 9.586099999999917e-05, 9.647200000000022e-05, 9.572299999999895e-05, 9.577799999999775e-05, 9.636099999999967e-05, 9.573700000000199e-05, 9.641599999999848e-05, 9.581900000000046e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.174" endtime="20201029 12:46:22.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.169" endtime="20201029 12:46:22.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.182" endtime="20201029 12:46:22.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.180" endtime="20201029 12:46:22.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.179" endtime="20201029 12:46:22.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.814" endtime="20201029 12:46:22.202"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:21.813" endtime="20201029 12:46:22.203"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.212" endtime="20201029 12:46:22.231"></status>
</kw>
<msg timestamp="20201029 12:46:22.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.210" endtime="20201029 12:46:22.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.232" endtime="20201029 12:46:22.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.235" endtime="20201029 12:46:22.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.207" endtime="20201029 12:46:22.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.205" endtime="20201029 12:46:22.237"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.244" endtime="20201029 12:46:22.530"></status>
</kw>
<msg timestamp="20201029 12:46:22.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.242" endtime="20201029 12:46:22.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020001917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020098819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.534" endtime="20201029 12:46:22.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.542" endtime="20201029 12:46:22.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.239" endtime="20201029 12:46:22.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.238" endtime="20201029 12:46:22.545"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.549" level="INFO">${RESULT} = [{'diff': 9.69019999999994e-05}, {'diff': 9.709700000000085e-05}, {'diff': 9.755499999999917e-05}, {'diff': 9.743100000000199e-05}, {'diff': 9.716700000000217e-05}, {'diff': 9.666700000000167e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:22.545" endtime="20201029 12:46:22.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.554" level="INFO">${ACCURACY} = {'diff': [9.69019999999994e-05, 9.709700000000085e-05, 9.755499999999917e-05, 9.743100000000199e-05, 9.716700000000217e-05, 9.666700000000167e-05, 9.658400000000025e-05, 9.737500000000024e-05, 9.67360...</msg>
<status status="PASS" starttime="20201029 12:46:22.550" endtime="20201029 12:46:22.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.558" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.557" endtime="20201029 12:46:22.558"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.561" level="INFO">VALUE: [9.69019999999994e-05, 9.709700000000085e-05, 9.755499999999917e-05, 9.743100000000199e-05, 9.716700000000217e-05, 9.666700000000167e-05, 9.658400000000025e-05, 9.737500000000024e-05, 9.673600000000004e-05, 9.727799999999925e-05, 9.744399999999862e-05, 9.708299999999781e-05, 9.69860000000003e-05, 9.743099999999852e-05, 9.745800000000165e-05, 9.72219999999975e-05, 9.74860000000008e-05, 9.732000000000143e-05, 9.734699999999763e-05, 9.711199999999989e-05, 9.750000000000036e-05, 9.706900000000171e-05, 9.744399999999862e-05, 9.683300000000103e-05, 9.697200000000072e-05, 9.66669999999982e-05, 9.699999999999986e-05, 9.726399999999968e-05, 9.682000000000093e-05, 9.713899999999956e-05, 9.709700000000085e-05, 9.716700000000217e-05, 9.673600000000004e-05, 9.738899999999981e-05, 9.750000000000036e-05, 9.700000000000333e-05, 9.658299999999731e-05, 9.747200000000122e-05, 9.662500000000296e-05, 9.730500000000239e-05, 9.674999999999961e-05, 9.684800000000007e-05, 9.686100000000017e-05, 9.655500000000164e-05, 9.68470000000006e-05, 9.669500000000081e-05, 9.673600000000004e-05, 9.71530000000026e-05, 9.691699999999845e-05, 9.65140000000024e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.559" endtime="20201029 12:46:22.561"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.554" endtime="20201029 12:46:22.562"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.566" endtime="20201029 12:46:22.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.564" endtime="20201029 12:46:22.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.563" endtime="20201029 12:46:22.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.204" endtime="20201029 12:46:22.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.203" endtime="20201029 12:46:22.586"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.595" endtime="20201029 12:46:22.614"></status>
</kw>
<msg timestamp="20201029 12:46:22.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.594" endtime="20201029 12:46:22.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:22.616" endtime="20201029 12:46:22.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.618" endtime="20201029 12:46:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.591" endtime="20201029 12:46:22.620"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.589" endtime="20201029 12:46:22.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.627" endtime="20201029 12:46:22.930"></status>
</kw>
<msg timestamp="20201029 12:46:22.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.626" endtime="20201029 12:46:22.938"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019537292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019635556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:22.940" endtime="20201029 12:46:22.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:22.950" endtime="20201029 12:46:22.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.623" endtime="20201029 12:46:22.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.621" endtime="20201029 12:46:22.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:22.956" level="INFO">${RESULT} = [{'diff': 9.826399999999721e-05}, {'diff': 9.81799999999998e-05}, {'diff': 9.766599999999973e-05}, {'diff': 9.811100000000142e-05}, {'diff': 9.788900000000031e-05}, {'diff': 9.791699999999945e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:22.953" endtime="20201029 12:46:22.957"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:22.960" level="INFO">${ACCURACY} = {'diff': [9.826399999999721e-05, 9.81799999999998e-05, 9.766599999999973e-05, 9.811100000000142e-05, 9.788900000000031e-05, 9.791699999999945e-05, 9.755600000000211e-05, 9.790299999999988e-05, 9.81530...</msg>
<status status="PASS" starttime="20201029 12:46:22.957" endtime="20201029 12:46:22.961"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.965" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201029 12:46:22.964" endtime="20201029 12:46:22.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:22.967" level="INFO">VALUE: [9.826399999999721e-05, 9.81799999999998e-05, 9.766599999999973e-05, 9.811100000000142e-05, 9.788900000000031e-05, 9.791699999999945e-05, 9.755600000000211e-05, 9.790299999999988e-05, 9.815300000000013e-05, 9.820899999999841e-05, 9.787500000000074e-05, 9.823599999999807e-05, 9.800000000000086e-05, 9.811100000000142e-05, 9.786100000000117e-05, 9.759699999999788e-05, 9.762500000000049e-05, 9.795799999999869e-05, 9.809700000000185e-05, 9.78609999999977e-05, 9.8028e-05, 9.773600000000104e-05, 9.791599999999998e-05, 9.834699999999863e-05, 9.829100000000035e-05, 9.776399999999671e-05, 9.800000000000086e-05, 9.79999999999974e-05, 9.797200000000172e-05, 9.791599999999998e-05, 9.829199999999982e-05, 9.808300000000228e-05, 9.80410000000001e-05, 9.769500000000181e-05, 9.783299999999856e-05, 9.777799999999975e-05, 9.78470000000016e-05, 9.781899999999899e-05, 9.78340000000015e-05, 9.82219999999985e-05, 9.763800000000059e-05, 9.84860000000018e-05, 9.756900000000221e-05, 9.8028e-05, 9.811099999999795e-05, 9.837500000000124e-05, 9.791699999999945e-05, 9.836100000000167e-05, 9.813899999999709e-05, 9.831999999999896e-05]</msg>
<status status="PASS" starttime="20201029 12:46:22.966" endtime="20201029 12:46:22.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.961" endtime="20201029 12:46:22.969"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:22.973" endtime="20201029 12:46:22.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.971" endtime="20201029 12:46:22.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.970" endtime="20201029 12:46:22.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.587" endtime="20201029 12:46:22.993"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.587" endtime="20201029 12:46:22.993"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.002" endtime="20201029 12:46:23.024"></status>
</kw>
<msg timestamp="20201029 12:46:23.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.000" endtime="20201029 12:46:23.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.025" endtime="20201029 12:46:23.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.028" endtime="20201029 12:46:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.998" endtime="20201029 12:46:23.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.996" endtime="20201029 12:46:23.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.037" endtime="20201029 12:46:23.323"></status>
</kw>
<msg timestamp="20201029 12:46:23.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.036" endtime="20201029 12:46:23.327"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.335" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021499111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021597653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.327" endtime="20201029 12:46:23.335"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.336" endtime="20201029 12:46:23.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.033" endtime="20201029 12:46:23.338"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.032" endtime="20201029 12:46:23.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.342" level="INFO">${RESULT} = [{'diff': 9.854200000000007e-05}, {'diff': 9.887500000000174e-05}, {'diff': 9.869499999999934e-05}, {'diff': 9.862500000000149e-05}, {'diff': 9.895800000000315e-05}, {'diff': 9.881899999999999e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:23.339" endtime="20201029 12:46:23.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.346" level="INFO">${ACCURACY} = {'diff': [9.854200000000007e-05, 9.887500000000174e-05, 9.869499999999934e-05, 9.862500000000149e-05, 9.895800000000315e-05, 9.881899999999999e-05, 9.93609999999992e-05, 9.90549999999972e-05, 9.925000...</msg>
<status status="PASS" starttime="20201029 12:46:23.343" endtime="20201029 12:46:23.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.351" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.350" endtime="20201029 12:46:23.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.353" level="INFO">VALUE: [9.854200000000007e-05, 9.887500000000174e-05, 9.869499999999934e-05, 9.862500000000149e-05, 9.895800000000315e-05, 9.881899999999999e-05, 9.93609999999992e-05, 9.90549999999972e-05, 9.925000000000211e-05, 9.94860000000028e-05, 9.929199999999735e-05, 9.906999999999971e-05, 9.881999999999946e-05, 9.901299999999849e-05, 9.870799999999944e-05, 9.945800000000019e-05, 9.88609999999987e-05, 9.93060000000004e-05, 9.874999999999814e-05, 9.88609999999987e-05, 9.868099999999977e-05, 9.88609999999987e-05, 9.919400000000037e-05, 9.873599999999857e-05, 9.894400000000012e-05, 9.862500000000149e-05, 9.941700000000095e-05, 9.912499999999852e-05, 9.905600000000014e-05, 9.929200000000082e-05, 9.908400000000275e-05, 9.891700000000045e-05, 9.933399999999953e-05, 9.872300000000195e-05, 9.951300000000246e-05, 9.890299999999741e-05, 9.911099999999895e-05, 9.88609999999987e-05, 9.952699999999856e-05, 9.931999999999996e-05, 9.91670000000007e-05, 9.94999999999989e-05, 9.913899999999809e-05, 9.92219999999995e-05, 9.917999999999733e-05, 9.952699999999856e-05, 9.89999999999984e-05, 9.962499999999902e-05, 9.931999999999996e-05, 9.912499999999852e-05]</msg>
<status status="PASS" starttime="20201029 12:46:23.352" endtime="20201029 12:46:23.355"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.347" endtime="20201029 12:46:23.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.359" endtime="20201029 12:46:23.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.357" endtime="20201029 12:46:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.356" endtime="20201029 12:46:23.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.994" endtime="20201029 12:46:23.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:22.994" endtime="20201029 12:46:23.380"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.388" endtime="20201029 12:46:23.409"></status>
</kw>
<msg timestamp="20201029 12:46:23.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.387" endtime="20201029 12:46:23.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.410" endtime="20201029 12:46:23.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.413" endtime="20201029 12:46:23.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.384" endtime="20201029 12:46:23.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.382" endtime="20201029 12:46:23.416"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.422" endtime="20201029 12:46:23.719"></status>
</kw>
<msg timestamp="20201029 12:46:23.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020379028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.420" endtime="20201029 12:46:23.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020278667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020379028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.728" endtime="20201029 12:46:23.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.747" endtime="20201029 12:46:23.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.418" endtime="20201029 12:46:23.751"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.416" endtime="20201029 12:46:23.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:23.756" level="INFO">${RESULT} = [{'diff': 0.0001003610000000002}, {'diff': 9.974999999999914e-05}, {'diff': 9.997299999999973e-05}, {'diff': 0.00010037499999999977}, {'diff': 9.954200000000107e-05}, {'diff': 9.981900000000099e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:23.753" endtime="20201029 12:46:23.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:23.761" level="INFO">${ACCURACY} = {'diff': [0.0001003610000000002, 9.974999999999914e-05, 9.997299999999973e-05, 0.00010037499999999977, 9.954200000000107e-05, 9.981900000000099e-05, 9.961099999999945e-05, 9.99159999999985e-05, 9.9667...</msg>
<status status="PASS" starttime="20201029 12:46:23.757" endtime="20201029 12:46:23.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.766" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201029 12:46:23.765" endtime="20201029 12:46:23.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.768" level="INFO">VALUE: [0.0001003610000000002, 9.974999999999914e-05, 9.997299999999973e-05, 0.00010037499999999977, 9.954200000000107e-05, 9.981900000000099e-05, 9.961099999999945e-05, 9.99159999999985e-05, 9.96670000000012e-05, 9.994400000000112e-05, 0.00010034700000000063, 0.0001003480000000001, 0.00010019500000000084, 9.987499999999927e-05, 9.995800000000069e-05, 0.00010043000000000205, 9.997200000000026e-05, 9.982000000000046e-05, 0.00010037499999999977, 0.00010056899999999827, 9.962499999999902e-05, 0.00010005599999999767, 9.961099999999945e-05, 9.988899999999884e-05, 9.979199999999785e-05, 0.00010026300000000321, 0.00010031900000000149, 0.0001004999999999999, 9.99999999999994e-05, 9.998599999999983e-05, 9.96670000000012e-05, 0.00010018100000000127, 9.959799999999935e-05, 9.988899999999884e-05, 9.995800000000069e-05, 0.00010019400000000137, 9.965199999999869e-05, 0.00010002799999999853, 0.00010031899999999802, 0.00010029199999999835, 0.0001004999999999999, 9.993100000000102e-05, 9.970899999999991e-05, 0.00010027799999999878, 9.981900000000099e-05, 0.00010020800000000094, 0.00010040199999999944, 0.00010048600000000033, 0.0001002220000000005, 0.00010048600000000033]</msg>
<status status="PASS" starttime="20201029 12:46:23.767" endtime="20201029 12:46:23.769"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.762" endtime="20201029 12:46:23.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:23.773" endtime="20201029 12:46:23.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.772" endtime="20201029 12:46:23.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.771" endtime="20201029 12:46:23.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.381" endtime="20201029 12:46:23.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.380" endtime="20201029 12:46:23.794"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.803" endtime="20201029 12:46:23.823"></status>
</kw>
<msg timestamp="20201029 12:46:23.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.801" endtime="20201029 12:46:23.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:23.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:23.824" endtime="20201029 12:46:23.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.827" endtime="20201029 12:46:23.828"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.798" endtime="20201029 12:46:23.829"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.796" endtime="20201029 12:46:23.829"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:23.836" endtime="20201029 12:46:24.123"></status>
</kw>
<msg timestamp="20201029 12:46:24.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:23.834" endtime="20201029 12:46:24.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020326903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020428083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.127" endtime="20201029 12:46:24.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.135" endtime="20201029 12:46:24.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.832" endtime="20201029 12:46:24.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.830" endtime="20201029 12:46:24.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.142" level="INFO">${RESULT} = [{'diff': 0.00010117999999999933}, {'diff': 0.00010147199999999829}, {'diff': 0.00010155599999999917}, {'diff': 0.00010094399999999865}, {'diff': 0.00010105600000000214}, {'diff': 0.000101514000000000...</msg>
<status status="PASS" starttime="20201029 12:46:24.138" endtime="20201029 12:46:24.142"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.145" level="INFO">${ACCURACY} = {'diff': [0.00010117999999999933, 0.00010147199999999829, 0.00010155599999999917, 0.00010094399999999865, 0.00010105600000000214, 0.00010151400000000046, 0.00010070900000000091, 0.0001013199999999985,...</msg>
<status status="PASS" starttime="20201029 12:46:24.143" endtime="20201029 12:46:24.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.150" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.149" endtime="20201029 12:46:24.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.152" level="INFO">VALUE: [0.00010117999999999933, 0.00010147199999999829, 0.00010155599999999917, 0.00010094399999999865, 0.00010105600000000214, 0.00010151400000000046, 0.00010070900000000091, 0.0001013199999999985, 0.00010070800000000144, 0.00010133299999999859, 0.00010088899999999984, 0.00010120799999999847, 0.00010077799999999928, 0.00010152800000000003, 0.00010097199999999779, 0.00010063900000000306, 0.00010090299999999941, 0.00010127700000000031, 0.00010067999999999883, 0.00010112500000000052, 0.0001013610000000012, 0.00010075000000000014, 0.00010094400000000212, 0.0001015419999999996, 0.00010151400000000046, 0.00010076399999999971, 0.00010144500000000209, 0.0001010549999999992, 0.00010130499999999945, 0.00010138900000000034, 0.00010079099999999938, 0.00010151400000000046, 0.00010063899999999959, 0.00010083299999999809, 0.00010080499999999895, 0.00010062500000000002, 0.00010091700000000245, 0.00010122199999999804, 0.00010081900000000199, 0.00010076399999999971, 0.00010106899999999877, 0.00010097200000000126, 0.00010113900000000009, 0.0001015419999999996, 0.00010148600000000133, 0.00010062500000000002, 0.00010130599999999892, 0.00010077799999999928, 0.00010148599999999786, 0.0001013610000000012]</msg>
<status status="PASS" starttime="20201029 12:46:24.151" endtime="20201029 12:46:24.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.146" endtime="20201029 12:46:24.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.157" endtime="20201029 12:46:24.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.156" endtime="20201029 12:46:24.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.155" endtime="20201029 12:46:24.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.795" endtime="20201029 12:46:24.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:23.794" endtime="20201029 12:46:24.178"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.187" endtime="20201029 12:46:24.207"></status>
</kw>
<msg timestamp="20201029 12:46:24.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.185" endtime="20201029 12:46:24.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.209" endtime="20201029 12:46:24.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.211" endtime="20201029 12:46:24.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.183" endtime="20201029 12:46:24.214"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.181" endtime="20201029 12:46:24.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.220" endtime="20201029 12:46:24.507"></status>
</kw>
<msg timestamp="20201029 12:46:24.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.219" endtime="20201029 12:46:24.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021254486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021356556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.512" endtime="20201029 12:46:24.519"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.520" endtime="20201029 12:46:24.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.216" endtime="20201029 12:46:24.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.215" endtime="20201029 12:46:24.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.527" level="INFO">${RESULT} = [{'diff': 0.00010206999999999924}, {'diff': 0.00010155599999999917}, {'diff': 0.00010170799999999897}, {'diff': 0.00010220799999999947}, {'diff': 0.00010233299999999959}, {'diff': 0.000102305000000000...</msg>
<status status="PASS" starttime="20201029 12:46:24.523" endtime="20201029 12:46:24.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.531" level="INFO">${ACCURACY} = {'diff': [0.00010206999999999924, 0.00010155599999999917, 0.00010170799999999897, 0.00010220799999999947, 0.00010233299999999959, 0.00010230500000000045, 0.0001022220000000025, 0.00010197200000000226,...</msg>
<status status="PASS" starttime="20201029 12:46:24.528" endtime="20201029 12:46:24.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.536" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.535" endtime="20201029 12:46:24.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.538" level="INFO">VALUE: [0.00010206999999999924, 0.00010155599999999917, 0.00010170799999999897, 0.00010220799999999947, 0.00010233299999999959, 0.00010230500000000045, 0.0001022220000000025, 0.00010197200000000226, 0.00010212499999999805, 0.00010220899999999894, 0.00010202800000000053, 0.00010183399999999856, 0.00010162500000000102, 0.00010198599999999836, 0.00010163900000000059, 0.00010236099999999873, 0.00010159799999999788, 0.00010198599999999836, 0.00010227800000000078, 0.00010166699999999973, 0.00010165300000000016, 0.00010201300000000149, 0.0001019160000000005, 0.00010234699999999916, 0.00010212500000000152, 0.00010247199999999929, 0.00010191699999999998, 0.0001022359999999986, 0.00010158399999999831, 0.00010243099999999658, 0.00010238900000000134, 0.00010206899999999977, 0.00010227800000000078, 0.00010240300000000091, 0.00010231900000000002, 0.00010245799999999972, 0.00010159699999999841, 0.00010158299999999884, 0.00010191699999999998, 0.00010173700000000105, 0.0001025000000000019, 0.00010186099999999823, 0.00010248599999999886, 0.00010248599999999886, 0.00010187500000000127, 0.00010243099999999658, 0.0001023749999999983, 0.00010208299999999934, 0.00010252800000000103, 0.00010177800000000028]</msg>
<status status="PASS" starttime="20201029 12:46:24.537" endtime="20201029 12:46:24.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.532" endtime="20201029 12:46:24.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.544" endtime="20201029 12:46:24.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.542" endtime="20201029 12:46:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.541" endtime="20201029 12:46:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.179" endtime="20201029 12:46:24.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.178" endtime="20201029 12:46:24.565"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.573" endtime="20201029 12:46:24.593"></status>
</kw>
<msg timestamp="20201029 12:46:24.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.572" endtime="20201029 12:46:24.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.595" endtime="20201029 12:46:24.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.597" endtime="20201029 12:46:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.569" endtime="20201029 12:46:24.599"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.567" endtime="20201029 12:46:24.599"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.606" endtime="20201029 12:46:24.892"></status>
</kw>
<msg timestamp="20201029 12:46:24.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.604" endtime="20201029 12:46:24.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019548403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019651264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.896" endtime="20201029 12:46:24.903"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.904" endtime="20201029 12:46:24.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.602" endtime="20201029 12:46:24.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.600" endtime="20201029 12:46:24.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:24.910" level="INFO">${RESULT} = [{'diff': 0.0001028610000000027}, {'diff': 0.00010308399999999981}, {'diff': 0.00010291699999999751}, {'diff': 0.00010274999999999868}, {'diff': 0.00010323699999999908}, {'diff': 0.0001028470000000031...</msg>
<status status="PASS" starttime="20201029 12:46:24.907" endtime="20201029 12:46:24.910"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:24.915" level="INFO">${ACCURACY} = {'diff': [0.0001028610000000027, 0.00010308399999999981, 0.00010291699999999751, 0.00010274999999999868, 0.00010323699999999908, 0.00010284700000000313, 0.00010258300000000331, 0.00010345800000000072,...</msg>
<status status="PASS" starttime="20201029 12:46:24.911" endtime="20201029 12:46:24.915"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.920" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201029 12:46:24.919" endtime="20201029 12:46:24.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.922" level="INFO">VALUE: [0.0001028610000000027, 0.00010308399999999981, 0.00010291699999999751, 0.00010274999999999868, 0.00010323699999999908, 0.00010284700000000313, 0.00010258300000000331, 0.00010345800000000072, 0.00010286099999999923, 0.00010284699999999966, 0.00010334700000000016, 0.00010272199999999954, 0.0001031810000000008, 0.00010304100000000163, 0.00010265200000000169, 0.00010293099999999708, 0.00010277800000000128, 0.00010309699999999991, 0.00010286099999999923, 0.00010254199999999714, 0.00010298599999999936, 0.00010255600000000017, 0.00010313900000000209, 0.00010312500000000252, 0.00010254099999999766, 0.00010331900000000102, 0.00010261100000000245, 0.00010348599999999986, 0.00010274999999999868, 0.00010326400000000222, 0.0001027359999999991, 0.00010345900000000019, 0.00010266700000000073, 0.00010340200000000244, 0.00010333299999999712, 0.00010317999999999786, 0.00010270799999999997, 0.00010348599999999986, 0.00010297199999999979, 0.00010294500000000012, 0.00010315299999999819, 0.00010266699999999726, 0.00010283399999999956, 0.00010306900000000077, 0.00010295800000000022, 0.00010320800000000047, 0.00010284799999999913, 0.00010290300000000141, 0.00010336099999999973, 0.00010258399999999931]</msg>
<status status="PASS" starttime="20201029 12:46:24.921" endtime="20201029 12:46:24.923"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.916" endtime="20201029 12:46:24.923"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:24.927" endtime="20201029 12:46:24.946"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.925" endtime="20201029 12:46:24.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.924" endtime="20201029 12:46:24.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.565" endtime="20201029 12:46:24.947"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.565" endtime="20201029 12:46:24.948"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.956" endtime="20201029 12:46:24.975"></status>
</kw>
<msg timestamp="20201029 12:46:24.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.955" endtime="20201029 12:46:24.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:24.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:24.977" endtime="20201029 12:46:24.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.979" endtime="20201029 12:46:24.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.952" endtime="20201029 12:46:24.981"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.950" endtime="20201029 12:46:24.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:24.988" endtime="20201029 12:46:25.276"></status>
</kw>
<msg timestamp="20201029 12:46:25.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:24.987" endtime="20201029 12:46:25.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019527236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019630972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.280" endtime="20201029 12:46:25.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.288" endtime="20201029 12:46:25.290"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.984" endtime="20201029 12:46:25.291"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.983" endtime="20201029 12:46:25.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.295" level="INFO">${RESULT} = [{'diff': 0.0001037360000000001}, {'diff': 0.00010450000000000043}, {'diff': 0.00010440299999999944}, {'diff': 0.00010386100000000023}, {'diff': 0.00010412500000000005}, {'diff': 0.0001038060000000014...</msg>
<status status="PASS" starttime="20201029 12:46:25.292" endtime="20201029 12:46:25.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.299" level="INFO">${ACCURACY} = {'diff': [0.0001037360000000001, 0.00010450000000000043, 0.00010440299999999944, 0.00010386100000000023, 0.00010412500000000005, 0.00010380600000000142, 0.00010444500000000162, 0.00010356900000000127,...</msg>
<status status="PASS" starttime="20201029 12:46:25.296" endtime="20201029 12:46:25.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.303" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.302" endtime="20201029 12:46:25.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.306" level="INFO">VALUE: [0.0001037360000000001, 0.00010450000000000043, 0.00010440299999999944, 0.00010386100000000023, 0.00010412500000000005, 0.00010380600000000142, 0.00010444500000000162, 0.00010356900000000127, 0.00010384700000000066, 0.00010381900000000152, 0.00010452799999999957, 0.00010449999999999696, 0.00010426399999999975, 0.00010413900000000309, 0.00010416699999999876, 0.00010438899999999987, 0.00010384800000000013, 0.00010434699999999769, 0.00010444399999999868, 0.00010433300000000159, 0.00010363899999999912, 0.00010380499999999848, 0.00010402800000000254, 0.00010419500000000137, 0.00010359700000000041, 0.00010399999999999993, 0.0001037360000000001, 0.00010394400000000165, 0.00010380499999999848, 0.00010415300000000266, 0.00010445799999999825, 0.00010361099999999998, 0.0001040559999999982, 0.00010388899999999937, 0.00010416699999999876, 0.00010372300000000001, 0.00010445800000000172, 0.00010426300000000027, 0.00010394399999999818, 0.0001035689999999978, 0.00010448600000000086, 0.00010445799999999825, 0.00010426399999999975, 0.00010433400000000106, 0.00010430599999999846, 0.00010409700000000091, 0.00010386100000000023, 0.00010420800000000147, 0.00010367999999999836, 0.0001040689999999983]</msg>
<status status="PASS" starttime="20201029 12:46:25.304" endtime="20201029 12:46:25.306"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.300" endtime="20201029 12:46:25.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.311" endtime="20201029 12:46:25.330"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.309" endtime="20201029 12:46:25.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.308" endtime="20201029 12:46:25.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.948" endtime="20201029 12:46:25.331"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:24.948" endtime="20201029 12:46:25.331"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.340" endtime="20201029 12:46:25.362"></status>
</kw>
<msg timestamp="20201029 12:46:25.363" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.339" endtime="20201029 12:46:25.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.365" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.364" endtime="20201029 12:46:25.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.366" endtime="20201029 12:46:25.368"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.336" endtime="20201029 12:46:25.369"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.334" endtime="20201029 12:46:25.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.375" endtime="20201029 12:46:25.661"></status>
</kw>
<msg timestamp="20201029 12:46:25.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.374" endtime="20201029 12:46:25.665"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022845097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022950222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:25.666" endtime="20201029 12:46:25.673"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.674" endtime="20201029 12:46:25.675"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.371" endtime="20201029 12:46:25.676"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.370" endtime="20201029 12:46:25.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:25.680" level="INFO">${RESULT} = [{'diff': 0.00010512499999999758}, {'diff': 0.00010470899999999797}, {'diff': 0.00010547199999999882}, {'diff': 0.00010549999999999796}, {'diff': 0.00010479099999999991}, {'diff': 0.000105069999999998...</msg>
<status status="PASS" starttime="20201029 12:46:25.677" endtime="20201029 12:46:25.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:25.684" level="INFO">${ACCURACY} = {'diff': [0.00010512499999999758, 0.00010470899999999797, 0.00010547199999999882, 0.00010549999999999796, 0.00010479099999999991, 0.00010506999999999878, 0.00010483400000000156, 0.00010494399999999918...</msg>
<status status="PASS" starttime="20201029 12:46:25.681" endtime="20201029 12:46:25.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.688" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201029 12:46:25.687" endtime="20201029 12:46:25.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:25.691" level="INFO">VALUE: [0.00010512499999999758, 0.00010470899999999797, 0.00010547199999999882, 0.00010549999999999796, 0.00010479099999999991, 0.00010506999999999878, 0.00010483400000000156, 0.00010494399999999918, 0.00010479099999999991, 0.00010508400000000181, 0.00010554199999999667, 0.00010547199999999882, 0.00010531899999999955, 0.00010473599999999764, 0.00010531999999999903, 0.00010555500000000023, 0.00010548600000000186, 0.00010529100000000041, 0.0001050689999999993, 0.0001047360000000011, 0.00010491699999999951, 0.00010522200000000204, 0.00010515300000000019, 0.00010459800000000088, 0.00010505499999999973, 0.00010512499999999758, 0.00010530599999999946, 0.00010533299999999912, 0.00010551399999999753, 0.00010466599999999979, 0.000105207999999999, 0.00010513900000000062, 0.00010552800000000057, 0.00010529199999999989, 0.00010497300000000126, 0.00010462500000000055, 0.00010530499999999998, 0.00010505499999999973, 0.00010548599999999839, 0.00010455499999999923, 0.00010497200000000179, 0.00010457000000000174, 0.0001050559999999992, 0.00010529199999999989, 0.00010484699999999819, 0.00010547199999999882, 0.0001052360000000016, 0.0001045689999999988, 0.00010455499999999923, 0.00010511100000000148]</msg>
<status status="PASS" starttime="20201029 12:46:25.690" endtime="20201029 12:46:25.692"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.685" endtime="20201029 12:46:25.693"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.697" endtime="20201029 12:46:25.716"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.695" endtime="20201029 12:46:25.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.694" endtime="20201029 12:46:25.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.332" endtime="20201029 12:46:25.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.332" endtime="20201029 12:46:25.717"></status>
</kw>
<status status="PASS" starttime="20201029 12:45:47.258" endtime="20201029 12:46:25.718"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:45:44.133" endtime="20201029 12:46:25.718" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:25.725" endtime="20201029 12:46:25.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.723" endtime="20201029 12:46:25.745"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:25.757" endtime="20201029 12:46:28.778"></status>
</kw>
<msg timestamp="20201029 12:46:28.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:25.756" endtime="20201029 12:46:28.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.781" endtime="20201029 12:46:28.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.790" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:46:28.786" endtime="20201029 12:46:28.791"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.753" endtime="20201029 12:46:28.792"></status>
</kw>
<status status="FAIL" starttime="20201029 12:46:25.751" endtime="20201029 12:46:28.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.750" endtime="20201029 12:46:28.794"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:46:28.802" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:46:28.800" endtime="20201029 12:46:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.796" endtime="20201029 12:46:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.749" endtime="20201029 12:46:28.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.748" endtime="20201029 12:46:28.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.805" endtime="20201029 12:46:28.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.747" endtime="20201029 12:46:28.809"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.745" endtime="20201029 12:46:28.810"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:25.722" endtime="20201029 12:46:28.811"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.832" endtime="20201029 12:46:28.850"></status>
</kw>
<msg timestamp="20201029 12:46:28.851" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.829" endtime="20201029 12:46:28.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:28.856" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:28.853" endtime="20201029 12:46:28.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.859" endtime="20201029 12:46:28.862"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.822" endtime="20201029 12:46:28.863"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.817" endtime="20201029 12:46:28.864"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:28.878" endtime="20201029 12:46:29.173"></status>
</kw>
<msg timestamp="20201029 12:46:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099345597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099350986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:28.875" endtime="20201029 12:46:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.099345597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.099350986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.177" endtime="20201029 12:46:29.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.185" endtime="20201029 12:46:29.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.869" endtime="20201029 12:46:29.188"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.866" endtime="20201029 12:46:29.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.192" level="INFO">${RESULT} = [{'diff': 5.389000000022293e-06}, {'diff': 5.999999999950489e-06}, {'diff': 5.389000000022293e-06}, {'diff': 5.417000000118577e-06}, {'diff': 6.068999999886415e-06}, {'diff': 6.09800000006544e-06}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:29.189" endtime="20201029 12:46:29.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.196" level="INFO">${ACCURACY} = {'diff': [5.389000000022293e-06, 5.999999999950489e-06, 5.389000000022293e-06, 5.417000000118577e-06, 6.068999999886415e-06, 6.09800000006544e-06, 5.708000000215208e-06, 5.375000000196195e-06, 6.08299...</msg>
<status status="PASS" starttime="20201029 12:46:29.193" endtime="20201029 12:46:29.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.201" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.200" endtime="20201029 12:46:29.202"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.204" level="INFO">VALUE: [5.389000000022293e-06, 5.999999999950489e-06, 5.389000000022293e-06, 5.417000000118577e-06, 6.068999999886415e-06, 6.09800000006544e-06, 5.708000000215208e-06, 5.375000000196195e-06, 6.082999999712513e-06, 5.389000000022293e-06, 6.068999999886415e-06, 5.374999999752106e-06, 5.736000000311492e-06, 5.332999999829724e-06, 5.375000000196195e-06, 5.375000000196195e-06, 6.069999999969156e-06, 5.360999999926008e-06, 6.083000000156602e-06, 5.360999999926008e-06, 6.069999999969156e-06, 5.707999999771118e-06, 5.708000000215208e-06, 6.069999999969156e-06, 5.707999999771118e-06, 6.111000000252886e-06, 5.735999999867403e-06, 5.693999999945021e-06, 5.721999999597216e-06, 5.735999999867403e-06, 5.360999999926008e-06, 5.735999999867403e-06, 6.4310000000844525e-06, 6.069999999969156e-06, 5.3610000003700975e-06, 6.0969999999827e-06, 6.0969999999827e-06, 5.332999999829724e-06, 5.736999999950143e-06, 6.068999999886415e-06, 6.055999999698969e-06, 5.721999999597216e-06, 5.790999999977231e-06, 6.068999999886415e-06, 5.722000000041305e-06, 6.152999999731179e-06, 5.6659999998487365e-06, 6.084000000239342e-06, 6.068999999886415e-06, 5.721999999597216e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.203" endtime="20201029 12:46:29.204"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.197" endtime="20201029 12:46:29.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.208" endtime="20201029 12:46:29.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.207" endtime="20201029 12:46:29.228"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.206" endtime="20201029 12:46:29.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.814" endtime="20201029 12:46:29.229"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.813" endtime="20201029 12:46:29.229"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.238" endtime="20201029 12:46:29.251"></status>
</kw>
<msg timestamp="20201029 12:46:29.251" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.236" endtime="20201029 12:46:29.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.253" endtime="20201029 12:46:29.254"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.255" endtime="20201029 12:46:29.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.234" endtime="20201029 12:46:29.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.232" endtime="20201029 12:46:29.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.264" endtime="20201029 12:46:29.549"></status>
</kw>
<msg timestamp="20201029 12:46:29.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.262" endtime="20201029 12:46:29.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020153403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020159764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.553" endtime="20201029 12:46:29.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.562" endtime="20201029 12:46:29.563"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.260" endtime="20201029 12:46:29.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.258" endtime="20201029 12:46:29.564"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.568" level="INFO">${RESULT} = [{'diff': 6.360999999999867e-06}, {'diff': 6.415999999998673e-06}, {'diff': 6.417000000001616e-06}, {'diff': 7.111000000000617e-06}, {'diff': 6.417000000001616e-06}, {'diff': 7.125000000000187e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:29.565" endtime="20201029 12:46:29.568"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.573" level="INFO">${ACCURACY} = {'diff': [6.360999999999867e-06, 6.415999999998673e-06, 6.417000000001616e-06, 7.111000000000617e-06, 6.417000000001616e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.069000000001907e-06, 6.7779...</msg>
<status status="PASS" starttime="20201029 12:46:29.569" endtime="20201029 12:46:29.573"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.578" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.577" endtime="20201029 12:46:29.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.580" level="INFO">VALUE: [6.360999999999867e-06, 6.415999999998673e-06, 6.417000000001616e-06, 7.111000000000617e-06, 6.417000000001616e-06, 7.125000000000187e-06, 7.125000000000187e-06, 7.069000000001907e-06, 6.7779999999989515e-06, 7.0980000000005206e-06, 7.111000000000617e-06, 6.4029999999985765e-06, 6.805000000002087e-06, 7.125000000000187e-06, 7.097000000001047e-06, 6.764000000002851e-06, 6.804999999998618e-06, 7.097000000001047e-06, 6.415999999998673e-06, 7.097000000001047e-06, 7.111000000000617e-06, 6.444000000001282e-06, 6.749999999999812e-06, 7.111000000000617e-06, 7.097000000001047e-06, 7.097000000001047e-06, 6.417000000001616e-06, 7.070000000001381e-06, 7.151999999999853e-06, 6.416999999998146e-06, 7.111000000000617e-06, 6.417000000001616e-06, 6.416000000002142e-06, 6.415999999998673e-06, 7.111000000000617e-06, 6.416999999998146e-06, 6.4029999999985765e-06, 7.013999999999632e-06, 7.084000000000951e-06, 6.776999999999478e-06, 6.416999999998146e-06, 6.416999999998146e-06, 7.084000000000951e-06, 7.125000000000187e-06, 6.833000000001227e-06, 7.111000000000617e-06, 7.083999999997481e-06, 6.762999999999908e-06, 7.056000000001811e-06, 6.681000000001436e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.579" endtime="20201029 12:46:29.580"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.574" endtime="20201029 12:46:29.581"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.585" endtime="20201029 12:46:29.604"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.583" endtime="20201029 12:46:29.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.582" endtime="20201029 12:46:29.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.230" endtime="20201029 12:46:29.605"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.229" endtime="20201029 12:46:29.605"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.615" endtime="20201029 12:46:29.630"></status>
</kw>
<msg timestamp="20201029 12:46:29.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.613" endtime="20201029 12:46:29.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.633" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.632" endtime="20201029 12:46:29.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.634" endtime="20201029 12:46:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.611" endtime="20201029 12:46:29.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.608" endtime="20201029 12:46:29.637"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.643" endtime="20201029 12:46:29.930"></status>
</kw>
<msg timestamp="20201029 12:46:29.933" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.642" endtime="20201029 12:46:29.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.941" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021010667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021018472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:29.934" endtime="20201029 12:46:29.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.943" endtime="20201029 12:46:29.944"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.639" endtime="20201029 12:46:29.945"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.637" endtime="20201029 12:46:29.945"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:29.949" level="INFO">${RESULT} = [{'diff': 7.804999999999618e-06}, {'diff': 8.139000000000757e-06}, {'diff': 8.082999999999008e-06}, {'diff': 7.458000000001852e-06}, {'diff': 7.777999999999952e-06}, {'diff': 7.444000000002282e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:29.946" endtime="20201029 12:46:29.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:29.953" level="INFO">${ACCURACY} = {'diff': [7.804999999999618e-06, 8.139000000000757e-06, 8.082999999999008e-06, 7.458000000001852e-06, 7.777999999999952e-06, 7.444000000002282e-06, 7.791999999999522e-06, 7.791000000000048e-06, 8.1390...</msg>
<status status="PASS" starttime="20201029 12:46:29.950" endtime="20201029 12:46:29.954"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.958" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201029 12:46:29.957" endtime="20201029 12:46:29.958"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:29.960" level="INFO">VALUE: [7.804999999999618e-06, 8.139000000000757e-06, 8.082999999999008e-06, 7.458000000001852e-06, 7.777999999999952e-06, 7.444000000002282e-06, 7.791999999999522e-06, 7.791000000000048e-06, 8.139000000000757e-06, 7.430999999998716e-06, 8.111000000001617e-06, 8.139000000000757e-06, 7.791999999999522e-06, 7.485999999997522e-06, 7.804999999999618e-06, 7.805000000003087e-06, 7.431000000002186e-06, 7.791999999999522e-06, 7.443999999998813e-06, 7.500000000000562e-06, 7.791000000000048e-06, 8.125000000001187e-06, 8.166999999999897e-06, 7.818999999999188e-06, 7.431000000002186e-06, 7.458999999997856e-06, 7.791999999999522e-06, 7.444000000002282e-06, 8.138999999997287e-06, 8.153000000000327e-06, 8.111000000001617e-06, 7.804999999999618e-06, 7.458000000001852e-06, 7.443999999998813e-06, 7.791999999999522e-06, 7.818999999999188e-06, 7.458999999997856e-06, 7.458999999997856e-06, 7.417000000002616e-06, 7.458999999997856e-06, 7.431000000002186e-06, 7.444999999998286e-06, 8.139000000000757e-06, 7.806000000002561e-06, 7.804999999999618e-06, 7.514000000000132e-06, 7.792000000002991e-06, 8.166000000000423e-06, 8.137999999997814e-06, 8.166999999999897e-06]</msg>
<status status="PASS" starttime="20201029 12:46:29.959" endtime="20201029 12:46:29.960"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.954" endtime="20201029 12:46:29.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:29.965" endtime="20201029 12:46:29.984"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.963" endtime="20201029 12:46:29.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.962" endtime="20201029 12:46:29.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.606" endtime="20201029 12:46:29.986"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.606" endtime="20201029 12:46:29.986"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:29.995" endtime="20201029 12:46:30.011"></status>
</kw>
<msg timestamp="20201029 12:46:30.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:29.993" endtime="20201029 12:46:30.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.013" endtime="20201029 12:46:30.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.015" endtime="20201029 12:46:30.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.990" endtime="20201029 12:46:30.017"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.988" endtime="20201029 12:46:30.018"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.024" endtime="20201029 12:46:30.309"></status>
</kw>
<msg timestamp="20201029 12:46:30.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.023" endtime="20201029 12:46:30.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021719292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021728111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:30.313" endtime="20201029 12:46:30.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.321" endtime="20201029 12:46:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.020" endtime="20201029 12:46:30.323"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.018" endtime="20201029 12:46:30.324"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.328" level="INFO">${RESULT} = [{'diff': 8.819000000000188e-06}, {'diff': 8.485999999998523e-06}, {'diff': 9.208000000000133e-06}, {'diff': 8.832999999999758e-06}, {'diff': 9.152999999997857e-06}, {'diff': 9.181000000000467e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:30.325" endtime="20201029 12:46:30.328"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.332" level="INFO">${ACCURACY} = {'diff': [8.819000000000188e-06, 8.485999999998523e-06, 9.208000000000133e-06, 8.832999999999758e-06, 9.152999999997857e-06, 9.181000000000467e-06, 9.235999999999273e-06, 8.832999999999758e-06, 9.1810...</msg>
<status status="PASS" starttime="20201029 12:46:30.329" endtime="20201029 12:46:30.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.336" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.335" endtime="20201029 12:46:30.337"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.339" level="INFO">VALUE: [8.819000000000188e-06, 8.485999999998523e-06, 9.208000000000133e-06, 8.832999999999758e-06, 9.152999999997857e-06, 9.181000000000467e-06, 9.235999999999273e-06, 8.832999999999758e-06, 9.181000000000467e-06, 8.139000000000757e-06, 9.180000000000993e-06, 8.846999999999328e-06, 8.485999999998523e-06, 8.485999999998523e-06, 9.180000000000993e-06, 8.416000000000673e-06, 8.416000000000673e-06, 8.819999999999661e-06, 8.485999999998523e-06, 8.514000000001132e-06, 8.832999999999758e-06, 8.804999999997148e-06, 8.846999999999328e-06, 8.500000000001562e-06, 8.486000000001992e-06, 9.181000000000467e-06, 8.847000000002797e-06, 8.804999999997148e-06, 8.832999999999758e-06, 8.471999999998953e-06, 8.833999999999231e-06, 9.167000000000897e-06, 9.181000000000467e-06, 9.208999999999606e-06, 9.138999999998287e-06, 8.832999999999758e-06, 9.153000000001327e-06, 9.181000000000467e-06, 8.472000000002422e-06, 9.166000000001423e-06, 8.486000000001992e-06, 9.235999999999273e-06, 8.806000000000092e-06, 8.832999999999758e-06, 8.846999999999328e-06, 8.832999999999758e-06, 8.819000000000188e-06, 8.486000000001992e-06, 8.138999999997287e-06, 8.471999999998953e-06]</msg>
<status status="PASS" starttime="20201029 12:46:30.337" endtime="20201029 12:46:30.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.333" endtime="20201029 12:46:30.341"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.345" endtime="20201029 12:46:30.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.343" endtime="20201029 12:46:30.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.342" endtime="20201029 12:46:30.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.987" endtime="20201029 12:46:30.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:29.986" endtime="20201029 12:46:30.365"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.374" endtime="20201029 12:46:30.389"></status>
</kw>
<msg timestamp="20201029 12:46:30.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.372" endtime="20201029 12:46:30.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.390" endtime="20201029 12:46:30.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.393" endtime="20201029 12:46:30.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.370" endtime="20201029 12:46:30.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.368" endtime="20201029 12:46:30.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.402" endtime="20201029 12:46:30.688"></status>
</kw>
<msg timestamp="20201029 12:46:30.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:30.400" endtime="20201029 12:46:30.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019507833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019517, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:30.692" endtime="20201029 12:46:30.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.700" endtime="20201029 12:46:30.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.398" endtime="20201029 12:46:30.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.396" endtime="20201029 12:46:30.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:30.707" level="INFO">${RESULT} = [{'diff': 9.167000000000897e-06}, {'diff': 9.860999999999898e-06}, {'diff': 9.847000000000328e-06}, {'diff': 9.555000000001368e-06}, {'diff': 9.526999999998759e-06}, {'diff': 9.181000000000467e-06}, {...</msg>
<status status="PASS" starttime="20201029 12:46:30.704" endtime="20201029 12:46:30.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:30.712" level="INFO">${ACCURACY} = {'diff': [9.167000000000897e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.555000000001368e-06, 9.526999999998759e-06, 9.181000000000467e-06, 9.860999999999898e-06, 9.513999999998662e-06, 1.0209...</msg>
<status status="PASS" starttime="20201029 12:46:30.708" endtime="20201029 12:46:30.712"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.716" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201029 12:46:30.715" endtime="20201029 12:46:30.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.719" level="INFO">VALUE: [9.167000000000897e-06, 9.860999999999898e-06, 9.847000000000328e-06, 9.555000000001368e-06, 9.526999999998759e-06, 9.181000000000467e-06, 9.860999999999898e-06, 9.513999999998662e-06, 1.0209000000000606e-05, 9.888999999999037e-06, 1.0207999999997663e-05, 9.555999999997372e-06, 9.526999999998759e-06, 9.916999999998177e-06, 1.0209000000000606e-05, 9.194000000000563e-06, 9.528000000001702e-06, 1.0223000000000176e-05, 9.902999999998607e-06, 9.806000000001092e-06, 9.874999999999468e-06, 9.569000000000938e-06, 9.805000000001618e-06, 9.597000000000078e-06, 9.875000000002937e-06, 9.889000000002507e-06, 9.889000000002507e-06, 9.181000000000467e-06, 1.0194000000001563e-05, 9.528000000001702e-06, 9.528000000001702e-06, 9.860999999999898e-06, 9.860999999999898e-06, 1.0209000000000606e-05, 9.860999999999898e-06, 1.0222000000000703e-05, 9.526999999998759e-06, 9.179999999997523e-06, 1.0208000000001133e-05, 9.819000000001188e-06, 9.514000000002132e-06, 1.0208000000001133e-05, 1.0223000000000176e-05, 9.181000000000467e-06, 1.0194000000001563e-05, 9.499999999999093e-06, 9.860999999999898e-06, 9.528000000001702e-06, 9.527999999998232e-06, 9.874999999999468e-06]</msg>
<status status="PASS" starttime="20201029 12:46:30.717" endtime="20201029 12:46:30.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.713" endtime="20201029 12:46:30.720"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:30.724" endtime="20201029 12:46:30.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.722" endtime="20201029 12:46:30.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.721" endtime="20201029 12:46:30.744"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.366" endtime="20201029 12:46:30.745"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.366" endtime="20201029 12:46:30.745"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.753" endtime="20201029 12:46:30.769"></status>
</kw>
<msg timestamp="20201029 12:46:30.770" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.752" endtime="20201029 12:46:30.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:30.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:30.771" endtime="20201029 12:46:30.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.773" endtime="20201029 12:46:30.775"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.749" endtime="20201029 12:46:30.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.747" endtime="20201029 12:46:30.776"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:30.782" endtime="20201029 12:46:31.069"></status>
</kw>
<msg timestamp="20201029 12:46:31.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:30.781" endtime="20201029 12:46:31.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020483833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02049475, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:46:31.073" endtime="20201029 12:46:31.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.082" endtime="20201029 12:46:31.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.778" endtime="20201029 12:46:31.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.777" endtime="20201029 12:46:31.084"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.088" level="INFO">${RESULT} = [{'diff': 1.0916999999999177e-05}, {'diff': 1.1249999999997373e-05}, {'diff': 1.0943999999998844e-05}, {'diff': 1.0554999999998899e-05}, {'diff': 1.0194000000001563e-05}, {'diff': 1.0555000000002368e-...</msg>
<status status="PASS" starttime="20201029 12:46:31.085" endtime="20201029 12:46:31.088"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.092" level="INFO">${ACCURACY} = {'diff': [1.0916999999999177e-05, 1.1249999999997373e-05, 1.0943999999998844e-05, 1.0554999999998899e-05, 1.0194000000001563e-05, 1.0555000000002368e-05, 1.1249999999997373e-05, 1.0916999999999177e-05...</msg>
<status status="PASS" starttime="20201029 12:46:31.089" endtime="20201029 12:46:31.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.097" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.096" endtime="20201029 12:46:31.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.099" level="INFO">VALUE: [1.0916999999999177e-05, 1.1249999999997373e-05, 1.0943999999998844e-05, 1.0554999999998899e-05, 1.0194000000001563e-05, 1.0555000000002368e-05, 1.1249999999997373e-05, 1.0916999999999177e-05, 1.0555999999998372e-05, 1.1264000000000413e-05, 1.0861000000000898e-05, 1.0195000000001037e-05, 1.0556000000001842e-05, 1.0902999999999607e-05, 1.1250000000000843e-05, 1.1221999999998233e-05, 1.0902999999999607e-05, 1.1250000000000843e-05, 1.0902999999999607e-05, 1.0555999999998372e-05, 1.0915999999999704e-05, 1.1250000000000843e-05, 1.0889000000000038e-05, 1.0555999999998372e-05, 1.0915999999999704e-05, 1.0527999999999232e-05, 1.0223000000000176e-05, 1.1249999999997373e-05, 1.0875000000000468e-05, 1.0916999999999177e-05, 1.1263999999996943e-05, 1.0889000000000038e-05, 1.0222000000000703e-05, 1.0223000000000176e-05, 1.0902999999999607e-05, 1.1250000000000843e-05, 1.0208000000001133e-05, 1.0916999999999177e-05, 1.0222000000000703e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.0916999999999177e-05, 1.0875000000000468e-05, 1.0889000000000038e-05, 1.1250000000000843e-05, 1.1277999999999982e-05, 1.0570000000001412e-05, 1.0208000000001133e-05, 1.0944999999998317e-05, 1.1250000000000843e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.098" endtime="20201029 12:46:31.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.093" endtime="20201029 12:46:31.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.104" endtime="20201029 12:46:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.103" endtime="20201029 12:46:31.124"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.102" endtime="20201029 12:46:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.746" endtime="20201029 12:46:31.125"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:30.745" endtime="20201029 12:46:31.125"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.134" endtime="20201029 12:46:31.151"></status>
</kw>
<msg timestamp="20201029 12:46:31.151" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.132" endtime="20201029 12:46:31.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.152" endtime="20201029 12:46:31.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.155" endtime="20201029 12:46:31.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.129" endtime="20201029 12:46:31.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.127" endtime="20201029 12:46:31.157"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.163" endtime="20201029 12:46:31.450"></status>
</kw>
<msg timestamp="20201029 12:46:31.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.162" endtime="20201029 12:46:31.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021285014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021296625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.454" endtime="20201029 12:46:31.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.463" endtime="20201029 12:46:31.464"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.159" endtime="20201029 12:46:31.465"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.158" endtime="20201029 12:46:31.465"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.469" level="INFO">${RESULT} = [{'diff': 1.1610999999998178e-05}, {'diff': 1.1944999999999317e-05}, {'diff': 1.1957999999999414e-05}, {'diff': 1.1624999999997748e-05}, {'diff': 1.1582999999999039e-05}, {'diff': 1.2277999999997513e-...</msg>
<status status="PASS" starttime="20201029 12:46:31.466" endtime="20201029 12:46:31.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.473" level="INFO">${ACCURACY} = {'diff': [1.1610999999998178e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.1624999999997748e-05, 1.1582999999999039e-05, 1.2277999999997513e-05, 1.1598000000001552e-05, 1.1264000000000413e-05...</msg>
<status status="PASS" starttime="20201029 12:46:31.470" endtime="20201029 12:46:31.473"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.477" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.476" endtime="20201029 12:46:31.478"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.480" level="INFO">VALUE: [1.1610999999998178e-05, 1.1944999999999317e-05, 1.1957999999999414e-05, 1.1624999999997748e-05, 1.1582999999999039e-05, 1.2277999999997513e-05, 1.1598000000001552e-05, 1.1264000000000413e-05, 1.1597000000002078e-05, 1.1277999999999982e-05, 1.1264000000000413e-05, 1.1930000000000274e-05, 1.1930999999999747e-05, 1.1944999999999317e-05, 1.1250000000000843e-05, 1.1250000000000843e-05, 1.2278000000000983e-05, 1.1292000000003022e-05, 1.2264000000001413e-05, 1.1555999999999372e-05, 1.1943999999999844e-05, 1.1597000000002078e-05, 1.1596999999998608e-05, 1.2278000000000983e-05, 1.1583999999998512e-05, 1.1610999999998178e-05, 1.1944999999999317e-05, 1.1930999999999747e-05, 1.1582999999999039e-05, 1.1236999999997277e-05, 1.1195000000002037e-05, 1.2292000000000552e-05, 1.1597000000002078e-05, 1.1943999999999844e-05, 1.2263999999997943e-05, 1.1583999999998512e-05, 1.2249999999998373e-05, 1.1584000000001982e-05, 1.1597000000002078e-05, 1.1944999999999317e-05, 1.1596999999998608e-05, 1.1250000000000843e-05, 1.1957999999999414e-05, 1.1250000000000843e-05, 1.229099999999761e-05, 1.1930000000000274e-05, 1.1264000000000413e-05, 1.1957999999999414e-05, 1.1596999999998608e-05, 1.1639000000000788e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.478" endtime="20201029 12:46:31.482"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.474" endtime="20201029 12:46:31.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.486" endtime="20201029 12:46:31.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.484" endtime="20201029 12:46:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.483" endtime="20201029 12:46:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.126" endtime="20201029 12:46:31.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.125" endtime="20201029 12:46:31.507"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.515" endtime="20201029 12:46:31.531"></status>
</kw>
<msg timestamp="20201029 12:46:31.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.514" endtime="20201029 12:46:31.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.533" endtime="20201029 12:46:31.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.535" endtime="20201029 12:46:31.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.511" endtime="20201029 12:46:31.537"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.509" endtime="20201029 12:46:31.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.544" endtime="20201029 12:46:31.830"></status>
</kw>
<msg timestamp="20201029 12:46:31.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.543" endtime="20201029 12:46:31.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020454208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020467181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.834" endtime="20201029 12:46:31.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.843" endtime="20201029 12:46:31.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.540" endtime="20201029 12:46:31.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.538" endtime="20201029 12:46:31.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:31.849" level="INFO">${RESULT} = [{'diff': 1.2972999999999457e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2624999999998748e-05}, {'diff': 1.2638999999998318e-05}, {'diff': 1.2958000000000414e-05}, {'diff': 1.2985999999999553e-...</msg>
<status status="PASS" starttime="20201029 12:46:31.846" endtime="20201029 12:46:31.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:31.856" level="INFO">${ACCURACY} = {'diff': [1.2972999999999457e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2958000000000414e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2638999999998318e-05...</msg>
<status status="PASS" starttime="20201029 12:46:31.850" endtime="20201029 12:46:31.857"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.861" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201029 12:46:31.860" endtime="20201029 12:46:31.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.863" level="INFO">VALUE: [1.2972999999999457e-05, 1.2638999999998318e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2958000000000414e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2638999999998318e-05, 1.2693999999997124e-05, 1.2639000000001788e-05, 1.2292000000000552e-05, 1.2625000000002218e-05, 1.3319000000001219e-05, 1.2971999999999984e-05, 1.2624999999998748e-05, 1.3292000000001553e-05, 1.2971999999999984e-05, 1.2624999999998748e-05, 1.2277999999997513e-05, 1.3347000000000359e-05, 1.2291000000001079e-05, 1.2985999999999553e-05, 1.2638999999998318e-05, 1.2278000000000983e-05, 1.2971999999999984e-05, 1.2291000000001079e-05, 1.2985999999999553e-05, 1.2263999999997943e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.2973000000002927e-05, 1.3277999999998513e-05, 1.2972999999999457e-05, 1.333299999999732e-05, 1.2278000000000983e-05, 1.2985999999999553e-05, 1.2292000000000552e-05, 1.2985999999999553e-05, 1.3320000000000692e-05, 1.3028000000001733e-05, 1.3320000000000692e-05, 1.2624999999998748e-05, 1.2985999999999553e-05, 1.2651999999998415e-05, 1.2278000000000983e-05, 1.2583000000000039e-05, 1.2277999999997513e-05, 1.2624999999998748e-05, 1.2971999999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:46:31.862" endtime="20201029 12:46:31.864"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.857" endtime="20201029 12:46:31.865"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:31.868" endtime="20201029 12:46:31.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.867" endtime="20201029 12:46:31.888"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.866" endtime="20201029 12:46:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.507" endtime="20201029 12:46:31.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.507" endtime="20201029 12:46:31.889"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.898" endtime="20201029 12:46:31.913"></status>
</kw>
<msg timestamp="20201029 12:46:31.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.896" endtime="20201029 12:46:31.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:31.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:31.914" endtime="20201029 12:46:31.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.916" endtime="20201029 12:46:31.918"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.893" endtime="20201029 12:46:31.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.891" endtime="20201029 12:46:31.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:31.925" endtime="20201029 12:46:32.212"></status>
</kw>
<msg timestamp="20201029 12:46:32.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:31.924" endtime="20201029 12:46:32.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019648569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019662208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.216" endtime="20201029 12:46:32.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.225" endtime="20201029 12:46:32.226"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.921" endtime="20201029 12:46:32.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.920" endtime="20201029 12:46:32.227"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.231" level="INFO">${RESULT} = [{'diff': 1.3638999999999318e-05}, {'diff': 1.404099999999936e-05}, {'diff': 1.4013999999999693e-05}, {'diff': 1.4000000000000123e-05}, {'diff': 1.3347999999999832e-05}, {'diff': 1.3639000000002788e-0...</msg>
<status status="PASS" starttime="20201029 12:46:32.228" endtime="20201029 12:46:32.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.235" level="INFO">${ACCURACY} = {'diff': [1.3638999999999318e-05, 1.404099999999936e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3347999999999832e-05, 1.3639000000002788e-05, 1.3305000000001649e-05, 1.4014000000003163e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:32.232" endtime="20201029 12:46:32.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.240" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.239" endtime="20201029 12:46:32.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.242" level="INFO">VALUE: [1.3638999999999318e-05, 1.404099999999936e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3347999999999832e-05, 1.3639000000002788e-05, 1.3305000000001649e-05, 1.4014000000003163e-05, 1.4013999999999693e-05, 1.3681000000001498e-05, 1.402699999999979e-05, 1.4000000000000123e-05, 1.3666999999998458e-05, 1.4000000000000123e-05, 1.3957999999997944e-05, 1.4347000000001359e-05, 1.4027999999999263e-05, 1.4014000000003163e-05, 1.3666000000002454e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.4027999999999263e-05, 1.3653000000002358e-05, 1.4028000000002733e-05, 1.4319999999998223e-05, 1.3652999999998888e-05, 1.3333000000000789e-05, 1.3666999999998458e-05, 1.3320000000000692e-05, 1.4027999999999263e-05, 1.4013999999999693e-05, 1.4000000000000123e-05, 1.3652999999998888e-05, 1.3680999999998028e-05, 1.3986999999996558e-05, 1.4443999999998874e-05, 1.3666999999998458e-05, 1.329099999999861e-05, 1.3347000000000359e-05, 1.4360999999997459e-05, 1.3709000000000637e-05, 1.3680000000002024e-05, 1.3320000000000692e-05, 1.3652999999998888e-05, 1.3986000000000554e-05, 1.3319000000001219e-05, 1.3999999999996654e-05, 1.3347999999999832e-05, 1.3334000000000262e-05, 1.4375000000000498e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.241" endtime="20201029 12:46:32.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.236" endtime="20201029 12:46:32.244"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.247" endtime="20201029 12:46:32.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.246" endtime="20201029 12:46:32.267"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.245" endtime="20201029 12:46:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.890" endtime="20201029 12:46:32.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:31.889" endtime="20201029 12:46:32.268"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.277" endtime="20201029 12:46:32.293"></status>
</kw>
<msg timestamp="20201029 12:46:32.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.275" endtime="20201029 12:46:32.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.296" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.294" endtime="20201029 12:46:32.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.297" endtime="20201029 12:46:32.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.273" endtime="20201029 12:46:32.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.271" endtime="20201029 12:46:32.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.306" endtime="20201029 12:46:32.592"></status>
</kw>
<msg timestamp="20201029 12:46:32.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:32.305" endtime="20201029 12:46:32.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020520639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:32.596" endtime="20201029 12:46:32.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.608" endtime="20201029 12:46:32.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.302" endtime="20201029 12:46:32.611"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.300" endtime="20201029 12:46:32.612"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:32.618" level="INFO">${RESULT} = [{'diff': 1.4361000000000929e-05}, {'diff': 1.4319999999998223e-05}, {'diff': 1.4320000000001692e-05}, {'diff': 1.4695000000002068e-05}, {'diff': 1.5084000000002012e-05}, {'diff': 1.4375000000000498e-...</msg>
<status status="PASS" starttime="20201029 12:46:32.613" endtime="20201029 12:46:32.619"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:32.626" level="INFO">${ACCURACY} = {'diff': [1.4361000000000929e-05, 1.4319999999998223e-05, 1.4320000000001692e-05, 1.4695000000002068e-05, 1.5084000000002012e-05, 1.4375000000000498e-05, 1.502700000000079e-05, 1.5041999999999833e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:32.620" endtime="20201029 12:46:32.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.631" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201029 12:46:32.630" endtime="20201029 12:46:32.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.634" level="INFO">VALUE: [1.4361000000000929e-05, 1.4319999999998223e-05, 1.4320000000001692e-05, 1.4695000000002068e-05, 1.5084000000002012e-05, 1.4375000000000498e-05, 1.502700000000079e-05, 1.5041999999999833e-05, 1.5070000000002443e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.4375000000000498e-05, 1.4361000000000929e-05, 1.5056000000002873e-05, 1.4694000000002594e-05, 1.4347000000001359e-05, 1.5028000000000263e-05, 1.4707999999998694e-05, 1.5027999999996794e-05, 1.5041999999999833e-05, 1.5056000000002873e-05, 1.4416999999999208e-05, 1.5069999999998973e-05, 1.502700000000079e-05, 1.5055999999999403e-05, 1.4375000000000498e-05, 1.4681000000002498e-05, 1.4749999999997404e-05, 1.4374999999997029e-05, 1.4693999999999124e-05, 1.4652999999999888e-05, 1.505499999999993e-05, 1.4374999999997029e-05, 1.5028000000000263e-05, 1.504100000000036e-05, 1.5055999999999403e-05, 1.505499999999993e-05, 1.4708000000002164e-05, 1.5028000000000263e-05, 1.4750000000000874e-05, 1.5055999999999403e-05, 1.5041999999999833e-05, 1.4375000000000498e-05, 1.4402999999999638e-05, 1.505499999999993e-05, 1.4361000000000929e-05, 1.50689999999995e-05, 1.433299999999832e-05, 1.505499999999993e-05, 1.4680999999999028e-05]</msg>
<status status="PASS" starttime="20201029 12:46:32.632" endtime="20201029 12:46:32.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.627" endtime="20201029 12:46:32.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:32.639" endtime="20201029 12:46:32.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.638" endtime="20201029 12:46:32.659"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.637" endtime="20201029 12:46:32.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.269" endtime="20201029 12:46:32.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.269" endtime="20201029 12:46:32.660"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.669" endtime="20201029 12:46:32.683"></status>
</kw>
<msg timestamp="20201029 12:46:32.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.667" endtime="20201029 12:46:32.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.686" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:32.685" endtime="20201029 12:46:32.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.687" endtime="20201029 12:46:32.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.665" endtime="20201029 12:46:32.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.663" endtime="20201029 12:46:32.690"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.696" endtime="20201029 12:46:32.983"></status>
</kw>
<msg timestamp="20201029 12:46:32.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.695" endtime="20201029 12:46:32.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:32.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019602028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019617444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:32.988" endtime="20201029 12:46:32.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:32.996" endtime="20201029 12:46:32.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.692" endtime="20201029 12:46:32.998"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.690" endtime="20201029 12:46:32.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.003" level="INFO">${RESULT} = [{'diff': 1.5416000000000735e-05}, {'diff': 1.615300000000139e-05}, {'diff': 1.5749999999998404e-05}, {'diff': 1.608300000000007e-05}, {'diff': 1.6097999999999113e-05}, {'diff': 1.608300000000007e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:33.000" endtime="20201029 12:46:33.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.008" level="INFO">${ACCURACY} = {'diff': [1.5416000000000735e-05, 1.615300000000139e-05, 1.5749999999998404e-05, 1.608300000000007e-05, 1.6097999999999113e-05, 1.608300000000007e-05, 1.533299999999932e-05, 1.608300000000007e-05, 1.5...</msg>
<status status="PASS" starttime="20201029 12:46:33.004" endtime="20201029 12:46:33.008"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.012" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.011" endtime="20201029 12:46:33.013"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.015" level="INFO">VALUE: [1.5416000000000735e-05, 1.615300000000139e-05, 1.5749999999998404e-05, 1.608300000000007e-05, 1.6097999999999113e-05, 1.608300000000007e-05, 1.533299999999932e-05, 1.608300000000007e-05, 1.57629999999985e-05, 1.541700000000021e-05, 1.604100000000136e-05, 1.5721999999999264e-05, 1.5362000000001402e-05, 1.5749999999998404e-05, 1.6013999999998224e-05, 1.612500000000225e-05, 1.60690000000005e-05, 1.609699999999964e-05, 1.540300000000064e-05, 1.604099999999789e-05, 1.540300000000064e-05, 1.60690000000005e-05, 1.6097999999999113e-05, 1.5749999999998404e-05, 1.612500000000225e-05, 1.6069999999999973e-05, 1.53750000000015e-05, 1.608300000000007e-05, 1.5750000000001874e-05, 1.538900000000107e-05, 1.5737000000001777e-05, 1.6083999999999543e-05, 1.540300000000064e-05, 1.5750000000001874e-05, 1.5750000000001874e-05, 1.577700000000154e-05, 1.540299999999717e-05, 1.5681000000000028e-05, 1.5402000000001165e-05, 1.537499999999803e-05, 1.5750000000001874e-05, 1.53889999999976e-05, 1.5721999999999264e-05, 1.538900000000107e-05, 1.540300000000064e-05, 1.53889999999976e-05, 1.611099999999921e-05, 1.60690000000005e-05, 1.5764000000001444e-05, 1.612500000000225e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.013" endtime="20201029 12:46:33.015"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.009" endtime="20201029 12:46:33.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.020" endtime="20201029 12:46:33.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.018" endtime="20201029 12:46:33.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.017" endtime="20201029 12:46:33.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.661" endtime="20201029 12:46:33.040"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:32.660" endtime="20201029 12:46:33.040"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.049" endtime="20201029 12:46:33.064"></status>
</kw>
<msg timestamp="20201029 12:46:33.064" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.048" endtime="20201029 12:46:33.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.065" endtime="20201029 12:46:33.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.068" endtime="20201029 12:46:33.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.045" endtime="20201029 12:46:33.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.043" endtime="20201029 12:46:33.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.077" endtime="20201029 12:46:33.364"></status>
</kw>
<msg timestamp="20201029 12:46:33.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.075" endtime="20201029 12:46:33.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019786347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019803458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.368" endtime="20201029 12:46:33.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.377" endtime="20201029 12:46:33.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.073" endtime="20201029 12:46:33.379"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.071" endtime="20201029 12:46:33.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.383" level="INFO">${RESULT} = [{'diff': 1.711100000000021e-05}, {'diff': 1.712499999999978e-05}, {'diff': 1.6472000000000014e-05}, {'diff': 1.684700000000039e-05}, {'diff': 1.643100000000078e-05}, {'diff': 1.6444000000000875e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:33.380" endtime="20201029 12:46:33.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.387" level="INFO">${ACCURACY} = {'diff': [1.711100000000021e-05, 1.712499999999978e-05, 1.6472000000000014e-05, 1.684700000000039e-05, 1.643100000000078e-05, 1.6444000000000875e-05, 1.6778000000002014e-05, 1.636099999999946e-05, 1.7...</msg>
<status status="PASS" starttime="20201029 12:46:33.384" endtime="20201029 12:46:33.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.392" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.391" endtime="20201029 12:46:33.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.394" level="INFO">VALUE: [1.711100000000021e-05, 1.712499999999978e-05, 1.6472000000000014e-05, 1.684700000000039e-05, 1.643100000000078e-05, 1.6444000000000875e-05, 1.6778000000002014e-05, 1.636099999999946e-05, 1.712499999999978e-05, 1.6430000000001305e-05, 1.7111999999999683e-05, 1.713899999999935e-05, 1.711100000000021e-05, 1.6777999999998544e-05, 1.643100000000078e-05, 1.6763999999998974e-05, 1.6791999999998114e-05, 1.6792000000001583e-05, 1.6445000000000348e-05, 1.712500000000325e-05, 1.6735999999999834e-05, 1.712499999999978e-05, 1.6485999999999584e-05, 1.6778000000002014e-05, 1.6763999999998974e-05, 1.643100000000078e-05, 1.638900000000207e-05, 1.7137999999999876e-05, 1.712499999999978e-05, 1.713900000000282e-05, 1.6778000000002014e-05, 1.679099999999864e-05, 1.637499999999903e-05, 1.712499999999978e-05, 1.679100000000211e-05, 1.713899999999935e-05, 1.712499999999978e-05, 1.712499999999978e-05, 1.684700000000039e-05, 1.680499999999821e-05, 1.643099999999731e-05, 1.70829999999976e-05, 1.643100000000078e-05, 1.7111999999999683e-05, 1.643100000000078e-05, 1.6430000000001305e-05, 1.6429999999997835e-05, 1.6445000000000348e-05, 1.712499999999978e-05, 1.676300000000297e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.393" endtime="20201029 12:46:33.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.388" endtime="20201029 12:46:33.396"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.399" endtime="20201029 12:46:33.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.398" endtime="20201029 12:46:33.419"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.397" endtime="20201029 12:46:33.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.041" endtime="20201029 12:46:33.420"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.041" endtime="20201029 12:46:33.420"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.429" endtime="20201029 12:46:33.444"></status>
</kw>
<msg timestamp="20201029 12:46:33.445" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.427" endtime="20201029 12:46:33.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.446" endtime="20201029 12:46:33.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.448" endtime="20201029 12:46:33.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.425" endtime="20201029 12:46:33.451"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.423" endtime="20201029 12:46:33.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.457" endtime="20201029 12:46:33.744"></status>
</kw>
<msg timestamp="20201029 12:46:33.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.456" endtime="20201029 12:46:33.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020415431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020432889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.748" endtime="20201029 12:46:33.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.757" endtime="20201029 12:46:33.758"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.453" endtime="20201029 12:46:33.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.452" endtime="20201029 12:46:33.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:33.763" level="INFO">${RESULT} = [{'diff': 1.7457999999997975e-05}, {'diff': 1.7834000000001293e-05}, {'diff': 1.7458000000001445e-05}, {'diff': 1.786100000000096e-05}, {'diff': 1.7806000000002153e-05}, {'diff': 1.7486000000000584e-0...</msg>
<status status="PASS" starttime="20201029 12:46:33.760" endtime="20201029 12:46:33.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:33.767" level="INFO">${ACCURACY} = {'diff': [1.7457999999997975e-05, 1.7834000000001293e-05, 1.7458000000001445e-05, 1.786100000000096e-05, 1.7806000000002153e-05, 1.7486000000000584e-05, 1.7485999999997115e-05, 1.7819999999998254e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:33.764" endtime="20201029 12:46:33.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.772" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201029 12:46:33.771" endtime="20201029 12:46:33.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.774" level="INFO">VALUE: [1.7457999999997975e-05, 1.7834000000001293e-05, 1.7458000000001445e-05, 1.786100000000096e-05, 1.7806000000002153e-05, 1.7486000000000584e-05, 1.7485999999997115e-05, 1.7819999999998254e-05, 1.818099999999906e-05, 1.8207999999998725e-05, 1.7805999999998684e-05, 1.816699999999949e-05, 1.815299999999992e-05, 1.7473000000000488e-05, 1.7472000000001014e-05, 1.82089999999982e-05, 1.8166000000000015e-05, 1.780499999999921e-05, 1.8152000000000446e-05, 1.7457999999997975e-05, 1.7805999999998684e-05, 1.8180000000003055e-05, 1.818099999999906e-05, 1.7458000000001445e-05, 1.7541999999998864e-05, 1.7486000000000584e-05, 1.815299999999992e-05, 1.744499999999788e-05, 1.816699999999949e-05, 1.8208000000002195e-05, 1.7473000000000488e-05, 1.7791999999999114e-05, 1.780499999999921e-05, 1.8152000000000446e-05, 1.781899999999878e-05, 1.786100000000096e-05, 1.781899999999878e-05, 1.711100000000021e-05, 1.7819999999998254e-05, 1.783299999999835e-05, 1.7457999999997975e-05, 1.780499999999921e-05, 1.815299999999992e-05, 1.780499999999921e-05, 1.815299999999992e-05, 1.7763999999999974e-05, 1.741699999999874e-05, 1.815299999999992e-05, 1.713900000000282e-05, 1.7458000000001445e-05]</msg>
<status status="PASS" starttime="20201029 12:46:33.773" endtime="20201029 12:46:33.776"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.768" endtime="20201029 12:46:33.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:33.780" endtime="20201029 12:46:33.799"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.778" endtime="20201029 12:46:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.777" endtime="20201029 12:46:33.800"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.421" endtime="20201029 12:46:33.801"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.421" endtime="20201029 12:46:33.801"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.809" endtime="20201029 12:46:33.825"></status>
</kw>
<msg timestamp="20201029 12:46:33.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.808" endtime="20201029 12:46:33.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:33.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:33.827" endtime="20201029 12:46:33.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.829" endtime="20201029 12:46:33.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.805" endtime="20201029 12:46:33.831"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.803" endtime="20201029 12:46:33.832"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:33.838" endtime="20201029 12:46:34.124"></status>
</kw>
<msg timestamp="20201029 12:46:34.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:33.837" endtime="20201029 12:46:34.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020363875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020383069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.128" endtime="20201029 12:46:34.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.136" endtime="20201029 12:46:34.138"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.834" endtime="20201029 12:46:34.139"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.832" endtime="20201029 12:46:34.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.143" level="INFO">${RESULT} = [{'diff': 1.9194000000000155e-05}, {'diff': 1.854100000000039e-05}, {'diff': 1.883299999999935e-05}, {'diff': 1.886099999999849e-05}, {'diff': 1.916700000000049e-05}, {'diff': 1.883299999999935e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:34.140" endtime="20201029 12:46:34.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.148" level="INFO">${ACCURACY} = {'diff': [1.9194000000000155e-05, 1.854100000000039e-05, 1.883299999999935e-05, 1.886099999999849e-05, 1.916700000000049e-05, 1.883299999999935e-05, 1.808300000000207e-05, 1.8486000000001584e-05, 1.88...</msg>
<status status="PASS" starttime="20201029 12:46:34.144" endtime="20201029 12:46:34.149"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.153" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.152" endtime="20201029 12:46:34.154"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.156" level="INFO">VALUE: [1.9194000000000155e-05, 1.854100000000039e-05, 1.883299999999935e-05, 1.886099999999849e-05, 1.916700000000049e-05, 1.883299999999935e-05, 1.808300000000207e-05, 1.8486000000001584e-05, 1.8819999999999254e-05, 1.8500000000001154e-05, 1.919499999999963e-05, 1.919499999999963e-05, 1.8152000000000446e-05, 1.8847999999998394e-05, 1.92089999999992e-05, 1.884700000000239e-05, 1.9180000000000585e-05, 1.815299999999992e-05, 1.883299999999935e-05, 1.8500000000001154e-05, 1.9235999999998865e-05, 1.884700000000239e-05, 1.9194000000000155e-05, 1.884700000000239e-05, 1.884700000000239e-05, 1.918100000000006e-05, 1.883299999999935e-05, 1.8805999999999684e-05, 1.8485999999998115e-05, 1.880500000000021e-05, 1.8514000000000724e-05, 1.9180000000000585e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.8499999999997685e-05, 1.8514000000000724e-05, 1.886100000000196e-05, 1.919499999999963e-05, 1.8500000000001154e-05, 1.8500000000001154e-05, 1.887499999999806e-05, 1.883299999999935e-05, 1.9194000000000155e-05, 1.9194000000000155e-05, 1.852700000000082e-05, 1.883299999999935e-05, 1.8166000000000015e-05, 1.920900000000267e-05, 1.852700000000082e-05, 1.9194000000000155e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.154" endtime="20201029 12:46:34.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.149" endtime="20201029 12:46:34.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.161" endtime="20201029 12:46:34.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.159" endtime="20201029 12:46:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.158" endtime="20201029 12:46:34.181"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.802" endtime="20201029 12:46:34.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:33.801" endtime="20201029 12:46:34.182"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.198" endtime="20201029 12:46:34.220"></status>
</kw>
<msg timestamp="20201029 12:46:34.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.189" endtime="20201029 12:46:34.223"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.225" endtime="20201029 12:46:34.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.235" endtime="20201029 12:46:34.241"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.186" endtime="20201029 12:46:34.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.184" endtime="20201029 12:46:34.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.267" endtime="20201029 12:46:34.559"></status>
</kw>
<msg timestamp="20201029 12:46:34.566" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031749292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.262" endtime="20201029 12:46:34.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.031749292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.031768833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.569" endtime="20201029 12:46:34.587"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.588" endtime="20201029 12:46:34.592"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.254" endtime="20201029 12:46:34.593"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.248" endtime="20201029 12:46:34.594"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:34.603" level="INFO">${RESULT} = [{'diff': 1.954100000000486e-05}, {'diff': 1.9820000000003724e-05}, {'diff': 1.9527999999997825e-05}, {'diff': 1.98890000000021e-05}, {'diff': 1.9887999999995687e-05}, {'diff': 2.0222000000000295e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:34.596" endtime="20201029 12:46:34.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:34.613" level="INFO">${ACCURACY} = {'diff': [1.954100000000486e-05, 1.9820000000003724e-05, 1.9527999999997825e-05, 1.98890000000021e-05, 1.9887999999995687e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 1.9542000000004334e-05, 1...</msg>
<status status="PASS" starttime="20201029 12:46:34.606" endtime="20201029 12:46:34.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.624" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201029 12:46:34.621" endtime="20201029 12:46:34.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.633" level="INFO">VALUE: [1.954100000000486e-05, 1.9820000000003724e-05, 1.9527999999997825e-05, 1.98890000000021e-05, 1.9887999999995687e-05, 2.0222000000000295e-05, 2.0235999999999865e-05, 1.9542000000004334e-05, 1.984699999999645e-05, 1.98890000000021e-05, 1.987500000000253e-05, 1.9527999999997825e-05, 1.9527999999997825e-05, 1.9528000000004764e-05, 1.9541999999997395e-05, 1.9542000000004334e-05, 1.9499999999998685e-05, 1.9180000000000585e-05, 1.987500000000253e-05, 1.954100000000486e-05, 1.9528000000004764e-05, 1.987500000000253e-05, 1.990299999999473e-05, 1.9513999999998255e-05, 1.988899999999516e-05, 2.0235999999999865e-05, 1.9194000000000155e-05, 1.9207999999999725e-05, 1.9194000000000155e-05, 2.0222000000000295e-05, 1.98890000000021e-05, 1.9541999999997395e-05, 1.986100000000296e-05, 1.9485999999999115e-05, 1.9528000000004764e-05, 2.0235999999999865e-05, 1.995899999999995e-05, 1.987500000000253e-05, 1.9584000000003043e-05, 1.987500000000253e-05, 1.990299999999473e-05, 1.9542000000004334e-05, 1.98890000000021e-05, 2.0249999999999435e-05, 2.0194000000001155e-05, 1.9541999999997395e-05, 1.986099999999602e-05, 1.980499999999774e-05, 1.9528000000004764e-05, 1.9499999999998685e-05]</msg>
<status status="PASS" starttime="20201029 12:46:34.628" endtime="20201029 12:46:34.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.615" endtime="20201029 12:46:34.643"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:34.652" endtime="20201029 12:46:34.672"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.650" endtime="20201029 12:46:34.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.646" endtime="20201029 12:46:34.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.183" endtime="20201029 12:46:34.673"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.182" endtime="20201029 12:46:34.673"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.682" endtime="20201029 12:46:34.698"></status>
</kw>
<msg timestamp="20201029 12:46:34.699" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.680" endtime="20201029 12:46:34.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:34.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:34.700" endtime="20201029 12:46:34.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.703" endtime="20201029 12:46:34.704"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.678" endtime="20201029 12:46:34.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.676" endtime="20201029 12:46:34.705"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:34.711" endtime="20201029 12:46:34.998"></status>
</kw>
<msg timestamp="20201029 12:46:35.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:34.710" endtime="20201029 12:46:35.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020541903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020562889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.002" endtime="20201029 12:46:35.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.011" endtime="20201029 12:46:35.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.707" endtime="20201029 12:46:35.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.706" endtime="20201029 12:46:35.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.017" level="INFO">${RESULT} = [{'diff': 2.0986000000000615e-05}, {'diff': 2.061100000000024e-05}, {'diff': 2.0250000000002905e-05}, {'diff': 2.0569999999997535e-05}, {'diff': 2.0570000000001004e-05}, {'diff': 2.093100000000181e-05...</msg>
<status status="PASS" starttime="20201029 12:46:35.014" endtime="20201029 12:46:35.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.021" level="INFO">${ACCURACY} = {'diff': [2.0986000000000615e-05, 2.061100000000024e-05, 2.0250000000002905e-05, 2.0569999999997535e-05, 2.0570000000001004e-05, 2.093100000000181e-05, 2.1250000000000435e-05, 2.0901999999999726e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:35.018" endtime="20201029 12:46:35.021"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.026" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.025" endtime="20201029 12:46:35.026"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.029" level="INFO">VALUE: [2.0986000000000615e-05, 2.061100000000024e-05, 2.0250000000002905e-05, 2.0569999999997535e-05, 2.0570000000001004e-05, 2.093100000000181e-05, 2.1250000000000435e-05, 2.0901999999999726e-05, 2.0915999999999296e-05, 2.0570000000001004e-05, 2.1221999999997826e-05, 2.0570000000001004e-05, 2.1208000000001725e-05, 2.091699999999877e-05, 2.0222000000000295e-05, 2.1179999999999116e-05, 2.093099999999834e-05, 2.055500000000196e-05, 2.095900000000095e-05, 2.129099999999967e-05, 2.0929999999998866e-05, 2.1264000000000005e-05, 2.055499999999849e-05, 2.05830000000011e-05, 2.0929999999998866e-05, 2.1264000000000005e-05, 2.0930000000002336e-05, 2.022299999999977e-05, 2.1291999999999145e-05, 2.091699999999877e-05, 2.1264000000000005e-05, 2.086100000000049e-05, 2.093100000000181e-05, 2.1277999999999575e-05, 2.058299999999763e-05, 2.0915999999999296e-05, 2.091699999999877e-05, 2.05830000000011e-05, 2.087500000000006e-05, 2.056900000000153e-05, 2.05830000000011e-05, 2.091699999999877e-05, 2.091699999999877e-05, 2.09029999999992e-05, 2.0915999999999296e-05, 2.093100000000181e-05, 2.1250000000000435e-05, 2.1264000000000005e-05, 2.090300000000267e-05, 2.091699999999877e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.027" endtime="20201029 12:46:35.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.022" endtime="20201029 12:46:35.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.034" endtime="20201029 12:46:35.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.032" endtime="20201029 12:46:35.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.031" endtime="20201029 12:46:35.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.674" endtime="20201029 12:46:35.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:34.674" endtime="20201029 12:46:35.055"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.063" endtime="20201029 12:46:35.079"></status>
</kw>
<msg timestamp="20201029 12:46:35.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.062" endtime="20201029 12:46:35.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.081" endtime="20201029 12:46:35.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.083" endtime="20201029 12:46:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.059" endtime="20201029 12:46:35.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.057" endtime="20201029 12:46:35.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.092" endtime="20201029 12:46:35.384"></status>
</kw>
<msg timestamp="20201029 12:46:35.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.090" endtime="20201029 12:46:35.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019468708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.393" endtime="20201029 12:46:35.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.412" endtime="20201029 12:46:35.415"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.088" endtime="20201029 12:46:35.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.086" endtime="20201029 12:46:35.417"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.425" level="INFO">${RESULT} = [{'diff': 2.1319999999998285e-05}, {'diff': 2.161099999999777e-05}, {'diff': 2.1943999999999436e-05}, {'diff': 2.1958000000002476e-05}, {'diff': 2.1264000000000005e-05}, {'diff': 2.1264000000000005e-0...</msg>
<status status="PASS" starttime="20201029 12:46:35.418" endtime="20201029 12:46:35.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.440" level="INFO">${ACCURACY} = {'diff': [2.1319999999998285e-05, 2.161099999999777e-05, 2.1943999999999436e-05, 2.1958000000002476e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.2305999999999715e-05, 2.162500000000081e-05, ...</msg>
<status status="PASS" starttime="20201029 12:46:35.427" endtime="20201029 12:46:35.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.449" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.447" endtime="20201029 12:46:35.450"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.454" level="INFO">VALUE: [2.1319999999998285e-05, 2.161099999999777e-05, 2.1943999999999436e-05, 2.1958000000002476e-05, 2.1264000000000005e-05, 2.1264000000000005e-05, 2.2305999999999715e-05, 2.162500000000081e-05, 2.1306000000002184e-05, 2.161100000000124e-05, 2.159700000000167e-05, 2.12770000000001e-05, 2.1264000000000005e-05, 2.194499999999891e-05, 2.1598000000001144e-05, 2.1943999999999436e-05, 2.1944000000002906e-05, 2.1944000000002906e-05, 2.1264000000000005e-05, 2.161100000000124e-05, 2.1985999999998146e-05, 2.1264000000000005e-05, 2.195900000000195e-05, 2.1999999999997716e-05, 2.1277999999999575e-05, 2.12770000000001e-05, 2.161099999999777e-05, 2.1264000000000005e-05, 2.1612000000000714e-05, 2.165299999999995e-05, 2.1277999999999575e-05, 2.2264000000001005e-05, 2.1291999999999145e-05, 2.1598000000001144e-05, 2.1958000000002476e-05, 2.161100000000124e-05, 2.1943999999999436e-05, 2.2292000000000145e-05, 2.161100000000124e-05, 2.161100000000124e-05, 2.1236000000000865e-05, 2.2305999999999715e-05, 2.1958000000002476e-05, 2.2292000000000145e-05, 2.1901999999997257e-05, 2.1264000000000005e-05, 2.1944000000002906e-05, 2.1929999999999866e-05, 2.195899999999848e-05, 2.1958000000002476e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.452" endtime="20201029 12:46:35.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.442" endtime="20201029 12:46:35.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.459" endtime="20201029 12:46:35.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.457" endtime="20201029 12:46:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.456" endtime="20201029 12:46:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.055" endtime="20201029 12:46:35.479"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.055" endtime="20201029 12:46:35.479"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.488" endtime="20201029 12:46:35.503"></status>
</kw>
<msg timestamp="20201029 12:46:35.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.486" endtime="20201029 12:46:35.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.506" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.504" endtime="20201029 12:46:35.506"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.507" endtime="20201029 12:46:35.508"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.484" endtime="20201029 12:46:35.509"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.482" endtime="20201029 12:46:35.509"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.515" endtime="20201029 12:46:35.846"></status>
</kw>
<msg timestamp="20201029 12:46:35.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.514" endtime="20201029 12:46:35.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019514236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019536889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.850" endtime="20201029 12:46:35.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.858" endtime="20201029 12:46:35.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.511" endtime="20201029 12:46:35.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.510" endtime="20201029 12:46:35.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:35.865" level="INFO">${RESULT} = [{'diff': 2.265300000000095e-05}, {'diff': 2.263900000000138e-05}, {'diff': 2.3000000000002185e-05}, {'diff': 2.2999999999998716e-05}, {'diff': 2.3333999999999855e-05}, {'diff': 2.3042000000000895e-05...</msg>
<status status="PASS" starttime="20201029 12:46:35.862" endtime="20201029 12:46:35.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:35.870" level="INFO">${ACCURACY} = {'diff': [2.265300000000095e-05, 2.263900000000138e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.3333999999999855e-05, 2.3042000000000895e-05, 2.2986000000002615e-05, 2.263900000000138e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:35.867" endtime="20201029 12:46:35.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.875" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201029 12:46:35.874" endtime="20201029 12:46:35.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.877" level="INFO">VALUE: [2.265300000000095e-05, 2.263900000000138e-05, 2.3000000000002185e-05, 2.2999999999998716e-05, 2.3333999999999855e-05, 2.3042000000000895e-05, 2.2986000000002615e-05, 2.263900000000138e-05, 2.266699999999705e-05, 2.263900000000138e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.230500000000024e-05, 2.3027999999997856e-05, 2.3014000000001755e-05, 2.2999999999998716e-05, 2.3263999999998536e-05, 2.2637999999998437e-05, 2.2971999999999576e-05, 2.231899999999981e-05, 2.2999999999998716e-05, 2.2985999999999146e-05, 2.2651999999998007e-05, 2.2292000000000145e-05, 2.261100000000224e-05, 2.2985999999999146e-05, 2.2999999999998716e-05, 2.263899999999791e-05, 2.2985999999999146e-05, 2.231899999999981e-05, 2.263899999999791e-05, 2.2694000000000186e-05, 2.298699999999862e-05, 2.3000000000002185e-05, 2.2972000000003046e-05, 2.2985999999999146e-05, 2.3333999999999855e-05, 2.2292000000000145e-05, 2.333300000000038e-05, 2.263899999999791e-05, 2.2584000000002574e-05, 2.2305999999999715e-05, 2.2665999999997577e-05, 2.2943999999996967e-05, 2.2637999999998437e-05, 2.298699999999862e-05, 2.262500000000181e-05, 2.2999999999998716e-05, 2.258299999999963e-05, 2.333300000000038e-05]</msg>
<status status="PASS" starttime="20201029 12:46:35.876" endtime="20201029 12:46:35.878"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.871" endtime="20201029 12:46:35.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:35.882" endtime="20201029 12:46:35.902"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.880" endtime="20201029 12:46:35.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.879" endtime="20201029 12:46:35.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.480" endtime="20201029 12:46:35.903"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.480" endtime="20201029 12:46:35.903"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.912" endtime="20201029 12:46:35.926"></status>
</kw>
<msg timestamp="20201029 12:46:35.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.910" endtime="20201029 12:46:35.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:35.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:35.928" endtime="20201029 12:46:35.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.930" endtime="20201029 12:46:35.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.908" endtime="20201029 12:46:35.932"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.906" endtime="20201029 12:46:35.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:35.939" endtime="20201029 12:46:36.228"></status>
</kw>
<msg timestamp="20201029 12:46:36.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019498306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:35.938" endtime="20201029 12:46:36.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019474625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019498306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.233" endtime="20201029 12:46:36.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.241" endtime="20201029 12:46:36.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.935" endtime="20201029 12:46:36.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.933" endtime="20201029 12:46:36.243"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.247" level="INFO">${RESULT} = [{'diff': 2.368100000000109e-05}, {'diff': 2.4056000000001465e-05}, {'diff': 2.4027999999998856e-05}, {'diff': 2.3986000000000146e-05}, {'diff': 2.3679999999998147e-05}, {'diff': 2.3333999999999855e-0...</msg>
<status status="PASS" starttime="20201029 12:46:36.244" endtime="20201029 12:46:36.248"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.252" level="INFO">${ACCURACY} = {'diff': [2.368100000000109e-05, 2.4056000000001465e-05, 2.4027999999998856e-05, 2.3986000000000146e-05, 2.3679999999998147e-05, 2.3333999999999855e-05, 2.368100000000109e-05, 2.363899999999891e-05, 2...</msg>
<status status="PASS" starttime="20201029 12:46:36.248" endtime="20201029 12:46:36.252"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.257" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.256" endtime="20201029 12:46:36.257"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.259" level="INFO">VALUE: [2.368100000000109e-05, 2.4056000000001465e-05, 2.4027999999998856e-05, 2.3986000000000146e-05, 2.3679999999998147e-05, 2.3333999999999855e-05, 2.368100000000109e-05, 2.363899999999891e-05, 2.3999999999999716e-05, 2.4070000000001035e-05, 2.3666000000002047e-05, 2.369500000000066e-05, 2.437500000000009e-05, 2.3693999999997717e-05, 2.368100000000109e-05, 2.4013999999999286e-05, 2.366700000000152e-05, 2.3665999999998577e-05, 2.3402000000002227e-05, 2.4014000000002755e-05, 2.334699999999995e-05, 2.3694000000001186e-05, 2.368100000000109e-05, 2.3722000000000326e-05, 2.3333999999999855e-05, 2.330500000000124e-05, 2.3347999999999425e-05, 2.331900000000081e-05, 2.333300000000038e-05, 2.402700000000285e-05, 2.4348000000000425e-05, 2.4027999999998856e-05, 2.368100000000109e-05, 2.333300000000038e-05, 2.368100000000109e-05, 2.4013999999999286e-05, 2.437500000000009e-05, 2.333300000000038e-05, 2.4041999999998426e-05, 2.4070000000001035e-05, 2.4361999999999995e-05, 2.4028000000002325e-05, 2.368100000000109e-05, 2.368100000000109e-05, 2.4042000000001895e-05, 2.4026999999999382e-05, 2.4014000000002755e-05, 2.369500000000066e-05, 2.4027999999998856e-05, 2.4027999999998856e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.258" endtime="20201029 12:46:36.260"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.253" endtime="20201029 12:46:36.260"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.264" endtime="20201029 12:46:36.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.263" endtime="20201029 12:46:36.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.261" endtime="20201029 12:46:36.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.904" endtime="20201029 12:46:36.285"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:35.904" endtime="20201029 12:46:36.285"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.294" endtime="20201029 12:46:36.309"></status>
</kw>
<msg timestamp="20201029 12:46:36.309" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.292" endtime="20201029 12:46:36.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.312" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.310" endtime="20201029 12:46:36.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.313" endtime="20201029 12:46:36.314"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.290" endtime="20201029 12:46:36.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.288" endtime="20201029 12:46:36.315"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.322" endtime="20201029 12:46:36.609"></status>
</kw>
<msg timestamp="20201029 12:46:36.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.320" endtime="20201029 12:46:36.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019711167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019736236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.614" endtime="20201029 12:46:36.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.622" endtime="20201029 12:46:36.623"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.318" endtime="20201029 12:46:36.624"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.316" endtime="20201029 12:46:36.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:36.628" level="INFO">${RESULT} = [{'diff': 2.5068999999999092e-05}, {'diff': 2.436100000000052e-05}, {'diff': 2.4707999999998287e-05}, {'diff': 2.430500000000224e-05}, {'diff': 2.5068999999999092e-05}, {'diff': 2.436100000000052e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:36.625" endtime="20201029 12:46:36.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:36.632" level="INFO">${ACCURACY} = {'diff': [2.5068999999999092e-05, 2.436100000000052e-05, 2.4707999999998287e-05, 2.430500000000224e-05, 2.5068999999999092e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.4...</msg>
<status status="PASS" starttime="20201029 12:46:36.629" endtime="20201029 12:46:36.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.637" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201029 12:46:36.636" endtime="20201029 12:46:36.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.639" level="INFO">VALUE: [2.5068999999999092e-05, 2.436100000000052e-05, 2.4707999999998287e-05, 2.430500000000224e-05, 2.5068999999999092e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.437500000000009e-05, 2.469500000000166e-05, 2.4708000000001756e-05, 2.469500000000166e-05, 2.5069999999998566e-05, 2.5069999999998566e-05, 2.5068999999999092e-05, 2.4721999999997857e-05, 2.436100000000052e-05, 2.469499999999819e-05, 2.437500000000009e-05, 2.54169999999998e-05, 2.4708000000001756e-05, 2.5054999999999522e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.5054999999999522e-05, 2.4736000000000896e-05, 2.511100000000127e-05, 2.436100000000052e-05, 2.541700000000327e-05, 2.5069999999998566e-05, 2.5055999999998996e-05, 2.437500000000009e-05, 2.468100000000209e-05, 2.5055999999998996e-05, 2.437500000000009e-05, 2.5068999999999092e-05, 2.5055999999998996e-05, 2.5054999999999522e-05, 2.5055999999998996e-05, 2.4693999999998717e-05, 2.443100000000184e-05, 2.436100000000052e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4722000000001326e-05, 2.4320000000001285e-05, 2.437500000000009e-05, 2.47230000000008e-05, 2.4736000000000896e-05, 2.437500000000009e-05, 2.5416000000000327e-05]</msg>
<status status="PASS" starttime="20201029 12:46:36.638" endtime="20201029 12:46:36.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.633" endtime="20201029 12:46:36.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:36.644" endtime="20201029 12:46:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.643" endtime="20201029 12:46:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.642" endtime="20201029 12:46:36.664"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.286" endtime="20201029 12:46:36.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.286" endtime="20201029 12:46:36.665"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.673" endtime="20201029 12:46:36.689"></status>
</kw>
<msg timestamp="20201029 12:46:36.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.672" endtime="20201029 12:46:36.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:36.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:36.691" endtime="20201029 12:46:36.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.693" endtime="20201029 12:46:36.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.669" endtime="20201029 12:46:36.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.667" endtime="20201029 12:46:36.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:36.702" endtime="20201029 12:46:37.007"></status>
</kw>
<msg timestamp="20201029 12:46:37.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:36.701" endtime="20201029 12:46:37.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020400528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020425917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.011" endtime="20201029 12:46:37.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.019" endtime="20201029 12:46:37.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.698" endtime="20201029 12:46:37.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.697" endtime="20201029 12:46:37.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.026" level="INFO">${RESULT} = [{'diff': 2.538899999999719e-05}, {'diff': 2.5764000000001036e-05}, {'diff': 2.5763999999997567e-05}, {'diff': 2.6083999999999136e-05}, {'diff': 2.5750000000001466e-05}, {'diff': 2.6083999999999136e-0...</msg>
<status status="PASS" starttime="20201029 12:46:37.023" endtime="20201029 12:46:37.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.030" level="INFO">${ACCURACY} = {'diff': [2.538899999999719e-05, 2.5764000000001036e-05, 2.5763999999997567e-05, 2.6083999999999136e-05, 2.5750000000001466e-05, 2.6083999999999136e-05, 2.6082999999999662e-05, 2.5763999999997567e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:37.027" endtime="20201029 12:46:37.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.034" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.033" endtime="20201029 12:46:37.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.038" level="INFO">VALUE: [2.538899999999719e-05, 2.5764000000001036e-05, 2.5763999999997567e-05, 2.6083999999999136e-05, 2.5750000000001466e-05, 2.6083999999999136e-05, 2.6082999999999662e-05, 2.5763999999997567e-05, 2.6028000000000856e-05, 2.5429999999999897e-05, 2.6096999999999232e-05, 2.54169999999998e-05, 2.6112000000001745e-05, 2.5791000000000702e-05, 2.6083999999999136e-05, 2.6055999999999996e-05, 2.611100000000227e-05, 2.6082999999999662e-05, 2.6096999999999232e-05, 2.5750000000001466e-05, 2.5764000000001036e-05, 2.6096999999999232e-05, 2.540300000000023e-05, 2.5457999999999037e-05, 2.6083999999999136e-05, 2.5749999999997997e-05, 2.540300000000023e-05, 2.5736000000001896e-05, 2.6054999999997053e-05, 2.5750000000001466e-05, 2.5736000000001896e-05, 2.6082999999999662e-05, 2.5750000000001466e-05, 2.540300000000023e-05, 2.5764000000001036e-05, 2.615300000000098e-05, 2.5764000000001036e-05, 2.6098000000002175e-05, 2.5764000000001036e-05, 2.5791000000000702e-05, 2.540300000000023e-05, 2.6096999999999232e-05, 2.5834000000002355e-05, 2.5402000000000757e-05, 2.6083999999999136e-05, 2.5764000000001036e-05, 2.5402000000000757e-05, 2.544499999999894e-05, 2.6096999999999232e-05, 2.5778000000000606e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.036" endtime="20201029 12:46:37.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.031" endtime="20201029 12:46:37.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.043" endtime="20201029 12:46:37.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.041" endtime="20201029 12:46:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.040" endtime="20201029 12:46:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.666" endtime="20201029 12:46:37.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:36.665" endtime="20201029 12:46:37.064"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.073" endtime="20201029 12:46:37.089"></status>
</kw>
<msg timestamp="20201029 12:46:37.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.072" endtime="20201029 12:46:37.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.091" endtime="20201029 12:46:37.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.094" endtime="20201029 12:46:37.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.069" endtime="20201029 12:46:37.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.067" endtime="20201029 12:46:37.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.102" endtime="20201029 12:46:37.389"></status>
</kw>
<msg timestamp="20201029 12:46:37.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021045236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.101" endtime="20201029 12:46:37.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021045236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021071667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.393" endtime="20201029 12:46:37.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.401" endtime="20201029 12:46:37.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.098" endtime="20201029 12:46:37.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.097" endtime="20201029 12:46:37.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.408" level="INFO">${RESULT} = [{'diff': 2.643100000000037e-05}, {'diff': 2.6458000000000037e-05}, {'diff': 2.6778000000001606e-05}, {'diff': 2.6790999999998233e-05}, {'diff': 2.6764000000002036e-05}, {'diff': 2.6805999999997276e-0...</msg>
<status status="PASS" starttime="20201029 12:46:37.405" endtime="20201029 12:46:37.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.413" level="INFO">${ACCURACY} = {'diff': [2.643100000000037e-05, 2.6458000000000037e-05, 2.6778000000001606e-05, 2.6790999999998233e-05, 2.6764000000002036e-05, 2.6805999999997276e-05, 2.7124999999999372e-05, 2.7138000000002938e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:37.409" endtime="20201029 12:46:37.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.418" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.417" endtime="20201029 12:46:37.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.420" level="INFO">VALUE: [2.643100000000037e-05, 2.6458000000000037e-05, 2.6778000000001606e-05, 2.6790999999998233e-05, 2.6764000000002036e-05, 2.6805999999997276e-05, 2.7124999999999372e-05, 2.7138000000002938e-05, 2.6792000000001176e-05, 2.6777999999998137e-05, 2.6444000000000467e-05, 2.6443999999996998e-05, 2.7083000000000662e-05, 2.644499999999994e-05, 2.6764000000002036e-05, 2.7138999999998942e-05, 2.6833000000000412e-05, 2.6721999999999857e-05, 2.6763999999998567e-05, 2.6792000000001176e-05, 2.6806000000000746e-05, 2.6458000000000037e-05, 2.6749999999998997e-05, 2.6444000000000467e-05, 2.644500000000341e-05, 2.6763999999998567e-05, 2.7124999999999372e-05, 2.6792000000001176e-05, 2.6443999999996998e-05, 2.644499999999994e-05, 2.644499999999994e-05, 2.7138999999998942e-05, 2.7110999999999802e-05, 2.643100000000037e-05, 2.640299999999776e-05, 2.6791999999997707e-05, 2.7124999999999372e-05, 2.6792000000001176e-05, 2.7138999999998942e-05, 2.6778000000001606e-05, 2.6777000000002132e-05, 2.6791999999997707e-05, 2.6846999999999982e-05, 2.643100000000037e-05, 2.6792000000001176e-05, 2.713900000000241e-05, 2.6444000000000467e-05, 2.6735999999999427e-05, 2.6763999999998567e-05, 2.6444000000000467e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.419" endtime="20201029 12:46:37.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.414" endtime="20201029 12:46:37.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.425" endtime="20201029 12:46:37.444"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.423" endtime="20201029 12:46:37.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.422" endtime="20201029 12:46:37.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.064" endtime="20201029 12:46:37.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.064" endtime="20201029 12:46:37.446"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.454" endtime="20201029 12:46:37.471"></status>
</kw>
<msg timestamp="20201029 12:46:37.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.453" endtime="20201029 12:46:37.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.472" endtime="20201029 12:46:37.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.475" endtime="20201029 12:46:37.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.450" endtime="20201029 12:46:37.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.448" endtime="20201029 12:46:37.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.484" endtime="20201029 12:46:37.789"></status>
</kw>
<msg timestamp="20201029 12:46:37.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.482" endtime="20201029 12:46:37.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020110111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020137944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.794" endtime="20201029 12:46:37.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.802" endtime="20201029 12:46:37.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.479" endtime="20201029 12:46:37.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.478" endtime="20201029 12:46:37.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:37.809" level="INFO">${RESULT} = [{'diff': 2.7833000000001412e-05}, {'diff': 2.816700000000255e-05}, {'diff': 2.7804999999998803e-05}, {'diff': 2.7832999999997943e-05}, {'diff': 2.7902999999999262e-05}, {'diff': 2.7486000000000177e-0...</msg>
<status status="PASS" starttime="20201029 12:46:37.805" endtime="20201029 12:46:37.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:37.813" level="INFO">${ACCURACY} = {'diff': [2.7833000000001412e-05, 2.816700000000255e-05, 2.7804999999998803e-05, 2.7832999999997943e-05, 2.7902999999999262e-05, 2.7486000000000177e-05, 2.8165999999999608e-05, 2.8152999999999512e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:37.810" endtime="20201029 12:46:37.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.817" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201029 12:46:37.816" endtime="20201029 12:46:37.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.820" level="INFO">VALUE: [2.7833000000001412e-05, 2.816700000000255e-05, 2.7804999999998803e-05, 2.7832999999997943e-05, 2.7902999999999262e-05, 2.7486000000000177e-05, 2.8165999999999608e-05, 2.8152999999999512e-05, 2.816699999999908e-05, 2.8110999999997333e-05, 2.7818999999998373e-05, 2.7458000000001037e-05, 2.7847000000000982e-05, 2.7875000000000122e-05, 2.7834000000000886e-05, 2.816699999999908e-05, 2.7486000000000177e-05, 2.748699999999965e-05, 2.7458000000001037e-05, 2.7472000000000607e-05, 2.7861000000000552e-05, 2.7805000000002272e-05, 2.7819000000001842e-05, 2.8166000000003077e-05, 2.7806000000001746e-05, 2.7806000000001746e-05, 2.8179999999999178e-05, 2.7472000000000607e-05, 2.7499999999999747e-05, 2.7472000000000607e-05, 2.7820000000001316e-05, 2.7819000000001842e-05, 2.748699999999965e-05, 2.7777999999999137e-05, 2.816699999999908e-05, 2.7499999999999747e-05, 2.7513999999999317e-05, 2.7832999999997943e-05, 2.7110999999999802e-05, 2.7820000000001316e-05, 2.7486000000000177e-05, 2.816699999999908e-05, 2.7860999999997083e-05, 2.820899999999779e-05, 2.713900000000241e-05, 2.745900000000051e-05, 2.7499999999999747e-05, 2.8250000000000497e-05, 2.7790999999999233e-05, 2.8138999999999942e-05]</msg>
<status status="PASS" starttime="20201029 12:46:37.818" endtime="20201029 12:46:37.820"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.814" endtime="20201029 12:46:37.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:37.825" endtime="20201029 12:46:37.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.823" endtime="20201029 12:46:37.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.822" endtime="20201029 12:46:37.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.447" endtime="20201029 12:46:37.845"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.446" endtime="20201029 12:46:37.845"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.854" endtime="20201029 12:46:37.869"></status>
</kw>
<msg timestamp="20201029 12:46:37.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.852" endtime="20201029 12:46:37.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:37.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:37.871" endtime="20201029 12:46:37.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.873" endtime="20201029 12:46:37.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.850" endtime="20201029 12:46:37.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.848" endtime="20201029 12:46:37.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:37.882" endtime="20201029 12:46:38.168"></status>
</kw>
<msg timestamp="20201029 12:46:38.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020640458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:37.880" endtime="20201029 12:46:38.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020611958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020640458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.172" endtime="20201029 12:46:38.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.181" endtime="20201029 12:46:38.182"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.878" endtime="20201029 12:46:38.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.876" endtime="20201029 12:46:38.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.187" level="INFO">${RESULT} = [{'diff': 2.8500000000000747e-05}, {'diff': 2.8860999999998083e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8514000000000317e-05}, {'diff': 2.8889000000000692e-05}, {'diff': 2.8874999999997653e-...</msg>
<status status="PASS" starttime="20201029 12:46:38.184" endtime="20201029 12:46:38.187"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.191" level="INFO">${ACCURACY} = {'diff': [2.8500000000000747e-05, 2.8860999999998083e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8165999999999608e-05, 2.8527999999999887e-05...</msg>
<status status="PASS" starttime="20201029 12:46:38.188" endtime="20201029 12:46:38.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.196" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.195" endtime="20201029 12:46:38.196"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.199" level="INFO">VALUE: [2.8500000000000747e-05, 2.8860999999998083e-05, 2.8514000000000317e-05, 2.8514000000000317e-05, 2.8889000000000692e-05, 2.8874999999997653e-05, 2.8165999999999608e-05, 2.8527999999999887e-05, 2.8861000000001552e-05, 2.8860999999998083e-05, 2.8860999999998083e-05, 2.8499999999997278e-05, 2.919499999999922e-05, 2.9207999999999318e-05, 2.8875000000001122e-05, 2.9222000000002357e-05, 2.9208000000002787e-05, 2.8527999999999887e-05, 2.8903000000000262e-05, 2.845899999999804e-05, 2.9180000000000178e-05, 2.9207999999999318e-05, 2.8888999999997222e-05, 2.8861000000001552e-05, 2.8527000000000413e-05, 2.920900000000226e-05, 2.8875000000001122e-05, 2.8541999999999457e-05, 2.8846999999998513e-05, 2.8527000000000413e-05, 2.8514000000000317e-05, 2.8860999999998083e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.8861000000001552e-05, 2.9180000000000178e-05, 2.8874999999997653e-05, 2.8541999999999457e-05, 2.8540999999999983e-05, 2.89309999999994e-05, 2.8180000000002647e-05, 2.8847000000001982e-05, 2.9193999999999748e-05, 2.8861000000001552e-05, 2.8818999999999373e-05, 2.8527999999999887e-05, 2.8874999999997653e-05, 2.9208000000002787e-05, 2.8500000000000747e-05, 2.9207999999999318e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.197" endtime="20201029 12:46:38.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.192" endtime="20201029 12:46:38.200"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.204" endtime="20201029 12:46:38.223"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.202" endtime="20201029 12:46:38.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.201" endtime="20201029 12:46:38.224"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.846" endtime="20201029 12:46:38.225"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:37.846" endtime="20201029 12:46:38.225"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.233" endtime="20201029 12:46:38.249"></status>
</kw>
<msg timestamp="20201029 12:46:38.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.232" endtime="20201029 12:46:38.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.250" endtime="20201029 12:46:38.252"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.253" endtime="20201029 12:46:38.254"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.229" endtime="20201029 12:46:38.255"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.227" endtime="20201029 12:46:38.255"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.262" endtime="20201029 12:46:38.565"></status>
</kw>
<msg timestamp="20201029 12:46:38.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.260" endtime="20201029 12:46:38.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019898083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019927639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.574" endtime="20201029 12:46:38.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.587" endtime="20201029 12:46:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.258" endtime="20201029 12:46:38.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.256" endtime="20201029 12:46:38.590"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.594" level="INFO">${RESULT} = [{'diff': 2.9556000000000027e-05}, {'diff': 2.9569999999999597e-05}, {'diff': 3.0235999999999458e-05}, {'diff': 2.9583999999999167e-05}, {'diff': 2.9499999999998278e-05}, {'diff': 2.9541000000000983e-...</msg>
<status status="PASS" starttime="20201029 12:46:38.591" endtime="20201029 12:46:38.594"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.599" level="INFO">${ACCURACY} = {'diff': [2.9556000000000027e-05, 2.9569999999999597e-05, 3.0235999999999458e-05, 2.9583999999999167e-05, 2.9499999999998278e-05, 2.9541000000000983e-05, 2.990199999999832e-05, 2.9569000000000123e-05,...</msg>
<status status="PASS" starttime="20201029 12:46:38.595" endtime="20201029 12:46:38.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.603" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.602" endtime="20201029 12:46:38.604"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.606" level="INFO">VALUE: [2.9556000000000027e-05, 2.9569999999999597e-05, 3.0235999999999458e-05, 2.9583999999999167e-05, 2.9499999999998278e-05, 2.9541000000000983e-05, 2.990199999999832e-05, 2.9569000000000123e-05, 2.9931000000000402e-05, 2.9222000000002357e-05, 2.9556000000000027e-05, 2.994499999999997e-05, 2.9555000000000553e-05, 2.919500000000269e-05, 2.990199999999832e-05, 3.0277999999998167e-05, 3.0249999999999028e-05, 2.9542000000000457e-05, 3.0249999999999028e-05, 2.9556000000000027e-05, 2.988799999999875e-05, 2.9208000000002787e-05, 3.0235999999999458e-05, 2.9556000000000027e-05, 2.9889000000001692e-05, 3.0249999999999028e-05, 2.9207999999999318e-05, 2.9889000000001692e-05, 2.9555000000000553e-05, 3.0235999999999458e-05, 2.9556000000000027e-05, 3.0235999999999458e-05, 2.9931000000000402e-05, 3.0278000000001637e-05, 2.9542000000000457e-05, 2.9889000000001692e-05, 3.0208000000000318e-05, 2.9958000000000068e-05, 2.9888999999998223e-05, 2.9527999999997417e-05, 2.9889000000001692e-05, 2.9556000000000027e-05, 2.9556000000000027e-05, 2.9902000000001788e-05, 2.9499999999998278e-05, 2.9528000000000887e-05, 3.0166000000001608e-05, 3.0235999999999458e-05, 2.9930000000000928e-05, 2.9207999999999318e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.604" endtime="20201029 12:46:38.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.600" endtime="20201029 12:46:38.607"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.611" endtime="20201029 12:46:38.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.609" endtime="20201029 12:46:38.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.608" endtime="20201029 12:46:38.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.226" endtime="20201029 12:46:38.632"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.225" endtime="20201029 12:46:38.632"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.640" endtime="20201029 12:46:38.655"></status>
</kw>
<msg timestamp="20201029 12:46:38.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.639" endtime="20201029 12:46:38.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:38.657" endtime="20201029 12:46:38.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.659" endtime="20201029 12:46:38.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.636" endtime="20201029 12:46:38.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.634" endtime="20201029 12:46:38.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.668" endtime="20201029 12:46:38.954"></status>
</kw>
<msg timestamp="20201029 12:46:38.957" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.667" endtime="20201029 12:46:38.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019597542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019628819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:38.958" endtime="20201029 12:46:38.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:38.967" endtime="20201029 12:46:38.968"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.664" endtime="20201029 12:46:38.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.662" endtime="20201029 12:46:38.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:38.973" level="INFO">${RESULT} = [{'diff': 3.1276999999999694e-05}, {'diff': 3.063899999999897e-05}, {'diff': 3.094500000000097e-05}, {'diff': 3.094500000000097e-05}, {'diff': 3.1263000000000124e-05}, {'diff': 3.0235999999999458e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:38.970" endtime="20201029 12:46:38.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:38.977" level="INFO">${ACCURACY} = {'diff': [3.1276999999999694e-05, 3.063899999999897e-05, 3.094500000000097e-05, 3.094500000000097e-05, 3.1263000000000124e-05, 3.0235999999999458e-05, 3.0249999999999028e-05, 3.0249999999999028e-05, 3...</msg>
<status status="PASS" starttime="20201029 12:46:38.974" endtime="20201029 12:46:38.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.982" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201029 12:46:38.981" endtime="20201029 12:46:38.982"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:38.984" level="INFO">VALUE: [3.1276999999999694e-05, 3.063899999999897e-05, 3.094500000000097e-05, 3.094500000000097e-05, 3.1263000000000124e-05, 3.0235999999999458e-05, 3.0249999999999028e-05, 3.0249999999999028e-05, 3.0235999999999458e-05, 3.0568999999997654e-05, 3.127799999999917e-05, 3.0221999999999888e-05, 3.136100000000058e-05, 3.058300000000069e-05, 3.0249999999999028e-05, 3.088899999999922e-05, 3.0584000000000167e-05, 3.09449999999975e-05, 3.12639999999996e-05, 3.0249999999999028e-05, 3.058300000000069e-05, 3.0306000000000777e-05, 3.09440000000015e-05, 3.0250000000002497e-05, 3.09440000000015e-05, 3.09440000000015e-05, 3.09440000000015e-05, 3.127799999999917e-05, 3.0584000000000167e-05, 3.058300000000069e-05, 3.0221999999999888e-05, 3.0250000000002497e-05, 3.093099999999793e-05, 3.059700000000026e-05, 3.0235999999999458e-05, 3.091700000000183e-05, 3.05700000000006e-05, 3.0596999999996793e-05, 3.09440000000015e-05, 3.0568999999997654e-05, 3.091699999999836e-05, 3.090299999999879e-05, 3.092999999999846e-05, 3.05700000000006e-05, 3.0292000000001207e-05, 3.091600000000236e-05, 3.091600000000236e-05, 3.098600000000021e-05, 3.059700000000026e-05, 3.091699999999836e-05]</msg>
<status status="PASS" starttime="20201029 12:46:38.983" endtime="20201029 12:46:38.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.978" endtime="20201029 12:46:38.986"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:38.989" endtime="20201029 12:46:39.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.988" endtime="20201029 12:46:39.009"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.987" endtime="20201029 12:46:39.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.633" endtime="20201029 12:46:39.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:38.632" endtime="20201029 12:46:39.010"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.019" endtime="20201029 12:46:39.036"></status>
</kw>
<msg timestamp="20201029 12:46:39.037" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.017" endtime="20201029 12:46:39.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.038" endtime="20201029 12:46:39.040"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.040" endtime="20201029 12:46:39.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.015" endtime="20201029 12:46:39.043"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.013" endtime="20201029 12:46:39.043"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.049" endtime="20201029 12:46:39.334"></status>
</kw>
<msg timestamp="20201029 12:46:39.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.048" endtime="20201029 12:46:39.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022686097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022718403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.338" endtime="20201029 12:46:39.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.347" endtime="20201029 12:46:39.348"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.045" endtime="20201029 12:46:39.349"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.044" endtime="20201029 12:46:39.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.353" level="INFO">${RESULT} = [{'diff': 3.230600000000278e-05}, {'diff': 3.197200000000164e-05}, {'diff': 3.19579999999986e-05}, {'diff': 3.161100000000083e-05}, {'diff': 3.195800000000207e-05}, {'diff': 3.127800000000264e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:39.350" endtime="20201029 12:46:39.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.357" level="INFO">${ACCURACY} = {'diff': [3.230600000000278e-05, 3.197200000000164e-05, 3.19579999999986e-05, 3.161100000000083e-05, 3.195800000000207e-05, 3.127800000000264e-05, 3.230599999999931e-05, 3.161100000000083e-05, 3.19590...</msg>
<status status="PASS" starttime="20201029 12:46:39.354" endtime="20201029 12:46:39.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.362" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.361" endtime="20201029 12:46:39.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.364" level="INFO">VALUE: [3.230600000000278e-05, 3.197200000000164e-05, 3.19579999999986e-05, 3.161100000000083e-05, 3.195800000000207e-05, 3.127800000000264e-05, 3.230599999999931e-05, 3.161100000000083e-05, 3.195900000000154e-05, 3.197199999999817e-05, 3.197200000000164e-05, 3.197300000000111e-05, 3.195800000000207e-05, 3.16250000000004e-05, 3.1610999999997363e-05, 3.197200000000164e-05, 3.154200000000246e-05, 3.223600000000146e-05, 3.163899999999997e-05, 3.195899999999807e-05, 3.197199999999817e-05, 3.197300000000111e-05, 3.19579999999986e-05, 3.195800000000207e-05, 3.16250000000004e-05, 3.127799999999917e-05, 3.200000000000078e-05, 3.127799999999917e-05, 3.191599999999989e-05, 3.129199999999874e-05, 3.162499999999693e-05, 3.197300000000111e-05, 3.120900000000079e-05, 3.197199999999817e-05, 3.19579999999986e-05, 3.197199999999817e-05, 3.159700000000126e-05, 3.198600000000121e-05, 3.129199999999874e-05, 3.16250000000004e-05, 3.233300000000244e-05, 3.197200000000164e-05, 3.197300000000111e-05, 3.1276999999999694e-05, 3.127800000000264e-05, 3.194399999999903e-05, 3.163899999999997e-05, 3.198600000000121e-05, 3.16250000000004e-05, 3.195800000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.363" endtime="20201029 12:46:39.366"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.358" endtime="20201029 12:46:39.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.370" endtime="20201029 12:46:39.389"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.368" endtime="20201029 12:46:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.367" endtime="20201029 12:46:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.011" endtime="20201029 12:46:39.390"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.010" endtime="20201029 12:46:39.391"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.402" endtime="20201029 12:46:39.418"></status>
</kw>
<msg timestamp="20201029 12:46:39.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.399" endtime="20201029 12:46:39.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.420" endtime="20201029 12:46:39.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.425" endtime="20201029 12:46:39.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.395" endtime="20201029 12:46:39.427"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.393" endtime="20201029 12:46:39.428"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.437" endtime="20201029 12:46:39.723"></status>
</kw>
<msg timestamp="20201029 12:46:39.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.436" endtime="20201029 12:46:39.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023056597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023088917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.727" endtime="20201029 12:46:39.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.735" endtime="20201029 12:46:39.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.433" endtime="20201029 12:46:39.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.429" endtime="20201029 12:46:39.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:39.742" level="INFO">${RESULT} = [{'diff': 3.231999999999888e-05}, {'diff': 3.236100000000158e-05}, {'diff': 3.3346999999999544e-05}, {'diff': 3.298599999999874e-05}, {'diff': 3.299999999999831e-05}, {'diff': 3.3027000000001444e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:39.738" endtime="20201029 12:46:39.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:39.746" level="INFO">${ACCURACY} = {'diff': [3.231999999999888e-05, 3.236100000000158e-05, 3.3346999999999544e-05, 3.298599999999874e-05, 3.299999999999831e-05, 3.3027000000001444e-05, 3.3290999999997795e-05, 3.231999999999888e-05, 3.2...</msg>
<status status="PASS" starttime="20201029 12:46:39.743" endtime="20201029 12:46:39.747"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.751" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201029 12:46:39.750" endtime="20201029 12:46:39.751"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.753" level="INFO">VALUE: [3.231999999999888e-05, 3.236100000000158e-05, 3.3346999999999544e-05, 3.298599999999874e-05, 3.299999999999831e-05, 3.3027000000001444e-05, 3.3290999999997795e-05, 3.231999999999888e-05, 3.25700000000026e-05, 3.2291000000000264e-05, 3.26519999999976e-05, 3.302799999999745e-05, 3.273599999999849e-05, 3.229199999999974e-05, 3.2332999999998974e-05, 3.298599999999874e-05, 3.298599999999874e-05, 3.300000000000178e-05, 3.2304999999999834e-05, 3.299999999999831e-05, 3.266700000000011e-05, 3.298600000000221e-05, 3.304200000000049e-05, 3.231900000000287e-05, 3.298600000000221e-05, 3.298599999999874e-05, 3.263900000000097e-05, 3.300000000000178e-05, 3.233300000000244e-05, 3.2304999999999834e-05, 3.266600000000064e-05, 3.2304999999999834e-05, 3.29579999999996e-05, 3.297199999999917e-05, 3.298700000000168e-05, 3.2304999999999834e-05, 3.301400000000135e-05, 3.265200000000107e-05, 3.229200000000321e-05, 3.230599999999931e-05, 3.266700000000011e-05, 3.297200000000264e-05, 3.300000000000178e-05, 3.265300000000054e-05, 3.299999999999831e-05, 3.298600000000221e-05, 3.266700000000011e-05, 3.299999999999831e-05, 3.263900000000097e-05, 3.301400000000135e-05]</msg>
<status status="PASS" starttime="20201029 12:46:39.752" endtime="20201029 12:46:39.759"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.747" endtime="20201029 12:46:39.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:39.764" endtime="20201029 12:46:39.783"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.762" endtime="20201029 12:46:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.761" endtime="20201029 12:46:39.784"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.392" endtime="20201029 12:46:39.785"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.391" endtime="20201029 12:46:39.785"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.794" endtime="20201029 12:46:39.810"></status>
</kw>
<msg timestamp="20201029 12:46:39.810" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.792" endtime="20201029 12:46:39.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:39.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:39.811" endtime="20201029 12:46:39.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.814" endtime="20201029 12:46:39.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.789" endtime="20201029 12:46:39.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.787" endtime="20201029 12:46:39.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:39.823" endtime="20201029 12:46:40.130"></status>
</kw>
<msg timestamp="20201029 12:46:40.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:39.822" endtime="20201029 12:46:40.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020463028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020497042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.134" endtime="20201029 12:46:40.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.143" endtime="20201029 12:46:40.144"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.819" endtime="20201029 12:46:40.145"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.817" endtime="20201029 12:46:40.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.149" level="INFO">${RESULT} = [{'diff': 3.401399999999888e-05}, {'diff': 3.369400000000078e-05}, {'diff': 3.369500000000025e-05}, {'diff': 3.402800000000192e-05}, {'diff': 3.407000000000063e-05}, {'diff': 3.369400000000078e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:40.146" endtime="20201029 12:46:40.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.154" level="INFO">${ACCURACY} = {'diff': [3.401399999999888e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.402800000000192e-05, 3.407000000000063e-05, 3.369400000000078e-05, 3.404199999999802e-05, 3.401399999999888e-05, 3.3348...</msg>
<status status="PASS" starttime="20201029 12:46:40.150" endtime="20201029 12:46:40.154"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.158" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.157" endtime="20201029 12:46:40.159"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.161" level="INFO">VALUE: [3.401399999999888e-05, 3.369400000000078e-05, 3.369500000000025e-05, 3.402800000000192e-05, 3.407000000000063e-05, 3.369400000000078e-05, 3.404199999999802e-05, 3.401399999999888e-05, 3.334800000000249e-05, 3.404200000000149e-05, 3.3374999999998683e-05, 3.401399999999888e-05, 3.402800000000192e-05, 3.4361000000000114e-05, 3.4055000000001584e-05, 3.4124999999999434e-05, 3.4041000000002014e-05, 3.4027000000002444e-05, 3.4361000000000114e-05, 3.405600000000106e-05, 3.3374999999998683e-05, 3.4083000000000724e-05, 3.4054999999998115e-05, 3.4054999999998115e-05, 3.404199999999802e-05, 3.404200000000149e-05, 3.405600000000106e-05, 3.4026999999998975e-05, 3.369500000000025e-05, 3.401400000000235e-05, 3.369500000000025e-05, 3.3346999999999544e-05, 3.338799999999878e-05, 3.404200000000149e-05, 3.399999999999931e-05, 3.3374999999998683e-05, 3.401400000000235e-05, 3.3332999999999974e-05, 3.369399999999731e-05, 3.3332999999999974e-05, 3.368000000000121e-05, 3.370800000000035e-05, 3.368100000000068e-05, 3.40840000000002e-05, 3.402799999999845e-05, 3.370800000000035e-05, 3.369500000000025e-05, 3.4041000000002014e-05, 3.4041000000002014e-05, 3.333399999999945e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.159" endtime="20201029 12:46:40.162"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.154" endtime="20201029 12:46:40.162"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.166" endtime="20201029 12:46:40.185"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.164" endtime="20201029 12:46:40.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.163" endtime="20201029 12:46:40.186"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.786" endtime="20201029 12:46:40.187"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:39.785" endtime="20201029 12:46:40.187"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.196" endtime="20201029 12:46:40.213"></status>
</kw>
<msg timestamp="20201029 12:46:40.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.194" endtime="20201029 12:46:40.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.214" endtime="20201029 12:46:40.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.217" endtime="20201029 12:46:40.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.191" endtime="20201029 12:46:40.219"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.189" endtime="20201029 12:46:40.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.226" endtime="20201029 12:46:40.513"></status>
</kw>
<msg timestamp="20201029 12:46:40.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020983278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.225" endtime="20201029 12:46:40.516"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020983278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021028597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.517" endtime="20201029 12:46:40.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.526" endtime="20201029 12:46:40.527"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.222" endtime="20201029 12:46:40.528"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.220" endtime="20201029 12:46:40.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.532" level="INFO">${RESULT} = [{'diff': 4.531899999999853e-05}, {'diff': 4.472200000000051e-05}, {'diff': 4.4819000000001497e-05}, {'diff': 4.46939999999979e-05}, {'diff': 4.5069000000001747e-05}, {'diff': 4.4847000000000636e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:40.529" endtime="20201029 12:46:40.533"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.537" level="INFO">${ACCURACY} = {'diff': [4.531899999999853e-05, 4.472200000000051e-05, 4.4819000000001497e-05, 4.46939999999979e-05, 4.5069000000001747e-05, 4.4847000000000636e-05, 4.479199999999836e-05, 4.434699999999667e-05, 4.49...</msg>
<status status="PASS" starttime="20201029 12:46:40.533" endtime="20201029 12:46:40.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.541" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.540" endtime="20201029 12:46:40.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.544" level="INFO">VALUE: [4.531899999999853e-05, 4.472200000000051e-05, 4.4819000000001497e-05, 4.46939999999979e-05, 4.5069000000001747e-05, 4.4847000000000636e-05, 4.479199999999836e-05, 4.434699999999667e-05, 4.494399999999815e-05, 4.4861000000000206e-05, 4.432000000000047e-05, 4.4709000000000415e-05, 4.525000000000015e-05, 4.4917000000001955e-05, 4.469400000000137e-05, 4.4402999999998416e-05, 4.440199999999894e-05, 4.445800000000069e-05, 4.53329999999981e-05, 4.467999999999833e-05, 4.481899999999803e-05, 4.4681000000001275e-05, 4.444400000000112e-05, 4.541599999999951e-05, 4.525000000000015e-05, 4.4861000000000206e-05, 4.507000000000122e-05, 4.4861000000000206e-05, 4.527800000000276e-05, 4.455599999999768e-05, 4.498600000000033e-05, 4.48060000000014e-05, 4.479199999999836e-05, 4.484800000000011e-05, 4.482000000000097e-05, 4.5097000000000886e-05, 4.525000000000015e-05, 4.51939999999984e-05, 4.48329999999976e-05, 4.5097000000000886e-05, 4.4833000000001066e-05, 4.480500000000193e-05, 4.534699999999767e-05, 4.475000000000312e-05, 4.5069000000001747e-05, 4.4874999999999776e-05, 4.506899999999828e-05, 4.494399999999815e-05, 4.48329999999976e-05, 4.5125000000000026e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.542" endtime="20201029 12:46:40.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.537" endtime="20201029 12:46:40.546"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.550" endtime="20201029 12:46:40.569"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.548" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.547" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.188" endtime="20201029 12:46:40.570"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.187" endtime="20201029 12:46:40.571"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.580" endtime="20201029 12:46:40.597"></status>
</kw>
<msg timestamp="20201029 12:46:40.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.578" endtime="20201029 12:46:40.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.599" endtime="20201029 12:46:40.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.601" endtime="20201029 12:46:40.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.575" endtime="20201029 12:46:40.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.573" endtime="20201029 12:46:40.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.610" endtime="20201029 12:46:40.896"></status>
</kw>
<msg timestamp="20201029 12:46:40.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.609" endtime="20201029 12:46:40.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021013569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021059569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.901" endtime="20201029 12:46:40.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.909" endtime="20201029 12:46:40.911"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.606" endtime="20201029 12:46:40.912"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.604" endtime="20201029 12:46:40.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:40.916" level="INFO">${RESULT} = [{'diff': 4.60000000000009e-05}, {'diff': 4.586099999999774e-05}, {'diff': 4.598600000000133e-05}, {'diff': 4.605499999999971e-05}, {'diff': 4.595800000000219e-05}, {'diff': 4.592999999999958e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:40.913" endtime="20201029 12:46:40.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:40.921" level="INFO">${ACCURACY} = {'diff': [4.60000000000009e-05, 4.586099999999774e-05, 4.598600000000133e-05, 4.605499999999971e-05, 4.595800000000219e-05, 4.592999999999958e-05, 4.554199999999911e-05, 4.5375000000000276e-05, 4.5805...</msg>
<status status="PASS" starttime="20201029 12:46:40.917" endtime="20201029 12:46:40.922"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.926" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201029 12:46:40.925" endtime="20201029 12:46:40.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.929" level="INFO">VALUE: [4.60000000000009e-05, 4.586099999999774e-05, 4.598600000000133e-05, 4.605499999999971e-05, 4.595800000000219e-05, 4.592999999999958e-05, 4.554199999999911e-05, 4.5375000000000276e-05, 4.580599999999893e-05, 4.625000000000115e-05, 4.575000000000065e-05, 4.5347000000001136e-05, 4.620799999999897e-05, 4.605599999999918e-05, 4.559799999999739e-05, 4.601400000000047e-05, 4.609799999999789e-05, 4.58060000000024e-05, 4.56800000000028e-05, 4.583400000000154e-05, 4.608299999999885e-05, 4.622200000000201e-05, 4.608299999999885e-05, 4.552700000000007e-05, 4.622199999999854e-05, 4.5709000000001415e-05, 4.558299999999835e-05, 4.631899999999953e-05, 4.61939999999994e-05, 4.572199999999804e-05, 4.620800000000244e-05, 4.597200000000176e-05, 4.5847000000001636e-05, 4.5917000000002955e-05, 4.5653000000003136e-05, 4.623599999999811e-05, 4.598600000000133e-05, 4.5902999999999916e-05, 4.5889000000000346e-05, 4.582000000000197e-05, 4.5403000000002885e-05, 4.536200000000018e-05, 4.5833000000002067e-05, 4.598599999999786e-05, 4.592999999999958e-05, 4.620800000000244e-05, 4.631899999999953e-05, 4.548600000000083e-05, 4.577799999999979e-05, 4.5416999999998986e-05]</msg>
<status status="PASS" starttime="20201029 12:46:40.927" endtime="20201029 12:46:40.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.922" endtime="20201029 12:46:40.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:40.934" endtime="20201029 12:46:40.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.932" endtime="20201029 12:46:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.931" endtime="20201029 12:46:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.572" endtime="20201029 12:46:40.954"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.571" endtime="20201029 12:46:40.955"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.963" endtime="20201029 12:46:40.982"></status>
</kw>
<msg timestamp="20201029 12:46:40.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.962" endtime="20201029 12:46:40.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:40.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:40.984" endtime="20201029 12:46:40.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:40.987" endtime="20201029 12:46:40.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.959" endtime="20201029 12:46:40.992"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.957" endtime="20201029 12:46:40.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.002" endtime="20201029 12:46:41.289"></status>
</kw>
<msg timestamp="20201029 12:46:41.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:40.999" endtime="20201029 12:46:41.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020615111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020661722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.294" endtime="20201029 12:46:41.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.302" endtime="20201029 12:46:41.304"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.995" endtime="20201029 12:46:41.305"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.993" endtime="20201029 12:46:41.305"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.309" level="INFO">${RESULT} = [{'diff': 4.6611000000001956e-05}, {'diff': 4.716600000000126e-05}, {'diff': 4.7153000000001166e-05}, {'diff': 4.727800000000129e-05}, {'diff': 4.722199999999954e-05}, {'diff': 4.6611000000001956e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:41.306" endtime="20201029 12:46:41.309"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.313" level="INFO">${ACCURACY} = {'diff': [4.6611000000001956e-05, 4.716600000000126e-05, 4.7153000000001166e-05, 4.727800000000129e-05, 4.722199999999954e-05, 4.6611000000001956e-05, 4.7097000000002887e-05, 4.731900000000053e-05, 4....</msg>
<status status="PASS" starttime="20201029 12:46:41.310" endtime="20201029 12:46:41.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.318" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.317" endtime="20201029 12:46:41.318"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.321" level="INFO">VALUE: [4.6611000000001956e-05, 4.716600000000126e-05, 4.7153000000001166e-05, 4.727800000000129e-05, 4.722199999999954e-05, 4.6611000000001956e-05, 4.7097000000002887e-05, 4.731900000000053e-05, 4.676400000000122e-05, 4.66529999999972e-05, 4.679200000000036e-05, 4.734799999999914e-05, 4.6931000000000056e-05, 4.6861000000002206e-05, 4.6403000000000416e-05, 4.6972999999998766e-05, 4.732e-05, 4.729200000000086e-05, 4.690200000000144e-05, 4.679100000000089e-05, 4.726400000000172e-05, 4.634699999999867e-05, 4.631899999999953e-05, 4.694400000000015e-05, 4.71940000000004e-05, 4.652800000000054e-05, 4.684699999999917e-05, 4.727799999999782e-05, 4.730600000000043e-05, 4.727800000000129e-05, 4.7194999999999876e-05, 4.659699999999892e-05, 4.675000000000165e-05, 4.658399999999882e-05, 4.7181000000000306e-05, 4.6639000000001096e-05, 4.6444999999999126e-05, 4.6403000000000416e-05, 4.6458999999998696e-05, 4.704100000000114e-05, 4.66939999999999e-05, 4.701299999999853e-05, 4.634699999999867e-05, 4.658299999999935e-05, 4.65139999999975e-05, 4.704099999999767e-05, 4.706900000000028e-05, 4.6958999999999196e-05, 4.684699999999917e-05, 4.6639000000001096e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.319" endtime="20201029 12:46:41.322"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.314" endtime="20201029 12:46:41.322"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.326" endtime="20201029 12:46:41.345"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.324" endtime="20201029 12:46:41.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.323" endtime="20201029 12:46:41.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.955" endtime="20201029 12:46:41.347"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:40.955" endtime="20201029 12:46:41.347"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.356" endtime="20201029 12:46:41.375"></status>
</kw>
<msg timestamp="20201029 12:46:41.375" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.354" endtime="20201029 12:46:41.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.376" endtime="20201029 12:46:41.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.379" endtime="20201029 12:46:41.380"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.352" endtime="20201029 12:46:41.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.350" endtime="20201029 12:46:41.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.388" endtime="20201029 12:46:41.674"></status>
</kw>
<msg timestamp="20201029 12:46:41.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.387" endtime="20201029 12:46:41.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022144125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022192306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.679" endtime="20201029 12:46:41.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.687" endtime="20201029 12:46:41.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.384" endtime="20201029 12:46:41.689"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.382" endtime="20201029 12:46:41.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:41.694" level="INFO">${RESULT} = [{'diff': 4.818099999999784e-05}, {'diff': 4.734699999999967e-05}, {'diff': 4.775000000000265e-05}, {'diff': 4.748600000000283e-05}, {'diff': 4.7931000000001056e-05}, {'diff': 4.811199999999946e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:41.691" endtime="20201029 12:46:41.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:41.698" level="INFO">${ACCURACY} = {'diff': [4.818099999999784e-05, 4.734699999999967e-05, 4.775000000000265e-05, 4.748600000000283e-05, 4.7931000000001056e-05, 4.811199999999946e-05, 4.793000000000158e-05, 4.749999999999893e-05, 4.823...</msg>
<status status="PASS" starttime="20201029 12:46:41.695" endtime="20201029 12:46:41.699"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.703" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201029 12:46:41.702" endtime="20201029 12:46:41.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.706" level="INFO">VALUE: [4.818099999999784e-05, 4.734699999999967e-05, 4.775000000000265e-05, 4.748600000000283e-05, 4.7931000000001056e-05, 4.811199999999946e-05, 4.793000000000158e-05, 4.749999999999893e-05, 4.823600000000011e-05, 4.756899999999731e-05, 4.822200000000054e-05, 4.794400000000115e-05, 4.747199999999979e-05, 4.7653000000001666e-05, 4.780500000000146e-05, 4.797200000000029e-05, 4.745799999999675e-05, 4.73330000000001e-05, 4.7458999999999696e-05, 4.774999999999918e-05, 4.7681000000000806e-05, 4.766699999999777e-05, 4.7486999999998836e-05, 4.829200000000186e-05, 4.829200000000186e-05, 4.780500000000146e-05, 4.809799999999989e-05, 4.786099999999974e-05, 4.741600000000151e-05, 4.780499999999799e-05, 4.829099999999892e-05, 4.769399999999743e-05, 4.745800000000022e-05, 4.743000000000108e-05, 4.838899999999938e-05, 4.734699999999967e-05, 4.798599999999986e-05, 4.758300000000035e-05, 4.73330000000001e-05, 4.738899999999838e-05, 4.8153000000002166e-05, 4.766699999999777e-05, 4.738899999999838e-05, 4.7417000000000986e-05, 4.818099999999784e-05, 4.780600000000093e-05, 4.76529999999982e-05, 4.804199999999814e-05, 4.759699999999992e-05, 4.736099999999924e-05]</msg>
<status status="PASS" starttime="20201029 12:46:41.704" endtime="20201029 12:46:41.707"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.699" endtime="20201029 12:46:41.708"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:41.712" endtime="20201029 12:46:41.731"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.710" endtime="20201029 12:46:41.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.709" endtime="20201029 12:46:41.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.348" endtime="20201029 12:46:41.732"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.347" endtime="20201029 12:46:41.732"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.741" endtime="20201029 12:46:41.757"></status>
</kw>
<msg timestamp="20201029 12:46:41.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.740" endtime="20201029 12:46:41.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:41.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:41.758" endtime="20201029 12:46:41.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.761" endtime="20201029 12:46:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.737" endtime="20201029 12:46:41.763"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.735" endtime="20201029 12:46:41.764"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:41.770" endtime="20201029 12:46:42.056"></status>
</kw>
<msg timestamp="20201029 12:46:42.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:41.769" endtime="20201029 12:46:42.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.068" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020119653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020168736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.061" endtime="20201029 12:46:42.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.069" endtime="20201029 12:46:42.071"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.766" endtime="20201029 12:46:42.072"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.764" endtime="20201029 12:46:42.072"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.076" level="INFO">${RESULT} = [{'diff': 4.908299999999838e-05}, {'diff': 4.852799999999907e-05}, {'diff': 4.847200000000079e-05}, {'diff': 4.873600000000061e-05}, {'diff': 4.8707999999998e-05}, {'diff': 4.886099999999727e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:42.073" endtime="20201029 12:46:42.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.081" level="INFO">${ACCURACY} = {'diff': [4.908299999999838e-05, 4.852799999999907e-05, 4.847200000000079e-05, 4.873600000000061e-05, 4.8707999999998e-05, 4.886099999999727e-05, 4.926400000000025e-05, 4.85139999999995e-05, 4.9181000...</msg>
<status status="PASS" starttime="20201029 12:46:42.077" endtime="20201029 12:46:42.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.086" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.085" endtime="20201029 12:46:42.086"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.089" level="INFO">VALUE: [4.908299999999838e-05, 4.852799999999907e-05, 4.847200000000079e-05, 4.873600000000061e-05, 4.8707999999998e-05, 4.886099999999727e-05, 4.926400000000025e-05, 4.85139999999995e-05, 4.9181000000002306e-05, 4.829199999999839e-05, 4.8709000000000946e-05, 4.930599999999896e-05, 4.88200000000015e-05, 4.8459000000000696e-05, 4.863800000000015e-05, 4.862500000000006e-05, 4.849999999999993e-05, 4.891599999999954e-05, 4.884700000000117e-05, 4.930499999999949e-05, 4.8389000000002846e-05, 4.895800000000172e-05, 4.88330000000016e-05, 4.847200000000079e-05, 4.926400000000025e-05, 4.922199999999807e-05, 4.858400000000082e-05, 4.88330000000016e-05, 4.863899999999963e-05, 4.8681000000001806e-05, 4.916699999999927e-05, 4.913900000000013e-05, 4.838899999999938e-05, 4.8473000000000266e-05, 4.923600000000111e-05, 4.929099999999992e-05, 4.925000000000068e-05, 4.869399999999843e-05, 4.905499999999924e-05, 4.836100000000024e-05, 4.883299999999813e-05, 4.85139999999995e-05, 4.831900000000153e-05, 4.845800000000122e-05, 4.836100000000024e-05, 4.891699999999902e-05, 4.868099999999834e-05, 4.931999999999853e-05, 4.836100000000024e-05, 4.9167000000002736e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.087" endtime="20201029 12:46:42.089"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.082" endtime="20201029 12:46:42.090"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.094" endtime="20201029 12:46:42.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.092" endtime="20201029 12:46:42.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.091" endtime="20201029 12:46:42.114"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.733" endtime="20201029 12:46:42.115"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:41.733" endtime="20201029 12:46:42.115"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.124" endtime="20201029 12:46:42.141"></status>
</kw>
<msg timestamp="20201029 12:46:42.141" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.122" endtime="20201029 12:46:42.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.143" endtime="20201029 12:46:42.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.145" endtime="20201029 12:46:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.119" endtime="20201029 12:46:42.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.117" endtime="20201029 12:46:42.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.155" endtime="20201029 12:46:42.442"></status>
</kw>
<msg timestamp="20201029 12:46:42.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020657472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.153" endtime="20201029 12:46:42.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020657472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020707694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.446" endtime="20201029 12:46:42.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.455" endtime="20201029 12:46:42.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.150" endtime="20201029 12:46:42.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.148" endtime="20201029 12:46:42.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.462" level="INFO">${RESULT} = [{'diff': 5.022199999999907e-05}, {'diff': 4.986099999999827e-05}, {'diff': 4.9458999999998227e-05}, {'diff': 5.005500000000024e-05}, {'diff': 4.957000000000225e-05}, {'diff': 5.001300000000153e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:42.458" endtime="20201029 12:46:42.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.466" level="INFO">${ACCURACY} = {'diff': [5.022199999999907e-05, 4.986099999999827e-05, 4.9458999999998227e-05, 5.005500000000024e-05, 4.957000000000225e-05, 5.001300000000153e-05, 4.947199999999832e-05, 4.965200000000072e-05, 5.004...</msg>
<status status="PASS" starttime="20201029 12:46:42.463" endtime="20201029 12:46:42.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.471" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.469" endtime="20201029 12:46:42.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.473" level="INFO">VALUE: [5.022199999999907e-05, 4.986099999999827e-05, 4.9458999999998227e-05, 5.005500000000024e-05, 4.957000000000225e-05, 5.001300000000153e-05, 4.947199999999832e-05, 4.965200000000072e-05, 5.004200000000014e-05, 4.962500000000106e-05, 5.018000000000036e-05, 4.952800000000007e-05, 5.029200000000039e-05, 5.029199999999692e-05, 4.983299999999913e-05, 5.022199999999907e-05, 4.998599999999839e-05, 4.954199999999964e-05, 4.940299999999995e-05, 4.980599999999946e-05, 4.975000000000118e-05, 5.030599999999996e-05, 4.998600000000186e-05, 4.942999999999961e-05, 5.03469999999992e-05, 4.98469999999987e-05, 4.997200000000229e-05, 5.019399999999993e-05, 4.967999999999986e-05, 5.023599999999864e-05, 5.026400000000125e-05, 5.005500000000024e-05, 4.93330000000021e-05, 4.955499999999974e-05, 4.938900000000038e-05, 4.990300000000045e-05, 4.956999999999878e-05, 4.987499999999784e-05, 5.011099999999852e-05, 5.03339999999991e-05, 5.006999999999928e-05, 4.954199999999964e-05, 5.027700000000135e-05, 5.020899999999898e-05, 5.018000000000036e-05, 4.980499999999999e-05, 5.015200000000122e-05, 4.944399999999918e-05, 5.011100000000199e-05, 4.976399999999728e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.472" endtime="20201029 12:46:42.474"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.467" endtime="20201029 12:46:42.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.478" endtime="20201029 12:46:42.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.477" endtime="20201029 12:46:42.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.475" endtime="20201029 12:46:42.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.116" endtime="20201029 12:46:42.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.115" endtime="20201029 12:46:42.499"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.508" endtime="20201029 12:46:42.528"></status>
</kw>
<msg timestamp="20201029 12:46:42.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.507" endtime="20201029 12:46:42.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.529" endtime="20201029 12:46:42.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.532" endtime="20201029 12:46:42.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.504" endtime="20201029 12:46:42.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.502" endtime="20201029 12:46:42.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.541" endtime="20201029 12:46:42.827"></status>
</kw>
<msg timestamp="20201029 12:46:42.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.540" endtime="20201029 12:46:42.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023466069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023517042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.832" endtime="20201029 12:46:42.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.840" endtime="20201029 12:46:42.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.537" endtime="20201029 12:46:42.842"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.535" endtime="20201029 12:46:42.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:42.847" level="INFO">${RESULT} = [{'diff': 5.09729999999993e-05}, {'diff': 5.101399999999853e-05}, {'diff': 5.112500000000256e-05}, {'diff': 5.055500000000074e-05}, {'diff': 5.0708e-05}, {'diff': 5.1165999999998324e-05}, {'diff': 5.0...</msg>
<status status="PASS" starttime="20201029 12:46:42.844" endtime="20201029 12:46:42.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:42.851" level="INFO">${ACCURACY} = {'diff': [5.09729999999993e-05, 5.101399999999853e-05, 5.112500000000256e-05, 5.055500000000074e-05, 5.0708e-05, 5.1165999999998324e-05, 5.074999999999871e-05, 5.099999999999896e-05, 5.073599999999914...</msg>
<status status="PASS" starttime="20201029 12:46:42.848" endtime="20201029 12:46:42.852"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.856" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201029 12:46:42.855" endtime="20201029 12:46:42.856"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.858" level="INFO">VALUE: [5.09729999999993e-05, 5.101399999999853e-05, 5.112500000000256e-05, 5.055500000000074e-05, 5.0708e-05, 5.1165999999998324e-05, 5.074999999999871e-05, 5.099999999999896e-05, 5.073599999999914e-05, 5.098599999999939e-05, 5.063899999999816e-05, 5.123599999999964e-05, 5.111099999999952e-05, 5.125000000000268e-05, 5.065299999999773e-05, 5.093000000000111e-05, 5.063900000000163e-05, 5.124999999999921e-05, 5.079200000000089e-05, 5.080600000000046e-05, 5.112499999999909e-05, 5.051399999999803e-05, 5.075000000000218e-05, 5.119500000000041e-05, 5.0887999999998934e-05, 5.0388000000001903e-05, 5.072200000000304e-05, 5.033299999999963e-05, 5.098600000000286e-05, 5.080499999999752e-05, 5.087499999999884e-05, 5.126400000000225e-05, 5.105500000000124e-05, 5.099999999999896e-05, 5.127800000000182e-05, 5.1236999999999117e-05, 5.11669999999978e-05, 5.084799999999917e-05, 5.129200000000139e-05, 5.116600000000179e-05, 5.124999999999921e-05, 5.070899999999948e-05, 5.087499999999884e-05, 5.051399999999803e-05, 5.088899999999841e-05, 5.073599999999914e-05, 5.0708e-05, 5.05140000000015e-05, 5.034700000000267e-05, 5.040300000000095e-05]</msg>
<status status="PASS" starttime="20201029 12:46:42.857" endtime="20201029 12:46:42.860"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.852" endtime="20201029 12:46:42.861"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:42.864" endtime="20201029 12:46:42.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.863" endtime="20201029 12:46:42.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.862" endtime="20201029 12:46:42.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.500" endtime="20201029 12:46:42.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.499" endtime="20201029 12:46:42.886"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.897" endtime="20201029 12:46:42.915"></status>
</kw>
<msg timestamp="20201029 12:46:42.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.895" endtime="20201029 12:46:42.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:42.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:42.916" endtime="20201029 12:46:42.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.919" endtime="20201029 12:46:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.891" endtime="20201029 12:46:42.921"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.888" endtime="20201029 12:46:42.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:42.928" endtime="20201029 12:46:43.213"></status>
</kw>
<msg timestamp="20201029 12:46:43.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023550889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:42.926" endtime="20201029 12:46:43.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023550889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023602861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.217" endtime="20201029 12:46:43.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.225" endtime="20201029 12:46:43.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.924" endtime="20201029 12:46:43.227"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.922" endtime="20201029 12:46:43.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.232" level="INFO">${RESULT} = [{'diff': 5.197200000000082e-05}, {'diff': 5.138899999999891e-05}, {'diff': 5.148599999999989e-05}, {'diff': 5.159799999999992e-05}, {'diff': 5.15279999999986e-05}, {'diff': 5.170900000000048e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:43.229" endtime="20201029 12:46:43.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.237" level="INFO">${ACCURACY} = {'diff': [5.197200000000082e-05, 5.138899999999891e-05, 5.148599999999989e-05, 5.159799999999992e-05, 5.15279999999986e-05, 5.170900000000048e-05, 5.174999999999971e-05, 5.179199999999842e-05, 5.21110...</msg>
<status status="PASS" starttime="20201029 12:46:43.233" endtime="20201029 12:46:43.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.241" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.240" endtime="20201029 12:46:43.241"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.244" level="INFO">VALUE: [5.197200000000082e-05, 5.138899999999891e-05, 5.148599999999989e-05, 5.159799999999992e-05, 5.15279999999986e-05, 5.170900000000048e-05, 5.174999999999971e-05, 5.179199999999842e-05, 5.211100000000052e-05, 5.198699999999987e-05, 5.162499999999959e-05, 5.230599999999849e-05, 5.209700000000095e-05, 5.229099999999945e-05, 5.173600000000014e-05, 5.222200000000107e-05, 5.206900000000181e-05, 5.140300000000195e-05, 5.229199999999892e-05, 5.22080000000015e-05, 5.208300000000138e-05, 5.211100000000052e-05, 5.143100000000109e-05, 5.138900000000238e-05, 5.197200000000082e-05, 5.219500000000141e-05, 5.154199999999817e-05, 5.199999999999996e-05, 5.149999999999946e-05, 5.219400000000193e-05, 5.162500000000306e-05, 5.162499999999959e-05, 5.179099999999895e-05, 5.197200000000082e-05, 5.226399999999978e-05, 5.223600000000064e-05, 5.1915999999999074e-05, 5.1693999999997964e-05, 5.141699999999805e-05, 5.156900000000131e-05, 5.180600000000146e-05, 5.174999999999971e-05, 5.173600000000014e-05, 5.193100000000159e-05, 5.158400000000035e-05, 5.2207999999998034e-05, 5.1486999999999367e-05, 5.230599999999849e-05, 5.201399999999953e-05, 5.227799999999935e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.242" endtime="20201029 12:46:43.244"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.238" endtime="20201029 12:46:43.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.248" endtime="20201029 12:46:43.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.247" endtime="20201029 12:46:43.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.246" endtime="20201029 12:46:43.269"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.887" endtime="20201029 12:46:43.270"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:42.886" endtime="20201029 12:46:43.270"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.278" endtime="20201029 12:46:43.296"></status>
</kw>
<msg timestamp="20201029 12:46:43.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.277" endtime="20201029 12:46:43.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.299" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.298" endtime="20201029 12:46:43.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.300" endtime="20201029 12:46:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.274" endtime="20201029 12:46:43.302"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.272" endtime="20201029 12:46:43.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.309" endtime="20201029 12:46:43.595"></status>
</kw>
<msg timestamp="20201029 12:46:43.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.307" endtime="20201029 12:46:43.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021029694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021082611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.599" endtime="20201029 12:46:43.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.608" endtime="20201029 12:46:43.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.305" endtime="20201029 12:46:43.610"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.303" endtime="20201029 12:46:43.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:43.614" level="INFO">${RESULT} = [{'diff': 5.291699999999955e-05}, {'diff': 5.240299999999948e-05}, {'diff': 5.240300000000295e-05}, {'diff': 5.327800000000035e-05}, {'diff': 5.329199999999992e-05}, {'diff': 5.287500000000084e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:43.611" endtime="20201029 12:46:43.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:43.618" level="INFO">${ACCURACY} = {'diff': [5.291699999999955e-05, 5.240299999999948e-05, 5.240300000000295e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.287500000000084e-05, 5.330599999999949e-05, 5.263900000000016e-05, 5.2541...</msg>
<status status="PASS" starttime="20201029 12:46:43.615" endtime="20201029 12:46:43.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.623" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201029 12:46:43.622" endtime="20201029 12:46:43.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.625" level="INFO">VALUE: [5.291699999999955e-05, 5.240299999999948e-05, 5.240300000000295e-05, 5.327800000000035e-05, 5.329199999999992e-05, 5.287500000000084e-05, 5.330599999999949e-05, 5.263900000000016e-05, 5.254199999999917e-05, 5.24730000000008e-05, 5.277799999999985e-05, 5.297200000000182e-05, 5.3235999999998174e-05, 5.3137999999997715e-05, 5.259699999999798e-05, 5.279099999999995e-05, 5.280499999999952e-05, 5.265299999999973e-05, 5.258300000000188e-05, 5.28470000000017e-05, 5.286100000000127e-05, 5.2999999999997494e-05, 5.3263999999997313e-05, 5.286100000000127e-05, 5.311099999999805e-05, 5.308399999999838e-05, 5.280599999999899e-05, 5.298600000000139e-05, 5.313900000000066e-05, 5.250000000000046e-05, 5.237500000000034e-05, 5.2457999999998284e-05, 5.2638000000000684e-05, 5.238899999999991e-05, 5.333299999999916e-05, 5.281900000000256e-05, 5.233299999999816e-05, 5.30280000000001e-05, 5.323699999999765e-05, 5.23609999999973e-05, 5.3221999999998604e-05, 5.276400000000028e-05, 5.263899999999669e-05, 5.238899999999991e-05, 5.298600000000139e-05, 5.234800000000067e-05, 5.279199999999942e-05, 5.236200000000024e-05, 5.270899999999801e-05, 5.308299999999891e-05]</msg>
<status status="PASS" starttime="20201029 12:46:43.624" endtime="20201029 12:46:43.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.619" endtime="20201029 12:46:43.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:43.630" endtime="20201029 12:46:43.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.629" endtime="20201029 12:46:43.652"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.627" endtime="20201029 12:46:43.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.271" endtime="20201029 12:46:43.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.270" endtime="20201029 12:46:43.654"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.672" endtime="20201029 12:46:43.694"></status>
</kw>
<msg timestamp="20201029 12:46:43.695" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.668" endtime="20201029 12:46:43.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:43.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:43.697" endtime="20201029 12:46:43.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.702" endtime="20201029 12:46:43.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.663" endtime="20201029 12:46:43.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.659" endtime="20201029 12:46:43.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:43.721" endtime="20201029 12:46:44.007"></status>
</kw>
<msg timestamp="20201029 12:46:44.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034894861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034948236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:43.717" endtime="20201029 12:46:44.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.034894861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.034948236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.011" endtime="20201029 12:46:44.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.019" endtime="20201029 12:46:44.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.712" endtime="20201029 12:46:44.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.708" endtime="20201029 12:46:44.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.026" level="INFO">${RESULT} = [{'diff': 5.337500000000134e-05}, {'diff': 5.413899999999472e-05}, {'diff': 5.333300000000263e-05}, {'diff': 5.4221999999999604e-05}, {'diff': 5.40419999999972e-05}, {'diff': 5.429200000000439e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:44.023" endtime="20201029 12:46:44.026"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.030" level="INFO">${ACCURACY} = {'diff': [5.337500000000134e-05, 5.413899999999472e-05, 5.333300000000263e-05, 5.4221999999999604e-05, 5.40419999999972e-05, 5.429200000000439e-05, 5.387500000000184e-05, 5.3471999999998854e-05, 5.425...</msg>
<status status="PASS" starttime="20201029 12:46:44.027" endtime="20201029 12:46:44.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.034" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.033" endtime="20201029 12:46:44.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.037" level="INFO">VALUE: [5.337500000000134e-05, 5.413899999999472e-05, 5.333300000000263e-05, 5.4221999999999604e-05, 5.40419999999972e-05, 5.429200000000439e-05, 5.387500000000184e-05, 5.3471999999998854e-05, 5.425000000000568e-05, 5.405599999999677e-05, 5.438900000000191e-05, 5.3999999999998494e-05, 5.3957999999999784e-05, 5.41670000000008e-05, 5.354200000000364e-05, 5.33470000000022e-05, 5.3430000000000144e-05, 5.347200000000579e-05, 5.3707999999999534e-05, 5.3971999999999354e-05, 5.383300000000313e-05, 5.391700000000055e-05, 5.338900000000091e-05, 5.415300000000123e-05, 5.394499999999969e-05, 5.408399999999591e-05, 5.3749999999998244e-05, 5.347299999999833e-05, 5.3499999999997994e-05, 5.397299999999883e-05, 5.3527999999997133e-05, 5.380499999999705e-05, 5.375000000000518e-05, 5.388900000000141e-05, 5.390300000000098e-05, 5.4014000000005e-05, 5.3944000000000214e-05, 5.390300000000098e-05, 5.4235999999999174e-05, 5.362500000000159e-05, 5.4277999999997883e-05, 5.402699999999816e-05, 5.402800000000457e-05, 5.412499999999515e-05, 5.345899999999876e-05, 5.4013999999998064e-05, 5.348600000000536e-05, 5.33749999999944e-05, 5.383399999999566e-05, 5.356900000000331e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.035" endtime="20201029 12:46:44.038"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.031" endtime="20201029 12:46:44.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.042" endtime="20201029 12:46:44.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.041" endtime="20201029 12:46:44.062"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.040" endtime="20201029 12:46:44.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.655" endtime="20201029 12:46:44.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:43.654" endtime="20201029 12:46:44.063"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.072" endtime="20201029 12:46:44.090"></status>
</kw>
<msg timestamp="20201029 12:46:44.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.070" endtime="20201029 12:46:44.090"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.091" endtime="20201029 12:46:44.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.094" endtime="20201029 12:46:44.095"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.068" endtime="20201029 12:46:44.096"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.065" endtime="20201029 12:46:44.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.103" endtime="20201029 12:46:44.389"></status>
</kw>
<msg timestamp="20201029 12:46:44.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.101" endtime="20201029 12:46:44.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019820681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019875764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.393" endtime="20201029 12:46:44.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.401" endtime="20201029 12:46:44.403"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.099" endtime="20201029 12:46:44.404"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.097" endtime="20201029 12:46:44.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.408" level="INFO">${RESULT} = [{'diff': 5.508300000000091e-05}, {'diff': 5.4985999999999924e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.458300000000041e-05}, {'diff': 5.458300000000041e-05}, {'diff': 5.445899999999976e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:44.405" endtime="20201029 12:46:44.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.413" level="INFO">${ACCURACY} = {'diff': [5.508300000000091e-05, 5.4985999999999924e-05, 5.487499999999937e-05, 5.458300000000041e-05, 5.458300000000041e-05, 5.445899999999976e-05, 5.51809999999979e-05, 5.476400000000228e-05, 5.5194...</msg>
<status status="PASS" starttime="20201029 12:46:44.409" endtime="20201029 12:46:44.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.418" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.417" endtime="20201029 12:46:44.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.420" level="INFO">VALUE: [5.508300000000091e-05, 5.4985999999999924e-05, 5.487499999999937e-05, 5.458300000000041e-05, 5.458300000000041e-05, 5.445899999999976e-05, 5.51809999999979e-05, 5.476400000000228e-05, 5.519499999999747e-05, 5.531900000000159e-05, 5.507000000000081e-05, 5.444500000000019e-05, 5.477700000000238e-05, 5.505500000000177e-05, 5.4651999999998785e-05, 5.4749999999999244e-05, 5.529200000000192e-05, 5.457000000000031e-05, 5.429200000000092e-05, 5.490300000000198e-05, 5.5208000000001034e-05, 5.5027999999998634e-05, 5.4985999999999924e-05, 5.4458000000000284e-05, 5.5249999999999744e-05, 5.4999999999999494e-05, 5.4749999999999244e-05, 5.504200000000167e-05, 5.4402000000002004e-05, 5.518100000000137e-05, 5.531900000000159e-05, 5.45549999999978e-05, 5.4999999999999494e-05, 5.4749999999999244e-05, 5.533299999999769e-05, 5.4693999999997495e-05, 5.5277999999998884e-05, 5.505500000000177e-05, 5.494499999999722e-05, 5.43609999999993e-05, 5.5235999999996704e-05, 5.463900000000216e-05, 5.468100000000087e-05, 5.51670000000018e-05, 5.469500000000044e-05, 5.497299999999983e-05, 5.4458000000000284e-05, 5.4722000000000104e-05, 5.437499999999887e-05, 5.530499999999855e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.419" endtime="20201029 12:46:44.421"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.414" endtime="20201029 12:46:44.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.425" endtime="20201029 12:46:44.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.424" endtime="20201029 12:46:44.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.423" endtime="20201029 12:46:44.445"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.064" endtime="20201029 12:46:44.446"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.063" endtime="20201029 12:46:44.446"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.454" endtime="20201029 12:46:44.472"></status>
</kw>
<msg timestamp="20201029 12:46:44.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.453" endtime="20201029 12:46:44.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.473" endtime="20201029 12:46:44.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.476" endtime="20201029 12:46:44.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.450" endtime="20201029 12:46:44.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.448" endtime="20201029 12:46:44.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.485" endtime="20201029 12:46:44.772"></status>
</kw>
<msg timestamp="20201029 12:46:44.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.483" endtime="20201029 12:46:44.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020444583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020500167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.776" endtime="20201029 12:46:44.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.784" endtime="20201029 12:46:44.786"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.481" endtime="20201029 12:46:44.787"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.479" endtime="20201029 12:46:44.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:44.791" level="INFO">${RESULT} = [{'diff': 5.558400000000088e-05}, {'diff': 5.608300000000191e-05}, {'diff': 5.60549999999993e-05}, {'diff': 5.5638000000000215e-05}, {'diff': 5.534700000000073e-05}, {'diff': 5.5485999999996954e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:44.788" endtime="20201029 12:46:44.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:44.795" level="INFO">${ACCURACY} = {'diff': [5.558400000000088e-05, 5.608300000000191e-05, 5.60549999999993e-05, 5.5638000000000215e-05, 5.534700000000073e-05, 5.5485999999996954e-05, 5.5735999999997204e-05, 5.6027999999999634e-05, 5.5...</msg>
<status status="PASS" starttime="20201029 12:46:44.792" endtime="20201029 12:46:44.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.799" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201029 12:46:44.798" endtime="20201029 12:46:44.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.802" level="INFO">VALUE: [5.558400000000088e-05, 5.608300000000191e-05, 5.60549999999993e-05, 5.5638000000000215e-05, 5.534700000000073e-05, 5.5485999999996954e-05, 5.5735999999997204e-05, 5.6027999999999634e-05, 5.558299999999794e-05, 5.604200000000267e-05, 5.593100000000212e-05, 5.5444000000001714e-05, 5.608300000000191e-05, 5.5972000000001354e-05, 5.612500000000062e-05, 5.545900000000076e-05, 5.609700000000148e-05, 5.551400000000303e-05, 5.5902000000000035e-05, 5.53480000000002e-05, 5.541700000000205e-05, 5.554099999999923e-05, 5.5665999999999355e-05, 5.5638000000000215e-05, 5.53610000000003e-05, 5.5679999999998925e-05, 5.634700000000173e-05, 5.5750000000000244e-05, 5.5929999999999175e-05, 5.582000000000156e-05, 5.630600000000249e-05, 5.6014000000000064e-05, 5.6014000000000064e-05, 5.587500000000037e-05, 5.5513999999999564e-05, 5.572299999999711e-05, 5.579200000000242e-05, 5.5472000000000854e-05, 5.556999999999784e-05, 5.5791999999998954e-05, 5.5415999999999105e-05, 5.562500000000012e-05, 5.629099999999998e-05, 5.630499999999955e-05, 5.6277999999999884e-05, 5.6165999999999855e-05, 5.5472000000000854e-05, 5.590299999999951e-05, 5.5791999999998954e-05, 5.587500000000037e-05]</msg>
<status status="PASS" starttime="20201029 12:46:44.800" endtime="20201029 12:46:44.808"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.796" endtime="20201029 12:46:44.808"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:44.812" endtime="20201029 12:46:44.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.811" endtime="20201029 12:46:44.832"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.809" endtime="20201029 12:46:44.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.447" endtime="20201029 12:46:44.833"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.446" endtime="20201029 12:46:44.833"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.842" endtime="20201029 12:46:44.860"></status>
</kw>
<msg timestamp="20201029 12:46:44.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.841" endtime="20201029 12:46:44.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:44.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:44.862" endtime="20201029 12:46:44.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.864" endtime="20201029 12:46:44.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.838" endtime="20201029 12:46:44.866"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.836" endtime="20201029 12:46:44.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:44.874" endtime="20201029 12:46:45.168"></status>
</kw>
<msg timestamp="20201029 12:46:45.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:44.872" endtime="20201029 12:46:45.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021248958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021305319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.177" endtime="20201029 12:46:45.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.196" endtime="20201029 12:46:45.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.869" endtime="20201029 12:46:45.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.867" endtime="20201029 12:46:45.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.210" level="INFO">${RESULT} = [{'diff': 5.63610000000013e-05}, {'diff': 5.6402000000000535e-05}, {'diff': 5.658300000000241e-05}, {'diff': 5.7013999999997594e-05}, {'diff': 5.687500000000137e-05}, {'diff': 5.733299999999969e-05}, ...</msg>
<status status="PASS" starttime="20201029 12:46:45.203" endtime="20201029 12:46:45.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.219" level="INFO">${ACCURACY} = {'diff': [5.63610000000013e-05, 5.6402000000000535e-05, 5.658300000000241e-05, 5.7013999999997594e-05, 5.687500000000137e-05, 5.733299999999969e-05, 5.6764000000000814e-05, 5.7013999999997594e-05, 5.7...</msg>
<status status="PASS" starttime="20201029 12:46:45.212" endtime="20201029 12:46:45.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.228" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.226" endtime="20201029 12:46:45.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.233" level="INFO">VALUE: [5.63610000000013e-05, 5.6402000000000535e-05, 5.658300000000241e-05, 5.7013999999997594e-05, 5.687500000000137e-05, 5.733299999999969e-05, 5.6764000000000814e-05, 5.7013999999997594e-05, 5.70550000000003e-05, 5.6555999999999274e-05, 5.7042000000000204e-05, 5.669499999999897e-05, 5.63610000000013e-05, 5.691700000000008e-05, 5.729100000000098e-05, 5.6778000000000384e-05, 5.6999999999998024e-05, 5.651300000000109e-05, 5.6778000000000384e-05, 5.7180000000000425e-05, 5.6971999999998885e-05, 5.730500000000055e-05, 5.6985999999998455e-05, 5.7263999999997844e-05, 5.686099999999833e-05, 5.6764000000000814e-05, 5.690300000000051e-05, 5.6541999999999704e-05, 5.634700000000173e-05, 5.687500000000137e-05, 5.662500000000112e-05, 5.712500000000162e-05, 5.66809999999994e-05, 5.7250000000001744e-05, 5.6750000000001244e-05, 5.7193999999999995e-05, 5.6999999999998024e-05, 5.7013999999997594e-05, 5.6458000000002284e-05, 5.7180000000000425e-05, 5.656900000000284e-05, 5.6514000000000564e-05, 5.7028000000000634e-05, 5.7292000000000454e-05, 5.7250000000001744e-05, 5.690300000000051e-05, 5.6528000000000134e-05, 5.720900000000251e-05, 5.6805999999999524e-05, 5.7277999999997414e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.230" endtime="20201029 12:46:45.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.220" endtime="20201029 12:46:45.237"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.245" endtime="20201029 12:46:45.265"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.242" endtime="20201029 12:46:45.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.239" endtime="20201029 12:46:45.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.834" endtime="20201029 12:46:45.266"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:44.834" endtime="20201029 12:46:45.266"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.276" endtime="20201029 12:46:45.294"></status>
</kw>
<msg timestamp="20201029 12:46:45.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.275" endtime="20201029 12:46:45.295"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.297" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.295" endtime="20201029 12:46:45.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.298" endtime="20201029 12:46:45.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.272" endtime="20201029 12:46:45.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.270" endtime="20201029 12:46:45.300"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.307" endtime="20201029 12:46:45.593"></status>
</kw>
<msg timestamp="20201029 12:46:45.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020680097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.305" endtime="20201029 12:46:45.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020680097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020738417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.598" endtime="20201029 12:46:45.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.606" endtime="20201029 12:46:45.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.303" endtime="20201029 12:46:45.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.301" endtime="20201029 12:46:45.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:45.613" level="INFO">${RESULT} = [{'diff': 5.8319999999997124e-05}, {'diff': 5.73749999999984e-05}, {'diff': 5.8097999999999483e-05}, {'diff': 5.8249999999999275e-05}, {'diff': 5.7652000000001785e-05}, {'diff': 5.8208000000000565e-05...</msg>
<status status="PASS" starttime="20201029 12:46:45.610" endtime="20201029 12:46:45.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:45.618" level="INFO">${ACCURACY} = {'diff': [5.8319999999997124e-05, 5.73749999999984e-05, 5.8097999999999483e-05, 5.8249999999999275e-05, 5.7652000000001785e-05, 5.8208000000000565e-05, 5.744499999999972e-05, 5.765300000000126e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:45.614" endtime="20201029 12:46:45.618"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.623" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201029 12:46:45.622" endtime="20201029 12:46:45.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.625" level="INFO">VALUE: [5.8319999999997124e-05, 5.73749999999984e-05, 5.8097999999999483e-05, 5.8249999999999275e-05, 5.7652000000001785e-05, 5.8208000000000565e-05, 5.744499999999972e-05, 5.765300000000126e-05, 5.7694000000000495e-05, 5.790300000000151e-05, 5.736099999999883e-05, 5.8249999999999275e-05, 5.738900000000144e-05, 5.808300000000044e-05, 5.7792000000000954e-05, 5.822299999999961e-05, 5.822299999999961e-05, 5.8056000000000774e-05, 5.8292000000001454e-05, 5.7930000000001175e-05, 5.802699999999869e-05, 5.7708000000000065e-05, 5.784699999999976e-05, 5.763900000000169e-05, 5.78749999999989e-05, 5.813900000000219e-05, 5.815299999999829e-05, 5.734700000000273e-05, 5.8235999999999705e-05, 5.733299999999969e-05, 5.7820000000000094e-05, 5.793099999999718e-05, 5.811099999999958e-05, 5.7528000000001134e-05, 5.76810000000004e-05, 5.8306000000001024e-05, 5.81810000000009e-05, 5.7527999999997664e-05, 5.833300000000069e-05, 5.801299999999912e-05, 5.7958000000000315e-05, 5.804100000000173e-05, 5.738900000000144e-05, 5.8180000000001425e-05, 5.7958000000000315e-05, 5.809700000000001e-05, 5.7514000000001564e-05, 5.736099999999883e-05, 5.793100000000065e-05, 5.815300000000176e-05]</msg>
<status status="PASS" starttime="20201029 12:46:45.624" endtime="20201029 12:46:45.626"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.619" endtime="20201029 12:46:45.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:45.630" endtime="20201029 12:46:45.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.629" endtime="20201029 12:46:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.628" endtime="20201029 12:46:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.268" endtime="20201029 12:46:45.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.267" endtime="20201029 12:46:45.651"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.660" endtime="20201029 12:46:45.676"></status>
</kw>
<msg timestamp="20201029 12:46:45.677" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.659" endtime="20201029 12:46:45.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:45.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:45.678" endtime="20201029 12:46:45.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.681" endtime="20201029 12:46:45.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.656" endtime="20201029 12:46:45.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.654" endtime="20201029 12:46:45.683"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:45.690" endtime="20201029 12:46:45.985"></status>
</kw>
<msg timestamp="20201029 12:46:45.993" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.688" endtime="20201029 12:46:45.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020098972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020158069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:45.995" endtime="20201029 12:46:46.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.016" endtime="20201029 12:46:46.019"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.686" endtime="20201029 12:46:46.020"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.684" endtime="20201029 12:46:46.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.030" level="INFO">${RESULT} = [{'diff': 5.909700000000101e-05}, {'diff': 5.9236000000000705e-05}, {'diff': 5.858300000000094e-05}, {'diff': 5.8971999999997415e-05}, {'diff': 5.906900000000187e-05}, {'diff': 5.8778000000002384e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:46.023" endtime="20201029 12:46:46.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.040" level="INFO">${ACCURACY} = {'diff': [5.909700000000101e-05, 5.9236000000000705e-05, 5.858300000000094e-05, 5.8971999999997415e-05, 5.906900000000187e-05, 5.8778000000002384e-05, 5.9235999999997235e-05, 5.836099999999983e-05, 5....</msg>
<status status="PASS" starttime="20201029 12:46:46.032" endtime="20201029 12:46:46.040"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.049" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.047" endtime="20201029 12:46:46.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.055" level="INFO">VALUE: [5.909700000000101e-05, 5.9236000000000705e-05, 5.858300000000094e-05, 5.8971999999997415e-05, 5.906900000000187e-05, 5.8778000000002384e-05, 5.9235999999997235e-05, 5.836099999999983e-05, 5.84870000000029e-05, 5.834700000000026e-05, 5.9334000000001164e-05, 5.861100000000008e-05, 5.841700000000158e-05, 5.8555999999997804e-05, 5.9320000000001594e-05, 5.8570000000000844e-05, 5.88749999999999e-05, 5.909700000000101e-05, 5.9250000000000275e-05, 5.8556000000001274e-05, 5.90550000000023e-05, 5.912500000000015e-05, 5.8472000000000385e-05, 5.913899999999972e-05, 5.911099999999711e-05, 5.8707999999997595e-05, 5.8457999999997345e-05, 5.865299999999879e-05, 5.890300000000251e-05, 5.8986000000000455e-05, 5.884700000000076e-05, 5.840300000000201e-05, 5.861100000000008e-05, 5.8806000000001524e-05, 5.8915999999999136e-05, 5.876299999999987e-05, 5.833299999999722e-05, 5.8499999999999525e-05, 5.838899999999897e-05, 5.9194000000001995e-05, 5.8528000000002134e-05, 5.90689999999984e-05, 5.8806000000001524e-05, 5.9222000000001135e-05, 5.9348000000000734e-05, 5.9222000000001135e-05, 5.844500000000072e-05, 5.8556000000001274e-05, 5.9070000000001344e-05, 5.8957999999997845e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.052" endtime="20201029 12:46:46.056"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.042" endtime="20201029 12:46:46.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.064" endtime="20201029 12:46:46.083"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.062" endtime="20201029 12:46:46.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.060" endtime="20201029 12:46:46.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.652" endtime="20201029 12:46:46.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:45.652" endtime="20201029 12:46:46.084"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.093" endtime="20201029 12:46:46.114"></status>
</kw>
<msg timestamp="20201029 12:46:46.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.092" endtime="20201029 12:46:46.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.117" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.116" endtime="20201029 12:46:46.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.119" endtime="20201029 12:46:46.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.089" endtime="20201029 12:46:46.121"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.087" endtime="20201029 12:46:46.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.128" endtime="20201029 12:46:46.415"></status>
</kw>
<msg timestamp="20201029 12:46:46.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.126" endtime="20201029 12:46:46.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023992639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024052097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.420" endtime="20201029 12:46:46.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.428" endtime="20201029 12:46:46.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.124" endtime="20201029 12:46:46.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.122" endtime="20201029 12:46:46.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.435" level="INFO">${RESULT} = [{'diff': 5.9458000000001815e-05}, {'diff': 5.938899999999997e-05}, {'diff': 6.0151999999997346e-05}, {'diff': 5.9458000000001815e-05}, {'diff': 5.936100000000083e-05}, {'diff': 5.994499999999875e-05}...</msg>
<status status="PASS" starttime="20201029 12:46:46.432" endtime="20201029 12:46:46.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.439" level="INFO">${ACCURACY} = {'diff': [5.9458000000001815e-05, 5.938899999999997e-05, 6.0151999999997346e-05, 5.9458000000001815e-05, 5.936100000000083e-05, 5.994499999999875e-05, 5.9735999999997735e-05, 5.9514000000000095e-05, 5...</msg>
<status status="PASS" starttime="20201029 12:46:46.436" endtime="20201029 12:46:46.440"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.444" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.443" endtime="20201029 12:46:46.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.447" level="INFO">VALUE: [5.9458000000001815e-05, 5.938899999999997e-05, 6.0151999999997346e-05, 5.9458000000001815e-05, 5.936100000000083e-05, 5.994499999999875e-05, 5.9735999999997735e-05, 5.9514000000000095e-05, 5.993099999999918e-05, 6.0041999999999734e-05, 6.0041999999999734e-05, 5.9500000000000525e-05, 5.938899999999997e-05, 5.948700000000043e-05, 5.9943999999999276e-05, 6.015300000000029e-05, 6.0097999999998014e-05, 5.938899999999997e-05, 6.030500000000008e-05, 5.961100000000108e-05, 6.0222000000002135e-05, 5.955499999999933e-05, 5.958300000000194e-05, 5.961100000000108e-05, 5.955499999999933e-05, 6.00689999999994e-05, 5.991699999999961e-05, 5.944499999999825e-05, 5.9777999999999915e-05, 5.988900000000047e-05, 6.00689999999994e-05, 5.9820000000002094e-05, 5.9597999999997514e-05, 5.943100000000215e-05, 5.9693999999999026e-05, 6.0179999999999956e-05, 5.9693999999999026e-05, 6.0249999999997805e-05, 5.963900000000022e-05, 6.008299999999897e-05, 5.9985999999997985e-05, 5.981899999999915e-05, 5.9999999999997555e-05, 6.0278000000000415e-05, 5.9527999999999665e-05, 5.9486000000000955e-05, 5.96949999999985e-05, 6.0291999999999984e-05, 5.9598000000000984e-05, 5.9527999999999665e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.445" endtime="20201029 12:46:46.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.440" endtime="20201029 12:46:46.449"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.453" endtime="20201029 12:46:46.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.451" endtime="20201029 12:46:46.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.450" endtime="20201029 12:46:46.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.085" endtime="20201029 12:46:46.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.085" endtime="20201029 12:46:46.474"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.483" endtime="20201029 12:46:46.500"></status>
</kw>
<msg timestamp="20201029 12:46:46.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.481" endtime="20201029 12:46:46.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.501" endtime="20201029 12:46:46.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.504" endtime="20201029 12:46:46.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.478" endtime="20201029 12:46:46.506"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.476" endtime="20201029 12:46:46.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.513" endtime="20201029 12:46:46.801"></status>
</kw>
<msg timestamp="20201029 12:46:46.804" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020781542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.511" endtime="20201029 12:46:46.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020721014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020781542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.805" endtime="20201029 12:46:46.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.814" endtime="20201029 12:46:46.815"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.509" endtime="20201029 12:46:46.816"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.507" endtime="20201029 12:46:46.816"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:46.820" level="INFO">${RESULT} = [{'diff': 6.0528000000000665e-05}, {'diff': 6.0986000000002455e-05}, {'diff': 6.117999999999749e-05}, {'diff': 6.129199999999752e-05}, {'diff': 6.044499999999925e-05}, {'diff': 6.088799999999853e-05},...</msg>
<status status="PASS" starttime="20201029 12:46:46.817" endtime="20201029 12:46:46.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:46.826" level="INFO">${ACCURACY} = {'diff': [6.0528000000000665e-05, 6.0986000000002455e-05, 6.117999999999749e-05, 6.129199999999752e-05, 6.044499999999925e-05, 6.088799999999853e-05, 6.0944000000000276e-05, 6.0500000000001525e-05, 6....</msg>
<status status="PASS" starttime="20201029 12:46:46.821" endtime="20201029 12:46:46.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.830" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201029 12:46:46.829" endtime="20201029 12:46:46.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.833" level="INFO">VALUE: [6.0528000000000665e-05, 6.0986000000002455e-05, 6.117999999999749e-05, 6.129199999999752e-05, 6.044499999999925e-05, 6.088799999999853e-05, 6.0944000000000276e-05, 6.0500000000001525e-05, 6.105500000000083e-05, 6.0916000000001136e-05, 6.034699999999879e-05, 6.034700000000226e-05, 6.118100000000043e-05, 6.091700000000061e-05, 6.0457999999999346e-05, 6.090300000000104e-05, 6.122199999999967e-05, 6.0542000000000235e-05, 6.116700000000086e-05, 6.123699999999871e-05, 6.048699999999796e-05, 6.0472000000002385e-05, 6.115200000000182e-05, 6.05689999999999e-05, 6.054100000000076e-05, 6.105499999999736e-05, 6.0971999999999416e-05, 6.062500000000165e-05, 6.108299999999997e-05, 6.0985999999998985e-05, 6.0528000000000665e-05, 6.090299999999757e-05, 6.094499999999975e-05, 6.061099999999861e-05, 6.043099999999968e-05, 6.061099999999861e-05, 6.129200000000098e-05, 6.090300000000104e-05, 6.112499999999868e-05, 6.0457999999999346e-05, 6.0792000000000485e-05, 6.084699999999929e-05, 6.0944000000000276e-05, 6.0527999999997195e-05, 6.12499999999988e-05, 6.040300000000054e-05, 6.0777999999997445e-05, 6.116699999999739e-05, 6.034699999999879e-05, 6.0333999999998694e-05]</msg>
<status status="PASS" starttime="20201029 12:46:46.831" endtime="20201029 12:46:46.834"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.826" endtime="20201029 12:46:46.834"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:46.838" endtime="20201029 12:46:46.857"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.836" endtime="20201029 12:46:46.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.835" endtime="20201029 12:46:46.858"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.475" endtime="20201029 12:46:46.859"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.474" endtime="20201029 12:46:46.859"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.868" endtime="20201029 12:46:46.884"></status>
</kw>
<msg timestamp="20201029 12:46:46.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.866" endtime="20201029 12:46:46.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:46.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:46.886" endtime="20201029 12:46:46.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.888" endtime="20201029 12:46:46.890"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.863" endtime="20201029 12:46:46.891"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.861" endtime="20201029 12:46:46.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:46.898" endtime="20201029 12:46:47.185"></status>
</kw>
<msg timestamp="20201029 12:46:47.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:46.896" endtime="20201029 12:46:47.189"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.197" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020417208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020479097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.190" endtime="20201029 12:46:47.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.198" endtime="20201029 12:46:47.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.893" endtime="20201029 12:46:47.201"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.892" endtime="20201029 12:46:47.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.205" level="INFO">${RESULT} = [{'diff': 6.188900000000247e-05}, {'diff': 6.173599999999974e-05}, {'diff': 6.229200000000198e-05}, {'diff': 6.177799999999845e-05}, {'diff': 6.169400000000103e-05}, {'diff': 6.169400000000103e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.202" endtime="20201029 12:46:47.205"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.209" level="INFO">${ACCURACY} = {'diff': [6.188900000000247e-05, 6.173599999999974e-05, 6.229200000000198e-05, 6.177799999999845e-05, 6.169400000000103e-05, 6.169400000000103e-05, 6.163899999999875e-05, 6.140299999999807e-05, 6.1860...</msg>
<status status="PASS" starttime="20201029 12:46:47.206" endtime="20201029 12:46:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.214" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.213" endtime="20201029 12:46:47.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.217" level="INFO">VALUE: [6.188900000000247e-05, 6.173599999999974e-05, 6.229200000000198e-05, 6.177799999999845e-05, 6.169400000000103e-05, 6.169400000000103e-05, 6.163899999999875e-05, 6.140299999999807e-05, 6.186099999999986e-05, 6.231999999999766e-05, 6.170900000000007e-05, 6.1888999999999e-05, 6.187499999999943e-05, 6.211199999999958e-05, 6.163799999999928e-05, 6.179099999999854e-05, 6.184700000000029e-05, 6.147199999999992e-05, 6.230499999999861e-05, 6.199999999999956e-05, 6.181900000000115e-05, 6.17080000000006e-05, 6.191699999999814e-05, 6.145799999999688e-05, 6.165300000000179e-05, 6.173599999999974e-05, 6.222200000000067e-05, 6.234800000000026e-05, 6.227799999999895e-05, 6.17499999999993e-05, 6.188799999999953e-05, 6.188799999999953e-05, 6.230499999999861e-05, 6.226399999999938e-05, 6.19439999999978e-05, 6.222200000000067e-05, 6.190299999999857e-05, 6.15690000000009e-05, 6.1888000000003e-05, 6.205599999999784e-05, 6.147199999999992e-05, 6.222200000000067e-05, 6.166699999999789e-05, 6.191699999999814e-05, 6.195900000000032e-05, 6.155499999999786e-05, 6.22629999999999e-05, 6.152699999999872e-05, 6.233300000000122e-05, 6.140200000000207e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.215" endtime="20201029 12:46:47.218"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.210" endtime="20201029 12:46:47.218"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.222" endtime="20201029 12:46:47.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.220" endtime="20201029 12:46:47.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.219" endtime="20201029 12:46:47.242"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.860" endtime="20201029 12:46:47.243"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:46.859" endtime="20201029 12:46:47.243"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.252" endtime="20201029 12:46:47.270"></status>
</kw>
<msg timestamp="20201029 12:46:47.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.250" endtime="20201029 12:46:47.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.272" endtime="20201029 12:46:47.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.274" endtime="20201029 12:46:47.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.248" endtime="20201029 12:46:47.277"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.245" endtime="20201029 12:46:47.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.284" endtime="20201029 12:46:47.570"></status>
</kw>
<msg timestamp="20201029 12:46:47.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021089625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.282" endtime="20201029 12:46:47.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021089625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021152944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.575" endtime="20201029 12:46:47.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.583" endtime="20201029 12:46:47.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.279" endtime="20201029 12:46:47.586"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.278" endtime="20201029 12:46:47.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.590" level="INFO">${RESULT} = [{'diff': 6.331899999999918e-05}, {'diff': 6.280499999999911e-05}, {'diff': 6.286100000000086e-05}, {'diff': 6.283299999999825e-05}, {'diff': 6.330499999999961e-05}, {'diff': 6.326400000000038e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:47.587" endtime="20201029 12:46:47.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.594" level="INFO">${ACCURACY} = {'diff': [6.331899999999918e-05, 6.280499999999911e-05, 6.286100000000086e-05, 6.283299999999825e-05, 6.330499999999961e-05, 6.326400000000038e-05, 6.27500000000003e-05, 6.27500000000003e-05, 6.286100...</msg>
<status status="PASS" starttime="20201029 12:46:47.591" endtime="20201029 12:46:47.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.599" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.598" endtime="20201029 12:46:47.599"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.601" level="INFO">VALUE: [6.331899999999918e-05, 6.280499999999911e-05, 6.286100000000086e-05, 6.283299999999825e-05, 6.330499999999961e-05, 6.326400000000038e-05, 6.27500000000003e-05, 6.27500000000003e-05, 6.286100000000086e-05, 6.25279999999992e-05, 6.279200000000248e-05, 6.277799999999945e-05, 6.26950000000015e-05, 6.32500000000008e-05, 6.234800000000026e-05, 6.301400000000013e-05, 6.312499999999721e-05, 6.287500000000043e-05, 6.305499999999936e-05, 6.248599999999702e-05, 6.27500000000003e-05, 6.236100000000036e-05, 6.261100000000061e-05, 6.259700000000104e-05, 6.247200000000092e-05, 6.301400000000013e-05, 6.2889e-05, 6.2889e-05, 6.267999999999899e-05, 6.279199999999902e-05, 6.300000000000056e-05, 6.28479999999973e-05, 6.265199999999985e-05, 6.312500000000068e-05, 6.32500000000008e-05, 6.245799999999788e-05, 6.332000000000212e-05, 6.305499999999936e-05, 6.320799999999863e-05, 6.312500000000068e-05, 6.297199999999795e-05, 6.247199999999745e-05, 6.244500000000125e-05, 6.327799999999995e-05, 6.311100000000111e-05, 6.290299999999957e-05, 6.27500000000003e-05, 6.240300000000254e-05, 6.332000000000212e-05, 6.265199999999985e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.600" endtime="20201029 12:46:47.603"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.595" endtime="20201029 12:46:47.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.607" endtime="20201029 12:46:47.627"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.606" endtime="20201029 12:46:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.605" endtime="20201029 12:46:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.244" endtime="20201029 12:46:47.628"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.243" endtime="20201029 12:46:47.628"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.637" endtime="20201029 12:46:47.655"></status>
</kw>
<msg timestamp="20201029 12:46:47.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.636" endtime="20201029 12:46:47.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:47.657" endtime="20201029 12:46:47.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.659" endtime="20201029 12:46:47.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.633" endtime="20201029 12:46:47.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.631" endtime="20201029 12:46:47.662"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.669" endtime="20201029 12:46:47.955"></status>
</kw>
<msg timestamp="20201029 12:46:47.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.667" endtime="20201029 12:46:47.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021323389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:47.959" endtime="20201029 12:46:47.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:47.968" endtime="20201029 12:46:47.969"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.664" endtime="20201029 12:46:47.970"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.663" endtime="20201029 12:46:47.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:47.974" level="INFO">${RESULT} = [{'diff': 6.430600000000009e-05}, {'diff': 6.391700000000014e-05}, {'diff': 6.411099999999864e-05}, {'diff': 6.404200000000027e-05}, {'diff': 6.3889000000001e-05}, {'diff': 6.340300000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:47.971" endtime="20201029 12:46:47.974"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:47.979" level="INFO">${ACCURACY} = {'diff': [6.430600000000009e-05, 6.391700000000014e-05, 6.411099999999864e-05, 6.404200000000027e-05, 6.3889000000001e-05, 6.340300000000007e-05, 6.405599999999984e-05, 6.354100000000029e-05, 6.429200...</msg>
<status status="PASS" starttime="20201029 12:46:47.975" endtime="20201029 12:46:47.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.984" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201029 12:46:47.983" endtime="20201029 12:46:47.984"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:47.986" level="INFO">VALUE: [6.430600000000009e-05, 6.391700000000014e-05, 6.411099999999864e-05, 6.404200000000027e-05, 6.3889000000001e-05, 6.340300000000007e-05, 6.405599999999984e-05, 6.354100000000029e-05, 6.429200000000052e-05, 6.337500000000093e-05, 6.39439999999998e-05, 6.42500000000018e-05, 6.337499999999746e-05, 6.398600000000199e-05, 6.400000000000156e-05, 6.356899999999943e-05, 6.363900000000075e-05, 6.412500000000168e-05, 6.3889000000001e-05, 6.40419999999968e-05, 6.366699999999989e-05, 6.380500000000011e-05, 6.391700000000014e-05, 6.398600000000199e-05, 6.379200000000002e-05, 6.418000000000049e-05, 6.412500000000168e-05, 6.376400000000088e-05, 6.429100000000104e-05, 6.413900000000125e-05, 6.420799999999963e-05, 6.40280000000007e-05, 6.402799999999723e-05, 6.334700000000179e-05, 6.334699999999832e-05, 6.404200000000027e-05, 6.377800000000045e-05, 6.347300000000139e-05, 6.393099999999971e-05, 6.3889000000001e-05, 6.387499999999796e-05, 6.42219999999992e-05, 6.381899999999968e-05, 6.387500000000143e-05, 6.419400000000006e-05, 6.33890000000005e-05, 6.343099999999921e-05, 6.356899999999943e-05, 6.34439999999993e-05, 6.369399999999956e-05]</msg>
<status status="PASS" starttime="20201029 12:46:47.985" endtime="20201029 12:46:47.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.980" endtime="20201029 12:46:47.987"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:47.991" endtime="20201029 12:46:48.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.989" endtime="20201029 12:46:48.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.988" endtime="20201029 12:46:48.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.629" endtime="20201029 12:46:48.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:47.629" endtime="20201029 12:46:48.012"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.020" endtime="20201029 12:46:48.038"></status>
</kw>
<msg timestamp="20201029 12:46:48.039" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.019" endtime="20201029 12:46:48.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.040" endtime="20201029 12:46:48.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.042" endtime="20201029 12:46:48.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.016" endtime="20201029 12:46:48.044"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.014" endtime="20201029 12:46:48.045"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.051" endtime="20201029 12:46:48.350"></status>
</kw>
<msg timestamp="20201029 12:46:48.353" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.050" endtime="20201029 12:46:48.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019740944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019805833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.354" endtime="20201029 12:46:48.362"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.363" endtime="20201029 12:46:48.364"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.047" endtime="20201029 12:46:48.365"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.046" endtime="20201029 12:46:48.365"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.369" level="INFO">${RESULT} = [{'diff': 6.488899999999853e-05}, {'diff': 6.452799999999773e-05}, {'diff': 6.49440000000008e-05}, {'diff': 6.512499999999921e-05}, {'diff': 6.505499999999789e-05}, {'diff': 6.465300000000132e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:48.366" endtime="20201029 12:46:48.369"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.373" level="INFO">${ACCURACY} = {'diff': [6.488899999999853e-05, 6.452799999999773e-05, 6.49440000000008e-05, 6.512499999999921e-05, 6.505499999999789e-05, 6.465300000000132e-05, 6.447200000000292e-05, 6.505600000000084e-05, 6.45280...</msg>
<status status="PASS" starttime="20201029 12:46:48.370" endtime="20201029 12:46:48.373"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.378" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.377" endtime="20201029 12:46:48.378"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.380" level="INFO">VALUE: [6.488899999999853e-05, 6.452799999999773e-05, 6.49440000000008e-05, 6.512499999999921e-05, 6.505499999999789e-05, 6.465300000000132e-05, 6.447200000000292e-05, 6.505600000000084e-05, 6.45280000000012e-05, 6.47089999999996e-05, 6.530599999999762e-05, 6.509799999999955e-05, 6.490300000000157e-05, 6.513799999999931e-05, 6.501400000000213e-05, 6.455600000000034e-05, 6.47500000000023e-05, 6.443000000000074e-05, 6.44029999999976e-05, 6.463899999999828e-05, 6.501400000000213e-05, 6.493000000000124e-05, 6.50969999999966e-05, 6.493100000000071e-05, 6.476400000000188e-05, 6.505599999999737e-05, 6.463899999999828e-05, 6.445899999999935e-05, 6.45699999999999e-05, 6.45699999999999e-05, 6.531999999999719e-05, 6.534700000000032e-05, 6.487499999999896e-05, 6.499999999999909e-05, 6.437500000000193e-05, 6.445899999999935e-05, 6.444399999999684e-05, 6.52500000000028e-05, 6.437499999999846e-05, 6.497199999999995e-05, 6.519499999999706e-05, 6.431999999999966e-05, 6.479100000000154e-05, 6.440300000000107e-05, 6.52639999999989e-05, 6.505600000000084e-05, 6.49440000000008e-05, 6.462500000000218e-05, 6.449999999999859e-05, 6.47639999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.379" endtime="20201029 12:46:48.381"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.374" endtime="20201029 12:46:48.382"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.385" endtime="20201029 12:46:48.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.384" endtime="20201029 12:46:48.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.383" endtime="20201029 12:46:48.405"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.013" endtime="20201029 12:46:48.406"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.012" endtime="20201029 12:46:48.406"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.415" endtime="20201029 12:46:48.433"></status>
</kw>
<msg timestamp="20201029 12:46:48.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.413" endtime="20201029 12:46:48.434"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.436" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.435" endtime="20201029 12:46:48.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.437" endtime="20201029 12:46:48.439"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.410" endtime="20201029 12:46:48.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.408" endtime="20201029 12:46:48.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.447" endtime="20201029 12:46:48.734"></status>
</kw>
<msg timestamp="20201029 12:46:48.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.446" endtime="20201029 12:46:48.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021407417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021473208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.738" endtime="20201029 12:46:48.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.747" endtime="20201029 12:46:48.748"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.443" endtime="20201029 12:46:48.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.441" endtime="20201029 12:46:48.749"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:48.753" level="INFO">${RESULT} = [{'diff': 6.579099999999907e-05}, {'diff': 6.57639999999994e-05}, {'diff': 6.563899999999928e-05}, {'diff': 6.566700000000189e-05}, {'diff': 6.54029999999986e-05}, {'diff': 6.544399999999784e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:48.750" endtime="20201029 12:46:48.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:48.758" level="INFO">${ACCURACY} = {'diff': [6.579099999999907e-05, 6.57639999999994e-05, 6.563899999999928e-05, 6.566700000000189e-05, 6.54029999999986e-05, 6.544399999999784e-05, 6.597200000000095e-05, 6.541699999999817e-05, 6.613899...</msg>
<status status="PASS" starttime="20201029 12:46:48.754" endtime="20201029 12:46:48.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.762" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201029 12:46:48.761" endtime="20201029 12:46:48.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.765" level="INFO">VALUE: [6.579099999999907e-05, 6.57639999999994e-05, 6.563899999999928e-05, 6.566700000000189e-05, 6.54029999999986e-05, 6.544399999999784e-05, 6.597200000000095e-05, 6.541699999999817e-05, 6.613899999999978e-05, 6.591699999999867e-05, 6.623600000000077e-05, 6.561100000000014e-05, 6.588899999999953e-05, 6.587499999999996e-05, 6.536099999999989e-05, 6.580499999999864e-05, 6.53890000000025e-05, 6.583300000000125e-05, 6.630499999999914e-05, 6.580600000000159e-05, 6.544399999999784e-05, 6.555500000000186e-05, 6.583400000000073e-05, 6.57220000000007e-05, 6.530600000000109e-05, 6.594500000000128e-05, 6.53890000000025e-05, 6.608400000000098e-05, 6.623700000000024e-05, 6.562499999999971e-05, 6.574999999999984e-05, 6.566599999999895e-05, 6.588899999999953e-05, 6.591600000000267e-05, 6.566700000000189e-05, 6.629199999999905e-05, 6.584699999999735e-05, 6.602799999999923e-05, 6.561100000000014e-05, 6.588899999999953e-05, 6.574999999999984e-05, 6.60280000000027e-05, 6.586100000000039e-05, 6.59029999999991e-05, 6.615299999999935e-05, 6.615199999999988e-05, 6.602699999999975e-05, 6.549999999999959e-05, 6.573600000000027e-05, 6.580499999999864e-05]</msg>
<status status="PASS" starttime="20201029 12:46:48.763" endtime="20201029 12:46:48.766"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.758" endtime="20201029 12:46:48.767"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:48.771" endtime="20201029 12:46:48.790"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.769" endtime="20201029 12:46:48.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.768" endtime="20201029 12:46:48.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.407" endtime="20201029 12:46:48.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.406" endtime="20201029 12:46:48.792"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.801" endtime="20201029 12:46:48.818"></status>
</kw>
<msg timestamp="20201029 12:46:48.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.799" endtime="20201029 12:46:48.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:48.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:48.820" endtime="20201029 12:46:48.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.823" endtime="20201029 12:46:48.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.796" endtime="20201029 12:46:48.825"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.794" endtime="20201029 12:46:48.826"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:48.833" endtime="20201029 12:46:49.142"></status>
</kw>
<msg timestamp="20201029 12:46:49.145" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020783875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020850847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:48.831" endtime="20201029 12:46:49.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020783875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020850847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.146" endtime="20201029 12:46:49.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.155" endtime="20201029 12:46:49.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.828" endtime="20201029 12:46:49.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.826" endtime="20201029 12:46:49.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.162" level="INFO">${RESULT} = [{'diff': 6.697199999999848e-05}, {'diff': 6.706900000000293e-05}, {'diff': 6.67640000000004e-05}, {'diff': 6.67220000000017e-05}, {'diff': 6.663900000000028e-05}, {'diff': 6.681999999999869e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:49.158" endtime="20201029 12:46:49.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.167" level="INFO">${ACCURACY} = {'diff': [6.697199999999848e-05, 6.706900000000293e-05, 6.67640000000004e-05, 6.67220000000017e-05, 6.663900000000028e-05, 6.681999999999869e-05, 6.686099999999792e-05, 6.702800000000023e-05, 6.722200...</msg>
<status status="PASS" starttime="20201029 12:46:49.163" endtime="20201029 12:46:49.167"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.171" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.170" endtime="20201029 12:46:49.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.174" level="INFO">VALUE: [6.697199999999848e-05, 6.706900000000293e-05, 6.67640000000004e-05, 6.67220000000017e-05, 6.663900000000028e-05, 6.681999999999869e-05, 6.686099999999792e-05, 6.702800000000023e-05, 6.72220000000022e-05, 6.688900000000053e-05, 6.70419999999998e-05, 6.647300000000092e-05, 6.688900000000053e-05, 6.729100000000057e-05, 6.709700000000207e-05, 6.665299999999985e-05, 6.691699999999967e-05, 6.67220000000017e-05, 6.644399999999884e-05, 6.719500000000253e-05, 6.686100000000139e-05, 6.697300000000142e-05, 6.711099999999817e-05, 6.669500000000203e-05, 6.643099999999874e-05, 6.688900000000053e-05, 6.687500000000096e-05, 6.698600000000152e-05, 6.667999999999952e-05, 6.730499999999667e-05, 6.724999999999787e-05, 6.731899999999971e-05, 6.663900000000028e-05, 6.644399999999884e-05, 6.638900000000003e-05, 6.644500000000178e-05, 6.65700000000019e-05, 6.631999999999819e-05, 6.651400000000016e-05, 6.638900000000003e-05, 6.643100000000221e-05, 6.670899999999813e-05, 6.731999999999919e-05, 6.687499999999749e-05, 6.705499999999989e-05, 6.687500000000096e-05, 6.67909999999966e-05, 6.638900000000003e-05, 6.720799999999916e-05, 6.705499999999989e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.173" endtime="20201029 12:46:49.175"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.168" endtime="20201029 12:46:49.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.179" endtime="20201029 12:46:49.198"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.178" endtime="20201029 12:46:49.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.176" endtime="20201029 12:46:49.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.793" endtime="20201029 12:46:49.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:48.792" endtime="20201029 12:46:49.200"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.209" endtime="20201029 12:46:49.227"></status>
</kw>
<msg timestamp="20201029 12:46:49.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.207" endtime="20201029 12:46:49.227"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.230" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.228" endtime="20201029 12:46:49.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.231" endtime="20201029 12:46:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.205" endtime="20201029 12:46:49.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.202" endtime="20201029 12:46:49.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.240" endtime="20201029 12:46:49.528"></status>
</kw>
<msg timestamp="20201029 12:46:49.531" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.239" endtime="20201029 12:46:49.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.540" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020142014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020209792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.532" endtime="20201029 12:46:49.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.541" endtime="20201029 12:46:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.236" endtime="20201029 12:46:49.543"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.234" endtime="20201029 12:46:49.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.548" level="INFO">${RESULT} = [{'diff': 6.777800000000098e-05}, {'diff': 6.826399999999844e-05}, {'diff': 6.79169999999972e-05}, {'diff': 6.816600000000145e-05}, {'diff': 6.766599999999748e-05}, {'diff': 6.801399999999819e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:49.544" endtime="20201029 12:46:49.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.552" level="INFO">${ACCURACY} = {'diff': [6.777800000000098e-05, 6.826399999999844e-05, 6.79169999999972e-05, 6.816600000000145e-05, 6.766599999999748e-05, 6.801399999999819e-05, 6.777800000000098e-05, 6.795799999999991e-05, 6.76530...</msg>
<status status="PASS" starttime="20201029 12:46:49.549" endtime="20201029 12:46:49.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.557" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.556" endtime="20201029 12:46:49.557"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.559" level="INFO">VALUE: [6.777800000000098e-05, 6.826399999999844e-05, 6.79169999999972e-05, 6.816600000000145e-05, 6.766599999999748e-05, 6.801399999999819e-05, 6.777800000000098e-05, 6.795799999999991e-05, 6.765300000000085e-05, 6.818100000000049e-05, 6.763899999999781e-05, 6.82640000000019e-05, 6.781999999999969e-05, 6.780600000000012e-05, 6.747300000000192e-05, 6.805600000000037e-05, 6.825000000000234e-05, 6.830600000000062e-05, 6.793000000000077e-05, 6.819500000000006e-05, 6.799999999999862e-05, 6.82909999999981e-05, 6.765300000000085e-05, 6.783399999999926e-05, 6.765300000000085e-05, 6.733299999999928e-05, 6.77220000000027e-05, 6.808300000000003e-05, 6.768099999999999e-05, 6.80839999999995e-05, 6.769499999999956e-05, 6.819400000000059e-05, 6.750000000000159e-05, 6.819400000000059e-05, 6.811099999999917e-05, 6.736099999999842e-05, 6.811099999999917e-05, 6.737500000000146e-05, 6.795799999999991e-05, 6.811099999999917e-05, 6.797199999999948e-05, 6.745800000000288e-05, 6.77359999999988e-05, 6.801400000000166e-05, 6.816700000000092e-05, 6.766699999999695e-05, 6.7583999999999e-05, 6.815300000000135e-05, 6.813900000000178e-05, 6.802699999999828e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.558" endtime="20201029 12:46:49.560"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.553" endtime="20201029 12:46:49.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.564" endtime="20201029 12:46:49.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.563" endtime="20201029 12:46:49.584"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.562" endtime="20201029 12:46:49.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.201" endtime="20201029 12:46:49.585"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.200" endtime="20201029 12:46:49.585"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.594" endtime="20201029 12:46:49.615"></status>
</kw>
<msg timestamp="20201029 12:46:49.615" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.593" endtime="20201029 12:46:49.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.617" endtime="20201029 12:46:49.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.619" endtime="20201029 12:46:49.621"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.590" endtime="20201029 12:46:49.622"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.588" endtime="20201029 12:46:49.622"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.629" endtime="20201029 12:46:49.914"></status>
</kw>
<msg timestamp="20201029 12:46:49.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.627" endtime="20201029 12:46:49.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023346764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023415264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:49.918" endtime="20201029 12:46:49.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.927" endtime="20201029 12:46:49.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.624" endtime="20201029 12:46:49.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.623" endtime="20201029 12:46:49.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:49.934" level="INFO">${RESULT} = [{'diff': 6.850000000000259e-05}, {'diff': 6.872200000000023e-05}, {'diff': 6.845899999999988e-05}, {'diff': 6.893100000000124e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.897299999999995e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:49.930" endtime="20201029 12:46:49.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:49.938" level="INFO">${ACCURACY} = {'diff': [6.850000000000259e-05, 6.872200000000023e-05, 6.845899999999988e-05, 6.893100000000124e-05, 6.847199999999998e-05, 6.897299999999995e-05, 6.919399999999812e-05, 6.865199999999891e-05, 6.9041...</msg>
<status status="PASS" starttime="20201029 12:46:49.935" endtime="20201029 12:46:49.938"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.943" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201029 12:46:49.941" endtime="20201029 12:46:49.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:49.945" level="INFO">VALUE: [6.850000000000259e-05, 6.872200000000023e-05, 6.845899999999988e-05, 6.893100000000124e-05, 6.847199999999998e-05, 6.897299999999995e-05, 6.919399999999812e-05, 6.865199999999891e-05, 6.904100000000232e-05, 6.897200000000048e-05, 6.888899999999906e-05, 6.911100000000017e-05, 6.894500000000081e-05, 6.851399999999869e-05, 6.926399999999944e-05, 6.920800000000116e-05, 6.882000000000069e-05, 6.847299999999945e-05, 6.880600000000112e-05, 6.888800000000306e-05, 6.902799999999876e-05, 6.866699999999795e-05, 6.863799999999934e-05, 6.879100000000207e-05, 6.912499999999974e-05, 6.836100000000289e-05, 6.904100000000232e-05, 6.916700000000192e-05, 6.844400000000084e-05, 6.927799999999901e-05, 6.845800000000041e-05, 6.884700000000035e-05, 6.90970000000006e-05, 6.848699999999902e-05, 6.838900000000203e-05, 6.836099999999942e-05, 6.906899999999799e-05, 6.847199999999998e-05, 6.847199999999998e-05, 6.911100000000017e-05, 6.89299999999983e-05, 6.866600000000195e-05, 6.911100000000017e-05, 6.92360000000003e-05, 6.855600000000087e-05, 6.92360000000003e-05, 6.933400000000076e-05, 6.849999999999912e-05, 6.87359999999998e-05, 6.902799999999876e-05]</msg>
<status status="PASS" starttime="20201029 12:46:49.944" endtime="20201029 12:46:49.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.939" endtime="20201029 12:46:49.953"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:49.957" endtime="20201029 12:46:49.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.955" endtime="20201029 12:46:49.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.954" endtime="20201029 12:46:49.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.586" endtime="20201029 12:46:49.977"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.586" endtime="20201029 12:46:49.977"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:49.986" endtime="20201029 12:46:50.005"></status>
</kw>
<msg timestamp="20201029 12:46:50.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:49.985" endtime="20201029 12:46:50.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.006" endtime="20201029 12:46:50.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.009" endtime="20201029 12:46:50.010"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.982" endtime="20201029 12:46:50.011"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.980" endtime="20201029 12:46:50.012"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.018" endtime="20201029 12:46:50.305"></status>
</kw>
<msg timestamp="20201029 12:46:50.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.017" endtime="20201029 12:46:50.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020093056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020163236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.309" endtime="20201029 12:46:50.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.317" endtime="20201029 12:46:50.319"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.014" endtime="20201029 12:46:50.320"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.012" endtime="20201029 12:46:50.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.324" level="INFO">${RESULT} = [{'diff': 7.017999999999955e-05}, {'diff': 6.990299999999963e-05}, {'diff': 6.938899999999956e-05}, {'diff': 6.997299999999748e-05}, {'diff': 6.975000000000037e-05}, {'diff': 6.945799999999794e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:50.321" endtime="20201029 12:46:50.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.329" level="INFO">${ACCURACY} = {'diff': [7.017999999999955e-05, 6.990299999999963e-05, 6.938899999999956e-05, 6.997299999999748e-05, 6.975000000000037e-05, 6.945799999999794e-05, 6.962500000000024e-05, 6.958299999999806e-05, 7.0165...</msg>
<status status="PASS" starttime="20201029 12:46:50.325" endtime="20201029 12:46:50.330"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.334" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.333" endtime="20201029 12:46:50.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.337" level="INFO">VALUE: [7.017999999999955e-05, 6.990299999999963e-05, 6.938899999999956e-05, 6.997299999999748e-05, 6.975000000000037e-05, 6.945799999999794e-05, 6.962500000000024e-05, 6.958299999999806e-05, 7.016599999999998e-05, 7.018000000000302e-05, 7.00970000000016e-05, 6.995800000000191e-05, 7.015299999999988e-05, 7.008399999999804e-05, 7.015299999999988e-05, 6.934700000000085e-05, 6.995899999999791e-05, 6.936100000000042e-05, 7.004199999999933e-05, 6.977700000000003e-05, 6.97909999999996e-05, 6.993000000000277e-05, 6.948600000000055e-05, 6.99299999999993e-05, 6.982000000000169e-05, 6.975000000000037e-05, 6.977800000000298e-05, 6.986100000000092e-05, 6.979199999999908e-05, 6.970900000000113e-05, 6.944500000000131e-05, 7.013900000000031e-05, 6.986099999999745e-05, 7.008399999999804e-05, 6.986100000000092e-05, 6.980499999999917e-05, 6.947200000000098e-05, 6.981900000000221e-05, 7.007000000000194e-05, 6.988900000000006e-05, 6.966699999999895e-05, 7.016699999999945e-05, 7.022199999999826e-05, 6.994499999999834e-05, 7.009699999999813e-05, 7.031999999999872e-05, 7.015299999999988e-05, 7.001400000000019e-05, 6.969399999999862e-05, 7.02360000000013e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.335" endtime="20201029 12:46:50.337"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.330" endtime="20201029 12:46:50.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.342" endtime="20201029 12:46:50.361"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.340" endtime="20201029 12:46:50.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.339" endtime="20201029 12:46:50.362"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.978" endtime="20201029 12:46:50.363"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:49.978" endtime="20201029 12:46:50.363"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.372" endtime="20201029 12:46:50.390"></status>
</kw>
<msg timestamp="20201029 12:46:50.390" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.370" endtime="20201029 12:46:50.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.391" endtime="20201029 12:46:50.393"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.394" endtime="20201029 12:46:50.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.367" endtime="20201029 12:46:50.396"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.365" endtime="20201029 12:46:50.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.403" endtime="20201029 12:46:50.690"></status>
</kw>
<msg timestamp="20201029 12:46:50.694" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.402" endtime="20201029 12:46:50.694"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020219861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020291153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.695" endtime="20201029 12:46:50.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.703" endtime="20201029 12:46:50.705"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.399" endtime="20201029 12:46:50.706"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.397" endtime="20201029 12:46:50.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:50.710" level="INFO">${RESULT} = [{'diff': 7.129200000000058e-05}, {'diff': 7.068099999999952e-05}, {'diff': 7.047299999999798e-05}, {'diff': 7.061199999999768e-05}, {'diff': 7.10970000000026e-05}, {'diff': 7.125000000000187e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:50.707" endtime="20201029 12:46:50.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:50.714" level="INFO">${ACCURACY} = {'diff': [7.129200000000058e-05, 7.068099999999952e-05, 7.047299999999798e-05, 7.061199999999768e-05, 7.10970000000026e-05, 7.125000000000187e-05, 7.075000000000137e-05, 7.050000000000112e-05, 7.10829...</msg>
<status status="PASS" starttime="20201029 12:46:50.711" endtime="20201029 12:46:50.714"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.719" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201029 12:46:50.718" endtime="20201029 12:46:50.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.721" level="INFO">VALUE: [7.129200000000058e-05, 7.068099999999952e-05, 7.047299999999798e-05, 7.061199999999768e-05, 7.10970000000026e-05, 7.125000000000187e-05, 7.075000000000137e-05, 7.050000000000112e-05, 7.108299999999956e-05, 7.10559999999999e-05, 7.050000000000112e-05, 7.036100000000142e-05, 7.075000000000137e-05, 7.037500000000099e-05, 7.065299999999691e-05, 7.088900000000106e-05, 7.059800000000158e-05, 7.115200000000141e-05, 7.077699999999756e-05, 7.1069e-05, 7.116600000000098e-05, 7.105500000000042e-05, 7.066699999999995e-05, 7.045799999999894e-05, 7.094399999999987e-05, 7.070799999999919e-05, 7.066699999999995e-05, 7.063899999999734e-05, 7.094499999999934e-05, 7.056999999999897e-05, 7.056999999999897e-05, 7.115300000000088e-05, 7.091600000000073e-05, 7.102800000000076e-05, 7.102700000000128e-05, 7.037499999999752e-05, 7.131900000000024e-05, 7.094399999999987e-05, 7.058299999999906e-05, 7.034699999999838e-05, 7.077800000000051e-05, 7.068099999999952e-05, 7.125000000000187e-05, 7.07499999999979e-05, 7.079200000000008e-05, 7.066699999999995e-05, 7.076400000000094e-05, 7.073700000000127e-05, 7.106999999999947e-05, 7.081900000000321e-05]</msg>
<status status="PASS" starttime="20201029 12:46:50.720" endtime="20201029 12:46:50.722"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.715" endtime="20201029 12:46:50.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:50.727" endtime="20201029 12:46:50.746"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.725" endtime="20201029 12:46:50.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.724" endtime="20201029 12:46:50.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.364" endtime="20201029 12:46:50.747"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.363" endtime="20201029 12:46:50.747"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.756" endtime="20201029 12:46:50.775"></status>
</kw>
<msg timestamp="20201029 12:46:50.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.755" endtime="20201029 12:46:50.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:50.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:50.776" endtime="20201029 12:46:50.778"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.779" endtime="20201029 12:46:50.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.752" endtime="20201029 12:46:50.781"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.750" endtime="20201029 12:46:50.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:50.789" endtime="20201029 12:46:51.075"></status>
</kw>
<msg timestamp="20201029 12:46:51.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:50.787" endtime="20201029 12:46:51.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021259597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021331167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.079" endtime="20201029 12:46:51.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.088" endtime="20201029 12:46:51.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.784" endtime="20201029 12:46:51.090"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.783" endtime="20201029 12:46:51.091"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.095" level="INFO">${RESULT} = [{'diff': 7.156999999999997e-05}, {'diff': 7.172199999999976e-05}, {'diff': 7.211199999999918e-05}, {'diff': 7.194500000000034e-05}, {'diff': 7.230600000000115e-05}, {'diff': 7.195800000000044e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:51.092" endtime="20201029 12:46:51.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.099" level="INFO">${ACCURACY} = {'diff': [7.156999999999997e-05, 7.172199999999976e-05, 7.211199999999918e-05, 7.194500000000034e-05, 7.230600000000115e-05, 7.195800000000044e-05, 7.140199999999819e-05, 7.227699999999906e-05, 7.2040...</msg>
<status status="PASS" starttime="20201029 12:46:51.096" endtime="20201029 12:46:51.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.104" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.103" endtime="20201029 12:46:51.104"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.106" level="INFO">VALUE: [7.156999999999997e-05, 7.172199999999976e-05, 7.211199999999918e-05, 7.194500000000034e-05, 7.230600000000115e-05, 7.195800000000044e-05, 7.140199999999819e-05, 7.227699999999906e-05, 7.204099999999838e-05, 7.145799999999994e-05, 7.165299999999791e-05, 7.162499999999877e-05, 7.218099999999755e-05, 7.159699999999963e-05, 7.175000000000237e-05, 7.170899999999966e-05, 7.140299999999766e-05, 7.169500000000009e-05, 7.233300000000081e-05, 7.158300000000006e-05, 7.151400000000169e-05, 7.222200000000026e-05, 7.198600000000305e-05, 7.18049999999977e-05, 7.230500000000167e-05, 7.208300000000056e-05, 7.158300000000006e-05, 7.187499999999902e-05, 7.207000000000047e-05, 7.226399999999897e-05, 7.152799999999779e-05, 7.140300000000113e-05, 7.215199999999894e-05, 7.232000000000072e-05, 7.215199999999894e-05, 7.205500000000142e-05, 7.205499999999795e-05, 7.168000000000105e-05, 7.14170000000007e-05, 7.207000000000047e-05, 7.165299999999791e-05, 7.16109999999992e-05, 7.222200000000026e-05, 7.195800000000044e-05, 7.144499999999984e-05, 7.212499999999927e-05, 7.145900000000288e-05, 7.209700000000013e-05, 7.16109999999992e-05, 7.218000000000155e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.105" endtime="20201029 12:46:51.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.100" endtime="20201029 12:46:51.108"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.112" endtime="20201029 12:46:51.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.111" endtime="20201029 12:46:51.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.110" endtime="20201029 12:46:51.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.748" endtime="20201029 12:46:51.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:50.748" endtime="20201029 12:46:51.133"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.142" endtime="20201029 12:46:51.161"></status>
</kw>
<msg timestamp="20201029 12:46:51.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.141" endtime="20201029 12:46:51.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.162" endtime="20201029 12:46:51.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.165" endtime="20201029 12:46:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.138" endtime="20201029 12:46:51.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.136" endtime="20201029 12:46:51.168"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.174" endtime="20201029 12:46:51.463"></status>
</kw>
<msg timestamp="20201029 12:46:51.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.173" endtime="20201029 12:46:51.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.474" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020196583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020269722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.467" endtime="20201029 12:46:51.475"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.476" endtime="20201029 12:46:51.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.170" endtime="20201029 12:46:51.478"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.168" endtime="20201029 12:46:51.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.483" level="INFO">${RESULT} = [{'diff': 7.313899999999984e-05}, {'diff': 7.320799999999822e-05}, {'diff': 7.233300000000081e-05}, {'diff': 7.29170000000022e-05}, {'diff': 7.257000000000097e-05}, {'diff': 7.288899999999959e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:51.479" endtime="20201029 12:46:51.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.489" level="INFO">${ACCURACY} = {'diff': [7.313899999999984e-05, 7.320799999999822e-05, 7.233300000000081e-05, 7.29170000000022e-05, 7.257000000000097e-05, 7.288899999999959e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.30979...</msg>
<status status="PASS" starttime="20201029 12:46:51.484" endtime="20201029 12:46:51.489"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.494" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.492" endtime="20201029 12:46:51.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.496" level="INFO">VALUE: [7.313899999999984e-05, 7.320799999999822e-05, 7.233300000000081e-05, 7.29170000000022e-05, 7.257000000000097e-05, 7.288899999999959e-05, 7.298600000000058e-05, 7.312500000000027e-05, 7.309799999999714e-05, 7.280600000000165e-05, 7.281999999999775e-05, 7.272200000000076e-05, 7.273600000000033e-05, 7.312500000000027e-05, 7.259700000000063e-05, 7.298600000000058e-05, 7.323600000000083e-05, 7.273600000000033e-05, 7.247200000000051e-05, 7.237499999999952e-05, 7.288899999999959e-05, 7.252800000000226e-05, 7.300000000000015e-05, 7.259800000000011e-05, 7.269399999999815e-05, 7.236099999999995e-05, 7.29300000000023e-05, 7.294400000000187e-05, 7.33049999999992e-05, 7.233300000000081e-05, 7.249999999999965e-05, 7.318100000000202e-05, 7.248600000000008e-05, 7.251299999999974e-05, 7.280600000000165e-05, 7.238899999999909e-05, 7.304200000000233e-05, 7.27499999999999e-05, 7.291599999999926e-05, 7.280500000000217e-05, 7.262499999999977e-05, 7.29439999999984e-05, 7.309700000000113e-05, 7.234700000000038e-05, 7.24170000000017e-05, 7.237499999999952e-05, 7.268100000000152e-05, 7.240299999999866e-05, 7.338900000000009e-05, 7.293100000000177e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.495" endtime="20201029 12:46:51.497"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.490" endtime="20201029 12:46:51.497"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.501" endtime="20201029 12:46:51.521"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.500" endtime="20201029 12:46:51.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.498" endtime="20201029 12:46:51.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.134" endtime="20201029 12:46:51.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.134" endtime="20201029 12:46:51.522"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.531" endtime="20201029 12:46:51.549"></status>
</kw>
<msg timestamp="20201029 12:46:51.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.530" endtime="20201029 12:46:51.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.552" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.551" endtime="20201029 12:46:51.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.553" endtime="20201029 12:46:51.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.527" endtime="20201029 12:46:51.556"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.525" endtime="20201029 12:46:51.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.563" endtime="20201029 12:46:51.850"></status>
</kw>
<msg timestamp="20201029 12:46:51.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.561" endtime="20201029 12:46:51.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020338625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:51.855" endtime="20201029 12:46:51.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.863" endtime="20201029 12:46:51.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.559" endtime="20201029 12:46:51.865"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.557" endtime="20201029 12:46:51.866"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:51.870" level="INFO">${RESULT} = [{'diff': 7.418099999999955e-05}, {'diff': 7.33049999999992e-05}, {'diff': 7.423599999999836e-05}, {'diff': 7.381900000000274e-05}, {'diff': 7.405499999999995e-05}, {'diff': 7.42639999999975e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:51.867" endtime="20201029 12:46:51.870"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:51.874" level="INFO">${ACCURACY} = {'diff': [7.418099999999955e-05, 7.33049999999992e-05, 7.423599999999836e-05, 7.381900000000274e-05, 7.405499999999995e-05, 7.42639999999975e-05, 7.420799999999922e-05, 7.384699999999841e-05, 7.349999...</msg>
<status status="PASS" starttime="20201029 12:46:51.871" endtime="20201029 12:46:51.875"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.879" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201029 12:46:51.878" endtime="20201029 12:46:51.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.882" level="INFO">VALUE: [7.418099999999955e-05, 7.33049999999992e-05, 7.423599999999836e-05, 7.381900000000274e-05, 7.405499999999995e-05, 7.42639999999975e-05, 7.420799999999922e-05, 7.384699999999841e-05, 7.349999999999718e-05, 7.35699999999985e-05, 7.359699999999816e-05, 7.349999999999718e-05, 7.39309999999993e-05, 7.365200000000044e-05, 7.411199999999771e-05, 7.345799999999847e-05, 7.369400000000262e-05, 7.356899999999902e-05, 7.377800000000004e-05, 7.412500000000127e-05, 7.397199999999854e-05, 7.419499999999912e-05, 7.336099999999748e-05, 7.352799999999979e-05, 7.429200000000011e-05, 7.363900000000034e-05, 7.419499999999912e-05, 7.363800000000087e-05, 7.424999999999793e-05, 7.429099999999716e-05, 7.347199999999804e-05, 7.383299999999884e-05, 7.337500000000052e-05, 7.372200000000176e-05, 7.420799999999922e-05, 7.406899999999952e-05, 7.39029999999967e-05, 7.379199999999961e-05, 7.361099999999773e-05, 7.350000000000065e-05, 7.434800000000186e-05, 7.418000000000008e-05, 7.37370000000008e-05, 7.418000000000008e-05, 7.373599999999786e-05, 7.345799999999847e-05, 7.4069999999999e-05, 7.379200000000308e-05, 7.342999999999933e-05, 7.363900000000034e-05]</msg>
<status status="PASS" starttime="20201029 12:46:51.880" endtime="20201029 12:46:51.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.875" endtime="20201029 12:46:51.883"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:51.887" endtime="20201029 12:46:51.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.885" endtime="20201029 12:46:51.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.884" endtime="20201029 12:46:51.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.523" endtime="20201029 12:46:51.907"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.523" endtime="20201029 12:46:51.908"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.917" endtime="20201029 12:46:51.935"></status>
</kw>
<msg timestamp="20201029 12:46:51.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.915" endtime="20201029 12:46:51.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:51.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:51.936" endtime="20201029 12:46:51.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.939" endtime="20201029 12:46:51.940"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.912" endtime="20201029 12:46:51.941"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.910" endtime="20201029 12:46:51.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:51.948" endtime="20201029 12:46:52.235"></status>
</kw>
<msg timestamp="20201029 12:46:52.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:51.947" endtime="20201029 12:46:52.238"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.246" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0212975, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021372806, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:52.239" endtime="20201029 12:46:52.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.248" endtime="20201029 12:46:52.249"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.944" endtime="20201029 12:46:52.250"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.942" endtime="20201029 12:46:52.250"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.255" level="INFO">${RESULT} = [{'diff': 7.530600000000068e-05}, {'diff': 7.47500000000019e-05}, {'diff': 7.497199999999954e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.462500000000177e-05}, {'diff': 7.468000000000058e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:52.251" endtime="20201029 12:46:52.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.259" level="INFO">${ACCURACY} = {'diff': [7.530600000000068e-05, 7.47500000000019e-05, 7.497199999999954e-05, 7.472199999999929e-05, 7.462500000000177e-05, 7.468000000000058e-05, 7.531900000000077e-05, 7.463899999999787e-05, 7.47219...</msg>
<status status="PASS" starttime="20201029 12:46:52.256" endtime="20201029 12:46:52.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.263" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.262" endtime="20201029 12:46:52.264"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.266" level="INFO">VALUE: [7.530600000000068e-05, 7.47500000000019e-05, 7.497199999999954e-05, 7.472199999999929e-05, 7.462500000000177e-05, 7.468000000000058e-05, 7.531900000000077e-05, 7.463899999999787e-05, 7.472199999999929e-05, 7.495799999999997e-05, 7.477799999999757e-05, 7.465300000000091e-05, 7.51249999999988e-05, 7.500000000000215e-05, 7.46249999999983e-05, 7.501399999999825e-05, 7.486099999999898e-05, 7.440300000000066e-05, 7.441700000000023e-05, 7.486099999999898e-05, 7.44309999999998e-05, 7.434700000000238e-05, 7.49310000000003e-05, 7.474999999999843e-05, 7.451400000000122e-05, 7.498600000000258e-05, 7.508400000000304e-05, 7.492999999999736e-05, 7.493000000000083e-05, 7.44309999999998e-05, 7.47500000000019e-05, 7.434699999999891e-05, 7.493000000000083e-05, 7.518000000000108e-05, 7.504200000000086e-05, 7.509699999999966e-05, 7.497199999999954e-05, 7.480600000000018e-05, 7.476400000000147e-05, 7.437499999999805e-05, 7.445899999999894e-05, 7.47769999999981e-05, 7.48050000000007e-05, 7.440199999999772e-05, 7.493000000000083e-05, 7.487500000000202e-05, 7.50830000000001e-05, 7.502800000000129e-05, 7.529199999999764e-05, 7.498599999999911e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.265" endtime="20201029 12:46:52.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.260" endtime="20201029 12:46:52.268"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.272" endtime="20201029 12:46:52.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.271" endtime="20201029 12:46:52.292"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.269" endtime="20201029 12:46:52.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.909" endtime="20201029 12:46:52.293"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:51.908" endtime="20201029 12:46:52.293"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.302" endtime="20201029 12:46:52.320"></status>
</kw>
<msg timestamp="20201029 12:46:52.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.300" endtime="20201029 12:46:52.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.322" endtime="20201029 12:46:52.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.324" endtime="20201029 12:46:52.326"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.298" endtime="20201029 12:46:52.327"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.296" endtime="20201029 12:46:52.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.334" endtime="20201029 12:46:52.620"></status>
</kw>
<msg timestamp="20201029 12:46:52.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.332" endtime="20201029 12:46:52.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020187653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.625" endtime="20201029 12:46:52.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.633" endtime="20201029 12:46:52.635"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.329" endtime="20201029 12:46:52.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.328" endtime="20201029 12:46:52.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:52.640" level="INFO">${RESULT} = [{'diff': 7.549999999999918e-05}, {'diff': 7.559799999999964e-05}, {'diff': 7.541699999999776e-05}, {'diff': 7.536099999999948e-05}, {'diff': 7.615199999999947e-05}, {'diff': 7.567999999999811e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:52.637" endtime="20201029 12:46:52.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:52.645" level="INFO">${ACCURACY} = {'diff': [7.549999999999918e-05, 7.559799999999964e-05, 7.541699999999776e-05, 7.536099999999948e-05, 7.615199999999947e-05, 7.567999999999811e-05, 7.592999999999836e-05, 7.61249999999998e-05, 7.60970...</msg>
<status status="PASS" starttime="20201029 12:46:52.641" endtime="20201029 12:46:52.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.650" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201029 12:46:52.649" endtime="20201029 12:46:52.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.653" level="INFO">VALUE: [7.549999999999918e-05, 7.559799999999964e-05, 7.541699999999776e-05, 7.536099999999948e-05, 7.615199999999947e-05, 7.567999999999811e-05, 7.592999999999836e-05, 7.61249999999998e-05, 7.609700000000066e-05, 7.627799999999907e-05, 7.55830000000006e-05, 7.584700000000041e-05, 7.537499999999905e-05, 7.616700000000198e-05, 7.577799999999857e-05, 7.541699999999776e-05, 7.597300000000001e-05, 7.609800000000014e-05, 7.5457999999997e-05, 7.598600000000011e-05, 7.5763999999999e-05, 7.629200000000211e-05, 7.570800000000072e-05, 7.563899999999887e-05, 7.547200000000004e-05, 7.568100000000105e-05, 7.6070000000001e-05, 7.60969999999972e-05, 7.62639999999995e-05, 7.594500000000087e-05, 7.583400000000032e-05, 7.615299999999894e-05, 7.565200000000244e-05, 7.606900000000152e-05, 7.536100000000295e-05, 7.567999999999811e-05, 7.609700000000066e-05, 7.577799999999857e-05, 7.619499999999765e-05, 7.630600000000168e-05, 7.605599999999796e-05, 7.590300000000216e-05, 7.547299999999951e-05, 7.543099999999733e-05, 7.586199999999946e-05, 7.540300000000166e-05, 7.580499999999823e-05, 7.587499999999955e-05, 7.593000000000183e-05, 7.573599999999986e-05]</msg>
<status status="PASS" starttime="20201029 12:46:52.651" endtime="20201029 12:46:52.653"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.646" endtime="20201029 12:46:52.654"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:52.658" endtime="20201029 12:46:52.677"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.656" endtime="20201029 12:46:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.655" endtime="20201029 12:46:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.294" endtime="20201029 12:46:52.678"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.293" endtime="20201029 12:46:52.679"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.687" endtime="20201029 12:46:52.706"></status>
</kw>
<msg timestamp="20201029 12:46:52.706" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.686" endtime="20201029 12:46:52.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:52.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:52.707" endtime="20201029 12:46:52.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.710" endtime="20201029 12:46:52.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.683" endtime="20201029 12:46:52.712"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.681" endtime="20201029 12:46:52.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:52.719" endtime="20201029 12:46:53.007"></status>
</kw>
<msg timestamp="20201029 12:46:53.010" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:52.718" endtime="20201029 12:46:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021031958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021108722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.011" endtime="20201029 12:46:53.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.020" endtime="20201029 12:46:53.021"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.715" endtime="20201029 12:46:53.022"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.713" endtime="20201029 12:46:53.022"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.027" level="INFO">${RESULT} = [{'diff': 7.6764e-05}, {'diff': 7.72640000000005e-05}, {'diff': 7.655499999999898e-05}, {'diff': 7.716699999999951e-05}, {'diff': 7.693099999999883e-05}, {'diff': 7.713900000000037e-05}, {'diff': 7.67...</msg>
<status status="PASS" starttime="20201029 12:46:53.023" endtime="20201029 12:46:53.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.031" level="INFO">${ACCURACY} = {'diff': [7.6764e-05, 7.72640000000005e-05, 7.655499999999898e-05, 7.716699999999951e-05, 7.693099999999883e-05, 7.713900000000037e-05, 7.673599999999739e-05, 7.665299999999944e-05, 7.723599999999789e...</msg>
<status status="PASS" starttime="20201029 12:46:53.028" endtime="20201029 12:46:53.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.035" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.034" endtime="20201029 12:46:53.036"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.038" level="INFO">VALUE: [7.6764e-05, 7.72640000000005e-05, 7.655499999999898e-05, 7.716699999999951e-05, 7.693099999999883e-05, 7.713900000000037e-05, 7.673599999999739e-05, 7.665299999999944e-05, 7.723599999999789e-05, 7.684800000000089e-05, 7.65700000000015e-05, 7.722200000000179e-05, 7.665199999999997e-05, 7.642999999999886e-05, 7.65830000000016e-05, 7.683299999999837e-05, 7.683300000000184e-05, 7.702799999999982e-05, 7.709800000000114e-05, 7.686100000000098e-05, 7.637500000000005e-05, 7.658400000000107e-05, 7.697200000000154e-05, 7.692999999999936e-05, 7.706899999999905e-05, 7.675000000000043e-05, 7.645800000000147e-05, 7.683300000000184e-05, 7.681900000000227e-05, 7.699999999999721e-05, 7.711099999999776e-05, 7.718099999999908e-05, 7.727800000000007e-05, 7.637500000000005e-05, 7.687500000000055e-05, 7.695899999999797e-05, 7.687499999999708e-05, 7.684699999999794e-05, 7.704099999999992e-05, 7.676299999999706e-05, 7.640199999999972e-05, 7.698600000000111e-05, 7.722199999999832e-05, 7.654199999999889e-05, 7.702799999999982e-05, 7.633299999999787e-05, 7.677799999999957e-05, 7.697199999999807e-05, 7.711100000000123e-05, 7.687500000000055e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.037" endtime="20201029 12:46:53.039"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.032" endtime="20201029 12:46:53.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.043" endtime="20201029 12:46:53.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.042" endtime="20201029 12:46:53.063"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.040" endtime="20201029 12:46:53.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.679" endtime="20201029 12:46:53.064"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:52.679" endtime="20201029 12:46:53.064"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.073" endtime="20201029 12:46:53.094"></status>
</kw>
<msg timestamp="20201029 12:46:53.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.071" endtime="20201029 12:46:53.095"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.095" endtime="20201029 12:46:53.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.098" endtime="20201029 12:46:53.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.069" endtime="20201029 12:46:53.100"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.067" endtime="20201029 12:46:53.101"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.107" endtime="20201029 12:46:53.393"></status>
</kw>
<msg timestamp="20201029 12:46:53.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.106" endtime="20201029 12:46:53.396"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023698833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023776333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.397" endtime="20201029 12:46:53.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.406" endtime="20201029 12:46:53.407"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.103" endtime="20201029 12:46:53.408"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.101" endtime="20201029 12:46:53.408"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.412" level="INFO">${RESULT} = [{'diff': 7.750000000000118e-05}, {'diff': 7.78189999999998e-05}, {'diff': 7.784700000000241e-05}, {'diff': 7.748599999999814e-05}, {'diff': 7.745899999999847e-05}, {'diff': 7.822200000000279e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:53.409" endtime="20201029 12:46:53.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.417" level="INFO">${ACCURACY} = {'diff': [7.750000000000118e-05, 7.78189999999998e-05, 7.784700000000241e-05, 7.748599999999814e-05, 7.745899999999847e-05, 7.822200000000279e-05, 7.747200000000204e-05, 7.745899999999847e-05, 7.78340...</msg>
<status status="PASS" starttime="20201029 12:46:53.413" endtime="20201029 12:46:53.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.421" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.420" endtime="20201029 12:46:53.422"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.424" level="INFO">VALUE: [7.750000000000118e-05, 7.78189999999998e-05, 7.784700000000241e-05, 7.748599999999814e-05, 7.745899999999847e-05, 7.822200000000279e-05, 7.747200000000204e-05, 7.745899999999847e-05, 7.783400000000232e-05, 7.787499999999808e-05, 7.745900000000194e-05, 7.833299999999987e-05, 7.770800000000272e-05, 7.8151999999998e-05, 7.83190000000003e-05, 7.780500000000024e-05, 7.7764000000001e-05, 7.7457999999999e-05, 7.779200000000014e-05, 7.762499999999783e-05, 7.74449999999989e-05, 7.784699999999894e-05, 7.798599999999864e-05, 7.790200000000122e-05, 7.77779999999971e-05, 7.799999999999821e-05, 7.788900000000112e-05, 7.78189999999998e-05, 7.788900000000112e-05, 7.811099999999876e-05, 7.826399999999803e-05, 7.816700000000051e-05, 7.819499999999965e-05, 7.798599999999864e-05, 7.782000000000275e-05, 7.797300000000201e-05, 7.766700000000001e-05, 7.818100000000008e-05, 7.758299999999912e-05, 7.763900000000087e-05, 7.76389999999974e-05, 7.793000000000036e-05, 7.816700000000051e-05, 7.741699999999976e-05, 7.769399999999968e-05, 7.816700000000051e-05, 7.768099999999958e-05, 7.741699999999976e-05, 7.747299999999804e-05, 7.751400000000075e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.422" endtime="20201029 12:46:53.425"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.417" endtime="20201029 12:46:53.426"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.430" endtime="20201029 12:46:53.449"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.428" endtime="20201029 12:46:53.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.427" endtime="20201029 12:46:53.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.065" endtime="20201029 12:46:53.450"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.064" endtime="20201029 12:46:53.451"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.460" endtime="20201029 12:46:53.479"></status>
</kw>
<msg timestamp="20201029 12:46:53.479" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.458" endtime="20201029 12:46:53.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.482" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.480" endtime="20201029 12:46:53.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.483" endtime="20201029 12:46:53.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.455" endtime="20201029 12:46:53.485"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.453" endtime="20201029 12:46:53.486"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.492" endtime="20201029 12:46:53.778"></status>
</kw>
<msg timestamp="20201029 12:46:53.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:53.491" endtime="20201029 12:46:53.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0201245, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020203292, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:53.783" endtime="20201029 12:46:53.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.791" endtime="20201029 12:46:53.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.488" endtime="20201029 12:46:53.794"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.486" endtime="20201029 12:46:53.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:53.798" level="INFO">${RESULT} = [{'diff': 7.879200000000114e-05}, {'diff': 7.899999999999921e-05}, {'diff': 7.920800000000075e-05}, {'diff': 7.90970000000002e-05}, {'diff': 7.918099999999761e-05}, {'diff': 7.9151999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:46:53.795" endtime="20201029 12:46:53.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:53.803" level="INFO">${ACCURACY} = {'diff': [7.879200000000114e-05, 7.899999999999921e-05, 7.920800000000075e-05, 7.90970000000002e-05, 7.918099999999761e-05, 7.9151999999999e-05, 7.85839999999996e-05, 7.90970000000002e-05, 7.930500000...</msg>
<status status="PASS" starttime="20201029 12:46:53.799" endtime="20201029 12:46:53.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.808" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201029 12:46:53.807" endtime="20201029 12:46:53.808"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.810" level="INFO">VALUE: [7.879200000000114e-05, 7.899999999999921e-05, 7.920800000000075e-05, 7.90970000000002e-05, 7.918099999999761e-05, 7.9151999999999e-05, 7.85839999999996e-05, 7.90970000000002e-05, 7.930500000000174e-05, 7.884699999999994e-05, 7.92909999999987e-05, 7.880500000000124e-05, 7.843100000000033e-05, 7.898599999999964e-05, 7.888900000000212e-05, 7.907000000000053e-05, 7.870899999999972e-05, 7.917999999999814e-05, 7.841599999999782e-05, 7.933300000000088e-05, 7.87909999999982e-05, 7.870800000000025e-05, 7.924999999999946e-05, 7.887499999999908e-05, 7.888899999999865e-05, 7.856900000000056e-05, 7.901399999999878e-05, 7.866700000000101e-05, 7.872199999999982e-05, 7.923599999999989e-05, 7.919500000000065e-05, 7.894499999999693e-05, 7.89580000000005e-05, 7.9151999999999e-05, 7.855500000000099e-05, 7.868000000000111e-05, 7.880500000000124e-05, 7.887499999999908e-05, 7.886099999999951e-05, 7.869500000000015e-05, 7.91389999999989e-05, 7.861099999999926e-05, 7.911100000000323e-05, 7.879100000000167e-05, 7.920900000000022e-05, 7.880600000000071e-05, 7.904100000000192e-05, 7.919400000000118e-05, 7.838900000000162e-05, 7.929200000000164e-05]</msg>
<status status="PASS" starttime="20201029 12:46:53.809" endtime="20201029 12:46:53.811"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.804" endtime="20201029 12:46:53.812"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:53.816" endtime="20201029 12:46:53.835"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.814" endtime="20201029 12:46:53.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.813" endtime="20201029 12:46:53.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.452" endtime="20201029 12:46:53.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.451" endtime="20201029 12:46:53.836"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.845" endtime="20201029 12:46:53.864"></status>
</kw>
<msg timestamp="20201029 12:46:53.864" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.844" endtime="20201029 12:46:53.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:53.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:53.866" endtime="20201029 12:46:53.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.868" endtime="20201029 12:46:53.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.841" endtime="20201029 12:46:53.870"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.839" endtime="20201029 12:46:53.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:53.877" endtime="20201029 12:46:54.165"></status>
</kw>
<msg timestamp="20201029 12:46:54.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:53.876" endtime="20201029 12:46:54.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.169" endtime="20201029 12:46:54.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.178" endtime="20201029 12:46:54.179"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.873" endtime="20201029 12:46:54.180"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.871" endtime="20201029 12:46:54.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.185" level="INFO">${RESULT} = [{'diff': 8.006899999999859e-05}, {'diff': 7.972200000000082e-05}, {'diff': 7.945799999999753e-05}, {'diff': 7.976399999999953e-05}, {'diff': 7.988899999999965e-05}, {'diff': 7.980599999999824e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:54.181" endtime="20201029 12:46:54.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.189" level="INFO">${ACCURACY} = {'diff': [8.006899999999859e-05, 7.972200000000082e-05, 7.945799999999753e-05, 7.976399999999953e-05, 7.988899999999965e-05, 7.980599999999824e-05, 8.018099999999861e-05, 7.980600000000171e-05, 7.9958...</msg>
<status status="PASS" starttime="20201029 12:46:54.186" endtime="20201029 12:46:54.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.193" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.192" endtime="20201029 12:46:54.194"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.196" level="INFO">VALUE: [8.006899999999859e-05, 7.972200000000082e-05, 7.945799999999753e-05, 7.976399999999953e-05, 7.988899999999965e-05, 7.980599999999824e-05, 8.018099999999861e-05, 7.980600000000171e-05, 7.99580000000015e-05, 7.9458000000001e-05, 7.994400000000193e-05, 8.001399999999978e-05, 7.967999999999864e-05, 7.965299999999897e-05, 7.94169999999983e-05, 8.011100000000076e-05, 7.987500000000008e-05, 8.029200000000264e-05, 7.95840000000006e-05, 7.933399999999688e-05, 7.979200000000214e-05, 8.012500000000033e-05, 7.961100000000026e-05, 7.993000000000236e-05, 7.940199999999925e-05, 7.986100000000051e-05, 8.022199999999785e-05, 7.98329999999979e-05, 8.031999999999831e-05, 7.937500000000305e-05, 7.97779999999991e-05, 8.019499999999818e-05, 7.954100000000242e-05, 7.987500000000008e-05, 8.004199999999892e-05, 8.023600000000089e-05, 8.004099999999945e-05, 7.976399999999953e-05, 7.998600000000064e-05, 7.965300000000244e-05, 7.998599999999717e-05, 7.997200000000107e-05, 8.016700000000251e-05, 7.997200000000107e-05, 7.991599999999932e-05, 8.005599999999849e-05, 8.002799999999935e-05, 7.986199999999999e-05, 8.005500000000249e-05, 8.008300000000163e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.195" endtime="20201029 12:46:54.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.190" endtime="20201029 12:46:54.197"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.201" endtime="20201029 12:46:54.221"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.200" endtime="20201029 12:46:54.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.198" endtime="20201029 12:46:54.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.837" endtime="20201029 12:46:54.222"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:53.837" endtime="20201029 12:46:54.222"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.231" endtime="20201029 12:46:54.250"></status>
</kw>
<msg timestamp="20201029 12:46:54.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.230" endtime="20201029 12:46:54.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.252" endtime="20201029 12:46:54.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.254" endtime="20201029 12:46:54.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.227" endtime="20201029 12:46:54.256"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.225" endtime="20201029 12:46:54.257"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.264" endtime="20201029 12:46:54.550"></status>
</kw>
<msg timestamp="20201029 12:46:54.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:54.262" endtime="20201029 12:46:54.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021777903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0218585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:46:54.554" endtime="20201029 12:46:54.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.563" endtime="20201029 12:46:54.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.259" endtime="20201029 12:46:54.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.257" endtime="20201029 12:46:54.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.570" level="INFO">${RESULT} = [{'diff': 8.059699999999823e-05}, {'diff': 8.084699999999848e-05}, {'diff': 8.09719999999986e-05}, {'diff': 8.112500000000133e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.076300000000106e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:54.566" endtime="20201029 12:46:54.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.574" level="INFO">${ACCURACY} = {'diff': [8.059699999999823e-05, 8.084699999999848e-05, 8.09719999999986e-05, 8.112500000000133e-05, 8.11109999999983e-05, 8.076300000000106e-05, 8.06109999999978e-05, 8.087500000000108e-05, 8.0527999...</msg>
<status status="PASS" starttime="20201029 12:46:54.571" endtime="20201029 12:46:54.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.579" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.578" endtime="20201029 12:46:54.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.581" level="INFO">VALUE: [8.059699999999823e-05, 8.084699999999848e-05, 8.09719999999986e-05, 8.112500000000133e-05, 8.11109999999983e-05, 8.076300000000106e-05, 8.06109999999978e-05, 8.087500000000108e-05, 8.052799999999985e-05, 8.122200000000232e-05, 8.075000000000096e-05, 8.040299999999972e-05, 8.081999999999881e-05, 8.088900000000065e-05, 8.115300000000047e-05, 8.081999999999881e-05, 8.076400000000053e-05, 8.07230000000013e-05, 8.123600000000189e-05, 8.050000000000071e-05, 8.079199999999967e-05, 8.072200000000182e-05, 8.055499999999952e-05, 8.081899999999934e-05, 8.069499999999868e-05, 8.087500000000108e-05, 8.130599999999974e-05, 8.087500000000108e-05, 8.099999999999774e-05, 8.133399999999888e-05, 8.04450000000019e-05, 8.130599999999974e-05, 8.10130000000013e-05, 8.127700000000113e-05, 8.084699999999848e-05, 8.05970000000017e-05, 8.058300000000213e-05, 8.065299999999997e-05, 8.126400000000103e-05, 8.06520000000005e-05, 8.058299999999866e-05, 8.072199999999835e-05, 8.070899999999825e-05, 8.101400000000078e-05, 8.109699999999873e-05, 8.062500000000083e-05, 8.070799999999878e-05, 8.04719999999981e-05, 8.065299999999997e-05, 8.054199999999942e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.580" endtime="20201029 12:46:54.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.575" endtime="20201029 12:46:54.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.587" endtime="20201029 12:46:54.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.586" endtime="20201029 12:46:54.607"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.584" endtime="20201029 12:46:54.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.223" endtime="20201029 12:46:54.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.223" endtime="20201029 12:46:54.608"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.617" endtime="20201029 12:46:54.634"></status>
</kw>
<msg timestamp="20201029 12:46:54.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.615" endtime="20201029 12:46:54.635"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:54.636" endtime="20201029 12:46:54.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.639" endtime="20201029 12:46:54.640"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.613" endtime="20201029 12:46:54.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.611" endtime="20201029 12:46:54.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.648" endtime="20201029 12:46:54.935"></status>
</kw>
<msg timestamp="20201029 12:46:54.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020497833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.646" endtime="20201029 12:46:54.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020497833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020580014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:54.940" endtime="20201029 12:46:54.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:54.948" endtime="20201029 12:46:54.950"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.644" endtime="20201029 12:46:54.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.642" endtime="20201029 12:46:54.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:54.955" level="INFO">${RESULT} = [{'diff': 8.218100000000061e-05}, {'diff': 8.19170000000008e-05}, {'diff': 8.176300000000206e-05}, {'diff': 8.1458999999999e-05}, {'diff': 8.21390000000019e-05}, {'diff': 8.231900000000084e-05}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:46:54.952" endtime="20201029 12:46:54.955"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:54.960" level="INFO">${ACCURACY} = {'diff': [8.218100000000061e-05, 8.19170000000008e-05, 8.176300000000206e-05, 8.1458999999999e-05, 8.21390000000019e-05, 8.231900000000084e-05, 8.21390000000019e-05, 8.143000000000039e-05, 8.172199999...</msg>
<status status="PASS" starttime="20201029 12:46:54.956" endtime="20201029 12:46:54.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.965" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201029 12:46:54.964" endtime="20201029 12:46:54.965"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:54.967" level="INFO">VALUE: [8.218100000000061e-05, 8.19170000000008e-05, 8.176300000000206e-05, 8.1458999999999e-05, 8.21390000000019e-05, 8.231900000000084e-05, 8.21390000000019e-05, 8.143000000000039e-05, 8.172199999999935e-05, 8.138900000000115e-05, 8.225000000000246e-05, 8.234699999999998e-05, 8.183399999999938e-05, 8.165300000000097e-05, 8.169499999999968e-05, 8.180600000000024e-05, 8.207000000000006e-05, 8.165300000000097e-05, 8.191600000000132e-05, 8.218000000000114e-05, 8.150000000000171e-05, 8.21109999999993e-05, 8.166700000000054e-05, 8.179200000000067e-05, 8.22919999999977e-05, 8.19170000000008e-05, 8.16390000000014e-05, 8.190199999999828e-05, 8.186100000000252e-05, 8.227699999999866e-05, 8.150000000000171e-05, 8.201399999999831e-05, 8.16109999999988e-05, 8.144399999999996e-05, 8.154100000000095e-05, 8.172199999999935e-05, 8.19719999999996e-05, 8.144399999999996e-05, 8.159699999999923e-05, 8.155599999999999e-05, 8.151399999999781e-05, 8.166699999999708e-05, 8.183399999999938e-05, 8.21109999999993e-05, 8.137499999999812e-05, 8.172200000000282e-05, 8.180500000000077e-05, 8.136100000000202e-05, 8.180500000000077e-05, 8.224999999999899e-05]</msg>
<status status="PASS" starttime="20201029 12:46:54.966" endtime="20201029 12:46:54.972"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.961" endtime="20201029 12:46:54.973"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:54.977" endtime="20201029 12:46:54.996"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.975" endtime="20201029 12:46:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.974" endtime="20201029 12:46:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.609" endtime="20201029 12:46:54.997"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.608" endtime="20201029 12:46:54.998"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.007" endtime="20201029 12:46:55.024"></status>
</kw>
<msg timestamp="20201029 12:46:55.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.005" endtime="20201029 12:46:55.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.026" endtime="20201029 12:46:55.028"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.028" endtime="20201029 12:46:55.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.002" endtime="20201029 12:46:55.030"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.000" endtime="20201029 12:46:55.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.038" endtime="20201029 12:46:55.326"></status>
</kw>
<msg timestamp="20201029 12:46:55.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.036" endtime="20201029 12:46:55.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020223792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020306306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.331" endtime="20201029 12:46:55.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.339" endtime="20201029 12:46:55.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.033" endtime="20201029 12:46:55.342"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.032" endtime="20201029 12:46:55.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.346" level="INFO">${RESULT} = [{'diff': 8.251399999999881e-05}, {'diff': 8.26109999999998e-05}, {'diff': 8.33330000000014e-05}, {'diff': 8.287499999999962e-05}, {'diff': 8.237499999999912e-05}, {'diff': 8.258400000000013e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:55.343" endtime="20201029 12:46:55.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.351" level="INFO">${ACCURACY} = {'diff': [8.251399999999881e-05, 8.26109999999998e-05, 8.33330000000014e-05, 8.287499999999962e-05, 8.237499999999912e-05, 8.258400000000013e-05, 8.326399999999956e-05, 8.319500000000118e-05, 8.254099...</msg>
<status status="PASS" starttime="20201029 12:46:55.347" endtime="20201029 12:46:55.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.355" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.354" endtime="20201029 12:46:55.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.358" level="INFO">VALUE: [8.251399999999881e-05, 8.26109999999998e-05, 8.33330000000014e-05, 8.287499999999962e-05, 8.237499999999912e-05, 8.258400000000013e-05, 8.326399999999956e-05, 8.319500000000118e-05, 8.254099999999848e-05, 8.266699999999808e-05, 8.284799999999995e-05, 8.24170000000013e-05, 8.27369999999994e-05, 8.294400000000146e-05, 8.276299999999959e-05, 8.240300000000172e-05, 8.258300000000066e-05, 8.322199999999738e-05, 8.269400000000121e-05, 8.281899999999787e-05, 8.320800000000128e-05, 8.290299999999876e-05, 8.236099999999955e-05, 8.327799999999913e-05, 8.266699999999808e-05, 8.294399999999799e-05, 8.251299999999934e-05, 8.252699999999891e-05, 8.312499999999987e-05, 8.319499999999772e-05, 8.276399999999906e-05, 8.254199999999795e-05, 8.236099999999955e-05, 8.329099999999923e-05, 8.240300000000172e-05, 8.273599999999992e-05, 8.322199999999738e-05, 8.294399999999799e-05, 8.292999999999842e-05, 8.294400000000146e-05, 8.29859999999967e-05, 8.322200000000085e-05, 8.237499999999912e-05, 8.31110000000003e-05, 8.293100000000136e-05, 8.309700000000073e-05, 8.286100000000005e-05, 8.24720000000001e-05, 8.276399999999906e-05, 8.284799999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.356" endtime="20201029 12:46:55.359"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.351" endtime="20201029 12:46:55.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.363" endtime="20201029 12:46:55.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.361" endtime="20201029 12:46:55.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.360" endtime="20201029 12:46:55.383"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.998" endtime="20201029 12:46:55.384"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:54.998" endtime="20201029 12:46:55.384"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.393" endtime="20201029 12:46:55.412"></status>
</kw>
<msg timestamp="20201029 12:46:55.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.391" endtime="20201029 12:46:55.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.413" endtime="20201029 12:46:55.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.416" endtime="20201029 12:46:55.417"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.389" endtime="20201029 12:46:55.418"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.386" endtime="20201029 12:46:55.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.425" endtime="20201029 12:46:55.735"></status>
</kw>
<msg timestamp="20201029 12:46:55.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021163792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.424" endtime="20201029 12:46:55.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.746" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021163792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:55.739" endtime="20201029 12:46:55.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.747" endtime="20201029 12:46:55.749"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.421" endtime="20201029 12:46:55.750"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.419" endtime="20201029 12:46:55.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:55.754" level="INFO">${RESULT} = [{'diff': 8.41110000000013e-05}, {'diff': 8.402799999999988e-05}, {'diff': 8.392999999999942e-05}, {'diff': 8.334700000000098e-05}, {'diff': 8.341599999999935e-05}, {'diff': 8.341599999999935e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:55.751" endtime="20201029 12:46:55.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:55.759" level="INFO">${ACCURACY} = {'diff': [8.41110000000013e-05, 8.402799999999988e-05, 8.392999999999942e-05, 8.334700000000098e-05, 8.341599999999935e-05, 8.341599999999935e-05, 8.348600000000067e-05, 8.394399999999899e-05, 8.40829...</msg>
<status status="PASS" starttime="20201029 12:46:55.755" endtime="20201029 12:46:55.759"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.763" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201029 12:46:55.762" endtime="20201029 12:46:55.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.766" level="INFO">VALUE: [8.41110000000013e-05, 8.402799999999988e-05, 8.392999999999942e-05, 8.334700000000098e-05, 8.341599999999935e-05, 8.341599999999935e-05, 8.348600000000067e-05, 8.394399999999899e-05, 8.408299999999869e-05, 8.413900000000044e-05, 8.345800000000153e-05, 8.402799999999988e-05, 8.423600000000142e-05, 8.337500000000012e-05, 8.405599999999902e-05, 8.4153e-05, 8.429100000000023e-05, 8.376400000000006e-05, 8.376400000000006e-05, 8.372199999999788e-05, 8.402799999999988e-05, 8.41110000000013e-05, 8.393100000000236e-05, 8.373600000000092e-05, 8.404199999999945e-05, 8.388900000000019e-05, 8.404200000000292e-05, 8.3459000000001e-05, 8.36659999999996e-05, 8.426300000000109e-05, 8.340199999999978e-05, 8.4153e-05, 8.408299999999869e-05, 8.404199999999945e-05, 8.337500000000012e-05, 8.373600000000092e-05, 8.352799999999938e-05, 8.376400000000006e-05, 8.397300000000107e-05, 8.405599999999902e-05, 8.386200000000052e-05, 8.351399999999981e-05, 8.375000000000049e-05, 8.352800000000285e-05, 8.348600000000067e-05, 8.405599999999902e-05, 8.376400000000006e-05, 8.4153e-05, 8.352800000000285e-05, 8.359700000000123e-05]</msg>
<status status="PASS" starttime="20201029 12:46:55.764" endtime="20201029 12:46:55.767"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.759" endtime="20201029 12:46:55.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:55.772" endtime="20201029 12:46:55.791"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.770" endtime="20201029 12:46:55.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.769" endtime="20201029 12:46:55.792"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.385" endtime="20201029 12:46:55.793"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.384" endtime="20201029 12:46:55.793"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.802" endtime="20201029 12:46:55.821"></status>
</kw>
<msg timestamp="20201029 12:46:55.821" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.800" endtime="20201029 12:46:55.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:55.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:55.822" endtime="20201029 12:46:55.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.825" endtime="20201029 12:46:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.797" endtime="20201029 12:46:55.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.795" endtime="20201029 12:46:55.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:55.834" endtime="20201029 12:46:56.121"></status>
</kw>
<msg timestamp="20201029 12:46:56.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:55.833" endtime="20201029 12:46:56.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.132" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020217569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020302, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:56.125" endtime="20201029 12:46:56.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.133" endtime="20201029 12:46:56.135"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.830" endtime="20201029 12:46:56.136"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.828" endtime="20201029 12:46:56.136"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.140" level="INFO">${RESULT} = [{'diff': 8.44309999999994e-05}, {'diff': 8.466599999999713e-05}, {'diff': 8.51669999999971e-05}, {'diff': 8.501400000000131e-05}, {'diff': 8.437500000000112e-05}, {'diff': 8.466700000000008e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:56.137" endtime="20201029 12:46:56.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.145" level="INFO">${ACCURACY} = {'diff': [8.44309999999994e-05, 8.466599999999713e-05, 8.51669999999971e-05, 8.501400000000131e-05, 8.437500000000112e-05, 8.466700000000008e-05, 8.455599999999952e-05, 8.51249999999984e-05, 8.4653000...</msg>
<status status="PASS" starttime="20201029 12:46:56.141" endtime="20201029 12:46:56.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.150" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.149" endtime="20201029 12:46:56.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.153" level="INFO">VALUE: [8.44309999999994e-05, 8.466599999999713e-05, 8.51669999999971e-05, 8.501400000000131e-05, 8.437500000000112e-05, 8.466700000000008e-05, 8.455599999999952e-05, 8.51249999999984e-05, 8.46530000000005e-05, 8.512500000000187e-05, 8.494399999999999e-05, 8.440199999999731e-05, 8.461099999999833e-05, 8.522199999999938e-05, 8.497199999999913e-05, 8.444399999999949e-05, 8.495800000000303e-05, 8.529099999999776e-05, 8.469499999999922e-05, 8.473599999999845e-05, 8.440300000000026e-05, 8.498700000000164e-05, 8.437500000000112e-05, 8.475000000000149e-05, 8.477799999999716e-05, 8.431899999999937e-05, 8.43049999999998e-05, 8.487500000000162e-05, 8.513900000000144e-05, 8.452799999999691e-05, 8.452800000000038e-05, 8.469499999999922e-05, 8.48050000000003e-05, 8.476400000000106e-05, 8.448700000000114e-05, 8.533299999999994e-05, 8.481899999999987e-05, 8.44720000000021e-05, 8.51110000000023e-05, 8.463900000000094e-05, 8.494399999999999e-05, 8.526399999999809e-05, 8.49309999999999e-05, 8.4846999999999e-05, 8.495800000000303e-05, 8.497199999999913e-05, 8.451399999999734e-05, 8.513900000000144e-05, 8.513900000000144e-05, 8.468000000000017e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.151" endtime="20201029 12:46:56.153"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.146" endtime="20201029 12:46:56.154"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.158" endtime="20201029 12:46:56.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.156" endtime="20201029 12:46:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.155" endtime="20201029 12:46:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.794" endtime="20201029 12:46:56.178"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:55.793" endtime="20201029 12:46:56.179"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.188" endtime="20201029 12:46:56.207"></status>
</kw>
<msg timestamp="20201029 12:46:56.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.186" endtime="20201029 12:46:56.208"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.209" endtime="20201029 12:46:56.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.211" endtime="20201029 12:46:56.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.183" endtime="20201029 12:46:56.213"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.181" endtime="20201029 12:46:56.214"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.220" endtime="20201029 12:46:56.507"></status>
</kw>
<msg timestamp="20201029 12:46:56.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.219" endtime="20201029 12:46:56.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020132139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020218014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.512" endtime="20201029 12:46:56.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.520" endtime="20201029 12:46:56.522"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.216" endtime="20201029 12:46:56.523"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.214" endtime="20201029 12:46:56.523"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.527" level="INFO">${RESULT} = [{'diff': 8.587499999999915e-05}, {'diff': 8.602799999999841e-05}, {'diff': 8.593099999999743e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.54310000000004e-05}, {'diff': 8.568100000000065e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:56.524" endtime="20201029 12:46:56.527"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.532" level="INFO">${ACCURACY} = {'diff': [8.587499999999915e-05, 8.602799999999841e-05, 8.593099999999743e-05, 8.559699999999976e-05, 8.54310000000004e-05, 8.568100000000065e-05, 8.594400000000099e-05, 8.561099999999933e-05, 8.59299...</msg>
<status status="PASS" starttime="20201029 12:46:56.528" endtime="20201029 12:46:56.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.536" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.535" endtime="20201029 12:46:56.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.539" level="INFO">VALUE: [8.587499999999915e-05, 8.602799999999841e-05, 8.593099999999743e-05, 8.559699999999976e-05, 8.54310000000004e-05, 8.568100000000065e-05, 8.594400000000099e-05, 8.561099999999933e-05, 8.592999999999795e-05, 8.540299999999779e-05, 8.629199999999823e-05, 8.554200000000095e-05, 8.600000000000274e-05, 8.574999999999902e-05, 8.54310000000004e-05, 8.61669999999981e-05, 8.619500000000072e-05, 8.577699999999869e-05, 8.570799999999684e-05, 8.559699999999976e-05, 8.540299999999779e-05, 8.626399999999909e-05, 8.61799999999982e-05, 8.581900000000087e-05, 8.58059999999973e-05, 8.537499999999865e-05, 8.618099999999768e-05, 8.540300000000126e-05, 8.613899999999897e-05, 8.54859999999992e-05, 8.576400000000206e-05, 8.609700000000026e-05, 8.588899999999872e-05, 8.611099999999983e-05, 8.563900000000194e-05, 8.622199999999691e-05, 8.53469999999995e-05, 8.547199999999963e-05, 8.572199999999988e-05, 8.557000000000009e-05, 8.622299999999986e-05, 8.626399999999909e-05, 8.622299999999986e-05, 8.579100000000173e-05, 8.545800000000006e-05, 8.541700000000083e-05, 8.58050000000013e-05, 8.61110000000033e-05, 8.594400000000099e-05, 8.572199999999988e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.537" endtime="20201029 12:46:56.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.532" endtime="20201029 12:46:56.540"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.544" endtime="20201029 12:46:56.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.542" endtime="20201029 12:46:56.564"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.541" endtime="20201029 12:46:56.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.180" endtime="20201029 12:46:56.565"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.179" endtime="20201029 12:46:56.565"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.574" endtime="20201029 12:46:56.595"></status>
</kw>
<msg timestamp="20201029 12:46:56.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.572" endtime="20201029 12:46:56.596"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.597" endtime="20201029 12:46:56.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.600" endtime="20201029 12:46:56.601"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.570" endtime="20201029 12:46:56.602"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.568" endtime="20201029 12:46:56.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.609" endtime="20201029 12:46:56.895"></status>
</kw>
<msg timestamp="20201029 12:46:56.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023680542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.608" endtime="20201029 12:46:56.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023593806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023680542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.899" endtime="20201029 12:46:56.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.908" endtime="20201029 12:46:56.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.605" endtime="20201029 12:46:56.910"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.603" endtime="20201029 12:46:56.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:56.915" level="INFO">${RESULT} = [{'diff': 8.673600000000045e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.719500000000172e-05}, {'diff': 8.693099999999843e-05}, {'diff': 8.715200000000006e-05}, {'diff': 8.652699999999944e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:56.911" endtime="20201029 12:46:56.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:56.919" level="INFO">${ACCURACY} = {'diff': [8.673600000000045e-05, 8.66249999999999e-05, 8.719500000000172e-05, 8.693099999999843e-05, 8.715200000000006e-05, 8.652699999999944e-05, 8.702699999999994e-05, 8.697200000000113e-05, 8.67639...</msg>
<status status="PASS" starttime="20201029 12:46:56.916" endtime="20201029 12:46:56.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.924" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201029 12:46:56.922" endtime="20201029 12:46:56.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.926" level="INFO">VALUE: [8.673600000000045e-05, 8.66249999999999e-05, 8.719500000000172e-05, 8.693099999999843e-05, 8.715200000000006e-05, 8.652699999999944e-05, 8.702699999999994e-05, 8.697200000000113e-05, 8.676399999999959e-05, 8.711100000000083e-05, 8.6944999999998e-05, 8.63059999999978e-05, 8.636100000000008e-05, 8.713800000000049e-05, 8.727799999999966e-05, 8.709800000000073e-05, 8.716599999999963e-05, 8.649999999999977e-05, 8.63189999999979e-05, 8.709700000000126e-05, 8.672200000000088e-05, 8.640299999999879e-05, 8.723600000000095e-05, 8.723600000000095e-05, 8.64730000000001e-05, 8.705599999999855e-05, 8.716700000000258e-05, 8.683299999999797e-05, 8.71799999999992e-05, 8.695799999999809e-05, 8.692999999999895e-05, 8.704199999999898e-05, 8.659800000000023e-05, 8.726400000000009e-05, 8.658300000000119e-05, 8.637499999999965e-05, 8.694500000000147e-05, 8.681999999999787e-05, 8.730499999999933e-05, 8.680499999999883e-05, 8.704099999999951e-05, 8.68050000000023e-05, 8.700000000000027e-05, 8.688899999999972e-05, 8.663899999999947e-05, 8.665299999999904e-05, 8.691700000000233e-05, 8.709699999999779e-05, 8.677800000000263e-05, 8.720800000000181e-05]</msg>
<status status="PASS" starttime="20201029 12:46:56.925" endtime="20201029 12:46:56.928"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.920" endtime="20201029 12:46:56.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:56.932" endtime="20201029 12:46:56.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.931" endtime="20201029 12:46:56.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.929" endtime="20201029 12:46:56.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.566" endtime="20201029 12:46:56.953"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.565" endtime="20201029 12:46:56.953"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.962" endtime="20201029 12:46:56.981"></status>
</kw>
<msg timestamp="20201029 12:46:56.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.960" endtime="20201029 12:46:56.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:56.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:56.983" endtime="20201029 12:46:56.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.985" endtime="20201029 12:46:56.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.958" endtime="20201029 12:46:56.987"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.955" endtime="20201029 12:46:56.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:56.995" endtime="20201029 12:46:57.282"></status>
</kw>
<msg timestamp="20201029 12:46:57.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:56.993" endtime="20201029 12:46:57.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020144931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020233139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.286" endtime="20201029 12:46:57.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.295" endtime="20201029 12:46:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.990" endtime="20201029 12:46:57.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.988" endtime="20201029 12:46:57.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.302" level="INFO">${RESULT} = [{'diff': 8.820799999999934e-05}, {'diff': 8.745800000000206e-05}, {'diff': 8.819400000000324e-05}, {'diff': 8.750000000000077e-05}, {'diff': 8.750000000000077e-05}, {'diff': 8.826400000000109e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:57.298" endtime="20201029 12:46:57.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.307" level="INFO">${ACCURACY} = {'diff': [8.820799999999934e-05, 8.745800000000206e-05, 8.819400000000324e-05, 8.750000000000077e-05, 8.750000000000077e-05, 8.826400000000109e-05, 8.791699999999986e-05, 8.758400000000166e-05, 8.7735...</msg>
<status status="PASS" starttime="20201029 12:46:57.303" endtime="20201029 12:46:57.307"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.312" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.310" endtime="20201029 12:46:57.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.314" level="INFO">VALUE: [8.820799999999934e-05, 8.745800000000206e-05, 8.819400000000324e-05, 8.750000000000077e-05, 8.750000000000077e-05, 8.826400000000109e-05, 8.791699999999986e-05, 8.758400000000166e-05, 8.773599999999798e-05, 8.79999999999978e-05, 8.769499999999875e-05, 8.770899999999832e-05, 8.751400000000034e-05, 8.780499999999983e-05, 8.740200000000031e-05, 8.829100000000076e-05, 8.792999999999995e-05, 8.758299999999872e-05, 8.766600000000013e-05, 8.786099999999811e-05, 8.827799999999719e-05, 8.829199999999676e-05, 8.793099999999943e-05, 8.775000000000102e-05, 8.822200000000238e-05, 8.740199999999684e-05, 8.81800000000002e-05, 8.805500000000008e-05, 8.81670000000001e-05, 8.790300000000029e-05, 8.800000000000127e-05, 8.823599999999848e-05, 8.81670000000001e-05, 8.737500000000065e-05, 8.770899999999832e-05, 8.78189999999994e-05, 8.745800000000206e-05, 8.747200000000163e-05, 8.797200000000213e-05, 8.802800000000041e-05, 8.81800000000002e-05, 8.829200000000023e-05, 8.772199999999841e-05, 8.754199999999948e-05, 8.825000000000152e-05, 8.73059999999988e-05, 8.772300000000136e-05, 8.804100000000051e-05, 8.779100000000026e-05, 8.792999999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.313" endtime="20201029 12:46:57.315"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.308" endtime="20201029 12:46:57.316"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.319" endtime="20201029 12:46:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.318" endtime="20201029 12:46:57.339"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.317" endtime="20201029 12:46:57.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.954" endtime="20201029 12:46:57.340"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:56.953" endtime="20201029 12:46:57.340"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.349" endtime="20201029 12:46:57.369"></status>
</kw>
<msg timestamp="20201029 12:46:57.370" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.347" endtime="20201029 12:46:57.370"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.372" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.371" endtime="20201029 12:46:57.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.373" endtime="20201029 12:46:57.375"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.345" endtime="20201029 12:46:57.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.343" endtime="20201029 12:46:57.376"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.383" endtime="20201029 12:46:57.671"></status>
</kw>
<msg timestamp="20201029 12:46:57.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021088653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.381" endtime="20201029 12:46:57.674"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020999986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021088653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.675" endtime="20201029 12:46:57.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.684" endtime="20201029 12:46:57.685"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.379" endtime="20201029 12:46:57.686"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.377" endtime="20201029 12:46:57.686"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:57.690" level="INFO">${RESULT} = [{'diff': 8.866699999999714e-05}, {'diff': 8.854200000000048e-05}, {'diff': 8.836200000000155e-05}, {'diff': 8.862499999999843e-05}, {'diff': 8.845799999999959e-05}, {'diff': 8.859699999999929e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:57.687" endtime="20201029 12:46:57.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:57.695" level="INFO">${ACCURACY} = {'diff': [8.866699999999714e-05, 8.854200000000048e-05, 8.836200000000155e-05, 8.862499999999843e-05, 8.845799999999959e-05, 8.859699999999929e-05, 8.837499999999818e-05, 8.86800000000007e-05, 8.86529...</msg>
<status status="PASS" starttime="20201029 12:46:57.691" endtime="20201029 12:46:57.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.699" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201029 12:46:57.698" endtime="20201029 12:46:57.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.702" level="INFO">VALUE: [8.866699999999714e-05, 8.854200000000048e-05, 8.836200000000155e-05, 8.862499999999843e-05, 8.845799999999959e-05, 8.859699999999929e-05, 8.837499999999818e-05, 8.86800000000007e-05, 8.865299999999757e-05, 8.84860000000022e-05, 8.852800000000091e-05, 8.908399999999969e-05, 8.873599999999898e-05, 8.837499999999818e-05, 8.869400000000027e-05, 8.848599999999873e-05, 8.837499999999818e-05, 8.887499999999868e-05, 8.927800000000166e-05, 8.909699999999979e-05, 8.876299999999865e-05, 8.904200000000098e-05, 8.873599999999898e-05, 8.877800000000116e-05, 8.887499999999868e-05, 8.872300000000236e-05, 8.888899999999825e-05, 8.874999999999855e-05, 8.866600000000113e-05, 8.840300000000079e-05, 8.929099999999829e-05, 8.883299999999997e-05, 8.89999999999988e-05, 8.926400000000209e-05, 8.89999999999988e-05, 8.895899999999957e-05, 8.855600000000005e-05, 8.922299999999939e-05, 8.917999999999773e-05, 8.856900000000015e-05, 8.855500000000058e-05, 8.844400000000002e-05, 8.934700000000004e-05, 8.845799999999959e-05, 8.924999999999905e-05, 8.897200000000313e-05, 8.924999999999905e-05, 8.888899999999825e-05, 8.881999999999987e-05, 8.906900000000065e-05]</msg>
<status status="PASS" starttime="20201029 12:46:57.700" endtime="20201029 12:46:57.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.695" endtime="20201029 12:46:57.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:57.707" endtime="20201029 12:46:57.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.705" endtime="20201029 12:46:57.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.704" endtime="20201029 12:46:57.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.341" endtime="20201029 12:46:57.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.340" endtime="20201029 12:46:57.728"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.737" endtime="20201029 12:46:57.756"></status>
</kw>
<msg timestamp="20201029 12:46:57.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.735" endtime="20201029 12:46:57.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:57.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:57.757" endtime="20201029 12:46:57.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.760" endtime="20201029 12:46:57.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.733" endtime="20201029 12:46:57.762"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.730" endtime="20201029 12:46:57.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:57.769" endtime="20201029 12:46:58.055"></status>
</kw>
<msg timestamp="20201029 12:46:58.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021544639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:57.768" endtime="20201029 12:46:58.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021544639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021634944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.060" endtime="20201029 12:46:58.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.068" endtime="20201029 12:46:58.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.765" endtime="20201029 12:46:58.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.763" endtime="20201029 12:46:58.071"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.075" level="INFO">${RESULT} = [{'diff': 9.030499999999886e-05}, {'diff': 8.988899999999925e-05}, {'diff': 9.022200000000091e-05}, {'diff': 9.023599999999701e-05}, {'diff': 8.965300000000204e-05}, {'diff': 9.026300000000015e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:58.072" endtime="20201029 12:46:58.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.079" level="INFO">${ACCURACY} = {'diff': [9.030499999999886e-05, 8.988899999999925e-05, 9.022200000000091e-05, 9.023599999999701e-05, 8.965300000000204e-05, 9.026300000000015e-05, 8.970800000000084e-05, 8.965299999999857e-05, 8.9722...</msg>
<status status="PASS" starttime="20201029 12:46:58.076" endtime="20201029 12:46:58.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.084" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.083" endtime="20201029 12:46:58.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.086" level="INFO">VALUE: [9.030499999999886e-05, 8.988899999999925e-05, 9.022200000000091e-05, 9.023599999999701e-05, 8.965300000000204e-05, 9.026300000000015e-05, 8.970800000000084e-05, 8.965299999999857e-05, 8.972200000000041e-05, 8.936199999999908e-05, 8.958400000000019e-05, 8.945799999999712e-05, 8.99999999999998e-05, 8.974999999999955e-05, 8.987499999999968e-05, 8.993000000000195e-05, 9.022200000000091e-05, 9.026399999999962e-05, 8.968100000000118e-05, 8.958400000000019e-05, 8.991699999999839e-05, 8.976399999999912e-05, 8.984800000000001e-05, 9.030499999999886e-05, 9.027799999999919e-05, 8.966600000000213e-05, 9.008300000000122e-05, 9.026399999999962e-05, 8.956900000000115e-05, 8.991699999999839e-05, 8.954199999999801e-05, 9.032000000000137e-05, 8.988899999999925e-05, 8.938899999999875e-05, 8.947200000000016e-05, 8.954100000000201e-05, 8.9638999999999e-05, 8.98060000000013e-05, 8.988899999999925e-05, 8.936099999999961e-05, 9.033300000000147e-05, 8.940300000000179e-05, 8.970900000000032e-05, 8.94450000000005e-05, 8.934799999999951e-05, 8.952800000000191e-05, 8.969400000000127e-05, 8.995800000000109e-05, 8.944400000000102e-05, 9.017999999999873e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.085" endtime="20201029 12:46:58.088"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.080" endtime="20201029 12:46:58.089"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.093" endtime="20201029 12:46:58.112"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.091" endtime="20201029 12:46:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.090" endtime="20201029 12:46:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.729" endtime="20201029 12:46:58.113"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:57.728" endtime="20201029 12:46:58.113"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.122" endtime="20201029 12:46:58.141"></status>
</kw>
<msg timestamp="20201029 12:46:58.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.121" endtime="20201029 12:46:58.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.143" endtime="20201029 12:46:58.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.145" endtime="20201029 12:46:58.147"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.118" endtime="20201029 12:46:58.148"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.116" endtime="20201029 12:46:58.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.155" endtime="20201029 12:46:58.442"></status>
</kw>
<msg timestamp="20201029 12:46:58.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.153" endtime="20201029 12:46:58.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020259014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020350194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.446" endtime="20201029 12:46:58.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.454" endtime="20201029 12:46:58.456"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.151" endtime="20201029 12:46:58.457"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.149" endtime="20201029 12:46:58.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.461" level="INFO">${RESULT} = [{'diff': 9.117999999999973e-05}, {'diff': 9.047199999999769e-05}, {'diff': 9.129100000000029e-05}, {'diff': 9.076400000000012e-05}, {'diff': 9.117999999999973e-05}, {'diff': 9.041700000000236e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:58.458" endtime="20201029 12:46:58.462"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.466" level="INFO">${ACCURACY} = {'diff': [9.117999999999973e-05, 9.047199999999769e-05, 9.129100000000029e-05, 9.076400000000012e-05, 9.117999999999973e-05, 9.041700000000236e-05, 9.03199999999979e-05, 9.088900000000025e-05, 9.10419...</msg>
<status status="PASS" starttime="20201029 12:46:58.462" endtime="20201029 12:46:58.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.471" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.470" endtime="20201029 12:46:58.472"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.474" level="INFO">VALUE: [9.117999999999973e-05, 9.047199999999769e-05, 9.129100000000029e-05, 9.076400000000012e-05, 9.117999999999973e-05, 9.041700000000236e-05, 9.03199999999979e-05, 9.088900000000025e-05, 9.104199999999951e-05, 9.109800000000126e-05, 9.09870000000007e-05, 9.040299999999932e-05, 9.072299999999742e-05, 9.080499999999936e-05, 9.075000000000055e-05, 9.072200000000141e-05, 9.056900000000215e-05, 9.059699999999782e-05, 9.040299999999932e-05, 9.129199999999976e-05, 9.070799999999837e-05, 9.08199999999984e-05, 9.076400000000012e-05, 9.062500000000043e-05, 9.098600000000123e-05, 9.091599999999991e-05, 9.034700000000104e-05, 9.109699999999832e-05, 9.112500000000093e-05, 9.111100000000136e-05, 9.097299999999767e-05, 9.101400000000037e-05, 9.037500000000018e-05, 9.120900000000182e-05, 9.079099999999979e-05, 9.106899999999918e-05, 9.086100000000111e-05, 9.073600000000098e-05, 9.122199999999844e-05, 9.088900000000025e-05, 9.054199999999901e-05, 9.068099999999871e-05, 9.093099999999896e-05, 9.1332999999999e-05, 9.055599999999858e-05, 9.104199999999951e-05, 9.130599999999933e-05, 9.041599999999941e-05, 9.040300000000279e-05, 9.087500000000068e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.472" endtime="20201029 12:46:58.475"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.467" endtime="20201029 12:46:58.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.479" endtime="20201029 12:46:58.498"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.477" endtime="20201029 12:46:58.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.476" endtime="20201029 12:46:58.499"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.114" endtime="20201029 12:46:58.500"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.114" endtime="20201029 12:46:58.500"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.509" endtime="20201029 12:46:58.529"></status>
</kw>
<msg timestamp="20201029 12:46:58.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.507" endtime="20201029 12:46:58.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.530" endtime="20201029 12:46:58.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.533" endtime="20201029 12:46:58.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.505" endtime="20201029 12:46:58.535"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.502" endtime="20201029 12:46:58.535"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.542" endtime="20201029 12:46:58.829"></status>
</kw>
<msg timestamp="20201029 12:46:58.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.540" endtime="20201029 12:46:58.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020238889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.834" endtime="20201029 12:46:58.841"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.842" endtime="20201029 12:46:58.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.538" endtime="20201029 12:46:58.844"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.536" endtime="20201029 12:46:58.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:58.849" level="INFO">${RESULT} = [{'diff': 9.1639000000001e-05}, {'diff': 9.144400000000302e-05}, {'diff': 9.147299999999817e-05}, {'diff': 9.223599999999901e-05}, {'diff': 9.162500000000143e-05}, {'diff': 9.176399999999765e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:46:58.846" endtime="20201029 12:46:58.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:58.853" level="INFO">${ACCURACY} = {'diff': [9.1639000000001e-05, 9.144400000000302e-05, 9.147299999999817e-05, 9.223599999999901e-05, 9.162500000000143e-05, 9.176399999999765e-05, 9.152800000000044e-05, 9.206999999999965e-05, 9.224999...</msg>
<status status="PASS" starttime="20201029 12:46:58.850" endtime="20201029 12:46:58.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.858" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201029 12:46:58.857" endtime="20201029 12:46:58.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.860" level="INFO">VALUE: [9.1639000000001e-05, 9.144400000000302e-05, 9.147299999999817e-05, 9.223599999999901e-05, 9.162500000000143e-05, 9.176399999999765e-05, 9.152800000000044e-05, 9.206999999999965e-05, 9.224999999999858e-05, 9.215300000000107e-05, 9.145799999999912e-05, 9.143100000000293e-05, 9.21940000000003e-05, 9.227800000000119e-05, 9.218000000000073e-05, 9.138800000000127e-05, 9.186100000000211e-05, 9.137500000000118e-05, 9.173600000000198e-05, 9.154200000000001e-05, 9.215300000000107e-05, 9.195799999999962e-05, 9.208400000000269e-05, 9.151400000000087e-05, 9.152799999999697e-05, 9.172199999999894e-05, 9.145799999999912e-05, 9.152800000000044e-05, 9.154200000000001e-05, 9.145799999999912e-05, 9.18329999999995e-05, 9.180599999999983e-05, 9.138900000000075e-05, 9.230600000000033e-05, 9.176400000000112e-05, 9.158399999999872e-05, 9.229100000000129e-05, 9.177700000000122e-05, 9.169500000000275e-05, 9.205500000000061e-05, 9.212500000000193e-05, 9.201400000000137e-05, 9.162499999999796e-05, 9.225000000000205e-05, 9.191599999999744e-05, 9.176400000000112e-05, 9.172299999999842e-05, 9.18329999999995e-05, 9.15269999999975e-05, 9.18329999999995e-05]</msg>
<status status="PASS" starttime="20201029 12:46:58.859" endtime="20201029 12:46:58.861"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.854" endtime="20201029 12:46:58.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:58.866" endtime="20201029 12:46:58.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.864" endtime="20201029 12:46:58.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.863" endtime="20201029 12:46:58.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.501" endtime="20201029 12:46:58.886"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.500" endtime="20201029 12:46:58.886"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.897" endtime="20201029 12:46:58.918"></status>
</kw>
<msg timestamp="20201029 12:46:58.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.895" endtime="20201029 12:46:58.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:58.921" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:58.919" endtime="20201029 12:46:58.921"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.922" endtime="20201029 12:46:58.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.892" endtime="20201029 12:46:58.924"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.889" endtime="20201029 12:46:58.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:58.931" endtime="20201029 12:46:59.218"></status>
</kw>
<msg timestamp="20201029 12:46:59.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023300236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:58.930" endtime="20201029 12:46:59.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023206903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023300236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.222" endtime="20201029 12:46:59.230"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.231" endtime="20201029 12:46:59.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.927" endtime="20201029 12:46:59.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.925" endtime="20201029 12:46:59.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.238" level="INFO">${RESULT} = [{'diff': 9.333299999999753e-05}, {'diff': 9.266700000000114e-05}, {'diff': 9.274999999999908e-05}, {'diff': 9.270899999999985e-05}, {'diff': 9.29870000000027e-05}, {'diff': 9.301299999999943e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:46:59.235" endtime="20201029 12:46:59.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.242" level="INFO">${ACCURACY} = {'diff': [9.333299999999753e-05, 9.266700000000114e-05, 9.274999999999908e-05, 9.270899999999985e-05, 9.29870000000027e-05, 9.301299999999943e-05, 9.255599999999711e-05, 9.294400000000105e-05, 9.26940...</msg>
<status status="PASS" starttime="20201029 12:46:59.239" endtime="20201029 12:46:59.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.247" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.246" endtime="20201029 12:46:59.247"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.249" level="INFO">VALUE: [9.333299999999753e-05, 9.266700000000114e-05, 9.274999999999908e-05, 9.270899999999985e-05, 9.29870000000027e-05, 9.301299999999943e-05, 9.255599999999711e-05, 9.294400000000105e-05, 9.26940000000008e-05, 9.306900000000118e-05, 9.286099999999964e-05, 9.331899999999796e-05, 9.241700000000089e-05, 9.330599999999786e-05, 9.307000000000065e-05, 9.329099999999882e-05, 9.298599999999976e-05, 9.326399999999915e-05, 9.25000000000023e-05, 9.244400000000055e-05, 9.324999999999958e-05, 9.2333e-05, 9.309700000000032e-05, 9.311099999999989e-05, 9.312499999999946e-05, 9.254200000000101e-05, 9.293100000000096e-05, 9.290300000000182e-05, 9.24589999999996e-05, 9.29720000000002e-05, 9.330500000000186e-05, 9.256900000000068e-05, 9.241599999999794e-05, 9.304200000000151e-05, 9.295800000000062e-05, 9.288899999999878e-05, 9.318100000000121e-05, 9.301299999999943e-05, 9.236200000000208e-05, 9.330600000000133e-05, 9.245800000000012e-05, 9.290199999999887e-05, 9.326399999999915e-05, 9.254200000000101e-05, 9.261099999999939e-05, 9.249999999999883e-05, 9.336100000000014e-05, 9.24719999999997e-05, 9.280600000000083e-05, 9.319500000000078e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.248" endtime="20201029 12:46:59.251"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.243" endtime="20201029 12:46:59.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.255" endtime="20201029 12:46:59.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.254" endtime="20201029 12:46:59.275"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.253" endtime="20201029 12:46:59.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.887" endtime="20201029 12:46:59.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:58.887" endtime="20201029 12:46:59.276"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.285" endtime="20201029 12:46:59.303"></status>
</kw>
<msg timestamp="20201029 12:46:59.304" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.284" endtime="20201029 12:46:59.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.306" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.305" endtime="20201029 12:46:59.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.307" endtime="20201029 12:46:59.309"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.281" endtime="20201029 12:46:59.310"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.279" endtime="20201029 12:46:59.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.317" endtime="20201029 12:46:59.603"></status>
</kw>
<msg timestamp="20201029 12:46:59.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:59.315" endtime="20201029 12:46:59.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020184944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020279, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201029 12:46:59.608" endtime="20201029 12:46:59.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.616" endtime="20201029 12:46:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.313" endtime="20201029 12:46:59.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.311" endtime="20201029 12:46:59.619"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:46:59.623" level="INFO">${RESULT} = [{'diff': 9.405599999999861e-05}, {'diff': 9.380600000000183e-05}, {'diff': 9.407000000000165e-05}, {'diff': 9.411100000000089e-05}, {'diff': 9.368100000000171e-05}, {'diff': 9.393099999999849e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:46:59.620" endtime="20201029 12:46:59.623"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:46:59.628" level="INFO">${ACCURACY} = {'diff': [9.405599999999861e-05, 9.380600000000183e-05, 9.407000000000165e-05, 9.411100000000089e-05, 9.368100000000171e-05, 9.393099999999849e-05, 9.40139999999999e-05, 9.386100000000064e-05, 9.38889...</msg>
<status status="PASS" starttime="20201029 12:46:59.624" endtime="20201029 12:46:59.628"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.633" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201029 12:46:59.632" endtime="20201029 12:46:59.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.635" level="INFO">VALUE: [9.405599999999861e-05, 9.380600000000183e-05, 9.407000000000165e-05, 9.411100000000089e-05, 9.368100000000171e-05, 9.393099999999849e-05, 9.40139999999999e-05, 9.386100000000064e-05, 9.388899999999978e-05, 9.398600000000076e-05, 9.365300000000257e-05, 9.409699999999785e-05, 9.368099999999824e-05, 9.363899999999953e-05, 9.380600000000183e-05, 9.369499999999781e-05, 9.427799999999972e-05, 9.3333000000001e-05, 9.331900000000143e-05, 9.411099999999742e-05, 9.336100000000014e-05, 9.430599999999886e-05, 9.394400000000205e-05, 9.379199999999879e-05, 9.425000000000058e-05, 9.406999999999818e-05, 9.404200000000251e-05, 9.370900000000085e-05, 9.363800000000005e-05, 9.412500000000046e-05, 9.417999999999926e-05, 9.362499999999996e-05, 9.406899999999871e-05, 9.400000000000033e-05, 9.368100000000171e-05, 9.363899999999953e-05, 9.34590000000006e-05, 9.333400000000047e-05, 9.387500000000021e-05, 9.349999999999983e-05, 9.418000000000273e-05, 9.423599999999754e-05, 9.400000000000033e-05, 9.357000000000115e-05, 9.388899999999978e-05, 9.356900000000168e-05, 9.388899999999978e-05, 9.338900000000275e-05, 9.40139999999999e-05, 9.357000000000115e-05]</msg>
<status status="PASS" starttime="20201029 12:46:59.634" endtime="20201029 12:46:59.636"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.629" endtime="20201029 12:46:59.637"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:46:59.641" endtime="20201029 12:46:59.660"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.639" endtime="20201029 12:46:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.638" endtime="20201029 12:46:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.277" endtime="20201029 12:46:59.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.277" endtime="20201029 12:46:59.662"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.671" endtime="20201029 12:46:59.689"></status>
</kw>
<msg timestamp="20201029 12:46:59.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.669" endtime="20201029 12:46:59.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:46:59.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:46:59.691" endtime="20201029 12:46:59.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.694" endtime="20201029 12:46:59.695"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.666" endtime="20201029 12:46:59.696"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.664" endtime="20201029 12:46:59.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:46:59.703" endtime="20201029 12:46:59.993"></status>
</kw>
<msg timestamp="20201029 12:46:59.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.702" endtime="20201029 12:46:59.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020303458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020398056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:46:59.998" endtime="20201029 12:47:00.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.006" endtime="20201029 12:47:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.699" endtime="20201029 12:47:00.008"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.697" endtime="20201029 12:47:00.009"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.013" level="INFO">${RESULT} = [{'diff': 9.459800000000129e-05}, {'diff': 9.473600000000151e-05}, {'diff': 9.443000000000298e-05}, {'diff': 9.46940000000028e-05}, {'diff': 9.47079999999989e-05}, {'diff': 9.508299999999928e-05}, {'d...</msg>
<status status="PASS" starttime="20201029 12:47:00.010" endtime="20201029 12:47:00.013"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.017" level="INFO">${ACCURACY} = {'diff': [9.459800000000129e-05, 9.473600000000151e-05, 9.443000000000298e-05, 9.46940000000028e-05, 9.47079999999989e-05, 9.508299999999928e-05, 9.494399999999958e-05, 9.469499999999881e-05, 9.466699...</msg>
<status status="PASS" starttime="20201029 12:47:00.014" endtime="20201029 12:47:00.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.022" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.020" endtime="20201029 12:47:00.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.024" level="INFO">VALUE: [9.459800000000129e-05, 9.473600000000151e-05, 9.443000000000298e-05, 9.46940000000028e-05, 9.47079999999989e-05, 9.508299999999928e-05, 9.494399999999958e-05, 9.469499999999881e-05, 9.466699999999967e-05, 9.463900000000053e-05, 9.511099999999842e-05, 9.461099999999792e-05, 9.50140000000009e-05, 9.497199999999872e-05, 9.49859999999983e-05, 9.50140000000009e-05, 9.463900000000053e-05, 9.488900000000078e-05, 9.452799999999997e-05, 9.509699999999885e-05, 9.463900000000053e-05, 9.447300000000117e-05, 9.511200000000136e-05, 9.477699999999728e-05, 9.447199999999822e-05, 9.445799999999865e-05, 9.524999999999811e-05, 9.456900000000268e-05, 9.456899999999921e-05, 9.494499999999906e-05, 9.522200000000244e-05, 9.479199999999979e-05, 9.461100000000139e-05, 9.504200000000004e-05, 9.473600000000151e-05, 9.445799999999865e-05, 9.44720000000017e-05, 9.518000000000026e-05, 9.440299999999985e-05, 9.479199999999979e-05, 9.487500000000121e-05, 9.501399999999743e-05, 9.523599999999854e-05, 9.520899999999888e-05, 9.48469999999986e-05, 9.445800000000212e-05, 9.473599999999804e-05, 9.524999999999811e-05, 9.486099999999817e-05, 9.475000000000108e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.023" endtime="20201029 12:47:00.029"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.018" endtime="20201029 12:47:00.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.034" endtime="20201029 12:47:00.053"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.032" endtime="20201029 12:47:00.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.031" endtime="20201029 12:47:00.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.663" endtime="20201029 12:47:00.054"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:59.662" endtime="20201029 12:47:00.055"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.063" endtime="20201029 12:47:00.086"></status>
</kw>
<msg timestamp="20201029 12:47:00.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.062" endtime="20201029 12:47:00.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.087" endtime="20201029 12:47:00.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.090" endtime="20201029 12:47:00.091"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.059" endtime="20201029 12:47:00.092"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.057" endtime="20201029 12:47:00.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.099" endtime="20201029 12:47:00.384"></status>
</kw>
<msg timestamp="20201029 12:47:00.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.097" endtime="20201029 12:47:00.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022817375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.388" endtime="20201029 12:47:00.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.397" endtime="20201029 12:47:00.398"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.095" endtime="20201029 12:47:00.399"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.093" endtime="20201029 12:47:00.399"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.403" level="INFO">${RESULT} = [{'diff': 9.611099999999942e-05}, {'diff': 9.586099999999917e-05}, {'diff': 9.597199999999972e-05}, {'diff': 9.576400000000165e-05}, {'diff': 9.607000000000018e-05}, {'diff': 9.622199999999997e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:00.400" endtime="20201029 12:47:00.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.408" level="INFO">${ACCURACY} = {'diff': [9.611099999999942e-05, 9.586099999999917e-05, 9.597199999999972e-05, 9.576400000000165e-05, 9.607000000000018e-05, 9.622199999999997e-05, 9.538799999999834e-05, 9.595800000000015e-05, 9.5735...</msg>
<status status="PASS" starttime="20201029 12:47:00.404" endtime="20201029 12:47:00.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.412" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.411" endtime="20201029 12:47:00.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.414" level="INFO">VALUE: [9.611099999999942e-05, 9.586099999999917e-05, 9.597199999999972e-05, 9.576400000000165e-05, 9.607000000000018e-05, 9.622199999999997e-05, 9.538799999999834e-05, 9.595800000000015e-05, 9.573599999999904e-05, 9.58469999999996e-05, 9.556900000000021e-05, 9.623600000000301e-05, 9.566700000000067e-05, 9.620899999999988e-05, 9.565299999999763e-05, 9.593100000000049e-05, 9.537500000000171e-05, 9.593100000000049e-05, 9.591600000000144e-05, 9.57079999999999e-05, 9.61530000000016e-05, 9.55140000000014e-05, 9.616700000000117e-05, 9.626399999999868e-05, 9.626400000000215e-05, 9.593099999999702e-05, 9.600000000000233e-05, 9.548699999999827e-05, 9.581999999999993e-05, 9.630499999999792e-05, 9.547199999999922e-05, 9.633300000000053e-05, 9.62080000000004e-05, 9.622199999999997e-05, 9.595800000000015e-05, 9.622299999999945e-05, 9.558299999999978e-05, 9.591700000000092e-05, 9.570899999999938e-05, 9.619500000000031e-05, 9.586100000000264e-05, 9.606900000000071e-05, 9.601399999999843e-05, 9.552800000000097e-05, 9.537500000000171e-05, 9.534700000000257e-05, 9.559699999999935e-05, 9.630600000000086e-05, 9.573600000000251e-05, 9.622299999999945e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.413" endtime="20201029 12:47:00.416"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.408" endtime="20201029 12:47:00.417"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.420" endtime="20201029 12:47:00.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.419" endtime="20201029 12:47:00.440"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.418" endtime="20201029 12:47:00.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.055" endtime="20201029 12:47:00.441"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.055" endtime="20201029 12:47:00.441"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.450" endtime="20201029 12:47:00.470"></status>
</kw>
<msg timestamp="20201029 12:47:00.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.448" endtime="20201029 12:47:00.471"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.472" endtime="20201029 12:47:00.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.474" endtime="20201029 12:47:00.476"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.446" endtime="20201029 12:47:00.477"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.444" endtime="20201029 12:47:00.477"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.486" endtime="20201029 12:47:00.789"></status>
</kw>
<msg timestamp="20201029 12:47:00.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021010097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.483" endtime="20201029 12:47:00.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020913264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021010097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.793" endtime="20201029 12:47:00.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.802" endtime="20201029 12:47:00.803"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.479" endtime="20201029 12:47:00.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.478" endtime="20201029 12:47:00.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:00.808" level="INFO">${RESULT} = [{'diff': 9.683299999999756e-05}, {'diff': 9.713899999999956e-05}, {'diff': 9.676399999999918e-05}, {'diff': 9.693099999999802e-05}, {'diff': 9.708300000000128e-05}, {'diff': 9.662499999999949e-05}, {...</msg>
<status status="PASS" starttime="20201029 12:47:00.805" endtime="20201029 12:47:00.809"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:00.814" level="INFO">${ACCURACY} = {'diff': [9.683299999999756e-05, 9.713899999999956e-05, 9.676399999999918e-05, 9.693099999999802e-05, 9.708300000000128e-05, 9.662499999999949e-05, 9.676399999999918e-05, 9.693100000000149e-05, 9.6360...</msg>
<status status="PASS" starttime="20201029 12:47:00.809" endtime="20201029 12:47:00.814"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.818" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201029 12:47:00.817" endtime="20201029 12:47:00.819"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.821" level="INFO">VALUE: [9.683299999999756e-05, 9.713899999999956e-05, 9.676399999999918e-05, 9.693099999999802e-05, 9.708300000000128e-05, 9.662499999999949e-05, 9.676399999999918e-05, 9.693100000000149e-05, 9.636099999999967e-05, 9.711100000000042e-05, 9.716599999999923e-05, 9.713899999999956e-05, 9.675000000000308e-05, 9.704199999999857e-05, 9.708299999999781e-05, 9.638899999999881e-05, 9.669500000000081e-05, 9.682000000000093e-05, 9.636099999999967e-05, 9.674999999999961e-05, 9.659700000000035e-05, 9.67080000000009e-05, 9.688899999999931e-05, 9.733299999999806e-05, 9.656899999999774e-05, 9.670799999999743e-05, 9.719499999999784e-05, 9.644500000000056e-05, 9.706999999999771e-05, 9.698699999999977e-05, 9.692999999999855e-05, 9.668000000000176e-05, 9.709699999999738e-05, 9.645800000000065e-05, 9.683300000000103e-05, 9.72080000000014e-05, 9.729199999999882e-05, 9.694500000000106e-05, 9.659799999999982e-05, 9.731999999999796e-05, 9.705599999999814e-05, 9.720799999999793e-05, 9.709700000000085e-05, 9.668000000000176e-05, 9.693000000000201e-05, 9.686100000000017e-05, 9.673600000000004e-05, 9.693099999999802e-05, 9.683399999999703e-05, 9.73059999999984e-05]</msg>
<status status="PASS" starttime="20201029 12:47:00.819" endtime="20201029 12:47:00.822"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.815" endtime="20201029 12:47:00.822"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:00.826" endtime="20201029 12:47:00.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.825" endtime="20201029 12:47:00.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.823" endtime="20201029 12:47:00.846"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.442" endtime="20201029 12:47:00.847"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.441" endtime="20201029 12:47:00.847"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.856" endtime="20201029 12:47:00.875"></status>
</kw>
<msg timestamp="20201029 12:47:00.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.854" endtime="20201029 12:47:00.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:00.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:00.877" endtime="20201029 12:47:00.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.879" endtime="20201029 12:47:00.881"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.852" endtime="20201029 12:47:00.882"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.849" endtime="20201029 12:47:00.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:00.889" endtime="20201029 12:47:01.177"></status>
</kw>
<msg timestamp="20201029 12:47:01.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:00.887" endtime="20201029 12:47:01.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020495042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020592958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.182" endtime="20201029 12:47:01.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.190" endtime="20201029 12:47:01.192"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.885" endtime="20201029 12:47:01.193"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.883" endtime="20201029 12:47:01.193"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.197" level="INFO">${RESULT} = [{'diff': 9.791599999999998e-05}, {'diff': 9.752700000000003e-05}, {'diff': 9.770799999999843e-05}, {'diff': 9.794399999999912e-05}, {'diff': 9.81669999999997e-05}, {'diff': 9.766700000000267e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:01.194" endtime="20201029 12:47:01.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.201" level="INFO">${ACCURACY} = {'diff': [9.791599999999998e-05, 9.752700000000003e-05, 9.770799999999843e-05, 9.794399999999912e-05, 9.81669999999997e-05, 9.766700000000267e-05, 9.812500000000099e-05, 9.794499999999859e-05, 9.78479...</msg>
<status status="PASS" starttime="20201029 12:47:01.198" endtime="20201029 12:47:01.201"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.205" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.204" endtime="20201029 12:47:01.206"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.208" level="INFO">VALUE: [9.791599999999998e-05, 9.752700000000003e-05, 9.770799999999843e-05, 9.794399999999912e-05, 9.81669999999997e-05, 9.766700000000267e-05, 9.812500000000099e-05, 9.794499999999859e-05, 9.78479999999976e-05, 9.7721999999998e-05, 9.75409999999996e-05, 9.775000000000061e-05, 9.754199999999907e-05, 9.795800000000215e-05, 9.747200000000122e-05, 9.808300000000228e-05, 9.788900000000031e-05, 9.755600000000211e-05, 9.798599999999782e-05, 9.759800000000082e-05, 9.800000000000086e-05, 9.74019999999999e-05, 9.813900000000056e-05, 9.788900000000031e-05, 9.788900000000031e-05, 9.794500000000206e-05, 9.736100000000067e-05, 9.755600000000211e-05, 9.781999999999846e-05, 9.819400000000283e-05, 9.738800000000034e-05, 9.815200000000066e-05, 9.736100000000067e-05, 9.743099999999852e-05, 9.812500000000099e-05, 9.801400000000043e-05, 9.833399999999853e-05, 9.813900000000056e-05, 9.78059999999989e-05, 9.775000000000061e-05, 9.757000000000168e-05, 9.763799999999712e-05, 9.8028e-05, 9.758299999999831e-05, 9.773600000000104e-05, 9.812499999999752e-05, 9.787500000000074e-05, 9.740299999999938e-05, 9.800000000000086e-05, 9.825000000000111e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.207" endtime="20201029 12:47:01.209"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.202" endtime="20201029 12:47:01.209"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.213" endtime="20201029 12:47:01.232"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.211" endtime="20201029 12:47:01.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.210" endtime="20201029 12:47:01.233"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.848" endtime="20201029 12:47:01.234"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:00.847" endtime="20201029 12:47:01.234"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.242" endtime="20201029 12:47:01.262"></status>
</kw>
<msg timestamp="20201029 12:47:01.263" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.241" endtime="20201029 12:47:01.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.265" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.264" endtime="20201029 12:47:01.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.266" endtime="20201029 12:47:01.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.238" endtime="20201029 12:47:01.268"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.236" endtime="20201029 12:47:01.269"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.275" endtime="20201029 12:47:01.574"></status>
</kw>
<msg timestamp="20201029 12:47:01.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020691556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.274" endtime="20201029 12:47:01.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020592972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020691556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.578" endtime="20201029 12:47:01.586"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.587" endtime="20201029 12:47:01.588"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.271" endtime="20201029 12:47:01.589"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.269" endtime="20201029 12:47:01.589"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.593" level="INFO">${RESULT} = [{'diff': 9.858399999999878e-05}, {'diff': 9.865300000000063e-05}, {'diff': 9.923599999999907e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.93609999999992e-05}, {'diff': 9.886100000000217e-05}, {'di...</msg>
<status status="PASS" starttime="20201029 12:47:01.590" endtime="20201029 12:47:01.593"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.597" level="INFO">${ACCURACY} = {'diff': [9.858399999999878e-05, 9.865300000000063e-05, 9.923599999999907e-05, 9.8721999999999e-05, 9.93609999999992e-05, 9.886100000000217e-05, 9.847199999999875e-05, 9.879200000000032e-05, 9.9042000...</msg>
<status status="PASS" starttime="20201029 12:47:01.594" endtime="20201029 12:47:01.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.602" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.601" endtime="20201029 12:47:01.602"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.604" level="INFO">VALUE: [9.858399999999878e-05, 9.865300000000063e-05, 9.923599999999907e-05, 9.8721999999999e-05, 9.93609999999992e-05, 9.886100000000217e-05, 9.847199999999875e-05, 9.879200000000032e-05, 9.904200000000057e-05, 9.933399999999953e-05, 9.91670000000007e-05, 9.840199999999744e-05, 9.925000000000211e-05, 9.901399999999796e-05, 9.845800000000265e-05, 9.918100000000027e-05, 9.887500000000174e-05, 9.908399999999928e-05, 9.865299999999716e-05, 9.877800000000075e-05, 9.84999999999979e-05, 9.937500000000224e-05, 9.845799999999919e-05, 9.911099999999895e-05, 9.926400000000168e-05, 9.930500000000092e-05, 9.847199999999875e-05, 9.926399999999821e-05, 9.919499999999984e-05, 9.927799999999778e-05, 9.834800000000157e-05, 9.931999999999996e-05, 9.866599999999726e-05, 9.930500000000092e-05, 9.863900000000106e-05, 9.854200000000007e-05, 9.93060000000004e-05, 9.841699999999995e-05, 9.843099999999952e-05, 9.84999999999979e-05, 9.881999999999946e-05, 9.841699999999995e-05, 9.841600000000048e-05, 9.845799999999919e-05, 9.909699999999938e-05, 9.875000000000161e-05, 9.908299999999981e-05, 9.883299999999956e-05, 9.85280000000005e-05, 9.863900000000106e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.603" endtime="20201029 12:47:01.606"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.598" endtime="20201029 12:47:01.606"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.610" endtime="20201029 12:47:01.629"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.608" endtime="20201029 12:47:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.607" endtime="20201029 12:47:01.630"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.235" endtime="20201029 12:47:01.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.234" endtime="20201029 12:47:01.631"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.640" endtime="20201029 12:47:01.659"></status>
</kw>
<msg timestamp="20201029 12:47:01.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.638" endtime="20201029 12:47:01.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.662" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:01.661" endtime="20201029 12:47:01.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.663" endtime="20201029 12:47:01.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.636" endtime="20201029 12:47:01.665"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.634" endtime="20201029 12:47:01.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.672" endtime="20201029 12:47:01.957"></status>
</kw>
<msg timestamp="20201029 12:47:01.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.670" endtime="20201029 12:47:01.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020421208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020521333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:01.961" endtime="20201029 12:47:01.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:01.969" endtime="20201029 12:47:01.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.668" endtime="20201029 12:47:01.971"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.666" endtime="20201029 12:47:01.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:01.976" level="INFO">${RESULT} = [{'diff': 0.00010012499999999952}, {'diff': 9.994399999999765e-05}, {'diff': 9.96670000000012e-05}, {'diff': 9.962499999999902e-05}, {'diff': 9.99999999999994e-05}, {'diff': 9.973599999999957e-05}, {'...</msg>
<status status="PASS" starttime="20201029 12:47:01.973" endtime="20201029 12:47:01.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:01.981" level="INFO">${ACCURACY} = {'diff': [0.00010012499999999952, 9.994399999999765e-05, 9.96670000000012e-05, 9.962499999999902e-05, 9.99999999999994e-05, 9.973599999999957e-05, 0.00010009800000000332, 9.954200000000107e-05, 0.0001...</msg>
<status status="PASS" starttime="20201029 12:47:01.977" endtime="20201029 12:47:01.981"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.985" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201029 12:47:01.984" endtime="20201029 12:47:01.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:01.988" level="INFO">VALUE: [0.00010012499999999952, 9.994399999999765e-05, 9.96670000000012e-05, 9.962499999999902e-05, 9.99999999999994e-05, 9.973599999999957e-05, 0.00010009800000000332, 9.954200000000107e-05, 0.00010013899999999909, 9.984700000000013e-05, 9.943000000000105e-05, 9.947199999999976e-05, 9.961099999999945e-05, 0.00010020800000000094, 9.990300000000188e-05, 0.00010015299999999866, 9.966599999999826e-05, 9.962499999999902e-05, 9.973599999999957e-05, 9.957000000000021e-05, 9.940199999999844e-05, 9.95410000000016e-05, 9.98609999999997e-05, 9.940299999999791e-05, 9.956899999999727e-05, 0.000100028000000002, 9.98060000000009e-05, 9.987500000000274e-05, 9.976399999999871e-05, 9.955599999999717e-05, 9.96800000000013e-05, 9.93609999999992e-05, 0.00010008299999999734, 9.979099999999838e-05, 0.00010016599999999876, 0.00010030500000000192, 9.955600000000064e-05, 9.936100000000267e-05, 9.988900000000231e-05, 9.977799999999828e-05, 9.983400000000003e-05, 9.938799999999887e-05, 9.963899999999859e-05, 0.00010029200000000182, 0.00010034700000000063, 9.955600000000064e-05, 9.956900000000074e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.96939999999974e-05]</msg>
<status status="PASS" starttime="20201029 12:47:01.986" endtime="20201029 12:47:01.988"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.982" endtime="20201029 12:47:01.989"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:01.992" endtime="20201029 12:47:02.012"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.991" endtime="20201029 12:47:02.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.990" endtime="20201029 12:47:02.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.632" endtime="20201029 12:47:02.013"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:01.631" endtime="20201029 12:47:02.013"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.022" endtime="20201029 12:47:02.041"></status>
</kw>
<msg timestamp="20201029 12:47:02.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.020" endtime="20201029 12:47:02.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.042" endtime="20201029 12:47:02.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.045" endtime="20201029 12:47:02.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.018" endtime="20201029 12:47:02.047"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.016" endtime="20201029 12:47:02.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.054" endtime="20201029 12:47:02.340"></status>
</kw>
<msg timestamp="20201029 12:47:02.343" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.052" endtime="20201029 12:47:02.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.351" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020598694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.344" endtime="20201029 12:47:02.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.352" endtime="20201029 12:47:02.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.050" endtime="20201029 12:47:02.354"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.048" endtime="20201029 12:47:02.355"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.359" level="INFO">${RESULT} = [{'diff': 0.0001005419999999986}, {'diff': 0.00010038899999999934}, {'diff': 0.00010080599999999842}, {'diff': 0.00010052799999999903}, {'diff': 0.00010037499999999977}, {'diff': 0.0001012919999999993...</msg>
<status status="PASS" starttime="20201029 12:47:02.355" endtime="20201029 12:47:02.359"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.363" level="INFO">${ACCURACY} = {'diff': [0.0001005419999999986, 0.00010038899999999934, 0.00010080599999999842, 0.00010052799999999903, 0.00010037499999999977, 0.00010129199999999935, 0.00010063800000000012, 0.00010094399999999865,...</msg>
<status status="PASS" starttime="20201029 12:47:02.359" endtime="20201029 12:47:02.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.367" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.366" endtime="20201029 12:47:02.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.369" level="INFO">VALUE: [0.0001005419999999986, 0.00010038899999999934, 0.00010080599999999842, 0.00010052799999999903, 0.00010037499999999977, 0.00010129199999999935, 0.00010063800000000012, 0.00010094399999999865, 0.00010123600000000108, 0.00010105500000000267, 0.0001011809999999988, 0.00010101399999999996, 0.00010059700000000088, 0.0001010000000000004, 0.00010126400000000021, 0.00010102799999999953, 0.00010072300000000048, 0.00010112500000000052, 0.00010088899999999984, 0.00010098600000000083, 0.00010099999999999693, 0.00010084699999999766, 0.00010048600000000033, 0.00010073600000000058, 0.00010094500000000159, 0.00010048600000000033, 0.00010091699999999898, 0.00010051299999999999, 0.00010056900000000174, 0.00010101399999999996, 0.00010070800000000144, 0.00010065299999999916, 0.00010073600000000058, 0.0001005419999999986, 0.0001011809999999988, 0.0001005549999999987, 0.00010093099999999855, 0.00010033400000000053, 0.00010044400000000162, 0.00010130499999999945, 0.00010122199999999804, 0.00010045799999999772, 0.00010105599999999867, 0.00010058300000000131, 0.00010073600000000058, 0.00010111100000000095, 0.00010045900000000066, 0.00010036199999999967, 0.00010044400000000162, 0.00010115299999999966]</msg>
<status status="PASS" starttime="20201029 12:47:02.368" endtime="20201029 12:47:02.370"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.363" endtime="20201029 12:47:02.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.374" endtime="20201029 12:47:02.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.373" endtime="20201029 12:47:02.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.372" endtime="20201029 12:47:02.394"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.014" endtime="20201029 12:47:02.395"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.014" endtime="20201029 12:47:02.395"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.403" endtime="20201029 12:47:02.425"></status>
</kw>
<msg timestamp="20201029 12:47:02.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.402" endtime="20201029 12:47:02.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.426" endtime="20201029 12:47:02.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.429" endtime="20201029 12:47:02.430"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.399" endtime="20201029 12:47:02.431"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.397" endtime="20201029 12:47:02.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.437" endtime="20201029 12:47:02.723"></status>
</kw>
<msg timestamp="20201029 12:47:02.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020597347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.436" endtime="20201029 12:47:02.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020597347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020699153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:02.727" endtime="20201029 12:47:02.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.735" endtime="20201029 12:47:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.433" endtime="20201029 12:47:02.737"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.432" endtime="20201029 12:47:02.738"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:02.741" level="INFO">${RESULT} = [{'diff': 0.0001018060000000029}, {'diff': 0.00010177800000000028}, {'diff': 0.00010136099999999773}, {'diff': 0.00010193000000000008}, {'diff': 0.0001015549999999997}, {'diff': 0.0001016939999999994}...</msg>
<status status="PASS" starttime="20201029 12:47:02.738" endtime="20201029 12:47:02.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:02.745" level="INFO">${ACCURACY} = {'diff': [0.0001018060000000029, 0.00010177800000000028, 0.00010136099999999773, 0.00010193000000000008, 0.0001015549999999997, 0.0001016939999999994, 0.00010170799999999897, 0.00010213900000000109, 0...</msg>
<status status="PASS" starttime="20201029 12:47:02.742" endtime="20201029 12:47:02.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.750" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201029 12:47:02.749" endtime="20201029 12:47:02.750"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.752" level="INFO">VALUE: [0.0001018060000000029, 0.00010177800000000028, 0.00010136099999999773, 0.00010193000000000008, 0.0001015549999999997, 0.0001016939999999994, 0.00010170799999999897, 0.00010213900000000109, 0.00010133299999999859, 0.00010136099999999773, 0.0001018610000000017, 0.00010194499999999912, 0.00010147199999999829, 0.00010194400000000312, 0.00010173600000000158, 0.00010170799999999897, 0.00010231900000000002, 0.00010147199999999829, 0.0001021939999999999, 0.00010176400000000071, 0.0001023199999999995, 0.0001020420000000001, 0.00010207000000000271, 0.00010138900000000034, 0.00010165199999999722, 0.00010213899999999762, 0.00010140299999999991, 0.00010179199999999985, 0.00010158299999999884, 0.00010177800000000028, 0.00010206999999999924, 0.00010168100000000277, 0.00010134799999999763, 0.0001016809999999993, 0.0001021939999999999, 0.00010172199999999854, 0.00010230599999999992, 0.00010212500000000152, 0.00010172199999999854, 0.00010145799999999872, 0.0001020420000000001, 0.00010206999999999924, 0.00010194500000000259, 0.00010145899999999819, 0.00010186099999999823, 0.00010191699999999998, 0.00010213899999999762, 0.0001019160000000005, 0.00010176400000000071, 0.00010147200000000176]</msg>
<status status="PASS" starttime="20201029 12:47:02.751" endtime="20201029 12:47:02.754"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.746" endtime="20201029 12:47:02.755"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:02.758" endtime="20201029 12:47:02.777"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.757" endtime="20201029 12:47:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.756" endtime="20201029 12:47:02.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.396" endtime="20201029 12:47:02.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.395" endtime="20201029 12:47:02.779"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.787" endtime="20201029 12:47:02.807"></status>
</kw>
<msg timestamp="20201029 12:47:02.807" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.786" endtime="20201029 12:47:02.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:02.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:02.808" endtime="20201029 12:47:02.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.810" endtime="20201029 12:47:02.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.783" endtime="20201029 12:47:02.813"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.781" endtime="20201029 12:47:02.813"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:02.819" endtime="20201029 12:47:03.106"></status>
</kw>
<msg timestamp="20201029 12:47:03.109" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:02.818" endtime="20201029 12:47:03.109"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.117" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01950625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019608819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201029 12:47:03.110" endtime="20201029 12:47:03.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.118" endtime="20201029 12:47:03.119"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.815" endtime="20201029 12:47:03.120"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.814" endtime="20201029 12:47:03.120"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.124" level="INFO">${RESULT} = [{'diff': 0.00010256900000000027}, {'diff': 0.0001030550000000012}, {'diff': 0.00010234699999999916}, {'diff': 0.00010329099999999841}, {'diff': 0.00010274999999999868}, {'diff': 0.0001027499999999986...</msg>
<status status="PASS" starttime="20201029 12:47:03.121" endtime="20201029 12:47:03.124"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.129" level="INFO">${ACCURACY} = {'diff': [0.00010256900000000027, 0.0001030550000000012, 0.00010234699999999916, 0.00010329099999999841, 0.00010274999999999868, 0.00010274999999999868, 0.00010247199999999929, 0.00010240300000000091,...</msg>
<status status="PASS" starttime="20201029 12:47:03.125" endtime="20201029 12:47:03.129"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.133" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.132" endtime="20201029 12:47:03.134"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.136" level="INFO">VALUE: [0.00010256900000000027, 0.0001030550000000012, 0.00010234699999999916, 0.00010329099999999841, 0.00010274999999999868, 0.00010274999999999868, 0.00010247199999999929, 0.00010240300000000091, 0.00010295899999999969, 0.00010279200000000085, 0.00010252799999999757, 0.00010265199999999822, 0.00010294400000000065, 0.00010281900000000052, 0.000103207999999997, 0.00010305600000000067, 0.00010330600000000092, 0.00010236099999999873, 0.00010336099999999973, 0.00010290299999999794, 0.00010316700000000123, 0.00010315300000000166, 0.00010320800000000047, 0.00010255499999999723, 0.00010294400000000065, 0.0001030420000000011, 0.00010263900000000159, 0.00010237500000000177, 0.00010324999999999918, 0.0001027359999999991, 0.00010297299999999926, 0.00010336099999999973, 0.00010234699999999916, 0.00010254199999999714, 0.00010268000000000083, 0.00010315300000000166, 0.00010280600000000042, 0.00010319500000000037, 0.00010288900000000184, 0.0001031810000000008, 0.00010322299999999951, 0.00010282, 0.00010295800000000022, 0.00010256900000000027, 0.00010330500000000145, 0.00010320800000000047, 0.00010252700000000156, 0.00010326399999999875, 0.00010291700000000098, 0.00010283300000000009]</msg>
<status status="PASS" starttime="20201029 12:47:03.135" endtime="20201029 12:47:03.137"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.130" endtime="20201029 12:47:03.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.141" endtime="20201029 12:47:03.160"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.139" endtime="20201029 12:47:03.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.138" endtime="20201029 12:47:03.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.780" endtime="20201029 12:47:03.161"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:02.779" endtime="20201029 12:47:03.162"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.170" endtime="20201029 12:47:03.191"></status>
</kw>
<msg timestamp="20201029 12:47:03.191" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.168" endtime="20201029 12:47:03.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.192" endtime="20201029 12:47:03.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.195" endtime="20201029 12:47:03.196"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.166" endtime="20201029 12:47:03.197"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.164" endtime="20201029 12:47:03.197"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.204" endtime="20201029 12:47:03.490"></status>
</kw>
<msg timestamp="20201029 12:47:03.493" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.202" endtime="20201029 12:47:03.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019949569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020052958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.494" endtime="20201029 12:47:03.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.502" endtime="20201029 12:47:03.504"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.200" endtime="20201029 12:47:03.505"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.198" endtime="20201029 12:47:03.505"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.509" level="INFO">${RESULT} = [{'diff': 0.00010338899999999887}, {'diff': 0.00010333300000000059}, {'diff': 0.00010375000000000315}, {'diff': 0.00010398600000000036}, {'diff': 0.0001036810000000013}, {'diff': 0.0001037779999999988...</msg>
<status status="PASS" starttime="20201029 12:47:03.506" endtime="20201029 12:47:03.509"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.513" level="INFO">${ACCURACY} = {'diff': [0.00010338899999999887, 0.00010333300000000059, 0.00010375000000000315, 0.00010398600000000036, 0.0001036810000000013, 0.00010377799999999882, 0.00010372199999999707, 0.00010411099999999701,...</msg>
<status status="PASS" starttime="20201029 12:47:03.510" endtime="20201029 12:47:03.513"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.517" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.516" endtime="20201029 12:47:03.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.520" level="INFO">VALUE: [0.00010338899999999887, 0.00010333300000000059, 0.00010375000000000315, 0.00010398600000000036, 0.0001036810000000013, 0.00010377799999999882, 0.00010372199999999707, 0.00010411099999999701, 0.00010362499999999955, 0.0001038749999999998, 0.00010404100000000263, 0.00010430499999999898, 0.00010415300000000266, 0.00010413899999999962, 0.0001040420000000021, 0.00010413899999999962, 0.00010345900000000019, 0.0001037360000000001, 0.00010359799999999988, 0.00010426400000000322, 0.00010416599999999929, 0.00010352799999999857, 0.00010412500000000005, 0.00010408299999999787, 0.00010365300000000216, 0.00010377799999999882, 0.00010355600000000117, 0.00010369500000000087, 0.00010420899999999747, 0.0001038749999999998, 0.00010345800000000072, 0.00010394399999999818, 0.00010416700000000223, 0.00010363899999999912, 0.00010340300000000191, 0.0001036810000000013, 0.00010429200000000236, 0.00010404199999999864, 0.0001043200000000015, 0.00010412500000000005, 0.0001042360000000006, 0.00010366599999999879, 0.00010365300000000216, 0.00010345799999999725, 0.00010402699999999959, 0.00010369500000000087, 0.00010381999999999753, 0.00010399999999999993, 0.00010374999999999968, 0.00010430499999999898]</msg>
<status status="PASS" starttime="20201029 12:47:03.518" endtime="20201029 12:47:03.520"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.514" endtime="20201029 12:47:03.521"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.525" endtime="20201029 12:47:03.544"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.523" endtime="20201029 12:47:03.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.522" endtime="20201029 12:47:03.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.162" endtime="20201029 12:47:03.545"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.162" endtime="20201029 12:47:03.546"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.554" endtime="20201029 12:47:03.576"></status>
</kw>
<msg timestamp="20201029 12:47:03.577" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.553" endtime="20201029 12:47:03.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.578" endtime="20201029 12:47:03.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.580" endtime="20201029 12:47:03.582"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.550" endtime="20201029 12:47:03.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.548" endtime="20201029 12:47:03.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.589" endtime="20201029 12:47:03.875"></status>
</kw>
<msg timestamp="20201029 12:47:03.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023108597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.588" endtime="20201029 12:47:03.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023003569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023108597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.879" endtime="20201029 12:47:03.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.887" endtime="20201029 12:47:03.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.585" endtime="20201029 12:47:03.889"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.584" endtime="20201029 12:47:03.890"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:03.894" level="INFO">${RESULT} = [{'diff': 0.00010502800000000007}, {'diff': 0.00010505499999999973}, {'diff': 0.00010462499999999708}, {'diff': 0.00010483300000000209}, {'diff': 0.00010434700000000116}, {'diff': 0.000105320000000002...</msg>
<status status="PASS" starttime="20201029 12:47:03.890" endtime="20201029 12:47:03.894"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:03.898" level="INFO">${ACCURACY} = {'diff': [0.00010502800000000007, 0.00010505499999999973, 0.00010462499999999708, 0.00010483300000000209, 0.00010434700000000116, 0.0001053200000000025, 0.00010477799999999982, 0.00010530599999999946,...</msg>
<status status="PASS" starttime="20201029 12:47:03.895" endtime="20201029 12:47:03.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.902" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201029 12:47:03.901" endtime="20201029 12:47:03.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.904" level="INFO">VALUE: [0.00010502800000000007, 0.00010505499999999973, 0.00010462499999999708, 0.00010483300000000209, 0.00010434700000000116, 0.0001053200000000025, 0.00010477799999999982, 0.00010530599999999946, 0.00010486100000000123, 0.0001050689999999993, 0.000104514, 0.00010512500000000105, 0.00010520800000000247, 0.00010447199999999782, 0.0001052499999999977, 0.00010495899999999822, 0.00010440299999999944, 0.0001048339999999981, 0.00010475000000000068, 0.00010484700000000166, 0.00010461100000000098, 0.00010491600000000004, 0.000104514, 0.00010534699999999869, 0.00010456999999999828, 0.00010523699999999761, 0.00010486099999999776, 0.00010441599999999954, 0.00010525000000000118, 0.00010525000000000118, 0.00010475000000000068, 0.0001045689999999988, 0.00010441699999999901, 0.00010479199999999939, 0.00010468099999999883, 0.00010466699999999926, 0.0001050689999999993, 0.00010518099999999933, 0.0001043750000000003, 0.00010523599999999814, 0.00010434699999999769, 0.00010448600000000086, 0.00010475000000000068, 0.0001045689999999988, 0.000105207999999999, 0.00010490299999999994, 0.00010458399999999785, 0.00010438899999999987, 0.00010508299999999887, 0.00010459700000000141]</msg>
<status status="PASS" starttime="20201029 12:47:03.903" endtime="20201029 12:47:03.906"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.898" endtime="20201029 12:47:03.906"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:03.910" endtime="20201029 12:47:03.929"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.909" endtime="20201029 12:47:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.907" endtime="20201029 12:47:03.930"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.547" endtime="20201029 12:47:03.931"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.546" endtime="20201029 12:47:03.931"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.939" endtime="20201029 12:47:03.960"></status>
</kw>
<msg timestamp="20201029 12:47:03.961" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.938" endtime="20201029 12:47:03.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:03.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:03.962" endtime="20201029 12:47:03.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.964" endtime="20201029 12:47:03.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.935" endtime="20201029 12:47:03.966"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.933" endtime="20201029 12:47:03.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:03.973" endtime="20201029 12:47:04.267"></status>
</kw>
<msg timestamp="20201029 12:47:04.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:03.972" endtime="20201029 12:47:04.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020451764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020557583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.276" endtime="20201029 12:47:04.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.294" endtime="20201029 12:47:04.297"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.969" endtime="20201029 12:47:04.298"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.967" endtime="20201029 12:47:04.299"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.307" level="INFO">${RESULT} = [{'diff': 0.00010581900000000005}, {'diff': 0.00010602800000000107}, {'diff': 0.00010581900000000005}, {'diff': 0.00010569399999999993}, {'diff': 0.00010579200000000039}, {'diff': 0.000105374999999997...</msg>
<status status="PASS" starttime="20201029 12:47:04.301" endtime="20201029 12:47:04.308"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.317" level="INFO">${ACCURACY} = {'diff': [0.00010581900000000005, 0.00010602800000000107, 0.00010581900000000005, 0.00010569399999999993, 0.00010579200000000039, 0.00010537499999999783, 0.00010627800000000132, 0.00010540300000000044...</msg>
<status status="PASS" starttime="20201029 12:47:04.309" endtime="20201029 12:47:04.318"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.327" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.324" endtime="20201029 12:47:04.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.332" level="INFO">VALUE: [0.00010581900000000005, 0.00010602800000000107, 0.00010581900000000005, 0.00010569399999999993, 0.00010579200000000039, 0.00010537499999999783, 0.00010627800000000132, 0.00010540300000000044, 0.00010604100000000116, 0.00010581900000000005, 0.00010622199999999957, 0.00010597199999999932, 0.00010595900000000269, 0.0001060140000000015, 0.0001058750000000018, 0.00010623599999999914, 0.00010627800000000132, 0.00010559699999999894, 0.00010575000000000168, 0.00010530499999999998, 0.0001060690000000003, 0.00010594500000000312, 0.00010622199999999957, 0.00010598599999999889, 0.00010575000000000168, 0.00010623599999999914, 0.00010583299999999962, 0.00010587499999999833, 0.00010594400000000018, 0.000106208, 0.00010588900000000137, 0.00010629200000000089, 0.0001060560000000002, 0.0001062499999999987, 0.00010533299999999912, 0.0001056949999999994, 0.0001058880000000019, 0.00010611099999999901, 0.00010536099999999826, 0.00010577799999999735, 0.00010637499999999883, 0.00010599999999999846, 0.00010576400000000125, 0.00010536100000000173, 0.00010606999999999978, 0.00010562499999999808, 0.00010541700000000001, 0.0001058889999999979, 0.00010612500000000205, 0.00010538900000000087]</msg>
<status status="PASS" starttime="20201029 12:47:04.329" endtime="20201029 12:47:04.333"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.319" endtime="20201029 12:47:04.334"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.337" endtime="20201029 12:47:04.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.336" endtime="20201029 12:47:04.357"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.335" endtime="20201029 12:47:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.932" endtime="20201029 12:47:04.358"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:03.931" endtime="20201029 12:47:04.358"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.367" endtime="20201029 12:47:04.387"></status>
</kw>
<msg timestamp="20201029 12:47:04.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.365" endtime="20201029 12:47:04.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.388" endtime="20201029 12:47:04.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.390" endtime="20201029 12:47:04.392"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.363" endtime="20201029 12:47:04.393"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.360" endtime="20201029 12:47:04.393"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.399" endtime="20201029 12:47:04.688"></status>
</kw>
<msg timestamp="20201029 12:47:04.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.398" endtime="20201029 12:47:04.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019592056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019698556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.692" endtime="20201029 12:47:04.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.700" endtime="20201029 12:47:04.702"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.395" endtime="20201029 12:47:04.703"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.394" endtime="20201029 12:47:04.703"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:04.707" level="INFO">${RESULT} = [{'diff': 0.00010649999999999896}, {'diff': 0.00010729199999999842}, {'diff': 0.00010701299999999955}, {'diff': 0.00010713900000000262}, {'diff': 0.00010665300000000169}, {'diff': 0.000107041999999998...</msg>
<status status="PASS" starttime="20201029 12:47:04.704" endtime="20201029 12:47:04.707"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:04.711" level="INFO">${ACCURACY} = {'diff': [0.00010649999999999896, 0.00010729199999999842, 0.00010701299999999955, 0.00010713900000000262, 0.00010665300000000169, 0.00010704199999999817, 0.00010723600000000014, 0.00010711100000000001...</msg>
<status status="PASS" starttime="20201029 12:47:04.708" endtime="20201029 12:47:04.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.715" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201029 12:47:04.714" endtime="20201029 12:47:04.716"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.718" level="INFO">VALUE: [0.00010649999999999896, 0.00010729199999999842, 0.00010701299999999955, 0.00010713900000000262, 0.00010665300000000169, 0.00010704199999999817, 0.00010723600000000014, 0.00010711100000000001, 0.00010697200000000032, 0.00010712499999999958, 0.00010694500000000065, 0.00010687499999999933, 0.00010659699999999994, 0.00010677800000000182, 0.0001068889999999989, 0.00010705499999999826, 0.0001065279999999981, 0.00010662499999999908, 0.00010682000000000053, 0.00010701399999999903, 0.00010705499999999826, 0.00010693099999999761, 0.00010708300000000087, 0.00010676399999999878, 0.0001065690000000008, 0.00010659799999999942, 0.00010677800000000182, 0.00010665299999999822, 0.00010670899999999997, 0.00010648599999999939, 0.00010698599999999989, 0.00010634699999999969, 0.00010716699999999829, 0.00010638900000000187, 0.00010684700000000019, 0.00010662499999999908, 0.00010730599999999799, 0.00010663900000000212, 0.00010679199999999792, 0.0001067360000000031, 0.00010709700000000044, 0.00010688799999999943, 0.0001067080000000005, 0.00010694399999999771, 0.00010704100000000216, 0.00010705599999999774, 0.00010643100000000058, 0.00010673599999999964, 0.00010645899999999972, 0.00010684799999999967]</msg>
<status status="PASS" starttime="20201029 12:47:04.716" endtime="20201029 12:47:04.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.712" endtime="20201029 12:47:04.719"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:04.723" endtime="20201029 12:47:04.742"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.721" endtime="20201029 12:47:04.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.720" endtime="20201029 12:47:04.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.359" endtime="20201029 12:47:04.743"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.358" endtime="20201029 12:47:04.743"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.752" endtime="20201029 12:47:04.772"></status>
</kw>
<msg timestamp="20201029 12:47:04.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.750" endtime="20201029 12:47:04.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:04.775" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:04.774" endtime="20201029 12:47:04.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.777" endtime="20201029 12:47:04.778"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.748" endtime="20201029 12:47:04.779"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.746" endtime="20201029 12:47:04.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:04.785" endtime="20201029 12:47:05.071"></status>
</kw>
<msg timestamp="20201029 12:47:05.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020645222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:04.784" endtime="20201029 12:47:05.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.082" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020537722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020645222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.075" endtime="20201029 12:47:05.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.083" endtime="20201029 12:47:05.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.781" endtime="20201029 12:47:05.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.780" endtime="20201029 12:47:05.086"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.089" level="INFO">${RESULT} = [{'diff': 0.00010749999999999996}, {'diff': 0.00010763899999999965}, {'diff': 0.00010741699999999854}, {'diff': 0.00010777799999999935}, {'diff': 0.00010818099999999886}, {'diff': 0.000108111000000001...</msg>
<status status="PASS" starttime="20201029 12:47:05.086" endtime="20201029 12:47:05.090"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.094" level="INFO">${ACCURACY} = {'diff': [0.00010749999999999996, 0.00010763899999999965, 0.00010741699999999854, 0.00010777799999999935, 0.00010818099999999886, 0.00010811100000000101, 0.00010816700000000276, 0.00010833300000000212...</msg>
<status status="PASS" starttime="20201029 12:47:05.090" endtime="20201029 12:47:05.094"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.098" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.097" endtime="20201029 12:47:05.098"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.100" level="INFO">VALUE: [0.00010749999999999996, 0.00010763899999999965, 0.00010741699999999854, 0.00010777799999999935, 0.00010818099999999886, 0.00010811100000000101, 0.00010816700000000276, 0.00010833300000000212, 0.00010823600000000114, 0.00010793000000000261, 0.0001077500000000002, 0.00010747200000000082, 0.00010776399999999978, 0.00010784700000000119, 0.0001080829999999984, 0.00010740299999999897, 0.00010780600000000196, 0.00010737499999999983, 0.00010766699999999879, 0.00010815200000000025, 0.00010741699999999854, 0.00010815299999999972, 0.00010737499999999983, 0.00010800000000000046, 0.00010793100000000208, 0.00010769499999999793, 0.00010823600000000114, 0.00010815300000000319, 0.00010738799999999993, 0.00010749999999999996, 0.00010823600000000114, 0.00010773600000000064, 0.00010783299999999815, 0.0001077080000000015, 0.00010800000000000046, 0.00010809800000000092, 0.0001077500000000002, 0.00010759800000000042, 0.00010769399999999846, 0.00010779099999999944, 0.00010820799999999853, 0.0001077080000000015, 0.00010809699999999797, 0.0001077500000000002, 0.00010751399999999953, 0.00010800000000000046, 0.00010811099999999754, 0.00010801300000000055, 0.00010765199999999975, 0.00010817999999999939]</msg>
<status status="PASS" starttime="20201029 12:47:05.099" endtime="20201029 12:47:05.108"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.094" endtime="20201029 12:47:05.109"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.112" endtime="20201029 12:47:05.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.111" endtime="20201029 12:47:05.132"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.110" endtime="20201029 12:47:05.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.744" endtime="20201029 12:47:05.133"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:04.744" endtime="20201029 12:47:05.133"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.142" endtime="20201029 12:47:05.161"></status>
</kw>
<msg timestamp="20201029 12:47:05.161" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.140" endtime="20201029 12:47:05.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.164" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.163" endtime="20201029 12:47:05.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.165" endtime="20201029 12:47:05.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.138" endtime="20201029 12:47:05.167"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.135" endtime="20201029 12:47:05.167"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.174" endtime="20201029 12:47:05.458"></status>
</kw>
<msg timestamp="20201029 12:47:05.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.172" endtime="20201029 12:47:05.462"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019605181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.462" endtime="20201029 12:47:05.470"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.470" endtime="20201029 12:47:05.472"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.170" endtime="20201029 12:47:05.473"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.168" endtime="20201029 12:47:05.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.477" level="INFO">${RESULT} = [{'diff': 0.00010927800000000085}, {'diff': 0.0001084020000000005}, {'diff': 0.00010865199999999728}, {'diff': 0.00010904099999999722}, {'diff': 0.00010873599999999817}, {'diff': 0.0001090000000000014...</msg>
<status status="PASS" starttime="20201029 12:47:05.474" endtime="20201029 12:47:05.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.482" level="INFO">${ACCURACY} = {'diff': [0.00010927800000000085, 0.0001084020000000005, 0.00010865199999999728, 0.00010904099999999722, 0.00010873599999999817, 0.00010900000000000146, 0.00010854199999999967, 0.00010898599999999842,...</msg>
<status status="PASS" starttime="20201029 12:47:05.478" endtime="20201029 12:47:05.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.486" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.485" endtime="20201029 12:47:05.487"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.489" level="INFO">VALUE: [0.00010927800000000085, 0.0001084020000000005, 0.00010865199999999728, 0.00010904099999999722, 0.00010873599999999817, 0.00010900000000000146, 0.00010854199999999967, 0.00010898599999999842, 0.00010880600000000296, 0.00010869499999999893, 0.00010866699999999979, 0.00010918000000000039, 0.00010837500000000083, 0.00010876400000000078, 0.00010866700000000326, 0.0001087219999999986, 0.00010927800000000085, 0.00010911099999999854, 0.00010854199999999967, 0.00010873699999999764, 0.00010837500000000083, 0.00010873600000000164, 0.0001083890000000004, 0.00010929200000000042, 0.00010834699999999822, 0.00010933299999999965, 0.00010834700000000169, 0.00010918099999999986, 0.00010922299999999857, 0.00010923600000000214, 0.00010879100000000044, 0.00010836099999999779, 0.00010865300000000022, 0.00010901400000000103, 0.00010922200000000257, 0.00010929200000000042, 0.00010927799999999738, 0.00010913900000000115, 0.00010893099999999961, 0.00010897300000000179, 0.00010876299999999783, 0.00010886099999999829, 0.00010844399999999921, 0.00010879199999999992, 0.00010881899999999958, 0.00010912500000000158, 0.00010904200000000017, 0.00010881999999999906, 0.00010858400000000185, 0.00010856899999999933]</msg>
<status status="PASS" starttime="20201029 12:47:05.487" endtime="20201029 12:47:05.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.483" endtime="20201029 12:47:05.490"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.494" endtime="20201029 12:47:05.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.492" endtime="20201029 12:47:05.513"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.491" endtime="20201029 12:47:05.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.134" endtime="20201029 12:47:05.514"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.133" endtime="20201029 12:47:05.514"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.523" endtime="20201029 12:47:05.542"></status>
</kw>
<msg timestamp="20201029 12:47:05.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.521" endtime="20201029 12:47:05.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.543" endtime="20201029 12:47:05.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.546" endtime="20201029 12:47:05.547"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.519" endtime="20201029 12:47:05.548"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.517" endtime="20201029 12:47:05.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.555" endtime="20201029 12:47:05.862"></status>
</kw>
<msg timestamp="20201029 12:47:05.865" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.553" endtime="20201029 12:47:05.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019654944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.866" endtime="20201029 12:47:05.873"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.874" endtime="20201029 12:47:05.875"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.551" endtime="20201029 12:47:05.876"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.549" endtime="20201029 12:47:05.876"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:05.880" level="INFO">${RESULT} = [{'diff': 0.00011026299999999933}, {'diff': 0.00010961100000000251}, {'diff': 0.00011009699999999997}, {'diff': 0.0001100280000000016}, {'diff': 0.00011013899999999868}, {'diff': 0.0001095829999999999...</msg>
<status status="PASS" starttime="20201029 12:47:05.877" endtime="20201029 12:47:05.880"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:05.884" level="INFO">${ACCURACY} = {'diff': [0.00011026299999999933, 0.00010961100000000251, 0.00011009699999999997, 0.0001100280000000016, 0.00011013899999999868, 0.0001095829999999999, 0.00010951400000000153, 0.0001098479999999992, 0...</msg>
<status status="PASS" starttime="20201029 12:47:05.881" endtime="20201029 12:47:05.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.889" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201029 12:47:05.888" endtime="20201029 12:47:05.889"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.891" level="INFO">VALUE: [0.00011026299999999933, 0.00010961100000000251, 0.00011009699999999997, 0.0001100280000000016, 0.00011013899999999868, 0.0001095829999999999, 0.00010951400000000153, 0.0001098479999999992, 0.00010994500000000018, 0.00010988899999999843, 0.0001102769999999989, 0.00010976400000000178, 0.0001095280000000011, 0.00010994400000000071, 0.00010999999999999899, 0.00011030599999999752, 0.00010958399999999938, 0.00010976400000000178, 0.00010987500000000233, 0.00010986099999999929, 0.00011004100000000169, 0.00010976399999999831, 0.00010974999999999874, 0.00010940300000000097, 0.0001099159999999981, 0.00010936099999999879, 0.00011018099999999739, 0.00010948699999999839, 0.00011009800000000292, 0.00010980499999999754, 0.00010969400000000046, 0.0001099159999999981, 0.00010945799999999978, 0.0001100830000000004, 0.00010984699999999972, 0.00010955600000000024, 0.000110209, 0.00010954100000000119, 0.00011005500000000126, 0.00010981900000000058, 0.00010963900000000165, 0.00010955600000000024, 0.00010951399999999806, 0.00011002799999999813, 0.00010937499999999836, 0.00010944499999999968, 0.00011027799999999838, 0.00010969400000000046, 0.00011001400000000203, 0.00010961099999999904]</msg>
<status status="PASS" starttime="20201029 12:47:05.890" endtime="20201029 12:47:05.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.885" endtime="20201029 12:47:05.892"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:05.896" endtime="20201029 12:47:05.915"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.894" endtime="20201029 12:47:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.893" endtime="20201029 12:47:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.515" endtime="20201029 12:47:05.916"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.515" endtime="20201029 12:47:05.917"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.925" endtime="20201029 12:47:05.946"></status>
</kw>
<msg timestamp="20201029 12:47:05.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.924" endtime="20201029 12:47:05.946"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:05.949" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:05.947" endtime="20201029 12:47:05.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.950" endtime="20201029 12:47:05.951"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.921" endtime="20201029 12:47:05.952"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.919" endtime="20201029 12:47:05.952"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:05.959" endtime="20201029 12:47:06.245"></status>
</kw>
<msg timestamp="20201029 12:47:06.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:05.957" endtime="20201029 12:47:06.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.256" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020742375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.249" endtime="20201029 12:47:06.256"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.257" endtime="20201029 12:47:06.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.955" endtime="20201029 12:47:06.259"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.953" endtime="20201029 12:47:06.260"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.264" level="INFO">${RESULT} = [{'diff': 0.00011056900000000133}, {'diff': 0.00011118099999999839}, {'diff': 0.00011119500000000143}, {'diff': 0.00011062499999999961}, {'diff': 0.00011091700000000204}, {'diff': 0.000110959000000000...</msg>
<status status="PASS" starttime="20201029 12:47:06.260" endtime="20201029 12:47:06.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.267" level="INFO">${ACCURACY} = {'diff': [0.00011056900000000133, 0.00011118099999999839, 0.00011119500000000143, 0.00011062499999999961, 0.00011091700000000204, 0.00011095900000000075, 0.00011044500000000068, 0.00011129099999999947...</msg>
<status status="PASS" starttime="20201029 12:47:06.264" endtime="20201029 12:47:06.268"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.272" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.271" endtime="20201029 12:47:06.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.274" level="INFO">VALUE: [0.00011056900000000133, 0.00011118099999999839, 0.00011119500000000143, 0.00011062499999999961, 0.00011091700000000204, 0.00011095900000000075, 0.00011044500000000068, 0.00011129099999999947, 0.00011123600000000067, 0.00011068000000000189, 0.00011120800000000153, 0.0001105280000000021, 0.00011097199999999738, 0.00011069500000000093, 0.00011080499999999854, 0.00011086199999999977, 0.0001105830000000009, 0.00011081900000000158, 0.00011076400000000278, 0.00011056900000000133, 0.00011132000000000156, 0.0001104029999999985, 0.00011045900000000025, 0.00011097300000000032, 0.0001108480000000002, 0.00011092999999999867, 0.00011062499999999961, 0.00011073600000000017, 0.00011091600000000257, 0.00011111100000000054, 0.0001110419999999987, 0.00011036099999999979, 0.00011091699999999857, 0.00011106999999999784, 0.00011048599999999992, 0.00011048599999999992, 0.00011108299999999793, 0.0001110830000000014, 0.00011041699999999807, 0.00011088899999999943, 0.00011066700000000179, 0.0001112359999999972, 0.00011059700000000047, 0.00011118100000000186, 0.00011065199999999928, 0.00011116599999999935, 0.00011069400000000146, 0.0001110280000000026, 0.0001110549999999988, 0.00011093099999999814]</msg>
<status status="PASS" starttime="20201029 12:47:06.273" endtime="20201029 12:47:06.276"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.268" endtime="20201029 12:47:06.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.280" endtime="20201029 12:47:06.299"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.279" endtime="20201029 12:47:06.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.277" endtime="20201029 12:47:06.300"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.917" endtime="20201029 12:47:06.301"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:05.917" endtime="20201029 12:47:06.301"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.309" endtime="20201029 12:47:06.329"></status>
</kw>
<msg timestamp="20201029 12:47:06.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.308" endtime="20201029 12:47:06.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.330" endtime="20201029 12:47:06.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.333" endtime="20201029 12:47:06.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.305" endtime="20201029 12:47:06.335"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.303" endtime="20201029 12:47:06.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.342" endtime="20201029 12:47:06.627"></status>
</kw>
<msg timestamp="20201029 12:47:06.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:06.340" endtime="20201029 12:47:06.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01960425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01971575, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:06.631" endtime="20201029 12:47:06.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.639" endtime="20201029 12:47:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.338" endtime="20201029 12:47:06.641"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.336" endtime="20201029 12:47:06.642"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:06.646" level="INFO">${RESULT} = [{'diff': 0.00011150000000000049}, {'diff': 0.00011161100000000104}, {'diff': 0.00011183300000000215}, {'diff': 0.000111903}, {'diff': 0.00011144500000000168}, {'diff': 0.00011230500000000004}, {'diff...</msg>
<status status="PASS" starttime="20201029 12:47:06.643" endtime="20201029 12:47:06.646"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:06.650" level="INFO">${ACCURACY} = {'diff': [0.00011150000000000049, 0.00011161100000000104, 0.00011183300000000215, 0.000111903, 0.00011144500000000168, 0.00011230500000000004, 0.00011136100000000079, 0.00011144399999999874, 0.0001115...</msg>
<status status="PASS" starttime="20201029 12:47:06.647" endtime="20201029 12:47:06.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.655" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201029 12:47:06.654" endtime="20201029 12:47:06.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.657" level="INFO">VALUE: [0.00011150000000000049, 0.00011161100000000104, 0.00011183300000000215, 0.000111903, 0.00011144500000000168, 0.00011230500000000004, 0.00011136100000000079, 0.00011144399999999874, 0.0001115419999999992, 0.00011229199999999995, 0.00011158299999999843, 0.00011168099999999889, 0.00011179199999999945, 0.00011138899999999993, 0.0001120419999999997, 0.00011155500000000276, 0.0001120549999999998, 0.0001115419999999992, 0.00011136099999999732, 0.00011187500000000086, 0.00011201300000000108, 0.00011188900000000043, 0.00011131999999999809, 0.00011219499999999896, 0.00011168000000000289, 0.00011163900000000018, 0.00011193000000000314, 0.00011143000000000264, 0.00011159700000000147, 0.000111903, 0.00011179199999999945, 0.00011179099999999997, 0.00011191700000000304, 0.00011204100000000022, 0.00011194400000000271, 0.00011175000000000074, 0.00011192999999999967, 0.00011156900000000233, 0.00011166699999999932, 0.00011226399999999734, 0.0001119160000000001, 0.00011212500000000111, 0.00011208400000000188, 0.00011224999999999777, 0.0001119160000000001, 0.00011174999999999727, 0.00011236099999999832, 0.00011147200000000135, 0.00011159700000000147, 0.00011201400000000056]</msg>
<status status="PASS" starttime="20201029 12:47:06.656" endtime="20201029 12:47:06.658"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.651" endtime="20201029 12:47:06.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:06.662" endtime="20201029 12:47:06.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.661" endtime="20201029 12:47:06.682"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.660" endtime="20201029 12:47:06.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.302" endtime="20201029 12:47:06.683"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.301" endtime="20201029 12:47:06.683"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.692" endtime="20201029 12:47:06.713"></status>
</kw>
<msg timestamp="20201029 12:47:06.713" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.690" endtime="20201029 12:47:06.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:06.716" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:06.714" endtime="20201029 12:47:06.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.717" endtime="20201029 12:47:06.718"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.687" endtime="20201029 12:47:06.719"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.685" endtime="20201029 12:47:06.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:06.726" endtime="20201029 12:47:07.012"></status>
</kw>
<msg timestamp="20201029 12:47:07.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:06.724" endtime="20201029 12:47:07.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019813306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019925917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.016" endtime="20201029 12:47:07.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.024" endtime="20201029 12:47:07.026"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.722" endtime="20201029 12:47:07.027"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.720" endtime="20201029 12:47:07.027"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.031" level="INFO">${RESULT} = [{'diff': 0.00011261100000000204}, {'diff': 0.0001123619999999978}, {'diff': 0.00011311099999999907}, {'diff': 0.00011272199999999913}, {'diff': 0.00011298599999999895}, {'diff': 0.0001129719999999993...</msg>
<status status="PASS" starttime="20201029 12:47:07.028" endtime="20201029 12:47:07.031"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.035" level="INFO">${ACCURACY} = {'diff': [0.00011261100000000204, 0.0001123619999999978, 0.00011311099999999907, 0.00011272199999999913, 0.00011298599999999895, 0.00011297199999999938, 0.00011245799999999931, 0.00011327800000000138,...</msg>
<status status="PASS" starttime="20201029 12:47:07.032" endtime="20201029 12:47:07.035"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.039" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.038" endtime="20201029 12:47:07.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.042" level="INFO">VALUE: [0.00011261100000000204, 0.0001123619999999978, 0.00011311099999999907, 0.00011272199999999913, 0.00011298599999999895, 0.00011297199999999938, 0.00011245799999999931, 0.00011327800000000138, 0.00011259799999999848, 0.00011312499999999864, 0.00011293100000000014, 0.00011313800000000221, 0.00011333300000000018, 0.00011276400000000131, 0.00011265300000000075, 0.00011333300000000018, 0.0001124030000000005, 0.00011269499999999946, 0.00011270899999999903, 0.00011329100000000147, 0.00011236099999999832, 0.00011308299999999993, 0.00011268099999999989, 0.00011333300000000018, 0.0001129169999999971, 0.000112903000000001, 0.00011288899999999796, 0.00011315299999999778, 0.00011236099999999832, 0.00011326400000000181, 0.00011311099999999907, 0.00011308299999999993, 0.00011245799999999931, 0.00011331900000000061, 0.00011244499999999921, 0.00011261099999999857, 0.00011298599999999895, 0.00011318100000000039, 0.00011243099999999964, 0.0001130969999999995, 0.00011326399999999834, 0.00011291700000000057, 0.00011283299999999968, 0.00011272199999999913, 0.00011247200000000235, 0.00011324999999999877, 0.00011255599999999977, 0.00011330600000000052, 0.0001132359999999992, 0.00011269399999999999]</msg>
<status status="PASS" starttime="20201029 12:47:07.040" endtime="20201029 12:47:07.042"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.036" endtime="20201029 12:47:07.043"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.046" endtime="20201029 12:47:07.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.045" endtime="20201029 12:47:07.066"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.044" endtime="20201029 12:47:07.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.684" endtime="20201029 12:47:07.067"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:06.683" endtime="20201029 12:47:07.067"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.076" endtime="20201029 12:47:07.098"></status>
</kw>
<msg timestamp="20201029 12:47:07.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.074" endtime="20201029 12:47:07.099"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.101" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.100" endtime="20201029 12:47:07.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.102" endtime="20201029 12:47:07.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.072" endtime="20201029 12:47:07.104"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.070" endtime="20201029 12:47:07.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.111" endtime="20201029 12:47:07.398"></status>
</kw>
<msg timestamp="20201029 12:47:07.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.110" endtime="20201029 12:47:07.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022598167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022711889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.402" endtime="20201029 12:47:07.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.410" endtime="20201029 12:47:07.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.107" endtime="20201029 12:47:07.412"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.106" endtime="20201029 12:47:07.412"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.416" level="INFO">${RESULT} = [{'diff': 0.00011372200000000013}, {'diff': 0.00011369500000000046}, {'diff': 0.0001134160000000016}, {'diff': 0.00011343000000000117}, {'diff': 0.00011422199999999716}, {'diff': 0.0001135270000000021...</msg>
<status status="PASS" starttime="20201029 12:47:07.413" endtime="20201029 12:47:07.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.420" level="INFO">${ACCURACY} = {'diff': [0.00011372200000000013, 0.00011369500000000046, 0.0001134160000000016, 0.00011343000000000117, 0.00011422199999999716, 0.00011352700000000215, 0.00011363899999999871, 0.0001134030000000015, ...</msg>
<status status="PASS" starttime="20201029 12:47:07.417" endtime="20201029 12:47:07.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.425" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.424" endtime="20201029 12:47:07.425"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.427" level="INFO">VALUE: [0.00011372200000000013, 0.00011369500000000046, 0.0001134160000000016, 0.00011343000000000117, 0.00011422199999999716, 0.00011352700000000215, 0.00011363899999999871, 0.0001134030000000015, 0.00011422200000000063, 0.00011422200000000063, 0.00011377799999999841, 0.00011370900000000003, 0.00011337500000000236, 0.00011380499999999807, 0.00011381900000000111, 0.0001137359999999997, 0.00011338899999999846, 0.00011369500000000046, 0.0001138749999999994, 0.000113597, 0.00011404199999999823, 0.00011418099999999792, 0.00011340199999999856, 0.0001140550000000018, 0.00011397200000000038, 0.00011422200000000063, 0.00011383300000000068, 0.00011369500000000046, 0.00011420800000000106, 0.00011398599999999995, 0.00011430600000000152, 0.00011418100000000139, 0.00011365199999999881, 0.00011361099999999957, 0.000114290999999999, 0.00011333300000000018, 0.00011375000000000274, 0.00011422200000000063, 0.00011402800000000213, 0.00011348600000000292, 0.00011398700000000289, 0.00011333300000000018, 0.00011433299999999771, 0.00011422200000000063, 0.0001140420000000017, 0.0001140420000000017, 0.0001142360000000002, 0.00011376399999999884, 0.0001138749999999994, 0.00011433299999999771]</msg>
<status status="PASS" starttime="20201029 12:47:07.426" endtime="20201029 12:47:07.429"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.421" endtime="20201029 12:47:07.429"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.433" endtime="20201029 12:47:07.452"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.431" endtime="20201029 12:47:07.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.430" endtime="20201029 12:47:07.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.068" endtime="20201029 12:47:07.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.068" endtime="20201029 12:47:07.453"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.462" endtime="20201029 12:47:07.483"></status>
</kw>
<msg timestamp="20201029 12:47:07.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.460" endtime="20201029 12:47:07.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:07.484" endtime="20201029 12:47:07.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.487" endtime="20201029 12:47:07.488"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.458" endtime="20201029 12:47:07.489"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.456" endtime="20201029 12:47:07.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.496" endtime="20201029 12:47:07.781"></status>
</kw>
<msg timestamp="20201029 12:47:07.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020218833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.494" endtime="20201029 12:47:07.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020218833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020334167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:07.785" endtime="20201029 12:47:07.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:07.793" endtime="20201029 12:47:07.795"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.492" endtime="20201029 12:47:07.796"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.490" endtime="20201029 12:47:07.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:07.800" level="INFO">${RESULT} = [{'diff': 0.00011533400000000166}, {'diff': 0.00011511199999999708}, {'diff': 0.00011469400000000199}, {'diff': 0.00011440199999999956}, {'diff': 0.00011470799999999809}, {'diff': 0.000114361000000000...</msg>
<status status="PASS" starttime="20201029 12:47:07.797" endtime="20201029 12:47:07.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201029 12:47:07.805" level="INFO">${ACCURACY} = {'diff': [0.00011533400000000166, 0.00011511199999999708, 0.00011469400000000199, 0.00011440199999999956, 0.00011470799999999809, 0.00011436100000000032, 0.00011477799999999941, 0.00011466699999999885...</msg>
<status status="PASS" starttime="20201029 12:47:07.801" endtime="20201029 12:47:07.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.809" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201029 12:47:07.808" endtime="20201029 12:47:07.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.812" level="INFO">VALUE: [0.00011533400000000166, 0.00011511199999999708, 0.00011469400000000199, 0.00011440199999999956, 0.00011470799999999809, 0.00011436100000000032, 0.00011477799999999941, 0.00011466699999999885, 0.00011469500000000146, 0.00011477799999999941, 0.00011475000000000027, 0.00011451399999999959, 0.00011481900000000211, 0.00011438899999999946, 0.0001146109999999971, 0.00011512499999999717, 0.0001150970000000015, 0.0001147499999999968, 0.00011506999999999837, 0.00011457000000000134, 0.00011458400000000091, 0.00011530499999999957, 0.00011477699999999993, 0.00011488899999999996, 0.00011463899999999971, 0.00011529199999999948, 0.00011484699999999778, 0.0001144169999999986, 0.00011463899999999971, 0.00011516699999999935, 0.00011519399999999902, 0.00011472200000000113, 0.0001144299999999987, 0.00011479199999999898, 0.00011447199999999741, 0.00011486100000000082, 0.00011455499999999882, 0.00011454199999999873, 0.00011470900000000103, 0.00011436100000000032, 0.00011505499999999932, 0.00011497200000000138, 0.00011483299999999821, 0.00011447200000000088, 0.00011475000000000027, 0.0001147230000000006, 0.00011466699999999885, 0.00011507000000000184, 0.00011445799999999784, 0.00011483299999999821]</msg>
<status status="PASS" starttime="20201029 12:47:07.810" endtime="20201029 12:47:07.812"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.805" endtime="20201029 12:47:07.813"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:07.816" endtime="20201029 12:47:07.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.815" endtime="20201029 12:47:07.836"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.814" endtime="20201029 12:47:07.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.454" endtime="20201029 12:47:07.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.454" endtime="20201029 12:47:07.837"></status>
</kw>
<status status="PASS" starttime="20201029 12:46:28.812" endtime="20201029 12:47:07.837"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:46:25.720" endtime="20201029 12:47:07.838" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:45:36.575" endtime="20201029 12:47:07.841"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/opt/jenkins/workspace/RIOT-HIL_PR-90/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201029 12:47:07.894" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201029 12:47:07.903" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201029 12:47:09.001" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201029 12:47:07.893" endtime="20201029 12:47:09.002"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201029 12:47:12.005" level="INFO">Slept 3 seconds</msg>
<status status="PASS" starttime="20201029 12:47:09.003" endtime="20201029 12:47:12.006"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.892" endtime="20201029 12:47:12.007"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:12.011" endtime="20201029 12:47:12.279"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.008" endtime="20201029 12:47:12.280"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:12.292" endtime="20201029 12:47:15.316"></status>
</kw>
<msg timestamp="20201029 12:47:15.317" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:12.290" endtime="20201029 12:47:15.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.319" endtime="20201029 12:47:15.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:15.328" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:15.324" endtime="20201029 12:47:15.329"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.288" endtime="20201029 12:47:15.330"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:12.286" endtime="20201029 12:47:15.332"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.285" endtime="20201029 12:47:15.332"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:15.340" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:15.338" endtime="20201029 12:47:15.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.334" endtime="20201029 12:47:15.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.284" endtime="20201029 12:47:15.341"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.283" endtime="20201029 12:47:15.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.343" endtime="20201029 12:47:15.346"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.282" endtime="20201029 12:47:15.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.349" endtime="20201029 12:47:15.352"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:12.281" endtime="20201029 12:47:15.353"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:07.890" endtime="20201029 12:47:15.354"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:15.366" endtime="20201029 12:47:15.386"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.363" endtime="20201029 12:47:15.387"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:15.399" endtime="20201029 12:47:18.421"></status>
</kw>
<msg timestamp="20201029 12:47:18.422" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:15.398" endtime="20201029 12:47:18.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.427" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.424" endtime="20201029 12:47:18.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:18.435" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:18.429" endtime="20201029 12:47:18.436"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.395" endtime="20201029 12:47:18.437"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:15.393" endtime="20201029 12:47:18.438"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.392" endtime="20201029 12:47:18.439"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:18.446" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:18.445" endtime="20201029 12:47:18.447"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.441" endtime="20201029 12:47:18.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.391" endtime="20201029 12:47:18.448"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.390" endtime="20201029 12:47:18.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.450" endtime="20201029 12:47:18.453"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.389" endtime="20201029 12:47:18.454"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.387" endtime="20201029 12:47:18.455"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:15.360" endtime="20201029 12:47:18.455"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:18.472" endtime="20201029 12:47:24.597"></status>
</kw>
<msg timestamp="20201029 12:47:24.598" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:18.469" endtime="20201029 12:47:24.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.603" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:24.600" endtime="20201029 12:47:24.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.605" endtime="20201029 12:47:24.608"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.464" endtime="20201029 12:47:24.609"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.460" endtime="20201029 12:47:24.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.615" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201029 12:47:24.612" endtime="20201029 12:47:24.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.625" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:24.623" endtime="20201029 12:47:24.626"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.630" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:24.628" endtime="20201029 12:47:24.631"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.617" endtime="20201029 12:47:24.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.642" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:24.639" endtime="20201029 12:47:24.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.644" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:24.643" endtime="20201029 12:47:24.644"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.634" endtime="20201029 12:47:24.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.649" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:24.648" endtime="20201029 12:47:24.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.651" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201029 12:47:24.650" endtime="20201029 12:47:24.651"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.646" endtime="20201029 12:47:24.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.658" endtime="20201029 12:47:24.961"></status>
</kw>
<msg timestamp="20201029 12:47:24.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096854375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.657" endtime="20201029 12:47:24.965"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.972" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096854375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196881542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:24.965" endtime="20201029 12:47:24.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:24.973" endtime="20201029 12:47:24.975"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.654" endtime="20201029 12:47:24.976"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.652" endtime="20201029 12:47:24.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:24.980" level="INFO">${FILTERED} = [{'diff': 0.10002716699999992}, {'diff': 0.10000899999999957}, {'diff': 0.10001187499999986}, {'diff': 0.1000108329999998}, {'diff': 0.10001087500000017}, {'diff': 0.1000108609999999}, {'diff': 0.1000...</msg>
<status status="PASS" starttime="20201029 12:47:24.977" endtime="20201029 12:47:24.980"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:24.984" level="INFO">${RESULT} = {'diff': [0.10002716699999992, 0.10000899999999957, 0.10001187499999986, 0.1000108329999998, 0.10001087500000017, 0.1000108609999999, 0.10001086100000034, 0.1000108609999999, 0.10001087500000017, 0.10...</msg>
<status status="PASS" starttime="20201029 12:47:24.981" endtime="20201029 12:47:24.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.988" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:24.987" endtime="20201029 12:47:24.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:24.990" level="INFO">VALUE: [0.10002716699999992, 0.10000899999999957, 0.10001187499999986, 0.1000108329999998, 0.10001087500000017, 0.1000108609999999, 0.10001086100000034, 0.1000108609999999, 0.10001087500000017, 0.10001086099999945, 0.10001087499999972, 0.10001086099999945, 0.10001088799999991, 0.10001084699999918, 0.10001087499999972, 0.10001086099999945, 0.10001088899999999, 0.10001084699999918, 0.10001090300000026, 0.10001086100000034, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034, 0.10001087499999972, 0.10001087500000061, 0.10001086100000034, 0.10001088899999999, 0.10001086100000034, 0.1000109440000001, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001136099999997, 0.10001090200000018, 0.10001086099999945, 0.10001090300000026, 0.10001086100000034, 0.10001087500000061, 0.10001087499999972, 0.10001094500000018, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:47:24.989" endtime="20201029 12:47:24.990"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.984" endtime="20201029 12:47:24.991"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:18.457" endtime="20201029 12:47:24.992"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:15.355" endtime="20201029 12:47:24.992" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:24.999" endtime="20201029 12:47:25.018"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.997" endtime="20201029 12:47:25.019"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:25.032" endtime="20201029 12:47:28.054"></status>
</kw>
<msg timestamp="20201029 12:47:28.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:25.031" endtime="20201029 12:47:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.060" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.057" endtime="20201029 12:47:28.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:28.066" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:28.063" endtime="20201029 12:47:28.067"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:25.028" endtime="20201029 12:47:28.068"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:25.026" endtime="20201029 12:47:28.070"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.024" endtime="20201029 12:47:28.070"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:28.078" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:28.076" endtime="20201029 12:47:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.072" endtime="20201029 12:47:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.023" endtime="20201029 12:47:28.079"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.022" endtime="20201029 12:47:28.080"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.081" endtime="20201029 12:47:28.084"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.021" endtime="20201029 12:47:28.085"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:25.019" endtime="20201029 12:47:28.086"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:24.996" endtime="20201029 12:47:28.087"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:28.101" endtime="20201029 12:47:34.224"></status>
</kw>
<msg timestamp="20201029 12:47:34.225" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:28.099" endtime="20201029 12:47:34.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.230" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.227" endtime="20201029 12:47:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.233" endtime="20201029 12:47:34.236"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.095" endtime="20201029 12:47:34.237"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.091" endtime="20201029 12:47:34.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.243" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201029 12:47:34.239" endtime="20201029 12:47:34.244"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.252" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:34.250" endtime="20201029 12:47:34.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.257" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:34.255" endtime="20201029 12:47:34.257"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.245" endtime="20201029 12:47:34.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.266" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:34.264" endtime="20201029 12:47:34.267"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.273" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:34.269" endtime="20201029 12:47:34.274"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.260" endtime="20201029 12:47:34.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.284" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:34.282" endtime="20201029 12:47:34.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.288" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201029 12:47:34.286" endtime="20201029 12:47:34.289"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.277" endtime="20201029 12:47:34.290"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.304" endtime="20201029 12:47:34.604"></status>
</kw>
<msg timestamp="20201029 12:47:34.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.091750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.191831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.301" endtime="20201029 12:47:34.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.091750708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.191831875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:34.608" endtime="20201029 12:47:34.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.615" endtime="20201029 12:47:34.617"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.295" endtime="20201029 12:47:34.618"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.291" endtime="20201029 12:47:34.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:34.622" level="INFO">${FILTERED} = [{'diff': 0.10008116699999992}, {'diff': 0.0999593609999998}, {'diff': 0.10000991700000039}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff':...</msg>
<status status="PASS" starttime="20201029 12:47:34.619" endtime="20201029 12:47:34.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:34.626" level="INFO">${RESULT} = {'diff': [0.10008116699999992, 0.0999593609999998, 0.10000991700000039, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.41000000353...</msg>
<status status="PASS" starttime="20201029 12:47:34.623" endtime="20201029 12:47:34.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.631" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:34.629" endtime="20201029 12:47:34.631"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:34.633" level="INFO">VALUE: [0.10008116699999992, 0.0999593609999998, 0.10000991700000039, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001134700000058, 0.10001087500000061, 0.10001091600000045, 5.409999994654413e-07, 0.10001136099999997, 0.10001086100000034, 0.10001088799999991, 0.10001084700000007, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001087500000061, 0.10001084700000007, 0.10001087499999972, 0.10001086099999945, 0.10001088899999999, 0.10001086100000034, 0.10001087499999972, 0.10001086100000034, 0.10001088899999999, 0.10001087499999972, 0.10001093099999991, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:47:34.632" endtime="20201029 12:47:34.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.627" endtime="20201029 12:47:34.634"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:28.088" endtime="20201029 12:47:34.635"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:24.994" endtime="20201029 12:47:34.635" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:34.642" endtime="20201029 12:47:34.661"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.640" endtime="20201029 12:47:34.662"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:34.674" endtime="20201029 12:47:37.696"></status>
</kw>
<msg timestamp="20201029 12:47:37.697" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:34.673" endtime="20201029 12:47:37.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.702" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.699" endtime="20201029 12:47:37.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:37.708" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:37.704" endtime="20201029 12:47:37.709"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.670" endtime="20201029 12:47:37.710"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:34.668" endtime="20201029 12:47:37.711"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.667" endtime="20201029 12:47:37.712"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:37.719" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:37.718" endtime="20201029 12:47:37.720"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.714" endtime="20201029 12:47:37.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.666" endtime="20201029 12:47:37.721"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.665" endtime="20201029 12:47:37.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.723" endtime="20201029 12:47:37.726"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.664" endtime="20201029 12:47:37.727"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.662" endtime="20201029 12:47:37.728"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:34.639" endtime="20201029 12:47:37.728"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:37.747" endtime="20201029 12:47:43.872"></status>
</kw>
<msg timestamp="20201029 12:47:43.873" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:37.742" endtime="20201029 12:47:43.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.878" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:43.875" endtime="20201029 12:47:43.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.880" endtime="20201029 12:47:43.884"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.737" endtime="20201029 12:47:43.885"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.733" endtime="20201029 12:47:43.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:43.892" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201029 12:47:43.887" endtime="20201029 12:47:43.892"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.900" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:43.898" endtime="20201029 12:47:43.901"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.904" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:43.902" endtime="20201029 12:47:43.905"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.893" endtime="20201029 12:47:43.906"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.914" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:43.912" endtime="20201029 12:47:43.915"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.918" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:43.916" endtime="20201029 12:47:43.919"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.907" endtime="20201029 12:47:43.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.928" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:43.926" endtime="20201029 12:47:43.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:43.932" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201029 12:47:43.930" endtime="20201029 12:47:43.933"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.921" endtime="20201029 12:47:43.934"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:43.947" endtime="20201029 12:47:44.250"></status>
</kw>
<msg timestamp="20201029 12:47:44.253" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096864778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:43.944" endtime="20201029 12:47:44.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.261" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.096864778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.196995625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:47:44.254" endtime="20201029 12:47:44.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.262" endtime="20201029 12:47:44.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.939" endtime="20201029 12:47:44.264"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:43.935" endtime="20201029 12:47:44.265"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:44.268" level="INFO">${FILTERED} = [{'diff': 0.10013084699999997}, {'diff': 0.10004156900000005}, {'diff': 0.09988222199999974}, {'diff': 0.10001087500000017}, {'diff': 0.10001087500000017}, {'diff': 0.10001088899999999}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201029 12:47:44.265" endtime="20201029 12:47:44.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:44.275" level="INFO">${RESULT} = {'diff': [0.10013084699999997, 0.10004156900000005, 0.09988222199999974, 0.10001087500000017, 0.10001087500000017, 0.10001088899999999, 0.1000108609999999, 0.10001088899999999, 0.10001086100000034, 0....</msg>
<status status="PASS" starttime="20201029 12:47:44.269" endtime="20201029 12:47:44.276"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.280" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:44.279" endtime="20201029 12:47:44.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:44.282" level="INFO">VALUE: [0.10013084699999997, 0.10004156900000005, 0.09988222199999974, 0.10001087500000017, 0.10001087500000017, 0.10001088899999999, 0.1000108609999999, 0.10001088899999999, 0.10001086100000034, 0.10001088899999955, 0.10001094500000018, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.419999995481817e-07, 0.1000114019999998, 0.1000108329999998, 0.10001086100000034, 0.10001086100000034, 0.10001084700000007, 0.10001087499999972, 0.10001084700000007, 0.10001087499999972, 0.10001084700000007, 0.10001087500000061, 0.10001091700000053, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201029 12:47:44.281" endtime="20201029 12:47:44.283"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.276" endtime="20201029 12:47:44.284"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:37.730" endtime="20201029 12:47:44.284"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:34.637" endtime="20201029 12:47:44.285" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:44.291" endtime="20201029 12:47:44.311"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.290" endtime="20201029 12:47:44.311"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:44.324" endtime="20201029 12:47:47.344"></status>
</kw>
<msg timestamp="20201029 12:47:47.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:44.322" endtime="20201029 12:47:47.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.350" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.348" endtime="20201029 12:47:47.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:47.357" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:47.353" endtime="20201029 12:47:47.357"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:44.320" endtime="20201029 12:47:47.359"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:44.317" endtime="20201029 12:47:47.360"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.316" endtime="20201029 12:47:47.360"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:47.370" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:47.368" endtime="20201029 12:47:47.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.362" endtime="20201029 12:47:47.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.315" endtime="20201029 12:47:47.371"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.315" endtime="20201029 12:47:47.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.373" endtime="20201029 12:47:47.376"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.314" endtime="20201029 12:47:47.377"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.312" endtime="20201029 12:47:47.378"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:44.288" endtime="20201029 12:47:47.379"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:47.396" endtime="20201029 12:47:53.521"></status>
</kw>
<msg timestamp="20201029 12:47:53.522" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:47.392" endtime="20201029 12:47:53.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.527" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.524" endtime="20201029 12:47:53.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.530" endtime="20201029 12:47:53.533"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.387" endtime="20201029 12:47:53.534"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.383" endtime="20201029 12:47:53.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.541" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201029 12:47:53.537" endtime="20201029 12:47:53.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.549" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:53.547" endtime="20201029 12:47:53.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.554" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:47:53.552" endtime="20201029 12:47:53.554"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.543" endtime="20201029 12:47:53.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.563" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:47:53.561" endtime="20201029 12:47:53.564"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.565" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:47:53.564" endtime="20201029 12:47:53.566"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.556" endtime="20201029 12:47:53.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.570" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:47:53.569" endtime="20201029 12:47:53.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.572" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201029 12:47:53.571" endtime="20201029 12:47:53.572"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.567" endtime="20201029 12:47:53.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.579" endtime="20201029 12:47:53.878"></status>
</kw>
<msg timestamp="20201029 12:47:53.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.0956145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195839556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:53.577" endtime="20201029 12:47:53.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.0956145, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195839556, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201029 12:47:53.883" endtime="20201029 12:47:53.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.891" endtime="20201029 12:47:53.892"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.575" endtime="20201029 12:47:53.893"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.573" endtime="20201029 12:47:53.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:47:53.897" level="INFO">${FILTERED} = [{'diff': 0.1002250560000002}, {'diff': 0.10004476400000017}, {'diff': 0.09978794399999957}, {'diff': 0.10001086100000034}, {'diff': 0.1000108609999999}, {'diff': 0.10001094500000018}, {'diff': 5.4199...</msg>
<status status="PASS" starttime="20201029 12:47:53.894" endtime="20201029 12:47:53.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:47:53.901" level="INFO">${RESULT} = {'diff': [0.1002250560000002, 0.10004476400000017, 0.09978794399999957, 0.10001086100000034, 0.1000108609999999, 0.10001094500000018, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-0...</msg>
<status status="PASS" starttime="20201029 12:47:53.898" endtime="20201029 12:47:53.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.905" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:47:53.904" endtime="20201029 12:47:53.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:47:53.907" level="INFO">VALUE: [0.1002250560000002, 0.10004476400000017, 0.09978794399999957, 0.10001086100000034, 0.1000108609999999, 0.10001094500000018, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 0.10001136099999997, 0.10001087499999972, 0.10001084700000007, 0.10001088899999999, 0.10001087499999972, 0.10001084700000007, 0.10001088799999991, 0.10001084700000007, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001086100000034, 0.10001086100000034, 0.10001087499999972, 0.10001090300000026, 0.10001084700000007, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001084700000007, 0.10001087500000061, 0.10001088899999999, 0.10001087499999972, 0.10001087499999972, 0.10001087500000061, 0.10001088899999999]</msg>
<status status="PASS" starttime="20201029 12:47:53.906" endtime="20201029 12:47:53.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.902" endtime="20201029 12:47:53.908"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:47.380" endtime="20201029 12:47:53.909"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:44.286" endtime="20201029 12:47:53.909" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:47:53.916" endtime="20201029 12:47:53.935"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.914" endtime="20201029 12:47:53.936"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:53.949" endtime="20201029 12:47:56.970"></status>
</kw>
<msg timestamp="20201029 12:47:56.971" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:53.948" endtime="20201029 12:47:56.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.976" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:56.973" endtime="20201029 12:47:56.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:47:56.982" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:47:56.978" endtime="20201029 12:47:56.983"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:53.945" endtime="20201029 12:47:56.984"></status>
</kw>
<status status="FAIL" starttime="20201029 12:47:53.942" endtime="20201029 12:47:56.985"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.941" endtime="20201029 12:47:56.986"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:47:56.993" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:47:56.992" endtime="20201029 12:47:56.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:56.987" endtime="20201029 12:47:56.994"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.940" endtime="20201029 12:47:56.995"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.939" endtime="20201029 12:47:56.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:56.997" endtime="20201029 12:47:57.000"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.938" endtime="20201029 12:47:57.001"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.936" endtime="20201029 12:47:57.002"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:53.913" endtime="20201029 12:47:57.002"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:47:57.019" endtime="20201029 12:48:03.144"></status>
</kw>
<msg timestamp="20201029 12:48:03.145" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:47:57.016" endtime="20201029 12:48:03.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.150" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.148" endtime="20201029 12:48:03.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.153" endtime="20201029 12:48:03.156"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.010" endtime="20201029 12:48:03.157"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.006" endtime="20201029 12:48:03.158"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.164" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201029 12:48:03.160" endtime="20201029 12:48:03.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.172" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:03.170" endtime="20201029 12:48:03.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.176" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:03.174" endtime="20201029 12:48:03.177"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.165" endtime="20201029 12:48:03.178"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.186" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:03.184" endtime="20201029 12:48:03.187"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.190" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:03.188" endtime="20201029 12:48:03.191"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.179" endtime="20201029 12:48:03.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.200" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:03.198" endtime="20201029 12:48:03.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.204" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201029 12:48:03.202" endtime="20201029 12:48:03.205"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.193" endtime="20201029 12:48:03.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.222" endtime="20201029 12:48:03.526"></status>
</kw>
<msg timestamp="20201029 12:48:03.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094500444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.194839347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.218" endtime="20201029 12:48:03.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094500444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.194839347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:03.530" endtime="20201029 12:48:03.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.537" endtime="20201029 12:48:03.539"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.213" endtime="20201029 12:48:03.540"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.207" endtime="20201029 12:48:03.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:03.544" level="INFO">${FILTERED} = [{'diff': 0.10033890299999992}, {'diff': 0.10004972200000006}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'dif...</msg>
<status status="PASS" starttime="20201029 12:48:03.541" endtime="20201029 12:48:03.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:03.548" level="INFO">${RESULT} = {'diff': [0.10033890299999992, 0.10004972200000006, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.41999999...</msg>
<status status="PASS" starttime="20201029 12:48:03.545" endtime="20201029 12:48:03.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.552" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:03.551" endtime="20201029 12:48:03.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:03.554" level="INFO">VALUE: [0.10033890299999992, 0.10004972200000006, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001136099999997, 0.10001086099999945, 0.10001086099999945, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084700000007, 0.10001088899999999, 0.10001084800000015, 0.10001095900000045, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 0.10001136200000005, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001087499999972, 0.10001086099999945, 0.10001087499999972, 0.10001087499999972, 0.10001088899999999, 0.10001092999999983, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201029 12:48:03.553" endtime="20201029 12:48:03.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.548" endtime="20201029 12:48:03.555"></status>
</kw>
<status status="PASS" starttime="20201029 12:47:57.004" endtime="20201029 12:48:03.556"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:47:53.911" endtime="20201029 12:48:03.556" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201029 12:48:03.563" endtime="20201029 12:48:03.583"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.561" endtime="20201029 12:48:03.584"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:03.596" endtime="20201029 12:48:06.618"></status>
</kw>
<msg timestamp="20201029 12:48:06.619" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:03.595" endtime="20201029 12:48:06.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.07', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.621" endtime="20201029 12:48:06.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201029 12:48:06.630" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201029 12:48:06.626" endtime="20201029 12:48:06.631"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:03.592" endtime="20201029 12:48:06.632"></status>
</kw>
<status status="FAIL" starttime="20201029 12:48:03.590" endtime="20201029 12:48:06.633"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.589" endtime="20201029 12:48:06.634"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201029 12:48:06.641" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201029 12:48:06.640" endtime="20201029 12:48:06.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.636" endtime="20201029 12:48:06.642"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.588" endtime="20201029 12:48:06.643"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.587" endtime="20201029 12:48:06.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.645" endtime="20201029 12:48:06.648"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.586" endtime="20201029 12:48:06.649"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.584" endtime="20201029 12:48:06.650"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:03.560" endtime="20201029 12:48:06.650"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:06.667" endtime="20201029 12:48:12.792"></status>
</kw>
<msg timestamp="20201029 12:48:12.793" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:06.664" endtime="20201029 12:48:12.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.798" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201029 12:48:12.795" endtime="20201029 12:48:12.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.800" endtime="20201029 12:48:12.804"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.659" endtime="20201029 12:48:12.805"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.655" endtime="20201029 12:48:12.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:12.811" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201029 12:48:12.807" endtime="20201029 12:48:12.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.822" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:12.818" endtime="20201029 12:48:12.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.826" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201029 12:48:12.824" endtime="20201029 12:48:12.827"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.813" endtime="20201029 12:48:12.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.836" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201029 12:48:12.834" endtime="20201029 12:48:12.837"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.840" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201029 12:48:12.838" endtime="20201029 12:48:12.841"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.829" endtime="20201029 12:48:12.842"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.850" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201029 12:48:12.848" endtime="20201029 12:48:12.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:12.854" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201029 12:48:12.852" endtime="20201029 12:48:12.855"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.843" endtime="20201029 12:48:12.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:12.869" endtime="20201029 12:48:13.170"></status>
</kw>
<msg timestamp="20201029 12:48:13.173" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094643139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195127125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:12.866" endtime="20201029 12:48:13.173"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.094643139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.195127125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201029 12:48:13.174" endtime="20201029 12:48:13.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201029 12:48:13.181" endtime="20201029 12:48:13.183"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.860" endtime="20201029 12:48:13.184"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:12.857" endtime="20201029 12:48:13.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201029 12:48:13.188" level="INFO">${FILTERED} = [{'diff': 0.10048398599999997}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.409999999095305e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'d...</msg>
<status status="PASS" starttime="20201029 12:48:13.185" endtime="20201029 12:48:13.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201029 12:48:13.192" level="INFO">${RESULT} = {'diff': [0.10048398599999997, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000...</msg>
<status status="PASS" starttime="20201029 12:48:13.189" endtime="20201029 12:48:13.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.196" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201029 12:48:13.195" endtime="20201029 12:48:13.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201029 12:48:13.199" level="INFO">VALUE: [0.10048398599999997, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 0.1000113469999997, 0.10001091699999964, 0.10001136200000005, 0.10001084700000007, 0.10001087500000061, 0.10001084700000007, 0.10001086099999945, 0.10001086199999953, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084800000015, 0.10001086100000034, 0.10001086100000034, 0.10001088899999999, 0.10001084800000015, 0.10001086099999945, 0.10001088899999999, 0.10001084700000007, 0.10001093099999991, 5.420000004363601e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 0.10001137500000024, 0.10001086100000034, 0.10001087500000061, 0.10001087500000061, 0.10001087500000061, 0.10001086100000034, 0.10001087499999972, 0.1000109440000001, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.419999995481817e-07, 0.10001136099999997, 0.10001087500000061]</msg>
<status status="PASS" starttime="20201029 12:48:13.197" endtime="20201029 12:48:13.199"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:13.193" endtime="20201029 12:48:13.200"></status>
</kw>
<status status="PASS" starttime="20201029 12:48:06.652" endtime="20201029 12:48:13.200"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201029 12:48:03.558" endtime="20201029 12:48:13.201" critical="yes"></status>
</test>
<status status="PASS" starttime="20201029 12:47:07.850" endtime="20201029 12:48:13.208"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201029 12:44:03.843" endtime="20201029 12:48:13.241"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
